

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Aug 15 14:52:58 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           ; Version 2.10
    76                           ; Generated 31/07/2019 GMT
    77                           ; 
    78                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4550 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataBANK1
   111  00488C                     __pidataBANK1:
   112                           	opt callstack 0
   113                           
   114                           ;initializer for _pausa
   115  00488C  01                 	db	1
   116                           
   117                           	psect	smallconst
   118  000800                     __psmallconst:
   119                           	opt callstack 0
   120  000800  00                 	db	0
   121  000801  0000               	dw	0
   122  000803  4B00               	dw	19200
   123  000805                     __end_of_toint:
   124                           	opt callstack 0
   125  0000                     _T1CON	set	4045
   126  0000                     _TRISDbits	set	3989
   127  0000                     _INTCON2bits	set	4081
   128  0000                     _INTCONbits	set	4082
   129  0000                     _ADRESL	set	4035
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADCON0bits	set	4034
   132  0000                     _ADCON2	set	4032
   133  0000                     _ADCON1	set	4033
   134  0000                     _TXREG	set	4013
   135  0000                     _RCREG	set	4014
   136  0000                     _RCSTAbits	set	4011
   137  0000                     _TXSTAbits	set	4012
   138  0000                     _SPBRG	set	4015
   139  0000                     _PORTBbits	set	3969
   140  0000                     _TMR1L	set	4046
   141  0000                     _TMR1H	set	4047
   142  0000                     _PR2	set	4043
   143  0000                     _CCP2CON	set	4026
   144  0000                     _CCPR2L	set	4027
   145  0000                     _CCP1CON	set	4029
   146  0000                     _CCPR1L	set	4030
   147  0000                     _TRISB0	set	31896
   148  0000                     _TRISB7	set	31903
   149  0000                     _TRISB6	set	31902
   150  0000                     _TRISB5	set	31901
   151  0000                     _TRISB4	set	31900
   152  0000                     _TRISB3	set	31899
   153  0000                     _TRISB2	set	31898
   154  0000                     _TRISB1	set	31897
   155  0000                     _TRISD3	set	31915
   156  0000                     _LATB7	set	31831
   157  0000                     _LATB6	set	31830
   158  0000                     _LATB5	set	31829
   159  0000                     _LATB4	set	31828
   160  0000                     _LATD2	set	31842
   161  0000                     _INT0IF	set	32657
   162  0000                     _RCIF	set	31989
   163  0000                     _TRISC7	set	31911
   164  0000                     _TRISC6	set	31910
   165  0000                     _TMR1IF	set	31984
   166  0000                     _TMR1ON	set	32360
   167  0000                     _LATD3	set	31843
   168  0000                     _TMR2ON	set	32338
   169  0000                     _CCP2M2	set	32210
   170  0000                     _CCP2M3	set	32211
   171  0000                     _TRISC1	set	31905
   172  0000                     _CCP1M2	set	32234
   173  0000                     _CCP1M3	set	32235
   174  0000                     _TRISC2	set	31906
   175  0000                     _T2CKPS1	set	32337
   176  0000                     _T2CKPS0	set	32336
   177  000805                     STR_3:
   178  000805  0D                 	db	13
   179  000806  4C                 	db	76	;'L'
   180  000807  65                 	db	101	;'e'
   181  000808  63                 	db	99	;'c'
   182  000809  74                 	db	116	;'t'
   183  00080A  75                 	db	117	;'u'
   184  00080B  72                 	db	114	;'r'
   185  00080C  61                 	db	97	;'a'
   186  00080D  20                 	db	32
   187  00080E  64                 	db	100	;'d'
   188  00080F  65                 	db	101	;'e'
   189  000810  20                 	db	32
   190  000811  73                 	db	115	;'s'
   191  000812  65                 	db	101	;'e'
   192  000813  6E                 	db	110	;'n'
   193  000814  73                 	db	115	;'s'
   194  000815  6F                 	db	111	;'o'
   195  000816  72                 	db	114	;'r'
   196  000817  20                 	db	32
   197  000818  4F                 	db	79	;'O'
   198  000819  70                 	db	112	;'p'
   199  00081A  74                 	db	116	;'t'
   200  00081B  69                 	db	105	;'i'
   201  00081C  63                 	db	99	;'c'
   202  00081D  6F                 	db	111	;'o'
   203  00081E  20                 	db	32
   204  00081F  3D                 	db	61	;'='
   205  000820  20                 	db	32
   206  000821  25                 	db	37
   207  000822  64                 	db	100	;'d'
   208  000823  0D                 	db	13
   209  000824  0A                 	db	10
   210  000825  0A                 	db	10
   211  000826  00                 	db	0
   212  000827  0D                 	db	13
   213  000828  4D                 	db	77	;'M'
   214  000829  6F                 	db	111	;'o'
   215  00082A  76                 	db	118	;'v'
   216  00082B  69                 	db	105	;'i'
   217  00082C  6D                 	db	109	;'m'
   218  00082D  69                 	db	105	;'i'
   219  00082E  65                 	db	101	;'e'
   220  00082F  6E                 	db	110	;'n'
   221  000830  74                 	db	116	;'t'
   222  000831  6F                 	db	111	;'o'
   223  000832  73                 	db	115	;'s'
   224  000833  20                 	db	32
   225  000834  52                 	db	82	;'R'
   226  000835  65                 	db	101	;'e'
   227  000836  61                 	db	97	;'a'
   228  000837  6C                 	db	108	;'l'
   229  000838  69                 	db	105	;'i'
   230  000839  7A                 	db	122	;'z'
   231  00083A  61                 	db	97	;'a'
   232  00083B  64                 	db	100	;'d'
   233  00083C  6F                 	db	111	;'o'
   234  00083D  73                 	db	115	;'s'
   235  00083E  20                 	db	32
   236  00083F  3D                 	db	61	;'='
   237  000840  20                 	db	32
   238  000841  25                 	db	37
   239  000842  64                 	db	100	;'d'
   240  000843  0D                 	db	13
   241  000844  0A                 	db	10
   242  000845  0A                 	db	10
   243  000846  00                 	db	0
   244  000847                     STR_2:
   245  000847  0D                 	db	13
   246  000848  44                 	db	68	;'D'
   247  000849  65                 	db	101	;'e'
   248  00084A  73                 	db	115	;'s'
   249  00084B  74                 	db	116	;'t'
   250  00084C  69                 	db	105	;'i'
   251  00084D  6E                 	db	110	;'n'
   252  00084E  6F                 	db	111	;'o'
   253  00084F  20                 	db	32
   254  000850  6E                 	db	110	;'n'
   255  000851  6F                 	db	111	;'o'
   256  000852  20                 	db	32
   257  000853  64                 	db	100	;'d'
   258  000854  65                 	db	101	;'e'
   259  000855  74                 	db	116	;'t'
   260  000856  65                 	db	101	;'e'
   261  000857  63                 	db	99	;'c'
   262  000858  74                 	db	116	;'t'
   263  000859  61                 	db	97	;'a'
   264  00085A  64                 	db	100	;'d'
   265  00085B  6F                 	db	111	;'o'
   266  00085C  20                 	db	32
   267  00085D  0D                 	db	13
   268  00085E  0A                 	db	10
   269  00085F  00                 	db	0
   270  000860                     STR_1:
   271  000860  0D                 	db	13
   272  000861  53                 	db	83	;'S'
   273  000862  65                 	db	101	;'e'
   274  000863  20                 	db	32
   275  000864  6C                 	db	108	;'l'
   276  000865  6C                 	db	108	;'l'
   277  000866  65                 	db	101	;'e'
   278  000867  67                 	db	103	;'g'
   279  000868  6F                 	db	111	;'o'
   280  000869  20                 	db	32
   281  00086A  61                 	db	97	;'a'
   282  00086B  6C                 	db	108	;'l'
   283  00086C  20                 	db	32
   284  00086D  64                 	db	100	;'d'
   285  00086E  65                 	db	101	;'e'
   286  00086F  73                 	db	115	;'s'
   287  000870  74                 	db	116	;'t'
   288  000871  69                 	db	105	;'i'
   289  000872  6E                 	db	110	;'n'
   290  000873  6F                 	db	111	;'o'
   291  000874  20                 	db	32
   292  000875  0D                 	db	13
   293  000876  0A                 	db	10
   294  000877  00                 	db	0
   295  000878                     STR_5:
   296  000878  0D                 	db	13
   297  000879  49                 	db	73	;'I'
   298  00087A  7A                 	db	122	;'z'
   299  00087B  71                 	db	113	;'q'
   300  00087C  75                 	db	117	;'u'
   301  00087D  69                 	db	105	;'i'
   302  00087E  65                 	db	101	;'e'
   303  00087F  72                 	db	114	;'r'
   304  000880  64                 	db	100	;'d'
   305  000881  61                 	db	97	;'a'
   306  000882  3A                 	db	58	;':'
   307  000883  20                 	db	32
   308  000884  25                 	db	37
   309  000885  2E                 	db	46
   310  000886  32                 	db	50	;'2'
   311  000887  66                 	db	102	;'f'
   312  000888  0D                 	db	13
   313  000889  0A                 	db	10
   314  00088A  00                 	db	0
   315  00088B                     STR_4:
   316  00088B  0D                 	db	13
   317  00088C  45                 	db	69	;'E'
   318  00088D  6E                 	db	110	;'n'
   319  00088E  66                 	db	102	;'f'
   320  00088F  72                 	db	114	;'r'
   321  000890  65                 	db	101	;'e'
   322  000891  6E                 	db	110	;'n'
   323  000892  74                 	db	116	;'t'
   324  000893  65                 	db	101	;'e'
   325  000894  3A                 	db	58	;':'
   326  000895  20                 	db	32
   327  000896  25                 	db	37
   328  000897  2E                 	db	46
   329  000898  32                 	db	50	;'2'
   330  000899  66                 	db	102	;'f'
   331  00089A  0D                 	db	13
   332  00089B  0A                 	db	10
   333  00089C  00                 	db	0
   334  00089D                     STR_6:
   335  00089D  0D                 	db	13
   336  00089E  44                 	db	68	;'D'
   337  00089F  65                 	db	101	;'e'
   338  0008A0  72                 	db	114	;'r'
   339  0008A1  65                 	db	101	;'e'
   340  0008A2  63                 	db	99	;'c'
   341  0008A3  68                 	db	104	;'h'
   342  0008A4  61                 	db	97	;'a'
   343  0008A5  3A                 	db	58	;':'
   344  0008A6  20                 	db	32
   345  0008A7  25                 	db	37
   346  0008A8  2E                 	db	46
   347  0008A9  32                 	db	50	;'2'
   348  0008AA  66                 	db	102	;'f'
   349  0008AB  0D                 	db	13
   350  0008AC  0A                 	db	10
   351  0008AD  00                 	db	0
   352  0008AE  49                 	db	73	;'I'
   353  0008AF  7A                 	db	122	;'z'
   354  0008B0  71                 	db	113	;'q'
   355  0008B1  75                 	db	117	;'u'
   356  0008B2  69                 	db	105	;'i'
   357  0008B3  65                 	db	101	;'e'
   358  0008B4  72                 	db	114	;'r'
   359  0008B5  64                 	db	100	;'d'
   360  0008B6  61                 	db	97	;'a'
   361  0008B7  0A                 	db	10
   362  0008B8  00                 	db	0
   363  0008B9  45                 	db	69	;'E'
   364  0008BA  6E                 	db	110	;'n'
   365  0008BB  66                 	db	102	;'f'
   366  0008BC  72                 	db	114	;'r'
   367  0008BD  65                 	db	101	;'e'
   368  0008BE  6E                 	db	110	;'n'
   369  0008BF  74                 	db	116	;'t'
   370  0008C0  65                 	db	101	;'e'
   371  0008C1  0A                 	db	10
   372  0008C2  00                 	db	0
   373  0008C3  44                 	db	68	;'D'
   374  0008C4  65                 	db	101	;'e'
   375  0008C5  72                 	db	114	;'r'
   376  0008C6  65                 	db	101	;'e'
   377  0008C7  63                 	db	99	;'c'
   378  0008C8  68                 	db	104	;'h'
   379  0008C9  61                 	db	97	;'a'
   380  0008CA  0A                 	db	10
   381  0008CB  00                 	db	0
   382  0008CC  41                 	db	65	;'A'
   383  0008CD  6C                 	db	108	;'l'
   384  0008CE  74                 	db	116	;'t'
   385  0008CF  6F                 	db	111	;'o'
   386  0008D0  0A                 	db	10
   387  0008D1  00                 	db	0
   388  0008D2                     STR_12:
   389  0008D2  49                 	db	73	;'I'
   390  0008D3  4E                 	db	78	;'N'
   391  0008D4  46                 	db	70	;'F'
   392  0008D5  00                 	db	0
   393  0008D6                     STR_16:
   394  0008D6  4E                 	db	78	;'N'
   395  0008D7  41                 	db	65	;'A'
   396  0008D8  4E                 	db	78	;'N'
   397  0008D9  00                 	db	0
   398  0008DA                     STR_13:
   399  0008DA  69                 	db	105	;'i'
   400  0008DB  6E                 	db	110	;'n'
   401  0008DC  66                 	db	102	;'f'
   402  0008DD  00                 	db	0
   403  0008DE                     STR_17:
   404  0008DE  6E                 	db	110	;'n'
   405  0008DF  61                 	db	97	;'a'
   406  0008E0  6E                 	db	110	;'n'
   407  0008E1  00                 	db	0
   408  0008E2                     STR_20:
   409  0008E2  6C                 	db	108	;'l'
   410  0008E3  66                 	db	102	;'f'
   411  0008E4  00                 	db	0
   412  0000                     
   413                           ; #config settings
   414  0008E5  00                 	db	0	; dummy byte at the end
   415  0000                     
   416                           	psect	cinit
   417  0046BE                     __pcinit:
   418                           	opt callstack 0
   419  0046BE                     start_initialization:
   420                           	opt callstack 0
   421  0046BE                     __initialization:
   422                           	opt callstack 0
   423                           
   424                           ; Initialize objects allocated to BANK1 (1 bytes)
   425                           ; load TBLPTR registers with __pidataBANK1
   426  0046BE  0E8C               	movlw	low __pidataBANK1
   427  0046C0  6EF6               	movwf	tblptrl,c
   428  0046C2  0E48               	movlw	high __pidataBANK1
   429  0046C4  6EF7               	movwf	tblptrh,c
   430  0046C6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   431  0046C8  6EF8               	movwf	tblptru,c
   432  0046CA  0009               	tblrd		*+	;fetch initializer
   433  0046CC  CFF5 F1FD          	movff	tablat,__pdataBANK1
   434                           
   435                           ; Clear objects allocated to BANK2 (100 bytes)
   436  0046D0  EE02  F000         	lfsr	0,__pbssBANK2
   437  0046D4  0E64               	movlw	100
   438  0046D6                     clear_0:
   439  0046D6  6AEE               	clrf	postinc0,c
   440  0046D8  06E8               	decf	wreg,f,c
   441  0046DA  E1FD               	bnz	clear_0
   442                           
   443                           ; Clear objects allocated to BANK1 (251 bytes)
   444  0046DC  EE01  F000         	lfsr	0,__pbssBANK1
   445  0046E0  0EFB               	movlw	251
   446  0046E2                     clear_1:
   447  0046E2  6AEE               	clrf	postinc0,c
   448  0046E4  06E8               	decf	wreg,f,c
   449  0046E6  E1FD               	bnz	clear_1
   450                           
   451                           ; Clear objects allocated to COMRAM (5 bytes)
   452  0046E8  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   453  0046EA  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   454  0046EC  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   455  0046EE  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   456  0046F0  6A55               	clrf	__pbssCOMRAM& (0+255),c
   457  0046F2                     end_of_initialization:
   458                           	opt callstack 0
   459  0046F2                     __end_of__initialization:
   460                           	opt callstack 0
   461  0046F2  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   462  0046F4  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   463  0046F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   464  0046F8  6EF8               	movwf	tblptru,c
   465  0046FA  0100               	movlb	0
   466  0046FC  EFCA  F01F         	goto	_main	;jump to C main() function
   467                           
   468                           	psect	bssCOMRAM
   469  000055                     __pbssCOMRAM:
   470                           	opt callstack 0
   471  000055                     _flags:
   472                           	opt callstack 0
   473  000055                     	ds	2
   474  000057                     _mouse:
   475                           	opt callstack 0
   476  000057                     	ds	2
   477  000059                     _llegoDestino:
   478                           	opt callstack 0
   479  000059                     	ds	1
   480                           
   481                           	psect	bssBANK1
   482  000100                     __pbssBANK1:
   483                           	opt callstack 0
   484  000100                     roundf@F525:
   485                           	opt callstack 0
   486  000100                     	ds	4
   487  000104                     floorf@F524:
   488                           	opt callstack 0
   489  000104                     	ds	4
   490  000108                     ___fpclassifyf@F463:
   491                           	opt callstack 0
   492  000108                     	ds	4
   493  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   494                           	opt callstack 0
   495  00010C                     	ds	4
   496  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   497                           	opt callstack 0
   498  000110                     	ds	4
   499  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   500                           	opt callstack 0
   501  000114                     	ds	4
   502  000118                     _oldSensorEnfrente:
   503                           	opt callstack 0
   504  000118                     	ds	4
   505  00011C                     _oldSensorIzquierda:
   506                           	opt callstack 0
   507  00011C                     	ds	4
   508  000120                     _oldSensorDerecha:
   509                           	opt callstack 0
   510  000120                     	ds	4
   511  000124                     _sensorEnfrente:
   512                           	opt callstack 0
   513  000124                     	ds	4
   514  000128                     _sensorIzquierda:
   515                           	opt callstack 0
   516  000128                     	ds	4
   517  00012C                     _sensorDerecha:
   518                           	opt callstack 0
   519  00012C                     	ds	4
   520  000130                     _nout:
   521                           	opt callstack 0
   522  000130                     	ds	2
   523  000132                     _width:
   524                           	opt callstack 0
   525  000132                     	ds	2
   526  000134                     _prec:
   527                           	opt callstack 0
   528  000134                     	ds	2
   529  000136                     PID@difAnt:
   530                           	opt callstack 0
   531  000136                     	ds	2
   532  000138                     decidirDireccion@cambioOrientacionCarro:
   533                           	opt callstack 0
   534  000138                     	ds	1
   535  000139                     comportamientoBasico@caminoEncontrado:
   536                           	opt callstack 0
   537  000139                     	ds	1
   538  00013A                     comportamientoBasico@cruceDetectado:
   539                           	opt callstack 0
   540  00013A                     	ds	1
   541  00013B                     comportamientoBasico@mapear:
   542                           	opt callstack 0
   543  00013B                     	ds	1
   544  00013C                     comportamientoBasico@espejearCarroY:
   545                           	opt callstack 0
   546  00013C                     	ds	1
   547  00013D                     _dbuf:
   548                           	opt callstack 0
   549  00013D                     	ds	80
   550  00018D                     comportamientoBasico@movimientosRealizados:
   551                           	opt callstack 0
   552  00018D                     	ds	50
   553  0001BF                     _buffer:
   554                           	opt callstack 0
   555  0001BF                     	ds	50
   556  0001F1                     comportamientoBasico@caminosRecorrer:
   557                           	opt callstack 0
   558  0001F1                     	ds	3
   559  0001F4                     comportamientoBasico@caminoActual:
   560                           	opt callstack 0
   561  0001F4                     	ds	1
   562  0001F5                     comportamientoBasico@contCaminosRecorridos:
   563                           	opt callstack 0
   564  0001F5                     	ds	1
   565  0001F6                     comportamientoBasico@posicionInvCruce:
   566                           	opt callstack 0
   567  0001F6                     	ds	1
   568  0001F7                     comportamientoBasico@investigandoCruce:
   569                           	opt callstack 0
   570  0001F7                     	ds	1
   571  0001F8                     comportamientoBasico@numMovimientosTotales:
   572                           	opt callstack 0
   573  0001F8                     	ds	1
   574  0001F9                     comportamientoBasico@numMovimientos:
   575                           	opt callstack 0
   576  0001F9                     	ds	1
   577  0001FA                     comportamientoBasico@carroEspejeado:
   578                           	opt callstack 0
   579  0001FA                     	ds	1
   580                           
   581                           	psect	dataBANK1
   582  0001FD                     __pdataBANK1:
   583                           	opt callstack 0
   584  0001FD                     _pausa:
   585                           	opt callstack 0
   586  0001FD                     	ds	1
   587                           
   588                           	psect	bssBANK2
   589  000200                     __pbssBANK2:
   590                           	opt callstack 0
   591  000200                     comportamientoBasico@caminoFinal:
   592                           	opt callstack 0
   593  000200                     	ds	100
   594                           
   595                           	psect	cstackBANK2
   596  000264                     __pcstackBANK2:
   597                           	opt callstack 0
   598  000264                     	ds	2
   599  000266                     main@iniciado:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x2
   603  000266                     	ds	1
   604                           
   605                           	psect	cstackBANK1
   606  0001FB                     __pcstackBANK1:
   607                           	opt callstack 0
   608  0001FB                     probarSensores@lecturaSensorOptico:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x0
   612  0001FB                     	ds	2
   613                           
   614                           	psect	cstackBANK0
   615  000060                     __pcstackBANK0:
   616                           	opt callstack 0
   617  000060                     ??_floorf:
   618  000060                     ?___flmul:
   619                           	opt callstack 0
   620  000060                     ___flmul@b:
   621                           	opt callstack 0
   622                           
   623                           ; 4 bytes @ 0x0
   624  000060                     	ds	4
   625  000064                     ___flmul@a:
   626                           	opt callstack 0
   627                           
   628                           ; 4 bytes @ 0x4
   629  000064                     	ds	2
   630  000066                     floorf@m:
   631                           	opt callstack 0
   632                           
   633                           ; 4 bytes @ 0x6
   634  000066                     	ds	2
   635  000068                     ___flmul@sign:
   636                           	opt callstack 0
   637                           
   638                           ; 1 bytes @ 0x8
   639  000068                     	ds	1
   640  000069                     ___flmul@aexp:
   641                           	opt callstack 0
   642                           
   643                           ; 1 bytes @ 0x9
   644  000069                     	ds	1
   645  00006A                     floorf@e:
   646                           	opt callstack 0
   647  00006A                     ___flmul@grs:
   648                           	opt callstack 0
   649                           
   650                           ; 4 bytes @ 0xA
   651  00006A                     	ds	2
   652  00006C                     floorf@u:
   653                           	opt callstack 0
   654                           
   655                           ; 4 bytes @ 0xC
   656  00006C                     	ds	2
   657  00006E                     ___flmul@bexp:
   658                           	opt callstack 0
   659                           
   660                           ; 1 bytes @ 0xE
   661  00006E                     	ds	1
   662  00006F                     ___flmul@prod:
   663                           	opt callstack 0
   664                           
   665                           ; 4 bytes @ 0xF
   666  00006F                     	ds	4
   667  000073                     ___flmul@temp:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x13
   671  000073                     	ds	2
   672  000075                     ?___flsub:
   673                           	opt callstack 0
   674  000075                     ?___fltol:
   675                           	opt callstack 0
   676  000075                     ___flge@ff1:
   677                           	opt callstack 0
   678  000075                     ___fltol@f1:
   679                           	opt callstack 0
   680  000075                     ___flsub@b:
   681                           	opt callstack 0
   682                           
   683                           ; 4 bytes @ 0x15
   684  000075                     	ds	4
   685  000079                     ??___fltol:
   686  000079                     ___flge@ff2:
   687                           	opt callstack 0
   688  000079                     ___flsub@a:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x19
   692  000079                     	ds	4
   693  00007D                     ??___flge:
   694  00007D                     ___fltol@sign1:
   695                           	opt callstack 0
   696                           
   697                           ; 1 bytes @ 0x1D
   698  00007D                     	ds	1
   699  00007E                     ___fltol@exp1:
   700                           	opt callstack 0
   701                           
   702                           ; 1 bytes @ 0x1E
   703  00007E                     	ds	1
   704  00007F                     pwmDuty@cicloTrabajo:
   705                           	opt callstack 0
   706                           
   707                           ; 2 bytes @ 0x1F
   708  00007F                     	ds	2
   709  000081                     ?_efgtoa:
   710                           	opt callstack 0
   711  000081                     pwmDuty@channel:
   712                           	opt callstack 0
   713  000081                     efgtoa@fp:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x21
   717  000081                     	ds	1
   718  000082                     ??_pwmDuty:
   719                           
   720                           ; 1 bytes @ 0x22
   721  000082                     	ds	1
   722  000083                     efgtoa@f:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0x23
   726  000083                     	ds	4
   727  000087                     efgtoa@c:
   728                           	opt callstack 0
   729  000087                     pwmDuty@duty:
   730                           	opt callstack 0
   731                           
   732                           ; 4 bytes @ 0x27
   733  000087                     	ds	1
   734  000088                     ??_efgtoa:
   735                           
   736                           ; 1 bytes @ 0x28
   737  000088                     	ds	5
   738  00008D                     efgtoa@ou:
   739                           	opt callstack 0
   740                           
   741                           ; 4 bytes @ 0x2D
   742  00008D                     	ds	4
   743  000091                     _efgtoa$886:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x31
   747  000091                     	ds	2
   748  000093                     _efgtoa$887:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x33
   752  000093                     	ds	2
   753  000095                     _efgtoa$891:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x35
   757  000095                     	ds	2
   758  000097                     _efgtoa$895:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x37
   762  000097                     	ds	2
   763  000099                     _efgtoa$896:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0x39
   767  000099                     	ds	2
   768  00009B                     _efgtoa$897:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x3B
   772  00009B                     	ds	2
   773  00009D                     efgtoa@t:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x3D
   777  00009D                     	ds	2
   778  00009F                     efgtoa@pp:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x3F
   782  00009F                     	ds	2
   783  0000A1                     efgtoa@m:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x41
   787  0000A1                     	ds	2
   788  0000A3                     efgtoa@ne:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0x43
   792  0000A3                     	ds	2
   793  0000A5                     efgtoa@d:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x45
   797  0000A5                     	ds	2
   798  0000A7                     efgtoa@sign:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x47
   802  0000A7                     	ds	2
   803  0000A9                     efgtoa@p:
   804                           	opt callstack 0
   805                           
   806                           ; 2 bytes @ 0x49
   807  0000A9                     	ds	2
   808  0000AB                     efgtoa@nmode:
   809                           	opt callstack 0
   810                           
   811                           ; 1 bytes @ 0x4B
   812  0000AB                     	ds	1
   813  0000AC                     efgtoa@w:
   814                           	opt callstack 0
   815                           
   816                           ; 2 bytes @ 0x4C
   817  0000AC                     	ds	2
   818  0000AE                     efgtoa@mode:
   819                           	opt callstack 0
   820                           
   821                           ; 1 bytes @ 0x4E
   822  0000AE                     	ds	1
   823  0000AF                     efgtoa@h:
   824                           	opt callstack 0
   825                           
   826                           ; 4 bytes @ 0x4F
   827  0000AF                     	ds	4
   828  0000B3                     efgtoa@l:
   829                           	opt callstack 0
   830                           
   831                           ; 4 bytes @ 0x53
   832  0000B3                     	ds	4
   833  0000B7                     efgtoa@i:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x57
   837  0000B7                     	ds	2
   838  0000B9                     efgtoa@g:
   839                           	opt callstack 0
   840                           
   841                           ; 4 bytes @ 0x59
   842  0000B9                     	ds	4
   843  0000BD                     efgtoa@e:
   844                           	opt callstack 0
   845                           
   846                           ; 2 bytes @ 0x5D
   847  0000BD                     	ds	2
   848  0000BF                     efgtoa@n:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x5F
   852  0000BF                     	ds	2
   853  0000C1                     efgtoa@u:
   854                           	opt callstack 0
   855                           
   856                           ; 4 bytes @ 0x61
   857  0000C1                     	ds	4
   858  0000C5                     ?_vfpfcnvrt:
   859                           	opt callstack 0
   860  0000C5                     vfpfcnvrt@fp:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x65
   864  0000C5                     	ds	2
   865  0000C7                     vfpfcnvrt@fmt:
   866                           	opt callstack 0
   867                           
   868                           ; 2 bytes @ 0x67
   869  0000C7                     	ds	2
   870  0000C9                     vfpfcnvrt@ap:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x69
   874  0000C9                     	ds	2
   875  0000CB                     ??_vfpfcnvrt:
   876                           
   877                           ; 1 bytes @ 0x6B
   878  0000CB                     	ds	4
   879  0000CF                     vfpfcnvrt@ll:
   880                           	opt callstack 0
   881                           
   882                           ; 8 bytes @ 0x6F
   883  0000CF                     	ds	8
   884  0000D7                     _vfpfcnvrt$911:
   885                           	opt callstack 0
   886                           
   887                           ; 2 bytes @ 0x77
   888  0000D7                     	ds	2
   889  0000D9                     _vfpfcnvrt$916:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x79
   893  0000D9                     	ds	2
   894  0000DB                     vfpfcnvrt@f:
   895                           	opt callstack 0
   896                           
   897                           ; 4 bytes @ 0x7B
   898  0000DB                     	ds	4
   899  0000DF                     vfpfcnvrt@ct:
   900                           	opt callstack 0
   901                           
   902                           ; 3 bytes @ 0x7F
   903  0000DF                     	ds	3
   904  0000E2                     vfpfcnvrt@c:
   905                           	opt callstack 0
   906                           
   907                           ; 1 bytes @ 0x82
   908  0000E2                     	ds	1
   909  0000E3                     ?_vfprintf:
   910                           	opt callstack 0
   911  0000E3                     vfprintf@fp:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x83
   915  0000E3                     	ds	2
   916  0000E5                     vfprintf@fmt:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x85
   920  0000E5                     	ds	2
   921  0000E7                     vfprintf@ap:
   922                           	opt callstack 0
   923                           
   924                           ; 2 bytes @ 0x87
   925  0000E7                     	ds	2
   926  0000E9                     vfprintf@cfmt:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x89
   930  0000E9                     	ds	2
   931  0000EB                     ?_sprintf:
   932                           	opt callstack 0
   933  0000EB                     sprintf@s:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x8B
   937  0000EB                     	ds	2
   938  0000ED                     sprintf@fmt:
   939                           	opt callstack 0
   940                           
   941                           ; 2 bytes @ 0x8D
   942  0000ED                     	ds	8
   943  0000F5                     sprintf@ap:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x95
   947  0000F5                     	ds	2
   948  0000F7                     sprintf@f:
   949                           	opt callstack 0
   950                           
   951                           ; 6 bytes @ 0x97
   952  0000F7                     	ds	6
   953  0000FD                     ??_probarUltrasonico:
   954                           
   955                           ; 1 bytes @ 0x9D
   956  0000FD                     	ds	2
   957  0000FF                     probarUltrasonico@numeroSensor:
   958                           	opt callstack 0
   959                           
   960                           ; 1 bytes @ 0x9F
   961  0000FF                     	ds	1
   962                           
   963                           	psect	cstackCOMRAM
   964  000001                     __pcstackCOMRAM:
   965                           	opt callstack 0
   966  000001                     ??_antiRebote:
   967  000001                     
   968                           ; 1 bytes @ 0x0
   969  000001                     	ds	2
   970  000003                     antiRebote@pin:
   971                           	opt callstack 0
   972                           
   973                           ; 1 bytes @ 0x2
   974  000003                     	ds	1
   975  000004                     ??_boton:
   976                           
   977                           ; 1 bytes @ 0x3
   978  000004                     	ds	2
   979  000006                     ??_configPwm:
   980  000006                     ?_strlen:
   981                           	opt callstack 0
   982  000006                     ?___fpclassifyf:
   983                           	opt callstack 0
   984  000006                     ?_isupper:
   985                           	opt callstack 0
   986  000006                     ?_isdigit:
   987                           	opt callstack 0
   988  000006                     ?_strncmp:
   989                           	opt callstack 0
   990  000006                     ?_isspace:
   991                           	opt callstack 0
   992  000006                     ?_dameLecturaAdc:
   993                           	opt callstack 0
   994  000006                     ?___wmul:
   995                           	opt callstack 0
   996  000006                     ?___awdiv:
   997                           	opt callstack 0
   998  000006                     ?___awmod:
   999                           	opt callstack 0
  1000  000006                     ?___lwdiv:
  1001                           	opt callstack 0
  1002  000006                     ?___lmul:
  1003                           	opt callstack 0
  1004  000006                     ?___flneg:
  1005                           	opt callstack 0
  1006  000006                     ?___aodiv:
  1007                           	opt callstack 0
  1008  000006                     ?___aomod:
  1009                           	opt callstack 0
  1010  000006                     UART_write@dato:
  1011                           	opt callstack 0
  1012  000006                     ___wmul@multiplier:
  1013                           	opt callstack 0
  1014  000006                     ___awdiv@dividend:
  1015                           	opt callstack 0
  1016  000006                     ___awmod@dividend:
  1017                           	opt callstack 0
  1018  000006                     ___lwdiv@dividend:
  1019                           	opt callstack 0
  1020  000006                     isdigit@c:
  1021                           	opt callstack 0
  1022  000006                     isspace@c:
  1023                           	opt callstack 0
  1024  000006                     isupper@c:
  1025                           	opt callstack 0
  1026  000006                     fputc@c:
  1027                           	opt callstack 0
  1028  000006                     strcpy@dest:
  1029                           	opt callstack 0
  1030  000006                     strlen@s:
  1031                           	opt callstack 0
  1032  000006                     strncmp@_l:
  1033                           	opt callstack 0
  1034  000006                     ___lmul@multiplier:
  1035                           	opt callstack 0
  1036  000006                     ___fleq@ff1:
  1037                           	opt callstack 0
  1038  000006                     ___flneg@f1:
  1039                           	opt callstack 0
  1040  000006                     ___fpclassifyf@x:
  1041                           	opt callstack 0
  1042  000006                     ___aodiv@dividend:
  1043                           	opt callstack 0
  1044  000006                     ___aomod@dividend:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 8 bytes @ 0x5
  1048  000006                     	ds	1
  1049  000007                     UART_printf@cadena:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x6
  1053  000007                     	ds	1
  1054  000008                     ??_isupper:
  1055  000008                     ??_isdigit:
  1056  000008                     ??_isspace:
  1057  000008                     ??_dameLecturaAdc:
  1058  000008                     configPwm@channel:
  1059                           	opt callstack 0
  1060  000008                     ___wmul@multiplicand:
  1061                           	opt callstack 0
  1062  000008                     ___awdiv@divisor:
  1063                           	opt callstack 0
  1064  000008                     ___awmod@divisor:
  1065                           	opt callstack 0
  1066  000008                     ___lwdiv@divisor:
  1067                           	opt callstack 0
  1068  000008                     fputc@fp:
  1069                           	opt callstack 0
  1070  000008                     strcpy@src:
  1071                           	opt callstack 0
  1072  000008                     strlen@a:
  1073                           	opt callstack 0
  1074  000008                     strncmp@_r:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x7
  1078  000008                     	ds	1
  1079  000009                     
  1080                           ; 1 bytes @ 0x8
  1081  000009                     	ds	1
  1082  00000A                     ??_fputc:
  1083  00000A                     ??___fpclassifyf:
  1084  00000A                     ??_strcpy:
  1085  00000A                     dameLecturaAdc@canalLeer:
  1086                           	opt callstack 0
  1087  00000A                     ___awdiv@counter:
  1088                           	opt callstack 0
  1089  00000A                     ___awmod@counter:
  1090                           	opt callstack 0
  1091  00000A                     ___lwdiv@counter:
  1092                           	opt callstack 0
  1093  00000A                     ___wmul@product:
  1094                           	opt callstack 0
  1095  00000A                     strncmp@n:
  1096                           	opt callstack 0
  1097  00000A                     ___lmul@multiplicand:
  1098                           	opt callstack 0
  1099  00000A                     ___fleq@ff2:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x9
  1103  00000A                     	ds	1
  1104  00000B                     ___awdiv@sign:
  1105                           	opt callstack 0
  1106  00000B                     ___awmod@sign:
  1107                           	opt callstack 0
  1108  00000B                     ___lwdiv@quotient:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0xA
  1112  00000B                     	ds	1
  1113  00000C                     ??_strncmp:
  1114  00000C                     ?_tolower:
  1115                           	opt callstack 0
  1116  00000C                     _isspace$1420:
  1117                           	opt callstack 0
  1118  00000C                     ___awdiv@quotient:
  1119                           	opt callstack 0
  1120  00000C                     strcpy@s:
  1121                           	opt callstack 0
  1122  00000C                     tolower@c:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 2 bytes @ 0xB
  1126  00000C                     	ds	1
  1127  00000D                     ?_atoi:
  1128                           	opt callstack 0
  1129  00000D                     ?___xxtofl:
  1130                           	opt callstack 0
  1131  00000D                     atoi@s:
  1132                           	opt callstack 0
  1133  00000D                     strncmp@l:
  1134                           	opt callstack 0
  1135  00000D                     ___xxtofl@val:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 4 bytes @ 0xC
  1139  00000D                     	ds	1
  1140  00000E                     ??_tolower:
  1141  00000E                     ??___fleq:
  1142  00000E                     ___fpclassifyf@e:
  1143                           	opt callstack 0
  1144  00000E                     strcpy@d:
  1145                           	opt callstack 0
  1146  00000E                     ___lmul@product:
  1147                           	opt callstack 0
  1148  00000E                     ___aodiv@divisor:
  1149                           	opt callstack 0
  1150  00000E                     ___aomod@divisor:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 8 bytes @ 0xD
  1154  00000E                     	ds	1
  1155  00000F                     ??_atoi:
  1156  00000F                     fputs@s:
  1157                           	opt callstack 0
  1158  00000F                     strncmp@r:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0xE
  1162  00000F                     	ds	1
  1163  000010                     ___fpclassifyf@u:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 4 bytes @ 0xF
  1167  000010                     	ds	1
  1168  000011                     ??___xxtofl:
  1169  000011                     fputs@fp:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x10
  1173  000011                     	ds	1
  1174  000012                     ?___aldiv:
  1175                           	opt callstack 0
  1176  000012                     _tolower$1519:
  1177                           	opt callstack 0
  1178  000012                     ___aldiv@dividend:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x11
  1182  000012                     	ds	1
  1183  000013                     fputs@c:
  1184                           	opt callstack 0
  1185  000013                     atoi@neg:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x12
  1189  000013                     	ds	1
  1190  000014                     fputs@i:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x13
  1194  000014                     	ds	1
  1195  000015                     ___xxtofl@sign:
  1196                           	opt callstack 0
  1197  000015                     _atoi$1389:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x14
  1201  000015                     	ds	1
  1202  000016                     ?_pad:
  1203                           	opt callstack 0
  1204  000016                     ___aodiv@counter:
  1205                           	opt callstack 0
  1206  000016                     ___aomod@counter:
  1207                           	opt callstack 0
  1208  000016                     ___xxtofl@exp:
  1209                           	opt callstack 0
  1210  000016                     pad@fp:
  1211                           	opt callstack 0
  1212  000016                     ___aldiv@divisor:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x15
  1216  000016                     	ds	1
  1217  000017                     ___aodiv@sign:
  1218                           	opt callstack 0
  1219  000017                     ___aomod@sign:
  1220                           	opt callstack 0
  1221  000017                     _atoi$1391:
  1222                           	opt callstack 0
  1223  000017                     ___xxtofl@arg:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 4 bytes @ 0x16
  1227  000017                     	ds	1
  1228  000018                     ?_abs:
  1229                           	opt callstack 0
  1230  000018                     pad@buf:
  1231                           	opt callstack 0
  1232  000018                     abs@a:
  1233                           	opt callstack 0
  1234  000018                     ___aodiv@quotient:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 8 bytes @ 0x17
  1238  000018                     	ds	1
  1239  000019                     _atoi$1390:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 1 bytes @ 0x18
  1243  000019                     	ds	1
  1244  00001A                     ??_abs:
  1245  00001A                     ___aldiv@counter:
  1246                           	opt callstack 0
  1247  00001A                     pad@p:
  1248                           	opt callstack 0
  1249  00001A                     atoi@n:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x19
  1253  00001A                     	ds	1
  1254  00001B                     ?_dameDistancia:
  1255                           	opt callstack 0
  1256  00001B                     ___aldiv@sign:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x1A
  1260  00001B                     	ds	1
  1261  00001C                     ??_pad:
  1262  00001C                     ___aldiv@quotient:
  1263                           	opt callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x1B
  1266  00001C                     	ds	1
  1267  00001D                     pad@i:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x1C
  1271  00001D                     	ds	2
  1272  00001F                     ??_dameDistancia:
  1273  00001F                     pad@w:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x1E
  1277  00001F                     	ds	1
  1278  000020                     ?_map:
  1279                           	opt callstack 0
  1280  000020                     map@x:
  1281                           	opt callstack 0
  1282  000020                     UART_init@BAUD:
  1283                           	opt callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x1F
  1286  000020                     	ds	1
  1287  000021                     ?_dtoa:
  1288                           	opt callstack 0
  1289  000021                     dameDistancia@numeroSensor:
  1290                           	opt callstack 0
  1291  000021                     dtoa@fp:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x20
  1295  000021                     	ds	1
  1296  000022                     dameDistancia@distancia:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x21
  1300  000022                     	ds	1
  1301  000023                     dtoa@d:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 8 bytes @ 0x22
  1305  000023                     	ds	1
  1306  000024                     map@in_min:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x23
  1310  000024                     	ds	2
  1311  000026                     dameDistancia@conteo:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x25
  1315  000026                     	ds	2
  1316  000028                     ?___fladd:
  1317                           	opt callstack 0
  1318  000028                     map@in_max:
  1319                           	opt callstack 0
  1320  000028                     ___fladd@b:
  1321                           	opt callstack 0
  1322  000028                     _UART_init$1758:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x27
  1326  000028                     	ds	3
  1327  00002B                     ??_dtoa:
  1328                           
  1329                           ; 1 bytes @ 0x2A
  1330  00002B                     	ds	1
  1331  00002C                     map@out_min:
  1332                           	opt callstack 0
  1333  00002C                     ___fladd@a:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x2B
  1337  00002C                     	ds	4
  1338  000030                     ??___fladd:
  1339  000030                     map@out_max:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 4 bytes @ 0x2F
  1343  000030                     	ds	3
  1344  000033                     _dtoa$862:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x32
  1348  000033                     	ds	1
  1349  000034                     ___fladd@signs:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 1 bytes @ 0x33
  1353  000034                     	ds	1
  1354  000035                     ___fladd@aexp:
  1355                           	opt callstack 0
  1356  000035                     dtoa@p:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x34
  1360  000035                     	ds	1
  1361  000036                     ___fladd@bexp:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x35
  1365  000036                     	ds	1
  1366  000037                     ___fladd@grs:
  1367                           	opt callstack 0
  1368  000037                     dtoa@w:
  1369                           	opt callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x36
  1372  000037                     	ds	1
  1373  000038                     ?___fldiv:
  1374                           	opt callstack 0
  1375  000038                     ___fldiv@b:
  1376                           	opt callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x37
  1379  000038                     	ds	1
  1380  000039                     dtoa@s:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x38
  1384  000039                     	ds	2
  1385  00003B                     dtoa@n:
  1386                           	opt callstack 0
  1387                           
  1388                           ; 8 bytes @ 0x3A
  1389  00003B                     	ds	1
  1390  00003C                     ___fldiv@a:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x3B
  1394  00003C                     	ds	4
  1395  000040                     ??___fldiv:
  1396                           
  1397                           ; 1 bytes @ 0x3F
  1398  000040                     	ds	3
  1399  000043                     dtoa@i:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x42
  1403  000043                     	ds	1
  1404  000044                     ___fldiv@rem:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 4 bytes @ 0x43
  1408  000044                     	ds	4
  1409  000048                     ___fldiv@sign:
  1410                           	opt callstack 0
  1411                           
  1412                           ; 1 bytes @ 0x47
  1413  000048                     	ds	1
  1414  000049                     ___fldiv@new_exp:
  1415                           	opt callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x48
  1418  000049                     	ds	2
  1419  00004B                     ___fldiv@grs:
  1420                           	opt callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x4A
  1423  00004B                     	ds	4
  1424  00004F                     ___fldiv@bexp:
  1425                           	opt callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x4E
  1428  00004F                     	ds	1
  1429  000050                     ___fldiv@aexp:
  1430                           	opt callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x4F
  1433  000050                     	ds	1
  1434  000051                     ??___flmul:
  1435  000051                     ?_floorf:
  1436                           	opt callstack 0
  1437  000051                     floorf@x:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 4 bytes @ 0x50
  1441  000051                     	ds	4
  1442  000055                     
  1443                           ; 1 bytes @ 0x54
  1444 ;;
  1445 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1446 ;;
  1447 ;; *************** function _main *****************
  1448 ;; Defined at:
  1449 ;;		line 1080 in file "main.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  numMovimient    2    0        int 
  1454 ;;  iniciado        1    2[BANK2 ] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1464 ;;      Params:         0       0       0       0       0       0       0       0       0
  1465 ;;      Locals:         0       0       0       3       0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1467 ;;      Totals:         0       0       0       3       0       0       0       0       0
  1468 ;;Total ram usage:        3 bytes
  1469 ;; Hardware stack levels required when called:   12
  1470 ;; This function calls:
  1471 ;;		_UART_init
  1472 ;;		_configPwm
  1473 ;;		_configurarAdc
  1474 ;;		_inicializarComportamientoBasico
  1475 ;;		_probarSensores
  1476 ;; This function is called by:
  1477 ;;		Startup code after reset
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text0
  1482  003F94                     __ptext0:
  1483                           	opt callstack 0
  1484  003F94                     _main:
  1485                           	opt callstack 19
  1486  003F94                     
  1487                           ;main.c: 1082:     T_BOOL iniciado = 0;
  1488  003F94  0E00               	movlw	0
  1489  003F96  0102               	movlb	2	; () banked
  1490  003F98  6F66               	movwf	main@iniciado& (0+255),b
  1491  003F9A                     
  1492                           ; BSR set to: 2
  1493                           ;main.c: 1086:     INTCONbits.GIE = 1;
  1494  003F9A  8EF2               	bsf	242,7,c	;volatile
  1495  003F9C                     
  1496                           ; BSR set to: 2
  1497                           ;main.c: 1087:     INTCONbits.INT0IE = 1;
  1498  003F9C  88F2               	bsf	242,4,c	;volatile
  1499  003F9E                     
  1500                           ; BSR set to: 2
  1501                           ;main.c: 1088:     INTCON2bits.INTEDG0 = 1;
  1502  003F9E  8CF1               	bsf	241,6,c	;volatile
  1503  003FA0                     
  1504                           ; BSR set to: 2
  1505                           ;main.c: 1090:     TRISD3 = 0;
  1506  003FA0  9695               	bcf	3989,3,c	;volatile
  1507  003FA2                     
  1508                           ; BSR set to: 2
  1509                           ;main.c: 1091:     TRISB1 = 1;
  1510  003FA2  8293               	bsf	3987,1,c	;volatile
  1511  003FA4                     
  1512                           ; BSR set to: 2
  1513                           ;main.c: 1092:     TRISB2 = 1;
  1514  003FA4  8493               	bsf	3987,2,c	;volatile
  1515  003FA6                     
  1516                           ; BSR set to: 2
  1517                           ;main.c: 1093:     TRISB3 = 1;
  1518  003FA6  8693               	bsf	3987,3,c	;volatile
  1519  003FA8                     
  1520                           ; BSR set to: 2
  1521                           ;main.c: 1095:     TRISB4 = 0;
  1522  003FA8  9893               	bcf	3987,4,c	;volatile
  1523  003FAA                     
  1524                           ; BSR set to: 2
  1525                           ;main.c: 1096:     TRISB5 = 0;
  1526  003FAA  9A93               	bcf	3987,5,c	;volatile
  1527  003FAC                     
  1528                           ; BSR set to: 2
  1529                           ;main.c: 1097:     TRISB6 = 0;
  1530  003FAC  9C93               	bcf	3987,6,c	;volatile
  1531  003FAE                     
  1532                           ; BSR set to: 2
  1533                           ;main.c: 1098:     TRISB7 = 0;
  1534  003FAE  9E93               	bcf	3987,7,c	;volatile
  1535  003FB0                     
  1536                           ; BSR set to: 2
  1537                           ;main.c: 1100:     TRISDbits.RD2 = 0;
  1538  003FB0  9495               	bcf	149,2,c	;volatile
  1539  003FB2                     
  1540                           ; BSR set to: 2
  1541                           ;main.c: 1101:     TRISB0 = 1;
  1542  003FB2  8093               	bsf	3987,0,c	;volatile
  1543  003FB4                     
  1544                           ; BSR set to: 2
  1545                           ;main.c: 1103:     LATD3 = 0;
  1546  003FB4  968C               	bcf	3980,3,c	;volatile
  1547  003FB6                     
  1548                           ; BSR set to: 2
  1549                           ;main.c: 1104:     LATB4 = 0;
  1550  003FB6  988A               	bcf	3978,4,c	;volatile
  1551  003FB8                     
  1552                           ; BSR set to: 2
  1553                           ;main.c: 1105:     LATB5 = 0;
  1554  003FB8  9A8A               	bcf	3978,5,c	;volatile
  1555  003FBA                     
  1556                           ; BSR set to: 2
  1557                           ;main.c: 1106:     LATB6 = 0;
  1558  003FBA  9C8A               	bcf	3978,6,c	;volatile
  1559  003FBC                     
  1560                           ; BSR set to: 2
  1561                           ;main.c: 1107:     LATB7 = 0;
  1562  003FBC  9E8A               	bcf	3978,7,c	;volatile
  1563  003FBE                     
  1564                           ; BSR set to: 2
  1565                           ;main.c: 1108:     LATD2 = 0;
  1566  003FBE  948C               	bcf	3980,2,c	;volatile
  1567                           
  1568                           ;main.c: 1111:     T1CON = 0b00000000;
  1569  003FC0  0E00               	movlw	0
  1570  003FC2  6ECD               	movwf	205,c	;volatile
  1571  003FC4                     
  1572                           ; BSR set to: 2
  1573                           ;main.c: 1113:     configPwm(1);
  1574  003FC4  0E01               	movlw	1
  1575  003FC6  ECA8  F022         	call	_configPwm
  1576  003FCA                     
  1577                           ;main.c: 1114:     configPwm(2);
  1578  003FCA  0E02               	movlw	2
  1579  003FCC  ECA8  F022         	call	_configPwm
  1580  003FD0                     
  1581                           ;main.c: 1115:     configurarAdc();
  1582  003FD0  EC40  F024         	call	_configurarAdc	;wreg free
  1583  003FD4                     
  1584                           ;main.c: 1117:     UART_init(9600);
  1585  003FD4  0E80               	movlw	128
  1586  003FD6  6E20               	movwf	UART_init@BAUD^0,c
  1587  003FD8  0E25               	movlw	37
  1588  003FDA  6E21               	movwf	(UART_init@BAUD+1)^0,c
  1589  003FDC  0E00               	movlw	0
  1590  003FDE  6E22               	movwf	(UART_init@BAUD+2)^0,c
  1591  003FE0  0E00               	movlw	0
  1592  003FE2  6E23               	movwf	(UART_init@BAUD+3)^0,c
  1593  003FE4  ECD1  F020         	call	_UART_init	;wreg free
  1594  003FE8                     l9654:
  1595                           
  1596                           ;main.c: 1122:         if (!pausa) {
  1597  003FE8  0101               	movlb	1	; () banked
  1598  003FEA  51FD               	movf	_pausa& (0+255),w,b
  1599  003FEC  A4D8               	btfss	status,2,c
  1600  003FEE  EFFB  F01F         	goto	u11281
  1601  003FF2  EFFD  F01F         	goto	u11280
  1602  003FF6                     u11281:
  1603  003FF6  EF0E  F020         	goto	l9664
  1604  003FFA                     u11280:
  1605  003FFA                     
  1606                           ; BSR set to: 1
  1607                           ;main.c: 1124:             if (!iniciado) {
  1608  003FFA  0102               	movlb	2	; () banked
  1609  003FFC  5166               	movf	main@iniciado& (0+255),w,b
  1610  003FFE  A4D8               	btfss	status,2,c
  1611  004000  EF04  F020         	goto	u11291
  1612  004004  EF06  F020         	goto	u11290
  1613  004008                     u11291:
  1614  004008  EF0A  F020         	goto	l9662
  1615  00400C                     u11290:
  1616  00400C                     
  1617                           ; BSR set to: 2
  1618                           ;main.c: 1125:                 iniciado = 1;
  1619  00400C  0E01               	movlw	1
  1620  00400E  6F66               	movwf	main@iniciado& (0+255),b
  1621  004010                     
  1622                           ; BSR set to: 2
  1623                           ;main.c: 1126:                 inicializarComportamientoBasico();
  1624  004010  ECD0  F022         	call	_inicializarComportamientoBasico	;wreg free
  1625  004014                     l9662:
  1626                           
  1627                           ;main.c: 1129:             probarSensores();
  1628  004014  EC15  F020         	call	_probarSensores	;wreg free
  1629                           
  1630                           ;main.c: 1135:         } else {
  1631  004018  EFF4  F01F         	goto	l9654
  1632  00401C                     l9664:
  1633                           
  1634                           ; BSR set to: 1
  1635                           ;main.c: 1137:             iniciado = 0;
  1636  00401C  0E00               	movlw	0
  1637  00401E  0102               	movlb	2	; () banked
  1638  004020  6F66               	movwf	main@iniciado& (0+255),b
  1639  004022  EFF4  F01F         	goto	l9654
  1640  004026  EF07  F000         	goto	start
  1641  00402A                     __end_of_main:
  1642                           	opt callstack 0
  1643                           
  1644 ;; *************** function _probarSensores *****************
  1645 ;; Defined at:
  1646 ;;		line 121 in file "main.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  lecturaSenso    2    0[BANK1 ] short 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1660 ;;      Params:         0       0       0       0       0       0       0       0       0
  1661 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1663 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1664 ;;Total ram usage:        2 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:   11
  1667 ;; This function calls:
  1668 ;;		_UART_printf
  1669 ;;		_dameLecturaAdc
  1670 ;;		_leerSensores
  1671 ;;		_probarUltrasonico
  1672 ;;		_sprintf
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text1
  1679  00402A                     __ptext1:
  1680                           	opt callstack 0
  1681  00402A                     _probarSensores:
  1682                           	opt callstack 19
  1683  00402A                     
  1684                           ;main.c: 123:     leerSensores();
  1685  00402A  ECEF  F018         	call	_leerSensores	;wreg free
  1686  00402E                     
  1687                           ;main.c: 125:     probarUltrasonico(ENFRENTE);
  1688  00402E  0E01               	movlw	1
  1689  004030  EC1C  F01D         	call	_probarUltrasonico
  1690  004034                     
  1691                           ;main.c: 126:     probarUltrasonico(IZQUIERDA);
  1692  004034  0E02               	movlw	2
  1693  004036  EC1C  F01D         	call	_probarUltrasonico
  1694  00403A                     
  1695                           ;main.c: 127:     probarUltrasonico(DERECHA);
  1696  00403A  0E03               	movlw	3
  1697  00403C  EC1C  F01D         	call	_probarUltrasonico
  1698  004040                     
  1699                           ;main.c: 128:     T_WORD lecturaSensorOptico = dameLecturaAdc(0);
  1700  004040  0E00               	movlw	0
  1701  004042  EC1A  F023         	call	_dameLecturaAdc
  1702  004046  C006  F1FB         	movff	?_dameLecturaAdc,probarSensores@lecturaSensorOptico
  1703  00404A  C007  F1FC         	movff	?_dameLecturaAdc+1,probarSensores@lecturaSensorOptico+1
  1704  00404E                     
  1705                           ;main.c: 130:     if (lecturaSensorOptico < 100)
  1706  00404E  0101               	movlb	1	; () banked
  1707  004050  BFFC               	btfsc	(probarSensores@lecturaSensorOptico+1)& (0+255),7,b
  1708  004052  EF36  F020         	goto	u10530
  1709  004056  51FC               	movf	(probarSensores@lecturaSensorOptico+1)& (0+255),w,b
  1710  004058  E107               	bnz	u10531
  1711  00405A  0E64               	movlw	100
  1712  00405C  5DFB               	subwf	probarSensores@lecturaSensorOptico& (0+255),w,b
  1713  00405E  B0D8               	btfsc	status,0,c
  1714  004060  EF34  F020         	goto	u10531
  1715  004064  EF36  F020         	goto	u10530
  1716  004068                     u10531:
  1717  004068  EF3E  F020         	goto	l8880
  1718  00406C                     u10530:
  1719  00406C                     
  1720                           ; BSR set to: 1
  1721                           ;main.c: 131:         UART_printf("\rSe llego al destino \r\n");
  1722  00406C  0E60               	movlw	low STR_1
  1723  00406E  6E07               	movwf	UART_printf@cadena^0,c
  1724  004070  0E08               	movlw	high STR_1
  1725  004072  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1726  004074  ECA3  F021         	call	_UART_printf	;wreg free
  1727  004078  EF44  F020         	goto	l8882
  1728  00407C                     l8880:
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;main.c: 133:         UART_printf("\rDestino no detectado \r\n");
  1732  00407C  0E47               	movlw	low STR_2
  1733  00407E  6E07               	movwf	UART_printf@cadena^0,c
  1734  004080  0E08               	movlw	high STR_2
  1735  004082  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1736  004084  ECA3  F021         	call	_UART_printf	;wreg free
  1737  004088                     l8882:
  1738                           
  1739                           ;main.c: 135:     sprintf(buffer, "\rLectura de sensor Optico = %d\r\n\n", lecturaSensor
      +                          Optico);
  1740  004088  0EBF               	movlw	low _buffer
  1741  00408A  0100               	movlb	0	; () banked
  1742  00408C  6FEB               	movwf	sprintf@s& (0+255),b
  1743  00408E  0E01               	movlw	high _buffer
  1744  004090  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1745  004092  0E05               	movlw	low STR_3
  1746  004094  6FED               	movwf	sprintf@fmt& (0+255),b
  1747  004096  0E08               	movlw	high STR_3
  1748  004098  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1749  00409A  C1FB  F0EF         	movff	probarSensores@lecturaSensorOptico,?_sprintf+4
  1750  00409E  C1FC  F0F0         	movff	probarSensores@lecturaSensorOptico+1,?_sprintf+5
  1751  0040A2  EC56  F022         	call	_sprintf	;wreg free
  1752  0040A6                     
  1753                           ;main.c: 136:     UART_printf(buffer);
  1754  0040A6  0EBF               	movlw	low _buffer
  1755  0040A8  6E07               	movwf	UART_printf@cadena^0,c
  1756  0040AA  0E01               	movlw	high _buffer
  1757  0040AC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1758  0040AE  ECA3  F021         	call	_UART_printf	;wreg free
  1759  0040B2  0012               	return		;funcret
  1760  0040B4                     __end_of_probarSensores:
  1761                           	opt callstack 0
  1762                           
  1763 ;; *************** function _probarUltrasonico *****************
  1764 ;; Defined at:
  1765 ;;		line 140 in file "main.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  numeroSensor    1    wreg     unsigned char 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  numeroSensor    1  159[BANK0 ] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0
  1780 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1781 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1782 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1783 ;;Total ram usage:        3 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:   10
  1786 ;; This function calls:
  1787 ;;		_UART_printf
  1788 ;;		_sprintf
  1789 ;; This function is called by:
  1790 ;;		_probarSensores
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text2
  1795  003A38                     __ptext2:
  1796                           	opt callstack 0
  1797  003A38                     _probarUltrasonico:
  1798                           	opt callstack 19
  1799                           
  1800                           ;incstack = 0
  1801                           ;probarUltrasonico@numeroSensor stored from wreg
  1802  003A38  0100               	movlb	0	; () banked
  1803  003A3A  6FFF               	movwf	probarUltrasonico@numeroSensor& (0+255),b
  1804  003A3C                     
  1805                           ;main.c: 142:     switch (numeroSensor) {
  1806  003A3C  EF5C  F01D         	goto	l8800
  1807  003A40                     l8792:
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;main.c: 145:             sprintf(buffer, "\rEnfrente: %.2f\r\n", sensorEnfrente);
  1811  003A40  0EBF               	movlw	low _buffer
  1812  003A42  6FEB               	movwf	sprintf@s& (0+255),b
  1813  003A44  0E01               	movlw	high _buffer
  1814  003A46  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1815  003A48  0E8B               	movlw	low STR_4
  1816  003A4A  6FED               	movwf	sprintf@fmt& (0+255),b
  1817  003A4C  0E08               	movlw	high STR_4
  1818  003A4E  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1819  003A50  C124  F0EF         	movff	_sensorEnfrente,?_sprintf+4
  1820  003A54  C125  F0F0         	movff	_sensorEnfrente+1,?_sprintf+5
  1821  003A58  C126  F0F1         	movff	_sensorEnfrente+2,?_sprintf+6
  1822  003A5C  C127  F0F2         	movff	_sensorEnfrente+3,?_sprintf+7
  1823  003A60  EC56  F022         	call	_sprintf	;wreg free
  1824                           
  1825                           ;main.c: 146:             break;
  1826  003A64  EF76  F01D         	goto	l8802
  1827  003A68                     l8794:
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;main.c: 149:             sprintf(buffer, "\rIzquierda: %.2f\r\n", sensorIzquierda);
  1831  003A68  0EBF               	movlw	low _buffer
  1832  003A6A  6FEB               	movwf	sprintf@s& (0+255),b
  1833  003A6C  0E01               	movlw	high _buffer
  1834  003A6E  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1835  003A70  0E78               	movlw	low STR_5
  1836  003A72  6FED               	movwf	sprintf@fmt& (0+255),b
  1837  003A74  0E08               	movlw	high STR_5
  1838  003A76  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1839  003A78  C128  F0EF         	movff	_sensorIzquierda,?_sprintf+4
  1840  003A7C  C129  F0F0         	movff	_sensorIzquierda+1,?_sprintf+5
  1841  003A80  C12A  F0F1         	movff	_sensorIzquierda+2,?_sprintf+6
  1842  003A84  C12B  F0F2         	movff	_sensorIzquierda+3,?_sprintf+7
  1843  003A88  EC56  F022         	call	_sprintf	;wreg free
  1844                           
  1845                           ;main.c: 150:             break;
  1846  003A8C  EF76  F01D         	goto	l8802
  1847  003A90                     l8796:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;main.c: 153:             sprintf(buffer, "\rDerecha: %.2f\r\n", sensorDerecha);
  1851  003A90  0EBF               	movlw	low _buffer
  1852  003A92  6FEB               	movwf	sprintf@s& (0+255),b
  1853  003A94  0E01               	movlw	high _buffer
  1854  003A96  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1855  003A98  0E9D               	movlw	low STR_6
  1856  003A9A  6FED               	movwf	sprintf@fmt& (0+255),b
  1857  003A9C  0E08               	movlw	high STR_6
  1858  003A9E  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1859  003AA0  C12C  F0EF         	movff	_sensorDerecha,?_sprintf+4
  1860  003AA4  C12D  F0F0         	movff	_sensorDerecha+1,?_sprintf+5
  1861  003AA8  C12E  F0F1         	movff	_sensorDerecha+2,?_sprintf+6
  1862  003AAC  C12F  F0F2         	movff	_sensorDerecha+3,?_sprintf+7
  1863  003AB0  EC56  F022         	call	_sprintf	;wreg free
  1864                           
  1865                           ;main.c: 154:             break;
  1866  003AB4  EF76  F01D         	goto	l8802
  1867  003AB8                     l8800:
  1868  003AB8  0100               	movlb	0	; () banked
  1869  003ABA  51FF               	movf	probarUltrasonico@numeroSensor& (0+255),w,b
  1870  003ABC  6FFD               	movwf	??_probarUltrasonico& (0+255),b
  1871  003ABE  6BFE               	clrf	(??_probarUltrasonico+1)& (0+255),b
  1872                           
  1873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1874                           ; Switch size 1, requested type "simple"
  1875                           ; Number of cases is 1, Range of values is 0 to 0
  1876                           ; switch strategies available:
  1877                           ; Name         Instructions Cycles
  1878                           ; simple_byte            4     3 (average)
  1879                           ;	Chosen strategy is simple_byte
  1880  003AC0  51FE               	movf	(??_probarUltrasonico+1)& (0+255),w,b
  1881  003AC2  0A00               	xorlw	0	; case 0
  1882  003AC4  B4D8               	btfsc	status,2,c
  1883  003AC6  EF67  F01D         	goto	l9786
  1884  003ACA  EF76  F01D         	goto	l8802
  1885  003ACE                     l9786:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 3, Range of values is 1 to 3
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte           10     6 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894  003ACE  51FD               	movf	??_probarUltrasonico& (0+255),w,b
  1895  003AD0  0A01               	xorlw	1	; case 1
  1896  003AD2  B4D8               	btfsc	status,2,c
  1897  003AD4  EF20  F01D         	goto	l8792
  1898  003AD8  0A03               	xorlw	3	; case 2
  1899  003ADA  B4D8               	btfsc	status,2,c
  1900  003ADC  EF34  F01D         	goto	l8794
  1901  003AE0  0A01               	xorlw	1	; case 3
  1902  003AE2  B4D8               	btfsc	status,2,c
  1903  003AE4  EF48  F01D         	goto	l8796
  1904  003AE8  EF76  F01D         	goto	l8802
  1905  003AEC                     l8802:
  1906                           
  1907                           ;main.c: 159:     UART_printf(buffer);
  1908  003AEC  0EBF               	movlw	low _buffer
  1909  003AEE  6E07               	movwf	UART_printf@cadena^0,c
  1910  003AF0  0E01               	movlw	high _buffer
  1911  003AF2  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1912  003AF4  ECA3  F021         	call	_UART_printf	;wreg free
  1913  003AF8                     
  1914                           ;main.c: 160:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1915  003AF8  0E06               	movlw	6
  1916  003AFA  0100               	movlb	0	; () banked
  1917  003AFC  6FFE               	movwf	(??_probarUltrasonico+1)& (0+255),b
  1918  003AFE  0E13               	movlw	19
  1919  003B00  6FFD               	movwf	??_probarUltrasonico& (0+255),b
  1920  003B02  0EAD               	movlw	173
  1921  003B04                     u11307:
  1922  003B04  2EE8               	decfsz	wreg,f,c
  1923  003B06  D7FE               	bra	u11307
  1924  003B08  2FFD               	decfsz	??_probarUltrasonico& (0+255),f,b
  1925  003B0A  D7FC               	bra	u11307
  1926  003B0C  2FFE               	decfsz	(??_probarUltrasonico+1)& (0+255),f,b
  1927  003B0E  D7FA               	bra	u11307
  1928  003B10  D000               	nop2	
  1929  003B12  0012               	return		;funcret
  1930  003B14                     __end_of_probarUltrasonico:
  1931                           	opt callstack 0
  1932                           
  1933 ;; *************** function _sprintf *****************
  1934 ;; Defined at:
  1935 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  s               2  139[BANK0 ] PTR unsigned char 
  1938 ;;		 -> buffer(50), 
  1939 ;;  fmt             2  141[BANK0 ] PTR const unsigned char 
  1940 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  1941 ;;		 -> STR_3(34), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  f               6  151[BANK0 ] struct _IO_FILE
  1944 ;;  ap              2  149[BANK0 ] PTR void [1]
  1945 ;;		 -> ?_sprintf(2), 
  1946 ;;  ret             2    0        int 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  2  139[BANK0 ] int 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         0       8       0       0       0       0       0       0       0
  1957 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1960 ;;Total ram usage:       18 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    9
  1963 ;; This function calls:
  1964 ;;		_vfprintf
  1965 ;; This function is called by:
  1966 ;;		_probarSensores
  1967 ;;		_probarUltrasonico
  1968 ;;		_visualizarPasosRealizados
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text3
  1973  0044AC                     __ptext3:
  1974                           	opt callstack 0
  1975  0044AC                     _sprintf:
  1976                           	opt callstack 20
  1977  0044AC  0EEF               	movlw	low (?_sprintf+4)
  1978  0044AE  0100               	movlb	0	; () banked
  1979  0044B0  6FF5               	movwf	sprintf@ap& (0+255),b
  1980  0044B2  0E00               	movlw	high (?_sprintf+4)
  1981  0044B4  6FF6               	movwf	(sprintf@ap+1)& (0+255),b
  1982  0044B6  C0EB  F0F7         	movff	sprintf@s,sprintf@f
  1983  0044BA  C0EC  F0F8         	movff	sprintf@s+1,sprintf@f+1
  1984  0044BE                     
  1985                           ; BSR set to: 0
  1986  0044BE  0E00               	movlw	0
  1987  0044C0  6FFA               	movwf	(sprintf@f+3)& (0+255),b
  1988  0044C2  0E00               	movlw	0
  1989  0044C4  6FF9               	movwf	(sprintf@f+2)& (0+255),b
  1990  0044C6                     
  1991                           ; BSR set to: 0
  1992  0044C6  0E00               	movlw	0
  1993  0044C8  6FFC               	movwf	(sprintf@f+5)& (0+255),b
  1994  0044CA  0E00               	movlw	0
  1995  0044CC  6FFB               	movwf	(sprintf@f+4)& (0+255),b
  1996  0044CE                     
  1997                           ; BSR set to: 0
  1998  0044CE  0EF7               	movlw	low sprintf@f
  1999  0044D0  6FE3               	movwf	vfprintf@fp& (0+255),b
  2000  0044D2  0E00               	movlw	high sprintf@f
  2001  0044D4  6FE4               	movwf	(vfprintf@fp+1)& (0+255),b
  2002  0044D6  C0ED  F0E5         	movff	sprintf@fmt,vfprintf@fmt
  2003  0044DA  C0EE  F0E6         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2004  0044DE  0EF5               	movlw	low sprintf@ap
  2005  0044E0  6FE7               	movwf	vfprintf@ap& (0+255),b
  2006  0044E2  0E00               	movlw	high sprintf@ap
  2007  0044E4  6FE8               	movwf	(vfprintf@ap+1)& (0+255),b
  2008  0044E6  EC09  F021         	call	_vfprintf	;wreg free
  2009  0044EA  0100               	movlb	0	; () banked
  2010  0044EC  51F9               	movf	(sprintf@f+2)& (0+255),w,b
  2011  0044EE  25EB               	addwf	sprintf@s& (0+255),w,b
  2012  0044F0  6ED9               	movwf	fsr2l,c
  2013  0044F2  51FA               	movf	(sprintf@f+3)& (0+255),w,b
  2014  0044F4  21EC               	addwfc	(sprintf@s+1)& (0+255),w,b
  2015  0044F6  6EDA               	movwf	fsr2h,c
  2016  0044F8  0E00               	movlw	0
  2017  0044FA  6EDF               	movwf	indf2,c
  2018  0044FC                     
  2019                           ; BSR set to: 0
  2020  0044FC  0012               	return		;funcret
  2021  0044FE                     __end_of_sprintf:
  2022                           	opt callstack 0
  2023                           
  2024 ;; *************** function _vfprintf *****************
  2025 ;; Defined at:
  2026 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  fp              2  131[BANK0 ] PTR struct _IO_FILE
  2029 ;;		 -> sprintf@f(6), 
  2030 ;;  fmt             2  133[BANK0 ] PTR const unsigned char 
  2031 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2032 ;;		 -> STR_3(34), 
  2033 ;;  ap              2  135[BANK0 ] PTR PTR void 
  2034 ;;		 -> sprintf@ap(2), 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  cfmt            2  137[BANK0 ] PTR unsigned char 
  2037 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2038 ;;		 -> STR_3(34), 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  2  131[BANK0 ] int 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2048 ;;      Params:         0       6       0       0       0       0       0       0       0
  2049 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2051 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2052 ;;Total ram usage:        8 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    8
  2055 ;; This function calls:
  2056 ;;		_vfpfcnvrt
  2057 ;; This function is called by:
  2058 ;;		_sprintf
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text4
  2063  004212                     __ptext4:
  2064                           	opt callstack 0
  2065  004212                     _vfprintf:
  2066                           	opt callstack 20
  2067  004212                     
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2069  004212  C0E5  F0E9         	movff	vfprintf@fmt,vfprintf@cfmt
  2070  004216  C0E6  F0EA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2071  00421A                     
  2072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2073  00421A  0E00               	movlw	0
  2074  00421C  0101               	movlb	1	; () banked
  2075  00421E  6F31               	movwf	(_nout+1)& (0+255),b
  2076  004220  0E00               	movlw	0
  2077  004222  6F30               	movwf	_nout& (0+255),b
  2078                           
  2079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2080  004224  EF2B  F021         	goto	l8618
  2081  004228                     l8616:
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2085  004228  C0E3  F0C5         	movff	vfprintf@fp,vfpfcnvrt@fp
  2086  00422C  C0E4  F0C6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2087  004230  0EE9               	movlw	low vfprintf@cfmt
  2088  004232  0100               	movlb	0	; () banked
  2089  004234  6FC7               	movwf	vfpfcnvrt@fmt& (0+255),b
  2090  004236  0E00               	movlw	high vfprintf@cfmt
  2091  004238  6FC8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2092  00423A  C0E7  F0C9         	movff	vfprintf@ap,vfpfcnvrt@ap
  2093  00423E  C0E8  F0CA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2094  004242  EC53  F00A         	call	_vfpfcnvrt	;wreg free
  2095  004246  0100               	movlb	0	; () banked
  2096  004248  51C5               	movf	?_vfpfcnvrt& (0+255),w,b
  2097  00424A  0101               	movlb	1	; () banked
  2098  00424C  2730               	addwf	_nout& (0+255),f,b
  2099  00424E  0100               	movlb	0	; () banked
  2100  004250  51C6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2101  004252  0101               	movlb	1	; () banked
  2102  004254  2331               	addwfc	(_nout+1)& (0+255),f,b
  2103  004256                     l8618:
  2104                           
  2105                           ; BSR set to: 1
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2107  004256  C0E9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2108  00425A  C0EA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2109  00425E                     	if	0	;tblptru may be non-zero
  2110  00425E                     	endif
  2111  00425E                     	if	0	;tblptru may be non-zero
  2112  00425E                     	endif
  2113  00425E  0008               	tblrd		*
  2114  004260  50F5               	movf	tablat,w,c
  2115  004262  0900               	iorlw	0
  2116  004264  A4D8               	btfss	status,2,c
  2117  004266  EF37  F021         	goto	u10221
  2118  00426A  EF39  F021         	goto	u10220
  2119  00426E                     u10221:
  2120  00426E  EF14  F021         	goto	l8616
  2121  004272                     u10220:
  2122  004272                     
  2123                           ; BSR set to: 1
  2124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2125  004272  C130  F0E3         	movff	_nout,?_vfprintf
  2126  004276  C131  F0E4         	movff	_nout+1,?_vfprintf+1
  2127  00427A                     
  2128                           ; BSR set to: 1
  2129  00427A  0012               	return		;funcret
  2130  00427C                     __end_of_vfprintf:
  2131                           	opt callstack 0
  2132                           
  2133 ;; *************** function _vfpfcnvrt *****************
  2134 ;; Defined at:
  2135 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  2138 ;;		 -> sprintf@f(6), 
  2139 ;;  fmt             2  103[BANK0 ] PTR PTR unsigned char 
  2140 ;;		 -> vfprintf@cfmt(2), 
  2141 ;;  ap              2  105[BANK0 ] PTR PTR void 
  2142 ;;		 -> sprintf@ap(2), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  ll              8  111[BANK0 ] long long 
  2145 ;;  llu             8    0        unsigned long long 
  2146 ;;  f               4  123[BANK0 ] unsigned long long 
  2147 ;;  ct              3  127[BANK0 ] unsigned char [3]
  2148 ;;  vp              3    0        PTR void 
  2149 ;;  cp              3    0        PTR unsigned char 
  2150 ;;  i               2    0        int 
  2151 ;;  done            2    0        int 
  2152 ;;  c               1  130[BANK0 ] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2  101[BANK0 ] int 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2162 ;;      Params:         0       6       0       0       0       0       0       0       0
  2163 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2164 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2165 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2166 ;;Total ram usage:       30 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    7
  2169 ;; This function calls:
  2170 ;;		_atoi
  2171 ;;		_dtoa
  2172 ;;		_efgtoa
  2173 ;;		_fputc
  2174 ;;		_isdigit
  2175 ;;		_isupper
  2176 ;;		_strncmp
  2177 ;;		_tolower
  2178 ;; This function is called by:
  2179 ;;		_vfprintf
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text5
  2184  0014A6                     __ptext5:
  2185                           	opt callstack 0
  2186  0014A6                     _vfpfcnvrt:
  2187                           	opt callstack 20
  2188  0014A6                     
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2190  0014A6  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2191  0014AA  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2192  0014AE  CFDE FFF6          	movff	postinc2,tblptrl
  2193  0014B2  CFDD FFF7          	movff	postdec2,tblptrh
  2194  0014B6                     	if	0	;tblptru may be non-zero
  2195  0014B6                     	endif
  2196  0014B6                     	if	0	;tblptru may be non-zero
  2197  0014B6                     	endif
  2198  0014B6  0008               	tblrd		*
  2199  0014B8  50F5               	movf	tablat,w,c
  2200  0014BA  0A25               	xorlw	37
  2201  0014BC  A4D8               	btfss	status,2,c
  2202  0014BE  EF63  F00A         	goto	u9971
  2203  0014C2  EF65  F00A         	goto	u9970
  2204  0014C6                     u9971:
  2205  0014C6  EFD2  F00C         	goto	l8544
  2206  0014CA                     u9970:
  2207  0014CA                     
  2208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2209  0014CA  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2210  0014CE  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2211  0014D2  2ADE               	incf	postinc2,f,c
  2212  0014D4  0E00               	movlw	0
  2213  0014D6  22DD               	addwfc	postdec2,f,c
  2214  0014D8                     
  2215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2216  0014D8  0E00               	movlw	0
  2217  0014DA  0101               	movlb	1	; () banked
  2218  0014DC  6F33               	movwf	(_width+1)& (0+255),b
  2219  0014DE  0E00               	movlw	0
  2220  0014E0  6F32               	movwf	_width& (0+255),b
  2221  0014E2  C132  F055         	movff	_width,_flags
  2222  0014E6  C133  F056         	movff	_width+1,_flags+1
  2223  0014EA                     
  2224                           ; BSR set to: 1
  2225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2226  0014EA  6934               	setf	_prec& (0+255),b
  2227  0014EC  6935               	setf	(_prec+1)& (0+255),b
  2228  0014EE                     
  2229                           ; BSR set to: 1
  2230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2231  0014EE  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2232  0014F2  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2233  0014F6  CFDE FFF6          	movff	postinc2,tblptrl
  2234  0014FA  CFDD FFF7          	movff	postdec2,tblptrh
  2235  0014FE                     	if	0	;tblptru may be non-zero
  2236  0014FE                     	endif
  2237  0014FE                     	if	0	;tblptru may be non-zero
  2238  0014FE                     	endif
  2239  0014FE  0008               	tblrd		*
  2240  001500  50F5               	movf	tablat,w,c
  2241  001502  0A2E               	xorlw	46
  2242  001504  A4D8               	btfss	status,2,c
  2243  001506  EF87  F00A         	goto	u9981
  2244  00150A  EF89  F00A         	goto	u9980
  2245  00150E                     u9981:
  2246  00150E  EF07  F00B         	goto	l8480
  2247  001512                     u9980:
  2248  001512                     
  2249                           ; BSR set to: 1
  2250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2251  001512  0E00               	movlw	0
  2252  001514  6F35               	movwf	(_prec+1)& (0+255),b
  2253  001516  0E00               	movlw	0
  2254  001518  6F34               	movwf	_prec& (0+255),b
  2255  00151A                     
  2256                           ; BSR set to: 1
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2258  00151A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2259  00151E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2260  001522  2ADE               	incf	postinc2,f,c
  2261  001524  0E00               	movlw	0
  2262  001526  22DD               	addwfc	postdec2,f,c
  2263  001528                     
  2264                           ; BSR set to: 1
  2265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2266  001528  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2267  00152C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2268  001530  CFDE FFF6          	movff	postinc2,tblptrl
  2269  001534  CFDD FFF7          	movff	postdec2,tblptrh
  2270  001538                     	if	0	;tblptru may be non-zero
  2271  001538                     	endif
  2272  001538                     	if	0	;tblptru may be non-zero
  2273  001538                     	endif
  2274  001538  0008               	tblrd		*
  2275  00153A  50F5               	movf	tablat,w,c
  2276  00153C  0A2A               	xorlw	42
  2277  00153E  A4D8               	btfss	status,2,c
  2278  001540  EFA4  F00A         	goto	u9991
  2279  001544  EFA6  F00A         	goto	u9990
  2280  001548                     u9991:
  2281  001548  EFC3  F00A         	goto	l8470
  2282  00154C                     u9990:
  2283  00154C                     
  2284                           ; BSR set to: 1
  2285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2286  00154C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2287  001550  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2288  001554  2ADE               	incf	postinc2,f,c
  2289  001556  0E00               	movlw	0
  2290  001558  22DD               	addwfc	postdec2,f,c
  2291                           
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2293  00155A  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2294  00155E  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2295  001562  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2296  001566  0E02               	movlw	2
  2297  001568  26DE               	addwf	postinc2,f,c
  2298  00156A  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2299  00156E  0E00               	movlw	0
  2300  001570  22DD               	addwfc	postdec2,f,c
  2301  001572  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2302  001576  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2303  00157A  CFDE F134          	movff	postinc2,_prec
  2304  00157E  CFDD F135          	movff	postdec2,_prec+1
  2305                           
  2306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2307  001582  EF07  F00B         	goto	l8480
  2308  001586                     l8470:
  2309                           
  2310                           ; BSR set to: 1
  2311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2312  001586  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2313  00158A  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2314  00158E  CFDE F00D          	movff	postinc2,atoi@s
  2315  001592  CFDD F00E          	movff	postdec2,atoi@s+1
  2316  001596  EC63  F017         	call	_atoi	;wreg free
  2317  00159A  C00D  F134         	movff	?_atoi,_prec
  2318  00159E  C00E  F135         	movff	?_atoi+1,_prec+1
  2319                           
  2320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2321  0015A2  EFDA  F00A         	goto	l8474
  2322  0015A6                     l8472:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2326  0015A6  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2327  0015AA  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2328  0015AE  2ADE               	incf	postinc2,f,c
  2329  0015B0  0E00               	movlw	0
  2330  0015B2  22DD               	addwfc	postdec2,f,c
  2331  0015B4                     l8474:
  2332  0015B4  0ED0               	movlw	208
  2333  0015B6  0100               	movlb	0	; () banked
  2334  0015B8  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  2335  0015BA  0EFF               	movlw	255
  2336  0015BC  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2337  0015BE  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  0015C2  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  0015C6  CFDE FFF6          	movff	postinc2,tblptrl
  2340  0015CA  CFDD FFF7          	movff	postdec2,tblptrh
  2341  0015CE                     	if	0	;tblptru may be non-zero
  2342  0015CE                     	endif
  2343  0015CE                     	if	0	;tblptru may be non-zero
  2344  0015CE                     	endif
  2345  0015CE  0008               	tblrd		*
  2346  0015D0  50F5               	movf	tablat,w,c
  2347  0015D2  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2348  0015D4  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2349  0015D6  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  2350  0015D8  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2351  0015DA  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2352  0015DC  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2353  0015DE  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2354  0015E0  E10A               	bnz	u10000
  2355  0015E2  0E0A               	movlw	10
  2356  0015E4  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2357  0015E6  A0D8               	btfss	status,0,c
  2358  0015E8  EFF8  F00A         	goto	u10001
  2359  0015EC  EFFB  F00A         	goto	u10000
  2360  0015F0                     u10001:
  2361  0015F0  0E01               	movlw	1
  2362  0015F2  EFFC  F00A         	goto	u10010
  2363  0015F6                     u10000:
  2364  0015F6  0E00               	movlw	0
  2365  0015F8                     u10010:
  2366  0015F8  6FD7               	movwf	_vfpfcnvrt$911& (0+255),b
  2367  0015FA  6BD8               	clrf	(_vfpfcnvrt$911+1)& (0+255),b
  2368  0015FC                     
  2369                           ; BSR set to: 0
  2370  0015FC  51D7               	movf	_vfpfcnvrt$911& (0+255),w,b
  2371  0015FE  11D8               	iorwf	(_vfpfcnvrt$911+1)& (0+255),w,b
  2372  001600  A4D8               	btfss	status,2,c
  2373  001602  EF05  F00B         	goto	u10021
  2374  001606  EF07  F00B         	goto	u10020
  2375  00160A                     u10021:
  2376  00160A  EFD3  F00A         	goto	l8472
  2377  00160E                     u10020:
  2378  00160E                     l8480:
  2379                           
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2381  00160E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2382  001612  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2383  001616  CFDE FFF6          	movff	postinc2,tblptrl
  2384  00161A  CFDD FFF7          	movff	postdec2,tblptrh
  2385  00161E                     	if	0	;tblptru may be non-zero
  2386  00161E                     	endif
  2387  00161E                     	if	0	;tblptru may be non-zero
  2388  00161E                     	endif
  2389  00161E  0008               	tblrd		*
  2390  001620  50F5               	movf	tablat,w,c
  2391  001622  6E0C               	movwf	tolower@c^0,c
  2392  001624  6A0D               	clrf	(tolower@c+1)^0,c
  2393  001626  EC73  F021         	call	_tolower	;wreg free
  2394  00162A  500C               	movf	?_tolower^0,w,c
  2395  00162C  0100               	movlb	0	; () banked
  2396  00162E  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  2397  001630                     
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2400  001630  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  2401  001632  B4D8               	btfsc	status,2,c
  2402  001634  EF1E  F00B         	goto	u10031
  2403  001638  EF20  F00B         	goto	u10030
  2404  00163C                     u10031:
  2405  00163C  EF5A  F00B         	goto	l8490
  2406  001640                     u10030:
  2407  001640                     
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2410  001640  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411  001644  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412  001648  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2413  00164C  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2414  001650  0E01               	movlw	1
  2415  001652  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2416  001654  0E00               	movlw	0
  2417  001656  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2418  001658  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2419  00165C  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2420  001660                     	if	0	;tblptru may be non-zero
  2421  001660                     	endif
  2422  001660                     	if	0	;tblptru may be non-zero
  2423  001660                     	endif
  2424  001660  0008               	tblrd		*
  2425  001662  50F5               	movf	tablat,w,c
  2426  001664  6E0C               	movwf	tolower@c^0,c
  2427  001666  6A0D               	clrf	(tolower@c+1)^0,c
  2428  001668  EC73  F021         	call	_tolower	;wreg free
  2429  00166C  500C               	movf	?_tolower^0,w,c
  2430  00166E  0100               	movlb	0	; () banked
  2431  001670  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2432  001672                     
  2433                           ; BSR set to: 0
  2434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2435  001672  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2436  001674  B4D8               	btfsc	status,2,c
  2437  001676  EF3F  F00B         	goto	u10041
  2438  00167A  EF41  F00B         	goto	u10040
  2439  00167E                     u10041:
  2440  00167E  EF5A  F00B         	goto	l8490
  2441  001682                     u10040:
  2442  001682                     
  2443                           ; BSR set to: 0
  2444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2445  001682  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2446  001686  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2447  00168A  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2448  00168E  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2449  001692  0E02               	movlw	2
  2450  001694  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2451  001696  0E00               	movlw	0
  2452  001698  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2453  00169A  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2454  00169E  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2455  0016A2                     	if	0	;tblptru may be non-zero
  2456  0016A2                     	endif
  2457  0016A2                     	if	0	;tblptru may be non-zero
  2458  0016A2                     	endif
  2459  0016A2  0008               	tblrd		*
  2460  0016A4  50F5               	movf	tablat,w,c
  2461  0016A6  6E0C               	movwf	tolower@c^0,c
  2462  0016A8  6A0D               	clrf	(tolower@c+1)^0,c
  2463  0016AA  EC73  F021         	call	_tolower	;wreg free
  2464  0016AE  500C               	movf	?_tolower^0,w,c
  2465  0016B0  0100               	movlb	0	; () banked
  2466  0016B2  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2467  0016B4                     l8490:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2471  0016B4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  0016B8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  0016BC  CFDE FFF6          	movff	postinc2,tblptrl
  2474  0016C0  CFDD FFF7          	movff	postdec2,tblptrh
  2475  0016C4                     	if	0	;tblptru may be non-zero
  2476  0016C4                     	endif
  2477  0016C4                     	if	0	;tblptru may be non-zero
  2478  0016C4                     	endif
  2479  0016C4  0008               	tblrd		*
  2480  0016C6  50F5               	movf	tablat,w,c
  2481  0016C8  0A64               	xorlw	100
  2482  0016CA  B4D8               	btfsc	status,2,c
  2483  0016CC  EF6A  F00B         	goto	u10051
  2484  0016D0  EF6C  F00B         	goto	u10050
  2485  0016D4                     u10051:
  2486  0016D4  EF7E  F00B         	goto	l8494
  2487  0016D8                     u10050:
  2488  0016D8                     
  2489                           ; BSR set to: 0
  2490  0016D8  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2491  0016DC  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2492  0016E0  CFDE FFF6          	movff	postinc2,tblptrl
  2493  0016E4  CFDD FFF7          	movff	postdec2,tblptrh
  2494  0016E8                     	if	0	;tblptru may be non-zero
  2495  0016E8                     	endif
  2496  0016E8                     	if	0	;tblptru may be non-zero
  2497  0016E8                     	endif
  2498  0016E8  0008               	tblrd		*
  2499  0016EA  50F5               	movf	tablat,w,c
  2500  0016EC  0A69               	xorlw	105
  2501  0016EE  A4D8               	btfss	status,2,c
  2502  0016F0  EF7C  F00B         	goto	u10061
  2503  0016F4  EF7E  F00B         	goto	u10060
  2504  0016F8                     u10061:
  2505  0016F8  EFBE  F00B         	goto	l8500
  2506  0016FC                     u10060:
  2507  0016FC                     l8494:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2511  0016FC  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512  001700  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513  001704  2ADE               	incf	postinc2,f,c
  2514  001706  0E00               	movlw	0
  2515  001708  22DD               	addwfc	postdec2,f,c
  2516                           
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2518  00170A  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2519  00170E  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2520  001712  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2521  001716  0E02               	movlw	2
  2522  001718  26DE               	addwf	postinc2,f,c
  2523  00171A  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2524  00171E  0E00               	movlw	0
  2525  001720  22DD               	addwfc	postdec2,f,c
  2526  001722  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2527  001726  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2528  00172A  CFDE F0CF          	movff	postinc2,vfpfcnvrt@ll
  2529  00172E  CFDD F0D0          	movff	postdec2,vfpfcnvrt@ll+1
  2530  001732  0E00               	movlw	0
  2531  001734  BFD0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2532  001736  0EFF               	movlw	-1
  2533  001738  6FD1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2534  00173A  6FD2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2535  00173C  6FD3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2536  00173E  6FD4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2537  001740  6FD5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2538  001742  6FD6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2539  001744                     
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2542  001744  C0C5  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  2543  001748  C0C6  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2544  00174C  C0CF  F023         	movff	vfpfcnvrt@ll,dtoa@d
  2545  001750  C0D0  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2546  001754  C0D1  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2547  001758  C0D2  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2548  00175C  C0D3  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2549  001760  C0D4  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2550  001764  C0D5  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2551  001768  C0D6  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2552  00176C  EC31  F013         	call	_dtoa	;wreg free
  2553  001770  C021  F0C5         	movff	?_dtoa,?_vfpfcnvrt
  2554  001774  C022  F0C6         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2555  001778  EFED  F00C         	goto	l840
  2556  00177C                     l8500:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2560  00177C  0E66               	movlw	102
  2561  00177E  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2562  001780  A4D8               	btfss	status,2,c
  2563  001782  EFC5  F00B         	goto	u10071
  2564  001786  EFC7  F00B         	goto	u10070
  2565  00178A                     u10071:
  2566  00178A  EF07  F00C         	goto	l8512
  2567  00178E                     u10070:
  2568  00178E                     
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2571  00178E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2572  001792  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2573  001796  CFDE FFF6          	movff	postinc2,tblptrl
  2574  00179A  CFDD FFF7          	movff	postdec2,tblptrh
  2575  00179E                     	if	0	;tblptru may be non-zero
  2576  00179E                     	endif
  2577  00179E                     	if	0	;tblptru may be non-zero
  2578  00179E                     	endif
  2579  00179E  0008               	tblrd		*
  2580  0017A0  CFF5 F0E2          	movff	tablat,vfpfcnvrt@c
  2581  0017A4                     
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2584  0017A4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2585  0017A8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2586  0017AC  2ADE               	incf	postinc2,f,c
  2587  0017AE  0E00               	movlw	0
  2588  0017B0  22DD               	addwfc	postdec2,f,c
  2589  0017B2                     
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2592  0017B2  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2593  0017B6  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2594  0017BA  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2595  0017BE  0E04               	movlw	4
  2596  0017C0  26DE               	addwf	postinc2,f,c
  2597  0017C2  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2598  0017C6  0E00               	movlw	0
  2599  0017C8  22DD               	addwfc	postdec2,f,c
  2600  0017CA  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2601  0017CE  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2602  0017D2  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2603  0017D6  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2604  0017DA  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2605  0017DE  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2606  0017E2                     l8508:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2610  0017E2  C0C5  F081         	movff	vfpfcnvrt@fp,efgtoa@fp
  2611  0017E6  C0C6  F082         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2612  0017EA  C0DB  F083         	movff	vfpfcnvrt@f,efgtoa@f
  2613  0017EE  C0DC  F084         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2614  0017F2  C0DD  F085         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2615  0017F6  C0DE  F086         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2616  0017FA  C0E2  F087         	movff	vfpfcnvrt@c,efgtoa@c
  2617  0017FE  EC73  F004         	call	_efgtoa	;wreg free
  2618  001802  C081  F0C5         	movff	?_efgtoa,?_vfpfcnvrt
  2619  001806  C082  F0C6         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2620  00180A  EFED  F00C         	goto	l840
  2621  00180E                     l8512:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2625  00180E  0EDF               	movlw	low vfpfcnvrt@ct
  2626  001810  6E06               	movwf	strncmp@_l^0,c
  2627  001812  0E00               	movlw	high vfpfcnvrt@ct
  2628  001814  6E07               	movwf	(strncmp@_l+1)^0,c
  2629  001816  0EE2               	movlw	low STR_20
  2630  001818  6E08               	movwf	strncmp@_r^0,c
  2631  00181A  0E08               	movlw	high STR_20
  2632  00181C  6E09               	movwf	(strncmp@_r+1)^0,c
  2633  00181E  0E00               	movlw	0
  2634  001820  6E0B               	movwf	(strncmp@n+1)^0,c
  2635  001822  0E02               	movlw	2
  2636  001824  6E0A               	movwf	strncmp@n^0,c
  2637  001826  EC8A  F01D         	call	_strncmp	;wreg free
  2638  00182A  5006               	movf	?_strncmp^0,w,c
  2639  00182C  1007               	iorwf	(?_strncmp+1)^0,w,c
  2640  00182E  A4D8               	btfss	status,2,c
  2641  001830  EF1C  F00C         	goto	u10081
  2642  001834  EF1E  F00C         	goto	u10080
  2643  001838                     u10081:
  2644  001838  EF9A  F00C         	goto	l8528
  2645  00183C                     u10080:
  2646  00183C                     
  2647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2648  00183C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2649  001840  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2650  001844  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2651  001848  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2652  00184C  0E01               	movlw	1
  2653  00184E  0100               	movlb	0	; () banked
  2654  001850  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2655  001852  0E00               	movlw	0
  2656  001854  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2657  001856  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2658  00185A  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2659  00185E                     	if	0	;tblptru may be non-zero
  2660  00185E                     	endif
  2661  00185E                     	if	0	;tblptru may be non-zero
  2662  00185E                     	endif
  2663  00185E  0008               	tblrd		*
  2664  001860  CFF5 F0E2          	movff	tablat,vfpfcnvrt@c
  2665  001864  0EBF               	movlw	191
  2666  001866  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  2667  001868  0EFF               	movlw	255
  2668  00186A  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2669  00186C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2670  001870  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2671  001874  CFDE FFF6          	movff	postinc2,tblptrl
  2672  001878  CFDD FFF7          	movff	postdec2,tblptrh
  2673  00187C                     	if	0	;tblptru may be non-zero
  2674  00187C                     	endif
  2675  00187C                     	if	0	;tblptru may be non-zero
  2676  00187C                     	endif
  2677  00187C  0008               	tblrd		*
  2678  00187E  50F5               	movf	tablat,w,c
  2679  001880  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2680  001882  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2681  001884  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  2682  001886  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2683  001888  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2684  00188A  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2685  00188C  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2686  00188E  E10A               	bnz	u10090
  2687  001890  0E1A               	movlw	26
  2688  001892  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2689  001894  A0D8               	btfss	status,0,c
  2690  001896  EF4F  F00C         	goto	u10091
  2691  00189A  EF52  F00C         	goto	u10090
  2692  00189E                     u10091:
  2693  00189E  0E01               	movlw	1
  2694  0018A0  EF53  F00C         	goto	u10100
  2695  0018A4                     u10090:
  2696  0018A4  0E00               	movlw	0
  2697  0018A6                     u10100:
  2698  0018A6  6FD9               	movwf	_vfpfcnvrt$916& (0+255),b
  2699  0018A8  6BDA               	clrf	(_vfpfcnvrt$916+1)& (0+255),b
  2700  0018AA                     
  2701                           ; BSR set to: 0
  2702  0018AA  51D9               	movf	_vfpfcnvrt$916& (0+255),w,b
  2703  0018AC  11DA               	iorwf	(_vfpfcnvrt$916+1)& (0+255),w,b
  2704  0018AE  B4D8               	btfsc	status,2,c
  2705  0018B0  EF5C  F00C         	goto	u10111
  2706  0018B4  EF5E  F00C         	goto	u10110
  2707  0018B8                     u10111:
  2708  0018B8  EF78  F00C         	goto	l8522
  2709  0018BC                     u10110:
  2710  0018BC                     
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2713  0018BC  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2714  0018C0  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2715  0018C4  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2716  0018C8  0E04               	movlw	4
  2717  0018CA  26DE               	addwf	postinc2,f,c
  2718  0018CC  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2719  0018D0  0E00               	movlw	0
  2720  0018D2  22DD               	addwfc	postdec2,f,c
  2721  0018D4  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2722  0018D8  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2723  0018DC  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2724  0018E0  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2725  0018E4  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2726  0018E8  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2727                           
  2728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2729  0018EC  EF90  F00C         	goto	l848
  2730  0018F0                     l8522:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2734  0018F0  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2735  0018F4  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2736  0018F8  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2737  0018FC  0E04               	movlw	4
  2738  0018FE  26DE               	addwf	postinc2,f,c
  2739  001900  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2740  001904  0E00               	movlw	0
  2741  001906  22DD               	addwfc	postdec2,f,c
  2742  001908  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2743  00190C  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2744  001910  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2745  001914  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2746  001918  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2747  00191C  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2748  001920                     l848:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2752  001920  0E02               	movlw	2
  2753  001922  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2754  001926  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2755  00192A  26DE               	addwf	postinc2,f,c
  2756  00192C  0E00               	movlw	0
  2757  00192E  22DD               	addwfc	postdec2,f,c
  2758  001930  EFF1  F00B         	goto	l8508
  2759  001934                     l8528:
  2760                           
  2761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2762  001934  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2763  001938  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2764  00193C  CFDE FFF6          	movff	postinc2,tblptrl
  2765  001940  CFDD FFF7          	movff	postdec2,tblptrh
  2766  001944                     	if	0	;tblptru may be non-zero
  2767  001944                     	endif
  2768  001944                     	if	0	;tblptru may be non-zero
  2769  001944                     	endif
  2770  001944  0008               	tblrd		*
  2771  001946  50F5               	movf	tablat,w,c
  2772  001948  0A25               	xorlw	37
  2773  00194A  A4D8               	btfss	status,2,c
  2774  00194C  EFAA  F00C         	goto	u10121
  2775  001950  EFAC  F00C         	goto	u10120
  2776  001954                     u10121:
  2777  001954  EFC4  F00C         	goto	l8538
  2778  001958                     u10120:
  2779  001958                     
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2781  001958  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2782  00195C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2783  001960  2ADE               	incf	postinc2,f,c
  2784  001962  0E00               	movlw	0
  2785  001964  22DD               	addwfc	postdec2,f,c
  2786  001966                     
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2788  001966  0E00               	movlw	0
  2789  001968  6E07               	movwf	(fputc@c+1)^0,c
  2790  00196A  0E25               	movlw	37
  2791  00196C  6E06               	movwf	fputc@c^0,c
  2792  00196E  C0C5  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2793  001972  C0C6  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2794  001976  ECF5  F01D         	call	_fputc	;wreg free
  2795  00197A                     l8534:
  2796                           
  2797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2798  00197A  0E00               	movlw	0
  2799  00197C  0100               	movlb	0	; () banked
  2800  00197E  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2801  001980  0E01               	movlw	1
  2802  001982  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2803  001984  EFED  F00C         	goto	l840
  2804  001988                     l8538:
  2805                           
  2806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2807  001988  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2808  00198C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2809  001990  2ADE               	incf	postinc2,f,c
  2810  001992  0E00               	movlw	0
  2811  001994  22DD               	addwfc	postdec2,f,c
  2812  001996                     
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2814  001996  0E00               	movlw	0
  2815  001998  0100               	movlb	0	; () banked
  2816  00199A  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2817  00199C  0E00               	movlw	0
  2818  00199E  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2819  0019A0  EFED  F00C         	goto	l840
  2820  0019A4                     l8544:
  2821                           
  2822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2823  0019A4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  0019A8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  0019AC  CFDE FFF6          	movff	postinc2,tblptrl
  2826  0019B0  CFDD FFF7          	movff	postdec2,tblptrh
  2827  0019B4                     	if	0	;tblptru may be non-zero
  2828  0019B4                     	endif
  2829  0019B4                     	if	0	;tblptru may be non-zero
  2830  0019B4                     	endif
  2831  0019B4  0008               	tblrd		*
  2832  0019B6  50F5               	movf	tablat,w,c
  2833  0019B8  6E06               	movwf	fputc@c^0,c
  2834  0019BA  6A07               	clrf	(fputc@c+1)^0,c
  2835  0019BC  C0C5  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2836  0019C0  C0C6  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2837  0019C4  ECF5  F01D         	call	_fputc	;wreg free
  2838  0019C8                     
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2840  0019C8  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2841  0019CC  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2842  0019D0  2ADE               	incf	postinc2,f,c
  2843  0019D2  0E00               	movlw	0
  2844  0019D4  22DD               	addwfc	postdec2,f,c
  2845  0019D6  EFBD  F00C         	goto	l8534
  2846  0019DA                     l840:
  2847  0019DA  0012               	return		;funcret
  2848  0019DC                     __end_of_vfpfcnvrt:
  2849                           	opt callstack 0
  2850                           
  2851 ;; *************** function _strncmp *****************
  2852 ;; Defined at:
  2853 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  2856 ;;		 -> vfpfcnvrt@ct(3), 
  2857 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  2858 ;;		 -> STR_22(3), 
  2859 ;;  n               2    9[COMRAM] unsigned int 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  r               2   14[COMRAM] PTR const unsigned char 
  2862 ;;		 -> STR_22(3), 
  2863 ;;  l               2   12[COMRAM] PTR const unsigned char 
  2864 ;;		 -> vfpfcnvrt@ct(3), 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  2    5[COMRAM] int 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2874 ;;      Params:         6       0       0       0       0       0       0       0       0
  2875 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2876 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2877 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2878 ;;Total ram usage:       11 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    2
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_vfpfcnvrt
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text6
  2889  003B14                     __ptext6:
  2890                           	opt callstack 0
  2891  003B14                     _strncmp:
  2892                           	opt callstack 24
  2893  003B14  C006  F00D         	movff	strncmp@_l,strncmp@l
  2894  003B18  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  2895  003B1C  C008  F00F         	movff	strncmp@_r,strncmp@r
  2896  003B20  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  2897  003B24  060A               	decf	strncmp@n^0,f,c
  2898  003B26  A0D8               	btfss	status,0,c
  2899  003B28  060B               	decf	(strncmp@n+1)^0,f,c
  2900  003B2A  280A               	incf	strncmp@n^0,w,c
  2901  003B2C  E106               	bnz	u9921
  2902  003B2E  280B               	incf	(strncmp@n+1)^0,w,c
  2903  003B30  A4D8               	btfss	status,2,c
  2904  003B32  EF9D  F01D         	goto	u9921
  2905  003B36  EF9F  F01D         	goto	u9920
  2906  003B3A                     u9921:
  2907  003B3A  EFAC  F01D         	goto	l8440
  2908  003B3E                     u9920:
  2909  003B3E  0E00               	movlw	0
  2910  003B40  6E07               	movwf	(?_strncmp+1)^0,c
  2911  003B42  0E00               	movlw	0
  2912  003B44  6E06               	movwf	?_strncmp^0,c
  2913  003B46  EFF4  F01D         	goto	l1672
  2914  003B4A                     l8438:
  2915  003B4A  4A0D               	infsnz	strncmp@l^0,f,c
  2916  003B4C  2A0E               	incf	(strncmp@l+1)^0,f,c
  2917  003B4E  4A0F               	infsnz	strncmp@r^0,f,c
  2918  003B50  2A10               	incf	(strncmp@r+1)^0,f,c
  2919  003B52  060A               	decf	strncmp@n^0,f,c
  2920  003B54  A0D8               	btfss	status,0,c
  2921  003B56  060B               	decf	(strncmp@n+1)^0,f,c
  2922  003B58                     l8440:
  2923  003B58  C00D  FFD9         	movff	strncmp@l,fsr2l
  2924  003B5C  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2925  003B60  50DF               	movf	indf2,w,c
  2926  003B62  B4D8               	btfsc	status,2,c
  2927  003B64  EFB6  F01D         	goto	u9931
  2928  003B68  EFB8  F01D         	goto	u9930
  2929  003B6C                     u9931:
  2930  003B6C  EFE3  F01D         	goto	l8448
  2931  003B70                     u9930:
  2932  003B70  C00F  FFF6         	movff	strncmp@r,tblptrl
  2933  003B74  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2934  003B78                     	if	0	;tblptru may be non-zero
  2935  003B78                     	endif
  2936  003B78                     	if	0	;tblptru may be non-zero
  2937  003B78                     	endif
  2938  003B78  0008               	tblrd		*
  2939  003B7A  50F5               	movf	tablat,w,c
  2940  003B7C  0900               	iorlw	0
  2941  003B7E  B4D8               	btfsc	status,2,c
  2942  003B80  EFC4  F01D         	goto	u9941
  2943  003B84  EFC6  F01D         	goto	u9940
  2944  003B88                     u9941:
  2945  003B88  EFE3  F01D         	goto	l8448
  2946  003B8C                     u9940:
  2947  003B8C  500A               	movf	strncmp@n^0,w,c
  2948  003B8E  100B               	iorwf	(strncmp@n+1)^0,w,c
  2949  003B90  B4D8               	btfsc	status,2,c
  2950  003B92  EFCD  F01D         	goto	u9951
  2951  003B96  EFCF  F01D         	goto	u9950
  2952  003B9A                     u9951:
  2953  003B9A  EFE3  F01D         	goto	l8448
  2954  003B9E                     u9950:
  2955  003B9E  C00D  FFD9         	movff	strncmp@l,fsr2l
  2956  003BA2  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2957  003BA6  50DF               	movf	indf2,w,c
  2958  003BA8  6E0C               	movwf	??_strncmp^0,c
  2959  003BAA  C00F  FFF6         	movff	strncmp@r,tblptrl
  2960  003BAE  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2961  003BB2                     	if	0	;tblptru may be non-zero
  2962  003BB2                     	endif
  2963  003BB2                     	if	0	;tblptru may be non-zero
  2964  003BB2                     	endif
  2965  003BB2  0008               	tblrd		*
  2966  003BB4  50F5               	movf	tablat,w,c
  2967  003BB6  180C               	xorwf	??_strncmp^0,w,c
  2968  003BB8  B4D8               	btfsc	status,2,c
  2969  003BBA  EFE1  F01D         	goto	u9961
  2970  003BBE  EFE3  F01D         	goto	u9960
  2971  003BC2                     u9961:
  2972  003BC2  EFA5  F01D         	goto	l8438
  2973  003BC6                     u9960:
  2974  003BC6                     l8448:
  2975  003BC6  C00D  FFD9         	movff	strncmp@l,fsr2l
  2976  003BCA  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2977  003BCE  50DF               	movf	indf2,w,c
  2978  003BD0  6E0C               	movwf	??_strncmp^0,c
  2979  003BD2  C00F  FFF6         	movff	strncmp@r,tblptrl
  2980  003BD6  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2981  003BDA                     	if	0	;tblptru may be non-zero
  2982  003BDA                     	endif
  2983  003BDA                     	if	0	;tblptru may be non-zero
  2984  003BDA                     	endif
  2985  003BDA  0008               	tblrd		*
  2986  003BDC  50F5               	movf	tablat,w,c
  2987  003BDE  5C0C               	subwf	??_strncmp^0,w,c
  2988  003BE0  6E06               	movwf	?_strncmp^0,c
  2989  003BE2  6A07               	clrf	(?_strncmp+1)^0,c
  2990  003BE4  A0D8               	btfss	status,0,c
  2991  003BE6  0607               	decf	(?_strncmp+1)^0,f,c
  2992  003BE8                     l1672:
  2993  003BE8  0012               	return		;funcret
  2994  003BEA                     __end_of_strncmp:
  2995                           	opt callstack 0
  2996                           
  2997 ;; *************** function _efgtoa *****************
  2998 ;; Defined at:
  2999 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  fp              2   33[BANK0 ] PTR struct _IO_FILE
  3002 ;;		 -> sprintf@f(6), 
  3003 ;;  f               4   35[BANK0 ] PTR struct _IO_FILE
  3004 ;;  c               1   39[BANK0 ] unsigned char 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  u               4   97[BANK0 ] unsigned char 
  3007 ;;  g               4   89[BANK0 ] unsigned char 
  3008 ;;  l               4   83[BANK0 ] unsigned char 
  3009 ;;  h               4   79[BANK0 ] unsigned char 
  3010 ;;  ou              4   45[BANK0 ] unsigned char 
  3011 ;;  n               2   95[BANK0 ] int 
  3012 ;;  e               2   93[BANK0 ] int 
  3013 ;;  i               2   87[BANK0 ] int 
  3014 ;;  w               2   76[BANK0 ] int 
  3015 ;;  p               2   73[BANK0 ] int 
  3016 ;;  sign            2   71[BANK0 ] int 
  3017 ;;  d               2   69[BANK0 ] int 
  3018 ;;  ne              2   67[BANK0 ] int 
  3019 ;;  m               2   65[BANK0 ] int 
  3020 ;;  pp              2   63[BANK0 ] int 
  3021 ;;  t               2   61[BANK0 ] int 
  3022 ;;  mode            1   78[BANK0 ] unsigned char 
  3023 ;;  nmode           1   75[BANK0 ] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2   33[BANK0 ] int 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3033 ;;      Params:         0       7       0       0       0       0       0       0       0
  3034 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3035 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3036 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3037 ;;Total ram usage:       68 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    6
  3040 ;; This function calls:
  3041 ;;		___awdiv
  3042 ;;		___awmod
  3043 ;;		___fladd
  3044 ;;		___fldiv
  3045 ;;		___fleq
  3046 ;;		___flge
  3047 ;;		___flmul
  3048 ;;		___flneg
  3049 ;;		___flsub
  3050 ;;		___fltol
  3051 ;;		___fpclassifyf
  3052 ;;		_floorf
  3053 ;;		_isupper
  3054 ;;		_pad
  3055 ;;		_strcpy
  3056 ;;		_tolower
  3057 ;; This function is called by:
  3058 ;;		_vfpfcnvrt
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text7
  3063  0008E6                     __ptext7:
  3064                           	opt callstack 0
  3065  0008E6                     _efgtoa:
  3066                           	opt callstack 20
  3067  0008E6                     
  3068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3069  0008E6  0E00               	movlw	0
  3070  0008E8  0100               	movlb	0	; () banked
  3071  0008EA  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3072  0008EC  0E00               	movlw	0
  3073  0008EE  6FA7               	movwf	efgtoa@sign& (0+255),b
  3074  0008F0                     
  3075                           ; BSR set to: 0
  3076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3077  0008F0  C083  F0B9         	movff	efgtoa@f,efgtoa@g
  3078  0008F4  C084  F0BA         	movff	efgtoa@f+1,efgtoa@g+1
  3079  0008F8  C085  F0BB         	movff	efgtoa@f+2,efgtoa@g+2
  3080  0008FC  C086  F0BC         	movff	efgtoa@f+3,efgtoa@g+3
  3081  000900                     
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3084  000900  BFBC               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3085  000902  EF87  F004         	goto	u9330
  3086  000906  EF85  F004         	goto	u9331
  3087  00090A                     u9331:
  3088  00090A  EF9D  F004         	goto	l8102
  3089  00090E                     u9330:
  3090  00090E                     
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3093  00090E  0E00               	movlw	0
  3094  000910  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3095  000912  0E01               	movlw	1
  3096  000914  6FA7               	movwf	efgtoa@sign& (0+255),b
  3097  000916                     
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3100  000916  C0B9  F006         	movff	efgtoa@g,___flneg@f1
  3101  00091A  C0BA  F007         	movff	efgtoa@g+1,___flneg@f1+1
  3102  00091E  C0BB  F008         	movff	efgtoa@g+2,___flneg@f1+2
  3103  000922  C0BC  F009         	movff	efgtoa@g+3,___flneg@f1+3
  3104  000926  ECBC  F023         	call	___flneg	;wreg free
  3105  00092A  C006  F0B9         	movff	?___flneg,efgtoa@g
  3106  00092E  C007  F0BA         	movff	?___flneg+1,efgtoa@g+1
  3107  000932  C008  F0BB         	movff	?___flneg+2,efgtoa@g+2
  3108  000936  C009  F0BC         	movff	?___flneg+3,efgtoa@g+3
  3109  00093A                     l8102:
  3110                           
  3111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3112  00093A  0E00               	movlw	0
  3113  00093C  0100               	movlb	0	; () banked
  3114  00093E  6FC0               	movwf	(efgtoa@n+1)& (0+255),b
  3115  000940  0E00               	movlw	0
  3116  000942  6FBF               	movwf	efgtoa@n& (0+255),b
  3117  000944                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3120  000944  C132  F0AC         	movff	_width,efgtoa@w
  3121  000948  C133  F0AD         	movff	_width+1,efgtoa@w+1
  3122  00094C                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3125  00094C  51A7               	movf	efgtoa@sign& (0+255),w,b
  3126  00094E  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3127  000950  A4D8               	btfss	status,2,c
  3128  000952  EFAD  F004         	goto	u9341
  3129  000956  EFAF  F004         	goto	u9340
  3130  00095A                     u9341:
  3131  00095A  EFB6  F004         	goto	l8110
  3132  00095E                     u9340:
  3133  00095E                     
  3134                           ; BSR set to: 0
  3135  00095E  A455               	btfss	_flags^0,2,c
  3136  000960  EFB4  F004         	goto	u9351
  3137  000964  EFB6  F004         	goto	u9350
  3138  000968                     u9351:
  3139  000968  EFD0  F004         	goto	l8122
  3140  00096C                     u9350:
  3141  00096C                     l8110:
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3145  00096C  51A7               	movf	efgtoa@sign& (0+255),w,b
  3146  00096E  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3147  000970  A4D8               	btfss	status,2,c
  3148  000972  EFBD  F004         	goto	u9361
  3149  000976  EFBF  F004         	goto	u9360
  3150  00097A                     u9361:
  3151  00097A  EFC5  F004         	goto	l8114
  3152  00097E                     u9360:
  3153  00097E                     
  3154                           ; BSR set to: 0
  3155  00097E  0E00               	movlw	0
  3156  000980  6F92               	movwf	(_efgtoa$886+1)& (0+255),b
  3157  000982  0E2B               	movlw	43
  3158  000984  6F91               	movwf	_efgtoa$886& (0+255),b
  3159  000986  EFC9  F004         	goto	l8116
  3160  00098A                     l8114:
  3161                           
  3162                           ; BSR set to: 0
  3163  00098A  0E00               	movlw	0
  3164  00098C  6F92               	movwf	(_efgtoa$886+1)& (0+255),b
  3165  00098E  0E2D               	movlw	45
  3166  000990  6F91               	movwf	_efgtoa$886& (0+255),b
  3167  000992                     l8116:
  3168                           
  3169                           ; BSR set to: 0
  3170  000992  C091  F13D         	movff	_efgtoa$886,_dbuf
  3171  000996                     
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3174  000996  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3175  000998  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3176  00099A                     
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3179  00099A  07AC               	decf	efgtoa@w& (0+255),f,b
  3180  00099C  A0D8               	btfss	status,0,c
  3181  00099E  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  3182  0009A0                     l8122:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3186  0009A0  C0B9  F006         	movff	efgtoa@g,___fpclassifyf@x
  3187  0009A4  C0BA  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3188  0009A8  C0BB  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3189  0009AC  C0BC  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3190  0009B0  EC9D  F01C         	call	___fpclassifyf	;wreg free
  3191  0009B4  0406               	decf	?___fpclassifyf^0,w,c
  3192  0009B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3193  0009B8  A4D8               	btfss	status,2,c
  3194  0009BA  EFE1  F004         	goto	u9371
  3195  0009BE  EFE3  F004         	goto	u9370
  3196  0009C2                     u9371:
  3197  0009C2  EF3A  F005         	goto	l8140
  3198  0009C6                     u9370:
  3199  0009C6  0EBF               	movlw	191
  3200  0009C8  0100               	movlb	0	; () banked
  3201  0009CA  6F88               	movwf	??_efgtoa& (0+255),b
  3202  0009CC  0EFF               	movlw	255
  3203  0009CE  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3204  0009D0  5187               	movf	efgtoa@c& (0+255),w,b
  3205  0009D2  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  3206  0009D4  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  3207  0009D6  5188               	movf	??_efgtoa& (0+255),w,b
  3208  0009D8  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3209  0009DA  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3210  0009DC  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3211  0009DE  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3212  0009E0  E10A               	bnz	u9380
  3213  0009E2  0E1A               	movlw	26
  3214  0009E4  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3215  0009E6  A0D8               	btfss	status,0,c
  3216  0009E8  EFF8  F004         	goto	u9381
  3217  0009EC  EFFB  F004         	goto	u9380
  3218  0009F0                     u9381:
  3219  0009F0  0E01               	movlw	1
  3220  0009F2  EFFC  F004         	goto	u9390
  3221  0009F6                     u9380:
  3222  0009F6  0E00               	movlw	0
  3223  0009F8                     u9390:
  3224  0009F8  6F93               	movwf	_efgtoa$887& (0+255),b
  3225  0009FA  6B94               	clrf	(_efgtoa$887+1)& (0+255),b
  3226  0009FC                     
  3227                           ; BSR set to: 0
  3228  0009FC  5193               	movf	_efgtoa$887& (0+255),w,b
  3229  0009FE  1194               	iorwf	(_efgtoa$887+1)& (0+255),w,b
  3230  000A00  B4D8               	btfsc	status,2,c
  3231  000A02  EF05  F005         	goto	u9401
  3232  000A06  EF07  F005         	goto	u9400
  3233  000A0A                     u9401:
  3234  000A0A  EF15  F005         	goto	l8132
  3235  000A0E                     u9400:
  3236  000A0E                     
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3239  000A0E  0E3D               	movlw	low _dbuf
  3240  000A10  25BF               	addwf	efgtoa@n& (0+255),w,b
  3241  000A12  6E06               	movwf	strcpy@dest^0,c
  3242  000A14  0E01               	movlw	high _dbuf
  3243  000A16  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3244  000A18  6E07               	movwf	(strcpy@dest+1)^0,c
  3245  000A1A  0ED2               	movlw	low STR_12
  3246  000A1C  6E08               	movwf	strcpy@src^0,c
  3247  000A1E  0E08               	movlw	high STR_12
  3248  000A20  6E09               	movwf	(strcpy@src+1)^0,c
  3249  000A22  ECD2  F021         	call	_strcpy	;wreg free
  3250                           
  3251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3252  000A26  EF21  F005         	goto	l8134
  3253  000A2A                     l8132:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3257  000A2A  0E3D               	movlw	low _dbuf
  3258  000A2C  25BF               	addwf	efgtoa@n& (0+255),w,b
  3259  000A2E  6E06               	movwf	strcpy@dest^0,c
  3260  000A30  0E01               	movlw	high _dbuf
  3261  000A32  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3262  000A34  6E07               	movwf	(strcpy@dest+1)^0,c
  3263  000A36  0EDA               	movlw	low STR_13
  3264  000A38  6E08               	movwf	strcpy@src^0,c
  3265  000A3A  0E08               	movlw	high STR_13
  3266  000A3C  6E09               	movwf	(strcpy@src+1)^0,c
  3267  000A3E  ECD2  F021         	call	_strcpy	;wreg free
  3268  000A42                     l8134:
  3269                           
  3270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3271  000A42  0100               	movlb	0	; () banked
  3272  000A44  0EFD               	movlw	253
  3273  000A46  27AC               	addwf	efgtoa@w& (0+255),f,b
  3274  000A48  0EFF               	movlw	255
  3275  000A4A  23AD               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3276  000A4C                     l8136:
  3277                           
  3278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3279  000A4C  C081  F016         	movff	efgtoa@fp,pad@fp
  3280  000A50  C082  F017         	movff	efgtoa@fp+1,pad@fp+1
  3281  000A54  0E3D               	movlw	low _dbuf
  3282  000A56  6E18               	movwf	pad@buf^0,c
  3283  000A58  0E01               	movlw	high _dbuf
  3284  000A5A  6E19               	movwf	(pad@buf+1)^0,c
  3285  000A5C  C0AC  F01A         	movff	efgtoa@w,pad@p
  3286  000A60  C0AD  F01B         	movff	efgtoa@w+1,pad@p+1
  3287  000A64  ECBC  F01E         	call	_pad	;wreg free
  3288  000A68  C016  F081         	movff	?_pad,?_efgtoa
  3289  000A6C  C017  F082         	movff	?_pad+1,?_efgtoa+1
  3290  000A70  EF52  F00A         	goto	l748
  3291  000A74                     l8140:
  3292                           
  3293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3294  000A74  C0B9  F006         	movff	efgtoa@g,___fpclassifyf@x
  3295  000A78  C0BA  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3296  000A7C  C0BB  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3297  000A80  C0BC  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3298  000A84  EC9D  F01C         	call	___fpclassifyf	;wreg free
  3299  000A88  5006               	movf	?___fpclassifyf^0,w,c
  3300  000A8A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3301  000A8C  A4D8               	btfss	status,2,c
  3302  000A8E  EF4B  F005         	goto	u9411
  3303  000A92  EF4D  F005         	goto	u9410
  3304  000A96                     u9411:
  3305  000A96  EF8D  F005         	goto	l8158
  3306  000A9A                     u9410:
  3307  000A9A  0EBF               	movlw	191
  3308  000A9C  0100               	movlb	0	; () banked
  3309  000A9E  6F88               	movwf	??_efgtoa& (0+255),b
  3310  000AA0  0EFF               	movlw	255
  3311  000AA2  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3312  000AA4  5187               	movf	efgtoa@c& (0+255),w,b
  3313  000AA6  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  3314  000AA8  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  3315  000AAA  5188               	movf	??_efgtoa& (0+255),w,b
  3316  000AAC  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3317  000AAE  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3318  000AB0  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3319  000AB2  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3320  000AB4  E10A               	bnz	u9420
  3321  000AB6  0E1A               	movlw	26
  3322  000AB8  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3323  000ABA  A0D8               	btfss	status,0,c
  3324  000ABC  EF62  F005         	goto	u9421
  3325  000AC0  EF65  F005         	goto	u9420
  3326  000AC4                     u9421:
  3327  000AC4  0E01               	movlw	1
  3328  000AC6  EF66  F005         	goto	u9430
  3329  000ACA                     u9420:
  3330  000ACA  0E00               	movlw	0
  3331  000ACC                     u9430:
  3332  000ACC  6F95               	movwf	_efgtoa$891& (0+255),b
  3333  000ACE  6B96               	clrf	(_efgtoa$891+1)& (0+255),b
  3334  000AD0                     
  3335                           ; BSR set to: 0
  3336  000AD0  5195               	movf	_efgtoa$891& (0+255),w,b
  3337  000AD2  1196               	iorwf	(_efgtoa$891+1)& (0+255),w,b
  3338  000AD4  B4D8               	btfsc	status,2,c
  3339  000AD6  EF6F  F005         	goto	u9441
  3340  000ADA  EF71  F005         	goto	u9440
  3341  000ADE                     u9441:
  3342  000ADE  EF7F  F005         	goto	l8150
  3343  000AE2                     u9440:
  3344  000AE2                     
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3347  000AE2  0E3D               	movlw	low _dbuf
  3348  000AE4  25BF               	addwf	efgtoa@n& (0+255),w,b
  3349  000AE6  6E06               	movwf	strcpy@dest^0,c
  3350  000AE8  0E01               	movlw	high _dbuf
  3351  000AEA  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3352  000AEC  6E07               	movwf	(strcpy@dest+1)^0,c
  3353  000AEE  0ED6               	movlw	low STR_16
  3354  000AF0  6E08               	movwf	strcpy@src^0,c
  3355  000AF2  0E08               	movlw	high STR_16
  3356  000AF4  6E09               	movwf	(strcpy@src+1)^0,c
  3357  000AF6  ECD2  F021         	call	_strcpy	;wreg free
  3358                           
  3359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3360  000AFA  EF21  F005         	goto	l8134
  3361  000AFE                     l8150:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3365  000AFE  0E3D               	movlw	low _dbuf
  3366  000B00  25BF               	addwf	efgtoa@n& (0+255),w,b
  3367  000B02  6E06               	movwf	strcpy@dest^0,c
  3368  000B04  0E01               	movlw	high _dbuf
  3369  000B06  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3370  000B08  6E07               	movwf	(strcpy@dest+1)^0,c
  3371  000B0A  0EDE               	movlw	low STR_17
  3372  000B0C  6E08               	movwf	strcpy@src^0,c
  3373  000B0E  0E08               	movlw	high STR_17
  3374  000B10  6E09               	movwf	(strcpy@src+1)^0,c
  3375  000B12  ECD2  F021         	call	_strcpy	;wreg free
  3376  000B16  EF21  F005         	goto	l8134
  3377  000B1A                     l8158:
  3378                           
  3379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3380  000B1A  0E00               	movlw	0
  3381  000B1C  0100               	movlb	0	; () banked
  3382  000B1E  6FC1               	movwf	efgtoa@u& (0+255),b
  3383  000B20  0E00               	movlw	0
  3384  000B22  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  3385  000B24  0E80               	movlw	128
  3386  000B26  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  3387  000B28  0E3F               	movlw	63
  3388  000B2A  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  3389                           
  3390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3391  000B2C  0E00               	movlw	0
  3392  000B2E  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  3393  000B30  0E00               	movlw	0
  3394  000B32  6FBD               	movwf	efgtoa@e& (0+255),b
  3395  000B34                     
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3398  000B34  C0B9  F006         	movff	efgtoa@g,___fleq@ff1
  3399  000B38  C0BA  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  3400  000B3C  C0BB  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  3401  000B40  C0BC  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  3402  000B44  0E00               	movlw	0
  3403  000B46  6E0A               	movwf	___fleq@ff2^0,c
  3404  000B48  0E00               	movlw	0
  3405  000B4A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  3406  000B4C  0E00               	movlw	0
  3407  000B4E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  3408  000B50  0E00               	movlw	0
  3409  000B52  6E0D               	movwf	(___fleq@ff2+3)^0,c
  3410  000B54  EC75  F01F         	call	___fleq	;wreg free
  3411  000B58  B0D8               	btfsc	status,0,c
  3412  000B5A  EFB1  F005         	goto	u9451
  3413  000B5E  EFB3  F005         	goto	u9450
  3414  000B62                     u9451:
  3415  000B62  EF39  F006         	goto	l8176
  3416  000B66                     u9450:
  3417  000B66  EFD2  F005         	goto	l8168
  3418  000B6A                     l8164:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3422  000B6A  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3423  000B6E  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3424  000B72  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3425  000B76  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3426  000B7A  0E00               	movlw	0
  3427  000B7C  6F64               	movwf	___flmul@a& (0+255),b
  3428  000B7E  0E00               	movlw	0
  3429  000B80  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3430  000B82  0E20               	movlw	32
  3431  000B84  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3432  000B86  0E41               	movlw	65
  3433  000B88  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3434  000B8A  EC4E  F00F         	call	___flmul	;wreg free
  3435  000B8E  C060  F0C1         	movff	?___flmul,efgtoa@u
  3436  000B92  C061  F0C2         	movff	?___flmul+1,efgtoa@u+1
  3437  000B96  C062  F0C3         	movff	?___flmul+2,efgtoa@u+2
  3438  000B9A  C063  F0C4         	movff	?___flmul+3,efgtoa@u+3
  3439  000B9E                     
  3440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3441  000B9E  0100               	movlb	0	; () banked
  3442  000BA0  4BBD               	infsnz	efgtoa@e& (0+255),f,b
  3443  000BA2  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  3444  000BA4                     l8168:
  3445                           
  3446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3447  000BA4  C0B9  F075         	movff	efgtoa@g,___flge@ff1
  3448  000BA8  C0BA  F076         	movff	efgtoa@g+1,___flge@ff1+1
  3449  000BAC  C0BB  F077         	movff	efgtoa@g+2,___flge@ff1+2
  3450  000BB0  C0BC  F078         	movff	efgtoa@g+3,___flge@ff1+3
  3451  000BB4  0E00               	movlw	0
  3452  000BB6  0100               	movlb	0	; () banked
  3453  000BB8  6F64               	movwf	___flmul@a& (0+255),b
  3454  000BBA  0E00               	movlw	0
  3455  000BBC  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3456  000BBE  0E20               	movlw	32
  3457  000BC0  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3458  000BC2  0E41               	movlw	65
  3459  000BC4  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3460  000BC6  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3461  000BCA  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3462  000BCE  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3463  000BD2  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3464  000BD6  EC4E  F00F         	call	___flmul	;wreg free
  3465  000BDA  C060  F079         	movff	?___flmul,___flge@ff2
  3466  000BDE  C061  F07A         	movff	?___flmul+1,___flge@ff2+1
  3467  000BE2  C062  F07B         	movff	?___flmul+2,___flge@ff2+2
  3468  000BE6  C063  F07C         	movff	?___flmul+3,___flge@ff2+3
  3469  000BEA  EC1A  F01C         	call	___flge	;wreg free
  3470  000BEE  0100               	movlb	0	; () banked
  3471  000BF0  B0D8               	btfsc	status,0,c
  3472  000BF2  EFFD  F005         	goto	u9461
  3473  000BF6  EFFF  F005         	goto	u9460
  3474  000BFA                     u9461:
  3475  000BFA  EFB5  F005         	goto	l8164
  3476  000BFE                     u9460:
  3477  000BFE  EF1F  F006         	goto	l8174
  3478  000C02                     l8170:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3482  000C02  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  3483  000C06  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  3484  000C0A  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  3485  000C0E  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  3486  000C12  0E00               	movlw	0
  3487  000C14  6E3C               	movwf	___fldiv@a^0,c
  3488  000C16  0E00               	movlw	0
  3489  000C18  6E3D               	movwf	(___fldiv@a+1)^0,c
  3490  000C1A  0E20               	movlw	32
  3491  000C1C  6E3E               	movwf	(___fldiv@a+2)^0,c
  3492  000C1E  0E41               	movlw	65
  3493  000C20  6E3F               	movwf	(___fldiv@a+3)^0,c
  3494  000C22  EC64  F011         	call	___fldiv	;wreg free
  3495  000C26  C038  F0C1         	movff	?___fldiv,efgtoa@u
  3496  000C2A  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3497  000C2E  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3498  000C32  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3499  000C36                     
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3501  000C36  0100               	movlb	0	; () banked
  3502  000C38  07BD               	decf	efgtoa@e& (0+255),f,b
  3503  000C3A  A0D8               	btfss	status,0,c
  3504  000C3C  07BE               	decf	(efgtoa@e+1)& (0+255),f,b
  3505  000C3E                     l8174:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3509  000C3E  C0B9  F075         	movff	efgtoa@g,___flge@ff1
  3510  000C42  C0BA  F076         	movff	efgtoa@g+1,___flge@ff1+1
  3511  000C46  C0BB  F077         	movff	efgtoa@g+2,___flge@ff1+2
  3512  000C4A  C0BC  F078         	movff	efgtoa@g+3,___flge@ff1+3
  3513  000C4E  C0C1  F079         	movff	efgtoa@u,___flge@ff2
  3514  000C52  C0C2  F07A         	movff	efgtoa@u+1,___flge@ff2+1
  3515  000C56  C0C3  F07B         	movff	efgtoa@u+2,___flge@ff2+2
  3516  000C5A  C0C4  F07C         	movff	efgtoa@u+3,___flge@ff2+3
  3517  000C5E  EC1A  F01C         	call	___flge	;wreg free
  3518  000C62  0100               	movlb	0	; () banked
  3519  000C64  A0D8               	btfss	status,0,c
  3520  000C66  EF37  F006         	goto	u9471
  3521  000C6A  EF39  F006         	goto	u9470
  3522  000C6E                     u9471:
  3523  000C6E  EF01  F006         	goto	l8170
  3524  000C72                     u9470:
  3525  000C72                     l8176:
  3526                           
  3527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3528  000C72  C087  F00C         	movff	efgtoa@c,tolower@c
  3529  000C76  6A0D               	clrf	(tolower@c+1)^0,c
  3530  000C78  EC73  F021         	call	_tolower	;wreg free
  3531  000C7C  500C               	movf	?_tolower^0,w,c
  3532  000C7E  0100               	movlb	0	; () banked
  3533  000C80  6FAE               	movwf	efgtoa@mode& (0+255),b
  3534  000C82                     
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3537  000C82  C0AE  F0AB         	movff	efgtoa@mode,efgtoa@nmode
  3538  000C86                     
  3539                           ; BSR set to: 0
  3540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3541  000C86  0E67               	movlw	103
  3542  000C88  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3543  000C8A  A4D8               	btfss	status,2,c
  3544  000C8C  EF4A  F006         	goto	u9481
  3545  000C90  EF4C  F006         	goto	u9480
  3546  000C94                     u9481:
  3547  000C94  EF74  F006         	goto	l8190
  3548  000C98                     u9480:
  3549  000C98                     
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3552  000C98  0101               	movlb	1	; () banked
  3553  000C9A  5134               	movf	_prec& (0+255),w,b
  3554  000C9C  1135               	iorwf	(_prec+1)& (0+255),w,b
  3555  000C9E  A4D8               	btfss	status,2,c
  3556  000CA0  EF54  F006         	goto	u9491
  3557  000CA4  EF56  F006         	goto	u9490
  3558  000CA8                     u9491:
  3559  000CA8  EF5A  F006         	goto	l8186
  3560  000CAC                     u9490:
  3561  000CAC                     
  3562                           ; BSR set to: 1
  3563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3564  000CAC  0E00               	movlw	0
  3565  000CAE  6F35               	movwf	(_prec+1)& (0+255),b
  3566  000CB0  0E01               	movlw	1
  3567  000CB2  6F34               	movwf	_prec& (0+255),b
  3568  000CB4                     l8186:
  3569                           
  3570                           ; BSR set to: 1
  3571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3572  000CB4  BF35               	btfsc	(_prec+1)& (0+255),7,b
  3573  000CB6  EF67  F006         	goto	u9500
  3574  000CBA  5135               	movf	(_prec+1)& (0+255),w,b
  3575  000CBC  E106               	bnz	u9501
  3576  000CBE  0534               	decf	_prec& (0+255),w,b
  3577  000CC0  B0D8               	btfsc	status,0,c
  3578  000CC2  EF65  F006         	goto	u9501
  3579  000CC6  EF67  F006         	goto	u9500
  3580  000CCA                     u9501:
  3581  000CCA  EF6E  F006         	goto	l766
  3582  000CCE                     u9500:
  3583  000CCE                     l8188:
  3584                           
  3585                           ; BSR set to: 1
  3586  000CCE  0E00               	movlw	0
  3587  000CD0  0100               	movlb	0	; () banked
  3588  000CD2  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  3589  000CD4  0E06               	movlw	6
  3590  000CD6  6FA9               	movwf	efgtoa@p& (0+255),b
  3591  000CD8  EF7E  F006         	goto	l8196
  3592  000CDC                     l766:
  3593                           
  3594                           ; BSR set to: 1
  3595  000CDC  C134  F0A9         	movff	_prec,efgtoa@p
  3596  000CE0  C135  F0AA         	movff	_prec+1,efgtoa@p+1
  3597  000CE4  EF7E  F006         	goto	l8196
  3598  000CE8                     l8190:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3602  000CE8  0101               	movlb	1	; () banked
  3603  000CEA  BF35               	btfsc	(_prec+1)& (0+255),7,b
  3604  000CEC  EF7A  F006         	goto	u9511
  3605  000CF0  EF7C  F006         	goto	u9510
  3606  000CF4                     u9511:
  3607  000CF4  EF67  F006         	goto	l8188
  3608  000CF8                     u9510:
  3609  000CF8  EF6E  F006         	goto	l766
  3610  000CFC                     l8196:
  3611                           
  3612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3613  000CFC  0E67               	movlw	103
  3614  000CFE  0100               	movlb	0	; () banked
  3615  000D00  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3616  000D02  A4D8               	btfss	status,2,c
  3617  000D04  EF86  F006         	goto	u9521
  3618  000D08  EF88  F006         	goto	u9520
  3619  000D0C                     u9521:
  3620  000D0C  EFB7  F006         	goto	l8206
  3621  000D10                     u9520:
  3622  000D10                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3625  000D10  AFBE               	btfss	(efgtoa@e+1)& (0+255),7,b
  3626  000D12  EF96  F006         	goto	u9530
  3627  000D16  0EFC               	movlw	252
  3628  000D18  5DBD               	subwf	efgtoa@e& (0+255),w,b
  3629  000D1A  0EFF               	movlw	255
  3630  000D1C  59BE               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3631  000D1E  A0D8               	btfss	status,0,c
  3632  000D20  EF94  F006         	goto	u9531
  3633  000D24  EF96  F006         	goto	u9530
  3634  000D28                     u9531:
  3635  000D28  EFB5  F006         	goto	l8204
  3636  000D2C                     u9530:
  3637  000D2C                     
  3638                           ; BSR set to: 0
  3639  000D2C  0EFF               	movlw	255
  3640  000D2E  6F88               	movwf	??_efgtoa& (0+255),b
  3641  000D30  0EFF               	movlw	255
  3642  000D32  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3643  000D34  C0A9  F08A         	movff	efgtoa@p,??_efgtoa+2
  3644  000D38  C0AA  F08B         	movff	efgtoa@p+1,??_efgtoa+3
  3645  000D3C  5188               	movf	??_efgtoa& (0+255),w,b
  3646  000D3E  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3647  000D40  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3648  000D42  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3649  000D44  51BD               	movf	efgtoa@e& (0+255),w,b
  3650  000D46  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3651  000D48  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3652  000D4A  0A80               	xorlw	128
  3653  000D4C  6F8C               	movwf	(??_efgtoa+4)& (0+255),b
  3654  000D4E  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  3655  000D50  0A80               	xorlw	128
  3656  000D52  598C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3657  000D54  A0D8               	btfss	status,0,c
  3658  000D56  EFAF  F006         	goto	u9541
  3659  000D5A  EFB1  F006         	goto	u9540
  3660  000D5E                     u9541:
  3661  000D5E  EFB5  F006         	goto	l8204
  3662  000D62                     u9540:
  3663  000D62                     
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3666  000D62  0E66               	movlw	102
  3667  000D64  6FAB               	movwf	efgtoa@nmode& (0+255),b
  3668                           
  3669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3670  000D66  EFB7  F006         	goto	l8206
  3671  000D6A                     l8204:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3675  000D6A  0E65               	movlw	101
  3676  000D6C  6FAB               	movwf	efgtoa@nmode& (0+255),b
  3677  000D6E                     l8206:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3681  000D6E  C0A9  F0A1         	movff	efgtoa@p,efgtoa@m
  3682  000D72  C0AA  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  3683  000D76                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3686  000D76  0E67               	movlw	103
  3687  000D78  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3688  000D7A  A4D8               	btfss	status,2,c
  3689  000D7C  EFC2  F006         	goto	u9551
  3690  000D80  EFC4  F006         	goto	u9550
  3691  000D84                     u9551:
  3692  000D84  EFD4  F006         	goto	l8214
  3693  000D88                     u9550:
  3694  000D88                     
  3695                           ; BSR set to: 0
  3696  000D88  0E66               	movlw	102
  3697  000D8A  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  3698  000D8C  A4D8               	btfss	status,2,c
  3699  000D8E  EFCB  F006         	goto	u9561
  3700  000D92  EFCD  F006         	goto	u9560
  3701  000D96                     u9561:
  3702  000D96  EFD6  F006         	goto	l8216
  3703  000D9A                     u9560:
  3704  000D9A                     
  3705                           ; BSR set to: 0
  3706  000D9A  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3707  000D9C  EFD4  F006         	goto	u9570
  3708  000DA0  EFD2  F006         	goto	u9571
  3709  000DA4                     u9571:
  3710  000DA4  EFD6  F006         	goto	l8216
  3711  000DA8                     u9570:
  3712  000DA8                     l8214:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3716  000DA8  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  3717  000DAA  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  3718  000DAC                     l8216:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3722  000DAC  0E66               	movlw	102
  3723  000DAE  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  3724  000DB0  A4D8               	btfss	status,2,c
  3725  000DB2  EFDD  F006         	goto	u9581
  3726  000DB6  EFDF  F006         	goto	u9580
  3727  000DBA                     u9581:
  3728  000DBA  EFFF  F006         	goto	l8226
  3729  000DBE                     u9580:
  3730  000DBE                     
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3733  000DBE  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3734  000DC0  EFE6  F006         	goto	u9590
  3735  000DC4  EFE4  F006         	goto	u9591
  3736  000DC8                     u9591:
  3737  000DC8  EFF2  F006         	goto	l8222
  3738  000DCC                     u9590:
  3739  000DCC                     
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3742  000DCC  0E00               	movlw	0
  3743  000DCE  6FC1               	movwf	efgtoa@u& (0+255),b
  3744  000DD0  0E00               	movlw	0
  3745  000DD2  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  3746  000DD4  0E80               	movlw	128
  3747  000DD6  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  3748  000DD8  0E3F               	movlw	63
  3749  000DDA  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  3750                           
  3751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3752  000DDC  0E00               	movlw	0
  3753  000DDE  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  3754  000DE0  0E00               	movlw	0
  3755  000DE2  6FBD               	movwf	efgtoa@e& (0+255),b
  3756  000DE4                     l8222:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3760  000DE4  0E67               	movlw	103
  3761  000DE6  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3762  000DE8  B4D8               	btfsc	status,2,c
  3763  000DEA  EFF9  F006         	goto	u9601
  3764  000DEE  EFFB  F006         	goto	u9600
  3765  000DF2                     u9601:
  3766  000DF2  EFFF  F006         	goto	l8226
  3767  000DF6                     u9600:
  3768  000DF6                     
  3769                           ; BSR set to: 0
  3770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3771  000DF6  51BD               	movf	efgtoa@e& (0+255),w,b
  3772  000DF8  27A1               	addwf	efgtoa@m& (0+255),f,b
  3773  000DFA  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  3774  000DFC  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3775  000DFE                     l8226:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3779  000DFE  0E00               	movlw	0
  3780  000E00  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3781  000E02  0E00               	movlw	0
  3782  000E04  6FB7               	movwf	efgtoa@i& (0+255),b
  3783  000E06                     
  3784                           ; BSR set to: 0
  3785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3786  000E06  C0B9  F0AF         	movff	efgtoa@g,efgtoa@h
  3787  000E0A  C0BA  F0B0         	movff	efgtoa@g+1,efgtoa@h+1
  3788  000E0E  C0BB  F0B1         	movff	efgtoa@g+2,efgtoa@h+2
  3789  000E12  C0BC  F0B2         	movff	efgtoa@g+3,efgtoa@h+3
  3790  000E16                     
  3791                           ; BSR set to: 0
  3792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3793  000E16  C0C1  F08D         	movff	efgtoa@u,efgtoa@ou
  3794  000E1A  C0C2  F08E         	movff	efgtoa@u+1,efgtoa@ou+1
  3795  000E1E  C0C3  F08F         	movff	efgtoa@u+2,efgtoa@ou+2
  3796  000E22  C0C4  F090         	movff	efgtoa@u+3,efgtoa@ou+3
  3797                           
  3798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3799  000E26  EF90  F007         	goto	l8240
  3800  000E2A                     l8232:
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3804  000E2A  C0AF  F038         	movff	efgtoa@h,___fldiv@b
  3805  000E2E  C0B0  F039         	movff	efgtoa@h+1,___fldiv@b+1
  3806  000E32  C0B1  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  3807  000E36  C0B2  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  3808  000E3A  C0C1  F03C         	movff	efgtoa@u,___fldiv@a
  3809  000E3E  C0C2  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  3810  000E42  C0C3  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  3811  000E46  C0C4  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  3812  000E4A  EC64  F011         	call	___fldiv	;wreg free
  3813  000E4E  C038  F051         	movff	?___fldiv,floorf@x
  3814  000E52  C039  F052         	movff	?___fldiv+1,floorf@x+1
  3815  000E56  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  3816  000E5A  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  3817  000E5E  ECA0  F014         	call	_floorf	;wreg free
  3818  000E62  C051  F0B3         	movff	?_floorf,efgtoa@l
  3819  000E66  C052  F0B4         	movff	?_floorf+1,efgtoa@l+1
  3820  000E6A  C053  F0B5         	movff	?_floorf+2,efgtoa@l+2
  3821  000E6E  C054  F0B6         	movff	?_floorf+3,efgtoa@l+3
  3822                           
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3824  000E72  C0B3  F075         	movff	efgtoa@l,___fltol@f1
  3825  000E76  C0B4  F076         	movff	efgtoa@l+1,___fltol@f1+1
  3826  000E7A  C0B5  F077         	movff	efgtoa@l+2,___fltol@f1+2
  3827  000E7E  C0B6  F078         	movff	efgtoa@l+3,___fltol@f1+3
  3828  000E82  EC96  F01B         	call	___fltol	;wreg free
  3829  000E86  C075  F0A5         	movff	?___fltol,efgtoa@d
  3830  000E8A  C076  F0A6         	movff	?___fltol+1,efgtoa@d+1
  3831  000E8E                     
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3833  000E8E  C0AF  F075         	movff	efgtoa@h,___flsub@b
  3834  000E92  C0B0  F076         	movff	efgtoa@h+1,___flsub@b+1
  3835  000E96  C0B1  F077         	movff	efgtoa@h+2,___flsub@b+2
  3836  000E9A  C0B2  F078         	movff	efgtoa@h+3,___flsub@b+3
  3837  000E9E  C0C1  F064         	movff	efgtoa@u,___flmul@a
  3838  000EA2  C0C2  F065         	movff	efgtoa@u+1,___flmul@a+1
  3839  000EA6  C0C3  F066         	movff	efgtoa@u+2,___flmul@a+2
  3840  000EAA  C0C4  F067         	movff	efgtoa@u+3,___flmul@a+3
  3841  000EAE  C0B3  F060         	movff	efgtoa@l,___flmul@b
  3842  000EB2  C0B4  F061         	movff	efgtoa@l+1,___flmul@b+1
  3843  000EB6  C0B5  F062         	movff	efgtoa@l+2,___flmul@b+2
  3844  000EBA  C0B6  F063         	movff	efgtoa@l+3,___flmul@b+3
  3845  000EBE  EC4E  F00F         	call	___flmul	;wreg free
  3846  000EC2  C060  F079         	movff	?___flmul,___flsub@a
  3847  000EC6  C061  F07A         	movff	?___flmul+1,___flsub@a+1
  3848  000ECA  C062  F07B         	movff	?___flmul+2,___flsub@a+2
  3849  000ECE  C063  F07C         	movff	?___flmul+3,___flsub@a+3
  3850  000ED2  ECF6  F022         	call	___flsub	;wreg free
  3851  000ED6  C075  F0AF         	movff	?___flsub,efgtoa@h
  3852  000EDA  C076  F0B0         	movff	?___flsub+1,efgtoa@h+1
  3853  000EDE  C077  F0B1         	movff	?___flsub+2,efgtoa@h+2
  3854  000EE2  C078  F0B2         	movff	?___flsub+3,efgtoa@h+3
  3855  000EE6                     
  3856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3857  000EE6  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  3858  000EEA  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  3859  000EEE  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  3860  000EF2  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  3861  000EF6  0E00               	movlw	0
  3862  000EF8  6E3C               	movwf	___fldiv@a^0,c
  3863  000EFA  0E00               	movlw	0
  3864  000EFC  6E3D               	movwf	(___fldiv@a+1)^0,c
  3865  000EFE  0E20               	movlw	32
  3866  000F00  6E3E               	movwf	(___fldiv@a+2)^0,c
  3867  000F02  0E41               	movlw	65
  3868  000F04  6E3F               	movwf	(___fldiv@a+3)^0,c
  3869  000F06  EC64  F011         	call	___fldiv	;wreg free
  3870  000F0A  C038  F0C1         	movff	?___fldiv,efgtoa@u
  3871  000F0E  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3872  000F12  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3873  000F16  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3874  000F1A                     
  3875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3876  000F1A  0100               	movlb	0	; () banked
  3877  000F1C  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  3878  000F1E  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  3879  000F20                     l8240:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3883  000F20  51A1               	movf	efgtoa@m& (0+255),w,b
  3884  000F22  5DB7               	subwf	efgtoa@i& (0+255),w,b
  3885  000F24  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  3886  000F26  0A80               	xorlw	128
  3887  000F28  6F88               	movwf	??_efgtoa& (0+255),b
  3888  000F2A  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  3889  000F2C  0A80               	xorlw	128
  3890  000F2E  5988               	subwfb	??_efgtoa& (0+255),w,b
  3891  000F30  A0D8               	btfss	status,0,c
  3892  000F32  EF9D  F007         	goto	u9611
  3893  000F36  EF9F  F007         	goto	u9610
  3894  000F3A                     u9611:
  3895  000F3A  EF15  F007         	goto	l8232
  3896  000F3E                     u9610:
  3897  000F3E                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3900  000F3E  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3901  000F42  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3902  000F46  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3903  000F4A  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3904  000F4E  0E00               	movlw	0
  3905  000F50  6F64               	movwf	___flmul@a& (0+255),b
  3906  000F52  0E00               	movlw	0
  3907  000F54  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3908  000F56  0EA0               	movlw	160
  3909  000F58  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3910  000F5A  0E40               	movlw	64
  3911  000F5C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3912  000F5E  EC4E  F00F         	call	___flmul	;wreg free
  3913  000F62  C060  F0B3         	movff	?___flmul,efgtoa@l
  3914  000F66  C061  F0B4         	movff	?___flmul+1,efgtoa@l+1
  3915  000F6A  C062  F0B5         	movff	?___flmul+2,efgtoa@l+2
  3916  000F6E  C063  F0B6         	movff	?___flmul+3,efgtoa@l+3
  3917  000F72                     
  3918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3919  000F72  C0AF  F075         	movff	efgtoa@h,___flge@ff1
  3920  000F76  C0B0  F076         	movff	efgtoa@h+1,___flge@ff1+1
  3921  000F7A  C0B1  F077         	movff	efgtoa@h+2,___flge@ff1+2
  3922  000F7E  C0B2  F078         	movff	efgtoa@h+3,___flge@ff1+3
  3923  000F82  C0B3  F079         	movff	efgtoa@l,___flge@ff2
  3924  000F86  C0B4  F07A         	movff	efgtoa@l+1,___flge@ff2+1
  3925  000F8A  C0B5  F07B         	movff	efgtoa@l+2,___flge@ff2+2
  3926  000F8E  C0B6  F07C         	movff	efgtoa@l+3,___flge@ff2+3
  3927  000F92  EC1A  F01C         	call	___flge	;wreg free
  3928  000F96  0100               	movlb	0	; () banked
  3929  000F98  B0D8               	btfsc	status,0,c
  3930  000F9A  EFD1  F007         	goto	u9621
  3931  000F9E  EFD3  F007         	goto	u9620
  3932  000FA2                     u9621:
  3933  000FA2  EFDD  F007         	goto	l8248
  3934  000FA6                     u9620:
  3935  000FA6                     
  3936                           ; BSR set to: 0
  3937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3938  000FA6  0E00               	movlw	0
  3939  000FA8  6FB3               	movwf	efgtoa@l& (0+255),b
  3940  000FAA  0E00               	movlw	0
  3941  000FAC  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3942  000FAE  0E00               	movlw	0
  3943  000FB0  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3944  000FB2  0E00               	movlw	0
  3945  000FB4  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3946                           
  3947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3948  000FB6  EF06  F008         	goto	l8254
  3949  000FBA                     l8248:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3953  000FBA  C0AF  F006         	movff	efgtoa@h,___fleq@ff1
  3954  000FBE  C0B0  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  3955  000FC2  C0B1  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  3956  000FC6  C0B2  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  3957  000FCA  C0B3  F00A         	movff	efgtoa@l,___fleq@ff2
  3958  000FCE  C0B4  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  3959  000FD2  C0B5  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  3960  000FD6  C0B6  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  3961  000FDA  EC75  F01F         	call	___fleq	;wreg free
  3962  000FDE  A0D8               	btfss	status,0,c
  3963  000FE0  EFF4  F007         	goto	u9631
  3964  000FE4  EFF6  F007         	goto	u9630
  3965  000FE8                     u9631:
  3966  000FE8  EF06  F008         	goto	l8254
  3967  000FEC                     u9630:
  3968  000FEC  0100               	movlb	0	; () banked
  3969  000FEE  B1A5               	btfsc	efgtoa@d& (0+255),0,b
  3970  000FF0  EFFC  F007         	goto	u9641
  3971  000FF4  EFFE  F007         	goto	u9640
  3972  000FF8                     u9641:
  3973  000FF8  EF06  F008         	goto	l8254
  3974  000FFC                     u9640:
  3975  000FFC                     
  3976                           ; BSR set to: 0
  3977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3978  000FFC  0E00               	movlw	0
  3979  000FFE  6FB3               	movwf	efgtoa@l& (0+255),b
  3980  001000  0E00               	movlw	0
  3981  001002  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3982  001004  0E00               	movlw	0
  3983  001006  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3984  001008  0E00               	movlw	0
  3985  00100A  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3986  00100C                     l8254:
  3987                           
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3989  00100C  C0B9  F028         	movff	efgtoa@g,___fladd@b
  3990  001010  C0BA  F029         	movff	efgtoa@g+1,___fladd@b+1
  3991  001014  C0BB  F02A         	movff	efgtoa@g+2,___fladd@b+2
  3992  001018  C0BC  F02B         	movff	efgtoa@g+3,___fladd@b+3
  3993  00101C  C0B3  F02C         	movff	efgtoa@l,___fladd@a
  3994  001020  C0B4  F02D         	movff	efgtoa@l+1,___fladd@a+1
  3995  001024  C0B5  F02E         	movff	efgtoa@l+2,___fladd@a+2
  3996  001028  C0B6  F02F         	movff	efgtoa@l+3,___fladd@a+3
  3997  00102C  ECEE  F00C         	call	___fladd	;wreg free
  3998  001030  C028  F0AF         	movff	?___fladd,efgtoa@h
  3999  001034  C029  F0B0         	movff	?___fladd+1,efgtoa@h+1
  4000  001038  C02A  F0B1         	movff	?___fladd+2,efgtoa@h+2
  4001  00103C  C02B  F0B2         	movff	?___fladd+3,efgtoa@h+3
  4002  001040                     
  4003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4004  001040  C08D  F0C1         	movff	efgtoa@ou,efgtoa@u
  4005  001044  C08E  F0C2         	movff	efgtoa@ou+1,efgtoa@u+1
  4006  001048  C08F  F0C3         	movff	efgtoa@ou+2,efgtoa@u+2
  4007  00104C  C090  F0C4         	movff	efgtoa@ou+3,efgtoa@u+3
  4008  001050                     
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4010  001050  0E65               	movlw	101
  4011  001052  0100               	movlb	0	; () banked
  4012  001054  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  4013  001056  B4D8               	btfsc	status,2,c
  4014  001058  EF30  F008         	goto	u9651
  4015  00105C  EF32  F008         	goto	u9650
  4016  001060                     u9651:
  4017  001060  EF38  F008         	goto	l8262
  4018  001064                     u9650:
  4019  001064                     
  4020                           ; BSR set to: 0
  4021  001064  C0BD  F0A3         	movff	efgtoa@e,efgtoa@ne
  4022  001068  C0BE  F0A4         	movff	efgtoa@e+1,efgtoa@ne+1
  4023  00106C  EF3C  F008         	goto	l792
  4024  001070                     l8262:
  4025                           
  4026                           ; BSR set to: 0
  4027  001070  0E00               	movlw	0
  4028  001072  6FA4               	movwf	(efgtoa@ne+1)& (0+255),b
  4029  001074  0E00               	movlw	0
  4030  001076  6FA3               	movwf	efgtoa@ne& (0+255),b
  4031  001078                     l792:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4035  001078  0E00               	movlw	0
  4036  00107A  6FA0               	movwf	(efgtoa@pp+1)& (0+255),b
  4037  00107C  0E00               	movlw	0
  4038  00107E  6F9F               	movwf	efgtoa@pp& (0+255),b
  4039                           
  4040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4041  001080  0E00               	movlw	0
  4042  001082  6F9E               	movwf	(efgtoa@t+1)& (0+255),b
  4043  001084  0E00               	movlw	0
  4044  001086  6F9D               	movwf	efgtoa@t& (0+255),b
  4045                           
  4046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4047  001088  0E00               	movlw	0
  4048  00108A  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  4049  00108C  0E00               	movlw	0
  4050  00108E  6FB7               	movwf	efgtoa@i& (0+255),b
  4051                           
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4053  001090  EF38  F009         	goto	l8312
  4054  001094                     l8264:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4058  001094  C0AF  F038         	movff	efgtoa@h,___fldiv@b
  4059  001098  C0B0  F039         	movff	efgtoa@h+1,___fldiv@b+1
  4060  00109C  C0B1  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  4061  0010A0  C0B2  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  4062  0010A4  C0C1  F03C         	movff	efgtoa@u,___fldiv@a
  4063  0010A8  C0C2  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  4064  0010AC  C0C3  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  4065  0010B0  C0C4  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  4066  0010B4  EC64  F011         	call	___fldiv	;wreg free
  4067  0010B8  C038  F051         	movff	?___fldiv,floorf@x
  4068  0010BC  C039  F052         	movff	?___fldiv+1,floorf@x+1
  4069  0010C0  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  4070  0010C4  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  4071  0010C8  ECA0  F014         	call	_floorf	;wreg free
  4072  0010CC  C051  F0B3         	movff	?_floorf,efgtoa@l
  4073  0010D0  C052  F0B4         	movff	?_floorf+1,efgtoa@l+1
  4074  0010D4  C053  F0B5         	movff	?_floorf+2,efgtoa@l+2
  4075  0010D8  C054  F0B6         	movff	?_floorf+3,efgtoa@l+3
  4076                           
  4077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4078  0010DC  C0B3  F075         	movff	efgtoa@l,___fltol@f1
  4079  0010E0  C0B4  F076         	movff	efgtoa@l+1,___fltol@f1+1
  4080  0010E4  C0B5  F077         	movff	efgtoa@l+2,___fltol@f1+2
  4081  0010E8  C0B6  F078         	movff	efgtoa@l+3,___fltol@f1+3
  4082  0010EC  EC96  F01B         	call	___fltol	;wreg free
  4083  0010F0  C075  F0A5         	movff	?___fltol,efgtoa@d
  4084  0010F4  C076  F0A6         	movff	?___fltol+1,efgtoa@d+1
  4085  0010F8                     
  4086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4087  0010F8  B855               	btfsc	_flags^0,4,c
  4088  0010FA  EF81  F008         	goto	u9661
  4089  0010FE  EF83  F008         	goto	u9660
  4090  001102                     u9661:
  4091  001102  EFA1  F008         	goto	l8276
  4092  001106                     u9660:
  4093  001106  0100               	movlb	0	; () banked
  4094  001108  51A5               	movf	efgtoa@d& (0+255),w,b
  4095  00110A  11A6               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4096  00110C  A4D8               	btfss	status,2,c
  4097  00110E  EF8B  F008         	goto	u9671
  4098  001112  EF8D  F008         	goto	u9670
  4099  001116                     u9671:
  4100  001116  EFA1  F008         	goto	l8276
  4101  00111A                     u9670:
  4102  00111A                     
  4103                           ; BSR set to: 0
  4104  00111A  0E67               	movlw	103
  4105  00111C  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  4106  00111E  A4D8               	btfss	status,2,c
  4107  001120  EF94  F008         	goto	u9681
  4108  001124  EF96  F008         	goto	u9680
  4109  001128                     u9681:
  4110  001128  EFA1  F008         	goto	l8276
  4111  00112C                     u9680:
  4112  00112C                     
  4113                           ; BSR set to: 0
  4114  00112C  BFA4               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4115  00112E  EF9D  F008         	goto	u9690
  4116  001132  EF9B  F008         	goto	u9691
  4117  001136                     u9691:
  4118  001136  EFA1  F008         	goto	l8276
  4119  00113A                     u9690:
  4120  00113A                     
  4121                           ; BSR set to: 0
  4122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4123  00113A  4B9D               	infsnz	efgtoa@t& (0+255),f,b
  4124  00113C  2B9E               	incf	(efgtoa@t+1)& (0+255),f,b
  4125                           
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4127  00113E  EFEC  F008         	goto	l8304
  4128  001142                     l8276:
  4129                           
  4130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4131  001142  0100               	movlb	0	; () banked
  4132  001144  519F               	movf	efgtoa@pp& (0+255),w,b
  4133  001146  11A0               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4134  001148  A4D8               	btfss	status,2,c
  4135  00114A  EFA9  F008         	goto	u9701
  4136  00114E  EFAB  F008         	goto	u9700
  4137  001152                     u9701:
  4138  001152  EFD5  F008         	goto	l8296
  4139  001156                     u9700:
  4140  001156                     
  4141                           ; BSR set to: 0
  4142  001156  BFA4               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4143  001158  EFB2  F008         	goto	u9710
  4144  00115C  EFB0  F008         	goto	u9711
  4145  001160                     u9711:
  4146  001160  EFD5  F008         	goto	l8296
  4147  001164                     u9710:
  4148  001164                     
  4149                           ; BSR set to: 0
  4150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4151  001164  0E3D               	movlw	low _dbuf
  4152  001166  25BF               	addwf	efgtoa@n& (0+255),w,b
  4153  001168  6ED9               	movwf	fsr2l,c
  4154  00116A  0E01               	movlw	high _dbuf
  4155  00116C  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4156  00116E  6EDA               	movwf	fsr2h,c
  4157  001170  0E2E               	movlw	46
  4158  001172  6EDF               	movwf	indf2,c
  4159  001174                     
  4160                           ; BSR set to: 0
  4161  001174  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4162  001176  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4163  001178                     
  4164                           ; BSR set to: 0
  4165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4166  001178  07AC               	decf	efgtoa@w& (0+255),f,b
  4167  00117A  A0D8               	btfss	status,0,c
  4168  00117C  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4169  00117E                     
  4170                           ; BSR set to: 0
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4172  00117E  0E00               	movlw	0
  4173  001180  6FA0               	movwf	(efgtoa@pp+1)& (0+255),b
  4174  001182  0E01               	movlw	1
  4175  001184  6F9F               	movwf	efgtoa@pp& (0+255),b
  4176  001186  EFD5  F008         	goto	l8296
  4177  00118A                     l8288:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4181  00118A  0E3D               	movlw	low _dbuf
  4182  00118C  25BF               	addwf	efgtoa@n& (0+255),w,b
  4183  00118E  6ED9               	movwf	fsr2l,c
  4184  001190  0E01               	movlw	high _dbuf
  4185  001192  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4186  001194  6EDA               	movwf	fsr2h,c
  4187  001196  0E30               	movlw	48
  4188  001198  6EDF               	movwf	indf2,c
  4189  00119A                     
  4190                           ; BSR set to: 0
  4191  00119A  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4192  00119C  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4193  00119E                     
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4196  00119E  07AC               	decf	efgtoa@w& (0+255),f,b
  4197  0011A0  A0D8               	btfss	status,0,c
  4198  0011A2  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4199  0011A4                     
  4200                           ; BSR set to: 0
  4201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4202  0011A4  079D               	decf	efgtoa@t& (0+255),f,b
  4203  0011A6  A0D8               	btfss	status,0,c
  4204  0011A8  079E               	decf	(efgtoa@t+1)& (0+255),f,b
  4205  0011AA                     l8296:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4209  0011AA  519D               	movf	efgtoa@t& (0+255),w,b
  4210  0011AC  119E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4211  0011AE  A4D8               	btfss	status,2,c
  4212  0011B0  EFDC  F008         	goto	u9721
  4213  0011B4  EFDE  F008         	goto	u9720
  4214  0011B8                     u9721:
  4215  0011B8  EFC5  F008         	goto	l8288
  4216  0011BC                     u9720:
  4217  0011BC                     
  4218                           ; BSR set to: 0
  4219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4220  0011BC  0E3D               	movlw	low _dbuf
  4221  0011BE  25BF               	addwf	efgtoa@n& (0+255),w,b
  4222  0011C0  6ED9               	movwf	fsr2l,c
  4223  0011C2  0E01               	movlw	high _dbuf
  4224  0011C4  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4225  0011C6  6EDA               	movwf	fsr2h,c
  4226  0011C8  51A5               	movf	efgtoa@d& (0+255),w,b
  4227  0011CA  0F30               	addlw	48
  4228  0011CC  6EDF               	movwf	indf2,c
  4229  0011CE                     
  4230                           ; BSR set to: 0
  4231  0011CE  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4232  0011D0  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4233  0011D2                     
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4236  0011D2  07AC               	decf	efgtoa@w& (0+255),f,b
  4237  0011D4  A0D8               	btfss	status,0,c
  4238  0011D6  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4239  0011D8                     l8304:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4243  0011D8  C0AF  F075         	movff	efgtoa@h,___flsub@b
  4244  0011DC  C0B0  F076         	movff	efgtoa@h+1,___flsub@b+1
  4245  0011E0  C0B1  F077         	movff	efgtoa@h+2,___flsub@b+2
  4246  0011E4  C0B2  F078         	movff	efgtoa@h+3,___flsub@b+3
  4247  0011E8  C0C1  F064         	movff	efgtoa@u,___flmul@a
  4248  0011EC  C0C2  F065         	movff	efgtoa@u+1,___flmul@a+1
  4249  0011F0  C0C3  F066         	movff	efgtoa@u+2,___flmul@a+2
  4250  0011F4  C0C4  F067         	movff	efgtoa@u+3,___flmul@a+3
  4251  0011F8  C0B3  F060         	movff	efgtoa@l,___flmul@b
  4252  0011FC  C0B4  F061         	movff	efgtoa@l+1,___flmul@b+1
  4253  001200  C0B5  F062         	movff	efgtoa@l+2,___flmul@b+2
  4254  001204  C0B6  F063         	movff	efgtoa@l+3,___flmul@b+3
  4255  001208  EC4E  F00F         	call	___flmul	;wreg free
  4256  00120C  C060  F079         	movff	?___flmul,___flsub@a
  4257  001210  C061  F07A         	movff	?___flmul+1,___flsub@a+1
  4258  001214  C062  F07B         	movff	?___flmul+2,___flsub@a+2
  4259  001218  C063  F07C         	movff	?___flmul+3,___flsub@a+3
  4260  00121C  ECF6  F022         	call	___flsub	;wreg free
  4261  001220  C075  F0AF         	movff	?___flsub,efgtoa@h
  4262  001224  C076  F0B0         	movff	?___flsub+1,efgtoa@h+1
  4263  001228  C077  F0B1         	movff	?___flsub+2,efgtoa@h+2
  4264  00122C  C078  F0B2         	movff	?___flsub+3,efgtoa@h+3
  4265  001230                     
  4266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4267  001230  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  4268  001234  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  4269  001238  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  4270  00123C  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  4271  001240  0E00               	movlw	0
  4272  001242  6E3C               	movwf	___fldiv@a^0,c
  4273  001244  0E00               	movlw	0
  4274  001246  6E3D               	movwf	(___fldiv@a+1)^0,c
  4275  001248  0E20               	movlw	32
  4276  00124A  6E3E               	movwf	(___fldiv@a+2)^0,c
  4277  00124C  0E41               	movlw	65
  4278  00124E  6E3F               	movwf	(___fldiv@a+3)^0,c
  4279  001250  EC64  F011         	call	___fldiv	;wreg free
  4280  001254  C038  F0C1         	movff	?___fldiv,efgtoa@u
  4281  001258  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  4282  00125C  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  4283  001260  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  4284  001264                     
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4286  001264  0100               	movlb	0	; () banked
  4287  001266  07A3               	decf	efgtoa@ne& (0+255),f,b
  4288  001268  A0D8               	btfss	status,0,c
  4289  00126A  07A4               	decf	(efgtoa@ne+1)& (0+255),f,b
  4290  00126C                     
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4293  00126C  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  4294  00126E  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  4295  001270                     l8312:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4299  001270  51A1               	movf	efgtoa@m& (0+255),w,b
  4300  001272  5DB7               	subwf	efgtoa@i& (0+255),w,b
  4301  001274  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  4302  001276  0A80               	xorlw	128
  4303  001278  6F88               	movwf	??_efgtoa& (0+255),b
  4304  00127A  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  4305  00127C  0A80               	xorlw	128
  4306  00127E  5988               	subwfb	??_efgtoa& (0+255),w,b
  4307  001280  B0D8               	btfsc	status,0,c
  4308  001282  EF45  F009         	goto	u9731
  4309  001286  EF47  F009         	goto	u9730
  4310  00128A                     u9731:
  4311  00128A  EF55  F009         	goto	l8316
  4312  00128E                     u9730:
  4313  00128E                     
  4314                           ; BSR set to: 0
  4315  00128E  BFC0               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4316  001290  EF53  F009         	goto	u9741
  4317  001294  51C0               	movf	(efgtoa@n+1)& (0+255),w,b
  4318  001296  E109               	bnz	u9740
  4319  001298  0E4B               	movlw	75
  4320  00129A  5DBF               	subwf	efgtoa@n& (0+255),w,b
  4321  00129C  A0D8               	btfss	status,0,c
  4322  00129E  EF53  F009         	goto	u9741
  4323  0012A2  EF55  F009         	goto	u9740
  4324  0012A6                     u9741:
  4325  0012A6  EF4A  F008         	goto	l8264
  4326  0012AA                     u9740:
  4327  0012AA                     l8316:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4331  0012AA  519F               	movf	efgtoa@pp& (0+255),w,b
  4332  0012AC  11A0               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4333  0012AE  A4D8               	btfss	status,2,c
  4334  0012B0  EF5C  F009         	goto	u9751
  4335  0012B4  EF5E  F009         	goto	u9750
  4336  0012B8                     u9751:
  4337  0012B8  EF6F  F009         	goto	l8324
  4338  0012BC                     u9750:
  4339  0012BC                     
  4340                           ; BSR set to: 0
  4341  0012BC  A855               	btfss	_flags^0,4,c
  4342  0012BE  EF63  F009         	goto	u9761
  4343  0012C2  EF65  F009         	goto	u9760
  4344  0012C6                     u9761:
  4345  0012C6  EF6F  F009         	goto	l8324
  4346  0012CA                     u9760:
  4347  0012CA                     
  4348                           ; BSR set to: 0
  4349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4350  0012CA  0E3D               	movlw	low _dbuf
  4351  0012CC  25BF               	addwf	efgtoa@n& (0+255),w,b
  4352  0012CE  6ED9               	movwf	fsr2l,c
  4353  0012D0  0E01               	movlw	high _dbuf
  4354  0012D2  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4355  0012D4  6EDA               	movwf	fsr2h,c
  4356  0012D6  0E2E               	movlw	46
  4357  0012D8  6EDF               	movwf	indf2,c
  4358  0012DA                     
  4359                           ; BSR set to: 0
  4360  0012DA  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4361  0012DC  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4362  0012DE                     l8324:
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4366  0012DE  0E3D               	movlw	low _dbuf
  4367  0012E0  25BF               	addwf	efgtoa@n& (0+255),w,b
  4368  0012E2  6ED9               	movwf	fsr2l,c
  4369  0012E4  0E01               	movlw	high _dbuf
  4370  0012E6  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4371  0012E8  6EDA               	movwf	fsr2h,c
  4372  0012EA  0E00               	movlw	0
  4373  0012EC  6EDF               	movwf	indf2,c
  4374  0012EE                     
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4377  0012EE  0E65               	movlw	101
  4378  0012F0  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  4379  0012F2  A4D8               	btfss	status,2,c
  4380  0012F4  EF7E  F009         	goto	u9771
  4381  0012F8  EF80  F009         	goto	u9770
  4382  0012FC                     u9771:
  4383  0012FC  EF26  F005         	goto	l8136
  4384  001300                     u9770:
  4385  001300                     
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4388  001300  0E00               	movlw	0
  4389  001302  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  4390  001304  0E4F               	movlw	79
  4391  001306  6FB7               	movwf	efgtoa@i& (0+255),b
  4392  001308                     
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4395  001308  0E3D               	movlw	low _dbuf
  4396  00130A  25B7               	addwf	efgtoa@i& (0+255),w,b
  4397  00130C  6ED9               	movwf	fsr2l,c
  4398  00130E  0E01               	movlw	high _dbuf
  4399  001310  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4400  001312  6EDA               	movwf	fsr2h,c
  4401  001314  0E00               	movlw	0
  4402  001316  6EDF               	movwf	indf2,c
  4403  001318                     
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4406  001318  0E00               	movlw	0
  4407  00131A  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  4408  00131C  0E00               	movlw	0
  4409  00131E  6FA7               	movwf	efgtoa@sign& (0+255),b
  4410  001320                     
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4413  001320  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4414  001322  EF97  F009         	goto	u9780
  4415  001326  EF95  F009         	goto	u9781
  4416  00132A                     u9781:
  4417  00132A  EF9F  F009         	goto	l8340
  4418  00132E                     u9780:
  4419  00132E                     
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4422  00132E  0E00               	movlw	0
  4423  001330  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  4424  001332  0E01               	movlw	1
  4425  001334  6FA7               	movwf	efgtoa@sign& (0+255),b
  4426  001336                     
  4427                           ; BSR set to: 0
  4428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4429  001336  6DBD               	negf	efgtoa@e& (0+255),b
  4430  001338  1FBE               	comf	(efgtoa@e+1)& (0+255),f,b
  4431  00133A  B0D8               	btfsc	status,0,c
  4432  00133C  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  4433  00133E                     l8340:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4437  00133E  0E00               	movlw	0
  4438  001340  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  4439  001342  0E02               	movlw	2
  4440  001344  6FA9               	movwf	efgtoa@p& (0+255),b
  4441                           
  4442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4443  001346  EFD0  F009         	goto	l8352
  4444  00134A                     l8342:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4448  00134A  07B7               	decf	efgtoa@i& (0+255),f,b
  4449  00134C  A0D8               	btfss	status,0,c
  4450  00134E  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4451  001350                     
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4454  001350  0E3D               	movlw	low _dbuf
  4455  001352  25B7               	addwf	efgtoa@i& (0+255),w,b
  4456  001354  6ED9               	movwf	fsr2l,c
  4457  001356  0E01               	movlw	high _dbuf
  4458  001358  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4459  00135A  6EDA               	movwf	fsr2h,c
  4460  00135C  C0BD  F006         	movff	efgtoa@e,___awmod@dividend
  4461  001360  C0BE  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  4462  001364  0E00               	movlw	0
  4463  001366  6E09               	movwf	(___awmod@divisor+1)^0,c
  4464  001368  0E0A               	movlw	10
  4465  00136A  6E08               	movwf	___awmod@divisor^0,c
  4466  00136C  EC1D  F01F         	call	___awmod	;wreg free
  4467  001370  5006               	movf	?___awmod^0,w,c
  4468  001372  0F30               	addlw	48
  4469  001374  6EDF               	movwf	indf2,c
  4470  001376                     
  4471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4472  001376  C0BD  F006         	movff	efgtoa@e,___awdiv@dividend
  4473  00137A  C0BE  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  4474  00137E  0E00               	movlw	0
  4475  001380  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4476  001382  0E0A               	movlw	10
  4477  001384  6E08               	movwf	___awdiv@divisor^0,c
  4478  001386  EC5A  F01E         	call	___awdiv	;wreg free
  4479  00138A  C006  F0BD         	movff	?___awdiv,efgtoa@e
  4480  00138E  C007  F0BE         	movff	?___awdiv+1,efgtoa@e+1
  4481  001392                     
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4483  001392  0100               	movlb	0	; () banked
  4484  001394  07A9               	decf	efgtoa@p& (0+255),f,b
  4485  001396  A0D8               	btfss	status,0,c
  4486  001398  07AA               	decf	(efgtoa@p+1)& (0+255),f,b
  4487  00139A                     
  4488                           ; BSR set to: 0
  4489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4490  00139A  07AC               	decf	efgtoa@w& (0+255),f,b
  4491  00139C  A0D8               	btfss	status,0,c
  4492  00139E  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4493  0013A0                     l8352:
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4497  0013A0  51BD               	movf	efgtoa@e& (0+255),w,b
  4498  0013A2  11BE               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4499  0013A4  A4D8               	btfss	status,2,c
  4500  0013A6  EFD7  F009         	goto	u9791
  4501  0013AA  EFD9  F009         	goto	u9790
  4502  0013AE                     u9791:
  4503  0013AE  EFA5  F009         	goto	l8342
  4504  0013B2                     u9790:
  4505  0013B2                     
  4506                           ; BSR set to: 0
  4507  0013B2  BFAA               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4508  0013B4  EFE6  F009         	goto	u9800
  4509  0013B8  51AA               	movf	(efgtoa@p+1)& (0+255),w,b
  4510  0013BA  E106               	bnz	u9801
  4511  0013BC  05A9               	decf	efgtoa@p& (0+255),w,b
  4512  0013BE  B0D8               	btfsc	status,0,c
  4513  0013C0  EFE4  F009         	goto	u9801
  4514  0013C4  EFE6  F009         	goto	u9800
  4515  0013C8                     u9801:
  4516  0013C8  EFA5  F009         	goto	l8342
  4517  0013CC                     u9800:
  4518  0013CC                     
  4519                           ; BSR set to: 0
  4520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4521  0013CC  07B7               	decf	efgtoa@i& (0+255),f,b
  4522  0013CE  A0D8               	btfss	status,0,c
  4523  0013D0  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4524  0013D2                     
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4527  0013D2  51A7               	movf	efgtoa@sign& (0+255),w,b
  4528  0013D4  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4529  0013D6  A4D8               	btfss	status,2,c
  4530  0013D8  EFF0  F009         	goto	u9811
  4531  0013DC  EFF2  F009         	goto	u9810
  4532  0013E0                     u9811:
  4533  0013E0  EFF8  F009         	goto	l8362
  4534  0013E4                     u9810:
  4535  0013E4                     
  4536                           ; BSR set to: 0
  4537  0013E4  0E00               	movlw	0
  4538  0013E6  6F98               	movwf	(_efgtoa$895+1)& (0+255),b
  4539  0013E8  0E2B               	movlw	43
  4540  0013EA  6F97               	movwf	_efgtoa$895& (0+255),b
  4541  0013EC  EFFC  F009         	goto	l8364
  4542  0013F0                     l8362:
  4543                           
  4544                           ; BSR set to: 0
  4545  0013F0  0E00               	movlw	0
  4546  0013F2  6F98               	movwf	(_efgtoa$895+1)& (0+255),b
  4547  0013F4  0E2D               	movlw	45
  4548  0013F6  6F97               	movwf	_efgtoa$895& (0+255),b
  4549  0013F8                     l8364:
  4550                           
  4551                           ; BSR set to: 0
  4552  0013F8  0E3D               	movlw	low _dbuf
  4553  0013FA  25B7               	addwf	efgtoa@i& (0+255),w,b
  4554  0013FC  6ED9               	movwf	fsr2l,c
  4555  0013FE  0E01               	movlw	high _dbuf
  4556  001400  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4557  001402  6EDA               	movwf	fsr2h,c
  4558  001404  C097  FFDF         	movff	_efgtoa$895,indf2
  4559  001408                     
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4562  001408  07AC               	decf	efgtoa@w& (0+255),f,b
  4563  00140A  A0D8               	btfss	status,0,c
  4564  00140C  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4565  00140E                     
  4566                           ; BSR set to: 0
  4567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4568  00140E  07B7               	decf	efgtoa@i& (0+255),f,b
  4569  001410  A0D8               	btfss	status,0,c
  4570  001412  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4571  001414                     
  4572                           ; BSR set to: 0
  4573  001414  0EBF               	movlw	191
  4574  001416  6F88               	movwf	??_efgtoa& (0+255),b
  4575  001418  0EFF               	movlw	255
  4576  00141A  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  4577  00141C  5187               	movf	efgtoa@c& (0+255),w,b
  4578  00141E  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  4579  001420  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  4580  001422  5188               	movf	??_efgtoa& (0+255),w,b
  4581  001424  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4582  001426  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  4583  001428  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4584  00142A  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  4585  00142C  E10A               	bnz	u9820
  4586  00142E  0E1A               	movlw	26
  4587  001430  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4588  001432  A0D8               	btfss	status,0,c
  4589  001434  EF1E  F00A         	goto	u9821
  4590  001438  EF21  F00A         	goto	u9820
  4591  00143C                     u9821:
  4592  00143C  0E01               	movlw	1
  4593  00143E  EF22  F00A         	goto	u9830
  4594  001442                     u9820:
  4595  001442  0E00               	movlw	0
  4596  001444                     u9830:
  4597  001444  6F9B               	movwf	_efgtoa$897& (0+255),b
  4598  001446  6B9C               	clrf	(_efgtoa$897+1)& (0+255),b
  4599  001448                     
  4600                           ; BSR set to: 0
  4601  001448  519B               	movf	_efgtoa$897& (0+255),w,b
  4602  00144A  119C               	iorwf	(_efgtoa$897+1)& (0+255),w,b
  4603  00144C  A4D8               	btfss	status,2,c
  4604  00144E  EF2B  F00A         	goto	u9841
  4605  001452  EF2D  F00A         	goto	u9840
  4606  001456                     u9841:
  4607  001456  EF33  F00A         	goto	l8378
  4608  00145A                     u9840:
  4609  00145A                     
  4610                           ; BSR set to: 0
  4611  00145A  0E00               	movlw	0
  4612  00145C  6F9A               	movwf	(_efgtoa$896+1)& (0+255),b
  4613  00145E  0E65               	movlw	101
  4614  001460  6F99               	movwf	_efgtoa$896& (0+255),b
  4615  001462  EF37  F00A         	goto	l8380
  4616  001466                     l8378:
  4617                           
  4618                           ; BSR set to: 0
  4619  001466  0E00               	movlw	0
  4620  001468  6F9A               	movwf	(_efgtoa$896+1)& (0+255),b
  4621  00146A  0E45               	movlw	69
  4622  00146C  6F99               	movwf	_efgtoa$896& (0+255),b
  4623  00146E                     l8380:
  4624                           
  4625                           ; BSR set to: 0
  4626  00146E  0E3D               	movlw	low _dbuf
  4627  001470  25B7               	addwf	efgtoa@i& (0+255),w,b
  4628  001472  6ED9               	movwf	fsr2l,c
  4629  001474  0E01               	movlw	high _dbuf
  4630  001476  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4631  001478  6EDA               	movwf	fsr2h,c
  4632  00147A  C099  FFDF         	movff	_efgtoa$896,indf2
  4633  00147E                     
  4634                           ; BSR set to: 0
  4635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4636  00147E  07AC               	decf	efgtoa@w& (0+255),f,b
  4637  001480  A0D8               	btfss	status,0,c
  4638  001482  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4639  001484                     
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4642  001484  0E3D               	movlw	low _dbuf
  4643  001486  25BF               	addwf	efgtoa@n& (0+255),w,b
  4644  001488  6E06               	movwf	strcpy@dest^0,c
  4645  00148A  0E01               	movlw	high _dbuf
  4646  00148C  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4647  00148E  6E07               	movwf	(strcpy@dest+1)^0,c
  4648  001490  0E3D               	movlw	low _dbuf
  4649  001492  25B7               	addwf	efgtoa@i& (0+255),w,b
  4650  001494  6E08               	movwf	strcpy@src^0,c
  4651  001496  0E01               	movlw	high _dbuf
  4652  001498  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4653  00149A  6E09               	movwf	(strcpy@src+1)^0,c
  4654  00149C  ECD2  F021         	call	_strcpy	;wreg free
  4655  0014A0  EF26  F005         	goto	l8136
  4656  0014A4                     l748:
  4657  0014A4  0012               	return		;funcret
  4658  0014A6                     __end_of_efgtoa:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function _tolower *****************
  4662 ;; Defined at:
  4663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  c               2   11[COMRAM] int 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  2   11[COMRAM] int 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4677 ;;      Params:         2       0       0       0       0       0       0       0       0
  4678 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4679 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4680 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4681 ;;Total ram usage:        8 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    3
  4684 ;; This function calls:
  4685 ;;		_isupper
  4686 ;; This function is called by:
  4687 ;;		_efgtoa
  4688 ;;		_vfpfcnvrt
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text8
  4693  0042E6                     __ptext8:
  4694                           	opt callstack 0
  4695  0042E6                     _tolower:
  4696                           	opt callstack 23
  4697  0042E6  0EBF               	movlw	191
  4698  0042E8  6E0E               	movwf	??_tolower^0,c
  4699  0042EA  0EFF               	movlw	255
  4700  0042EC  6E0F               	movwf	(??_tolower+1)^0,c
  4701  0042EE  C00C  F010         	movff	tolower@c,??_tolower+2
  4702  0042F2  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4703  0042F6  500E               	movf	??_tolower^0,w,c
  4704  0042F8  2610               	addwf	(??_tolower+2)^0,f,c
  4705  0042FA  500F               	movf	(??_tolower+1)^0,w,c
  4706  0042FC  2211               	addwfc	(??_tolower+3)^0,f,c
  4707  0042FE  5011               	movf	(??_tolower+3)^0,w,c
  4708  004300  E10A               	bnz	u8180
  4709  004302  0E1A               	movlw	26
  4710  004304  5C10               	subwf	(??_tolower+2)^0,w,c
  4711  004306  A0D8               	btfss	status,0,c
  4712  004308  EF88  F021         	goto	u8181
  4713  00430C  EF8B  F021         	goto	u8180
  4714  004310                     u8181:
  4715  004310  0E01               	movlw	1
  4716  004312  EF8C  F021         	goto	u8190
  4717  004316                     u8180:
  4718  004316  0E00               	movlw	0
  4719  004318                     u8190:
  4720  004318  6E12               	movwf	_tolower$1519^0,c
  4721  00431A  6A13               	clrf	(_tolower$1519+1)^0,c
  4722  00431C  5012               	movf	_tolower$1519^0,w,c
  4723  00431E  1013               	iorwf	(_tolower$1519+1)^0,w,c
  4724  004320  B4D8               	btfsc	status,2,c
  4725  004322  EF95  F021         	goto	u8201
  4726  004326  EF97  F021         	goto	u8200
  4727  00432A                     u8201:
  4728  00432A  EF9E  F021         	goto	l1682
  4729  00432E                     u8200:
  4730  00432E  0E20               	movlw	32
  4731  004330  100C               	iorwf	tolower@c^0,w,c
  4732  004332  6E0C               	movwf	?_tolower^0,c
  4733  004334  500D               	movf	(tolower@c+1)^0,w,c
  4734  004336  6E0D               	movwf	(?_tolower+1)^0,c
  4735  004338  EFA2  F021         	goto	l1687
  4736  00433C                     l1682:
  4737  00433C  C00C  F00C         	movff	tolower@c,?_tolower
  4738  004340  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  4739  004344                     l1687:
  4740  004344  0012               	return		;funcret
  4741  004346                     __end_of_tolower:
  4742                           	opt callstack 0
  4743                           
  4744 ;; *************** function _isupper *****************
  4745 ;; Defined at:
  4746 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  c               2    5[COMRAM] int 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  2    5[COMRAM] int 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4760 ;;      Params:         2       0       0       0       0       0       0       0       0
  4761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4762 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4763 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4764 ;;Total ram usage:        6 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    2
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_efgtoa
  4771 ;;		_vfpfcnvrt
  4772 ;;		_tolower
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text9
  4777  004740                     __ptext9:
  4778                           	opt callstack 0
  4779  004740                     _isupper:
  4780                           	opt callstack 23
  4781  004740  0EBF               	movlw	191
  4782  004742  6E08               	movwf	??_isupper^0,c
  4783  004744  0EFF               	movlw	255
  4784  004746  6E09               	movwf	(??_isupper+1)^0,c
  4785  004748  C006  F00A         	movff	isupper@c,??_isupper+2
  4786  00474C  C007  F00B         	movff	isupper@c+1,??_isupper+3
  4787  004750  5008               	movf	??_isupper^0,w,c
  4788  004752  260A               	addwf	(??_isupper+2)^0,f,c
  4789  004754  5009               	movf	(??_isupper+1)^0,w,c
  4790  004756  220B               	addwfc	(??_isupper+3)^0,f,c
  4791  004758  500B               	movf	(??_isupper+3)^0,w,c
  4792  00475A  E10A               	bnz	u7630
  4793  00475C  0E1A               	movlw	26
  4794  00475E  5C0A               	subwf	(??_isupper+2)^0,w,c
  4795  004760  A0D8               	btfss	status,0,c
  4796  004762  EFB5  F023         	goto	u7631
  4797  004766  EFB8  F023         	goto	u7630
  4798  00476A                     u7631:
  4799  00476A  0E01               	movlw	1
  4800  00476C  EFB9  F023         	goto	u7640
  4801  004770                     u7630:
  4802  004770  0E00               	movlw	0
  4803  004772                     u7640:
  4804  004772  6E06               	movwf	?_isupper^0,c
  4805  004774  6A07               	clrf	(?_isupper+1)^0,c
  4806  004776  0012               	return		;funcret
  4807  004778                     __end_of_isupper:
  4808                           	opt callstack 0
  4809                           
  4810 ;; *************** function _strcpy *****************
  4811 ;; Defined at:
  4812 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4815 ;;		 -> dbuf(80), 
  4816 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4817 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4818 ;;		 -> dbuf(80), 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  d               2   13[COMRAM] PTR unsigned char 
  4821 ;;		 -> dbuf(80), 
  4822 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4823 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4824 ;;		 -> dbuf(80), 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2    5[COMRAM] PTR unsigned char 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4834 ;;      Params:         4       0       0       0       0       0       0       0       0
  4835 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4836 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4837 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4838 ;;Total ram usage:       10 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    2
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_efgtoa
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text10
  4849  0043A4                     __ptext10:
  4850                           	opt callstack 0
  4851  0043A4                     _strcpy:
  4852                           	opt callstack 23
  4853  0043A4  C008  F00C         	movff	strcpy@src,strcpy@s
  4854  0043A8  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  4855  0043AC  C006  F00E         	movff	strcpy@dest,strcpy@d
  4856  0043B0  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  4857  0043B4                     l7444:
  4858  0043B4  500C               	movf	strcpy@s^0,w,c
  4859  0043B6  6E0A               	movwf	??_strcpy^0,c
  4860  0043B8  500D               	movf	(strcpy@s+1)^0,w,c
  4861  0043BA  6E0B               	movwf	(??_strcpy+1)^0,c
  4862  0043BC  4A0C               	infsnz	strcpy@s^0,f,c
  4863  0043BE  2A0D               	incf	(strcpy@s+1)^0,f,c
  4864  0043C0  C00A  FFF6         	movff	??_strcpy,tblptrl
  4865  0043C4  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  4866  0043C8  6AF8               	clrf	tblptru,c
  4867  0043CA  C00E  FFD9         	movff	strcpy@d,fsr2l
  4868  0043CE  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  4869  0043D2  4A0E               	infsnz	strcpy@d^0,f,c
  4870  0043D4  2A0F               	incf	(strcpy@d+1)^0,f,c
  4871  0043D6  0E07               	movlw	(high __ramtop+-1)
  4872  0043D8  64F7               	cpfsgt	tblptrh,c
  4873  0043DA  D003               	bra	u8167
  4874  0043DC  0008               	tblrd		*
  4875  0043DE  50F5               	movf	tablat,w,c
  4876  0043E0  D005               	bra	u8160
  4877  0043E2                     u8167:
  4878  0043E2  CFF6 FFE9          	movff	tblptrl,fsr0l
  4879  0043E6  CFF7 FFEA          	movff	tblptrh,fsr0h
  4880  0043EA  50EF               	movf	indf0,w,c
  4881  0043EC                     u8160:
  4882  0043EC  6EDF               	movwf	indf2,c
  4883  0043EE  50DF               	movf	indf2,w,c
  4884  0043F0  A4D8               	btfss	status,2,c
  4885  0043F2  EFFD  F021         	goto	u8171
  4886  0043F6  EFFF  F021         	goto	u8170
  4887  0043FA                     u8171:
  4888  0043FA  EFDA  F021         	goto	l7444
  4889  0043FE                     u8170:
  4890  0043FE  0012               	return		;funcret
  4891  004400                     __end_of_strcpy:
  4892                           	opt callstack 0
  4893                           
  4894 ;; *************** function _floorf *****************
  4895 ;; Defined at:
  4896 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  x               4   80[COMRAM] float 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  u               4   12[BANK0 ] struct .
  4901 ;;  m               4    6[BANK0 ] unsigned long 
  4902 ;;  e               2   10[BANK0 ] int 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  4   80[COMRAM] float 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4912 ;;      Params:         4       0       0       0       0       0       0       0       0
  4913 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4914 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4915 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4916 ;;Total ram usage:       20 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    2
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_efgtoa
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text11
  4927  002940                     __ptext11:
  4928                           	opt callstack 0
  4929  002940                     _floorf:
  4930                           	opt callstack 23
  4931  002940  C104  F06C         	movff	floorf@F524,floorf@u
  4932  002944  C105  F06D         	movff	floorf@F524+1,floorf@u+1
  4933  002948  C106  F06E         	movff	floorf@F524+2,floorf@u+2
  4934  00294C  C107  F06F         	movff	floorf@F524+3,floorf@u+3
  4935  002950  C051  F06C         	movff	floorf@x,floorf@u
  4936  002954  C052  F06D         	movff	floorf@x+1,floorf@u+1
  4937  002958  C053  F06E         	movff	floorf@x+2,floorf@u+2
  4938  00295C  C054  F06F         	movff	floorf@x+3,floorf@u+3
  4939  002960  0E81               	movlw	129
  4940  002962  0100               	movlb	0	; () banked
  4941  002964  6F60               	movwf	??_floorf& (0+255),b
  4942  002966  0EFF               	movlw	255
  4943  002968  6F61               	movwf	(??_floorf+1)& (0+255),b
  4944  00296A  C06C  F062         	movff	floorf@u,??_floorf+2
  4945  00296E  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4946  002972  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4947  002976  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4948  00297A  0E18               	movlw	24
  4949  00297C  EFC5  F014         	goto	u8210
  4950  002980                     u8215:
  4951  002980  90D8               	bcf	status,0,c
  4952  002982  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4953  002984  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4954  002986  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4955  002988  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4956  00298A                     u8210:
  4957  00298A  2EE8               	decfsz	wreg,f,c
  4958  00298C  EFC0  F014         	goto	u8215
  4959  002990  5162               	movf	(??_floorf+2)& (0+255),w,b
  4960  002992  2560               	addwf	??_floorf& (0+255),w,b
  4961  002994  6F6A               	movwf	floorf@e& (0+255),b
  4962  002996  0E00               	movlw	0
  4963  002998  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4964  00299A  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4965  00299C  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4966  00299E  EFDA  F014         	goto	u8221
  4967  0029A2  516B               	movf	(floorf@e+1)& (0+255),w,b
  4968  0029A4  E109               	bnz	u8220
  4969  0029A6  0E17               	movlw	23
  4970  0029A8  5D6A               	subwf	floorf@e& (0+255),w,b
  4971  0029AA  A0D8               	btfss	status,0,c
  4972  0029AC  EFDA  F014         	goto	u8221
  4973  0029B0  EFDC  F014         	goto	u8220
  4974  0029B4                     u8221:
  4975  0029B4  EFE6  F014         	goto	l7462
  4976  0029B8                     u8220:
  4977  0029B8                     l7460:
  4978                           
  4979                           ; BSR set to: 0
  4980  0029B8  C051  F051         	movff	floorf@x,?_floorf
  4981  0029BC  C052  F052         	movff	floorf@x+1,?_floorf+1
  4982  0029C0  C053  F053         	movff	floorf@x+2,?_floorf+2
  4983  0029C4  C054  F054         	movff	floorf@x+3,?_floorf+3
  4984  0029C8  EFAA  F015         	goto	l1584
  4985  0029CC                     l7462:
  4986                           
  4987                           ; BSR set to: 0
  4988  0029CC  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4989  0029CE  EFEB  F014         	goto	u8231
  4990  0029D2  EFED  F014         	goto	u8230
  4991  0029D6                     u8231:
  4992  0029D6  EF5E  F015         	goto	l7472
  4993  0029DA                     u8230:
  4994  0029DA                     
  4995                           ; BSR set to: 0
  4996  0029DA  C06A  F060         	movff	floorf@e,??_floorf
  4997  0029DE  0EFF               	movlw	255
  4998  0029E0  6F61               	movwf	(??_floorf+1)& (0+255),b
  4999  0029E2  0EFF               	movlw	255
  5000  0029E4  6F62               	movwf	(??_floorf+2)& (0+255),b
  5001  0029E6  0E7F               	movlw	127
  5002  0029E8  6F63               	movwf	(??_floorf+3)& (0+255),b
  5003  0029EA  0E00               	movlw	0
  5004  0029EC  6F64               	movwf	(??_floorf+4)& (0+255),b
  5005  0029EE                     u8245:
  5006  0029EE  6760               	tstfsz	??_floorf& (0+255),b
  5007  0029F0  EFFC  F014         	goto	u8246
  5008  0029F4  EF04  F015         	goto	u8247
  5009  0029F8                     u8246:
  5010  0029F8  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  5011  0029FA  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  5012  0029FC  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5013  0029FE  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5014  002A00  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5015  002A02  2F60               	decfsz	??_floorf& (0+255),f,b
  5016  002A04  EFF7  F014         	goto	u8245
  5017  002A08                     u8247:
  5018  002A08  C061  F066         	movff	??_floorf+1,floorf@m
  5019  002A0C  C062  F067         	movff	??_floorf+2,floorf@m+1
  5020  002A10  C063  F068         	movff	??_floorf+3,floorf@m+2
  5021  002A14  C064  F069         	movff	??_floorf+4,floorf@m+3
  5022  002A18  0100               	movlb	0	; () banked
  5023  002A1A  5166               	movf	floorf@m& (0+255),w,b
  5024  002A1C  156C               	andwf	floorf@u& (0+255),w,b
  5025  002A1E  6F60               	movwf	??_floorf& (0+255),b
  5026  002A20  5167               	movf	(floorf@m+1)& (0+255),w,b
  5027  002A22  156D               	andwf	(floorf@u+1)& (0+255),w,b
  5028  002A24  6F61               	movwf	(??_floorf+1)& (0+255),b
  5029  002A26  5168               	movf	(floorf@m+2)& (0+255),w,b
  5030  002A28  156E               	andwf	(floorf@u+2)& (0+255),w,b
  5031  002A2A  6F62               	movwf	(??_floorf+2)& (0+255),b
  5032  002A2C  5169               	movf	(floorf@m+3)& (0+255),w,b
  5033  002A2E  156F               	andwf	(floorf@u+3)& (0+255),w,b
  5034  002A30  6F63               	movwf	(??_floorf+3)& (0+255),b
  5035  002A32  5160               	movf	??_floorf& (0+255),w,b
  5036  002A34  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5037  002A36  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5038  002A38  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5039  002A3A  A4D8               	btfss	status,2,c
  5040  002A3C  EF22  F015         	goto	u8251
  5041  002A40  EF24  F015         	goto	u8250
  5042  002A44                     u8251:
  5043  002A44  EF26  F015         	goto	l7468
  5044  002A48                     u8250:
  5045  002A48  EFDC  F014         	goto	l7460
  5046  002A4C                     l7468:
  5047                           
  5048                           ; BSR set to: 0
  5049  002A4C  C06C  F060         	movff	floorf@u,??_floorf
  5050  002A50  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5051  002A54  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5052  002A58  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5053  002A5C  0E20               	movlw	32
  5054  002A5E  EF36  F015         	goto	u8260
  5055  002A62                     u8265:
  5056  002A62  90D8               	bcf	status,0,c
  5057  002A64  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5058  002A66  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5059  002A68  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5060  002A6A  3360               	rrcf	??_floorf& (0+255),f,b
  5061  002A6C                     u8260:
  5062  002A6C  2EE8               	decfsz	wreg,f,c
  5063  002A6E  EF31  F015         	goto	u8265
  5064  002A72  5160               	movf	??_floorf& (0+255),w,b
  5065  002A74  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5066  002A76  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5067  002A78  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5068  002A7A  B4D8               	btfsc	status,2,c
  5069  002A7C  EF42  F015         	goto	u8271
  5070  002A80  EF44  F015         	goto	u8270
  5071  002A84                     u8271:
  5072  002A84  EF4C  F015         	goto	l1587
  5073  002A88                     u8270:
  5074  002A88                     
  5075                           ; BSR set to: 0
  5076  002A88  5166               	movf	floorf@m& (0+255),w,b
  5077  002A8A  276C               	addwf	floorf@u& (0+255),f,b
  5078  002A8C  5167               	movf	(floorf@m+1)& (0+255),w,b
  5079  002A8E  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  5080  002A90  5168               	movf	(floorf@m+2)& (0+255),w,b
  5081  002A92  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  5082  002A94  5169               	movf	(floorf@m+3)& (0+255),w,b
  5083  002A96  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  5084  002A98                     l1587:
  5085                           
  5086                           ; BSR set to: 0
  5087  002A98  1D66               	comf	floorf@m& (0+255),w,b
  5088  002A9A  6F60               	movwf	??_floorf& (0+255),b
  5089  002A9C  1D67               	comf	(floorf@m+1)& (0+255),w,b
  5090  002A9E  6F61               	movwf	(??_floorf+1)& (0+255),b
  5091  002AA0  1D68               	comf	(floorf@m+2)& (0+255),w,b
  5092  002AA2  6F62               	movwf	(??_floorf+2)& (0+255),b
  5093  002AA4  1D69               	comf	(floorf@m+3)& (0+255),w,b
  5094  002AA6  6F63               	movwf	(??_floorf+3)& (0+255),b
  5095  002AA8  5160               	movf	??_floorf& (0+255),w,b
  5096  002AAA  176C               	andwf	floorf@u& (0+255),f,b
  5097  002AAC  5161               	movf	(??_floorf+1)& (0+255),w,b
  5098  002AAE  176D               	andwf	(floorf@u+1)& (0+255),f,b
  5099  002AB0  5162               	movf	(??_floorf+2)& (0+255),w,b
  5100  002AB2  176E               	andwf	(floorf@u+2)& (0+255),f,b
  5101  002AB4  5163               	movf	(??_floorf+3)& (0+255),w,b
  5102  002AB6  176F               	andwf	(floorf@u+3)& (0+255),f,b
  5103  002AB8  EFA2  F015         	goto	l7480
  5104  002ABC                     l7472:
  5105                           
  5106                           ; BSR set to: 0
  5107  002ABC  C06C  F060         	movff	floorf@u,??_floorf
  5108  002AC0  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5109  002AC4  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5110  002AC8  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5111  002ACC  0E20               	movlw	32
  5112  002ACE  EF6E  F015         	goto	u8280
  5113  002AD2                     u8285:
  5114  002AD2  90D8               	bcf	status,0,c
  5115  002AD4  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5116  002AD6  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5117  002AD8  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5118  002ADA  3360               	rrcf	??_floorf& (0+255),f,b
  5119  002ADC                     u8280:
  5120  002ADC  2EE8               	decfsz	wreg,f,c
  5121  002ADE  EF69  F015         	goto	u8285
  5122  002AE2  5160               	movf	??_floorf& (0+255),w,b
  5123  002AE4  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5124  002AE6  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5125  002AE8  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5126  002AEA  A4D8               	btfss	status,2,c
  5127  002AEC  EF7A  F015         	goto	u8291
  5128  002AF0  EF7C  F015         	goto	u8290
  5129  002AF4                     u8291:
  5130  002AF4  EF86  F015         	goto	l7476
  5131  002AF8                     u8290:
  5132  002AF8                     
  5133                           ; BSR set to: 0
  5134  002AF8  0E00               	movlw	0
  5135  002AFA  6F6C               	movwf	floorf@u& (0+255),b
  5136  002AFC  0E00               	movlw	0
  5137  002AFE  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5138  002B00  0E00               	movlw	0
  5139  002B02  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5140  002B04  0E00               	movlw	0
  5141  002B06  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5142  002B08  EFA2  F015         	goto	l7480
  5143  002B0C                     l7476:
  5144                           
  5145                           ; BSR set to: 0
  5146  002B0C  90D8               	bcf	status,0,c
  5147  002B0E  356C               	rlcf	floorf@u& (0+255),w,b
  5148  002B10  6F60               	movwf	??_floorf& (0+255),b
  5149  002B12  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  5150  002B14  6F61               	movwf	(??_floorf+1)& (0+255),b
  5151  002B16  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  5152  002B18  6F62               	movwf	(??_floorf+2)& (0+255),b
  5153  002B1A  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  5154  002B1C  6F63               	movwf	(??_floorf+3)& (0+255),b
  5155  002B1E  5160               	movf	??_floorf& (0+255),w,b
  5156  002B20  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5157  002B22  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5158  002B24  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5159  002B26  B4D8               	btfsc	status,2,c
  5160  002B28  EF98  F015         	goto	u8301
  5161  002B2C  EF9A  F015         	goto	u8300
  5162  002B30                     u8301:
  5163  002B30  EFA2  F015         	goto	l7480
  5164  002B34                     u8300:
  5165  002B34                     
  5166                           ; BSR set to: 0
  5167  002B34  0E00               	movlw	0
  5168  002B36  6F6C               	movwf	floorf@u& (0+255),b
  5169  002B38  0E00               	movlw	0
  5170  002B3A  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5171  002B3C  0E80               	movlw	128
  5172  002B3E  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5173  002B40  0EBF               	movlw	191
  5174  002B42  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5175  002B44                     l7480:
  5176                           
  5177                           ; BSR set to: 0
  5178  002B44  C06C  F051         	movff	floorf@u,?_floorf
  5179  002B48  C06D  F052         	movff	floorf@u+1,?_floorf+1
  5180  002B4C  C06E  F053         	movff	floorf@u+2,?_floorf+2
  5181  002B50  C06F  F054         	movff	floorf@u+3,?_floorf+3
  5182  002B54                     l1584:
  5183                           
  5184                           ; BSR set to: 0
  5185  002B54  0012               	return		;funcret
  5186  002B56                     __end_of_floorf:
  5187                           	opt callstack 0
  5188                           
  5189 ;; *************** function ___fpclassifyf *****************
  5190 ;; Defined at:
  5191 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  x               4    5[COMRAM] float 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  u               4   15[COMRAM] struct .
  5196 ;;  e               2   13[COMRAM] int 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  2    5[COMRAM] int 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5206 ;;      Params:         4       0       0       0       0       0       0       0       0
  5207 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5208 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5209 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5210 ;;Total ram usage:       14 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    2
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_efgtoa
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text12
  5221  00393A                     __ptext12:
  5222                           	opt callstack 0
  5223  00393A                     ___fpclassifyf:
  5224                           	opt callstack 23
  5225  00393A  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5226  00393E  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5227  003942  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5228  003946  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5229  00394A  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5230  00394E  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5231  003952  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5232  003956  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5233  00395A  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5234  00395E  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5235  003962  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5236  003966  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5237  00396A  0E18               	movlw	24
  5238  00396C  EFBD  F01C         	goto	u8090
  5239  003970                     u8095:
  5240  003970  90D8               	bcf	status,0,c
  5241  003972  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5242  003974  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5243  003976  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5244  003978  320A               	rrcf	??___fpclassifyf^0,f,c
  5245  00397A                     u8090:
  5246  00397A  2EE8               	decfsz	wreg,f,c
  5247  00397C  EFB8  F01C         	goto	u8095
  5248  003980  500A               	movf	??___fpclassifyf^0,w,c
  5249  003982  6E0E               	movwf	___fpclassifyf@e^0,c
  5250  003984  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5251  003986  500E               	movf	___fpclassifyf@e^0,w,c
  5252  003988  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5253  00398A  A4D8               	btfss	status,2,c
  5254  00398C  EFCA  F01C         	goto	u8101
  5255  003990  EFCC  F01C         	goto	u8100
  5256  003994                     u8101:
  5257  003994  EFEC  F01C         	goto	l7432
  5258  003998                     u8100:
  5259  003998  90D8               	bcf	status,0,c
  5260  00399A  3410               	rlcf	___fpclassifyf@u^0,w,c
  5261  00399C  6E0A               	movwf	??___fpclassifyf^0,c
  5262  00399E  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5263  0039A0  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5264  0039A2  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5265  0039A4  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5266  0039A6  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5267  0039A8  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5268  0039AA  500A               	movf	??___fpclassifyf^0,w,c
  5269  0039AC  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5270  0039AE  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5271  0039B0  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5272  0039B2  A4D8               	btfss	status,2,c
  5273  0039B4  EFDE  F01C         	goto	u8111
  5274  0039B8  EFE0  F01C         	goto	u8110
  5275  0039BC                     u8111:
  5276  0039BC  EFE6  F01C         	goto	l7428
  5277  0039C0                     u8110:
  5278  0039C0  0E00               	movlw	0
  5279  0039C2  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5280  0039C4  0E02               	movlw	2
  5281  0039C6  6E06               	movwf	?___fpclassifyf^0,c
  5282  0039C8  EF1B  F01D         	goto	l1539
  5283  0039CC                     l7428:
  5284  0039CC  0E00               	movlw	0
  5285  0039CE  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5286  0039D0  0E03               	movlw	3
  5287  0039D2  6E06               	movwf	?___fpclassifyf^0,c
  5288  0039D4  EF1B  F01D         	goto	l1539
  5289  0039D8                     l7432:
  5290  0039D8  280E               	incf	___fpclassifyf@e^0,w,c
  5291  0039DA  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5292  0039DC  A4D8               	btfss	status,2,c
  5293  0039DE  EFF3  F01C         	goto	u8121
  5294  0039E2  EFF5  F01C         	goto	u8120
  5295  0039E6                     u8121:
  5296  0039E6  EF17  F01D         	goto	l7438
  5297  0039EA                     u8120:
  5298  0039EA  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5299  0039EE  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5300  0039F2  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5301  0039F6  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5302  0039FA  0E09               	movlw	9
  5303  0039FC                     u8135:
  5304  0039FC  90D8               	bcf	status,0,c
  5305  0039FE  360A               	rlcf	??___fpclassifyf^0,f,c
  5306  003A00  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5307  003A02  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5308  003A04  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5309  003A06  2EE8               	decfsz	wreg,f,c
  5310  003A08  EFFE  F01C         	goto	u8135
  5311  003A0C  500A               	movf	??___fpclassifyf^0,w,c
  5312  003A0E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5313  003A10  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5314  003A12  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5315  003A14  B4D8               	btfsc	status,2,c
  5316  003A16  EF0F  F01D         	goto	u8141
  5317  003A1A  EF12  F01D         	goto	u8140
  5318  003A1E                     u8141:
  5319  003A1E  0E01               	movlw	1
  5320  003A20  EF13  F01D         	goto	u8150
  5321  003A24                     u8140:
  5322  003A24  0E00               	movlw	0
  5323  003A26                     u8150:
  5324  003A26  6E06               	movwf	?___fpclassifyf^0,c
  5325  003A28  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5326  003A2A  EF1B  F01D         	goto	l1539
  5327  003A2E                     l7438:
  5328  003A2E  0E00               	movlw	0
  5329  003A30  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5330  003A32  0E04               	movlw	4
  5331  003A34  6E06               	movwf	?___fpclassifyf^0,c
  5332  003A36                     l1539:
  5333  003A36  0012               	return		;funcret
  5334  003A38                     __end_of___fpclassifyf:
  5335                           	opt callstack 0
  5336                           
  5337 ;; *************** function ___flsub *****************
  5338 ;; Defined at:
  5339 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  b               4   21[BANK0 ] int 
  5342 ;;  a               4   25[BANK0 ] int 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  4   21[BANK0 ] int 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         0       8       0       0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5357 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        8 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    3
  5361 ;; This function calls:
  5362 ;;		___fladd
  5363 ;; This function is called by:
  5364 ;;		_efgtoa
  5365 ;;		_PID
  5366 ;;		_roundf
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text13
  5371  0045EC                     __ptext13:
  5372                           	opt callstack 0
  5373  0045EC                     ___flsub:
  5374                           	opt callstack 22
  5375  0045EC  0E00               	movlw	0
  5376  0045EE  0100               	movlb	0	; () banked
  5377  0045F0  1B79               	xorwf	___flsub@a& (0+255),f,b
  5378  0045F2  0E00               	movlw	0
  5379  0045F4  1B7A               	xorwf	(___flsub@a+1)& (0+255),f,b
  5380  0045F6  0E00               	movlw	0
  5381  0045F8  1B7B               	xorwf	(___flsub@a+2)& (0+255),f,b
  5382  0045FA  0E80               	movlw	128
  5383  0045FC  1B7C               	xorwf	(___flsub@a+3)& (0+255),f,b
  5384  0045FE                     
  5385                           ; BSR set to: 0
  5386  0045FE  C075  F028         	movff	___flsub@b,___fladd@b
  5387  004602  C076  F029         	movff	___flsub@b+1,___fladd@b+1
  5388  004606  C077  F02A         	movff	___flsub@b+2,___fladd@b+2
  5389  00460A  C078  F02B         	movff	___flsub@b+3,___fladd@b+3
  5390  00460E  C079  F02C         	movff	___flsub@a,___fladd@a
  5391  004612  C07A  F02D         	movff	___flsub@a+1,___fladd@a+1
  5392  004616  C07B  F02E         	movff	___flsub@a+2,___fladd@a+2
  5393  00461A  C07C  F02F         	movff	___flsub@a+3,___fladd@a+3
  5394  00461E  ECEE  F00C         	call	___fladd	;wreg free
  5395  004622  C028  F075         	movff	?___fladd,?___flsub
  5396  004626  C029  F076         	movff	?___fladd+1,?___flsub+1
  5397  00462A  C02A  F077         	movff	?___fladd+2,?___flsub+2
  5398  00462E  C02B  F078         	movff	?___fladd+3,?___flsub+3
  5399  004632  0012               	return		;funcret
  5400  004634                     __end_of___flsub:
  5401                           	opt callstack 0
  5402                           
  5403 ;; *************** function ___flneg *****************
  5404 ;; Defined at:
  5405 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  f1              4    5[COMRAM] int 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  4    5[COMRAM] int 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5419 ;;      Params:         4       0       0       0       0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5422 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5423 ;;Total ram usage:        4 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    2
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_efgtoa
  5430 ;;		_roundf
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text14
  5435  004778                     __ptext14:
  5436                           	opt callstack 0
  5437  004778                     ___flneg:
  5438                           	opt callstack 23
  5439  004778  5006               	movf	___flneg@f1^0,w,c
  5440  00477A  1007               	iorwf	(___flneg@f1+1)^0,w,c
  5441  00477C  1008               	iorwf	(___flneg@f1+2)^0,w,c
  5442  00477E  1009               	iorwf	(___flneg@f1+3)^0,w,c
  5443  004780  B4D8               	btfsc	status,2,c
  5444  004782  EFC5  F023         	goto	u9081
  5445  004786  EFC7  F023         	goto	u9080
  5446  00478A                     u9081:
  5447  00478A  EFCF  F023         	goto	l7970
  5448  00478E                     u9080:
  5449  00478E  0E00               	movlw	0
  5450  004790  1A06               	xorwf	___flneg@f1^0,f,c
  5451  004792  0E00               	movlw	0
  5452  004794  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  5453  004796  0E00               	movlw	0
  5454  004798  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  5455  00479A  0E80               	movlw	128
  5456  00479C  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  5457  00479E                     l7970:
  5458  00479E  C006  F006         	movff	___flneg@f1,?___flneg
  5459  0047A2  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  5460  0047A6  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  5461  0047AA  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  5462  0047AE  0012               	return		;funcret
  5463  0047B0                     __end_of___flneg:
  5464                           	opt callstack 0
  5465                           
  5466 ;; *************** function ___flge *****************
  5467 ;; Defined at:
  5468 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  ff1             4   21[BANK0 ] int 
  5471 ;;  ff2             4   25[BANK0 ] int 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;		None               void
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5483 ;;      Params:         0       8       0       0       0       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5485 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5486 ;;      Totals:         0      12       0       0       0       0       0       0       0
  5487 ;;Total ram usage:       12 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    2
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_efgtoa
  5494 ;;		_hayCruce
  5495 ;;		_decidirDireccion
  5496 ;;		_probarPID
  5497 ;;		_roundf
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text15
  5502  003834                     __ptext15:
  5503                           	opt callstack 0
  5504  003834                     ___flge:
  5505                           	opt callstack 23
  5506  003834  0E00               	movlw	0
  5507  003836  0100               	movlb	0	; () banked
  5508  003838  1575               	andwf	___flge@ff1& (0+255),w,b
  5509  00383A  6F7D               	movwf	??___flge& (0+255),b
  5510  00383C  0E00               	movlw	0
  5511  00383E  1576               	andwf	(___flge@ff1+1)& (0+255),w,b
  5512  003840  6F7E               	movwf	(??___flge+1)& (0+255),b
  5513  003842  0E80               	movlw	128
  5514  003844  1577               	andwf	(___flge@ff1+2)& (0+255),w,b
  5515  003846  6F7F               	movwf	(??___flge+2)& (0+255),b
  5516  003848  0E7F               	movlw	127
  5517  00384A  1578               	andwf	(___flge@ff1+3)& (0+255),w,b
  5518  00384C  6F80               	movwf	(??___flge+3)& (0+255),b
  5519  00384E  517D               	movf	??___flge& (0+255),w,b
  5520  003850  117E               	iorwf	(??___flge+1)& (0+255),w,b
  5521  003852  117F               	iorwf	(??___flge+2)& (0+255),w,b
  5522  003854  1180               	iorwf	(??___flge+3)& (0+255),w,b
  5523  003856  A4D8               	btfss	status,2,c
  5524  003858  EF30  F01C         	goto	u9031
  5525  00385C  EF32  F01C         	goto	u9030
  5526  003860                     u9031:
  5527  003860  EF3A  F01C         	goto	l7948
  5528  003864                     u9030:
  5529  003864                     
  5530                           ; BSR set to: 0
  5531  003864  0E00               	movlw	0
  5532  003866  6F75               	movwf	___flge@ff1& (0+255),b
  5533  003868  0E00               	movlw	0
  5534  00386A  6F76               	movwf	(___flge@ff1+1)& (0+255),b
  5535  00386C  0E00               	movlw	0
  5536  00386E  6F77               	movwf	(___flge@ff1+2)& (0+255),b
  5537  003870  0E00               	movlw	0
  5538  003872  6F78               	movwf	(___flge@ff1+3)& (0+255),b
  5539  003874                     l7948:
  5540                           
  5541                           ; BSR set to: 0
  5542  003874  0E00               	movlw	0
  5543  003876  1579               	andwf	___flge@ff2& (0+255),w,b
  5544  003878  6F7D               	movwf	??___flge& (0+255),b
  5545  00387A  0E00               	movlw	0
  5546  00387C  157A               	andwf	(___flge@ff2+1)& (0+255),w,b
  5547  00387E  6F7E               	movwf	(??___flge+1)& (0+255),b
  5548  003880  0E80               	movlw	128
  5549  003882  157B               	andwf	(___flge@ff2+2)& (0+255),w,b
  5550  003884  6F7F               	movwf	(??___flge+2)& (0+255),b
  5551  003886  0E7F               	movlw	127
  5552  003888  157C               	andwf	(___flge@ff2+3)& (0+255),w,b
  5553  00388A  6F80               	movwf	(??___flge+3)& (0+255),b
  5554  00388C  517D               	movf	??___flge& (0+255),w,b
  5555  00388E  117E               	iorwf	(??___flge+1)& (0+255),w,b
  5556  003890  117F               	iorwf	(??___flge+2)& (0+255),w,b
  5557  003892  1180               	iorwf	(??___flge+3)& (0+255),w,b
  5558  003894  A4D8               	btfss	status,2,c
  5559  003896  EF4F  F01C         	goto	u9041
  5560  00389A  EF51  F01C         	goto	u9040
  5561  00389E                     u9041:
  5562  00389E  EF59  F01C         	goto	l7952
  5563  0038A2                     u9040:
  5564  0038A2                     
  5565                           ; BSR set to: 0
  5566  0038A2  0E00               	movlw	0
  5567  0038A4  6F79               	movwf	___flge@ff2& (0+255),b
  5568  0038A6  0E00               	movlw	0
  5569  0038A8  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5570  0038AA  0E00               	movlw	0
  5571  0038AC  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5572  0038AE  0E00               	movlw	0
  5573  0038B0  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5574  0038B2                     l7952:
  5575                           
  5576                           ; BSR set to: 0
  5577  0038B2  AF78               	btfss	(___flge@ff1+3)& (0+255),7,b
  5578  0038B4  EF5E  F01C         	goto	u9051
  5579  0038B8  EF60  F01C         	goto	u9050
  5580  0038BC                     u9051:
  5581  0038BC  EF69  F01C         	goto	l7956
  5582  0038C0                     u9050:
  5583  0038C0                     
  5584                           ; BSR set to: 0
  5585  0038C0  6D75               	negf	___flge@ff1& (0+255),b
  5586  0038C2  1F76               	comf	(___flge@ff1+1)& (0+255),f,b
  5587  0038C4  B0D8               	btfsc	status,0,c
  5588  0038C6  2B76               	incf	(___flge@ff1+1)& (0+255),f,b
  5589  0038C8  1F77               	comf	(___flge@ff1+2)& (0+255),f,b
  5590  0038CA  B0D8               	btfsc	status,0,c
  5591  0038CC  2B77               	incf	(___flge@ff1+2)& (0+255),f,b
  5592  0038CE  0E80               	movlw	128
  5593  0038D0  5778               	subfwb	(___flge@ff1+3)& (0+255),f,b
  5594  0038D2                     l7956:
  5595                           
  5596                           ; BSR set to: 0
  5597  0038D2  AF7C               	btfss	(___flge@ff2+3)& (0+255),7,b
  5598  0038D4  EF6E  F01C         	goto	u9061
  5599  0038D8  EF70  F01C         	goto	u9060
  5600  0038DC                     u9061:
  5601  0038DC  EF79  F01C         	goto	l1123
  5602  0038E0                     u9060:
  5603  0038E0                     
  5604                           ; BSR set to: 0
  5605  0038E0  6D79               	negf	___flge@ff2& (0+255),b
  5606  0038E2  1F7A               	comf	(___flge@ff2+1)& (0+255),f,b
  5607  0038E4  B0D8               	btfsc	status,0,c
  5608  0038E6  2B7A               	incf	(___flge@ff2+1)& (0+255),f,b
  5609  0038E8  1F7B               	comf	(___flge@ff2+2)& (0+255),f,b
  5610  0038EA  B0D8               	btfsc	status,0,c
  5611  0038EC  2B7B               	incf	(___flge@ff2+2)& (0+255),f,b
  5612  0038EE  0E80               	movlw	128
  5613  0038F0  577C               	subfwb	(___flge@ff2+3)& (0+255),f,b
  5614  0038F2                     l1123:
  5615                           
  5616                           ; BSR set to: 0
  5617  0038F2  0E00               	movlw	0
  5618  0038F4  1B75               	xorwf	___flge@ff1& (0+255),f,b
  5619  0038F6  0E00               	movlw	0
  5620  0038F8  1B76               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5621  0038FA  0E00               	movlw	0
  5622  0038FC  1B77               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5623  0038FE  0E80               	movlw	128
  5624  003900  1B78               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5625  003902  0E00               	movlw	0
  5626  003904  1B79               	xorwf	___flge@ff2& (0+255),f,b
  5627  003906  0E00               	movlw	0
  5628  003908  1B7A               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5629  00390A  0E00               	movlw	0
  5630  00390C  1B7B               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5631  00390E  0E80               	movlw	128
  5632  003910  1B7C               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5633  003912  5179               	movf	___flge@ff2& (0+255),w,b
  5634  003914  5D75               	subwf	___flge@ff1& (0+255),w,b
  5635  003916  517A               	movf	(___flge@ff2+1)& (0+255),w,b
  5636  003918  5976               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5637  00391A  517B               	movf	(___flge@ff2+2)& (0+255),w,b
  5638  00391C  5977               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5639  00391E  517C               	movf	(___flge@ff2+3)& (0+255),w,b
  5640  003920  5978               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5641  003922  B0D8               	btfsc	status,0,c
  5642  003924  EF96  F01C         	goto	u9071
  5643  003928  EF98  F01C         	goto	u9070
  5644  00392C                     u9071:
  5645  00392C  EF9B  F01C         	goto	l7962
  5646  003930                     u9070:
  5647  003930                     
  5648                           ; BSR set to: 0
  5649  003930  90D8               	bcf	status,0,c
  5650  003932  EF9C  F01C         	goto	l1128
  5651  003936                     l7962:
  5652                           
  5653                           ; BSR set to: 0
  5654  003936  80D8               	bsf	status,0,c
  5655  003938                     l1128:
  5656                           
  5657                           ; BSR set to: 0
  5658  003938  0012               	return		;funcret
  5659  00393A                     __end_of___flge:
  5660                           	opt callstack 0
  5661                           
  5662 ;; *************** function ___fleq *****************
  5663 ;; Defined at:
  5664 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  ff1             4    5[COMRAM] int 
  5667 ;;  ff2             4    9[COMRAM] int 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;		None               void
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5679 ;;      Params:         8       0       0       0       0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5681 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5682 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5683 ;;Total ram usage:       12 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    2
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_efgtoa
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text16
  5694  003EEA                     __ptext16:
  5695                           	opt callstack 0
  5696  003EEA                     ___fleq:
  5697                           	opt callstack 23
  5698  003EEA  0E00               	movlw	0
  5699  003EEC  1406               	andwf	___fleq@ff1^0,w,c
  5700  003EEE  6E0E               	movwf	??___fleq^0,c
  5701  003EF0  0E00               	movlw	0
  5702  003EF2  1407               	andwf	(___fleq@ff1+1)^0,w,c
  5703  003EF4  6E0F               	movwf	(??___fleq+1)^0,c
  5704  003EF6  0E80               	movlw	128
  5705  003EF8  1408               	andwf	(___fleq@ff1+2)^0,w,c
  5706  003EFA  6E10               	movwf	(??___fleq+2)^0,c
  5707  003EFC  0E7F               	movlw	127
  5708  003EFE  1409               	andwf	(___fleq@ff1+3)^0,w,c
  5709  003F00  6E11               	movwf	(??___fleq+3)^0,c
  5710  003F02  500E               	movf	??___fleq^0,w,c
  5711  003F04  100F               	iorwf	(??___fleq+1)^0,w,c
  5712  003F06  1010               	iorwf	(??___fleq+2)^0,w,c
  5713  003F08  1011               	iorwf	(??___fleq+3)^0,w,c
  5714  003F0A  A4D8               	btfss	status,2,c
  5715  003F0C  EF8A  F01F         	goto	u9001
  5716  003F10  EF8C  F01F         	goto	u9000
  5717  003F14                     u9001:
  5718  003F14  EF94  F01F         	goto	l7932
  5719  003F18                     u9000:
  5720  003F18  0E00               	movlw	0
  5721  003F1A  6E06               	movwf	___fleq@ff1^0,c
  5722  003F1C  0E00               	movlw	0
  5723  003F1E  6E07               	movwf	(___fleq@ff1+1)^0,c
  5724  003F20  0E00               	movlw	0
  5725  003F22  6E08               	movwf	(___fleq@ff1+2)^0,c
  5726  003F24  0E00               	movlw	0
  5727  003F26  6E09               	movwf	(___fleq@ff1+3)^0,c
  5728  003F28                     l7932:
  5729  003F28  0E00               	movlw	0
  5730  003F2A  140A               	andwf	___fleq@ff2^0,w,c
  5731  003F2C  6E0E               	movwf	??___fleq^0,c
  5732  003F2E  0E00               	movlw	0
  5733  003F30  140B               	andwf	(___fleq@ff2+1)^0,w,c
  5734  003F32  6E0F               	movwf	(??___fleq+1)^0,c
  5735  003F34  0E80               	movlw	128
  5736  003F36  140C               	andwf	(___fleq@ff2+2)^0,w,c
  5737  003F38  6E10               	movwf	(??___fleq+2)^0,c
  5738  003F3A  0E7F               	movlw	127
  5739  003F3C  140D               	andwf	(___fleq@ff2+3)^0,w,c
  5740  003F3E  6E11               	movwf	(??___fleq+3)^0,c
  5741  003F40  500E               	movf	??___fleq^0,w,c
  5742  003F42  100F               	iorwf	(??___fleq+1)^0,w,c
  5743  003F44  1010               	iorwf	(??___fleq+2)^0,w,c
  5744  003F46  1011               	iorwf	(??___fleq+3)^0,w,c
  5745  003F48  A4D8               	btfss	status,2,c
  5746  003F4A  EFA9  F01F         	goto	u9011
  5747  003F4E  EFAB  F01F         	goto	u9010
  5748  003F52                     u9011:
  5749  003F52  EFB3  F01F         	goto	l7936
  5750  003F56                     u9010:
  5751  003F56  0E00               	movlw	0
  5752  003F58  6E0A               	movwf	___fleq@ff2^0,c
  5753  003F5A  0E00               	movlw	0
  5754  003F5C  6E0B               	movwf	(___fleq@ff2+1)^0,c
  5755  003F5E  0E00               	movlw	0
  5756  003F60  6E0C               	movwf	(___fleq@ff2+2)^0,c
  5757  003F62  0E00               	movlw	0
  5758  003F64  6E0D               	movwf	(___fleq@ff2+3)^0,c
  5759  003F66                     l7936:
  5760  003F66  500A               	movf	___fleq@ff2^0,w,c
  5761  003F68  1806               	xorwf	___fleq@ff1^0,w,c
  5762  003F6A  E10F               	bnz	u9020
  5763  003F6C  500B               	movf	(___fleq@ff2+1)^0,w,c
  5764  003F6E  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  5765  003F70  E10C               	bnz	u9020
  5766  003F72  500C               	movf	(___fleq@ff2+2)^0,w,c
  5767  003F74  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  5768  003F76  E109               	bnz	u9020
  5769  003F78  500D               	movf	(___fleq@ff2+3)^0,w,c
  5770  003F7A  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  5771  003F7C  B4D8               	btfsc	status,2,c
  5772  003F7E  EFC3  F01F         	goto	u9021
  5773  003F82  EFC5  F01F         	goto	u9020
  5774  003F86                     u9021:
  5775  003F86  EFC8  F01F         	goto	l7940
  5776  003F8A                     u9020:
  5777  003F8A  90D8               	bcf	status,0,c
  5778  003F8C  EFC9  F01F         	goto	l1117
  5779  003F90                     l7940:
  5780  003F90  80D8               	bsf	status,0,c
  5781  003F92                     l1117:
  5782  003F92  0012               	return		;funcret
  5783  003F94                     __end_of___fleq:
  5784                           	opt callstack 0
  5785                           
  5786 ;; *************** function ___awmod *****************
  5787 ;; Defined at:
  5788 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  dividend        2    5[COMRAM] int 
  5791 ;;  divisor         2    7[COMRAM] int 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  sign            1   10[COMRAM] unsigned char 
  5794 ;;  counter         1    9[COMRAM] unsigned char 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  2    5[COMRAM] int 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5804 ;;      Params:         4       0       0       0       0       0       0       0       0
  5805 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5807 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5808 ;;Total ram usage:        6 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    2
  5811 ;; This function calls:
  5812 ;;		Nothing
  5813 ;; This function is called by:
  5814 ;;		_efgtoa
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text17
  5819  003E3A                     __ptext17:
  5820                           	opt callstack 0
  5821  003E3A                     ___awmod:
  5822                           	opt callstack 23
  5823  003E3A  0E00               	movlw	0
  5824  003E3C  6E0B               	movwf	___awmod@sign^0,c
  5825  003E3E  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5826  003E40  EF26  F01F         	goto	u8940
  5827  003E44  EF24  F01F         	goto	u8941
  5828  003E48                     u8941:
  5829  003E48  EF2C  F01F         	goto	l7900
  5830  003E4C                     u8940:
  5831  003E4C  6C06               	negf	___awmod@dividend^0,c
  5832  003E4E  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5833  003E50  B0D8               	btfsc	status,0,c
  5834  003E52  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5835  003E54  0E01               	movlw	1
  5836  003E56  6E0B               	movwf	___awmod@sign^0,c
  5837  003E58                     l7900:
  5838  003E58  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5839  003E5A  EF33  F01F         	goto	u8950
  5840  003E5E  EF31  F01F         	goto	u8951
  5841  003E62                     u8951:
  5842  003E62  EF37  F01F         	goto	l7904
  5843  003E66                     u8950:
  5844  003E66  6C08               	negf	___awmod@divisor^0,c
  5845  003E68  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5846  003E6A  B0D8               	btfsc	status,0,c
  5847  003E6C  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5848  003E6E                     l7904:
  5849  003E6E  5008               	movf	___awmod@divisor^0,w,c
  5850  003E70  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5851  003E72  B4D8               	btfsc	status,2,c
  5852  003E74  EF3E  F01F         	goto	u8961
  5853  003E78  EF40  F01F         	goto	u8960
  5854  003E7C                     u8961:
  5855  003E7C  EF64  F01F         	goto	l7920
  5856  003E80                     u8960:
  5857  003E80  0E01               	movlw	1
  5858  003E82  6E0A               	movwf	___awmod@counter^0,c
  5859  003E84  EF48  F01F         	goto	l7910
  5860  003E88                     l7908:
  5861  003E88  90D8               	bcf	status,0,c
  5862  003E8A  3608               	rlcf	___awmod@divisor^0,f,c
  5863  003E8C  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5864  003E8E  2A0A               	incf	___awmod@counter^0,f,c
  5865  003E90                     l7910:
  5866  003E90  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5867  003E92  EF4D  F01F         	goto	u8971
  5868  003E96  EF4F  F01F         	goto	u8970
  5869  003E9A                     u8971:
  5870  003E9A  EF44  F01F         	goto	l7908
  5871  003E9E                     u8970:
  5872  003E9E                     l7912:
  5873  003E9E  5008               	movf	___awmod@divisor^0,w,c
  5874  003EA0  5C06               	subwf	___awmod@dividend^0,w,c
  5875  003EA2  5009               	movf	(___awmod@divisor+1)^0,w,c
  5876  003EA4  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5877  003EA6  A0D8               	btfss	status,0,c
  5878  003EA8  EF58  F01F         	goto	u8981
  5879  003EAC  EF5A  F01F         	goto	u8980
  5880  003EB0                     u8981:
  5881  003EB0  EF5E  F01F         	goto	l7916
  5882  003EB4                     u8980:
  5883  003EB4  5008               	movf	___awmod@divisor^0,w,c
  5884  003EB6  5E06               	subwf	___awmod@dividend^0,f,c
  5885  003EB8  5009               	movf	(___awmod@divisor+1)^0,w,c
  5886  003EBA  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5887  003EBC                     l7916:
  5888  003EBC  90D8               	bcf	status,0,c
  5889  003EBE  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5890  003EC0  3208               	rrcf	___awmod@divisor^0,f,c
  5891  003EC2  2E0A               	decfsz	___awmod@counter^0,f,c
  5892  003EC4  EF4F  F01F         	goto	l7912
  5893  003EC8                     l7920:
  5894  003EC8  500B               	movf	___awmod@sign^0,w,c
  5895  003ECA  B4D8               	btfsc	status,2,c
  5896  003ECC  EF6A  F01F         	goto	u8991
  5897  003ED0  EF6C  F01F         	goto	u8990
  5898  003ED4                     u8991:
  5899  003ED4  EF70  F01F         	goto	l7924
  5900  003ED8                     u8990:
  5901  003ED8  6C06               	negf	___awmod@dividend^0,c
  5902  003EDA  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5903  003EDC  B0D8               	btfsc	status,0,c
  5904  003EDE  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5905  003EE0                     l7924:
  5906  003EE0  C006  F006         	movff	___awmod@dividend,?___awmod
  5907  003EE4  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5908  003EE8  0012               	return		;funcret
  5909  003EEA                     __end_of___awmod:
  5910                           	opt callstack 0
  5911                           
  5912 ;; *************** function ___awdiv *****************
  5913 ;; Defined at:
  5914 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  dividend        2    5[COMRAM] int 
  5917 ;;  divisor         2    7[COMRAM] int 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  quotient        2   11[COMRAM] int 
  5920 ;;  sign            1   10[COMRAM] unsigned char 
  5921 ;;  counter         1    9[COMRAM] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  2    5[COMRAM] int 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2, status,0
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5931 ;;      Params:         4       0       0       0       0       0       0       0       0
  5932 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5934 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5935 ;;Total ram usage:        8 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    2
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_efgtoa
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text18
  5946  003CB4                     __ptext18:
  5947                           	opt callstack 0
  5948  003CB4                     ___awdiv:
  5949                           	opt callstack 23
  5950  003CB4  0E00               	movlw	0
  5951  003CB6  6E0B               	movwf	___awdiv@sign^0,c
  5952  003CB8  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5953  003CBA  EF63  F01E         	goto	u8880
  5954  003CBE  EF61  F01E         	goto	u8881
  5955  003CC2                     u8881:
  5956  003CC2  EF69  F01E         	goto	l7856
  5957  003CC6                     u8880:
  5958  003CC6  6C08               	negf	___awdiv@divisor^0,c
  5959  003CC8  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5960  003CCA  B0D8               	btfsc	status,0,c
  5961  003CCC  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5962  003CCE  0E01               	movlw	1
  5963  003CD0  6E0B               	movwf	___awdiv@sign^0,c
  5964  003CD2                     l7856:
  5965  003CD2  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5966  003CD4  EF70  F01E         	goto	u8890
  5967  003CD8  EF6E  F01E         	goto	u8891
  5968  003CDC                     u8891:
  5969  003CDC  EF76  F01E         	goto	l7862
  5970  003CE0                     u8890:
  5971  003CE0  6C06               	negf	___awdiv@dividend^0,c
  5972  003CE2  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5973  003CE4  B0D8               	btfsc	status,0,c
  5974  003CE6  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5975  003CE8  0E01               	movlw	1
  5976  003CEA  1A0B               	xorwf	___awdiv@sign^0,f,c
  5977  003CEC                     l7862:
  5978  003CEC  0E00               	movlw	0
  5979  003CEE  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5980  003CF0  0E00               	movlw	0
  5981  003CF2  6E0C               	movwf	___awdiv@quotient^0,c
  5982  003CF4  5008               	movf	___awdiv@divisor^0,w,c
  5983  003CF6  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5984  003CF8  B4D8               	btfsc	status,2,c
  5985  003CFA  EF81  F01E         	goto	u8901
  5986  003CFE  EF83  F01E         	goto	u8900
  5987  003D02                     u8901:
  5988  003D02  EFAB  F01E         	goto	l7884
  5989  003D06                     u8900:
  5990  003D06  0E01               	movlw	1
  5991  003D08  6E0A               	movwf	___awdiv@counter^0,c
  5992  003D0A  EF8B  F01E         	goto	l7870
  5993  003D0E                     l7868:
  5994  003D0E  90D8               	bcf	status,0,c
  5995  003D10  3608               	rlcf	___awdiv@divisor^0,f,c
  5996  003D12  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5997  003D14  2A0A               	incf	___awdiv@counter^0,f,c
  5998  003D16                     l7870:
  5999  003D16  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  6000  003D18  EF90  F01E         	goto	u8911
  6001  003D1C  EF92  F01E         	goto	u8910
  6002  003D20                     u8911:
  6003  003D20  EF87  F01E         	goto	l7868
  6004  003D24                     u8910:
  6005  003D24                     l7872:
  6006  003D24  90D8               	bcf	status,0,c
  6007  003D26  360C               	rlcf	___awdiv@quotient^0,f,c
  6008  003D28  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  6009  003D2A  5008               	movf	___awdiv@divisor^0,w,c
  6010  003D2C  5C06               	subwf	___awdiv@dividend^0,w,c
  6011  003D2E  5009               	movf	(___awdiv@divisor+1)^0,w,c
  6012  003D30  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  6013  003D32  A0D8               	btfss	status,0,c
  6014  003D34  EF9E  F01E         	goto	u8921
  6015  003D38  EFA0  F01E         	goto	u8920
  6016  003D3C                     u8921:
  6017  003D3C  EFA5  F01E         	goto	l7880
  6018  003D40                     u8920:
  6019  003D40  5008               	movf	___awdiv@divisor^0,w,c
  6020  003D42  5E06               	subwf	___awdiv@dividend^0,f,c
  6021  003D44  5009               	movf	(___awdiv@divisor+1)^0,w,c
  6022  003D46  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  6023  003D48  800C               	bsf	___awdiv@quotient^0,0,c
  6024  003D4A                     l7880:
  6025  003D4A  90D8               	bcf	status,0,c
  6026  003D4C  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  6027  003D4E  3208               	rrcf	___awdiv@divisor^0,f,c
  6028  003D50  2E0A               	decfsz	___awdiv@counter^0,f,c
  6029  003D52  EF92  F01E         	goto	l7872
  6030  003D56                     l7884:
  6031  003D56  500B               	movf	___awdiv@sign^0,w,c
  6032  003D58  B4D8               	btfsc	status,2,c
  6033  003D5A  EFB1  F01E         	goto	u8931
  6034  003D5E  EFB3  F01E         	goto	u8930
  6035  003D62                     u8931:
  6036  003D62  EFB7  F01E         	goto	l7888
  6037  003D66                     u8930:
  6038  003D66  6C0C               	negf	___awdiv@quotient^0,c
  6039  003D68  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  6040  003D6A  B0D8               	btfsc	status,0,c
  6041  003D6C  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  6042  003D6E                     l7888:
  6043  003D6E  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  6044  003D72  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  6045  003D76  0012               	return		;funcret
  6046  003D78                     __end_of___awdiv:
  6047                           	opt callstack 0
  6048                           
  6049 ;; *************** function _dtoa *****************
  6050 ;; Defined at:
  6051 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  6054 ;;		 -> sprintf@f(6), 
  6055 ;;  d               8   34[COMRAM] long long 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  n               8   58[COMRAM] long long 
  6058 ;;  i               2   66[COMRAM] int 
  6059 ;;  s               2   56[COMRAM] int 
  6060 ;;  w               2   54[COMRAM] int 
  6061 ;;  p               2   52[COMRAM] int 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  2   32[COMRAM] int 
  6064 ;; Registers used:
  6065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6071 ;;      Params:        10       0       0       0       0       0       0       0       0
  6072 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6073 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6074 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6075 ;;Total ram usage:       36 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    6
  6078 ;; This function calls:
  6079 ;;		___aodiv
  6080 ;;		___aomod
  6081 ;;		_abs
  6082 ;;		_pad
  6083 ;; This function is called by:
  6084 ;;		_vfpfcnvrt
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text19
  6089  002662                     __ptext19:
  6090                           	opt callstack 0
  6091  002662                     _dtoa:
  6092                           	opt callstack 20
  6093  002662                     
  6094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6095  002662  C023  F03B         	movff	dtoa@d,dtoa@n
  6096  002666  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  6097  00266A  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  6098  00266E  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  6099  002672  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  6100  002676  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  6101  00267A  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  6102  00267E  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  6103  002682                     
  6104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6105  002682  BE42               	btfsc	(dtoa@n+7)^0,7,c
  6106  002684  EF46  F013         	goto	u9181
  6107  002688  EF49  F013         	goto	u9180
  6108  00268C                     u9181:
  6109  00268C  0E01               	movlw	1
  6110  00268E  EF4A  F013         	goto	u9190
  6111  002692                     u9180:
  6112  002692  0E00               	movlw	0
  6113  002694                     u9190:
  6114  002694  6E39               	movwf	dtoa@s^0,c
  6115  002696  6A3A               	clrf	(dtoa@s+1)^0,c
  6116                           
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6118  002698  5039               	movf	dtoa@s^0,w,c
  6119  00269A  103A               	iorwf	(dtoa@s+1)^0,w,c
  6120  00269C  B4D8               	btfsc	status,2,c
  6121  00269E  EF53  F013         	goto	u9201
  6122  0026A2  EF55  F013         	goto	u9200
  6123  0026A6                     u9201:
  6124  0026A6  EF65  F013         	goto	l8036
  6125  0026AA                     u9200:
  6126  0026AA                     
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6128  0026AA  1E42               	comf	(dtoa@n+7)^0,f,c
  6129  0026AC  1E41               	comf	(dtoa@n+6)^0,f,c
  6130  0026AE  1E40               	comf	(dtoa@n+5)^0,f,c
  6131  0026B0  1E3F               	comf	(dtoa@n+4)^0,f,c
  6132  0026B2  1E3E               	comf	(dtoa@n+3)^0,f,c
  6133  0026B4  1E3D               	comf	(dtoa@n+2)^0,f,c
  6134  0026B6  1E3C               	comf	(dtoa@n+1)^0,f,c
  6135  0026B8  6C3B               	negf	dtoa@n^0,c
  6136  0026BA  0E00               	movlw	0
  6137  0026BC  223C               	addwfc	(dtoa@n+1)^0,f,c
  6138  0026BE  223D               	addwfc	(dtoa@n+2)^0,f,c
  6139  0026C0  223E               	addwfc	(dtoa@n+3)^0,f,c
  6140  0026C2  223F               	addwfc	(dtoa@n+4)^0,f,c
  6141  0026C4  2240               	addwfc	(dtoa@n+5)^0,f,c
  6142  0026C6  2241               	addwfc	(dtoa@n+6)^0,f,c
  6143  0026C8  2242               	addwfc	(dtoa@n+7)^0,f,c
  6144  0026CA                     l8036:
  6145                           
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6147  0026CA  0101               	movlb	1	; () banked
  6148  0026CC  BF35               	btfsc	(_prec+1)& (0+255),7,b
  6149  0026CE  EF6B  F013         	goto	u9211
  6150  0026D2  EF6D  F013         	goto	u9210
  6151  0026D6                     u9211:
  6152  0026D6  EF6E  F013         	goto	l8040
  6153  0026DA                     u9210:
  6154  0026DA                     
  6155                           ; BSR set to: 1
  6156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6157  0026DA  9255               	bcf	_flags^0,1,c
  6158  0026DC                     l8040:
  6159                           
  6160                           ; BSR set to: 1
  6161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6162  0026DC  BF35               	btfsc	(_prec+1)& (0+255),7,b
  6163  0026DE  EF7B  F013         	goto	u9220
  6164  0026E2  5135               	movf	(_prec+1)& (0+255),w,b
  6165  0026E4  E106               	bnz	u9221
  6166  0026E6  0534               	decf	_prec& (0+255),w,b
  6167  0026E8  B0D8               	btfsc	status,0,c
  6168  0026EA  EF79  F013         	goto	u9221
  6169  0026EE  EF7B  F013         	goto	u9220
  6170  0026F2                     u9221:
  6171  0026F2  EF81  F013         	goto	l710
  6172  0026F6                     u9220:
  6173  0026F6                     
  6174                           ; BSR set to: 1
  6175  0026F6  0E00               	movlw	0
  6176  0026F8  6E36               	movwf	(dtoa@p+1)^0,c
  6177  0026FA  0E01               	movlw	1
  6178  0026FC  6E35               	movwf	dtoa@p^0,c
  6179  0026FE  EF85  F013         	goto	l712
  6180  002702                     l710:
  6181                           
  6182                           ; BSR set to: 1
  6183  002702  C134  F035         	movff	_prec,dtoa@p
  6184  002706  C135  F036         	movff	_prec+1,dtoa@p+1
  6185  00270A                     l712:
  6186                           
  6187                           ; BSR set to: 1
  6188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6189  00270A  C132  F037         	movff	_width,dtoa@w
  6190  00270E  C133  F038         	movff	_width+1,dtoa@w+1
  6191  002712                     
  6192                           ; BSR set to: 1
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6194  002712  5039               	movf	dtoa@s^0,w,c
  6195  002714  103A               	iorwf	(dtoa@s+1)^0,w,c
  6196  002716  A4D8               	btfss	status,2,c
  6197  002718  EF90  F013         	goto	u9231
  6198  00271C  EF92  F013         	goto	u9230
  6199  002720                     u9231:
  6200  002720  EF99  F013         	goto	l8048
  6201  002724                     u9230:
  6202  002724                     
  6203                           ; BSR set to: 1
  6204  002724  A455               	btfss	_flags^0,2,c
  6205  002726  EF97  F013         	goto	u9241
  6206  00272A  EF99  F013         	goto	u9240
  6207  00272E                     u9241:
  6208  00272E  EF9C  F013         	goto	l8050
  6209  002732                     u9240:
  6210  002732                     l8048:
  6211                           
  6212                           ; BSR set to: 1
  6213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6214  002732  0637               	decf	dtoa@w^0,f,c
  6215  002734  A0D8               	btfss	status,0,c
  6216  002736  0638               	decf	(dtoa@w+1)^0,f,c
  6217  002738                     l8050:
  6218                           
  6219                           ; BSR set to: 1
  6220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6221  002738  0E00               	movlw	0
  6222  00273A  6E44               	movwf	(dtoa@i+1)^0,c
  6223  00273C  0E4F               	movlw	79
  6224  00273E  6E43               	movwf	dtoa@i^0,c
  6225  002740                     
  6226                           ; BSR set to: 1
  6227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6228  002740  0E00               	movlw	0
  6229  002742  6F8C               	movwf	(_dbuf+79)& (0+255),b
  6230                           
  6231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6232  002744  EF20  F014         	goto	l8064
  6233  002748                     l8054:
  6234                           
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6236  002748  0643               	decf	dtoa@i^0,f,c
  6237  00274A  A0D8               	btfss	status,0,c
  6238  00274C  0644               	decf	(dtoa@i+1)^0,f,c
  6239  00274E                     
  6240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6241  00274E  0E3D               	movlw	low _dbuf
  6242  002750  2443               	addwf	dtoa@i^0,w,c
  6243  002752  6ED9               	movwf	fsr2l,c
  6244  002754  0E01               	movlw	high _dbuf
  6245  002756  2044               	addwfc	(dtoa@i+1)^0,w,c
  6246  002758  6EDA               	movwf	fsr2h,c
  6247  00275A  C03B  F006         	movff	dtoa@n,___aomod@dividend
  6248  00275E  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
  6249  002762  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
  6250  002766  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
  6251  00276A  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  6252  00276E  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  6253  002772  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  6254  002776  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  6255  00277A  0E0A               	movlw	10
  6256  00277C  6E0E               	movwf	___aomod@divisor^0,c
  6257  00277E  0E00               	movlw	0
  6258  002780  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6259  002782  0E00               	movlw	0
  6260  002784  6E10               	movwf	(___aomod@divisor+2)^0,c
  6261  002786  0E00               	movlw	0
  6262  002788  6E11               	movwf	(___aomod@divisor+3)^0,c
  6263  00278A  0E00               	movlw	0
  6264  00278C  6E12               	movwf	(___aomod@divisor+4)^0,c
  6265  00278E  0E00               	movlw	0
  6266  002790  6E13               	movwf	(___aomod@divisor+5)^0,c
  6267  002792  0E00               	movlw	0
  6268  002794  6E14               	movwf	(___aomod@divisor+6)^0,c
  6269  002796  0E00               	movlw	0
  6270  002798  6E15               	movwf	(___aomod@divisor+7)^0,c
  6271  00279A  ECAD  F019         	call	___aomod	;wreg free
  6272  00279E  C006  F02B         	movff	?___aomod,??_dtoa
  6273  0027A2  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  6274  0027A6  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  6275  0027AA  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  6276  0027AE  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  6277  0027B2  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  6278  0027B6  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  6279  0027BA  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  6280  0027BE  C02B  F018         	movff	??_dtoa,abs@a
  6281  0027C2  C02D  F019         	movff	??_dtoa+2,abs@a+1
  6282  0027C6  EC80  F023         	call	_abs	;wreg free
  6283  0027CA  5018               	movf	?_abs^0,w,c
  6284  0027CC  0F30               	addlw	48
  6285  0027CE  6EDF               	movwf	indf2,c
  6286  0027D0                     
  6287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6288  0027D0  0635               	decf	dtoa@p^0,f,c
  6289  0027D2  A0D8               	btfss	status,0,c
  6290  0027D4  0636               	decf	(dtoa@p+1)^0,f,c
  6291  0027D6                     
  6292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6293  0027D6  0637               	decf	dtoa@w^0,f,c
  6294  0027D8  A0D8               	btfss	status,0,c
  6295  0027DA  0638               	decf	(dtoa@w+1)^0,f,c
  6296  0027DC                     
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6298  0027DC  C03B  F006         	movff	dtoa@n,___aodiv@dividend
  6299  0027E0  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  6300  0027E4  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  6301  0027E8  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  6302  0027EC  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  6303  0027F0  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  6304  0027F4  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  6305  0027F8  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  6306  0027FC  0E0A               	movlw	10
  6307  0027FE  6E0E               	movwf	___aodiv@divisor^0,c
  6308  002800  0E00               	movlw	0
  6309  002802  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6310  002804  0E00               	movlw	0
  6311  002806  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6312  002808  0E00               	movlw	0
  6313  00280A  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6314  00280C  0E00               	movlw	0
  6315  00280E  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6316  002810  0E00               	movlw	0
  6317  002812  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6318  002814  0E00               	movlw	0
  6319  002816  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6320  002818  0E00               	movlw	0
  6321  00281A  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6322  00281C  EC2B  F018         	call	___aodiv	;wreg free
  6323  002820  C006  F03B         	movff	?___aodiv,dtoa@n
  6324  002824  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
  6325  002828  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
  6326  00282C  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
  6327  002830  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
  6328  002834  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
  6329  002838  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
  6330  00283C  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
  6331  002840                     l8064:
  6332                           
  6333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6334  002840  BE44               	btfsc	(dtoa@i+1)^0,7,c
  6335  002842  EF2B  F014         	goto	u9251
  6336  002846  5044               	movf	(dtoa@i+1)^0,w,c
  6337  002848  E108               	bnz	u9250
  6338  00284A  0443               	decf	dtoa@i^0,w,c
  6339  00284C  A0D8               	btfss	status,0,c
  6340  00284E  EF2B  F014         	goto	u9251
  6341  002852  EF2D  F014         	goto	u9250
  6342  002856                     u9251:
  6343  002856  EF5D  F014         	goto	l8074
  6344  00285A                     u9250:
  6345  00285A  503B               	movf	dtoa@n^0,w,c
  6346  00285C  103C               	iorwf	(dtoa@n+1)^0,w,c
  6347  00285E  103D               	iorwf	(dtoa@n+2)^0,w,c
  6348  002860  103E               	iorwf	(dtoa@n+3)^0,w,c
  6349  002862  103F               	iorwf	(dtoa@n+4)^0,w,c
  6350  002864  1040               	iorwf	(dtoa@n+5)^0,w,c
  6351  002866  1041               	iorwf	(dtoa@n+6)^0,w,c
  6352  002868  1042               	iorwf	(dtoa@n+7)^0,w,c
  6353  00286A  A4D8               	btfss	status,2,c
  6354  00286C  EF3A  F014         	goto	u9261
  6355  002870  EF3C  F014         	goto	u9260
  6356  002874                     u9261:
  6357  002874  EFA4  F013         	goto	l8054
  6358  002878                     u9260:
  6359  002878  BE36               	btfsc	(dtoa@p+1)^0,7,c
  6360  00287A  EF49  F014         	goto	u9270
  6361  00287E  5036               	movf	(dtoa@p+1)^0,w,c
  6362  002880  E106               	bnz	u9271
  6363  002882  0435               	decf	dtoa@p^0,w,c
  6364  002884  B0D8               	btfsc	status,0,c
  6365  002886  EF47  F014         	goto	u9271
  6366  00288A  EF49  F014         	goto	u9270
  6367  00288E                     u9271:
  6368  00288E  EFA4  F013         	goto	l8054
  6369  002892                     u9270:
  6370  002892  BE38               	btfsc	(dtoa@w+1)^0,7,c
  6371  002894  EF54  F014         	goto	u9281
  6372  002898  5038               	movf	(dtoa@w+1)^0,w,c
  6373  00289A  E108               	bnz	u9280
  6374  00289C  0437               	decf	dtoa@w^0,w,c
  6375  00289E  A0D8               	btfss	status,0,c
  6376  0028A0  EF54  F014         	goto	u9281
  6377  0028A4  EF56  F014         	goto	u9280
  6378  0028A8                     u9281:
  6379  0028A8  EF5D  F014         	goto	l8074
  6380  0028AC                     u9280:
  6381  0028AC  B255               	btfsc	_flags^0,1,c
  6382  0028AE  EF5B  F014         	goto	u9291
  6383  0028B2  EF5D  F014         	goto	u9290
  6384  0028B6                     u9291:
  6385  0028B6  EFA4  F013         	goto	l8054
  6386  0028BA                     u9290:
  6387  0028BA                     l8074:
  6388                           
  6389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6390  0028BA  5039               	movf	dtoa@s^0,w,c
  6391  0028BC  103A               	iorwf	(dtoa@s+1)^0,w,c
  6392  0028BE  A4D8               	btfss	status,2,c
  6393  0028C0  EF64  F014         	goto	u9301
  6394  0028C4  EF66  F014         	goto	u9300
  6395  0028C8                     u9301:
  6396  0028C8  EF6D  F014         	goto	l8078
  6397  0028CC                     u9300:
  6398  0028CC  A455               	btfss	_flags^0,2,c
  6399  0028CE  EF6B  F014         	goto	u9311
  6400  0028D2  EF6D  F014         	goto	u9310
  6401  0028D6                     u9311:
  6402  0028D6  EF8B  F014         	goto	l8088
  6403  0028DA                     u9310:
  6404  0028DA                     l8078:
  6405                           
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6407  0028DA  0643               	decf	dtoa@i^0,f,c
  6408  0028DC  A0D8               	btfss	status,0,c
  6409  0028DE  0644               	decf	(dtoa@i+1)^0,f,c
  6410  0028E0                     
  6411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6412  0028E0  5039               	movf	dtoa@s^0,w,c
  6413  0028E2  103A               	iorwf	(dtoa@s+1)^0,w,c
  6414  0028E4  A4D8               	btfss	status,2,c
  6415  0028E6  EF77  F014         	goto	u9321
  6416  0028EA  EF79  F014         	goto	u9320
  6417  0028EE                     u9321:
  6418  0028EE  EF7F  F014         	goto	l8084
  6419  0028F2                     u9320:
  6420  0028F2  0E00               	movlw	0
  6421  0028F4  6E34               	movwf	(_dtoa$862+1)^0,c
  6422  0028F6  0E2B               	movlw	43
  6423  0028F8  6E33               	movwf	_dtoa$862^0,c
  6424  0028FA  EF83  F014         	goto	l8086
  6425  0028FE                     l8084:
  6426  0028FE  0E00               	movlw	0
  6427  002900  6E34               	movwf	(_dtoa$862+1)^0,c
  6428  002902  0E2D               	movlw	45
  6429  002904  6E33               	movwf	_dtoa$862^0,c
  6430  002906                     l8086:
  6431  002906  0E3D               	movlw	low _dbuf
  6432  002908  2443               	addwf	dtoa@i^0,w,c
  6433  00290A  6ED9               	movwf	fsr2l,c
  6434  00290C  0E01               	movlw	high _dbuf
  6435  00290E  2044               	addwfc	(dtoa@i+1)^0,w,c
  6436  002910  6EDA               	movwf	fsr2h,c
  6437  002912  C033  FFDF         	movff	_dtoa$862,indf2
  6438  002916                     l8088:
  6439                           
  6440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6441  002916  C021  F016         	movff	dtoa@fp,pad@fp
  6442  00291A  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  6443  00291E  0E3D               	movlw	low _dbuf
  6444  002920  2443               	addwf	dtoa@i^0,w,c
  6445  002922  6E18               	movwf	pad@buf^0,c
  6446  002924  0E01               	movlw	high _dbuf
  6447  002926  2044               	addwfc	(dtoa@i+1)^0,w,c
  6448  002928  6E19               	movwf	(pad@buf+1)^0,c
  6449  00292A  C037  F01A         	movff	dtoa@w,pad@p
  6450  00292E  C038  F01B         	movff	dtoa@w+1,pad@p+1
  6451  002932  ECBC  F01E         	call	_pad	;wreg free
  6452  002936  C016  F021         	movff	?_pad,?_dtoa
  6453  00293A  C017  F022         	movff	?_pad+1,?_dtoa+1
  6454  00293E  0012               	return		;funcret
  6455  002940                     __end_of_dtoa:
  6456                           	opt callstack 0
  6457                           
  6458 ;; *************** function _pad *****************
  6459 ;; Defined at:
  6460 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  6463 ;;		 -> sprintf@f(6), 
  6464 ;;  buf             2   23[COMRAM] PTR unsigned char 
  6465 ;;		 -> dbuf(80), 
  6466 ;;  p               2   25[COMRAM] int 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  w               2   30[COMRAM] int 
  6469 ;;  i               2   28[COMRAM] int 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  2   21[COMRAM] int 
  6472 ;; Registers used:
  6473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6479 ;;      Params:         6       0       0       0       0       0       0       0       0
  6480 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6481 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6482 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6483 ;;Total ram usage:       11 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    5
  6486 ;; This function calls:
  6487 ;;		_fputc
  6488 ;;		_fputs
  6489 ;;		_strlen
  6490 ;; This function is called by:
  6491 ;;		_dtoa
  6492 ;;		_efgtoa
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text20
  6497  003D78                     __ptext20:
  6498                           	opt callstack 0
  6499  003D78                     _pad:
  6500                           	opt callstack 20
  6501  003D78                     
  6502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6503  003D78  A055               	btfss	_flags^0,0,c
  6504  003D7A  EFC1  F01E         	goto	u8041
  6505  003D7E  EFC3  F01E         	goto	u8040
  6506  003D82                     u8041:
  6507  003D82  EFCD  F01E         	goto	l7398
  6508  003D86                     u8040:
  6509  003D86                     
  6510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6511  003D86  C018  F00F         	movff	pad@buf,fputs@s
  6512  003D8A  C019  F010         	movff	pad@buf+1,fputs@s+1
  6513  003D8E  C016  F011         	movff	pad@fp,fputs@fp
  6514  003D92  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6515  003D96  EC3D  F023         	call	_fputs	;wreg free
  6516  003D9A                     l7398:
  6517                           
  6518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6519  003D9A  BE1B               	btfsc	(pad@p+1)^0,7,c
  6520  003D9C  EFD2  F01E         	goto	u8051
  6521  003DA0  EFD4  F01E         	goto	u8050
  6522  003DA4                     u8051:
  6523  003DA4  EFDA  F01E         	goto	l7402
  6524  003DA8                     u8050:
  6525  003DA8  C01A  F01F         	movff	pad@p,pad@w
  6526  003DAC  C01B  F020         	movff	pad@p+1,pad@w+1
  6527  003DB0  EFDE  F01E         	goto	l699
  6528  003DB4                     l7402:
  6529  003DB4  0E00               	movlw	0
  6530  003DB6  6E20               	movwf	(pad@w+1)^0,c
  6531  003DB8  0E00               	movlw	0
  6532  003DBA  6E1F               	movwf	pad@w^0,c
  6533  003DBC                     l699:
  6534                           
  6535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6536  003DBC  0E00               	movlw	0
  6537  003DBE  6E1E               	movwf	(pad@i+1)^0,c
  6538  003DC0  0E00               	movlw	0
  6539  003DC2  6E1D               	movwf	pad@i^0,c
  6540                           
  6541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6542  003DC4  EFF0  F01E         	goto	l7408
  6543  003DC8                     l7404:
  6544                           
  6545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6546  003DC8  0E00               	movlw	0
  6547  003DCA  6E07               	movwf	(fputc@c+1)^0,c
  6548  003DCC  0E20               	movlw	32
  6549  003DCE  6E06               	movwf	fputc@c^0,c
  6550  003DD0  C016  F008         	movff	pad@fp,fputc@fp
  6551  003DD4  C017  F009         	movff	pad@fp+1,fputc@fp+1
  6552  003DD8  ECF5  F01D         	call	_fputc	;wreg free
  6553  003DDC                     
  6554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6555  003DDC  4A1D               	infsnz	pad@i^0,f,c
  6556  003DDE  2A1E               	incf	(pad@i+1)^0,f,c
  6557  003DE0                     l7408:
  6558                           
  6559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6560  003DE0  501F               	movf	pad@w^0,w,c
  6561  003DE2  5C1D               	subwf	pad@i^0,w,c
  6562  003DE4  501E               	movf	(pad@i+1)^0,w,c
  6563  003DE6  0A80               	xorlw	128
  6564  003DE8  6E1C               	movwf	??_pad^0,c
  6565  003DEA  5020               	movf	(pad@w+1)^0,w,c
  6566  003DEC  0A80               	xorlw	128
  6567  003DEE  581C               	subwfb	??_pad^0,w,c
  6568  003DF0  A0D8               	btfss	status,0,c
  6569  003DF2  EFFD  F01E         	goto	u8061
  6570  003DF6  EFFF  F01E         	goto	u8060
  6571  003DFA                     u8061:
  6572  003DFA  EFE4  F01E         	goto	l7404
  6573  003DFE                     u8060:
  6574  003DFE                     
  6575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6576  003DFE  B055               	btfsc	_flags^0,0,c
  6577  003E00  EF04  F01F         	goto	u8071
  6578  003E04  EF06  F01F         	goto	u8070
  6579  003E08                     u8071:
  6580  003E08  EF10  F01F         	goto	l7412
  6581  003E0C                     u8070:
  6582  003E0C                     
  6583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6584  003E0C  C018  F00F         	movff	pad@buf,fputs@s
  6585  003E10  C019  F010         	movff	pad@buf+1,fputs@s+1
  6586  003E14  C016  F011         	movff	pad@fp,fputs@fp
  6587  003E18  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6588  003E1C  EC3D  F023         	call	_fputs	;wreg free
  6589  003E20                     l7412:
  6590                           
  6591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6592  003E20  C018  F006         	movff	pad@buf,strlen@s
  6593  003E24  C019  F007         	movff	pad@buf+1,strlen@s+1
  6594  003E28  ECF4  F023         	call	_strlen	;wreg free
  6595  003E2C  501F               	movf	pad@w^0,w,c
  6596  003E2E  2406               	addwf	?_strlen^0,w,c
  6597  003E30  6E16               	movwf	?_pad^0,c
  6598  003E32  5020               	movf	(pad@w+1)^0,w,c
  6599  003E34  2007               	addwfc	(?_strlen+1)^0,w,c
  6600  003E36  6E17               	movwf	(?_pad+1)^0,c
  6601  003E38  0012               	return		;funcret
  6602  003E3A                     __end_of_pad:
  6603                           	opt callstack 0
  6604                           
  6605 ;; *************** function _strlen *****************
  6606 ;; Defined at:
  6607 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  s               2    5[COMRAM] PTR const unsigned char 
  6610 ;;		 -> dbuf(80), 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  a               2    7[COMRAM] PTR const unsigned char 
  6613 ;;		 -> dbuf(80), 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  2    5[COMRAM] unsigned int 
  6616 ;; Registers used:
  6617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6623 ;;      Params:         2       0       0       0       0       0       0       0       0
  6624 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6626 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6627 ;;Total ram usage:        4 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    2
  6630 ;; This function calls:
  6631 ;;		Nothing
  6632 ;; This function is called by:
  6633 ;;		_pad
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text21
  6638  0047E8                     __ptext21:
  6639                           	opt callstack 0
  6640  0047E8                     _strlen:
  6641                           	opt callstack 22
  6642  0047E8  C006  F008         	movff	strlen@s,strlen@a
  6643  0047EC  C007  F009         	movff	strlen@s+1,strlen@a+1
  6644  0047F0  EFFC  F023         	goto	l7182
  6645  0047F4                     l7180:
  6646  0047F4  4A06               	infsnz	strlen@s^0,f,c
  6647  0047F6  2A07               	incf	(strlen@s+1)^0,f,c
  6648  0047F8                     l7182:
  6649  0047F8  C006  FFD9         	movff	strlen@s,fsr2l
  6650  0047FC  C007  FFDA         	movff	strlen@s+1,fsr2h
  6651  004800  50DF               	movf	indf2,w,c
  6652  004802  A4D8               	btfss	status,2,c
  6653  004804  EF06  F024         	goto	u7621
  6654  004808  EF08  F024         	goto	u7620
  6655  00480C                     u7621:
  6656  00480C  EFFA  F023         	goto	l7180
  6657  004810                     u7620:
  6658  004810  5008               	movf	strlen@a^0,w,c
  6659  004812  5C06               	subwf	strlen@s^0,w,c
  6660  004814  6E06               	movwf	?_strlen^0,c
  6661  004816  5009               	movf	(strlen@a+1)^0,w,c
  6662  004818  5807               	subwfb	(strlen@s+1)^0,w,c
  6663  00481A  6E07               	movwf	(?_strlen+1)^0,c
  6664  00481C  0012               	return		;funcret
  6665  00481E                     __end_of_strlen:
  6666                           	opt callstack 0
  6667                           
  6668 ;; *************** function _fputs *****************
  6669 ;; Defined at:
  6670 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6673 ;;		 -> dbuf(80), 
  6674 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6675 ;;		 -> sprintf@f(6), 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  i               2   19[COMRAM] int 
  6678 ;;  c               1   18[COMRAM] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  2   14[COMRAM] int 
  6681 ;; Registers used:
  6682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6688 ;;      Params:         4       0       0       0       0       0       0       0       0
  6689 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6691 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6692 ;;Total ram usage:        7 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    4
  6695 ;; This function calls:
  6696 ;;		_fputc
  6697 ;; This function is called by:
  6698 ;;		_pad
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text22
  6703  00467A                     __ptext22:
  6704                           	opt callstack 0
  6705  00467A                     _fputs:
  6706                           	opt callstack 20
  6707  00467A  0E00               	movlw	0
  6708  00467C  6E15               	movwf	(fputs@i+1)^0,c
  6709  00467E  0E00               	movlw	0
  6710  004680  6E14               	movwf	fputs@i^0,c
  6711  004682  EF4E  F023         	goto	l7176
  6712  004686                     l7172:
  6713  004686  C013  F006         	movff	fputs@c,fputc@c
  6714  00468A  6A07               	clrf	(fputc@c+1)^0,c
  6715  00468C  C011  F008         	movff	fputs@fp,fputc@fp
  6716  004690  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  6717  004694  ECF5  F01D         	call	_fputc	;wreg free
  6718  004698  4A14               	infsnz	fputs@i^0,f,c
  6719  00469A  2A15               	incf	(fputs@i+1)^0,f,c
  6720  00469C                     l7176:
  6721  00469C  5014               	movf	fputs@i^0,w,c
  6722  00469E  240F               	addwf	fputs@s^0,w,c
  6723  0046A0  6ED9               	movwf	fsr2l,c
  6724  0046A2  5015               	movf	(fputs@i+1)^0,w,c
  6725  0046A4  2010               	addwfc	(fputs@s+1)^0,w,c
  6726  0046A6  6EDA               	movwf	fsr2h,c
  6727  0046A8  50DF               	movf	indf2,w,c
  6728  0046AA  6E13               	movwf	fputs@c^0,c
  6729  0046AC  5013               	movf	fputs@c^0,w,c
  6730  0046AE  A4D8               	btfss	status,2,c
  6731  0046B0  EF5C  F023         	goto	u7611
  6732  0046B4  EF5E  F023         	goto	u7610
  6733  0046B8                     u7611:
  6734  0046B8  EF43  F023         	goto	l7172
  6735  0046BC                     u7610:
  6736  0046BC  0012               	return		;funcret
  6737  0046BE                     __end_of_fputs:
  6738                           	opt callstack 0
  6739                           
  6740 ;; *************** function _fputc *****************
  6741 ;; Defined at:
  6742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  c               2    5[COMRAM] int 
  6745 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  6746 ;;		 -> sprintf@f(6), 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  2    5[COMRAM] int 
  6751 ;; Registers used:
  6752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6758 ;;      Params:         4       0       0       0       0       0       0       0       0
  6759 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6760 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6761 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6762 ;;Total ram usage:        9 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    3
  6765 ;; This function calls:
  6766 ;;		_putch
  6767 ;; This function is called by:
  6768 ;;		_pad
  6769 ;;		_vfpfcnvrt
  6770 ;;		_fputs
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text23
  6775  003BEA                     __ptext23:
  6776                           	opt callstack 0
  6777  003BEA                     _fputc:
  6778                           	opt callstack 23
  6779  003BEA  5008               	movf	fputc@fp^0,w,c
  6780  003BEC  1009               	iorwf	(fputc@fp+1)^0,w,c
  6781  003BEE  B4D8               	btfsc	status,2,c
  6782  003BF0  EFFC  F01D         	goto	u7571
  6783  003BF4  EFFE  F01D         	goto	u7570
  6784  003BF8                     u7571:
  6785  003BF8  EF07  F01E         	goto	l7160
  6786  003BFC                     u7570:
  6787  003BFC  5008               	movf	fputc@fp^0,w,c
  6788  003BFE  1009               	iorwf	(fputc@fp+1)^0,w,c
  6789  003C00  A4D8               	btfss	status,2,c
  6790  003C02  EF05  F01E         	goto	u7581
  6791  003C06  EF07  F01E         	goto	u7580
  6792  003C0A                     u7581:
  6793  003C0A  EF0C  F01E         	goto	l7162
  6794  003C0E                     u7580:
  6795  003C0E                     l7160:
  6796  003C0E  5006               	movf	fputc@c^0,w,c
  6797  003C10  EC45  F024         	call	_putch
  6798  003C14  EF59  F01E         	goto	l1623
  6799  003C18                     l7162:
  6800  003C18  EE20 F004          	lfsr	2,4
  6801  003C1C  5008               	movf	fputc@fp^0,w,c
  6802  003C1E  26D9               	addwf	fsr2l,f,c
  6803  003C20  5009               	movf	(fputc@fp+1)^0,w,c
  6804  003C22  22DA               	addwfc	fsr2h,f,c
  6805  003C24  50DE               	movf	postinc2,w,c
  6806  003C26  10DE               	iorwf	postinc2,w,c
  6807  003C28  B4D8               	btfsc	status,2,c
  6808  003C2A  EF19  F01E         	goto	u7591
  6809  003C2E  EF1B  F01E         	goto	u7590
  6810  003C32                     u7591:
  6811  003C32  EF36  F01E         	goto	l7166
  6812  003C36                     u7590:
  6813  003C36  EE20 F004          	lfsr	2,4
  6814  003C3A  5008               	movf	fputc@fp^0,w,c
  6815  003C3C  26D9               	addwf	fsr2l,f,c
  6816  003C3E  5009               	movf	(fputc@fp+1)^0,w,c
  6817  003C40  22DA               	addwfc	fsr2h,f,c
  6818  003C42  EE10 F002          	lfsr	1,2
  6819  003C46  5008               	movf	fputc@fp^0,w,c
  6820  003C48  26E1               	addwf	fsr1l,f,c
  6821  003C4A  5009               	movf	(fputc@fp+1)^0,w,c
  6822  003C4C  22E2               	addwfc	fsr1h,f,c
  6823  003C4E  50DE               	movf	postinc2,w,c
  6824  003C50  5CE6               	subwf	postinc1,w,c
  6825  003C52  50E6               	movf	postinc1,w,c
  6826  003C54  0A80               	xorlw	128
  6827  003C56  6E0E               	movwf	(??_fputc+4)^0,c
  6828  003C58  50DE               	movf	postinc2,w,c
  6829  003C5A  0A80               	xorlw	128
  6830  003C5C  580E               	subwfb	(??_fputc+4)^0,w,c
  6831  003C5E  B0D8               	btfsc	status,0,c
  6832  003C60  EF34  F01E         	goto	u7601
  6833  003C64  EF36  F01E         	goto	u7600
  6834  003C68                     u7601:
  6835  003C68  EF59  F01E         	goto	l1623
  6836  003C6C                     u7600:
  6837  003C6C                     l7166:
  6838  003C6C  EE20 F002          	lfsr	2,2
  6839  003C70  5008               	movf	fputc@fp^0,w,c
  6840  003C72  26D9               	addwf	fsr2l,f,c
  6841  003C74  5009               	movf	(fputc@fp+1)^0,w,c
  6842  003C76  22DA               	addwfc	fsr2h,f,c
  6843  003C78  CFDE F00A          	movff	postinc2,??_fputc
  6844  003C7C  CFDD F00B          	movff	postdec2,??_fputc+1
  6845  003C80  C008  FFD9         	movff	fputc@fp,fsr2l
  6846  003C84  C009  FFDA         	movff	fputc@fp+1,fsr2h
  6847  003C88  CFDE F00C          	movff	postinc2,??_fputc+2
  6848  003C8C  CFDD F00D          	movff	postdec2,??_fputc+3
  6849  003C90  500A               	movf	??_fputc^0,w,c
  6850  003C92  240C               	addwf	(??_fputc+2)^0,w,c
  6851  003C94  6ED9               	movwf	fsr2l,c
  6852  003C96  500B               	movf	(??_fputc+1)^0,w,c
  6853  003C98  200D               	addwfc	(??_fputc+3)^0,w,c
  6854  003C9A  6EDA               	movwf	fsr2h,c
  6855  003C9C  C006  FFDF         	movff	fputc@c,indf2
  6856  003CA0  EE20 F002          	lfsr	2,2
  6857  003CA4  5008               	movf	fputc@fp^0,w,c
  6858  003CA6  26D9               	addwf	fsr2l,f,c
  6859  003CA8  5009               	movf	(fputc@fp+1)^0,w,c
  6860  003CAA  22DA               	addwfc	fsr2h,f,c
  6861  003CAC  2ADE               	incf	postinc2,f,c
  6862  003CAE  0E00               	movlw	0
  6863  003CB0  22DD               	addwfc	postdec2,f,c
  6864  003CB2                     l1623:
  6865  003CB2  0012               	return		;funcret
  6866  003CB4                     __end_of_fputc:
  6867                           	opt callstack 0
  6868                           
  6869 ;; *************** function _putch *****************
  6870 ;; Defined at:
  6871 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  c               1    wreg     unsigned char 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  c               1    0[COMRAM] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		wreg
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6885 ;;      Params:         0       0       0       0       0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    2
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_fputc
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text24
  6900  00488A                     __ptext24:
  6901                           	opt callstack 0
  6902  00488A                     _putch:
  6903                           	opt callstack 23
  6904  00488A  0012               	return		;funcret
  6905  00488C                     __end_of_putch:
  6906                           	opt callstack 0
  6907                           
  6908 ;; *************** function _abs *****************
  6909 ;; Defined at:
  6910 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  a               2   23[COMRAM] int 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  2   23[COMRAM] int 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6924 ;;      Params:         2       0       0       0       0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6926 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6927 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6928 ;;Total ram usage:        4 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    2
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_dtoa
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text25
  6939  004700                     __ptext25:
  6940                           	opt callstack 0
  6941  004700                     _abs:
  6942                           	opt callstack 23
  6943  004700  BE19               	btfsc	(abs@a+1)^0,7,c
  6944  004702  EF8D  F023         	goto	u8080
  6945  004706  5019               	movf	(abs@a+1)^0,w,c
  6946  004708  E106               	bnz	u8081
  6947  00470A  0418               	decf	abs@a^0,w,c
  6948  00470C  B0D8               	btfsc	status,0,c
  6949  00470E  EF8B  F023         	goto	u8081
  6950  004712  EF8D  F023         	goto	u8080
  6951  004716                     u8081:
  6952  004716  EF9B  F023         	goto	l1544
  6953  00471A                     u8080:
  6954  00471A  C018  F01A         	movff	abs@a,??_abs
  6955  00471E  C019  F01B         	movff	abs@a+1,??_abs+1
  6956  004722  1E1A               	comf	??_abs^0,f,c
  6957  004724  1E1B               	comf	(??_abs+1)^0,f,c
  6958  004726  4A1A               	infsnz	??_abs^0,f,c
  6959  004728  2A1B               	incf	(??_abs+1)^0,f,c
  6960  00472A  C01A  F018         	movff	??_abs,?_abs
  6961  00472E  C01B  F019         	movff	??_abs+1,?_abs+1
  6962  004732  EF9F  F023         	goto	l1547
  6963  004736                     l1544:
  6964  004736  C018  F018         	movff	abs@a,?_abs
  6965  00473A  C019  F019         	movff	abs@a+1,?_abs+1
  6966  00473E                     l1547:
  6967  00473E  0012               	return		;funcret
  6968  004740                     __end_of_abs:
  6969                           	opt callstack 0
  6970                           
  6971 ;; *************** function ___aomod *****************
  6972 ;; Defined at:
  6973 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  dividend        8    5[COMRAM] long long 
  6976 ;;  divisor         8   13[COMRAM] long long 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  sign            1   22[COMRAM] unsigned char 
  6979 ;;  counter         1   21[COMRAM] unsigned char 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  8    5[COMRAM] long long 
  6982 ;; Registers used:
  6983 ;;		wreg, status,2, status,0
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6989 ;;      Params:        16       0       0       0       0       0       0       0       0
  6990 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6992 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6993 ;;Total ram usage:       18 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:    2
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_dtoa
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text26
  7004  00335A                     __ptext26:
  7005                           	opt callstack 0
  7006  00335A                     ___aomod:
  7007                           	opt callstack 23
  7008  00335A  0E00               	movlw	0
  7009  00335C  6E17               	movwf	___aomod@sign^0,c
  7010  00335E  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  7011  003360  EFB6  F019         	goto	u8400
  7012  003364  EFB4  F019         	goto	u8401
  7013  003368                     u8401:
  7014  003368  EFC8  F019         	goto	l7546
  7015  00336C                     u8400:
  7016  00336C  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7017  00336E  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7018  003370  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7019  003372  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7020  003374  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7021  003376  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7022  003378  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7023  00337A  6C06               	negf	___aomod@dividend^0,c
  7024  00337C  0E00               	movlw	0
  7025  00337E  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7026  003380  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7027  003382  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7028  003384  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7029  003386  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7030  003388  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7031  00338A  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7032  00338C  0E01               	movlw	1
  7033  00338E  6E17               	movwf	___aomod@sign^0,c
  7034  003390                     l7546:
  7035  003390  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  7036  003392  EFCF  F019         	goto	u8410
  7037  003396  EFCD  F019         	goto	u8411
  7038  00339A                     u8411:
  7039  00339A  EFDF  F019         	goto	l7550
  7040  00339E                     u8410:
  7041  00339E  1E15               	comf	(___aomod@divisor+7)^0,f,c
  7042  0033A0  1E14               	comf	(___aomod@divisor+6)^0,f,c
  7043  0033A2  1E13               	comf	(___aomod@divisor+5)^0,f,c
  7044  0033A4  1E12               	comf	(___aomod@divisor+4)^0,f,c
  7045  0033A6  1E11               	comf	(___aomod@divisor+3)^0,f,c
  7046  0033A8  1E10               	comf	(___aomod@divisor+2)^0,f,c
  7047  0033AA  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  7048  0033AC  6C0E               	negf	___aomod@divisor^0,c
  7049  0033AE  0E00               	movlw	0
  7050  0033B0  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  7051  0033B2  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  7052  0033B4  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  7053  0033B6  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  7054  0033B8  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  7055  0033BA  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  7056  0033BC  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  7057  0033BE                     l7550:
  7058  0033BE  500E               	movf	___aomod@divisor^0,w,c
  7059  0033C0  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  7060  0033C2  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  7061  0033C4  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  7062  0033C6  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  7063  0033C8  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  7064  0033CA  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  7065  0033CC  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7066  0033CE  B4D8               	btfsc	status,2,c
  7067  0033D0  EFEC  F019         	goto	u8421
  7068  0033D4  EFEE  F019         	goto	u8420
  7069  0033D8                     u8421:
  7070  0033D8  EF36  F01A         	goto	l7566
  7071  0033DC                     u8420:
  7072  0033DC  0E01               	movlw	1
  7073  0033DE  6E16               	movwf	___aomod@counter^0,c
  7074  0033E0  EFFC  F019         	goto	l7556
  7075  0033E4                     l7554:
  7076  0033E4  90D8               	bcf	status,0,c
  7077  0033E6  360E               	rlcf	___aomod@divisor^0,f,c
  7078  0033E8  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7079  0033EA  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7080  0033EC  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7081  0033EE  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7082  0033F0  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7083  0033F2  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7084  0033F4  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7085  0033F6  2A16               	incf	___aomod@counter^0,f,c
  7086  0033F8                     l7556:
  7087  0033F8  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7088  0033FA  EF01  F01A         	goto	u8431
  7089  0033FE  EF03  F01A         	goto	u8430
  7090  003402                     u8431:
  7091  003402  EFF2  F019         	goto	l7554
  7092  003406                     u8430:
  7093  003406                     l7558:
  7094  003406  500E               	movf	___aomod@divisor^0,w,c
  7095  003408  5C06               	subwf	___aomod@dividend^0,w,c
  7096  00340A  500F               	movf	(___aomod@divisor+1)^0,w,c
  7097  00340C  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7098  00340E  5010               	movf	(___aomod@divisor+2)^0,w,c
  7099  003410  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7100  003412  5011               	movf	(___aomod@divisor+3)^0,w,c
  7101  003414  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7102  003416  5012               	movf	(___aomod@divisor+4)^0,w,c
  7103  003418  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7104  00341A  5013               	movf	(___aomod@divisor+5)^0,w,c
  7105  00341C  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7106  00341E  5014               	movf	(___aomod@divisor+6)^0,w,c
  7107  003420  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7108  003422  5015               	movf	(___aomod@divisor+7)^0,w,c
  7109  003424  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7110  003426  A0D8               	btfss	status,0,c
  7111  003428  EF18  F01A         	goto	u8441
  7112  00342C  EF1A  F01A         	goto	u8440
  7113  003430                     u8441:
  7114  003430  EF2A  F01A         	goto	l7562
  7115  003434                     u8440:
  7116  003434  500E               	movf	___aomod@divisor^0,w,c
  7117  003436  5E06               	subwf	___aomod@dividend^0,f,c
  7118  003438  500F               	movf	(___aomod@divisor+1)^0,w,c
  7119  00343A  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7120  00343C  5010               	movf	(___aomod@divisor+2)^0,w,c
  7121  00343E  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7122  003440  5011               	movf	(___aomod@divisor+3)^0,w,c
  7123  003442  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7124  003444  5012               	movf	(___aomod@divisor+4)^0,w,c
  7125  003446  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7126  003448  5013               	movf	(___aomod@divisor+5)^0,w,c
  7127  00344A  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7128  00344C  5014               	movf	(___aomod@divisor+6)^0,w,c
  7129  00344E  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7130  003450  5015               	movf	(___aomod@divisor+7)^0,w,c
  7131  003452  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7132  003454                     l7562:
  7133  003454  90D8               	bcf	status,0,c
  7134  003456  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7135  003458  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7136  00345A  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7137  00345C  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7138  00345E  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7139  003460  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7140  003462  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7141  003464  320E               	rrcf	___aomod@divisor^0,f,c
  7142  003466  2E16               	decfsz	___aomod@counter^0,f,c
  7143  003468  EF03  F01A         	goto	l7558
  7144  00346C                     l7566:
  7145  00346C  5017               	movf	___aomod@sign^0,w,c
  7146  00346E  B4D8               	btfsc	status,2,c
  7147  003470  EF3C  F01A         	goto	u8451
  7148  003474  EF3E  F01A         	goto	u8450
  7149  003478                     u8451:
  7150  003478  EF4E  F01A         	goto	l7570
  7151  00347C                     u8450:
  7152  00347C  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7153  00347E  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7154  003480  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7155  003482  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7156  003484  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7157  003486  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7158  003488  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7159  00348A  6C06               	negf	___aomod@dividend^0,c
  7160  00348C  0E00               	movlw	0
  7161  00348E  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7162  003490  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7163  003492  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7164  003494  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7165  003496  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7166  003498  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7167  00349A  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7168  00349C                     l7570:
  7169  00349C  C006  F006         	movff	___aomod@dividend,?___aomod
  7170  0034A0  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  7171  0034A4  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  7172  0034A8  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  7173  0034AC  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  7174  0034B0  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  7175  0034B4  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  7176  0034B8  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  7177  0034BC  0012               	return		;funcret
  7178  0034BE                     __end_of___aomod:
  7179                           	opt callstack 0
  7180                           
  7181 ;; *************** function ___aodiv *****************
  7182 ;; Defined at:
  7183 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  dividend        8    5[COMRAM] long long 
  7186 ;;  divisor         8   13[COMRAM] long long 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  quotient        8   23[COMRAM] long long 
  7189 ;;  sign            1   22[COMRAM] unsigned char 
  7190 ;;  counter         1   21[COMRAM] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  8    5[COMRAM] long long 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7200 ;;      Params:        16       0       0       0       0       0       0       0       0
  7201 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7203 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7204 ;;Total ram usage:       26 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    2
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_dtoa
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text27
  7215  003056                     __ptext27:
  7216                           	opt callstack 0
  7217  003056                     ___aodiv:
  7218                           	opt callstack 23
  7219  003056  0E00               	movlw	0
  7220  003058  6E17               	movwf	___aodiv@sign^0,c
  7221  00305A  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  7222  00305C  EF34  F018         	goto	u8330
  7223  003060  EF32  F018         	goto	u8331
  7224  003064                     u8331:
  7225  003064  EF46  F018         	goto	l7502
  7226  003068                     u8330:
  7227  003068  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7228  00306A  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7229  00306C  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7230  00306E  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7231  003070  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7232  003072  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7233  003074  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7234  003076  6C0E               	negf	___aodiv@divisor^0,c
  7235  003078  0E00               	movlw	0
  7236  00307A  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7237  00307C  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7238  00307E  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7239  003080  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7240  003082  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7241  003084  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7242  003086  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7243  003088  0E01               	movlw	1
  7244  00308A  6E17               	movwf	___aodiv@sign^0,c
  7245  00308C                     l7502:
  7246  00308C  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  7247  00308E  EF4D  F018         	goto	u8340
  7248  003092  EF4B  F018         	goto	u8341
  7249  003096                     u8341:
  7250  003096  EF5F  F018         	goto	l7508
  7251  00309A                     u8340:
  7252  00309A  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7253  00309C  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7254  00309E  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7255  0030A0  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7256  0030A2  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7257  0030A4  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7258  0030A6  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7259  0030A8  6C06               	negf	___aodiv@dividend^0,c
  7260  0030AA  0E00               	movlw	0
  7261  0030AC  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7262  0030AE  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7263  0030B0  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7264  0030B2  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7265  0030B4  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7266  0030B6  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7267  0030B8  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7268  0030BA  0E01               	movlw	1
  7269  0030BC  1A17               	xorwf	___aodiv@sign^0,f,c
  7270  0030BE                     l7508:
  7271  0030BE  EE20  F018         	lfsr	2,___aodiv@quotient
  7272  0030C2  0E07               	movlw	7
  7273  0030C4                     u8351:
  7274  0030C4  6ADE               	clrf	postinc2,c
  7275  0030C6  06E8               	decf	wreg,f,c
  7276  0030C8  E2FD               	bc	u8351
  7277  0030CA  500E               	movf	___aodiv@divisor^0,w,c
  7278  0030CC  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7279  0030CE  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7280  0030D0  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7281  0030D2  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7282  0030D4  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7283  0030D6  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7284  0030D8  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7285  0030DA  B4D8               	btfsc	status,2,c
  7286  0030DC  EF72  F018         	goto	u8361
  7287  0030E0  EF74  F018         	goto	u8360
  7288  0030E4                     u8361:
  7289  0030E4  EFC6  F018         	goto	l7530
  7290  0030E8                     u8360:
  7291  0030E8  0E01               	movlw	1
  7292  0030EA  6E16               	movwf	___aodiv@counter^0,c
  7293  0030EC  EF82  F018         	goto	l7516
  7294  0030F0                     l7514:
  7295  0030F0  90D8               	bcf	status,0,c
  7296  0030F2  360E               	rlcf	___aodiv@divisor^0,f,c
  7297  0030F4  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7298  0030F6  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7299  0030F8  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7300  0030FA  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7301  0030FC  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7302  0030FE  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7303  003100  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7304  003102  2A16               	incf	___aodiv@counter^0,f,c
  7305  003104                     l7516:
  7306  003104  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7307  003106  EF87  F018         	goto	u8371
  7308  00310A  EF89  F018         	goto	u8370
  7309  00310E                     u8371:
  7310  00310E  EF78  F018         	goto	l7514
  7311  003112                     u8370:
  7312  003112                     l7518:
  7313  003112  90D8               	bcf	status,0,c
  7314  003114  3618               	rlcf	___aodiv@quotient^0,f,c
  7315  003116  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7316  003118  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7317  00311A  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7318  00311C  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7319  00311E  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7320  003120  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7321  003122  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7322  003124  500E               	movf	___aodiv@divisor^0,w,c
  7323  003126  5C06               	subwf	___aodiv@dividend^0,w,c
  7324  003128  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7325  00312A  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7326  00312C  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7327  00312E  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7328  003130  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7329  003132  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7330  003134  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7331  003136  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7332  003138  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7333  00313A  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7334  00313C  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7335  00313E  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  7336  003140  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7337  003142  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  7338  003144  A0D8               	btfss	status,0,c
  7339  003146  EFA7  F018         	goto	u8381
  7340  00314A  EFA9  F018         	goto	u8380
  7341  00314E                     u8381:
  7342  00314E  EFBA  F018         	goto	l7526
  7343  003152                     u8380:
  7344  003152  500E               	movf	___aodiv@divisor^0,w,c
  7345  003154  5E06               	subwf	___aodiv@dividend^0,f,c
  7346  003156  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7347  003158  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  7348  00315A  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7349  00315C  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  7350  00315E  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7351  003160  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  7352  003162  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7353  003164  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  7354  003166  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7355  003168  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  7356  00316A  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7357  00316C  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  7358  00316E  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7359  003170  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  7360  003172  8018               	bsf	___aodiv@quotient^0,0,c
  7361  003174                     l7526:
  7362  003174  90D8               	bcf	status,0,c
  7363  003176  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  7364  003178  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  7365  00317A  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  7366  00317C  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  7367  00317E  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  7368  003180  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  7369  003182  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  7370  003184  320E               	rrcf	___aodiv@divisor^0,f,c
  7371  003186  2E16               	decfsz	___aodiv@counter^0,f,c
  7372  003188  EF89  F018         	goto	l7518
  7373  00318C                     l7530:
  7374  00318C  5017               	movf	___aodiv@sign^0,w,c
  7375  00318E  B4D8               	btfsc	status,2,c
  7376  003190  EFCC  F018         	goto	u8391
  7377  003194  EFCE  F018         	goto	u8390
  7378  003198                     u8391:
  7379  003198  EFDE  F018         	goto	l7534
  7380  00319C                     u8390:
  7381  00319C  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  7382  00319E  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  7383  0031A0  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  7384  0031A2  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  7385  0031A4  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  7386  0031A6  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  7387  0031A8  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  7388  0031AA  6C18               	negf	___aodiv@quotient^0,c
  7389  0031AC  0E00               	movlw	0
  7390  0031AE  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  7391  0031B0  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  7392  0031B2  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  7393  0031B4  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  7394  0031B6  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  7395  0031B8  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  7396  0031BA  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  7397  0031BC                     l7534:
  7398  0031BC  C018  F006         	movff	___aodiv@quotient,?___aodiv
  7399  0031C0  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  7400  0031C4  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  7401  0031C8  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  7402  0031CC  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  7403  0031D0  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  7404  0031D4  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  7405  0031D8  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  7406  0031DC  0012               	return		;funcret
  7407  0031DE                     __end_of___aodiv:
  7408                           	opt callstack 0
  7409                           
  7410 ;; *************** function _atoi *****************
  7411 ;; Defined at:
  7412 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7415 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  7416 ;;		 -> STR_3(34), 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  n               2   25[COMRAM] int 
  7419 ;;  neg             2   18[COMRAM] int 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  2   12[COMRAM] int 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7429 ;;      Params:         2       0       0       0       0       0       0       0       0
  7430 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7431 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7432 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7433 ;;Total ram usage:       15 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    3
  7436 ;; This function calls:
  7437 ;;		___wmul
  7438 ;;		_isdigit
  7439 ;;		_isspace
  7440 ;; This function is called by:
  7441 ;;		_vfpfcnvrt
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text28
  7446  002EC6                     __ptext28:
  7447                           	opt callstack 0
  7448  002EC6                     _atoi:
  7449                           	opt callstack 23
  7450  002EC6  0E00               	movlw	0
  7451  002EC8  6E1B               	movwf	(atoi@n+1)^0,c
  7452  002ECA  0E00               	movlw	0
  7453  002ECC  6E1A               	movwf	atoi@n^0,c
  7454  002ECE  0E00               	movlw	0
  7455  002ED0  6E14               	movwf	(atoi@neg+1)^0,c
  7456  002ED2  0E00               	movlw	0
  7457  002ED4  6E13               	movwf	atoi@neg^0,c
  7458  002ED6  EF6F  F017         	goto	l8394
  7459  002EDA                     l8392:
  7460  002EDA  4A0D               	infsnz	atoi@s^0,f,c
  7461  002EDC  2A0E               	incf	(atoi@s+1)^0,f,c
  7462  002EDE                     l8394:
  7463  002EDE  0E01               	movlw	1
  7464  002EE0  6E19               	movwf	_atoi$1390^0,c
  7465  002EE2  C00D  FFF6         	movff	atoi@s,tblptrl
  7466  002EE6  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7467  002EEA                     	if	0	;tblptru may be non-zero
  7468  002EEA                     	endif
  7469  002EEA                     	if	0	;tblptru may be non-zero
  7470  002EEA                     	endif
  7471  002EEA  0008               	tblrd		*
  7472  002EEC  50F5               	movf	tablat,w,c
  7473  002EEE  0A20               	xorlw	32
  7474  002EF0  B4D8               	btfsc	status,2,c
  7475  002EF2  EF7D  F017         	goto	u9851
  7476  002EF6  EF7F  F017         	goto	u9850
  7477  002EFA                     u9851:
  7478  002EFA  EF9C  F017         	goto	l8402
  7479  002EFE                     u9850:
  7480  002EFE  0EF7               	movlw	247
  7481  002F00  6E0F               	movwf	??_atoi^0,c
  7482  002F02  0EFF               	movlw	255
  7483  002F04  6E10               	movwf	(??_atoi+1)^0,c
  7484  002F06  C00D  FFF6         	movff	atoi@s,tblptrl
  7485  002F0A  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7486  002F0E                     	if	0	;tblptru may be non-zero
  7487  002F0E                     	endif
  7488  002F0E                     	if	0	;tblptru may be non-zero
  7489  002F0E                     	endif
  7490  002F0E  0008               	tblrd		*
  7491  002F10  50F5               	movf	tablat,w,c
  7492  002F12  6E11               	movwf	(??_atoi+2)^0,c
  7493  002F14  6A12               	clrf	(??_atoi+3)^0,c
  7494  002F16  500F               	movf	??_atoi^0,w,c
  7495  002F18  2611               	addwf	(??_atoi+2)^0,f,c
  7496  002F1A  5010               	movf	(??_atoi+1)^0,w,c
  7497  002F1C  2212               	addwfc	(??_atoi+3)^0,f,c
  7498  002F1E  5012               	movf	(??_atoi+3)^0,w,c
  7499  002F20  E109               	bnz	u9860
  7500  002F22  0E05               	movlw	5
  7501  002F24  5C11               	subwf	(??_atoi+2)^0,w,c
  7502  002F26  A0D8               	btfss	status,0,c
  7503  002F28  EF98  F017         	goto	u9861
  7504  002F2C  EF9A  F017         	goto	u9860
  7505  002F30                     u9861:
  7506  002F30  EF9C  F017         	goto	l8402
  7507  002F34                     u9860:
  7508  002F34  0E00               	movlw	0
  7509  002F36  6E19               	movwf	_atoi$1390^0,c
  7510  002F38                     l8402:
  7511  002F38  C019  F015         	movff	_atoi$1390,_atoi$1389
  7512  002F3C  6A16               	clrf	(_atoi$1389+1)^0,c
  7513  002F3E  5015               	movf	_atoi$1389^0,w,c
  7514  002F40  1016               	iorwf	(_atoi$1389+1)^0,w,c
  7515  002F42  A4D8               	btfss	status,2,c
  7516  002F44  EFA6  F017         	goto	u9871
  7517  002F48  EFA8  F017         	goto	u9870
  7518  002F4C                     u9871:
  7519  002F4C  EF6D  F017         	goto	l8392
  7520  002F50                     u9870:
  7521  002F50  EFB2  F017         	goto	l8412
  7522  002F54                     l8408:
  7523  002F54  0E00               	movlw	0
  7524  002F56  6E14               	movwf	(atoi@neg+1)^0,c
  7525  002F58  0E01               	movlw	1
  7526  002F5A  6E13               	movwf	atoi@neg^0,c
  7527  002F5C                     l8410:
  7528  002F5C  4A0D               	infsnz	atoi@s^0,f,c
  7529  002F5E  2A0E               	incf	(atoi@s+1)^0,f,c
  7530  002F60  EFE7  F017         	goto	l8418
  7531  002F64                     l8412:
  7532  002F64  C00D  FFF6         	movff	atoi@s,tblptrl
  7533  002F68  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7534  002F6C                     	if	0	;tblptru may be non-zero
  7535  002F6C                     	endif
  7536  002F6C                     	if	0	;tblptru may be non-zero
  7537  002F6C                     	endif
  7538  002F6C  0008               	tblrd		*
  7539  002F6E  50F5               	movf	tablat,w,c
  7540  002F70  6E0F               	movwf	??_atoi^0,c
  7541  002F72  6A10               	clrf	(??_atoi+1)^0,c
  7542                           
  7543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7544                           ; Switch size 1, requested type "simple"
  7545                           ; Number of cases is 1, Range of values is 0 to 0
  7546                           ; switch strategies available:
  7547                           ; Name         Instructions Cycles
  7548                           ; simple_byte            4     3 (average)
  7549                           ;	Chosen strategy is simple_byte
  7550  002F74  5010               	movf	(??_atoi+1)^0,w,c
  7551  002F76  0A00               	xorlw	0	; case 0
  7552  002F78  B4D8               	btfsc	status,2,c
  7553  002F7A  EFC1  F017         	goto	l9788
  7554  002F7E  EFE7  F017         	goto	l8418
  7555  002F82                     l9788:
  7556                           
  7557                           ; Switch size 1, requested type "simple"
  7558                           ; Number of cases is 2, Range of values is 43 to 45
  7559                           ; switch strategies available:
  7560                           ; Name         Instructions Cycles
  7561                           ; simple_byte            7     4 (average)
  7562                           ;	Chosen strategy is simple_byte
  7563  002F82  500F               	movf	??_atoi^0,w,c
  7564  002F84  0A2B               	xorlw	43	; case 43
  7565  002F86  B4D8               	btfsc	status,2,c
  7566  002F88  EFAE  F017         	goto	l8410
  7567  002F8C  0A06               	xorlw	6	; case 45
  7568  002F8E  B4D8               	btfsc	status,2,c
  7569  002F90  EFAA  F017         	goto	l8408
  7570  002F94  EFE7  F017         	goto	l8418
  7571  002F98                     l8414:
  7572  002F98  C01A  F006         	movff	atoi@n,___wmul@multiplier
  7573  002F9C  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  7574  002FA0  0E00               	movlw	0
  7575  002FA2  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7576  002FA4  0E0A               	movlw	10
  7577  002FA6  6E08               	movwf	___wmul@multiplicand^0,c
  7578  002FA8  EC0F  F024         	call	___wmul	;wreg free
  7579  002FAC  C00D  FFF6         	movff	atoi@s,tblptrl
  7580  002FB0  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7581  002FB4                     	if	0	;tblptru may be non-zero
  7582  002FB4                     	endif
  7583  002FB4                     	if	0	;tblptru may be non-zero
  7584  002FB4                     	endif
  7585  002FB4  0008               	tblrd		*
  7586  002FB6  50F5               	movf	tablat,w,c
  7587  002FB8  5E06               	subwf	?___wmul^0,f,c
  7588  002FBA  0E00               	movlw	0
  7589  002FBC  5A07               	subwfb	(?___wmul+1)^0,f,c
  7590  002FBE  0E30               	movlw	48
  7591  002FC0  2406               	addwf	?___wmul^0,w,c
  7592  002FC2  6E1A               	movwf	atoi@n^0,c
  7593  002FC4  0E00               	movlw	0
  7594  002FC6  2007               	addwfc	(?___wmul+1)^0,w,c
  7595  002FC8  6E1B               	movwf	(atoi@n+1)^0,c
  7596  002FCA  EFAE  F017         	goto	l8410
  7597  002FCE                     l8418:
  7598  002FCE  0ED0               	movlw	208
  7599  002FD0  6E0F               	movwf	??_atoi^0,c
  7600  002FD2  0EFF               	movlw	255
  7601  002FD4  6E10               	movwf	(??_atoi+1)^0,c
  7602  002FD6  C00D  FFF6         	movff	atoi@s,tblptrl
  7603  002FDA  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7604  002FDE                     	if	0	;tblptru may be non-zero
  7605  002FDE                     	endif
  7606  002FDE                     	if	0	;tblptru may be non-zero
  7607  002FDE                     	endif
  7608  002FDE  0008               	tblrd		*
  7609  002FE0  50F5               	movf	tablat,w,c
  7610  002FE2  6E11               	movwf	(??_atoi+2)^0,c
  7611  002FE4  6A12               	clrf	(??_atoi+3)^0,c
  7612  002FE6  500F               	movf	??_atoi^0,w,c
  7613  002FE8  2611               	addwf	(??_atoi+2)^0,f,c
  7614  002FEA  5010               	movf	(??_atoi+1)^0,w,c
  7615  002FEC  2212               	addwfc	(??_atoi+3)^0,f,c
  7616  002FEE  5012               	movf	(??_atoi+3)^0,w,c
  7617  002FF0  E10A               	bnz	u9880
  7618  002FF2  0E0A               	movlw	10
  7619  002FF4  5C11               	subwf	(??_atoi+2)^0,w,c
  7620  002FF6  A0D8               	btfss	status,0,c
  7621  002FF8  EF00  F018         	goto	u9881
  7622  002FFC  EF03  F018         	goto	u9880
  7623  003000                     u9881:
  7624  003000  0E01               	movlw	1
  7625  003002  EF04  F018         	goto	u9890
  7626  003006                     u9880:
  7627  003006  0E00               	movlw	0
  7628  003008                     u9890:
  7629  003008  6E17               	movwf	_atoi$1391^0,c
  7630  00300A  6A18               	clrf	(_atoi$1391+1)^0,c
  7631  00300C  5017               	movf	_atoi$1391^0,w,c
  7632  00300E  1018               	iorwf	(_atoi$1391+1)^0,w,c
  7633  003010  A4D8               	btfss	status,2,c
  7634  003012  EF0D  F018         	goto	u9901
  7635  003016  EF0F  F018         	goto	u9900
  7636  00301A                     u9901:
  7637  00301A  EFCC  F017         	goto	l8414
  7638  00301E                     u9900:
  7639  00301E  5013               	movf	atoi@neg^0,w,c
  7640  003020  1014               	iorwf	(atoi@neg+1)^0,w,c
  7641  003022  A4D8               	btfss	status,2,c
  7642  003024  EF16  F018         	goto	u9911
  7643  003028  EF18  F018         	goto	u9910
  7644  00302C                     u9911:
  7645  00302C  EF26  F018         	goto	l1575
  7646  003030                     u9910:
  7647  003030  C01A  F00F         	movff	atoi@n,??_atoi
  7648  003034  C01B  F010         	movff	atoi@n+1,??_atoi+1
  7649  003038  1E0F               	comf	??_atoi^0,f,c
  7650  00303A  1E10               	comf	(??_atoi+1)^0,f,c
  7651  00303C  4A0F               	infsnz	??_atoi^0,f,c
  7652  00303E  2A10               	incf	(??_atoi+1)^0,f,c
  7653  003040  C00F  F00D         	movff	??_atoi,?_atoi
  7654  003044  C010  F00E         	movff	??_atoi+1,?_atoi+1
  7655  003048  EF2A  F018         	goto	l1578
  7656  00304C                     l1575:
  7657  00304C  C01A  F00D         	movff	atoi@n,?_atoi
  7658  003050  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  7659  003054                     l1578:
  7660  003054  0012               	return		;funcret
  7661  003056                     __end_of_atoi:
  7662                           	opt callstack 0
  7663                           
  7664 ;; *************** function _isspace *****************
  7665 ;; Defined at:
  7666 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  c               2    5[COMRAM] int 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  2    5[COMRAM] int 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2, status,0
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7680 ;;      Params:         2       0       0       0       0       0       0       0       0
  7681 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7682 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7683 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7684 ;;Total ram usage:        7 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    2
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_atoi
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           	psect	text29
  7695  0044FE                     __ptext29:
  7696                           	opt callstack 0
  7697  0044FE                     _isspace:
  7698                           	opt callstack 23
  7699  0044FE  0E01               	movlw	1
  7700  004500  6E0C               	movwf	_isspace$1420^0,c
  7701  004502  0E20               	movlw	32
  7702  004504  1806               	xorwf	isspace@c^0,w,c
  7703  004506  1007               	iorwf	(isspace@c+1)^0,w,c
  7704  004508  B4D8               	btfsc	status,2,c
  7705  00450A  EF89  F022         	goto	u9161
  7706  00450E  EF8B  F022         	goto	u9160
  7707  004512                     u9161:
  7708  004512  EFA4  F022         	goto	l8026
  7709  004516                     u9160:
  7710  004516  0EF7               	movlw	247
  7711  004518  6E08               	movwf	??_isspace^0,c
  7712  00451A  0EFF               	movlw	255
  7713  00451C  6E09               	movwf	(??_isspace+1)^0,c
  7714  00451E  C006  F00A         	movff	isspace@c,??_isspace+2
  7715  004522  C007  F00B         	movff	isspace@c+1,??_isspace+3
  7716  004526  5008               	movf	??_isspace^0,w,c
  7717  004528  260A               	addwf	(??_isspace+2)^0,f,c
  7718  00452A  5009               	movf	(??_isspace+1)^0,w,c
  7719  00452C  220B               	addwfc	(??_isspace+3)^0,f,c
  7720  00452E  500B               	movf	(??_isspace+3)^0,w,c
  7721  004530  E109               	bnz	u9170
  7722  004532  0E05               	movlw	5
  7723  004534  5C0A               	subwf	(??_isspace+2)^0,w,c
  7724  004536  A0D8               	btfss	status,0,c
  7725  004538  EFA0  F022         	goto	u9171
  7726  00453C  EFA2  F022         	goto	u9170
  7727  004540                     u9171:
  7728  004540  EFA4  F022         	goto	l8026
  7729  004544                     u9170:
  7730  004544  0E00               	movlw	0
  7731  004546  6E0C               	movwf	_isspace$1420^0,c
  7732  004548                     l8026:
  7733  004548  C00C  F006         	movff	_isspace$1420,?_isspace
  7734  00454C  6A07               	clrf	(?_isspace+1)^0,c
  7735  00454E  0012               	return		;funcret
  7736  004550                     __end_of_isspace:
  7737                           	opt callstack 0
  7738                           
  7739 ;; *************** function _isdigit *****************
  7740 ;; Defined at:
  7741 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  c               2    5[COMRAM] int 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  2    5[COMRAM] int 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7755 ;;      Params:         2       0       0       0       0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7757 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7758 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7759 ;;Total ram usage:        6 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    2
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_vfpfcnvrt
  7766 ;;		_atoi
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text30
  7771  0047B0                     __ptext30:
  7772                           	opt callstack 0
  7773  0047B0                     _isdigit:
  7774                           	opt callstack 24
  7775  0047B0  0ED0               	movlw	208
  7776  0047B2  6E08               	movwf	??_isdigit^0,c
  7777  0047B4  0EFF               	movlw	255
  7778  0047B6  6E09               	movwf	(??_isdigit+1)^0,c
  7779  0047B8  C006  F00A         	movff	isdigit@c,??_isdigit+2
  7780  0047BC  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  7781  0047C0  5008               	movf	??_isdigit^0,w,c
  7782  0047C2  260A               	addwf	(??_isdigit+2)^0,f,c
  7783  0047C4  5009               	movf	(??_isdigit+1)^0,w,c
  7784  0047C6  220B               	addwfc	(??_isdigit+3)^0,f,c
  7785  0047C8  500B               	movf	(??_isdigit+3)^0,w,c
  7786  0047CA  E10A               	bnz	u8310
  7787  0047CC  0E0A               	movlw	10
  7788  0047CE  5C0A               	subwf	(??_isdigit+2)^0,w,c
  7789  0047D0  A0D8               	btfss	status,0,c
  7790  0047D2  EFED  F023         	goto	u8311
  7791  0047D6  EFF0  F023         	goto	u8310
  7792  0047DA                     u8311:
  7793  0047DA  0E01               	movlw	1
  7794  0047DC  EFF1  F023         	goto	u8320
  7795  0047E0                     u8310:
  7796  0047E0  0E00               	movlw	0
  7797  0047E2                     u8320:
  7798  0047E2  6E06               	movwf	?_isdigit^0,c
  7799  0047E4  6A07               	clrf	(?_isdigit+1)^0,c
  7800  0047E6  0012               	return		;funcret
  7801  0047E8                     __end_of_isdigit:
  7802                           	opt callstack 0
  7803                           
  7804 ;; *************** function ___wmul *****************
  7805 ;; Defined at:
  7806 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  multiplier      2    5[COMRAM] unsigned int 
  7809 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  product         2    9[COMRAM] unsigned int 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  2    5[COMRAM] unsigned int 
  7814 ;; Registers used:
  7815 ;;		wreg, status,2, status,0, prodl, prodh
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7821 ;;      Params:         4       0       0       0       0       0       0       0       0
  7822 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7824 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7825 ;;Total ram usage:        6 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    2
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_atoi
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           	psect	text31
  7836  00481E                     __ptext31:
  7837                           	opt callstack 0
  7838  00481E                     ___wmul:
  7839                           	opt callstack 23
  7840  00481E  5006               	movf	___wmul@multiplier^0,w,c
  7841  004820  0208               	mulwf	___wmul@multiplicand^0,c
  7842  004822  CFF3 F00A          	movff	prodl,___wmul@product
  7843  004826  CFF4 F00B          	movff	prodh,___wmul@product+1
  7844  00482A  5006               	movf	___wmul@multiplier^0,w,c
  7845  00482C  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7846  00482E  50F3               	movf	243,w,c
  7847  004830  260B               	addwf	(___wmul@product+1)^0,f,c
  7848  004832  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7849  004834  0208               	mulwf	___wmul@multiplicand^0,c
  7850  004836  50F3               	movf	243,w,c
  7851  004838  260B               	addwf	(___wmul@product+1)^0,f,c
  7852  00483A  C00A  F006         	movff	___wmul@product,?___wmul
  7853  00483E  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7854  004842  0012               	return		;funcret
  7855  004844                     __end_of___wmul:
  7856                           	opt callstack 0
  7857                           
  7858 ;; *************** function _UART_printf *****************
  7859 ;; Defined at:
  7860 ;;		line 47 in file "./UART.h"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  cadena          2    6[COMRAM] PTR unsigned char 
  7863 ;;		 -> STR_10(6), STR_9(9), STR_8(11), STR_7(10), 
  7864 ;;		 -> buffer(50), STR_2(25), STR_1(24), 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7876 ;;      Params:         2       0       0       0       0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7879 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7880 ;;Total ram usage:        2 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    3
  7883 ;; This function calls:
  7884 ;;		_UART_write
  7885 ;; This function is called by:
  7886 ;;		_probarSensores
  7887 ;;		_probarUltrasonico
  7888 ;;		_visualizarPasosRealizados
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text32
  7893  004346                     __ptext32:
  7894                           	opt callstack 0
  7895  004346                     _UART_printf:
  7896                           	opt callstack 25
  7897  004346                     
  7898                           ;./UART.h: 48:     while (*cadena) {
  7899  004346  EFB9  F021         	goto	l8746
  7900  00434A                     l8742:
  7901                           
  7902                           ;./UART.h: 49:         UART_write(*cadena++);
  7903  00434A  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7904  00434E  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7905  004352  6AF8               	clrf	tblptru,c
  7906  004354  0E07               	movlw	(high __ramtop+-1)
  7907  004356  64F7               	cpfsgt	tblptrh,c
  7908  004358  D003               	bra	u10497
  7909  00435A  0008               	tblrd		*
  7910  00435C  50F5               	movf	tablat,w,c
  7911  00435E  D005               	bra	u10490
  7912  004360                     u10497:
  7913  004360  CFF6 FFE9          	movff	tblptrl,fsr0l
  7914  004364  CFF7 FFEA          	movff	tblptrh,fsr0h
  7915  004368  50EF               	movf	indf0,w,c
  7916  00436A                     u10490:
  7917  00436A  EC35  F024         	call	_UART_write
  7918  00436E  4A07               	infsnz	UART_printf@cadena^0,f,c
  7919  004370  2A08               	incf	(UART_printf@cadena+1)^0,f,c
  7920  004372                     l8746:
  7921                           
  7922                           ;./UART.h: 48:     while (*cadena) {
  7923  004372  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7924  004376  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7925  00437A  6AF8               	clrf	tblptru,c
  7926  00437C  0E07               	movlw	(high __ramtop+-1)
  7927  00437E  64F7               	cpfsgt	tblptrh,c
  7928  004380  D003               	bra	u10507
  7929  004382  0008               	tblrd		*
  7930  004384  50F5               	movf	tablat,w,c
  7931  004386  D005               	bra	u10500
  7932  004388                     u10507:
  7933  004388  CFF6 FFE9          	movff	tblptrl,fsr0l
  7934  00438C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7935  004390  50EF               	movf	indf0,w,c
  7936  004392                     u10500:
  7937  004392  0900               	iorlw	0
  7938  004394  A4D8               	btfss	status,2,c
  7939  004396  EFCF  F021         	goto	u10511
  7940  00439A  EFD1  F021         	goto	u10510
  7941  00439E                     u10511:
  7942  00439E  EFA5  F021         	goto	l8742
  7943  0043A2                     u10510:
  7944  0043A2  0012               	return		;funcret
  7945  0043A4                     __end_of_UART_printf:
  7946                           	opt callstack 0
  7947                           
  7948 ;; *************** function _UART_write *****************
  7949 ;; Defined at:
  7950 ;;		line 42 in file "./UART.h"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  dato            1    wreg     unsigned char 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  dato            1    5[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7964 ;;      Params:         0       0       0       0       0       0       0       0       0
  7965 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7967 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7968 ;;Total ram usage:        1 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:    2
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_UART_printf
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text33
  7979  00486A                     __ptext33:
  7980                           	opt callstack 0
  7981  00486A                     _UART_write:
  7982                           	opt callstack 25
  7983                           
  7984                           ;incstack = 0
  7985                           ;UART_write@dato stored from wreg
  7986  00486A  6E06               	movwf	UART_write@dato^0,c
  7987  00486C                     
  7988                           ;./UART.h: 43:     TXREG = dato;
  7989  00486C  C006  FFAD         	movff	UART_write@dato,4013	;volatile
  7990  004870                     l224:
  7991  004870  A2AC               	btfss	172,1,c	;volatile
  7992  004872  EF3D  F024         	goto	u10211
  7993  004876  EF3F  F024         	goto	u10210
  7994  00487A                     u10211:
  7995  00487A  EF38  F024         	goto	l224
  7996  00487E                     u10210:
  7997  00487E  0012               	return		;funcret
  7998  004880                     __end_of_UART_write:
  7999                           	opt callstack 0
  8000                           
  8001 ;; *************** function _leerSensores *****************
  8002 ;; Defined at:
  8003 ;;		line 999 in file "main.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;		None
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2, status,0, cstack
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:    4
  8024 ;; This function calls:
  8025 ;;		___fladd
  8026 ;;		___fldiv
  8027 ;;		_dameDistancia
  8028 ;; This function is called by:
  8029 ;;		_probarSensores
  8030 ;;		_comportamientoBasico
  8031 ;;		_probarPID
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text34
  8036  0031DE                     __ptext34:
  8037                           	opt callstack 0
  8038  0031DE                     _leerSensores:
  8039                           	opt callstack 25
  8040  0031DE                     
  8041                           ;main.c: 1001:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  8042  0031DE  C120  F02C         	movff	_oldSensorDerecha,___fladd@a
  8043  0031E2  C121  F02D         	movff	_oldSensorDerecha+1,___fladd@a+1
  8044  0031E6  C122  F02E         	movff	_oldSensorDerecha+2,___fladd@a+2
  8045  0031EA  C123  F02F         	movff	_oldSensorDerecha+3,___fladd@a+3
  8046  0031EE  0E03               	movlw	3
  8047  0031F0  EC5F  F01A         	call	_dameDistancia
  8048  0031F4  C01B  F028         	movff	?_dameDistancia,___fladd@b
  8049  0031F8  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  8050  0031FC  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  8051  003200  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  8052  003204  ECEE  F00C         	call	___fladd	;wreg free
  8053  003208  C028  F038         	movff	?___fladd,___fldiv@b
  8054  00320C  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8055  003210  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8056  003214  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8057  003218  0E00               	movlw	0
  8058  00321A  6E3C               	movwf	___fldiv@a^0,c
  8059  00321C  0E00               	movlw	0
  8060  00321E  6E3D               	movwf	(___fldiv@a+1)^0,c
  8061  003220  0E00               	movlw	0
  8062  003222  6E3E               	movwf	(___fldiv@a+2)^0,c
  8063  003224  0E40               	movlw	64
  8064  003226  6E3F               	movwf	(___fldiv@a+3)^0,c
  8065  003228  EC64  F011         	call	___fldiv	;wreg free
  8066  00322C  C038  F12C         	movff	?___fldiv,_sensorDerecha
  8067  003230  C039  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  8068  003234  C03A  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  8069  003238  C03B  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  8070                           
  8071                           ;main.c: 1002:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  8072  00323C  C11C  F02C         	movff	_oldSensorIzquierda,___fladd@a
  8073  003240  C11D  F02D         	movff	_oldSensorIzquierda+1,___fladd@a+1
  8074  003244  C11E  F02E         	movff	_oldSensorIzquierda+2,___fladd@a+2
  8075  003248  C11F  F02F         	movff	_oldSensorIzquierda+3,___fladd@a+3
  8076  00324C  0E02               	movlw	2
  8077  00324E  EC5F  F01A         	call	_dameDistancia
  8078  003252  C01B  F028         	movff	?_dameDistancia,___fladd@b
  8079  003256  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  8080  00325A  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  8081  00325E  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  8082  003262  ECEE  F00C         	call	___fladd	;wreg free
  8083  003266  C028  F038         	movff	?___fladd,___fldiv@b
  8084  00326A  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8085  00326E  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8086  003272  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8087  003276  0E00               	movlw	0
  8088  003278  6E3C               	movwf	___fldiv@a^0,c
  8089  00327A  0E00               	movlw	0
  8090  00327C  6E3D               	movwf	(___fldiv@a+1)^0,c
  8091  00327E  0E00               	movlw	0
  8092  003280  6E3E               	movwf	(___fldiv@a+2)^0,c
  8093  003282  0E40               	movlw	64
  8094  003284  6E3F               	movwf	(___fldiv@a+3)^0,c
  8095  003286  EC64  F011         	call	___fldiv	;wreg free
  8096  00328A  C038  F128         	movff	?___fldiv,_sensorIzquierda
  8097  00328E  C039  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  8098  003292  C03A  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  8099  003296  C03B  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  8100                           
  8101                           ;main.c: 1003:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  8102  00329A  C118  F02C         	movff	_oldSensorEnfrente,___fladd@a
  8103  00329E  C119  F02D         	movff	_oldSensorEnfrente+1,___fladd@a+1
  8104  0032A2  C11A  F02E         	movff	_oldSensorEnfrente+2,___fladd@a+2
  8105  0032A6  C11B  F02F         	movff	_oldSensorEnfrente+3,___fladd@a+3
  8106  0032AA  0E01               	movlw	1
  8107  0032AC  EC5F  F01A         	call	_dameDistancia
  8108  0032B0  C01B  F028         	movff	?_dameDistancia,___fladd@b
  8109  0032B4  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  8110  0032B8  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  8111  0032BC  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  8112  0032C0  ECEE  F00C         	call	___fladd	;wreg free
  8113  0032C4  C028  F038         	movff	?___fladd,___fldiv@b
  8114  0032C8  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8115  0032CC  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8116  0032D0  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8117  0032D4  0E00               	movlw	0
  8118  0032D6  6E3C               	movwf	___fldiv@a^0,c
  8119  0032D8  0E00               	movlw	0
  8120  0032DA  6E3D               	movwf	(___fldiv@a+1)^0,c
  8121  0032DC  0E00               	movlw	0
  8122  0032DE  6E3E               	movwf	(___fldiv@a+2)^0,c
  8123  0032E0  0E40               	movlw	64
  8124  0032E2  6E3F               	movwf	(___fldiv@a+3)^0,c
  8125  0032E4  EC64  F011         	call	___fldiv	;wreg free
  8126  0032E8  C038  F124         	movff	?___fldiv,_sensorEnfrente
  8127  0032EC  C039  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  8128  0032F0  C03A  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  8129  0032F4  C03B  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  8130  0032F8                     
  8131                           ;main.c: 1005:     oldSensorDerecha = sensorDerecha;
  8132  0032F8  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  8133  0032FC  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  8134  003300  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  8135  003304  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  8136  003308                     
  8137                           ;main.c: 1006:     oldSensorIzquierda = sensorIzquierda;
  8138  003308  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  8139  00330C  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  8140  003310  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  8141  003314  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  8142  003318                     
  8143                           ;main.c: 1007:     oldSensorEnfrente = sensorEnfrente;
  8144  003318  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  8145  00331C  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  8146  003320  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  8147  003324  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  8148  003328                     
  8149                           ;main.c: 1012:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  8150  003328  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  8151  00332C  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  8152  003330  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  8153  003334  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  8154  003338                     
  8155                           ;main.c: 1021:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  8156  003338  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  8157  00333C  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  8158  003340  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  8159  003344  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  8160  003348                     
  8161                           ;main.c: 1024:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  8162  003348  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  8163  00334C  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  8164  003350  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  8165  003354  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  8166  003358  0012               	return		;funcret
  8167  00335A                     __end_of_leerSensores:
  8168                           	opt callstack 0
  8169                           
  8170 ;; *************** function ___fladd *****************
  8171 ;; Defined at:
  8172 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  b               4   39[COMRAM] void 
  8175 ;;  a               4   43[COMRAM] void 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;  grs             1   54[COMRAM] unsigned char 
  8178 ;;  bexp            1   53[COMRAM] unsigned char 
  8179 ;;  aexp            1   52[COMRAM] unsigned char 
  8180 ;;  signs           1   51[COMRAM] unsigned char 
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  4   39[COMRAM] unsigned char 
  8183 ;; Registers used:
  8184 ;;		wreg, status,2, status,0
  8185 ;; Tracked objects:
  8186 ;;		On entry : 0/0
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8190 ;;      Params:         8       0       0       0       0       0       0       0       0
  8191 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8192 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8193 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8194 ;;Total ram usage:       16 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:    2
  8197 ;; This function calls:
  8198 ;;		Nothing
  8199 ;; This function is called by:
  8200 ;;		_leerSensores
  8201 ;;		_efgtoa
  8202 ;;		___flsub
  8203 ;;		_PID
  8204 ;;		_roundf
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text35
  8209  0019DC                     __ptext35:
  8210                           	opt callstack 0
  8211  0019DC                     ___fladd:
  8212                           	opt callstack 22
  8213  0019DC  502B               	movf	(___fladd@b+3)^0,w,c
  8214  0019DE  0B80               	andlw	128
  8215  0019E0  6E34               	movwf	___fladd@signs^0,c
  8216  0019E2  502B               	movf	(___fladd@b+3)^0,w,c
  8217  0019E4  242B               	addwf	(___fladd@b+3)^0,w,c
  8218  0019E6  6E36               	movwf	___fladd@bexp^0,c
  8219  0019E8  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8220  0019EA  EFF9  F00C         	goto	u7651
  8221  0019EE  EFFB  F00C         	goto	u7650
  8222  0019F2                     u7651:
  8223  0019F2  EFFC  F00C         	goto	l7198
  8224  0019F6                     u7650:
  8225  0019F6  8036               	bsf	___fladd@bexp^0,0,c
  8226  0019F8                     l7198:
  8227  0019F8  5036               	movf	___fladd@bexp^0,w,c
  8228  0019FA  B4D8               	btfsc	status,2,c
  8229  0019FC  EF02  F00D         	goto	u7661
  8230  001A00  EF04  F00D         	goto	u7660
  8231  001A04                     u7661:
  8232  001A04  EF19  F00D         	goto	l7208
  8233  001A08                     u7660:
  8234  001A08  2836               	incf	___fladd@bexp^0,w,c
  8235  001A0A  A4D8               	btfss	status,2,c
  8236  001A0C  EF0A  F00D         	goto	u7671
  8237  001A10  EF0C  F00D         	goto	u7670
  8238  001A14                     u7671:
  8239  001A14  EF14  F00D         	goto	l7204
  8240  001A18                     u7670:
  8241  001A18  0E00               	movlw	0
  8242  001A1A  6E28               	movwf	___fladd@b^0,c
  8243  001A1C  0E00               	movlw	0
  8244  001A1E  6E29               	movwf	(___fladd@b+1)^0,c
  8245  001A20  0E00               	movlw	0
  8246  001A22  6E2A               	movwf	(___fladd@b+2)^0,c
  8247  001A24  0E00               	movlw	0
  8248  001A26  6E2B               	movwf	(___fladd@b+3)^0,c
  8249  001A28                     l7204:
  8250  001A28  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8251  001A2A  0E00               	movlw	0
  8252  001A2C  6E2B               	movwf	(___fladd@b+3)^0,c
  8253  001A2E  EF21  F00D         	goto	l7210
  8254  001A32                     l7208:
  8255  001A32  0E00               	movlw	0
  8256  001A34  6E28               	movwf	___fladd@b^0,c
  8257  001A36  0E00               	movlw	0
  8258  001A38  6E29               	movwf	(___fladd@b+1)^0,c
  8259  001A3A  0E00               	movlw	0
  8260  001A3C  6E2A               	movwf	(___fladd@b+2)^0,c
  8261  001A3E  0E00               	movlw	0
  8262  001A40  6E2B               	movwf	(___fladd@b+3)^0,c
  8263  001A42                     l7210:
  8264  001A42  502F               	movf	(___fladd@a+3)^0,w,c
  8265  001A44  0B80               	andlw	128
  8266  001A46  6E35               	movwf	___fladd@aexp^0,c
  8267  001A48  5034               	movf	___fladd@signs^0,w,c
  8268  001A4A  1835               	xorwf	___fladd@aexp^0,w,c
  8269  001A4C  B4D8               	btfsc	status,2,c
  8270  001A4E  EF2B  F00D         	goto	u7681
  8271  001A52  EF2D  F00D         	goto	u7680
  8272  001A56                     u7681:
  8273  001A56  EF2E  F00D         	goto	l7216
  8274  001A5A                     u7680:
  8275  001A5A  8C34               	bsf	___fladd@signs^0,6,c
  8276  001A5C                     l7216:
  8277  001A5C  502F               	movf	(___fladd@a+3)^0,w,c
  8278  001A5E  242F               	addwf	(___fladd@a+3)^0,w,c
  8279  001A60  6E35               	movwf	___fladd@aexp^0,c
  8280  001A62  AE2E               	btfss	(___fladd@a+2)^0,7,c
  8281  001A64  EF36  F00D         	goto	u7691
  8282  001A68  EF38  F00D         	goto	u7690
  8283  001A6C                     u7691:
  8284  001A6C  EF39  F00D         	goto	l7222
  8285  001A70                     u7690:
  8286  001A70  8035               	bsf	___fladd@aexp^0,0,c
  8287  001A72                     l7222:
  8288  001A72  5035               	movf	___fladd@aexp^0,w,c
  8289  001A74  B4D8               	btfsc	status,2,c
  8290  001A76  EF3F  F00D         	goto	u7701
  8291  001A7A  EF41  F00D         	goto	u7700
  8292  001A7E                     u7701:
  8293  001A7E  EF56  F00D         	goto	l7232
  8294  001A82                     u7700:
  8295  001A82  2835               	incf	___fladd@aexp^0,w,c
  8296  001A84  A4D8               	btfss	status,2,c
  8297  001A86  EF47  F00D         	goto	u7711
  8298  001A8A  EF49  F00D         	goto	u7710
  8299  001A8E                     u7711:
  8300  001A8E  EF51  F00D         	goto	l7228
  8301  001A92                     u7710:
  8302  001A92  0E00               	movlw	0
  8303  001A94  6E2C               	movwf	___fladd@a^0,c
  8304  001A96  0E00               	movlw	0
  8305  001A98  6E2D               	movwf	(___fladd@a+1)^0,c
  8306  001A9A  0E00               	movlw	0
  8307  001A9C  6E2E               	movwf	(___fladd@a+2)^0,c
  8308  001A9E  0E00               	movlw	0
  8309  001AA0  6E2F               	movwf	(___fladd@a+3)^0,c
  8310  001AA2                     l7228:
  8311  001AA2  8E2E               	bsf	(___fladd@a+2)^0,7,c
  8312  001AA4  0E00               	movlw	0
  8313  001AA6  6E2F               	movwf	(___fladd@a+3)^0,c
  8314  001AA8  EF5E  F00D         	goto	l7234
  8315  001AAC                     l7232:
  8316  001AAC  0E00               	movlw	0
  8317  001AAE  6E2C               	movwf	___fladd@a^0,c
  8318  001AB0  0E00               	movlw	0
  8319  001AB2  6E2D               	movwf	(___fladd@a+1)^0,c
  8320  001AB4  0E00               	movlw	0
  8321  001AB6  6E2E               	movwf	(___fladd@a+2)^0,c
  8322  001AB8  0E00               	movlw	0
  8323  001ABA  6E2F               	movwf	(___fladd@a+3)^0,c
  8324  001ABC                     l7234:
  8325  001ABC  5036               	movf	___fladd@bexp^0,w,c
  8326  001ABE  5C35               	subwf	___fladd@aexp^0,w,c
  8327  001AC0  B0D8               	btfsc	status,0,c
  8328  001AC2  EF65  F00D         	goto	u7721
  8329  001AC6  EF67  F00D         	goto	u7720
  8330  001ACA                     u7721:
  8331  001ACA  EF8E  F00D         	goto	l7270
  8332  001ACE                     u7720:
  8333  001ACE  AC34               	btfss	___fladd@signs^0,6,c
  8334  001AD0  EF6C  F00D         	goto	u7731
  8335  001AD4  EF6E  F00D         	goto	u7730
  8336  001AD8                     u7731:
  8337  001AD8  EF70  F00D         	goto	l7240
  8338  001ADC                     u7730:
  8339  001ADC  0E80               	movlw	128
  8340  001ADE  1A34               	xorwf	___fladd@signs^0,f,c
  8341  001AE0                     l7240:
  8342  001AE0  C036  F037         	movff	___fladd@bexp,___fladd@grs
  8343  001AE4  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8344  001AE8  C037  F035         	movff	___fladd@grs,___fladd@aexp
  8345  001AEC  C028  F037         	movff	___fladd@b,___fladd@grs
  8346  001AF0  C02C  F028         	movff	___fladd@a,___fladd@b
  8347  001AF4  C037  F02C         	movff	___fladd@grs,___fladd@a
  8348  001AF8  C029  F037         	movff	___fladd@b+1,___fladd@grs
  8349  001AFC  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  8350  001B00  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  8351  001B04  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  8352  001B08  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  8353  001B0C  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  8354  001B10  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  8355  001B14  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  8356  001B18  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  8357  001B1C                     l7270:
  8358  001B1C  0E00               	movlw	0
  8359  001B1E  6E37               	movwf	___fladd@grs^0,c
  8360  001B20  5036               	movf	___fladd@bexp^0,w,c
  8361  001B22  C035  F030         	movff	___fladd@aexp,??___fladd
  8362  001B26  6A31               	clrf	(??___fladd+1)^0,c
  8363  001B28  5E30               	subwf	??___fladd^0,f,c
  8364  001B2A  0E00               	movlw	0
  8365  001B2C  5A31               	subwfb	(??___fladd+1)^0,f,c
  8366  001B2E  BE31               	btfsc	(??___fladd+1)^0,7,c
  8367  001B30  EFA3  F00D         	goto	u7741
  8368  001B34  5031               	movf	(??___fladd+1)^0,w,c
  8369  001B36  E109               	bnz	u7740
  8370  001B38  0E1A               	movlw	26
  8371  001B3A  5C30               	subwf	??___fladd^0,w,c
  8372  001B3C  A0D8               	btfss	status,0,c
  8373  001B3E  EFA3  F00D         	goto	u7741
  8374  001B42  EFA5  F00D         	goto	u7740
  8375  001B46                     u7741:
  8376  001B46  EFDC  F00D         	goto	l1387
  8377  001B4A                     u7740:
  8378  001B4A  5028               	movf	___fladd@b^0,w,c
  8379  001B4C  1029               	iorwf	(___fladd@b+1)^0,w,c
  8380  001B4E  102A               	iorwf	(___fladd@b+2)^0,w,c
  8381  001B50  102B               	iorwf	(___fladd@b+3)^0,w,c
  8382  001B52  A4D8               	btfss	status,2,c
  8383  001B54  EFAE  F00D         	goto	u7751
  8384  001B58  EFB1  F00D         	goto	u7750
  8385  001B5C                     u7751:
  8386  001B5C  0E01               	movlw	1
  8387  001B5E  EFB2  F00D         	goto	u7760
  8388  001B62                     u7750:
  8389  001B62  0E00               	movlw	0
  8390  001B64                     u7760:
  8391  001B64  6E37               	movwf	___fladd@grs^0,c
  8392  001B66  0E00               	movlw	0
  8393  001B68  6E28               	movwf	___fladd@b^0,c
  8394  001B6A  0E00               	movlw	0
  8395  001B6C  6E29               	movwf	(___fladd@b+1)^0,c
  8396  001B6E  0E00               	movlw	0
  8397  001B70  6E2A               	movwf	(___fladd@b+2)^0,c
  8398  001B72  0E00               	movlw	0
  8399  001B74  6E2B               	movwf	(___fladd@b+3)^0,c
  8400  001B76  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8401  001B7A  EFE5  F00D         	goto	l1386
  8402  001B7E                     l1388:
  8403  001B7E  A037               	btfss	___fladd@grs^0,0,c
  8404  001B80  EFC4  F00D         	goto	u7771
  8405  001B84  EFC6  F00D         	goto	u7770
  8406  001B88                     u7771:
  8407  001B88  EFCC  F00D         	goto	l7282
  8408  001B8C                     u7770:
  8409  001B8C  90D8               	bcf	status,0,c
  8410  001B8E  3037               	rrcf	___fladd@grs^0,w,c
  8411  001B90  0901               	iorlw	1
  8412  001B92  6E37               	movwf	___fladd@grs^0,c
  8413  001B94  EFCE  F00D         	goto	l7284
  8414  001B98                     l7282:
  8415  001B98  90D8               	bcf	status,0,c
  8416  001B9A  3237               	rrcf	___fladd@grs^0,f,c
  8417  001B9C                     l7284:
  8418  001B9C  A028               	btfss	___fladd@b^0,0,c
  8419  001B9E  EFD3  F00D         	goto	u7781
  8420  001BA2  EFD5  F00D         	goto	u7780
  8421  001BA6                     u7781:
  8422  001BA6  EFD6  F00D         	goto	l7288
  8423  001BAA                     u7780:
  8424  001BAA  8E37               	bsf	___fladd@grs^0,7,c
  8425  001BAC                     l7288:
  8426  001BAC  342B               	rlcf	(___fladd@b+3)^0,w,c
  8427  001BAE  322B               	rrcf	(___fladd@b+3)^0,f,c
  8428  001BB0  322A               	rrcf	(___fladd@b+2)^0,f,c
  8429  001BB2  3229               	rrcf	(___fladd@b+1)^0,f,c
  8430  001BB4  3228               	rrcf	___fladd@b^0,f,c
  8431  001BB6  2A36               	incf	___fladd@bexp^0,f,c
  8432  001BB8                     l1387:
  8433  001BB8  5035               	movf	___fladd@aexp^0,w,c
  8434  001BBA  5C36               	subwf	___fladd@bexp^0,w,c
  8435  001BBC  A0D8               	btfss	status,0,c
  8436  001BBE  EFE3  F00D         	goto	u7791
  8437  001BC2  EFE5  F00D         	goto	u7790
  8438  001BC6                     u7791:
  8439  001BC6  EFBF  F00D         	goto	l1388
  8440  001BCA                     u7790:
  8441  001BCA                     l1386:
  8442  001BCA  BC34               	btfsc	___fladd@signs^0,6,c
  8443  001BCC  EFEA  F00D         	goto	u7801
  8444  001BD0  EFEC  F00D         	goto	u7800
  8445  001BD4                     u7801:
  8446  001BD4  EF2C  F00E         	goto	l7316
  8447  001BD8                     u7800:
  8448  001BD8  5036               	movf	___fladd@bexp^0,w,c
  8449  001BDA  A4D8               	btfss	status,2,c
  8450  001BDC  EFF2  F00D         	goto	u7811
  8451  001BE0  EFF4  F00D         	goto	u7810
  8452  001BE4                     u7811:
  8453  001BE4  EFFE  F00D         	goto	l7298
  8454  001BE8                     u7810:
  8455  001BE8  0E00               	movlw	0
  8456  001BEA  6E28               	movwf	?___fladd^0,c
  8457  001BEC  0E00               	movlw	0
  8458  001BEE  6E29               	movwf	(?___fladd+1)^0,c
  8459  001BF0  0E00               	movlw	0
  8460  001BF2  6E2A               	movwf	(?___fladd+2)^0,c
  8461  001BF4  0E00               	movlw	0
  8462  001BF6  6E2B               	movwf	(?___fladd+3)^0,c
  8463  001BF8  EF4D  F00F         	goto	l1395
  8464  001BFC                     l7298:
  8465  001BFC  502C               	movf	___fladd@a^0,w,c
  8466  001BFE  2628               	addwf	___fladd@b^0,f,c
  8467  001C00  502D               	movf	(___fladd@a+1)^0,w,c
  8468  001C02  2229               	addwfc	(___fladd@b+1)^0,f,c
  8469  001C04  502E               	movf	(___fladd@a+2)^0,w,c
  8470  001C06  222A               	addwfc	(___fladd@b+2)^0,f,c
  8471  001C08  502F               	movf	(___fladd@a+3)^0,w,c
  8472  001C0A  222B               	addwfc	(___fladd@b+3)^0,f,c
  8473  001C0C  A02B               	btfss	(___fladd@b+3)^0,0,c
  8474  001C0E  EF0B  F00E         	goto	u7821
  8475  001C12  EF0D  F00E         	goto	u7820
  8476  001C16                     u7821:
  8477  001C16  EFB9  F00E         	goto	l7352
  8478  001C1A                     u7820:
  8479  001C1A  A037               	btfss	___fladd@grs^0,0,c
  8480  001C1C  EF12  F00E         	goto	u7831
  8481  001C20  EF14  F00E         	goto	u7830
  8482  001C24                     u7831:
  8483  001C24  EF1A  F00E         	goto	l7306
  8484  001C28                     u7830:
  8485  001C28  90D8               	bcf	status,0,c
  8486  001C2A  3037               	rrcf	___fladd@grs^0,w,c
  8487  001C2C  0901               	iorlw	1
  8488  001C2E  6E37               	movwf	___fladd@grs^0,c
  8489  001C30  EF1C  F00E         	goto	l7308
  8490  001C34                     l7306:
  8491  001C34  90D8               	bcf	status,0,c
  8492  001C36  3237               	rrcf	___fladd@grs^0,f,c
  8493  001C38                     l7308:
  8494  001C38  A028               	btfss	___fladd@b^0,0,c
  8495  001C3A  EF21  F00E         	goto	u7841
  8496  001C3E  EF23  F00E         	goto	u7840
  8497  001C42                     u7841:
  8498  001C42  EF24  F00E         	goto	l7312
  8499  001C46                     u7840:
  8500  001C46  8E37               	bsf	___fladd@grs^0,7,c
  8501  001C48                     l7312:
  8502  001C48  342B               	rlcf	(___fladd@b+3)^0,w,c
  8503  001C4A  322B               	rrcf	(___fladd@b+3)^0,f,c
  8504  001C4C  322A               	rrcf	(___fladd@b+2)^0,f,c
  8505  001C4E  3229               	rrcf	(___fladd@b+1)^0,f,c
  8506  001C50  3228               	rrcf	___fladd@b^0,f,c
  8507  001C52  2A36               	incf	___fladd@bexp^0,f,c
  8508  001C54  EFB9  F00E         	goto	l7352
  8509  001C58                     l7316:
  8510  001C58  502C               	movf	___fladd@a^0,w,c
  8511  001C5A  5C28               	subwf	___fladd@b^0,w,c
  8512  001C5C  502D               	movf	(___fladd@a+1)^0,w,c
  8513  001C5E  5829               	subwfb	(___fladd@b+1)^0,w,c
  8514  001C60  502E               	movf	(___fladd@a+2)^0,w,c
  8515  001C62  582A               	subwfb	(___fladd@b+2)^0,w,c
  8516  001C64  502B               	movf	(___fladd@b+3)^0,w,c
  8517  001C66  0A80               	xorlw	128
  8518  001C68  6E30               	movwf	??___fladd^0,c
  8519  001C6A  502F               	movf	(___fladd@a+3)^0,w,c
  8520  001C6C  0A80               	xorlw	128
  8521  001C6E  5830               	subwfb	??___fladd^0,w,c
  8522  001C70  B0D8               	btfsc	status,0,c
  8523  001C72  EF3D  F00E         	goto	u7851
  8524  001C76  EF3F  F00E         	goto	u7850
  8525  001C7A                     u7851:
  8526  001C7A  EF6A  F00E         	goto	l7326
  8527  001C7E                     u7850:
  8528  001C7E  5028               	movf	___fladd@b^0,w,c
  8529  001C80  5C2C               	subwf	___fladd@a^0,w,c
  8530  001C82  6E30               	movwf	??___fladd^0,c
  8531  001C84  5029               	movf	(___fladd@b+1)^0,w,c
  8532  001C86  582D               	subwfb	(___fladd@a+1)^0,w,c
  8533  001C88  6E31               	movwf	(??___fladd+1)^0,c
  8534  001C8A  502A               	movf	(___fladd@b+2)^0,w,c
  8535  001C8C  582E               	subwfb	(___fladd@a+2)^0,w,c
  8536  001C8E  6E32               	movwf	(??___fladd+2)^0,c
  8537  001C90  502B               	movf	(___fladd@b+3)^0,w,c
  8538  001C92  582F               	subwfb	(___fladd@a+3)^0,w,c
  8539  001C94  6E33               	movwf	(??___fladd+3)^0,c
  8540  001C96  0EFF               	movlw	255
  8541  001C98  2430               	addwf	??___fladd^0,w,c
  8542  001C9A  6E28               	movwf	___fladd@b^0,c
  8543  001C9C  0EFF               	movlw	255
  8544  001C9E  2031               	addwfc	(??___fladd+1)^0,w,c
  8545  001CA0  6E29               	movwf	(___fladd@b+1)^0,c
  8546  001CA2  0EFF               	movlw	255
  8547  001CA4  2032               	addwfc	(??___fladd+2)^0,w,c
  8548  001CA6  6E2A               	movwf	(___fladd@b+2)^0,c
  8549  001CA8  0EFF               	movlw	255
  8550  001CAA  2033               	addwfc	(??___fladd+3)^0,w,c
  8551  001CAC  6E2B               	movwf	(___fladd@b+3)^0,c
  8552  001CAE  0E80               	movlw	128
  8553  001CB0  1A34               	xorwf	___fladd@signs^0,f,c
  8554  001CB2  6C37               	negf	___fladd@grs^0,c
  8555  001CB4  5037               	movf	___fladd@grs^0,w,c
  8556  001CB6  A4D8               	btfss	status,2,c
  8557  001CB8  EF60  F00E         	goto	u7861
  8558  001CBC  EF62  F00E         	goto	u7860
  8559  001CC0                     u7861:
  8560  001CC0  EF72  F00E         	goto	l1403
  8561  001CC4                     u7860:
  8562  001CC4  0E01               	movlw	1
  8563  001CC6  2628               	addwf	___fladd@b^0,f,c
  8564  001CC8  0E00               	movlw	0
  8565  001CCA  2229               	addwfc	(___fladd@b+1)^0,f,c
  8566  001CCC  222A               	addwfc	(___fladd@b+2)^0,f,c
  8567  001CCE  222B               	addwfc	(___fladd@b+3)^0,f,c
  8568  001CD0  EF72  F00E         	goto	l1403
  8569  001CD4                     l7326:
  8570  001CD4  502C               	movf	___fladd@a^0,w,c
  8571  001CD6  5E28               	subwf	___fladd@b^0,f,c
  8572  001CD8  502D               	movf	(___fladd@a+1)^0,w,c
  8573  001CDA  5A29               	subwfb	(___fladd@b+1)^0,f,c
  8574  001CDC  502E               	movf	(___fladd@a+2)^0,w,c
  8575  001CDE  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  8576  001CE0  502F               	movf	(___fladd@a+3)^0,w,c
  8577  001CE2  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  8578  001CE4                     l1403:
  8579  001CE4  5028               	movf	___fladd@b^0,w,c
  8580  001CE6  1029               	iorwf	(___fladd@b+1)^0,w,c
  8581  001CE8  102A               	iorwf	(___fladd@b+2)^0,w,c
  8582  001CEA  102B               	iorwf	(___fladd@b+3)^0,w,c
  8583  001CEC  A4D8               	btfss	status,2,c
  8584  001CEE  EF7B  F00E         	goto	u7871
  8585  001CF2  EF7D  F00E         	goto	u7870
  8586  001CF6                     u7871:
  8587  001CF6  EFB2  F00E         	goto	l7350
  8588  001CFA                     u7870:
  8589  001CFA  5037               	movf	___fladd@grs^0,w,c
  8590  001CFC  A4D8               	btfss	status,2,c
  8591  001CFE  EF83  F00E         	goto	u7881
  8592  001D02  EF85  F00E         	goto	u7880
  8593  001D06                     u7881:
  8594  001D06  EFB2  F00E         	goto	l7350
  8595  001D0A                     u7880:
  8596  001D0A  0E00               	movlw	0
  8597  001D0C  6E28               	movwf	?___fladd^0,c
  8598  001D0E  0E00               	movlw	0
  8599  001D10  6E29               	movwf	(?___fladd+1)^0,c
  8600  001D12  0E00               	movlw	0
  8601  001D14  6E2A               	movwf	(?___fladd+2)^0,c
  8602  001D16  0E00               	movlw	0
  8603  001D18  6E2B               	movwf	(?___fladd+3)^0,c
  8604  001D1A  EF4D  F00F         	goto	l1395
  8605  001D1E                     l7334:
  8606  001D1E  90D8               	bcf	status,0,c
  8607  001D20  3628               	rlcf	___fladd@b^0,f,c
  8608  001D22  3629               	rlcf	(___fladd@b+1)^0,f,c
  8609  001D24  362A               	rlcf	(___fladd@b+2)^0,f,c
  8610  001D26  362B               	rlcf	(___fladd@b+3)^0,f,c
  8611  001D28  AE37               	btfss	___fladd@grs^0,7,c
  8612  001D2A  EF99  F00E         	goto	u7891
  8613  001D2E  EF9B  F00E         	goto	u7890
  8614  001D32                     u7891:
  8615  001D32  EF9C  F00E         	goto	l7340
  8616  001D36                     u7890:
  8617  001D36  8028               	bsf	___fladd@b^0,0,c
  8618  001D38                     l7340:
  8619  001D38  A037               	btfss	___fladd@grs^0,0,c
  8620  001D3A  EFA1  F00E         	goto	u7901
  8621  001D3E  EFA3  F00E         	goto	u7900
  8622  001D42                     u7901:
  8623  001D42  EFA7  F00E         	goto	l7344
  8624  001D46                     u7900:
  8625  001D46  80D8               	bsf	status,0,c
  8626  001D48  3637               	rlcf	___fladd@grs^0,f,c
  8627  001D4A  EFA9  F00E         	goto	l7346
  8628  001D4E                     l7344:
  8629  001D4E  90D8               	bcf	status,0,c
  8630  001D50  3637               	rlcf	___fladd@grs^0,f,c
  8631  001D52                     l7346:
  8632  001D52  5036               	movf	___fladd@bexp^0,w,c
  8633  001D54  B4D8               	btfsc	status,2,c
  8634  001D56  EFAF  F00E         	goto	u7911
  8635  001D5A  EFB1  F00E         	goto	u7910
  8636  001D5E                     u7911:
  8637  001D5E  EFB2  F00E         	goto	l7350
  8638  001D62                     u7910:
  8639  001D62  0636               	decf	___fladd@bexp^0,f,c
  8640  001D64                     l7350:
  8641  001D64  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8642  001D66  EFB7  F00E         	goto	u7921
  8643  001D6A  EFB9  F00E         	goto	u7920
  8644  001D6E                     u7921:
  8645  001D6E  EF8F  F00E         	goto	l7334
  8646  001D72                     u7920:
  8647  001D72                     l7352:
  8648  001D72  0E00               	movlw	0
  8649  001D74  6E35               	movwf	___fladd@aexp^0,c
  8650  001D76  AE37               	btfss	___fladd@grs^0,7,c
  8651  001D78  EFC0  F00E         	goto	u7931
  8652  001D7C  EFC2  F00E         	goto	u7930
  8653  001D80                     u7931:
  8654  001D80  EFDA  F00E         	goto	l1412
  8655  001D84                     u7930:
  8656  001D84  C037  F030         	movff	___fladd@grs,??___fladd
  8657  001D88  0E7F               	movlw	127
  8658  001D8A  1630               	andwf	??___fladd^0,f,c
  8659  001D8C  B4D8               	btfsc	status,2,c
  8660  001D8E  EFCB  F00E         	goto	u7941
  8661  001D92  EFCD  F00E         	goto	u7940
  8662  001D96                     u7941:
  8663  001D96  EFD1  F00E         	goto	l1413
  8664  001D9A                     u7940:
  8665  001D9A                     l7358:
  8666  001D9A  0E01               	movlw	1
  8667  001D9C  6E35               	movwf	___fladd@aexp^0,c
  8668  001D9E  EFDA  F00E         	goto	l1412
  8669  001DA2                     l1413:
  8670  001DA2  A028               	btfss	___fladd@b^0,0,c
  8671  001DA4  EFD6  F00E         	goto	u7951
  8672  001DA8  EFD8  F00E         	goto	u7950
  8673  001DAC                     u7951:
  8674  001DAC  EFDA  F00E         	goto	l1412
  8675  001DB0                     u7950:
  8676  001DB0  EFCD  F00E         	goto	l7358
  8677  001DB4                     l1412:
  8678  001DB4  5035               	movf	___fladd@aexp^0,w,c
  8679  001DB6  B4D8               	btfsc	status,2,c
  8680  001DB8  EFE0  F00E         	goto	u7961
  8681  001DBC  EFE2  F00E         	goto	u7960
  8682  001DC0                     u7961:
  8683  001DC0  EF0D  F00F         	goto	l7370
  8684  001DC4                     u7960:
  8685  001DC4  0E01               	movlw	1
  8686  001DC6  2628               	addwf	___fladd@b^0,f,c
  8687  001DC8  0E00               	movlw	0
  8688  001DCA  2229               	addwfc	(___fladd@b+1)^0,f,c
  8689  001DCC  222A               	addwfc	(___fladd@b+2)^0,f,c
  8690  001DCE  222B               	addwfc	(___fladd@b+3)^0,f,c
  8691  001DD0  A02B               	btfss	(___fladd@b+3)^0,0,c
  8692  001DD2  EFED  F00E         	goto	u7971
  8693  001DD6  EFEF  F00E         	goto	u7970
  8694  001DDA                     u7971:
  8695  001DDA  EF0D  F00F         	goto	l7370
  8696  001DDE                     u7970:
  8697  001DDE  C028  F030         	movff	___fladd@b,??___fladd
  8698  001DE2  C029  F031         	movff	___fladd@b+1,??___fladd+1
  8699  001DE6  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  8700  001DEA  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  8701  001DEE  3433               	rlcf	(??___fladd+3)^0,w,c
  8702  001DF0  3233               	rrcf	(??___fladd+3)^0,f,c
  8703  001DF2  3232               	rrcf	(??___fladd+2)^0,f,c
  8704  001DF4  3231               	rrcf	(??___fladd+1)^0,f,c
  8705  001DF6  3230               	rrcf	??___fladd^0,f,c
  8706  001DF8  C030  F028         	movff	??___fladd,___fladd@b
  8707  001DFC  C031  F029         	movff	??___fladd+1,___fladd@b+1
  8708  001E00  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  8709  001E04  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  8710  001E08  2836               	incf	___fladd@bexp^0,w,c
  8711  001E0A  B4D8               	btfsc	status,2,c
  8712  001E0C  EF0A  F00F         	goto	u7981
  8713  001E10  EF0C  F00F         	goto	u7980
  8714  001E14                     u7981:
  8715  001E14  EF0D  F00F         	goto	l7370
  8716  001E18                     u7980:
  8717  001E18  2A36               	incf	___fladd@bexp^0,f,c
  8718  001E1A                     l7370:
  8719  001E1A  2836               	incf	___fladd@bexp^0,w,c
  8720  001E1C  B4D8               	btfsc	status,2,c
  8721  001E1E  EF13  F00F         	goto	u7991
  8722  001E22  EF15  F00F         	goto	u7990
  8723  001E26                     u7991:
  8724  001E26  EF1D  F00F         	goto	l7374
  8725  001E2A                     u7990:
  8726  001E2A  5036               	movf	___fladd@bexp^0,w,c
  8727  001E2C  A4D8               	btfss	status,2,c
  8728  001E2E  EF1B  F00F         	goto	u8001
  8729  001E32  EF1D  F00F         	goto	u8000
  8730  001E36                     u8001:
  8731  001E36  EF2F  F00F         	goto	l7378
  8732  001E3A                     u8000:
  8733  001E3A                     l7374:
  8734  001E3A  0E00               	movlw	0
  8735  001E3C  6E28               	movwf	___fladd@b^0,c
  8736  001E3E  0E00               	movlw	0
  8737  001E40  6E29               	movwf	(___fladd@b+1)^0,c
  8738  001E42  0E00               	movlw	0
  8739  001E44  6E2A               	movwf	(___fladd@b+2)^0,c
  8740  001E46  0E00               	movlw	0
  8741  001E48  6E2B               	movwf	(___fladd@b+3)^0,c
  8742  001E4A  5036               	movf	___fladd@bexp^0,w,c
  8743  001E4C  A4D8               	btfss	status,2,c
  8744  001E4E  EF2B  F00F         	goto	u8011
  8745  001E52  EF2D  F00F         	goto	u8010
  8746  001E56                     u8011:
  8747  001E56  EF2F  F00F         	goto	l7378
  8748  001E5A                     u8010:
  8749  001E5A  0E00               	movlw	0
  8750  001E5C  6E34               	movwf	___fladd@signs^0,c
  8751  001E5E                     l7378:
  8752  001E5E  A036               	btfss	___fladd@bexp^0,0,c
  8753  001E60  EF34  F00F         	goto	u8021
  8754  001E64  EF36  F00F         	goto	u8020
  8755  001E68                     u8021:
  8756  001E68  EF39  F00F         	goto	l7382
  8757  001E6C                     u8020:
  8758  001E6C  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8759  001E6E  EF3A  F00F         	goto	l7384
  8760  001E72                     l7382:
  8761  001E72  9E2A               	bcf	(___fladd@b+2)^0,7,c
  8762  001E74                     l7384:
  8763  001E74  90D8               	bcf	status,0,c
  8764  001E76  3036               	rrcf	___fladd@bexp^0,w,c
  8765  001E78  6E2B               	movwf	(___fladd@b+3)^0,c
  8766  001E7A  AE34               	btfss	___fladd@signs^0,7,c
  8767  001E7C  EF42  F00F         	goto	u8031
  8768  001E80  EF44  F00F         	goto	u8030
  8769  001E84                     u8031:
  8770  001E84  EF45  F00F         	goto	l7390
  8771  001E88                     u8030:
  8772  001E88  8E2B               	bsf	(___fladd@b+3)^0,7,c
  8773  001E8A                     l7390:
  8774  001E8A  C028  F028         	movff	___fladd@b,?___fladd
  8775  001E8E  C029  F029         	movff	___fladd@b+1,?___fladd+1
  8776  001E92  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  8777  001E96  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  8778  001E9A                     l1395:
  8779  001E9A  0012               	return		;funcret
  8780  001E9C                     __end_of___fladd:
  8781                           	opt callstack 0
  8782                           
  8783 ;; *************** function _dameLecturaAdc *****************
  8784 ;; Defined at:
  8785 ;;		line 12 in file "./adc.h"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  canalLeer       1    wreg     unsigned char 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  canalLeer       1    9[COMRAM] unsigned char 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  2    5[COMRAM] short 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2, status,0
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8799 ;;      Params:         2       0       0       0       0       0       0       0       0
  8800 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8801 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8802 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8803 ;;Total ram usage:        5 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    2
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_probarSensores
  8810 ;;		_seLlegoAlDestino
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text36
  8815  004634                     __ptext36:
  8816                           	opt callstack 0
  8817  004634                     _dameLecturaAdc:
  8818                           	opt callstack 27
  8819                           
  8820                           ;incstack = 0
  8821                           ;dameLecturaAdc@canalLeer stored from wreg
  8822  004634  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
  8823  004636                     
  8824                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  8825  004636  0E06               	movlw	6
  8826  004638                     u11317:
  8827  004638  2EE8               	decfsz	wreg,f,c
  8828  00463A  D7FE               	bra	u11317
  8829  00463C  D000               	nop2	
  8830  00463E                     
  8831                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
  8832  00463E  80C2               	bsf	194,0,c	;volatile
  8833  004640                     
  8834                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
  8835  004640  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
  8836  004644  4608               	rlncf	??_dameLecturaAdc^0,f,c
  8837  004646  4608               	rlncf	??_dameLecturaAdc^0,f,c
  8838  004648  50C2               	movf	194,w,c	;volatile
  8839  00464A  1808               	xorwf	??_dameLecturaAdc^0,w,c
  8840  00464C  0BC3               	andlw	-61
  8841  00464E  1808               	xorwf	??_dameLecturaAdc^0,w,c
  8842  004650  6EC2               	movwf	194,c	;volatile
  8843  004652                     
  8844                           ;./adc.h: 18:     ADCON0bits.GO = 1;
  8845  004652  82C2               	bsf	194,1,c	;volatile
  8846  004654                     
  8847                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
  8848  004654  82C2               	bsf	194,1,c	;volatile
  8849  004656                     l239:
  8850  004656  B2C2               	btfsc	194,1,c	;volatile
  8851  004658  EF30  F023         	goto	u10521
  8852  00465C  EF32  F023         	goto	u10520
  8853  004660                     u10521:
  8854  004660  EF2B  F023         	goto	l239
  8855  004664                     u10520:
  8856  004664                     
  8857                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
  8858  004664  90C2               	bcf	194,0,c	;volatile
  8859  004666                     
  8860                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
  8861  004666  50C4               	movf	196,w,c	;volatile
  8862  004668  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
  8863  00466A  6A08               	clrf	??_dameLecturaAdc^0,c
  8864  00466C  50C3               	movf	195,w,c	;volatile
  8865  00466E  2408               	addwf	??_dameLecturaAdc^0,w,c
  8866  004670  6E06               	movwf	?_dameLecturaAdc^0,c
  8867  004672  0E00               	movlw	0
  8868  004674  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
  8869  004676  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
  8870  004678  0012               	return		;funcret
  8871  00467A                     __end_of_dameLecturaAdc:
  8872                           	opt callstack 0
  8873                           
  8874 ;; *************** function _inicializarComportamientoBasico *****************
  8875 ;; Defined at:
  8876 ;;		line 230 in file "main.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8890 ;;      Params:         0       0       0       0       0       0       0       0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8893 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8894 ;;Total ram usage:        0 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    6
  8897 ;; This function calls:
  8898 ;;		_dameDistancia
  8899 ;;		_velocidadEstandar
  8900 ;; This function is called by:
  8901 ;;		_main
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text37
  8906  0045A0                     __ptext37:
  8907                           	opt callstack 0
  8908  0045A0                     _inicializarComportamientoBasico:
  8909                           	opt callstack 24
  8910  0045A0                     
  8911                           ;main.c: 232:     mouse.curr_state = ENFRENTE;
  8912  0045A0  0E01               	movlw	1
  8913  0045A2  6E57               	movwf	_mouse^0,c
  8914  0045A4                     
  8915                           ;main.c: 234:     oldSensorDerecha = dameDistancia(DERECHA);
  8916  0045A4  0E03               	movlw	3
  8917  0045A6  EC5F  F01A         	call	_dameDistancia
  8918  0045AA  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  8919  0045AE  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  8920  0045B2  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  8921  0045B6  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  8922  0045BA                     
  8923                           ;main.c: 235:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  8924  0045BA  0E02               	movlw	2
  8925  0045BC  EC5F  F01A         	call	_dameDistancia
  8926  0045C0  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  8927  0045C4  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  8928  0045C8  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  8929  0045CC  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  8930  0045D0                     
  8931                           ;main.c: 236:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  8932  0045D0  0E01               	movlw	1
  8933  0045D2  EC5F  F01A         	call	_dameDistancia
  8934  0045D6  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  8935  0045DA  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  8936  0045DE  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  8937  0045E2  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  8938  0045E6                     
  8939                           ;main.c: 238:     velocidadEstandar();
  8940  0045E6  EC22  F024         	call	_velocidadEstandar	;wreg free
  8941  0045EA  0012               	return		;funcret
  8942  0045EC                     __end_of_inicializarComportamientoBasico:
  8943                           	opt callstack 0
  8944                           
  8945 ;; *************** function _velocidadEstandar *****************
  8946 ;; Defined at:
  8947 ;;		line 1066 in file "main.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;		None
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      void 
  8954 ;; Registers used:
  8955 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8961 ;;      Params:         0       0       0       0       0       0       0       0       0
  8962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8964 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8965 ;;Total ram usage:        0 bytes
  8966 ;; Hardware stack levels used:    1
  8967 ;; Hardware stack levels required when called:    5
  8968 ;; This function calls:
  8969 ;;		_pwmDuty
  8970 ;; This function is called by:
  8971 ;;		_inicializarComportamientoBasico
  8972 ;;		_comportamientoBasico
  8973 ;;		_forzarEspejeoAuto
  8974 ;;		_regresarPuntoPartida
  8975 ;;		_regresarAlCruce
  8976 ;;		_recorrerCaminoEncontrado
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text38
  8981  004844                     __ptext38:
  8982                           	opt callstack 0
  8983  004844                     _velocidadEstandar:
  8984                           	opt callstack 24
  8985  004844                     
  8986                           ;main.c: 1067:     pwmDuty(70, 1);
  8987  004844  0E00               	movlw	0
  8988  004846  0100               	movlb	0	; () banked
  8989  004848  6F80               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8990  00484A  0E46               	movlw	70
  8991  00484C  6F7F               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8992  00484E  0E01               	movlw	1
  8993  004850  6F81               	movwf	pwmDuty@channel& (0+255),b
  8994  004852  ECAB  F015         	call	_pwmDuty	;wreg free
  8995                           
  8996                           ;main.c: 1068:     pwmDuty(70, 2);
  8997  004856  0E00               	movlw	0
  8998  004858  0100               	movlb	0	; () banked
  8999  00485A  6F80               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  9000  00485C  0E46               	movlw	70
  9001  00485E  6F7F               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  9002  004860  0E02               	movlw	2
  9003  004862  6F81               	movwf	pwmDuty@channel& (0+255),b
  9004  004864  ECAB  F015         	call	_pwmDuty	;wreg free
  9005  004868  0012               	return		;funcret
  9006  00486A                     __end_of_velocidadEstandar:
  9007                           	opt callstack 0
  9008                           
  9009 ;; *************** function _pwmDuty *****************
  9010 ;; Defined at:
  9011 ;;		line 20 in file "./pwm.h"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  cicloTrabajo    2   31[BANK0 ] unsigned int 
  9014 ;;  channel         1   33[BANK0 ] unsigned char 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  duty            4   39[BANK0 ] long 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9026 ;;      Params:         0       3       0       0       0       0       0       0       0
  9027 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9028 ;;      Temps:          0       5       0       0       0       0       0       0       0
  9029 ;;      Totals:         0      12       0       0       0       0       0       0       0
  9030 ;;Total ram usage:       12 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    4
  9033 ;; This function calls:
  9034 ;;		___fldiv
  9035 ;;		___flmul
  9036 ;;		___fltol
  9037 ;;		___xxtofl
  9038 ;;		_map
  9039 ;; This function is called by:
  9040 ;;		_velocidadEstandar
  9041 ;;		_PID
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           	psect	text39
  9046  002B56                     __ptext39:
  9047                           	opt callstack 0
  9048  002B56                     _pwmDuty:
  9049                           	opt callstack 24
  9050  002B56                     
  9051                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  9052  002B56  C07F  F020         	movff	pwmDuty@cicloTrabajo,map@x
  9053  002B5A  C080  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  9054  002B5E  6A22               	clrf	(map@x+2)^0,c
  9055  002B60  6A23               	clrf	(map@x+3)^0,c
  9056  002B62  0E00               	movlw	0
  9057  002B64  6E24               	movwf	map@in_min^0,c
  9058  002B66  0E00               	movlw	0
  9059  002B68  6E25               	movwf	(map@in_min+1)^0,c
  9060  002B6A  0E00               	movlw	0
  9061  002B6C  6E26               	movwf	(map@in_min+2)^0,c
  9062  002B6E  0E00               	movlw	0
  9063  002B70  6E27               	movwf	(map@in_min+3)^0,c
  9064  002B72  0E64               	movlw	100
  9065  002B74  6E28               	movwf	map@in_max^0,c
  9066  002B76  0E00               	movlw	0
  9067  002B78  6E29               	movwf	(map@in_max+1)^0,c
  9068  002B7A  0E00               	movlw	0
  9069  002B7C  6E2A               	movwf	(map@in_max+2)^0,c
  9070  002B7E  0E00               	movlw	0
  9071  002B80  6E2B               	movwf	(map@in_max+3)^0,c
  9072  002B82  0E00               	movlw	0
  9073  002B84  6E2C               	movwf	map@out_min^0,c
  9074  002B86  0E00               	movlw	0
  9075  002B88  6E2D               	movwf	(map@out_min+1)^0,c
  9076  002B8A  0E00               	movlw	0
  9077  002B8C  6E2E               	movwf	(map@out_min+2)^0,c
  9078  002B8E  0E00               	movlw	0
  9079  002B90  6E2F               	movwf	(map@out_min+3)^0,c
  9080  002B92  0EFF               	movlw	255
  9081  002B94  6E30               	movwf	map@out_max^0,c
  9082  002B96  0E03               	movlw	3
  9083  002B98  6E31               	movwf	(map@out_max+1)^0,c
  9084  002B9A  0E00               	movlw	0
  9085  002B9C  6E32               	movwf	(map@out_max+2)^0,c
  9086  002B9E  0E00               	movlw	0
  9087  002BA0  6E33               	movwf	(map@out_max+3)^0,c
  9088  002BA2  EC5A  F020         	call	_map	;wreg free
  9089  002BA6  C020  F087         	movff	?_map,pwmDuty@duty
  9090  002BAA  C021  F088         	movff	?_map+1,pwmDuty@duty+1
  9091  002BAE  C022  F089         	movff	?_map+2,pwmDuty@duty+2
  9092  002BB2  C023  F08A         	movff	?_map+3,pwmDuty@duty+3
  9093  002BB6                     
  9094                           ;./pwm.h: 24:     if (duty < 1024) {
  9095  002BB6  0100               	movlb	0	; () banked
  9096  002BB8  BF8A               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  9097  002BBA  EFEB  F015         	goto	u10360
  9098  002BBE  518A               	movf	(pwmDuty@duty+3)& (0+255),w,b
  9099  002BC0  1189               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  9100  002BC2  E107               	bnz	u10361
  9101  002BC4  0E04               	movlw	4
  9102  002BC6  5D88               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  9103  002BC8  B0D8               	btfsc	status,0,c
  9104  002BCA  EFE9  F015         	goto	u10361
  9105  002BCE  EFEB  F015         	goto	u10360
  9106  002BD2                     u10361:
  9107  002BD2  EF88  F016         	goto	l155
  9108  002BD6                     u10360:
  9109  002BD6                     
  9110                           ; BSR set to: 0
  9111                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  9112  002BD6  0E00               	movlw	0
  9113  002BD8  6F64               	movwf	___flmul@a& (0+255),b
  9114  002BDA  0E00               	movlw	0
  9115  002BDC  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9116  002BDE  0EFA               	movlw	250
  9117  002BE0  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9118  002BE2  0E43               	movlw	67
  9119  002BE4  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9120  002BE6  0E00               	movlw	0
  9121  002BE8  6E3C               	movwf	___fldiv@a^0,c
  9122  002BEA  0EC0               	movlw	192
  9123  002BEC  6E3D               	movwf	(___fldiv@a+1)^0,c
  9124  002BEE  0E7F               	movlw	127
  9125  002BF0  6E3E               	movwf	(___fldiv@a+2)^0,c
  9126  002BF2  0E44               	movlw	68
  9127  002BF4  6E3F               	movwf	(___fldiv@a+3)^0,c
  9128  002BF6  C087  F00D         	movff	pwmDuty@duty,___xxtofl@val
  9129  002BFA  C088  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  9130  002BFE  C089  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  9131  002C02  C08A  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  9132  002C06  0E01               	movlw	1
  9133  002C08  EC89  F016         	call	___xxtofl
  9134  002C0C  C00D  F038         	movff	?___xxtofl,___fldiv@b
  9135  002C10  C00E  F039         	movff	?___xxtofl+1,___fldiv@b+1
  9136  002C14  C00F  F03A         	movff	?___xxtofl+2,___fldiv@b+2
  9137  002C18  C010  F03B         	movff	?___xxtofl+3,___fldiv@b+3
  9138  002C1C  EC64  F011         	call	___fldiv	;wreg free
  9139  002C20  C038  F060         	movff	?___fldiv,___flmul@b
  9140  002C24  C039  F061         	movff	?___fldiv+1,___flmul@b+1
  9141  002C28  C03A  F062         	movff	?___fldiv+2,___flmul@b+2
  9142  002C2C  C03B  F063         	movff	?___fldiv+3,___flmul@b+3
  9143  002C30  EC4E  F00F         	call	___flmul	;wreg free
  9144  002C34  C060  F075         	movff	?___flmul,___fltol@f1
  9145  002C38  C061  F076         	movff	?___flmul+1,___fltol@f1+1
  9146  002C3C  C062  F077         	movff	?___flmul+2,___fltol@f1+2
  9147  002C40  C063  F078         	movff	?___flmul+3,___fltol@f1+3
  9148  002C44  EC96  F01B         	call	___fltol	;wreg free
  9149  002C48  C075  F087         	movff	?___fltol,pwmDuty@duty
  9150  002C4C  C076  F088         	movff	?___fltol+1,pwmDuty@duty+1
  9151  002C50  C077  F089         	movff	?___fltol+2,pwmDuty@duty+2
  9152  002C54  C078  F08A         	movff	?___fltol+3,pwmDuty@duty+3
  9153                           
  9154                           ;./pwm.h: 28:         switch (channel) {
  9155  002C58  EF72  F016         	goto	l8700
  9156  002C5C                     l8694:
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  9160  002C5C  0E02               	movlw	2
  9161  002C5E  6F82               	movwf	??_pwmDuty& (0+255),b
  9162  002C60  C087  F083         	movff	pwmDuty@duty,??_pwmDuty+1
  9163  002C64  C088  F084         	movff	pwmDuty@duty+1,??_pwmDuty+2
  9164  002C68  C089  F085         	movff	pwmDuty@duty+2,??_pwmDuty+3
  9165  002C6C  C08A  F086         	movff	pwmDuty@duty+3,??_pwmDuty+4
  9166  002C70                     u10375:
  9167  002C70  6782               	tstfsz	??_pwmDuty& (0+255),b
  9168  002C72  EF3D  F016         	goto	u10376
  9169  002C76  EF45  F016         	goto	u10377
  9170  002C7A                     u10376:
  9171  002C7A  3586               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  9172  002C7C  3386               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  9173  002C7E  3385               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  9174  002C80  3384               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  9175  002C82  3383               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  9176  002C84  2F82               	decfsz	??_pwmDuty& (0+255),f,b
  9177  002C86  EF38  F016         	goto	u10375
  9178  002C8A                     u10377:
  9179  002C8A  0100               	movlb	0	; () banked
  9180  002C8C  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9181  002C8E  6EBE               	movwf	190,c	;volatile
  9182                           
  9183                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  9184  002C90  0ECF               	movlw	207
  9185  002C92  16BD               	andwf	189,f,c	;volatile
  9186                           
  9187                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  9188  002C94  3987               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  9189  002C96  0BF0               	andlw	240
  9190  002C98  0B30               	andlw	48
  9191  002C9A  12BD               	iorwf	189,f,c	;volatile
  9192                           
  9193                           ;./pwm.h: 34:                 break;
  9194  002C9C  EF88  F016         	goto	l155
  9195  002CA0                     l8696:
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  9199  002CA0  0E02               	movlw	2
  9200  002CA2  6F82               	movwf	??_pwmDuty& (0+255),b
  9201  002CA4  C087  F083         	movff	pwmDuty@duty,??_pwmDuty+1
  9202  002CA8  C088  F084         	movff	pwmDuty@duty+1,??_pwmDuty+2
  9203  002CAC  C089  F085         	movff	pwmDuty@duty+2,??_pwmDuty+3
  9204  002CB0  C08A  F086         	movff	pwmDuty@duty+3,??_pwmDuty+4
  9205  002CB4                     u10385:
  9206  002CB4  6782               	tstfsz	??_pwmDuty& (0+255),b
  9207  002CB6  EF5F  F016         	goto	u10386
  9208  002CBA  EF67  F016         	goto	u10387
  9209  002CBE                     u10386:
  9210  002CBE  3586               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  9211  002CC0  3386               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  9212  002CC2  3385               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  9213  002CC4  3384               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  9214  002CC6  3383               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  9215  002CC8  2F82               	decfsz	??_pwmDuty& (0+255),f,b
  9216  002CCA  EF5A  F016         	goto	u10385
  9217  002CCE                     u10387:
  9218  002CCE  0100               	movlb	0	; () banked
  9219  002CD0  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9220  002CD2  6EBB               	movwf	187,c	;volatile
  9221                           
  9222                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  9223  002CD4  0ECF               	movlw	207
  9224  002CD6  16BA               	andwf	186,f,c	;volatile
  9225                           
  9226                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  9227  002CD8  3987               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  9228  002CDA  0BF0               	andlw	240
  9229  002CDC  0B30               	andlw	48
  9230  002CDE  12BA               	iorwf	186,f,c	;volatile
  9231                           
  9232                           ;./pwm.h: 40:                 break;
  9233  002CE0  EF88  F016         	goto	l155
  9234  002CE4                     l8700:
  9235  002CE4  0100               	movlb	0	; () banked
  9236  002CE6  5181               	movf	pwmDuty@channel& (0+255),w,b
  9237  002CE8  6F82               	movwf	??_pwmDuty& (0+255),b
  9238  002CEA  6B83               	clrf	(??_pwmDuty+1)& (0+255),b
  9239                           
  9240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9241                           ; Switch size 1, requested type "simple"
  9242                           ; Number of cases is 1, Range of values is 0 to 0
  9243                           ; switch strategies available:
  9244                           ; Name         Instructions Cycles
  9245                           ; simple_byte            4     3 (average)
  9246                           ;	Chosen strategy is simple_byte
  9247  002CEC  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9248  002CEE  0A00               	xorlw	0	; case 0
  9249  002CF0  B4D8               	btfsc	status,2,c
  9250  002CF2  EF7D  F016         	goto	l9790
  9251  002CF6  EF88  F016         	goto	l155
  9252  002CFA                     l9790:
  9253                           
  9254                           ; BSR set to: 0
  9255                           ; Switch size 1, requested type "simple"
  9256                           ; Number of cases is 2, Range of values is 1 to 2
  9257                           ; switch strategies available:
  9258                           ; Name         Instructions Cycles
  9259                           ; simple_byte            7     4 (average)
  9260                           ;	Chosen strategy is simple_byte
  9261  002CFA  5182               	movf	??_pwmDuty& (0+255),w,b
  9262  002CFC  0A01               	xorlw	1	; case 1
  9263  002CFE  B4D8               	btfsc	status,2,c
  9264  002D00  EF2E  F016         	goto	l8694
  9265  002D04  0A03               	xorlw	3	; case 2
  9266  002D06  B4D8               	btfsc	status,2,c
  9267  002D08  EF50  F016         	goto	l8696
  9268  002D0C  EF88  F016         	goto	l155
  9269  002D10                     l155:
  9270                           
  9271                           ; BSR set to: 0
  9272  002D10  0012               	return		;funcret
  9273  002D12                     __end_of_pwmDuty:
  9274                           	opt callstack 0
  9275                           
  9276 ;; *************** function _map *****************
  9277 ;; Defined at:
  9278 ;;		line 16 in file "./pwm.h"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;  x               4   31[COMRAM] long 
  9281 ;;  in_min          4   35[COMRAM] long 
  9282 ;;  in_max          4   39[COMRAM] long 
  9283 ;;  out_min         4   43[COMRAM] long 
  9284 ;;  out_max         4   47[COMRAM] long 
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  4   31[COMRAM] long 
  9289 ;; Registers used:
  9290 ;;		wreg, status,2, status,0, cstack
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9296 ;;      Params:        20       0       0       0       0       0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9299 ;;      Totals:        20       0       0       0       0       0       0       0       0
  9300 ;;Total ram usage:       20 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    3
  9303 ;; This function calls:
  9304 ;;		___aldiv
  9305 ;;		___lmul
  9306 ;; This function is called by:
  9307 ;;		_pwmDuty
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311                           	psect	text40
  9312  0040B4                     __ptext40:
  9313                           	opt callstack 0
  9314  0040B4                     _map:
  9315                           	opt callstack 24
  9316  0040B4                     
  9317                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  9318  0040B4  5024               	movf	map@in_min^0,w,c
  9319  0040B6  5C20               	subwf	map@x^0,w,c
  9320  0040B8  6E06               	movwf	___lmul@multiplier^0,c
  9321  0040BA  5025               	movf	(map@in_min+1)^0,w,c
  9322  0040BC  5821               	subwfb	(map@x+1)^0,w,c
  9323  0040BE  6E07               	movwf	(___lmul@multiplier+1)^0,c
  9324  0040C0  5026               	movf	(map@in_min+2)^0,w,c
  9325  0040C2  5822               	subwfb	(map@x+2)^0,w,c
  9326  0040C4  6E08               	movwf	(___lmul@multiplier+2)^0,c
  9327  0040C6  5027               	movf	(map@in_min+3)^0,w,c
  9328  0040C8  5823               	subwfb	(map@x+3)^0,w,c
  9329  0040CA  6E09               	movwf	(___lmul@multiplier+3)^0,c
  9330  0040CC  502C               	movf	map@out_min^0,w,c
  9331  0040CE  5C30               	subwf	map@out_max^0,w,c
  9332  0040D0  6E0A               	movwf	___lmul@multiplicand^0,c
  9333  0040D2  502D               	movf	(map@out_min+1)^0,w,c
  9334  0040D4  5831               	subwfb	(map@out_max+1)^0,w,c
  9335  0040D6  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  9336  0040D8  502E               	movf	(map@out_min+2)^0,w,c
  9337  0040DA  5832               	subwfb	(map@out_max+2)^0,w,c
  9338  0040DC  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  9339  0040DE  502F               	movf	(map@out_min+3)^0,w,c
  9340  0040E0  5833               	subwfb	(map@out_max+3)^0,w,c
  9341  0040E2  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  9342  0040E4  EC3E  F021         	call	___lmul	;wreg free
  9343  0040E8  C006  F012         	movff	?___lmul,___aldiv@dividend
  9344  0040EC  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  9345  0040F0  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  9346  0040F4  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  9347  0040F8  5024               	movf	map@in_min^0,w,c
  9348  0040FA  5C28               	subwf	map@in_max^0,w,c
  9349  0040FC  6E16               	movwf	___aldiv@divisor^0,c
  9350  0040FE  5025               	movf	(map@in_min+1)^0,w,c
  9351  004100  5829               	subwfb	(map@in_max+1)^0,w,c
  9352  004102  6E17               	movwf	(___aldiv@divisor+1)^0,c
  9353  004104  5026               	movf	(map@in_min+2)^0,w,c
  9354  004106  582A               	subwfb	(map@in_max+2)^0,w,c
  9355  004108  6E18               	movwf	(___aldiv@divisor+2)^0,c
  9356  00410A  5027               	movf	(map@in_min+3)^0,w,c
  9357  00410C  582B               	subwfb	(map@in_max+3)^0,w,c
  9358  00410E  6E19               	movwf	(___aldiv@divisor+3)^0,c
  9359  004110  EC10  F01B         	call	___aldiv	;wreg free
  9360  004114  502C               	movf	map@out_min^0,w,c
  9361  004116  2412               	addwf	?___aldiv^0,w,c
  9362  004118  6E20               	movwf	?_map^0,c
  9363  00411A  502D               	movf	(map@out_min+1)^0,w,c
  9364  00411C  2013               	addwfc	(?___aldiv+1)^0,w,c
  9365  00411E  6E21               	movwf	(?_map+1)^0,c
  9366  004120  502E               	movf	(map@out_min+2)^0,w,c
  9367  004122  2014               	addwfc	(?___aldiv+2)^0,w,c
  9368  004124  6E22               	movwf	(?_map+2)^0,c
  9369  004126  502F               	movf	(map@out_min+3)^0,w,c
  9370  004128  2015               	addwfc	(?___aldiv+3)^0,w,c
  9371  00412A  6E23               	movwf	(?_map+3)^0,c
  9372  00412C  0012               	return		;funcret
  9373  00412E                     __end_of_map:
  9374                           	opt callstack 0
  9375                           
  9376 ;; *************** function ___lmul *****************
  9377 ;; Defined at:
  9378 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  multiplier      4    5[COMRAM] unsigned long 
  9381 ;;  multiplicand    4    9[COMRAM] unsigned long 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  product         4   13[COMRAM] unsigned long 
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  4    5[COMRAM] unsigned long 
  9386 ;; Registers used:
  9387 ;;		wreg, status,2, status,0
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9393 ;;      Params:         8       0       0       0       0       0       0       0       0
  9394 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9396 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9397 ;;Total ram usage:       12 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    2
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_map
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text41
  9408  00427C                     __ptext41:
  9409                           	opt callstack 0
  9410  00427C                     ___lmul:
  9411                           	opt callstack 24
  9412  00427C  0E00               	movlw	0
  9413  00427E  6E0E               	movwf	___lmul@product^0,c
  9414  004280  0E00               	movlw	0
  9415  004282  6E0F               	movwf	(___lmul@product+1)^0,c
  9416  004284  0E00               	movlw	0
  9417  004286  6E10               	movwf	(___lmul@product+2)^0,c
  9418  004288  0E00               	movlw	0
  9419  00428A  6E11               	movwf	(___lmul@product+3)^0,c
  9420  00428C                     l8554:
  9421  00428C  A006               	btfss	___lmul@multiplier^0,0,c
  9422  00428E  EF4B  F021         	goto	u10131
  9423  004292  EF4D  F021         	goto	u10130
  9424  004296                     u10131:
  9425  004296  EF55  F021         	goto	l8558
  9426  00429A                     u10130:
  9427  00429A  500A               	movf	___lmul@multiplicand^0,w,c
  9428  00429C  260E               	addwf	___lmul@product^0,f,c
  9429  00429E  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  9430  0042A0  220F               	addwfc	(___lmul@product+1)^0,f,c
  9431  0042A2  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  9432  0042A4  2210               	addwfc	(___lmul@product+2)^0,f,c
  9433  0042A6  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  9434  0042A8  2211               	addwfc	(___lmul@product+3)^0,f,c
  9435  0042AA                     l8558:
  9436  0042AA  90D8               	bcf	status,0,c
  9437  0042AC  360A               	rlcf	___lmul@multiplicand^0,f,c
  9438  0042AE  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9439  0042B0  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9440  0042B2  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9441  0042B4  90D8               	bcf	status,0,c
  9442  0042B6  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  9443  0042B8  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  9444  0042BA  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  9445  0042BC  3206               	rrcf	___lmul@multiplier^0,f,c
  9446  0042BE  5006               	movf	___lmul@multiplier^0,w,c
  9447  0042C0  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  9448  0042C2  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  9449  0042C4  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  9450  0042C6  A4D8               	btfss	status,2,c
  9451  0042C8  EF68  F021         	goto	u10141
  9452  0042CC  EF6A  F021         	goto	u10140
  9453  0042D0                     u10141:
  9454  0042D0  EF46  F021         	goto	l8554
  9455  0042D4                     u10140:
  9456  0042D4  C00E  F006         	movff	___lmul@product,?___lmul
  9457  0042D8  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  9458  0042DC  C010  F008         	movff	___lmul@product+2,?___lmul+2
  9459  0042E0  C011  F009         	movff	___lmul@product+3,?___lmul+3
  9460  0042E4  0012               	return		;funcret
  9461  0042E6                     __end_of___lmul:
  9462                           	opt callstack 0
  9463                           
  9464 ;; *************** function ___fltol *****************
  9465 ;; Defined at:
  9466 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  f1              4   21[BANK0 ] unsigned long 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  exp1            1   30[BANK0 ] unsigned char 
  9471 ;;  sign1           1   29[BANK0 ] unsigned char 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  4   21[BANK0 ] long 
  9474 ;; Registers used:
  9475 ;;		wreg, status,2, status,0
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9481 ;;      Params:         0       4       0       0       0       0       0       0       0
  9482 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9483 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9484 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9485 ;;Total ram usage:       10 bytes
  9486 ;; Hardware stack levels used:    1
  9487 ;; Hardware stack levels required when called:    2
  9488 ;; This function calls:
  9489 ;;		Nothing
  9490 ;; This function is called by:
  9491 ;;		_pwmDuty
  9492 ;;		_efgtoa
  9493 ;;		_PID
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           	psect	text42
  9498  00372C                     __ptext42:
  9499                           	opt callstack 0
  9500  00372C                     ___fltol:
  9501                           	opt callstack 23
  9502  00372C  0100               	movlb	0	; () banked
  9503  00372E  3577               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9504  003730  3578               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9505  003732  6F7E               	movwf	___fltol@exp1& (0+255),b
  9506  003734  517E               	movf	___fltol@exp1& (0+255),w,b
  9507  003736  A4D8               	btfss	status,2,c
  9508  003738  EFA0  F01B         	goto	u9091
  9509  00373C  EFA2  F01B         	goto	u9090
  9510  003740                     u9091:
  9511  003740  EFAC  F01B         	goto	l7980
  9512  003744                     u9090:
  9513  003744                     l7976:
  9514                           
  9515                           ; BSR set to: 0
  9516  003744  0E00               	movlw	0
  9517  003746  6F75               	movwf	?___fltol& (0+255),b
  9518  003748  0E00               	movlw	0
  9519  00374A  6F76               	movwf	(?___fltol+1)& (0+255),b
  9520  00374C  0E00               	movlw	0
  9521  00374E  6F77               	movwf	(?___fltol+2)& (0+255),b
  9522  003750  0E00               	movlw	0
  9523  003752  6F78               	movwf	(?___fltol+3)& (0+255),b
  9524  003754  EF19  F01C         	goto	l1155
  9525  003758                     l7980:
  9526                           
  9527                           ; BSR set to: 0
  9528  003758  C075  F079         	movff	___fltol@f1,??___fltol
  9529  00375C  C076  F07A         	movff	___fltol@f1+1,??___fltol+1
  9530  003760  C077  F07B         	movff	___fltol@f1+2,??___fltol+2
  9531  003764  C078  F07C         	movff	___fltol@f1+3,??___fltol+3
  9532  003768  0E20               	movlw	32
  9533  00376A  EFBC  F01B         	goto	u9100
  9534  00376E                     u9105:
  9535  00376E  90D8               	bcf	status,0,c
  9536  003770  337C               	rrcf	(??___fltol+3)& (0+255),f,b
  9537  003772  337B               	rrcf	(??___fltol+2)& (0+255),f,b
  9538  003774  337A               	rrcf	(??___fltol+1)& (0+255),f,b
  9539  003776  3379               	rrcf	??___fltol& (0+255),f,b
  9540  003778                     u9100:
  9541  003778  2EE8               	decfsz	wreg,f,c
  9542  00377A  EFB7  F01B         	goto	u9105
  9543  00377E  5179               	movf	??___fltol& (0+255),w,b
  9544  003780  6F7D               	movwf	___fltol@sign1& (0+255),b
  9545  003782                     
  9546                           ; BSR set to: 0
  9547  003782  8F77               	bsf	(___fltol@f1+2)& (0+255),7,b
  9548  003784                     
  9549                           ; BSR set to: 0
  9550  003784  0EFF               	movlw	255
  9551  003786  1775               	andwf	___fltol@f1& (0+255),f,b
  9552  003788  0EFF               	movlw	255
  9553  00378A  1776               	andwf	(___fltol@f1+1)& (0+255),f,b
  9554  00378C  0EFF               	movlw	255
  9555  00378E  1777               	andwf	(___fltol@f1+2)& (0+255),f,b
  9556  003790  0E00               	movlw	0
  9557  003792  1778               	andwf	(___fltol@f1+3)& (0+255),f,b
  9558  003794                     
  9559                           ; BSR set to: 0
  9560  003794  0E96               	movlw	150
  9561  003796  5F7E               	subwf	___fltol@exp1& (0+255),f,b
  9562  003798                     
  9563                           ; BSR set to: 0
  9564  003798  BF7E               	btfsc	___fltol@exp1& (0+255),7,b
  9565  00379A  EFD3  F01B         	goto	u9110
  9566  00379E  EFD1  F01B         	goto	u9111
  9567  0037A2                     u9111:
  9568  0037A2  EFE9  F01B         	goto	l8000
  9569  0037A6                     u9110:
  9570  0037A6                     
  9571                           ; BSR set to: 0
  9572  0037A6  517E               	movf	___fltol@exp1& (0+255),w,b
  9573  0037A8  0A80               	xorlw	128
  9574  0037AA  0F97               	addlw	151
  9575  0037AC  B0D8               	btfsc	status,0,c
  9576  0037AE  EFDB  F01B         	goto	u9121
  9577  0037B2  EFDD  F01B         	goto	u9120
  9578  0037B6                     u9121:
  9579  0037B6  EFDF  F01B         	goto	l7996
  9580  0037BA                     u9120:
  9581  0037BA  EFA2  F01B         	goto	l7976
  9582  0037BE                     l7996:
  9583                           
  9584                           ; BSR set to: 0
  9585  0037BE  90D8               	bcf	status,0,c
  9586  0037C0  3378               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9587  0037C2  3377               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9588  0037C4  3376               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9589  0037C6  3375               	rrcf	___fltol@f1& (0+255),f,b
  9590  0037C8                     
  9591                           ; BSR set to: 0
  9592  0037C8  3F7E               	incfsz	___fltol@exp1& (0+255),f,b
  9593  0037CA  EFDF  F01B         	goto	l7996
  9594  0037CE  EF01  F01C         	goto	l8010
  9595  0037D2                     l8000:
  9596                           
  9597                           ; BSR set to: 0
  9598  0037D2  0E1F               	movlw	31
  9599  0037D4  657E               	cpfsgt	___fltol@exp1& (0+255),b
  9600  0037D6  EFEF  F01B         	goto	u9131
  9601  0037DA  EFF1  F01B         	goto	u9130
  9602  0037DE                     u9131:
  9603  0037DE  EFF9  F01B         	goto	l8008
  9604  0037E2                     u9130:
  9605  0037E2  EFA2  F01B         	goto	l7976
  9606  0037E6                     l8006:
  9607                           
  9608                           ; BSR set to: 0
  9609  0037E6  90D8               	bcf	status,0,c
  9610  0037E8  3775               	rlcf	___fltol@f1& (0+255),f,b
  9611  0037EA  3776               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9612  0037EC  3777               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9613  0037EE  3778               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9614  0037F0  077E               	decf	___fltol@exp1& (0+255),f,b
  9615  0037F2                     l8008:
  9616                           
  9617                           ; BSR set to: 0
  9618  0037F2  517E               	movf	___fltol@exp1& (0+255),w,b
  9619  0037F4  A4D8               	btfss	status,2,c
  9620  0037F6  EFFF  F01B         	goto	u9141
  9621  0037FA  EF01  F01C         	goto	u9140
  9622  0037FE                     u9141:
  9623  0037FE  EFF3  F01B         	goto	l8006
  9624  003802                     u9140:
  9625  003802                     l8010:
  9626                           
  9627                           ; BSR set to: 0
  9628  003802  517D               	movf	___fltol@sign1& (0+255),w,b
  9629  003804  B4D8               	btfsc	status,2,c
  9630  003806  EF07  F01C         	goto	u9151
  9631  00380A  EF09  F01C         	goto	u9150
  9632  00380E                     u9151:
  9633  00380E  EF11  F01C         	goto	l8014
  9634  003812                     u9150:
  9635  003812                     
  9636                           ; BSR set to: 0
  9637  003812  1F78               	comf	(___fltol@f1+3)& (0+255),f,b
  9638  003814  1F77               	comf	(___fltol@f1+2)& (0+255),f,b
  9639  003816  1F76               	comf	(___fltol@f1+1)& (0+255),f,b
  9640  003818  6D75               	negf	___fltol@f1& (0+255),b
  9641  00381A  0E00               	movlw	0
  9642  00381C  2376               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9643  00381E  2377               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9644  003820  2378               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9645  003822                     l8014:
  9646                           
  9647                           ; BSR set to: 0
  9648  003822  C075  F075         	movff	___fltol@f1,?___fltol
  9649  003826  C076  F076         	movff	___fltol@f1+1,?___fltol+1
  9650  00382A  C077  F077         	movff	___fltol@f1+2,?___fltol+2
  9651  00382E  C078  F078         	movff	___fltol@f1+3,?___fltol+3
  9652  003832                     l1155:
  9653                           
  9654                           ; BSR set to: 0
  9655  003832  0012               	return		;funcret
  9656  003834                     __end_of___fltol:
  9657                           	opt callstack 0
  9658                           
  9659 ;; *************** function ___flmul *****************
  9660 ;; Defined at:
  9661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;  b               4    0[BANK0 ] long 
  9664 ;;  a               4    4[BANK0 ] long 
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;  prod            4   15[BANK0 ] struct .
  9667 ;;  grs             4   10[BANK0 ] unsigned long 
  9668 ;;  temp            2   19[BANK0 ] struct .
  9669 ;;  bexp            1   14[BANK0 ] unsigned char 
  9670 ;;  aexp            1    9[BANK0 ] unsigned char 
  9671 ;;  sign            1    8[BANK0 ] unsigned char 
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  4    0[BANK0 ] unsigned char 
  9674 ;; Registers used:
  9675 ;;		wreg, status,2, status,0, prodl, prodh
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9681 ;;      Params:         0       8       0       0       0       0       0       0       0
  9682 ;;      Locals:         0      13       0       0       0       0       0       0       0
  9683 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9684 ;;      Totals:         4      21       0       0       0       0       0       0       0
  9685 ;;Total ram usage:       25 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:    2
  9688 ;; This function calls:
  9689 ;;		Nothing
  9690 ;; This function is called by:
  9691 ;;		_pwmDuty
  9692 ;;		_efgtoa
  9693 ;;		_PID
  9694 ;;		_roundf
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text43
  9699  001E9C                     __ptext43:
  9700                           	opt callstack 0
  9701  001E9C                     ___flmul:
  9702                           	opt callstack 23
  9703  001E9C  0100               	movlb	0	; () banked
  9704  001E9E  5163               	movf	(___flmul@b+3)& (0+255),w,b
  9705  001EA0  0B80               	andlw	128
  9706  001EA2  6F68               	movwf	___flmul@sign& (0+255),b
  9707  001EA4  5163               	movf	(___flmul@b+3)& (0+255),w,b
  9708  001EA6  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  9709  001EA8  6F6E               	movwf	___flmul@bexp& (0+255),b
  9710  001EAA                     
  9711                           ; BSR set to: 0
  9712  001EAA  AF62               	btfss	(___flmul@b+2)& (0+255),7,b
  9713  001EAC  EF5A  F00F         	goto	u8691
  9714  001EB0  EF5C  F00F         	goto	u8690
  9715  001EB4                     u8691:
  9716  001EB4  EF5D  F00F         	goto	l7718
  9717  001EB8                     u8690:
  9718  001EB8                     
  9719                           ; BSR set to: 0
  9720  001EB8  816E               	bsf	___flmul@bexp& (0+255),0,b
  9721  001EBA                     l7718:
  9722                           
  9723                           ; BSR set to: 0
  9724  001EBA  516E               	movf	___flmul@bexp& (0+255),w,b
  9725  001EBC  B4D8               	btfsc	status,2,c
  9726  001EBE  EF63  F00F         	goto	u8701
  9727  001EC2  EF65  F00F         	goto	u8700
  9728  001EC6                     u8701:
  9729  001EC6  EF78  F00F         	goto	l7726
  9730  001ECA                     u8700:
  9731  001ECA                     
  9732                           ; BSR set to: 0
  9733  001ECA  296E               	incf	___flmul@bexp& (0+255),w,b
  9734  001ECC  A4D8               	btfss	status,2,c
  9735  001ECE  EF6B  F00F         	goto	u8711
  9736  001ED2  EF6D  F00F         	goto	u8710
  9737  001ED6                     u8711:
  9738  001ED6  EF75  F00F         	goto	l7724
  9739  001EDA                     u8710:
  9740  001EDA                     
  9741                           ; BSR set to: 0
  9742  001EDA  0E00               	movlw	0
  9743  001EDC  6F60               	movwf	___flmul@b& (0+255),b
  9744  001EDE  0E00               	movlw	0
  9745  001EE0  6F61               	movwf	(___flmul@b+1)& (0+255),b
  9746  001EE2  0E00               	movlw	0
  9747  001EE4  6F62               	movwf	(___flmul@b+2)& (0+255),b
  9748  001EE6  0E00               	movlw	0
  9749  001EE8  6F63               	movwf	(___flmul@b+3)& (0+255),b
  9750  001EEA                     l7724:
  9751                           
  9752                           ; BSR set to: 0
  9753  001EEA  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  9754  001EEC  EF80  F00F         	goto	l7728
  9755  001EF0                     l7726:
  9756                           
  9757                           ; BSR set to: 0
  9758  001EF0  0E00               	movlw	0
  9759  001EF2  6F60               	movwf	___flmul@b& (0+255),b
  9760  001EF4  0E00               	movlw	0
  9761  001EF6  6F61               	movwf	(___flmul@b+1)& (0+255),b
  9762  001EF8  0E00               	movlw	0
  9763  001EFA  6F62               	movwf	(___flmul@b+2)& (0+255),b
  9764  001EFC  0E00               	movlw	0
  9765  001EFE  6F63               	movwf	(___flmul@b+3)& (0+255),b
  9766  001F00                     l7728:
  9767                           
  9768                           ; BSR set to: 0
  9769  001F00  5167               	movf	(___flmul@a+3)& (0+255),w,b
  9770  001F02  0B80               	andlw	128
  9771  001F04  1B68               	xorwf	___flmul@sign& (0+255),f,b
  9772  001F06                     
  9773                           ; BSR set to: 0
  9774  001F06  5167               	movf	(___flmul@a+3)& (0+255),w,b
  9775  001F08  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  9776  001F0A  6F69               	movwf	___flmul@aexp& (0+255),b
  9777  001F0C                     
  9778                           ; BSR set to: 0
  9779  001F0C  AF66               	btfss	(___flmul@a+2)& (0+255),7,b
  9780  001F0E  EF8B  F00F         	goto	u8721
  9781  001F12  EF8D  F00F         	goto	u8720
  9782  001F16                     u8721:
  9783  001F16  EF8E  F00F         	goto	l7736
  9784  001F1A                     u8720:
  9785  001F1A                     
  9786                           ; BSR set to: 0
  9787  001F1A  8169               	bsf	___flmul@aexp& (0+255),0,b
  9788  001F1C                     l7736:
  9789                           
  9790                           ; BSR set to: 0
  9791  001F1C  5169               	movf	___flmul@aexp& (0+255),w,b
  9792  001F1E  B4D8               	btfsc	status,2,c
  9793  001F20  EF94  F00F         	goto	u8731
  9794  001F24  EF96  F00F         	goto	u8730
  9795  001F28                     u8731:
  9796  001F28  EFA9  F00F         	goto	l7744
  9797  001F2C                     u8730:
  9798  001F2C                     
  9799                           ; BSR set to: 0
  9800  001F2C  2969               	incf	___flmul@aexp& (0+255),w,b
  9801  001F2E  A4D8               	btfss	status,2,c
  9802  001F30  EF9C  F00F         	goto	u8741
  9803  001F34  EF9E  F00F         	goto	u8740
  9804  001F38                     u8741:
  9805  001F38  EFA6  F00F         	goto	l7742
  9806  001F3C                     u8740:
  9807  001F3C                     
  9808                           ; BSR set to: 0
  9809  001F3C  0E00               	movlw	0
  9810  001F3E  6F64               	movwf	___flmul@a& (0+255),b
  9811  001F40  0E00               	movlw	0
  9812  001F42  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9813  001F44  0E00               	movlw	0
  9814  001F46  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9815  001F48  0E00               	movlw	0
  9816  001F4A  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9817  001F4C                     l7742:
  9818                           
  9819                           ; BSR set to: 0
  9820  001F4C  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  9821  001F4E  EFB1  F00F         	goto	l1472
  9822  001F52                     l7744:
  9823                           
  9824                           ; BSR set to: 0
  9825  001F52  0E00               	movlw	0
  9826  001F54  6F64               	movwf	___flmul@a& (0+255),b
  9827  001F56  0E00               	movlw	0
  9828  001F58  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9829  001F5A  0E00               	movlw	0
  9830  001F5C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9831  001F5E  0E00               	movlw	0
  9832  001F60  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9833  001F62                     l1472:
  9834                           
  9835                           ; BSR set to: 0
  9836  001F62  5169               	movf	___flmul@aexp& (0+255),w,b
  9837  001F64  B4D8               	btfsc	status,2,c
  9838  001F66  EFB7  F00F         	goto	u8751
  9839  001F6A  EFB9  F00F         	goto	u8750
  9840  001F6E                     u8751:
  9841  001F6E  EFC1  F00F         	goto	l7748
  9842  001F72                     u8750:
  9843  001F72                     
  9844                           ; BSR set to: 0
  9845  001F72  516E               	movf	___flmul@bexp& (0+255),w,b
  9846  001F74  A4D8               	btfss	status,2,c
  9847  001F76  EFBF  F00F         	goto	u8761
  9848  001F7A  EFC1  F00F         	goto	u8760
  9849  001F7E                     u8761:
  9850  001F7E  EFCB  F00F         	goto	l7752
  9851  001F82                     u8760:
  9852  001F82                     l7748:
  9853                           
  9854                           ; BSR set to: 0
  9855  001F82  0E00               	movlw	0
  9856  001F84  6F60               	movwf	?___flmul& (0+255),b
  9857  001F86  0E00               	movlw	0
  9858  001F88  6F61               	movwf	(?___flmul+1)& (0+255),b
  9859  001F8A  0E00               	movlw	0
  9860  001F8C  6F62               	movwf	(?___flmul+2)& (0+255),b
  9861  001F8E  0E00               	movlw	0
  9862  001F90  6F63               	movwf	(?___flmul+3)& (0+255),b
  9863  001F92  EF63  F011         	goto	l1476
  9864  001F96                     l7752:
  9865                           
  9866                           ; BSR set to: 0
  9867  001F96  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9868  001F98  0360               	mulwf	___flmul@b& (0+255),b
  9869  001F9A  CFF3 F073          	movff	prodl,___flmul@temp
  9870  001F9E  CFF4 F074          	movff	prodh,___flmul@temp+1
  9871  001FA2                     
  9872                           ; BSR set to: 0
  9873  001FA2  5173               	movf	___flmul@temp& (0+255),w,b
  9874  001FA4  6F6A               	movwf	___flmul@grs& (0+255),b
  9875  001FA6  6B6B               	clrf	(___flmul@grs+1)& (0+255),b
  9876  001FA8  6B6C               	clrf	(___flmul@grs+2)& (0+255),b
  9877  001FAA  6B6D               	clrf	(___flmul@grs+3)& (0+255),b
  9878  001FAC                     
  9879                           ; BSR set to: 0
  9880  001FAC  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9881  001FAE  6F6F               	movwf	___flmul@prod& (0+255),b
  9882  001FB0  6B70               	clrf	(___flmul@prod+1)& (0+255),b
  9883  001FB2  6B71               	clrf	(___flmul@prod+2)& (0+255),b
  9884  001FB4  6B72               	clrf	(___flmul@prod+3)& (0+255),b
  9885  001FB6  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9886  001FB8  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9887  001FBA  CFF3 F073          	movff	prodl,___flmul@temp
  9888  001FBE  CFF4 F074          	movff	prodh,___flmul@temp+1
  9889  001FC2                     
  9890                           ; BSR set to: 0
  9891  001FC2  5173               	movf	___flmul@temp& (0+255),w,b
  9892  001FC4  276A               	addwf	___flmul@grs& (0+255),f,b
  9893  001FC6  0E00               	movlw	0
  9894  001FC8  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9895  001FCA  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9896  001FCC  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9897  001FCE                     
  9898                           ; BSR set to: 0
  9899  001FCE  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9900  001FD0  276F               	addwf	___flmul@prod& (0+255),f,b
  9901  001FD2  0E00               	movlw	0
  9902  001FD4  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9903  001FD6  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9904  001FD8  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9905  001FDA  5164               	movf	___flmul@a& (0+255),w,b
  9906  001FDC  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9907  001FDE  CFF3 F073          	movff	prodl,___flmul@temp
  9908  001FE2  CFF4 F074          	movff	prodh,___flmul@temp+1
  9909  001FE6                     
  9910                           ; BSR set to: 0
  9911  001FE6  5173               	movf	___flmul@temp& (0+255),w,b
  9912  001FE8  276A               	addwf	___flmul@grs& (0+255),f,b
  9913  001FEA  0E00               	movlw	0
  9914  001FEC  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9915  001FEE  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9916  001FF0  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9917  001FF2                     
  9918                           ; BSR set to: 0
  9919  001FF2  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9920  001FF4  276F               	addwf	___flmul@prod& (0+255),f,b
  9921  001FF6  0E00               	movlw	0
  9922  001FF8  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9923  001FFA  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9924  001FFC  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9925  001FFE                     
  9926                           ; BSR set to: 0
  9927  001FFE  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
  9928  002002  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
  9929  002006  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
  9930  00200A  6B6A               	clrf	___flmul@grs& (0+255),b
  9931  00200C                     
  9932                           ; BSR set to: 0
  9933  00200C  5164               	movf	___flmul@a& (0+255),w,b
  9934  00200E  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9935  002010  CFF3 F073          	movff	prodl,___flmul@temp
  9936  002014  CFF4 F074          	movff	prodh,___flmul@temp+1
  9937  002018                     
  9938                           ; BSR set to: 0
  9939  002018  5173               	movf	___flmul@temp& (0+255),w,b
  9940  00201A  276A               	addwf	___flmul@grs& (0+255),f,b
  9941  00201C  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9942  00201E  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9943  002020  0E00               	movlw	0
  9944  002022  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9945  002024  0E00               	movlw	0
  9946  002026  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9947  002028                     
  9948                           ; BSR set to: 0
  9949  002028  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9950  00202A  0360               	mulwf	___flmul@b& (0+255),b
  9951  00202C  CFF3 F073          	movff	prodl,___flmul@temp
  9952  002030  CFF4 F074          	movff	prodh,___flmul@temp+1
  9953  002034                     
  9954                           ; BSR set to: 0
  9955  002034  5173               	movf	___flmul@temp& (0+255),w,b
  9956  002036  276A               	addwf	___flmul@grs& (0+255),f,b
  9957  002038  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9958  00203A  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9959  00203C  0E00               	movlw	0
  9960  00203E  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9961  002040  0E00               	movlw	0
  9962  002042  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9963  002044                     
  9964                           ; BSR set to: 0
  9965  002044  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
  9966  002048  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
  9967  00204C  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
  9968  002050  6B6A               	clrf	___flmul@grs& (0+255),b
  9969  002052  5164               	movf	___flmul@a& (0+255),w,b
  9970  002054  0360               	mulwf	___flmul@b& (0+255),b
  9971  002056  CFF3 F073          	movff	prodl,___flmul@temp
  9972  00205A  CFF4 F074          	movff	prodh,___flmul@temp+1
  9973  00205E                     
  9974                           ; BSR set to: 0
  9975  00205E  5173               	movf	___flmul@temp& (0+255),w,b
  9976  002060  276A               	addwf	___flmul@grs& (0+255),f,b
  9977  002062  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9978  002064  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9979  002066  0E00               	movlw	0
  9980  002068  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9981  00206A  0E00               	movlw	0
  9982  00206C  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9983  00206E                     
  9984                           ; BSR set to: 0
  9985  00206E  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9986  002070  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9987  002072  CFF3 F073          	movff	prodl,___flmul@temp
  9988  002076  CFF4 F074          	movff	prodh,___flmul@temp+1
  9989  00207A  5173               	movf	___flmul@temp& (0+255),w,b
  9990  00207C  276F               	addwf	___flmul@prod& (0+255),f,b
  9991  00207E  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9992  002080  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9993  002082  0E00               	movlw	0
  9994  002084  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9995  002086  0E00               	movlw	0
  9996  002088  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9997  00208A                     
  9998                           ; BSR set to: 0
  9999  00208A  5165               	movf	(___flmul@a+1)& (0+255),w,b
 10000  00208C  0362               	mulwf	(___flmul@b+2)& (0+255),b
 10001  00208E  CFF3 F073          	movff	prodl,___flmul@temp
 10002  002092  CFF4 F074          	movff	prodh,___flmul@temp+1
 10003  002096                     
 10004                           ; BSR set to: 0
 10005  002096  5173               	movf	___flmul@temp& (0+255),w,b
 10006  002098  276F               	addwf	___flmul@prod& (0+255),f,b
 10007  00209A  5174               	movf	(___flmul@temp+1)& (0+255),w,b
 10008  00209C  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10009  00209E  0E00               	movlw	0
 10010  0020A0  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10011  0020A2  0E00               	movlw	0
 10012  0020A4  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10013  0020A6  5166               	movf	(___flmul@a+2)& (0+255),w,b
 10014  0020A8  0362               	mulwf	(___flmul@b+2)& (0+255),b
 10015  0020AA  CFF3 F073          	movff	prodl,___flmul@temp
 10016  0020AE  CFF4 F074          	movff	prodh,___flmul@temp+1
 10017  0020B2                     
 10018                           ; BSR set to: 0
 10019  0020B2  5173               	movf	___flmul@temp& (0+255),w,b
 10020  0020B4  6E51               	movwf	??___flmul^0,c
 10021  0020B6  5174               	movf	(___flmul@temp+1)& (0+255),w,b
 10022  0020B8  6E52               	movwf	(??___flmul+1)^0,c
 10023  0020BA  6A53               	clrf	(??___flmul+2)^0,c
 10024  0020BC  6A54               	clrf	(??___flmul+3)^0,c
 10025  0020BE  C053  F054         	movff	??___flmul+2,??___flmul+3
 10026  0020C2  C052  F053         	movff	??___flmul+1,??___flmul+2
 10027  0020C6  C051  F052         	movff	??___flmul,??___flmul+1
 10028  0020CA  6A51               	clrf	??___flmul^0,c
 10029  0020CC  5051               	movf	??___flmul^0,w,c
 10030  0020CE  276F               	addwf	___flmul@prod& (0+255),f,b
 10031  0020D0  5052               	movf	(??___flmul+1)^0,w,c
 10032  0020D2  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10033  0020D4  5053               	movf	(??___flmul+2)^0,w,c
 10034  0020D6  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10035  0020D8  5054               	movf	(??___flmul+3)^0,w,c
 10036  0020DA  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10037  0020DC                     
 10038                           ; BSR set to: 0
 10039  0020DC  C06A  F051         	movff	___flmul@grs,??___flmul
 10040  0020E0  C06B  F052         	movff	___flmul@grs+1,??___flmul+1
 10041  0020E4  C06C  F053         	movff	___flmul@grs+2,??___flmul+2
 10042  0020E8  C06D  F054         	movff	___flmul@grs+3,??___flmul+3
 10043  0020EC  0E19               	movlw	25
 10044  0020EE  EF7E  F010         	goto	u8770
 10045  0020F2                     u8775:
 10046  0020F2  90D8               	bcf	status,0,c
 10047  0020F4  3254               	rrcf	(??___flmul+3)^0,f,c
 10048  0020F6  3253               	rrcf	(??___flmul+2)^0,f,c
 10049  0020F8  3252               	rrcf	(??___flmul+1)^0,f,c
 10050  0020FA  3251               	rrcf	??___flmul^0,f,c
 10051  0020FC                     u8770:
 10052  0020FC  2EE8               	decfsz	wreg,f,c
 10053  0020FE  EF79  F010         	goto	u8775
 10054  002102  5051               	movf	??___flmul^0,w,c
 10055  002104  276F               	addwf	___flmul@prod& (0+255),f,b
 10056  002106  5052               	movf	(??___flmul+1)^0,w,c
 10057  002108  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10058  00210A  5053               	movf	(??___flmul+2)^0,w,c
 10059  00210C  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10060  00210E  5054               	movf	(??___flmul+3)^0,w,c
 10061  002110  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10062  002112                     
 10063                           ; BSR set to: 0
 10064  002112  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
 10065  002116  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
 10066  00211A  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
 10067  00211E  6B6A               	clrf	___flmul@grs& (0+255),b
 10068  002120                     
 10069                           ; BSR set to: 0
 10070  002120  5169               	movf	___flmul@aexp& (0+255),w,b
 10071  002122  C06E  F051         	movff	___flmul@bexp,??___flmul
 10072  002126  6A52               	clrf	(??___flmul+1)^0,c
 10073  002128  2651               	addwf	??___flmul^0,f,c
 10074  00212A  0E00               	movlw	0
 10075  00212C  2252               	addwfc	(??___flmul+1)^0,f,c
 10076  00212E  0E82               	movlw	130
 10077  002130  2451               	addwf	??___flmul^0,w,c
 10078  002132  6F73               	movwf	___flmul@temp& (0+255),b
 10079  002134  0EFF               	movlw	255
 10080  002136  2052               	addwfc	(??___flmul+1)^0,w,c
 10081  002138  6F74               	movwf	(___flmul@temp+1)& (0+255),b
 10082  00213A  EFB4  F010         	goto	l7800
 10083  00213E                     l7794:
 10084                           
 10085                           ; BSR set to: 0
 10086  00213E  90D8               	bcf	status,0,c
 10087  002140  376F               	rlcf	___flmul@prod& (0+255),f,b
 10088  002142  3770               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10089  002144  3771               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10090  002146  3772               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10091  002148                     
 10092                           ; BSR set to: 0
 10093  002148  AF6D               	btfss	(___flmul@grs+3)& (0+255),7,b
 10094  00214A  EFA9  F010         	goto	u8781
 10095  00214E  EFAB  F010         	goto	u8780
 10096  002152                     u8781:
 10097  002152  EFAC  F010         	goto	l1479
 10098  002156                     u8780:
 10099  002156                     
 10100                           ; BSR set to: 0
 10101  002156  816F               	bsf	___flmul@prod& (0+255),0,b
 10102  002158                     l1479:
 10103                           
 10104                           ; BSR set to: 0
 10105  002158  90D8               	bcf	status,0,c
 10106  00215A  376A               	rlcf	___flmul@grs& (0+255),f,b
 10107  00215C  376B               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10108  00215E  376C               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10109  002160  376D               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10110  002162  0773               	decf	___flmul@temp& (0+255),f,b
 10111  002164  A0D8               	btfss	status,0,c
 10112  002166  0774               	decf	(___flmul@temp+1)& (0+255),f,b
 10113  002168                     l7800:
 10114                           
 10115                           ; BSR set to: 0
 10116  002168  AF71               	btfss	(___flmul@prod+2)& (0+255),7,b
 10117  00216A  EFB9  F010         	goto	u8791
 10118  00216E  EFBB  F010         	goto	u8790
 10119  002172                     u8791:
 10120  002172  EF9F  F010         	goto	l7794
 10121  002176                     u8790:
 10122  002176                     
 10123                           ; BSR set to: 0
 10124  002176  0E00               	movlw	0
 10125  002178  6F69               	movwf	___flmul@aexp& (0+255),b
 10126  00217A                     
 10127                           ; BSR set to: 0
 10128  00217A  AF6D               	btfss	(___flmul@grs+3)& (0+255),7,b
 10129  00217C  EFC2  F010         	goto	u8801
 10130  002180  EFC4  F010         	goto	u8800
 10131  002184                     u8801:
 10132  002184  EFE8  F010         	goto	l1481
 10133  002188                     u8800:
 10134  002188                     
 10135                           ; BSR set to: 0
 10136  002188  0EFF               	movlw	255
 10137  00218A  156A               	andwf	___flmul@grs& (0+255),w,b
 10138  00218C  6E51               	movwf	??___flmul^0,c
 10139  00218E  0EFF               	movlw	255
 10140  002190  156B               	andwf	(___flmul@grs+1)& (0+255),w,b
 10141  002192  6E52               	movwf	(??___flmul+1)^0,c
 10142  002194  0EFF               	movlw	255
 10143  002196  156C               	andwf	(___flmul@grs+2)& (0+255),w,b
 10144  002198  6E53               	movwf	(??___flmul+2)^0,c
 10145  00219A  0E7F               	movlw	127
 10146  00219C  156D               	andwf	(___flmul@grs+3)& (0+255),w,b
 10147  00219E  6E54               	movwf	(??___flmul+3)^0,c
 10148  0021A0  5051               	movf	??___flmul^0,w,c
 10149  0021A2  1052               	iorwf	(??___flmul+1)^0,w,c
 10150  0021A4  1053               	iorwf	(??___flmul+2)^0,w,c
 10151  0021A6  1054               	iorwf	(??___flmul+3)^0,w,c
 10152  0021A8  B4D8               	btfsc	status,2,c
 10153  0021AA  EFD9  F010         	goto	u8811
 10154  0021AE  EFDB  F010         	goto	u8810
 10155  0021B2                     u8811:
 10156  0021B2  EFDF  F010         	goto	l1482
 10157  0021B6                     u8810:
 10158  0021B6                     l7808:
 10159                           
 10160                           ; BSR set to: 0
 10161  0021B6  0E01               	movlw	1
 10162  0021B8  6F69               	movwf	___flmul@aexp& (0+255),b
 10163  0021BA  EFE8  F010         	goto	l1481
 10164  0021BE                     l1482:
 10165                           
 10166                           ; BSR set to: 0
 10167  0021BE  A16F               	btfss	___flmul@prod& (0+255),0,b
 10168  0021C0  EFE4  F010         	goto	u8821
 10169  0021C4  EFE6  F010         	goto	u8820
 10170  0021C8                     u8821:
 10171  0021C8  EFE8  F010         	goto	l1481
 10172  0021CC                     u8820:
 10173  0021CC  EFDB  F010         	goto	l7808
 10174  0021D0                     l1481:
 10175                           
 10176                           ; BSR set to: 0
 10177  0021D0  5169               	movf	___flmul@aexp& (0+255),w,b
 10178  0021D2  B4D8               	btfsc	status,2,c
 10179  0021D4  EFEE  F010         	goto	u8831
 10180  0021D8  EFF0  F010         	goto	u8830
 10181  0021DC                     u8831:
 10182  0021DC  EF14  F011         	goto	l7820
 10183  0021E0                     u8830:
 10184  0021E0                     
 10185                           ; BSR set to: 0
 10186  0021E0  0E01               	movlw	1
 10187  0021E2  276F               	addwf	___flmul@prod& (0+255),f,b
 10188  0021E4  0E00               	movlw	0
 10189  0021E6  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10190  0021E8  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10191  0021EA  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10192  0021EC                     
 10193                           ; BSR set to: 0
 10194  0021EC  A172               	btfss	(___flmul@prod+3)& (0+255),0,b
 10195  0021EE  EFFB  F010         	goto	u8841
 10196  0021F2  EFFD  F010         	goto	u8840
 10197  0021F6                     u8841:
 10198  0021F6  EF14  F011         	goto	l7820
 10199  0021FA                     u8840:
 10200  0021FA                     
 10201                           ; BSR set to: 0
 10202  0021FA  C06F  F051         	movff	___flmul@prod,??___flmul
 10203  0021FE  C070  F052         	movff	___flmul@prod+1,??___flmul+1
 10204  002202  C071  F053         	movff	___flmul@prod+2,??___flmul+2
 10205  002206  C072  F054         	movff	___flmul@prod+3,??___flmul+3
 10206  00220A  3454               	rlcf	(??___flmul+3)^0,w,c
 10207  00220C  3254               	rrcf	(??___flmul+3)^0,f,c
 10208  00220E  3253               	rrcf	(??___flmul+2)^0,f,c
 10209  002210  3252               	rrcf	(??___flmul+1)^0,f,c
 10210  002212  3251               	rrcf	??___flmul^0,f,c
 10211  002214  C051  F06F         	movff	??___flmul,___flmul@prod
 10212  002218  C052  F070         	movff	??___flmul+1,___flmul@prod+1
 10213  00221C  C053  F071         	movff	??___flmul+2,___flmul@prod+2
 10214  002220  C054  F072         	movff	??___flmul+3,___flmul@prod+3
 10215  002224                     
 10216                           ; BSR set to: 0
 10217  002224  4B73               	infsnz	___flmul@temp& (0+255),f,b
 10218  002226  2B74               	incf	(___flmul@temp+1)& (0+255),f,b
 10219  002228                     l7820:
 10220                           
 10221                           ; BSR set to: 0
 10222  002228  BF74               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10223  00222A  EF1F  F011         	goto	u8851
 10224  00222E  5174               	movf	(___flmul@temp+1)& (0+255),w,b
 10225  002230  E108               	bnz	u8850
 10226  002232  2973               	incf	___flmul@temp& (0+255),w,b
 10227  002234  A0D8               	btfss	status,0,c
 10228  002236  EF1F  F011         	goto	u8851
 10229  00223A  EF21  F011         	goto	u8850
 10230  00223E                     u8851:
 10231  00223E  EF2B  F011         	goto	l7824
 10232  002242                     u8850:
 10233  002242                     
 10234                           ; BSR set to: 0
 10235  002242  0E00               	movlw	0
 10236  002244  6F6F               	movwf	___flmul@prod& (0+255),b
 10237  002246  0E00               	movlw	0
 10238  002248  6F70               	movwf	(___flmul@prod+1)& (0+255),b
 10239  00224A  0E80               	movlw	128
 10240  00224C  6F71               	movwf	(___flmul@prod+2)& (0+255),b
 10241  00224E  0E7F               	movlw	127
 10242  002250  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10243  002252  EF59  F011         	goto	l7836
 10244  002256                     l7824:
 10245                           
 10246                           ; BSR set to: 0
 10247  002256  BF74               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10248  002258  EF38  F011         	goto	u8860
 10249  00225C  5174               	movf	(___flmul@temp+1)& (0+255),w,b
 10250  00225E  E106               	bnz	u8861
 10251  002260  0573               	decf	___flmul@temp& (0+255),w,b
 10252  002262  B0D8               	btfsc	status,0,c
 10253  002264  EF36  F011         	goto	u8861
 10254  002268  EF38  F011         	goto	u8860
 10255  00226C                     u8861:
 10256  00226C  EF44  F011         	goto	l1489
 10257  002270                     u8860:
 10258  002270                     
 10259                           ; BSR set to: 0
 10260  002270  0E00               	movlw	0
 10261  002272  6F6F               	movwf	___flmul@prod& (0+255),b
 10262  002274  0E00               	movlw	0
 10263  002276  6F70               	movwf	(___flmul@prod+1)& (0+255),b
 10264  002278  0E00               	movlw	0
 10265  00227A  6F71               	movwf	(___flmul@prod+2)& (0+255),b
 10266  00227C  0E00               	movlw	0
 10267  00227E  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10268  002280  0E00               	movlw	0
 10269  002282  6F68               	movwf	___flmul@sign& (0+255),b
 10270  002284  EF59  F011         	goto	l7836
 10271  002288                     l1489:
 10272                           
 10273                           ; BSR set to: 0
 10274  002288  C073  F06E         	movff	___flmul@temp,___flmul@bexp
 10275  00228C                     
 10276                           ; BSR set to: 0
 10277  00228C  0EFF               	movlw	255
 10278  00228E  176F               	andwf	___flmul@prod& (0+255),f,b
 10279  002290  0EFF               	movlw	255
 10280  002292  1770               	andwf	(___flmul@prod+1)& (0+255),f,b
 10281  002294  0E7F               	movlw	127
 10282  002296  1771               	andwf	(___flmul@prod+2)& (0+255),f,b
 10283  002298  0E00               	movlw	0
 10284  00229A  1772               	andwf	(___flmul@prod+3)& (0+255),f,b
 10285  00229C                     
 10286                           ; BSR set to: 0
 10287  00229C  A16E               	btfss	___flmul@bexp& (0+255),0,b
 10288  00229E  EF53  F011         	goto	u8871
 10289  0022A2  EF55  F011         	goto	u8870
 10290  0022A6                     u8871:
 10291  0022A6  EF56  F011         	goto	l7834
 10292  0022AA                     u8870:
 10293  0022AA                     
 10294                           ; BSR set to: 0
 10295  0022AA  8F71               	bsf	(___flmul@prod+2)& (0+255),7,b
 10296  0022AC                     l7834:
 10297                           
 10298                           ; BSR set to: 0
 10299  0022AC  90D8               	bcf	status,0,c
 10300  0022AE  316E               	rrcf	___flmul@bexp& (0+255),w,b
 10301  0022B0  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10302  0022B2                     l7836:
 10303                           
 10304                           ; BSR set to: 0
 10305  0022B2  5168               	movf	___flmul@sign& (0+255),w,b
 10306  0022B4  1372               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10307  0022B6                     
 10308                           ; BSR set to: 0
 10309  0022B6  C06F  F060         	movff	___flmul@prod,?___flmul
 10310  0022BA  C070  F061         	movff	___flmul@prod+1,?___flmul+1
 10311  0022BE  C071  F062         	movff	___flmul@prod+2,?___flmul+2
 10312  0022C2  C072  F063         	movff	___flmul@prod+3,?___flmul+3
 10313  0022C6                     l1476:
 10314                           
 10315                           ; BSR set to: 0
 10316  0022C6  0012               	return		;funcret
 10317  0022C8                     __end_of___flmul:
 10318                           	opt callstack 0
 10319                           
 10320 ;; *************** function ___fldiv *****************
 10321 ;; Defined at:
 10322 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;  b               4   55[COMRAM] unsigned char 
 10325 ;;  a               4   59[COMRAM] unsigned char 
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  grs             4   74[COMRAM] unsigned long 
 10328 ;;  rem             4   67[COMRAM] unsigned long 
 10329 ;;  new_exp         2   72[COMRAM] short 
 10330 ;;  aexp            1   79[COMRAM] unsigned char 
 10331 ;;  bexp            1   78[COMRAM] unsigned char 
 10332 ;;  sign            1   71[COMRAM] unsigned char 
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  4   55[COMRAM] unsigned char 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10342 ;;      Params:         8       0       0       0       0       0       0       0       0
 10343 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10344 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10345 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10346 ;;Total ram usage:       25 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:    2
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_pwmDuty
 10353 ;;		_leerSensores
 10354 ;;		_efgtoa
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           	psect	text44
 10359  0022C8                     __ptext44:
 10360                           	opt callstack 0
 10361  0022C8                     ___fldiv:
 10362                           	opt callstack 23
 10363  0022C8  503B               	movf	(___fldiv@b+3)^0,w,c
 10364  0022CA  0B80               	andlw	128
 10365  0022CC  6E48               	movwf	___fldiv@sign^0,c
 10366  0022CE  503B               	movf	(___fldiv@b+3)^0,w,c
 10367  0022D0  243B               	addwf	(___fldiv@b+3)^0,w,c
 10368  0022D2  6E4F               	movwf	___fldiv@bexp^0,c
 10369  0022D4  AE3A               	btfss	(___fldiv@b+2)^0,7,c
 10370  0022D6  EF6F  F011         	goto	u8461
 10371  0022DA  EF71  F011         	goto	u8460
 10372  0022DE                     u8461:
 10373  0022DE  EF72  F011         	goto	l7580
 10374  0022E2                     u8460:
 10375  0022E2  804F               	bsf	___fldiv@bexp^0,0,c
 10376  0022E4                     l7580:
 10377  0022E4  504F               	movf	___fldiv@bexp^0,w,c
 10378  0022E6  B4D8               	btfsc	status,2,c
 10379  0022E8  EF78  F011         	goto	u8471
 10380  0022EC  EF7A  F011         	goto	u8470
 10381  0022F0                     u8471:
 10382  0022F0  EF8F  F011         	goto	l7590
 10383  0022F4                     u8470:
 10384  0022F4  284F               	incf	___fldiv@bexp^0,w,c
 10385  0022F6  A4D8               	btfss	status,2,c
 10386  0022F8  EF80  F011         	goto	u8481
 10387  0022FC  EF82  F011         	goto	u8480
 10388  002300                     u8481:
 10389  002300  EF8A  F011         	goto	l7586
 10390  002304                     u8480:
 10391  002304  0E00               	movlw	0
 10392  002306  6E38               	movwf	___fldiv@b^0,c
 10393  002308  0E00               	movlw	0
 10394  00230A  6E39               	movwf	(___fldiv@b+1)^0,c
 10395  00230C  0E00               	movlw	0
 10396  00230E  6E3A               	movwf	(___fldiv@b+2)^0,c
 10397  002310  0E00               	movlw	0
 10398  002312  6E3B               	movwf	(___fldiv@b+3)^0,c
 10399  002314                     l7586:
 10400  002314  8E3A               	bsf	(___fldiv@b+2)^0,7,c
 10401  002316  0E00               	movlw	0
 10402  002318  6E3B               	movwf	(___fldiv@b+3)^0,c
 10403  00231A  EF97  F011         	goto	l7592
 10404  00231E                     l7590:
 10405  00231E  0E00               	movlw	0
 10406  002320  6E38               	movwf	___fldiv@b^0,c
 10407  002322  0E00               	movlw	0
 10408  002324  6E39               	movwf	(___fldiv@b+1)^0,c
 10409  002326  0E00               	movlw	0
 10410  002328  6E3A               	movwf	(___fldiv@b+2)^0,c
 10411  00232A  0E00               	movlw	0
 10412  00232C  6E3B               	movwf	(___fldiv@b+3)^0,c
 10413  00232E                     l7592:
 10414  00232E  503F               	movf	(___fldiv@a+3)^0,w,c
 10415  002330  0B80               	andlw	128
 10416  002332  1A48               	xorwf	___fldiv@sign^0,f,c
 10417  002334  503F               	movf	(___fldiv@a+3)^0,w,c
 10418  002336  243F               	addwf	(___fldiv@a+3)^0,w,c
 10419  002338  6E50               	movwf	___fldiv@aexp^0,c
 10420  00233A  AE3E               	btfss	(___fldiv@a+2)^0,7,c
 10421  00233C  EFA2  F011         	goto	u8491
 10422  002340  EFA4  F011         	goto	u8490
 10423  002344                     u8491:
 10424  002344  EFA5  F011         	goto	l7600
 10425  002348                     u8490:
 10426  002348  8050               	bsf	___fldiv@aexp^0,0,c
 10427  00234A                     l7600:
 10428  00234A  5050               	movf	___fldiv@aexp^0,w,c
 10429  00234C  B4D8               	btfsc	status,2,c
 10430  00234E  EFAB  F011         	goto	u8501
 10431  002352  EFAD  F011         	goto	u8500
 10432  002356                     u8501:
 10433  002356  EFC2  F011         	goto	l7610
 10434  00235A                     u8500:
 10435  00235A  2850               	incf	___fldiv@aexp^0,w,c
 10436  00235C  A4D8               	btfss	status,2,c
 10437  00235E  EFB3  F011         	goto	u8511
 10438  002362  EFB5  F011         	goto	u8510
 10439  002366                     u8511:
 10440  002366  EFBD  F011         	goto	l7606
 10441  00236A                     u8510:
 10442  00236A  0E00               	movlw	0
 10443  00236C  6E3C               	movwf	___fldiv@a^0,c
 10444  00236E  0E00               	movlw	0
 10445  002370  6E3D               	movwf	(___fldiv@a+1)^0,c
 10446  002372  0E00               	movlw	0
 10447  002374  6E3E               	movwf	(___fldiv@a+2)^0,c
 10448  002376  0E00               	movlw	0
 10449  002378  6E3F               	movwf	(___fldiv@a+3)^0,c
 10450  00237A                     l7606:
 10451  00237A  8E3E               	bsf	(___fldiv@a+2)^0,7,c
 10452  00237C  0E00               	movlw	0
 10453  00237E  6E3F               	movwf	(___fldiv@a+3)^0,c
 10454  002380  EFCA  F011         	goto	l7612
 10455  002384                     l7610:
 10456  002384  0E00               	movlw	0
 10457  002386  6E3C               	movwf	___fldiv@a^0,c
 10458  002388  0E00               	movlw	0
 10459  00238A  6E3D               	movwf	(___fldiv@a+1)^0,c
 10460  00238C  0E00               	movlw	0
 10461  00238E  6E3E               	movwf	(___fldiv@a+2)^0,c
 10462  002390  0E00               	movlw	0
 10463  002392  6E3F               	movwf	(___fldiv@a+3)^0,c
 10464  002394                     l7612:
 10465  002394  503C               	movf	___fldiv@a^0,w,c
 10466  002396  103D               	iorwf	(___fldiv@a+1)^0,w,c
 10467  002398  103E               	iorwf	(___fldiv@a+2)^0,w,c
 10468  00239A  103F               	iorwf	(___fldiv@a+3)^0,w,c
 10469  00239C  A4D8               	btfss	status,2,c
 10470  00239E  EFD3  F011         	goto	u8521
 10471  0023A2  EFD5  F011         	goto	u8520
 10472  0023A6                     u8521:
 10473  0023A6  EFED  F011         	goto	l7624
 10474  0023AA                     u8520:
 10475  0023AA  0E00               	movlw	0
 10476  0023AC  6E38               	movwf	___fldiv@b^0,c
 10477  0023AE  0E00               	movlw	0
 10478  0023B0  6E39               	movwf	(___fldiv@b+1)^0,c
 10479  0023B2  0E00               	movlw	0
 10480  0023B4  6E3A               	movwf	(___fldiv@b+2)^0,c
 10481  0023B6  0E00               	movlw	0
 10482  0023B8  6E3B               	movwf	(___fldiv@b+3)^0,c
 10483  0023BA  0E80               	movlw	128
 10484  0023BC  123A               	iorwf	(___fldiv@b+2)^0,f,c
 10485  0023BE  0E7F               	movlw	127
 10486  0023C0  123B               	iorwf	(___fldiv@b+3)^0,f,c
 10487  0023C2                     l7618:
 10488  0023C2  5048               	movf	___fldiv@sign^0,w,c
 10489  0023C4  123B               	iorwf	(___fldiv@b+3)^0,f,c
 10490  0023C6  C038  F038         	movff	___fldiv@b,?___fldiv
 10491  0023CA  C039  F039         	movff	___fldiv@b+1,?___fldiv+1
 10492  0023CE  C03A  F03A         	movff	___fldiv@b+2,?___fldiv+2
 10493  0023D2  C03B  F03B         	movff	___fldiv@b+3,?___fldiv+3
 10494  0023D6  EF30  F013         	goto	l1440
 10495  0023DA                     l7624:
 10496  0023DA  504F               	movf	___fldiv@bexp^0,w,c
 10497  0023DC  A4D8               	btfss	status,2,c
 10498  0023DE  EFF3  F011         	goto	u8531
 10499  0023E2  EFF5  F011         	goto	u8530
 10500  0023E6                     u8531:
 10501  0023E6  EFFF  F011         	goto	l7632
 10502  0023EA                     u8530:
 10503  0023EA  0E00               	movlw	0
 10504  0023EC  6E38               	movwf	?___fldiv^0,c
 10505  0023EE  0E00               	movlw	0
 10506  0023F0  6E39               	movwf	(?___fldiv+1)^0,c
 10507  0023F2  0E00               	movlw	0
 10508  0023F4  6E3A               	movwf	(?___fldiv+2)^0,c
 10509  0023F6  0E00               	movlw	0
 10510  0023F8  6E3B               	movwf	(?___fldiv+3)^0,c
 10511  0023FA  EF30  F013         	goto	l1440
 10512  0023FE                     l7632:
 10513  0023FE  5050               	movf	___fldiv@aexp^0,w,c
 10514  002400  C04F  F040         	movff	___fldiv@bexp,??___fldiv
 10515  002404  6A41               	clrf	(??___fldiv+1)^0,c
 10516  002406  5E40               	subwf	??___fldiv^0,f,c
 10517  002408  0E00               	movlw	0
 10518  00240A  5A41               	subwfb	(??___fldiv+1)^0,f,c
 10519  00240C  0E7F               	movlw	127
 10520  00240E  2440               	addwf	??___fldiv^0,w,c
 10521  002410  6E49               	movwf	___fldiv@new_exp^0,c
 10522  002412  0E00               	movlw	0
 10523  002414  2041               	addwfc	(??___fldiv+1)^0,w,c
 10524  002416  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10525  002418  C038  F044         	movff	___fldiv@b,___fldiv@rem
 10526  00241C  C039  F045         	movff	___fldiv@b+1,___fldiv@rem+1
 10527  002420  C03A  F046         	movff	___fldiv@b+2,___fldiv@rem+2
 10528  002424  C03B  F047         	movff	___fldiv@b+3,___fldiv@rem+3
 10529  002428  0E00               	movlw	0
 10530  00242A  6E38               	movwf	___fldiv@b^0,c
 10531  00242C  0E00               	movlw	0
 10532  00242E  6E39               	movwf	(___fldiv@b+1)^0,c
 10533  002430  0E00               	movlw	0
 10534  002432  6E3A               	movwf	(___fldiv@b+2)^0,c
 10535  002434  0E00               	movlw	0
 10536  002436  6E3B               	movwf	(___fldiv@b+3)^0,c
 10537  002438  0E00               	movlw	0
 10538  00243A  6E4B               	movwf	___fldiv@grs^0,c
 10539  00243C  0E00               	movlw	0
 10540  00243E  6E4C               	movwf	(___fldiv@grs+1)^0,c
 10541  002440  0E00               	movlw	0
 10542  002442  6E4D               	movwf	(___fldiv@grs+2)^0,c
 10543  002444  0E00               	movlw	0
 10544  002446  6E4E               	movwf	(___fldiv@grs+3)^0,c
 10545  002448  0E00               	movlw	0
 10546  00244A  6E50               	movwf	___fldiv@aexp^0,c
 10547  00244C  EF60  F012         	goto	l1442
 10548  002450                     l7642:
 10549  002450  5050               	movf	___fldiv@aexp^0,w,c
 10550  002452  B4D8               	btfsc	status,2,c
 10551  002454  EF2E  F012         	goto	u8541
 10552  002458  EF30  F012         	goto	u8540
 10553  00245C                     u8541:
 10554  00245C  EF47  F012         	goto	l7650
 10555  002460                     u8540:
 10556  002460  90D8               	bcf	status,0,c
 10557  002462  3644               	rlcf	___fldiv@rem^0,f,c
 10558  002464  3645               	rlcf	(___fldiv@rem+1)^0,f,c
 10559  002466  3646               	rlcf	(___fldiv@rem+2)^0,f,c
 10560  002468  3647               	rlcf	(___fldiv@rem+3)^0,f,c
 10561  00246A  90D8               	bcf	status,0,c
 10562  00246C  3638               	rlcf	___fldiv@b^0,f,c
 10563  00246E  3639               	rlcf	(___fldiv@b+1)^0,f,c
 10564  002470  363A               	rlcf	(___fldiv@b+2)^0,f,c
 10565  002472  363B               	rlcf	(___fldiv@b+3)^0,f,c
 10566  002474  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10567  002476  EF3F  F012         	goto	u8551
 10568  00247A  EF41  F012         	goto	u8550
 10569  00247E                     u8551:
 10570  00247E  EF42  F012         	goto	l1445
 10571  002482                     u8550:
 10572  002482  8038               	bsf	___fldiv@b^0,0,c
 10573  002484                     l1445:
 10574  002484  90D8               	bcf	status,0,c
 10575  002486  364B               	rlcf	___fldiv@grs^0,f,c
 10576  002488  364C               	rlcf	(___fldiv@grs+1)^0,f,c
 10577  00248A  364D               	rlcf	(___fldiv@grs+2)^0,f,c
 10578  00248C  364E               	rlcf	(___fldiv@grs+3)^0,f,c
 10579  00248E                     l7650:
 10580  00248E  503C               	movf	___fldiv@a^0,w,c
 10581  002490  5C44               	subwf	___fldiv@rem^0,w,c
 10582  002492  503D               	movf	(___fldiv@a+1)^0,w,c
 10583  002494  5845               	subwfb	(___fldiv@rem+1)^0,w,c
 10584  002496  503E               	movf	(___fldiv@a+2)^0,w,c
 10585  002498  5846               	subwfb	(___fldiv@rem+2)^0,w,c
 10586  00249A  503F               	movf	(___fldiv@a+3)^0,w,c
 10587  00249C  5847               	subwfb	(___fldiv@rem+3)^0,w,c
 10588  00249E  A0D8               	btfss	status,0,c
 10589  0024A0  EF54  F012         	goto	u8561
 10590  0024A4  EF56  F012         	goto	u8560
 10591  0024A8                     u8561:
 10592  0024A8  EF5F  F012         	goto	l7656
 10593  0024AC                     u8560:
 10594  0024AC  8C4E               	bsf	(___fldiv@grs+3)^0,6,c
 10595  0024AE  503C               	movf	___fldiv@a^0,w,c
 10596  0024B0  5E44               	subwf	___fldiv@rem^0,f,c
 10597  0024B2  503D               	movf	(___fldiv@a+1)^0,w,c
 10598  0024B4  5A45               	subwfb	(___fldiv@rem+1)^0,f,c
 10599  0024B6  503E               	movf	(___fldiv@a+2)^0,w,c
 10600  0024B8  5A46               	subwfb	(___fldiv@rem+2)^0,f,c
 10601  0024BA  503F               	movf	(___fldiv@a+3)^0,w,c
 10602  0024BC  5A47               	subwfb	(___fldiv@rem+3)^0,f,c
 10603  0024BE                     l7656:
 10604  0024BE  2A50               	incf	___fldiv@aexp^0,f,c
 10605  0024C0                     l1442:
 10606  0024C0  0E19               	movlw	25
 10607  0024C2  6450               	cpfsgt	___fldiv@aexp^0,c
 10608  0024C4  EF66  F012         	goto	u8571
 10609  0024C8  EF68  F012         	goto	u8570
 10610  0024CC                     u8571:
 10611  0024CC  EF28  F012         	goto	l7642
 10612  0024D0                     u8570:
 10613  0024D0  5044               	movf	___fldiv@rem^0,w,c
 10614  0024D2  1045               	iorwf	(___fldiv@rem+1)^0,w,c
 10615  0024D4  1046               	iorwf	(___fldiv@rem+2)^0,w,c
 10616  0024D6  1047               	iorwf	(___fldiv@rem+3)^0,w,c
 10617  0024D8  B4D8               	btfsc	status,2,c
 10618  0024DA  EF71  F012         	goto	u8581
 10619  0024DE  EF73  F012         	goto	u8580
 10620  0024E2                     u8581:
 10621  0024E2  EF8B  F012         	goto	l7668
 10622  0024E6                     u8580:
 10623  0024E6  804B               	bsf	___fldiv@grs^0,0,c
 10624  0024E8  EF8B  F012         	goto	l7668
 10625  0024EC                     l7662:
 10626  0024EC  90D8               	bcf	status,0,c
 10627  0024EE  3638               	rlcf	___fldiv@b^0,f,c
 10628  0024F0  3639               	rlcf	(___fldiv@b+1)^0,f,c
 10629  0024F2  363A               	rlcf	(___fldiv@b+2)^0,f,c
 10630  0024F4  363B               	rlcf	(___fldiv@b+3)^0,f,c
 10631  0024F6  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10632  0024F8  EF80  F012         	goto	u8591
 10633  0024FC  EF82  F012         	goto	u8590
 10634  002500                     u8591:
 10635  002500  EF83  F012         	goto	l1451
 10636  002504                     u8590:
 10637  002504  8038               	bsf	___fldiv@b^0,0,c
 10638  002506                     l1451:
 10639  002506  90D8               	bcf	status,0,c
 10640  002508  364B               	rlcf	___fldiv@grs^0,f,c
 10641  00250A  364C               	rlcf	(___fldiv@grs+1)^0,f,c
 10642  00250C  364D               	rlcf	(___fldiv@grs+2)^0,f,c
 10643  00250E  364E               	rlcf	(___fldiv@grs+3)^0,f,c
 10644  002510  0649               	decf	___fldiv@new_exp^0,f,c
 10645  002512  A0D8               	btfss	status,0,c
 10646  002514  064A               	decf	(___fldiv@new_exp+1)^0,f,c
 10647  002516                     l7668:
 10648  002516  AE3A               	btfss	(___fldiv@b+2)^0,7,c
 10649  002518  EF90  F012         	goto	u8601
 10650  00251C  EF92  F012         	goto	u8600
 10651  002520                     u8601:
 10652  002520  EF76  F012         	goto	l7662
 10653  002524                     u8600:
 10654  002524  0E00               	movlw	0
 10655  002526  6E50               	movwf	___fldiv@aexp^0,c
 10656  002528  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10657  00252A  EF99  F012         	goto	u8611
 10658  00252E  EF9B  F012         	goto	u8610
 10659  002532                     u8611:
 10660  002532  EFBF  F012         	goto	l1453
 10661  002536                     u8610:
 10662  002536  0EFF               	movlw	255
 10663  002538  144B               	andwf	___fldiv@grs^0,w,c
 10664  00253A  6E40               	movwf	??___fldiv^0,c
 10665  00253C  0EFF               	movlw	255
 10666  00253E  144C               	andwf	(___fldiv@grs+1)^0,w,c
 10667  002540  6E41               	movwf	(??___fldiv+1)^0,c
 10668  002542  0EFF               	movlw	255
 10669  002544  144D               	andwf	(___fldiv@grs+2)^0,w,c
 10670  002546  6E42               	movwf	(??___fldiv+2)^0,c
 10671  002548  0E7F               	movlw	127
 10672  00254A  144E               	andwf	(___fldiv@grs+3)^0,w,c
 10673  00254C  6E43               	movwf	(??___fldiv+3)^0,c
 10674  00254E  5040               	movf	??___fldiv^0,w,c
 10675  002550  1041               	iorwf	(??___fldiv+1)^0,w,c
 10676  002552  1042               	iorwf	(??___fldiv+2)^0,w,c
 10677  002554  1043               	iorwf	(??___fldiv+3)^0,w,c
 10678  002556  B4D8               	btfsc	status,2,c
 10679  002558  EFB0  F012         	goto	u8621
 10680  00255C  EFB2  F012         	goto	u8620
 10681  002560                     u8621:
 10682  002560  EFB6  F012         	goto	l1454
 10683  002564                     u8620:
 10684  002564                     l7676:
 10685  002564  0E01               	movlw	1
 10686  002566  6E50               	movwf	___fldiv@aexp^0,c
 10687  002568  EFBF  F012         	goto	l1453
 10688  00256C                     l1454:
 10689  00256C  A038               	btfss	___fldiv@b^0,0,c
 10690  00256E  EFBB  F012         	goto	u8631
 10691  002572  EFBD  F012         	goto	u8630
 10692  002576                     u8631:
 10693  002576  EFBF  F012         	goto	l1453
 10694  00257A                     u8630:
 10695  00257A  EFB2  F012         	goto	l7676
 10696  00257E                     l1453:
 10697  00257E  5050               	movf	___fldiv@aexp^0,w,c
 10698  002580  B4D8               	btfsc	status,2,c
 10699  002582  EFC5  F012         	goto	u8641
 10700  002586  EFC7  F012         	goto	u8640
 10701  00258A                     u8641:
 10702  00258A  EFEB  F012         	goto	l7688
 10703  00258E                     u8640:
 10704  00258E  0E01               	movlw	1
 10705  002590  2638               	addwf	___fldiv@b^0,f,c
 10706  002592  0E00               	movlw	0
 10707  002594  2239               	addwfc	(___fldiv@b+1)^0,f,c
 10708  002596  223A               	addwfc	(___fldiv@b+2)^0,f,c
 10709  002598  223B               	addwfc	(___fldiv@b+3)^0,f,c
 10710  00259A  A03B               	btfss	(___fldiv@b+3)^0,0,c
 10711  00259C  EFD2  F012         	goto	u8651
 10712  0025A0  EFD4  F012         	goto	u8650
 10713  0025A4                     u8651:
 10714  0025A4  EFEB  F012         	goto	l7688
 10715  0025A8                     u8650:
 10716  0025A8  C038  F040         	movff	___fldiv@b,??___fldiv
 10717  0025AC  C039  F041         	movff	___fldiv@b+1,??___fldiv+1
 10718  0025B0  C03A  F042         	movff	___fldiv@b+2,??___fldiv+2
 10719  0025B4  C03B  F043         	movff	___fldiv@b+3,??___fldiv+3
 10720  0025B8  3443               	rlcf	(??___fldiv+3)^0,w,c
 10721  0025BA  3243               	rrcf	(??___fldiv+3)^0,f,c
 10722  0025BC  3242               	rrcf	(??___fldiv+2)^0,f,c
 10723  0025BE  3241               	rrcf	(??___fldiv+1)^0,f,c
 10724  0025C0  3240               	rrcf	??___fldiv^0,f,c
 10725  0025C2  C040  F038         	movff	??___fldiv,___fldiv@b
 10726  0025C6  C041  F039         	movff	??___fldiv+1,___fldiv@b+1
 10727  0025CA  C042  F03A         	movff	??___fldiv+2,___fldiv@b+2
 10728  0025CE  C043  F03B         	movff	??___fldiv+3,___fldiv@b+3
 10729  0025D2  4A49               	infsnz	___fldiv@new_exp^0,f,c
 10730  0025D4  2A4A               	incf	(___fldiv@new_exp+1)^0,f,c
 10731  0025D6                     l7688:
 10732  0025D6  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10733  0025D8  EFF6  F012         	goto	u8661
 10734  0025DC  504A               	movf	(___fldiv@new_exp+1)^0,w,c
 10735  0025DE  E108               	bnz	u8660
 10736  0025E0  2849               	incf	___fldiv@new_exp^0,w,c
 10737  0025E2  A0D8               	btfss	status,0,c
 10738  0025E4  EFF6  F012         	goto	u8661
 10739  0025E8  EFF8  F012         	goto	u8660
 10740  0025EC                     u8661:
 10741  0025EC  EF03  F013         	goto	l7692
 10742  0025F0                     u8660:
 10743  0025F0  0E00               	movlw	0
 10744  0025F2  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10745  0025F4  6849               	setf	___fldiv@new_exp^0,c
 10746  0025F6  0E00               	movlw	0
 10747  0025F8  6E38               	movwf	___fldiv@b^0,c
 10748  0025FA  0E00               	movlw	0
 10749  0025FC  6E39               	movwf	(___fldiv@b+1)^0,c
 10750  0025FE  0E00               	movlw	0
 10751  002600  6E3A               	movwf	(___fldiv@b+2)^0,c
 10752  002602  0E00               	movlw	0
 10753  002604  6E3B               	movwf	(___fldiv@b+3)^0,c
 10754  002606                     l7692:
 10755  002606  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10756  002608  EF10  F013         	goto	u8670
 10757  00260C  504A               	movf	(___fldiv@new_exp+1)^0,w,c
 10758  00260E  E106               	bnz	u8671
 10759  002610  0449               	decf	___fldiv@new_exp^0,w,c
 10760  002612  B0D8               	btfsc	status,0,c
 10761  002614  EF0E  F013         	goto	u8671
 10762  002618  EF10  F013         	goto	u8670
 10763  00261C                     u8671:
 10764  00261C  EF1E  F013         	goto	l7696
 10765  002620                     u8670:
 10766  002620  0E00               	movlw	0
 10767  002622  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10768  002624  0E00               	movlw	0
 10769  002626  6E49               	movwf	___fldiv@new_exp^0,c
 10770  002628  0E00               	movlw	0
 10771  00262A  6E38               	movwf	___fldiv@b^0,c
 10772  00262C  0E00               	movlw	0
 10773  00262E  6E39               	movwf	(___fldiv@b+1)^0,c
 10774  002630  0E00               	movlw	0
 10775  002632  6E3A               	movwf	(___fldiv@b+2)^0,c
 10776  002634  0E00               	movlw	0
 10777  002636  6E3B               	movwf	(___fldiv@b+3)^0,c
 10778  002638  0E00               	movlw	0
 10779  00263A  6E48               	movwf	___fldiv@sign^0,c
 10780  00263C                     l7696:
 10781  00263C  C049  F04F         	movff	___fldiv@new_exp,___fldiv@bexp
 10782  002640  A04F               	btfss	___fldiv@bexp^0,0,c
 10783  002642  EF25  F013         	goto	u8681
 10784  002646  EF27  F013         	goto	u8680
 10785  00264A                     u8681:
 10786  00264A  EF2A  F013         	goto	l7702
 10787  00264E                     u8680:
 10788  00264E  8E3A               	bsf	(___fldiv@b+2)^0,7,c
 10789  002650  EF2B  F013         	goto	l7704
 10790  002654                     l7702:
 10791  002654  9E3A               	bcf	(___fldiv@b+2)^0,7,c
 10792  002656                     l7704:
 10793  002656  90D8               	bcf	status,0,c
 10794  002658  304F               	rrcf	___fldiv@bexp^0,w,c
 10795  00265A  6E3B               	movwf	(___fldiv@b+3)^0,c
 10796  00265C  EFE1  F011         	goto	l7618
 10797  002660                     l1440:
 10798  002660  0012               	return		;funcret
 10799  002662                     __end_of___fldiv:
 10800                           	opt callstack 0
 10801                           
 10802 ;; *************** function _dameDistancia *****************
 10803 ;; Defined at:
 10804 ;;		line 26 in file "./ultrasonico.h"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;  numeroSensor    1    wreg     unsigned char 
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;  numeroSensor    1   32[COMRAM] unsigned char 
 10809 ;;  distancia       4   33[COMRAM] float 
 10810 ;;  conteo          2   37[COMRAM] unsigned int 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  4   26[COMRAM] float 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10820 ;;      Params:         4       0       0       0       0       0       0       0       0
 10821 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10822 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10823 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10824 ;;Total ram usage:       13 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    3
 10827 ;; This function calls:
 10828 ;;		___lwdiv
 10829 ;;		___xxtofl
 10830 ;; This function is called by:
 10831 ;;		_inicializarComportamientoBasico
 10832 ;;		_leerSensores
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           	psect	text45
 10837  0034BE                     __ptext45:
 10838                           	opt callstack 0
 10839  0034BE                     _dameDistancia:
 10840                           	opt callstack 25
 10841                           
 10842                           ;incstack = 0
 10843                           ;dameDistancia@numeroSensor stored from wreg
 10844  0034BE  6E21               	movwf	dameDistancia@numeroSensor^0,c
 10845  0034C0                     
 10846                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
 10847  0034C0  0E00               	movlw	0
 10848  0034C2  6ECF               	movwf	207,c	;volatile
 10849                           
 10850                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
 10851  0034C4  0E00               	movlw	0
 10852  0034C6  6ECE               	movwf	206,c	;volatile
 10853                           
 10854                           ;./ultrasonico.h: 33:     conteo = 0;
 10855  0034C8  0E00               	movlw	0
 10856  0034CA  6E27               	movwf	(dameDistancia@conteo+1)^0,c
 10857  0034CC  0E00               	movlw	0
 10858  0034CE  6E26               	movwf	dameDistancia@conteo^0,c
 10859  0034D0                     
 10860                           ;./ultrasonico.h: 34:     LATD3 = 1;
 10861  0034D0  868C               	bsf	3980,3,c	;volatile
 10862  0034D2                     
 10863                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
 10864  0034D2  0E04               	movlw	4
 10865  0034D4                     u11327:
 10866  0034D4  2EE8               	decfsz	wreg,f,c
 10867  0034D6  D7FE               	bra	u11327
 10868  0034D8                     
 10869                           ;./ultrasonico.h: 36:     LATD3 = 0;
 10870  0034D8  968C               	bcf	3980,3,c	;volatile
 10871                           
 10872                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
 10873  0034DA  EFB7  F01A         	goto	l8722
 10874  0034DE                     l183:
 10875  0034DE  A281               	btfss	129,1,c	;volatile
 10876  0034E0  EF74  F01A         	goto	u10391
 10877  0034E4  EF76  F01A         	goto	u10390
 10878  0034E8                     u10391:
 10879  0034E8  EF6F  F01A         	goto	l183
 10880  0034EC                     u10390:
 10881  0034EC                     
 10882                           ;./ultrasonico.h: 43:             TMR1ON = 1;
 10883  0034EC  80CD               	bsf	4045,0,c	;volatile
 10884  0034EE                     l186:
 10885  0034EE  A281               	btfss	129,1,c	;volatile
 10886  0034F0  EF7C  F01A         	goto	u10401
 10887  0034F4  EF7E  F01A         	goto	u10400
 10888  0034F8                     u10401:
 10889  0034F8  EFD0  F01A         	goto	l191
 10890  0034FC                     u10400:
 10891  0034FC  A09E               	btfss	3998,0,c	;volatile
 10892  0034FE  EF83  F01A         	goto	u10411
 10893  003502  EF85  F01A         	goto	u10410
 10894  003506                     u10411:
 10895  003506  EF77  F01A         	goto	l186
 10896  00350A                     u10410:
 10897  00350A  EFD0  F01A         	goto	l191
 10898  00350E                     l193:
 10899  00350E  A481               	btfss	129,2,c	;volatile
 10900  003510  EF8C  F01A         	goto	u10421
 10901  003514  EF8E  F01A         	goto	u10420
 10902  003518                     u10421:
 10903  003518  EF87  F01A         	goto	l193
 10904  00351C                     u10420:
 10905  00351C                     
 10906                           ;./ultrasonico.h: 51:             TMR1ON = 1;
 10907  00351C  80CD               	bsf	4045,0,c	;volatile
 10908  00351E                     l196:
 10909  00351E  A481               	btfss	129,2,c	;volatile
 10910  003520  EF94  F01A         	goto	u10431
 10911  003524  EF96  F01A         	goto	u10430
 10912  003528                     u10431:
 10913  003528  EFD0  F01A         	goto	l191
 10914  00352C                     u10430:
 10915  00352C  A09E               	btfss	3998,0,c	;volatile
 10916  00352E  EF9B  F01A         	goto	u10441
 10917  003532  EF9D  F01A         	goto	u10440
 10918  003536                     u10441:
 10919  003536  EF8F  F01A         	goto	l196
 10920  00353A                     u10440:
 10921  00353A  EFD0  F01A         	goto	l191
 10922  00353E                     l202:
 10923  00353E  A681               	btfss	129,3,c	;volatile
 10924  003540  EFA4  F01A         	goto	u10451
 10925  003544  EFA6  F01A         	goto	u10450
 10926  003548                     u10451:
 10927  003548  EF9F  F01A         	goto	l202
 10928  00354C                     u10450:
 10929  00354C                     
 10930                           ;./ultrasonico.h: 59:             TMR1ON = 1;
 10931  00354C  80CD               	bsf	4045,0,c	;volatile
 10932  00354E                     l205:
 10933  00354E  A681               	btfss	129,3,c	;volatile
 10934  003550  EFAC  F01A         	goto	u10461
 10935  003554  EFAE  F01A         	goto	u10460
 10936  003558                     u10461:
 10937  003558  EFD0  F01A         	goto	l191
 10938  00355C                     u10460:
 10939  00355C  A09E               	btfss	3998,0,c	;volatile
 10940  00355E  EFB3  F01A         	goto	u10471
 10941  003562  EFB5  F01A         	goto	u10470
 10942  003566                     u10471:
 10943  003566  EFA7  F01A         	goto	l205
 10944  00356A                     u10470:
 10945  00356A  EFD0  F01A         	goto	l191
 10946  00356E                     l8722:
 10947  00356E  5021               	movf	dameDistancia@numeroSensor^0,w,c
 10948  003570  6E1F               	movwf	??_dameDistancia^0,c
 10949  003572  6A20               	clrf	(??_dameDistancia+1)^0,c
 10950                           
 10951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10952                           ; Switch size 1, requested type "simple"
 10953                           ; Number of cases is 1, Range of values is 0 to 0
 10954                           ; switch strategies available:
 10955                           ; Name         Instructions Cycles
 10956                           ; simple_byte            4     3 (average)
 10957                           ;	Chosen strategy is simple_byte
 10958  003574  5020               	movf	(??_dameDistancia+1)^0,w,c
 10959  003576  0A00               	xorlw	0	; case 0
 10960  003578  B4D8               	btfsc	status,2,c
 10961  00357A  EFC1  F01A         	goto	l9792
 10962  00357E  EFD0  F01A         	goto	l191
 10963  003582                     l9792:
 10964                           
 10965                           ; Switch size 1, requested type "simple"
 10966                           ; Number of cases is 3, Range of values is 1 to 3
 10967                           ; switch strategies available:
 10968                           ; Name         Instructions Cycles
 10969                           ; simple_byte           10     6 (average)
 10970                           ;	Chosen strategy is simple_byte
 10971  003582  501F               	movf	??_dameDistancia^0,w,c
 10972  003584  0A01               	xorlw	1	; case 1
 10973  003586  B4D8               	btfsc	status,2,c
 10974  003588  EF6F  F01A         	goto	l183
 10975  00358C  0A03               	xorlw	3	; case 2
 10976  00358E  B4D8               	btfsc	status,2,c
 10977  003590  EF87  F01A         	goto	l193
 10978  003594  0A01               	xorlw	1	; case 3
 10979  003596  B4D8               	btfsc	status,2,c
 10980  003598  EF9F  F01A         	goto	l202
 10981  00359C  EFD0  F01A         	goto	l191
 10982  0035A0                     l191:
 10983                           
 10984                           ;./ultrasonico.h: 66:     TMR1ON = 0;
 10985  0035A0  90CD               	bcf	4045,0,c	;volatile
 10986                           
 10987                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
 10988  0035A2  B09E               	btfsc	3998,0,c	;volatile
 10989  0035A4  EFD6  F01A         	goto	u10481
 10990  0035A8  EFD8  F01A         	goto	u10480
 10991  0035AC                     u10481:
 10992  0035AC  EFFE  F01A         	goto	l8728
 10993  0035B0                     u10480:
 10994  0035B0                     
 10995                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
 10996  0035B0  50CF               	movf	207,w,c	;volatile
 10997  0035B2  6E20               	movwf	(??_dameDistancia+1)^0,c
 10998  0035B4  6A1F               	clrf	??_dameDistancia^0,c
 10999  0035B6  501F               	movf	??_dameDistancia^0,w,c
 11000  0035B8  1226               	iorwf	dameDistancia@conteo^0,f,c
 11001  0035BA  5020               	movf	(??_dameDistancia+1)^0,w,c
 11002  0035BC  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
 11003                           
 11004                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
 11005  0035BE  50CE               	movf	206,w,c	;volatile
 11006  0035C0  1226               	iorwf	dameDistancia@conteo^0,f,c
 11007  0035C2                     
 11008                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
 11009  0035C2  0E00               	movlw	0
 11010  0035C4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 11011  0035C6  0E3A               	movlw	58
 11012  0035C8  6E08               	movwf	___lwdiv@divisor^0,c
 11013  0035CA  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
 11014  0035CE  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
 11015  0035D2  EC97  F020         	call	___lwdiv	;wreg free
 11016  0035D6  C006  F00D         	movff	?___lwdiv,___xxtofl@val
 11017  0035DA  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
 11018  0035DE  6A0F               	clrf	(___xxtofl@val+2)^0,c
 11019  0035E0  6A10               	clrf	(___xxtofl@val+3)^0,c
 11020  0035E2  0E00               	movlw	0
 11021  0035E4  EC89  F016         	call	___xxtofl
 11022  0035E8  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
 11023  0035EC  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
 11024  0035F0  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
 11025  0035F4  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
 11026                           
 11027                           ;./ultrasonico.h: 73:     } else {
 11028  0035F8  EF07  F01B         	goto	l8732
 11029  0035FC                     l8728:
 11030  0035FC                     
 11031                           ;./ultrasonico.h: 75:         TMR1IF = 0;
 11032  0035FC  909E               	bcf	3998,0,c	;volatile
 11033                           
 11034                           ;./ultrasonico.h: 76:         distancia = 0;
 11035  0035FE  0E00               	movlw	0
 11036  003600  6E22               	movwf	dameDistancia@distancia^0,c
 11037  003602  0E00               	movlw	0
 11038  003604  6E23               	movwf	(dameDistancia@distancia+1)^0,c
 11039  003606  0E00               	movlw	0
 11040  003608  6E24               	movwf	(dameDistancia@distancia+2)^0,c
 11041  00360A  0E00               	movlw	0
 11042  00360C  6E25               	movwf	(dameDistancia@distancia+3)^0,c
 11043  00360E                     l8732:
 11044                           
 11045                           ;./ultrasonico.h: 80:     return distancia;
 11046  00360E  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
 11047  003612  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
 11048  003616  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
 11049  00361A  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
 11050  00361E  0012               	return		;funcret
 11051  003620                     __end_of_dameDistancia:
 11052                           	opt callstack 0
 11053                           
 11054 ;; *************** function ___xxtofl *****************
 11055 ;; Defined at:
 11056 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  sign            1    wreg     unsigned char 
 11059 ;;  val             4   12[COMRAM] long 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;  sign            1   20[COMRAM] unsigned char 
 11062 ;;  arg             4   22[COMRAM] unsigned long 
 11063 ;;  exp             1   21[COMRAM] unsigned char 
 11064 ;; Return value:  Size  Location     Type
 11065 ;;                  4   12[COMRAM] unsigned char 
 11066 ;; Registers used:
 11067 ;;		wreg, status,2, status,0
 11068 ;; Tracked objects:
 11069 ;;		On entry : 0/0
 11070 ;;		On exit  : 0/0
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11073 ;;      Params:         4       0       0       0       0       0       0       0       0
 11074 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11075 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11076 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11077 ;;Total ram usage:       14 bytes
 11078 ;; Hardware stack levels used:    1
 11079 ;; Hardware stack levels required when called:    2
 11080 ;; This function calls:
 11081 ;;		Nothing
 11082 ;; This function is called by:
 11083 ;;		_pwmDuty
 11084 ;;		_dameDistancia
 11085 ;;		_PID
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text46
 11090  002D12                     __ptext46:
 11091                           	opt callstack 0
 11092  002D12                     ___xxtofl:
 11093                           	opt callstack 25
 11094                           
 11095                           ;incstack = 0
 11096                           ;___xxtofl@sign stored from wreg
 11097  002D12  6E15               	movwf	___xxtofl@sign^0,c
 11098  002D14  5015               	movf	___xxtofl@sign^0,w,c
 11099  002D16  B4D8               	btfsc	status,2,c
 11100  002D18  EF90  F016         	goto	u10261
 11101  002D1C  EF92  F016         	goto	u10260
 11102  002D20                     u10261:
 11103  002D20  EFB4  F016         	goto	l1513
 11104  002D24                     u10260:
 11105  002D24  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 11106  002D26  EF99  F016         	goto	u10270
 11107  002D2A  EF97  F016         	goto	u10271
 11108  002D2E                     u10271:
 11109  002D2E  EFB4  F016         	goto	l1513
 11110  002D32                     u10270:
 11111  002D32  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 11112  002D36  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 11113  002D3A  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 11114  002D3E  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 11115  002D42  1E11               	comf	??___xxtofl^0,f,c
 11116  002D44  1E12               	comf	(??___xxtofl+1)^0,f,c
 11117  002D46  1E13               	comf	(??___xxtofl+2)^0,f,c
 11118  002D48  1E14               	comf	(??___xxtofl+3)^0,f,c
 11119  002D4A  2A11               	incf	??___xxtofl^0,f,c
 11120  002D4C  0E00               	movlw	0
 11121  002D4E  2212               	addwfc	(??___xxtofl+1)^0,f,c
 11122  002D50  2213               	addwfc	(??___xxtofl+2)^0,f,c
 11123  002D52  2214               	addwfc	(??___xxtofl+3)^0,f,c
 11124  002D54  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 11125  002D58  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 11126  002D5C  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 11127  002D60  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 11128  002D64  EFBC  F016         	goto	l8648
 11129  002D68                     l1513:
 11130  002D68  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 11131  002D6C  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11132  002D70  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11133  002D74  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11134  002D78                     l8648:
 11135  002D78  500D               	movf	___xxtofl@val^0,w,c
 11136  002D7A  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 11137  002D7C  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 11138  002D7E  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 11139  002D80  A4D8               	btfss	status,2,c
 11140  002D82  EFC5  F016         	goto	u10281
 11141  002D86  EFC7  F016         	goto	u10280
 11142  002D8A                     u10281:
 11143  002D8A  EFD1  F016         	goto	l8654
 11144  002D8E                     u10280:
 11145  002D8E  0E00               	movlw	0
 11146  002D90  6E0D               	movwf	?___xxtofl^0,c
 11147  002D92  0E00               	movlw	0
 11148  002D94  6E0E               	movwf	(?___xxtofl+1)^0,c
 11149  002D96  0E00               	movlw	0
 11150  002D98  6E0F               	movwf	(?___xxtofl+2)^0,c
 11151  002D9A  0E00               	movlw	0
 11152  002D9C  6E10               	movwf	(?___xxtofl+3)^0,c
 11153  002D9E  EF62  F017         	goto	l1516
 11154  002DA2                     l8654:
 11155  002DA2  0E96               	movlw	150
 11156  002DA4  6E16               	movwf	___xxtofl@exp^0,c
 11157  002DA6  EFDB  F016         	goto	l8658
 11158  002DAA                     l8656:
 11159  002DAA  2A16               	incf	___xxtofl@exp^0,f,c
 11160  002DAC  90D8               	bcf	status,0,c
 11161  002DAE  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 11162  002DB0  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 11163  002DB2  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 11164  002DB4  3217               	rrcf	___xxtofl@arg^0,f,c
 11165  002DB6                     l8658:
 11166  002DB6  0E00               	movlw	0
 11167  002DB8  1417               	andwf	___xxtofl@arg^0,w,c
 11168  002DBA  6E11               	movwf	??___xxtofl^0,c
 11169  002DBC  0E00               	movlw	0
 11170  002DBE  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 11171  002DC0  6E12               	movwf	(??___xxtofl+1)^0,c
 11172  002DC2  0E00               	movlw	0
 11173  002DC4  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 11174  002DC6  6E13               	movwf	(??___xxtofl+2)^0,c
 11175  002DC8  0EFE               	movlw	254
 11176  002DCA  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 11177  002DCC  6E14               	movwf	(??___xxtofl+3)^0,c
 11178  002DCE  5011               	movf	??___xxtofl^0,w,c
 11179  002DD0  1012               	iorwf	(??___xxtofl+1)^0,w,c
 11180  002DD2  1013               	iorwf	(??___xxtofl+2)^0,w,c
 11181  002DD4  1014               	iorwf	(??___xxtofl+3)^0,w,c
 11182  002DD6  A4D8               	btfss	status,2,c
 11183  002DD8  EFF0  F016         	goto	u10291
 11184  002DDC  EFF2  F016         	goto	u10290
 11185  002DE0                     u10291:
 11186  002DE0  EFD5  F016         	goto	l8656
 11187  002DE4                     u10290:
 11188  002DE4  EF00  F017         	goto	l1520
 11189  002DE8                     l8660:
 11190  002DE8  2A16               	incf	___xxtofl@exp^0,f,c
 11191  002DEA  0E01               	movlw	1
 11192  002DEC  2617               	addwf	___xxtofl@arg^0,f,c
 11193  002DEE  0E00               	movlw	0
 11194  002DF0  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 11195  002DF2  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 11196  002DF4  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 11197  002DF6  90D8               	bcf	status,0,c
 11198  002DF8  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 11199  002DFA  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 11200  002DFC  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 11201  002DFE  3217               	rrcf	___xxtofl@arg^0,f,c
 11202  002E00                     l1520:
 11203  002E00  0E00               	movlw	0
 11204  002E02  1417               	andwf	___xxtofl@arg^0,w,c
 11205  002E04  6E11               	movwf	??___xxtofl^0,c
 11206  002E06  0E00               	movlw	0
 11207  002E08  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 11208  002E0A  6E12               	movwf	(??___xxtofl+1)^0,c
 11209  002E0C  0E00               	movlw	0
 11210  002E0E  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 11211  002E10  6E13               	movwf	(??___xxtofl+2)^0,c
 11212  002E12  0EFF               	movlw	255
 11213  002E14  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 11214  002E16  6E14               	movwf	(??___xxtofl+3)^0,c
 11215  002E18  5011               	movf	??___xxtofl^0,w,c
 11216  002E1A  1012               	iorwf	(??___xxtofl+1)^0,w,c
 11217  002E1C  1013               	iorwf	(??___xxtofl+2)^0,w,c
 11218  002E1E  1014               	iorwf	(??___xxtofl+3)^0,w,c
 11219  002E20  A4D8               	btfss	status,2,c
 11220  002E22  EF15  F017         	goto	u10301
 11221  002E26  EF17  F017         	goto	u10300
 11222  002E2A                     u10301:
 11223  002E2A  EFF4  F016         	goto	l8660
 11224  002E2E                     u10300:
 11225  002E2E  EF1F  F017         	goto	l8668
 11226  002E32                     l8666:
 11227  002E32  0616               	decf	___xxtofl@exp^0,f,c
 11228  002E34  90D8               	bcf	status,0,c
 11229  002E36  3617               	rlcf	___xxtofl@arg^0,f,c
 11230  002E38  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 11231  002E3A  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 11232  002E3C  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 11233  002E3E                     l8668:
 11234  002E3E  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 11235  002E40  EF24  F017         	goto	u10311
 11236  002E44  EF26  F017         	goto	u10310
 11237  002E48                     u10311:
 11238  002E48  EF2E  F017         	goto	l1527
 11239  002E4C                     u10310:
 11240  002E4C  0E02               	movlw	2
 11241  002E4E  6016               	cpfslt	___xxtofl@exp^0,c
 11242  002E50  EF2C  F017         	goto	u10321
 11243  002E54  EF2E  F017         	goto	u10320
 11244  002E58                     u10321:
 11245  002E58  EF19  F017         	goto	l8666
 11246  002E5C                     u10320:
 11247  002E5C                     l1527:
 11248  002E5C  B016               	btfsc	___xxtofl@exp^0,0,c
 11249  002E5E  EF33  F017         	goto	u10331
 11250  002E62  EF35  F017         	goto	u10330
 11251  002E66                     u10331:
 11252  002E66  EF36  F017         	goto	l8674
 11253  002E6A                     u10330:
 11254  002E6A  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 11255  002E6C                     l8674:
 11256  002E6C  90D8               	bcf	status,0,c
 11257  002E6E  3216               	rrcf	___xxtofl@exp^0,f,c
 11258  002E70  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 11259  002E74  6A12               	clrf	(??___xxtofl+1)^0,c
 11260  002E76  6A13               	clrf	(??___xxtofl+2)^0,c
 11261  002E78  6A14               	clrf	(??___xxtofl+3)^0,c
 11262  002E7A  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 11263  002E7E  6A13               	clrf	(??___xxtofl+2)^0,c
 11264  002E80  6A12               	clrf	(??___xxtofl+1)^0,c
 11265  002E82  6A11               	clrf	??___xxtofl^0,c
 11266  002E84  5011               	movf	??___xxtofl^0,w,c
 11267  002E86  1217               	iorwf	___xxtofl@arg^0,f,c
 11268  002E88  5012               	movf	(??___xxtofl+1)^0,w,c
 11269  002E8A  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 11270  002E8C  5013               	movf	(??___xxtofl+2)^0,w,c
 11271  002E8E  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 11272  002E90  5014               	movf	(??___xxtofl+3)^0,w,c
 11273  002E92  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 11274  002E94  5015               	movf	___xxtofl@sign^0,w,c
 11275  002E96  B4D8               	btfsc	status,2,c
 11276  002E98  EF50  F017         	goto	u10341
 11277  002E9C  EF52  F017         	goto	u10340
 11278  002EA0                     u10341:
 11279  002EA0  EF5A  F017         	goto	l8684
 11280  002EA4                     u10340:
 11281  002EA4  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 11282  002EA6  EF59  F017         	goto	u10350
 11283  002EAA  EF57  F017         	goto	u10351
 11284  002EAE                     u10351:
 11285  002EAE  EF5A  F017         	goto	l8684
 11286  002EB2                     u10350:
 11287  002EB2  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 11288  002EB4                     l8684:
 11289  002EB4  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 11290  002EB8  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 11291  002EBC  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 11292  002EC0  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 11293  002EC4                     l1516:
 11294  002EC4  0012               	return		;funcret
 11295  002EC6                     __end_of___xxtofl:
 11296                           	opt callstack 0
 11297                           
 11298 ;; *************** function ___lwdiv *****************
 11299 ;; Defined at:
 11300 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;  dividend        2    5[COMRAM] unsigned int 
 11303 ;;  divisor         2    7[COMRAM] unsigned int 
 11304 ;; Auto vars:     Size  Location     Type
 11305 ;;  quotient        2   10[COMRAM] unsigned int 
 11306 ;;  counter         1    9[COMRAM] unsigned char 
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  2    5[COMRAM] unsigned int 
 11309 ;; Registers used:
 11310 ;;		wreg, status,2, status,0
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11316 ;;      Params:         4       0       0       0       0       0       0       0       0
 11317 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11318 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11319 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11320 ;;Total ram usage:        7 bytes
 11321 ;; Hardware stack levels used:    1
 11322 ;; Hardware stack levels required when called:    2
 11323 ;; This function calls:
 11324 ;;		Nothing
 11325 ;; This function is called by:
 11326 ;;		_dameDistancia
 11327 ;; This function uses a non-reentrant model
 11328 ;;
 11329                           
 11330                           	psect	text47
 11331  00412E                     __ptext47:
 11332                           	opt callstack 0
 11333  00412E                     ___lwdiv:
 11334                           	opt callstack 25
 11335  00412E  0E00               	movlw	0
 11336  004130  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11337  004132  0E00               	movlw	0
 11338  004134  6E0B               	movwf	___lwdiv@quotient^0,c
 11339  004136  5008               	movf	___lwdiv@divisor^0,w,c
 11340  004138  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11341  00413A  B4D8               	btfsc	status,2,c
 11342  00413C  EFA2  F020         	goto	u10231
 11343  004140  EFA4  F020         	goto	u10230
 11344  004144                     u10231:
 11345  004144  EFCC  F020         	goto	l1349
 11346  004148                     u10230:
 11347  004148  0E01               	movlw	1
 11348  00414A  6E0A               	movwf	___lwdiv@counter^0,c
 11349  00414C  EFAC  F020         	goto	l8628
 11350  004150                     l8626:
 11351  004150  90D8               	bcf	status,0,c
 11352  004152  3608               	rlcf	___lwdiv@divisor^0,f,c
 11353  004154  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11354  004156  2A0A               	incf	___lwdiv@counter^0,f,c
 11355  004158                     l8628:
 11356  004158  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 11357  00415A  EFB1  F020         	goto	u10241
 11358  00415E  EFB3  F020         	goto	u10240
 11359  004162                     u10241:
 11360  004162  EFA8  F020         	goto	l8626
 11361  004166                     u10240:
 11362  004166                     l8630:
 11363  004166  90D8               	bcf	status,0,c
 11364  004168  360B               	rlcf	___lwdiv@quotient^0,f,c
 11365  00416A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11366  00416C  5008               	movf	___lwdiv@divisor^0,w,c
 11367  00416E  5C06               	subwf	___lwdiv@dividend^0,w,c
 11368  004170  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11369  004172  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11370  004174  A0D8               	btfss	status,0,c
 11371  004176  EFBF  F020         	goto	u10251
 11372  00417A  EFC1  F020         	goto	u10250
 11373  00417E                     u10251:
 11374  00417E  EFC6  F020         	goto	l8638
 11375  004182                     u10250:
 11376  004182  5008               	movf	___lwdiv@divisor^0,w,c
 11377  004184  5E06               	subwf	___lwdiv@dividend^0,f,c
 11378  004186  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11379  004188  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11380  00418A  800B               	bsf	___lwdiv@quotient^0,0,c
 11381  00418C                     l8638:
 11382  00418C  90D8               	bcf	status,0,c
 11383  00418E  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11384  004190  3208               	rrcf	___lwdiv@divisor^0,f,c
 11385  004192  2E0A               	decfsz	___lwdiv@counter^0,f,c
 11386  004194  EFB3  F020         	goto	l8630
 11387  004198                     l1349:
 11388  004198  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
 11389  00419C  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11390  0041A0  0012               	return		;funcret
 11391  0041A2                     __end_of___lwdiv:
 11392                           	opt callstack 0
 11393                           
 11394 ;; *************** function _configurarAdc *****************
 11395 ;; Defined at:
 11396 ;;		line 7 in file "./adc.h"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;		None
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      void 
 11403 ;; Registers used:
 11404 ;;		wreg, status,2
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11410 ;;      Params:         0       0       0       0       0       0       0       0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11413 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11414 ;;Total ram usage:        0 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    2
 11417 ;; This function calls:
 11418 ;;		Nothing
 11419 ;; This function is called by:
 11420 ;;		_main
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           	psect	text48
 11425  004880                     __ptext48:
 11426                           	opt callstack 0
 11427  004880                     _configurarAdc:
 11428                           	opt callstack 28
 11429  004880                     
 11430                           ;./adc.h: 8:     ADCON1 = 0b00001110;
 11431  004880  0E0E               	movlw	14
 11432  004882  6EC1               	movwf	193,c	;volatile
 11433                           
 11434                           ;./adc.h: 9:     ADCON2 = 0b10100101;
 11435  004884  0EA5               	movlw	165
 11436  004886  6EC0               	movwf	192,c	;volatile
 11437  004888  0012               	return		;funcret
 11438  00488A                     __end_of_configurarAdc:
 11439                           	opt callstack 0
 11440                           
 11441 ;; *************** function _configPwm *****************
 11442 ;; Defined at:
 11443 ;;		line 47 in file "./pwm.h"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  channel         1    wreg     unsigned char 
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;  channel         1    7[COMRAM] unsigned char 
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  1    wreg      void 
 11450 ;; Registers used:
 11451 ;;		wreg, status,2, status,0
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11457 ;;      Params:         0       0       0       0       0       0       0       0       0
 11458 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11459 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11460 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11461 ;;Total ram usage:        3 bytes
 11462 ;; Hardware stack levels used:    1
 11463 ;; Hardware stack levels required when called:    2
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_main
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           
 11471                           	psect	text49
 11472  004550                     __ptext49:
 11473                           	opt callstack 0
 11474  004550                     _configPwm:
 11475                           	opt callstack 28
 11476                           
 11477                           ;incstack = 0
 11478                           ;configPwm@channel stored from wreg
 11479  004550  6E08               	movwf	configPwm@channel^0,c
 11480  004552                     
 11481                           ;./pwm.h: 56:         T2CKPS0 = 1;
 11482  004552  80CA               	bsf	4042,0,c	;volatile
 11483                           
 11484                           ;./pwm.h: 57:         T2CKPS1 = 1;
 11485  004554  82CA               	bsf	4042,1,c	;volatile
 11486  004556                     
 11487                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
 11488  004556  0E7C               	movlw	124
 11489  004558  6ECB               	movwf	203,c	;volatile
 11490                           
 11491                           ;./pwm.h: 63:     switch (channel) {
 11492  00455A  EFB9  F022         	goto	l8834
 11493  00455E                     l163:
 11494                           
 11495                           ;./pwm.h: 66:             TRISC2 = 0;
 11496  00455E  9494               	bcf	3988,2,c	;volatile
 11497                           
 11498                           ;./pwm.h: 67:             CCP1M3 = 1;
 11499  004560  86BD               	bsf	4029,3,c	;volatile
 11500                           
 11501                           ;./pwm.h: 68:             CCP1M2 = 1;
 11502  004562  84BD               	bsf	4029,2,c	;volatile
 11503                           
 11504                           ;./pwm.h: 71:             break;
 11505  004564  EFCE  F022         	goto	l164
 11506  004568                     l165:
 11507                           
 11508                           ;./pwm.h: 74:             TRISC1 = 0;
 11509  004568  9294               	bcf	3988,1,c	;volatile
 11510                           
 11511                           ;./pwm.h: 75:             CCP2M3 = 1;
 11512  00456A  86BA               	bsf	4026,3,c	;volatile
 11513                           
 11514                           ;./pwm.h: 76:             CCP2M2 = 1;
 11515  00456C  84BA               	bsf	4026,2,c	;volatile
 11516                           
 11517                           ;./pwm.h: 77:             break;
 11518  00456E  EFCE  F022         	goto	l164
 11519  004572                     l8834:
 11520  004572  5008               	movf	configPwm@channel^0,w,c
 11521  004574  6E06               	movwf	??_configPwm^0,c
 11522  004576  6A07               	clrf	(??_configPwm+1)^0,c
 11523                           
 11524                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11525                           ; Switch size 1, requested type "simple"
 11526                           ; Number of cases is 1, Range of values is 0 to 0
 11527                           ; switch strategies available:
 11528                           ; Name         Instructions Cycles
 11529                           ; simple_byte            4     3 (average)
 11530                           ;	Chosen strategy is simple_byte
 11531  004578  5007               	movf	(??_configPwm+1)^0,w,c
 11532  00457A  0A00               	xorlw	0	; case 0
 11533  00457C  B4D8               	btfsc	status,2,c
 11534  00457E  EFC3  F022         	goto	l9794
 11535  004582  EFCE  F022         	goto	l164
 11536  004586                     l9794:
 11537                           
 11538                           ; Switch size 1, requested type "simple"
 11539                           ; Number of cases is 2, Range of values is 1 to 2
 11540                           ; switch strategies available:
 11541                           ; Name         Instructions Cycles
 11542                           ; simple_byte            7     4 (average)
 11543                           ;	Chosen strategy is simple_byte
 11544  004586  5006               	movf	??_configPwm^0,w,c
 11545  004588  0A01               	xorlw	1	; case 1
 11546  00458A  B4D8               	btfsc	status,2,c
 11547  00458C  EFAF  F022         	goto	l163
 11548  004590  0A03               	xorlw	3	; case 2
 11549  004592  B4D8               	btfsc	status,2,c
 11550  004594  EFB4  F022         	goto	l165
 11551  004598  EFCE  F022         	goto	l164
 11552  00459C                     l164:
 11553                           
 11554                           ;./pwm.h: 81:     TMR2ON = 1;
 11555  00459C  84CA               	bsf	4042,2,c	;volatile
 11556  00459E  0012               	return		;funcret
 11557  0045A0                     __end_of_configPwm:
 11558                           	opt callstack 0
 11559                           
 11560 ;; *************** function _UART_init *****************
 11561 ;; Defined at:
 11562 ;;		line 13 in file "./UART.h"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;  BAUD            4   31[COMRAM] long 
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;  frecuenciaCr    4    0        long 
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  1    wreg      void 
 11569 ;; Registers used:
 11570 ;;		wreg, status,2, status,0, cstack
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11576 ;;      Params:         4       0       0       0       0       0       0       0       0
 11577 ;;      Locals:         8       0       0       0       0       0       0       0       0
 11578 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11579 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11580 ;;Total ram usage:       12 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:    3
 11583 ;; This function calls:
 11584 ;;		___aldiv
 11585 ;; This function is called by:
 11586 ;;		_main
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           	psect	text50
 11591  0041A2                     __ptext50:
 11592                           	opt callstack 0
 11593  0041A2                     _UART_init:
 11594                           	opt callstack 27
 11595  0041A2                     
 11596                           ;./UART.h: 16:     TRISC6 = 0;
 11597  0041A2  9C94               	bcf	3988,6,c	;volatile
 11598  0041A4                     
 11599                           ;./UART.h: 17:     TRISC7 = 1;
 11600  0041A4  8E94               	bsf	3988,7,c	;volatile
 11601  0041A6                     
 11602                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11603  0041A6  0E10               	movlw	16
 11604  0041A8  6E16               	movwf	___aldiv@divisor^0,c
 11605  0041AA  0E00               	movlw	0
 11606  0041AC  6E17               	movwf	(___aldiv@divisor+1)^0,c
 11607  0041AE  0E00               	movlw	0
 11608  0041B0  6E18               	movwf	(___aldiv@divisor+2)^0,c
 11609  0041B2  0E00               	movlw	0
 11610  0041B4  6E19               	movwf	(___aldiv@divisor+3)^0,c
 11611  0041B6  0E00               	movlw	0
 11612  0041B8  6E12               	movwf	___aldiv@dividend^0,c
 11613  0041BA  0E09               	movlw	9
 11614  0041BC  6E13               	movwf	(___aldiv@dividend+1)^0,c
 11615  0041BE  0E3D               	movlw	61
 11616  0041C0  6E14               	movwf	(___aldiv@dividend+2)^0,c
 11617  0041C2  0E00               	movlw	0
 11618  0041C4  6E15               	movwf	(___aldiv@dividend+3)^0,c
 11619  0041C6  EC10  F01B         	call	___aldiv	;wreg free
 11620  0041CA  C012  F028         	movff	?___aldiv,_UART_init$1758
 11621  0041CE  C013  F029         	movff	?___aldiv+1,_UART_init$1758+1
 11622  0041D2  C014  F02A         	movff	?___aldiv+2,_UART_init$1758+2
 11623  0041D6  C015  F02B         	movff	?___aldiv+3,_UART_init$1758+3
 11624  0041DA                     
 11625                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11626  0041DA  C028  F012         	movff	_UART_init$1758,___aldiv@dividend
 11627  0041DE  C029  F013         	movff	_UART_init$1758+1,___aldiv@dividend+1
 11628  0041E2  C02A  F014         	movff	_UART_init$1758+2,___aldiv@dividend+2
 11629  0041E6  C02B  F015         	movff	_UART_init$1758+3,___aldiv@dividend+3
 11630  0041EA  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 11631  0041EE  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 11632  0041F2  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 11633  0041F6  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 11634  0041FA  EC10  F01B         	call	___aldiv	;wreg free
 11635  0041FE  0412               	decf	?___aldiv^0,w,c
 11636  004200  6EAF               	movwf	175,c	;volatile
 11637  004202                     
 11638                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 11639  004202  84AC               	bsf	172,2,c	;volatile
 11640  004204                     
 11641                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 11642  004204  98AC               	bcf	172,4,c	;volatile
 11643  004206                     
 11644                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 11645  004206  8EAB               	bsf	171,7,c	;volatile
 11646  004208                     
 11647                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 11648  004208  9CAC               	bcf	172,6,c	;volatile
 11649  00420A                     
 11650                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 11651  00420A  8AAC               	bsf	172,5,c	;volatile
 11652  00420C                     
 11653                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 11654  00420C  9CAB               	bcf	171,6,c	;volatile
 11655  00420E                     
 11656                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 11657  00420E  88AB               	bsf	171,4,c	;volatile
 11658  004210  0012               	return		;funcret
 11659  004212                     __end_of_UART_init:
 11660                           	opt callstack 0
 11661                           
 11662 ;; *************** function ___aldiv *****************
 11663 ;; Defined at:
 11664 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;  dividend        4   17[COMRAM] long 
 11667 ;;  divisor         4   21[COMRAM] long 
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  quotient        4   27[COMRAM] long 
 11670 ;;  sign            1   26[COMRAM] unsigned char 
 11671 ;;  counter         1   25[COMRAM] unsigned char 
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  4   17[COMRAM] long 
 11674 ;; Registers used:
 11675 ;;		wreg, status,2, status,0
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11681 ;;      Params:         8       0       0       0       0       0       0       0       0
 11682 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11683 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11684 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11685 ;;Total ram usage:       14 bytes
 11686 ;; Hardware stack levels used:    1
 11687 ;; Hardware stack levels required when called:    2
 11688 ;; This function calls:
 11689 ;;		Nothing
 11690 ;; This function is called by:
 11691 ;;		_map
 11692 ;;		_UART_init
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696                           	psect	text51
 11697  003620                     __ptext51:
 11698                           	opt callstack 0
 11699  003620                     ___aldiv:
 11700                           	opt callstack 24
 11701  003620  0E00               	movlw	0
 11702  003622  6E1B               	movwf	___aldiv@sign^0,c
 11703  003624  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 11704  003626  EF19  F01B         	goto	u10150
 11705  00362A  EF17  F01B         	goto	u10151
 11706  00362E                     u10151:
 11707  00362E  EF23  F01B         	goto	l8570
 11708  003632                     u10150:
 11709  003632  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 11710  003634  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 11711  003636  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 11712  003638  6C16               	negf	___aldiv@divisor^0,c
 11713  00363A  0E00               	movlw	0
 11714  00363C  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 11715  00363E  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 11716  003640  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 11717  003642  0E01               	movlw	1
 11718  003644  6E1B               	movwf	___aldiv@sign^0,c
 11719  003646                     l8570:
 11720  003646  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 11721  003648  EF2A  F01B         	goto	u10160
 11722  00364C  EF28  F01B         	goto	u10161
 11723  003650                     u10161:
 11724  003650  EF34  F01B         	goto	l8576
 11725  003654                     u10160:
 11726  003654  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 11727  003656  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 11728  003658  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 11729  00365A  6C12               	negf	___aldiv@dividend^0,c
 11730  00365C  0E00               	movlw	0
 11731  00365E  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 11732  003660  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 11733  003662  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 11734  003664  0E01               	movlw	1
 11735  003666  1A1B               	xorwf	___aldiv@sign^0,f,c
 11736  003668                     l8576:
 11737  003668  0E00               	movlw	0
 11738  00366A  6E1C               	movwf	___aldiv@quotient^0,c
 11739  00366C  0E00               	movlw	0
 11740  00366E  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 11741  003670  0E00               	movlw	0
 11742  003672  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 11743  003674  0E00               	movlw	0
 11744  003676  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 11745  003678  5016               	movf	___aldiv@divisor^0,w,c
 11746  00367A  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 11747  00367C  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 11748  00367E  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 11749  003680  B4D8               	btfsc	status,2,c
 11750  003682  EF45  F01B         	goto	u10171
 11751  003686  EF47  F01B         	goto	u10170
 11752  00368A                     u10171:
 11753  00368A  EF7D  F01B         	goto	l8598
 11754  00368E                     u10170:
 11755  00368E  0E01               	movlw	1
 11756  003690  6E1A               	movwf	___aldiv@counter^0,c
 11757  003692  EF51  F01B         	goto	l8584
 11758  003696                     l8582:
 11759  003696  90D8               	bcf	status,0,c
 11760  003698  3616               	rlcf	___aldiv@divisor^0,f,c
 11761  00369A  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 11762  00369C  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 11763  00369E  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 11764  0036A0  2A1A               	incf	___aldiv@counter^0,f,c
 11765  0036A2                     l8584:
 11766  0036A2  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 11767  0036A4  EF56  F01B         	goto	u10181
 11768  0036A8  EF58  F01B         	goto	u10180
 11769  0036AC                     u10181:
 11770  0036AC  EF4B  F01B         	goto	l8582
 11771  0036B0                     u10180:
 11772  0036B0                     l8586:
 11773  0036B0  90D8               	bcf	status,0,c
 11774  0036B2  361C               	rlcf	___aldiv@quotient^0,f,c
 11775  0036B4  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 11776  0036B6  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 11777  0036B8  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 11778  0036BA  5016               	movf	___aldiv@divisor^0,w,c
 11779  0036BC  5C12               	subwf	___aldiv@dividend^0,w,c
 11780  0036BE  5017               	movf	(___aldiv@divisor+1)^0,w,c
 11781  0036C0  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 11782  0036C2  5018               	movf	(___aldiv@divisor+2)^0,w,c
 11783  0036C4  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 11784  0036C6  5019               	movf	(___aldiv@divisor+3)^0,w,c
 11785  0036C8  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 11786  0036CA  A0D8               	btfss	status,0,c
 11787  0036CC  EF6A  F01B         	goto	u10191
 11788  0036D0  EF6C  F01B         	goto	u10190
 11789  0036D4                     u10191:
 11790  0036D4  EF75  F01B         	goto	l8594
 11791  0036D8                     u10190:
 11792  0036D8  5016               	movf	___aldiv@divisor^0,w,c
 11793  0036DA  5E12               	subwf	___aldiv@dividend^0,f,c
 11794  0036DC  5017               	movf	(___aldiv@divisor+1)^0,w,c
 11795  0036DE  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 11796  0036E0  5018               	movf	(___aldiv@divisor+2)^0,w,c
 11797  0036E2  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 11798  0036E4  5019               	movf	(___aldiv@divisor+3)^0,w,c
 11799  0036E6  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 11800  0036E8  801C               	bsf	___aldiv@quotient^0,0,c
 11801  0036EA                     l8594:
 11802  0036EA  90D8               	bcf	status,0,c
 11803  0036EC  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 11804  0036EE  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 11805  0036F0  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 11806  0036F2  3216               	rrcf	___aldiv@divisor^0,f,c
 11807  0036F4  2E1A               	decfsz	___aldiv@counter^0,f,c
 11808  0036F6  EF58  F01B         	goto	l8586
 11809  0036FA                     l8598:
 11810  0036FA  501B               	movf	___aldiv@sign^0,w,c
 11811  0036FC  B4D8               	btfsc	status,2,c
 11812  0036FE  EF83  F01B         	goto	u10201
 11813  003702  EF85  F01B         	goto	u10200
 11814  003706                     u10201:
 11815  003706  EF8D  F01B         	goto	l8602
 11816  00370A                     u10200:
 11817  00370A  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 11818  00370C  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 11819  00370E  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 11820  003710  6C1C               	negf	___aldiv@quotient^0,c
 11821  003712  0E00               	movlw	0
 11822  003714  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 11823  003716  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 11824  003718  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 11825  00371A                     l8602:
 11826  00371A  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 11827  00371E  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 11828  003722  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 11829  003726  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 11830  00372A  0012               	return		;funcret
 11831  00372C                     __end_of___aldiv:
 11832                           	opt callstack 0
 11833                           
 11834 ;; *************** function _boton *****************
 11835 ;; Defined at:
 11836 ;;		line 103 in file "main.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;		None
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;		None
 11841 ;; Return value:  Size  Location     Type
 11842 ;;                  1    wreg      void 
 11843 ;; Registers used:
 11844 ;;		wreg, status,2, status,0, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/0
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11850 ;;      Params:         0       0       0       0       0       0       0       0       0
 11851 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11852 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11853 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11854 ;;Total ram usage:        2 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:    1
 11857 ;; This function calls:
 11858 ;;		_antiRebote
 11859 ;; This function is called by:
 11860 ;;		Interrupt level 2
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864                           	psect	intcode
 11865  000008                     __pintcode:
 11866                           	opt callstack 0
 11867  000008                     _boton:
 11868                           	opt callstack 19
 11869                           
 11870                           ;incstack = 0
 11871  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11872  00000A  ED2C  F022         	call	int_func,f	;refresh shadow registers
 11873                           
 11874                           	psect	intcode_body
 11875  004458                     __pintcode_body:
 11876                           	opt callstack 19
 11877  004458                     int_func:
 11878                           	opt callstack 19
 11879  004458  0006               	pop		; remove dummy address from shadow register refresh
 11880  00445A                     
 11881                           ;main.c: 105:     if (INT0IF)
 11882  00445A  A2F2               	btfss	4082,1,c	;volatile
 11883  00445C  EF32  F022         	goto	i2u679_41
 11884  004460  EF34  F022         	goto	i2u679_40
 11885  004464                     i2u679_41:
 11886  004464  EF54  F022         	goto	i2l264
 11887  004468                     i2u679_40:
 11888  004468                     
 11889                           ;main.c: 106:     {;main.c: 107:         antiRebote(1);
 11890  004468  0E01               	movlw	1
 11891  00446A  EC00  F022         	call	_antiRebote
 11892  00446E                     
 11893                           ;main.c: 108:         if (pausa) {
 11894  00446E  0101               	movlb	1	; () banked
 11895  004470  51FD               	movf	_pausa& (0+255),w,b
 11896  004472  B4D8               	btfsc	status,2,c
 11897  004474  EF3E  F022         	goto	i2u680_41
 11898  004478  EF40  F022         	goto	i2u680_40
 11899  00447C                     i2u680_41:
 11900  00447C  EF50  F022         	goto	i2l262
 11901  004480                     i2u680_40:
 11902  004480                     
 11903                           ; BSR set to: 1
 11904                           ;main.c: 109:             pausa = 0;
 11905  004480  0E00               	movlw	0
 11906  004482  6FFD               	movwf	_pausa& (0+255),b
 11907  004484                     
 11908                           ; BSR set to: 1
 11909                           ;main.c: 110:             LATD2 = 1;
 11910  004484  848C               	bsf	3980,2,c	;volatile
 11911  004486                     
 11912                           ; BSR set to: 1
 11913                           ;main.c: 111:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 11914  004486  0E10               	movlw	16
 11915  004488  6E05               	movwf	(??_boton+1)^0,c
 11916  00448A  0E39               	movlw	57
 11917  00448C  6E04               	movwf	??_boton^0,c
 11918  00448E  0E0E               	movlw	14
 11919  004490                     i2u1133_47:
 11920  004490  2EE8               	decfsz	wreg,f,c
 11921  004492  D7FE               	bra	i2u1133_47
 11922  004494  2E04               	decfsz	??_boton^0,f,c
 11923  004496  D7FC               	bra	i2u1133_47
 11924  004498  2E05               	decfsz	(??_boton+1)^0,f,c
 11925  00449A  D7FA               	bra	i2u1133_47
 11926                           
 11927                           ;main.c: 112:         } else {
 11928  00449C  EF53  F022         	goto	i2l6226
 11929  0044A0                     i2l262:
 11930                           
 11931                           ; BSR set to: 1
 11932                           ;main.c: 113:             LATD2 = 0;
 11933  0044A0  948C               	bcf	3980,2,c	;volatile
 11934  0044A2                     
 11935                           ; BSR set to: 1
 11936                           ;main.c: 114:             pausa = 1;
 11937  0044A2  0E01               	movlw	1
 11938  0044A4  6FFD               	movwf	_pausa& (0+255),b
 11939  0044A6                     i2l6226:
 11940                           
 11941                           ;main.c: 117:         INT0IF = 0;
 11942  0044A6  92F2               	bcf	4082,1,c	;volatile
 11943  0044A8                     i2l264:
 11944  0044A8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11945  0044AA  0011               	retfie		f
 11946  0044AC                     __end_of_boton:
 11947                           	opt callstack 0
 11948                           
 11949 ;; *************** function _antiRebote *****************
 11950 ;; Defined at:
 11951 ;;		line 215 in file "main.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;  pin             1    wreg     unsigned char 
 11954 ;; Auto vars:     Size  Location     Type
 11955 ;;  pin             1    2[COMRAM] unsigned char 
 11956 ;; Return value:  Size  Location     Type
 11957 ;;                  1    wreg      void 
 11958 ;; Registers used:
 11959 ;;		wreg, status,2, status,0
 11960 ;; Tracked objects:
 11961 ;;		On entry : 0/0
 11962 ;;		On exit  : 0/0
 11963 ;;		Unchanged: 0/0
 11964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11965 ;;      Params:         0       0       0       0       0       0       0       0       0
 11966 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11967 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11968 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11969 ;;Total ram usage:        3 bytes
 11970 ;; Hardware stack levels used:    1
 11971 ;; This function calls:
 11972 ;;		Nothing
 11973 ;; This function is called by:
 11974 ;;		_boton
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           	psect	text53
 11979  004400                     __ptext53:
 11980                           	opt callstack 0
 11981  004400                     _antiRebote:
 11982                           	opt callstack 19
 11983                           
 11984                           ;incstack = 0
 11985                           ;antiRebote@pin stored from wreg
 11986  004400  6E03               	movwf	antiRebote@pin^0,c
 11987  004402                     
 11988                           ;main.c: 217:     switch (pin) {
 11989  004402  EF1A  F022         	goto	i2l6116
 11990  004406                     i2l298:
 11991  004406  A081               	btfss	129,0,c	;volatile
 11992  004408  EF08  F022         	goto	i2u671_41
 11993  00440C  EF0A  F022         	goto	i2u671_40
 11994  004410                     i2u671_41:
 11995  004410  EF03  F022         	goto	i2l298
 11996  004414                     i2u671_40:
 11997  004414                     i2l301:
 11998  004414  B081               	btfsc	129,0,c	;volatile
 11999  004416  EF0F  F022         	goto	i2u672_41
 12000  00441A  EF11  F022         	goto	i2u672_40
 12001  00441E                     i2u672_41:
 12002  00441E  EF0A  F022         	goto	i2l301
 12003  004422                     i2u672_40:
 12004  004422                     
 12005                           ;main.c: 221:             _delay((unsigned long)((100)*(4000000/4000.0)));
 12006  004422  0E82               	movlw	130
 12007  004424  6E01               	movwf	??_antiRebote^0,c
 12008  004426  0EDE               	movlw	222
 12009  004428                     i2u1134_47:
 12010  004428  2EE8               	decfsz	wreg,f,c
 12011  00442A  D7FE               	bra	i2u1134_47
 12012  00442C  2E01               	decfsz	??_antiRebote^0,f,c
 12013  00442E  D7FC               	bra	i2u1134_47
 12014                           
 12015                           ;main.c: 222:             break;
 12016  004430  EF2B  F022         	goto	i2l306
 12017  004434                     i2l6116:
 12018  004434  5003               	movf	antiRebote@pin^0,w,c
 12019  004436  6E01               	movwf	??_antiRebote^0,c
 12020  004438  6A02               	clrf	(??_antiRebote+1)^0,c
 12021                           
 12022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12023                           ; Switch size 1, requested type "simple"
 12024                           ; Number of cases is 1, Range of values is 0 to 0
 12025                           ; switch strategies available:
 12026                           ; Name         Instructions Cycles
 12027                           ; simple_byte            4     3 (average)
 12028                           ;	Chosen strategy is simple_byte
 12029  00443A  5002               	movf	(??_antiRebote+1)^0,w,c
 12030  00443C  0A00               	xorlw	0	; case 0
 12031  00443E  B4D8               	btfsc	status,2,c
 12032  004440  EF24  F022         	goto	i2l9796
 12033  004444  EF2B  F022         	goto	i2l306
 12034  004448                     i2l9796:
 12035                           
 12036                           ; Switch size 1, requested type "simple"
 12037                           ; Number of cases is 1, Range of values is 1 to 1
 12038                           ; switch strategies available:
 12039                           ; Name         Instructions Cycles
 12040                           ; simple_byte            4     3 (average)
 12041                           ;	Chosen strategy is simple_byte
 12042  004448  5001               	movf	??_antiRebote^0,w,c
 12043  00444A  0A01               	xorlw	1	; case 1
 12044  00444C  B4D8               	btfsc	status,2,c
 12045  00444E  EF03  F022         	goto	i2l298
 12046  004452  EF2B  F022         	goto	i2l306
 12047  004456                     i2l306:
 12048  004456  0012               	return		;funcret
 12049  004458                     __end_of_antiRebote:
 12050                           	opt callstack 0
 12051                           
 12052                           	psect	rparam
 12053  0000                     
 12054                           	psect	temp
 12055  00005A                     btemp:
 12056                           	opt callstack 0
 12057  00005A                     	ds	1
 12058  0000                     int$flags	set	btemp
 12059  0000                     wtemp8	set	btemp+1
 12060  0000                     ttemp5	set	btemp+1
 12061  0000                     ttemp6	set	btemp+4
 12062  0000                     ttemp7	set	btemp+8
 12063                           tosu	equ	0xFFF
 12064                           tosh	equ	0xFFE
 12065                           tosl	equ	0xFFD
 12066                           stkptr	equ	0xFFC
 12067                           pclatu	equ	0xFFB
 12068                           pclath	equ	0xFFA
 12069                           pcl	equ	0xFF9
 12070                           tblptru	equ	0xFF8
 12071                           tblptrh	equ	0xFF7
 12072                           tblptrl	equ	0xFF6
 12073                           tablat	equ	0xFF5
 12074                           prodh	equ	0xFF4
 12075                           prodl	equ	0xFF3
 12076                           indf0	equ	0xFEF
 12077                           postinc0	equ	0xFEE
 12078                           postdec0	equ	0xFED
 12079                           preinc0	equ	0xFEC
 12080                           plusw0	equ	0xFEB
 12081                           fsr0h	equ	0xFEA
 12082                           fsr0l	equ	0xFE9
 12083                           wreg	equ	0xFE8
 12084                           indf1	equ	0xFE7
 12085                           postinc1	equ	0xFE6
 12086                           postdec1	equ	0xFE5
 12087                           preinc1	equ	0xFE4
 12088                           plusw1	equ	0xFE3
 12089                           fsr1h	equ	0xFE2
 12090                           fsr1l	equ	0xFE1
 12091                           bsr	equ	0xFE0
 12092                           indf2	equ	0xFDF
 12093                           postinc2	equ	0xFDE
 12094                           postdec2	equ	0xFDD
 12095                           preinc2	equ	0xFDC
 12096                           plusw2	equ	0xFDB
 12097                           fsr2h	equ	0xFDA
 12098                           fsr2l	equ	0xFD9
 12099                           status	equ	0xFD8


Data Sizes:
    Strings     224
    Constant    4
    Data        1
    BSS         356
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    160     160
    BANK1           256      2     254
    BANK2           256      3     103
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1433_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 50
		 -> STR_10(CODE[6]), STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), 
		 -> buffer(BANK1[50]), STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _efgtoa->___flmul
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_printf->_UART_write
    _leerSensores->___fldiv
    ___fladd->_dameDistancia
    _pwmDuty->___flmul
    _map->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___fladd
    _dameDistancia->___xxtofl
    ___xxtofl->___lwdiv
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _probarSensores->_probarUltrasonico
    _probarUltrasonico->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol
    ___fltol->___flmul

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_probarSensores

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  130071
                                              0 BANK2      3     3      0
                          _UART_init
                          _configPwm
                      _configurarAdc
    _inicializarComportamientoBasico
                     _probarSensores
 ---------------------------------------------------------------------------------
 (1) _probarSensores                                       2     2      0  115386
                                              0 BANK1      2     2      0
                        _UART_printf
                     _dameLecturaAdc
                       _leerSensores
                  _probarUltrasonico
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _probarUltrasonico                                    3     3      0   52656
                                            157 BANK0      3     3      0
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   51719
                                            139 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   50489
                                            131 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   49950
                                            101 BANK0     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   36359
                                             33 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             80 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6091
                                             21 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     303
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2362
                                             21 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2     906
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10009
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5198
                                             39 COMRAM    16     8      8
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (2) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13437
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12069
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12069
                                             31 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             21 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3921
                                             80 COMRAM     4     4      0
                                              0 BANK0     21    13      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (3) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configPwm
   _configurarAdc
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___fldiv (ARG)
             ___fladd (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fldiv (ARG)
             ___fladd (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _probarSensores
     _UART_printf
       _UART_write
     _dameLecturaAdc
     _leerSensores
       ___fladd
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _probarUltrasonico
       _UART_printf
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      3      67       9       40.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     25E      20        0.0%
DATA                 0      0     25E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Aug 15 14:52:58 2020

                       ?_probarUltrasonico 0001                               ___fldiv@aexp 0050  
                             ___fldiv@bexp 004F                               ___fldiv@sign 0048  
                             ___awdiv@sign 000B                             ?_configurarAdc 0001  
                      ___wmul@multiplicand 0008                                __CFG_BORV$3 000000  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                      ??_probarUltrasonico 00FD            comportamientoBasico@caminoFinal 0200  
                                      l202 353E                                        l212 361E  
                                      l204 354C                                        l205 354E  
                                      l215 4210                                        l160 4552  
                                      l224 4870                                        l241 4664  
                                      l233 43A2                                        l242 4678  
                                      l163 455E                                        l147 412C  
                                      l155 2D10                                        l227 487E  
                                      l164 459C                                        l236 4888  
                                      l165 4568                                        l309 45EA  
                                      l166 459E                                        l191 35A0  
                                      l183 34DE                                        l239 4656  
                                      l193 350E                                        l185 34EC  
                                      l186 34EE                                        l602 3348  
                                      l195 351C                                        l603 3338  
                                      l196 351E                                        l277 3B12  
                                      l269 40B2                                        l702 3DFE  
                                      l710 2702                                        l704 3E38  
                                      l712 270A                                        l609 3358  
                                      l730 293E                                        l639 4868  
                                      l840 19DA                                        l748 14A4  
                                      l597 3328                                        l870 42E4  
                                      l766 0CDC                                        l854 4272  
                                      l855 427A                                        l792 1078  
                                      l848 1920                                        l937 372A  
                                      l858 4842                                        l699 3DBC  
                                      l972 31DC                                        l869 42D4  
                                      l985 34BC                               __CFG_CPB$OFF 000000  
                                      _PR2 000FCB                               __CFG_CPD$OFF 000000  
                             __CFG_BOR$OFF 000000                                        _abs 4700  
                                      _map 40B4                                        _pad 3D78  
                             ___awmod@sign 000B                                        wreg 000FE8  
                             ___flmul@aexp 0069                               ___flmul@bexp 006E  
                 _DISTANCIA_PRIORIDAD_BAJA 010C                   _DISTANCIA_PRIORIDAD_ALTA 0114  
                             ___flmul@sign 0068                               ___flmul@temp 0073  
                             ___flmul@prod 006F                               __CFG_LVP$OFF 000000  
                             ___fltol@exp1 007E                               __CFG_WDT$OFF 000000  
                                     l1102 3EE8                                       l1123 38F2  
                                     ?_abs 0018                                       l1132 47AE  
                                     l1117 3F92                                       l1128 3938  
                                     l1155 3832                                       l1403 1CE4  
                                     l1412 1DB4                                       l1413 1DA2  
                                     l1520 2E00                                       l1440 2660  
                                     l1513 2D68                                       l1089 3D76  
                                     l1442 24C0                                       l1602 454E  
                                     l1451 2506                                       l1356 41A0  
                                     l1516 2EC4                                       l1428 4632  
                                     l1349 4198                                       l1453 257E  
                                     l1445 2484                                       l1454 256C  
                                     l1527 2E5C                                       l1623 3CB2  
                                     l1631 46BC                                       l1472 1F62  
                                     l1544 4736                                       l1608 4776  
                                     l1481 21D0                                       l1641 488A  
                                     l1482 21BE                                       l1386 1BCA  
                                     l1395 1E9A                                       l1387 1BB8  
                                     l1547 473E                                       l1539 3A36  
                                     l1476 22C6                                       l1388 1B7E  
                                     l1662 43FE                                       l1638 44FC  
                                     l1479 2158                                       l1575 304C  
                                     l1584 2B54                                       l1672 3BE8  
                                     l1489 2288                                       l1594 47E6  
                                     l1578 3054                                       l1682 433C  
                                     l1587 2A98                                       l1668 481C  
                                     l1687 4344                                       ?_map 0020  
                                     ?_pad 0016                                       l8000 37D2  
                                     l7200 1A08                                       l8010 3802  
                                     l7210 1A42                                       l7202 1A18  
                                     l8012 3812                                       l7300 1C0C  
                                     l7220 1A70                                       l7212 1A48  
                                     l7204 1A28                                       l8020 4502  
                                     l8100 0916                                       l8014 3822  
                                     l8006 37E6                                       l7310 1C46  
                                     l7302 1C1A                                       l7230 1AA4  
                                     l7222 1A72                                       l7214 1A5A  
                                     l7206 1A2A                                       l8022 4516  
                                     l8030 2662                                       l8110 096C  
                                     l8102 093A                                       l8008 37F2  
                                     l7320 1CB2                                       l7312 1C48  
                                     l7304 1C28                                       l7240 1AE0  
                                     l7224 1A82                                       l7232 1AAC  
                                     l7216 1A5C                                       l7208 1A32  
                                     l8024 4544                                       l7160 3C0E  
                                     l7400 3DA8                                       l8040 26DC  
                                     l8032 2682                                       l8200 0D2C  
                                     l8120 099A                                       l8112 097E  
                                     l8104 0944                                       l7330 1D0A  
                                     l7322 1CB4                                       l7314 1C52  
                                     l7306 1C34                                       l7250 1AF4  
                                     l7242 1AE4                                       l7234 1ABC  
                                     l7226 1A92                                       l7218 1A62  
                                     l8026 4548                                       l8018 44FE  
                                     l7162 3C18                                       l7170 467A  
                                     l7410 3E0C                                       l7402 3DB4  
                                     l8050 2738                                       l8042 26F6  
                                     l8034 26AA                                       l8210 0D88  
                                     l8202 0D62                                       l8130 0A0E  
                                     l8114 098A                                       l8122 09A0  
                                     l8106 094C                                       l7340 1D38  
                                     l7324 1CC4                                       l7308 1C38  
                                     l7316 1C58                                       l7260 1B08  
                                     l7252 1AF8                                       l7244 1AE8  
                                     l7236 1ACE                                       l7228 1AA2  
                                     l7500 3088                                       l7164 3C36  
                                     l7156 3BEA                                       l7172 4686  
                                     l7180 47F4                                       l7412 3E20  
                                     l7404 3DC8                                       l8060 27D6  
                                     l8052 2740                                       l8044 2712  
                                     l8036 26CA                                       l7420 393A  
                                     l8300 11CE                                       l8220 0DCC  
                                     l8212 0D9A                                       l8204 0D6A  
                                     l8132 0A2A                                       l8124 09C6  
                                     l8140 0A74                                       l8116 0992  
                                     l8108 095E                                       l7342 1D46  
                                     l7334 1D1E                                       l7350 1D64  
                                     l7318 1C7E                                       l7326 1CD4  
                                     l7262 1B0C                                       l7254 1AFC  
                                     l7246 1AEC                                       l7238 1ADC  
                                     l7270 1B1C                                       l7510 30CA  
                                     l7502 308C                                       l7166 3C6C  
                                     l7158 3BFC                                       l7174 4698  
                                     l7182 47F8                                       l7406 3DDC  
                                     l8070 2892                                       l8062 27DC  
                                     l8054 2748                                       l8046 2724  
                                     l8038 26DA                                       l7422 395A  
                                     l8310 126C                                       l8302 11D2  
                                     l8230 0E16                                       l8222 0DE4  
                                     l8214 0DA8                                       l8206 0D6E  
                                     l8150 0AFE                                       l8142 0A9A  
                                     l8134 0A42                                       l8118 0996  
                                     l7600 234A                                       l7344 1D4E  
                                     l7336 1D28                                       l7328 1CFA  
                                     l7352 1D72                                       l7280 1B8C  
                                     l7272 1B20                                       l7264 1B10  
                                     l7256 1B00                                       l7248 1AF0  
                                     l7192 19DC                                       l8400 2F34  
                                     l7520 3124                                       l7512 30E8  
                                     l7504 309A                                       l7416 4700  
                                     l7176 469C                                       l7184 4810  
                                     l7408 3DE0                                       l8080 28E0  
                                     l8072 28AC                                       l8056 274E  
                                     l8064 2840                                       l8048 2732  
                                     l7424 3998                                       l7432 39D8  
                                     l8320 12CA                                       l8304 11D8  
                                     l8312 1270                                       l8232 0E2A  
                                     l8240 0F20                                       l8224 0DF6  
                                     l8216 0DAC                                       l8208 0D76  
                                     l8160 0B34                                       l8136 0A4C  
                                     l8128 09FC                                       l7602 235A  
                                     l7610 2384                                       l7362 1DC4  
                                     l7370 1E1A                                       l7354 1D76  
                                     l7346 1D52                                       l7338 1D36  
                                     l7290 1BB6                                       l7282 1B98  
                                     l7274 1B4A                                       l7266 1B14  
                                     l7258 1B04                                       l7194 19E8  
                                     l8410 2F5C                                       l8402 2F38  
                                     l7522 3152                                       l7514 30F0  
                                     l7530 318C                                       l7506 30BA  
                                     l7418 471A                                       l7178 47E8  
                                     l8082 28F2                                       l8066 285A  
                                     l8074 28BA                                       l8058 27D0  
                                     l7434 39EA                                       l7426 39C0  
                                     l7442 43A4                                       l7450 431C  
                                     l8330 1308                                       l8322 12DA  
                                     l8314 128E                                       l8306 1230  
                                     l8250 0FEC                                       l8242 0F3E  
                                     l8234 0E8E                                       l8218 0DBE  
                                     l8226 0DFE                                       l8170 0C02  
                                     l8146 0AD0                                       l7700 264E  
                                     l7620 23C6                                       l7612 2394  
                                     l7604 236A                                       l7380 1E6C  
                                     l7372 1E2A                                       l7364 1DD0  
                                     l7356 1D84                                       l7348 1D62  
                                     l7292 1BD8                                       l7284 1B9C  
                                     l7276 1B66                                       l7268 1B18  
                                     l7196 19F6                                       l8412 2F64  
                                     l7532 319C                                       l7524 3172  
                                     l7516 3104                                       l7508 30BE  
                                     l7540 335E                                       l8084 28FE  
                                     l8076 28CC                                       l8068 2878  
                                     l7428 39CC                                       l7460 29B8  
                                     l7444 43B4                                       l7188 4740  
                                     l7452 432E                                       l8340 133E  
                                     l8332 1318                                       l8324 12DE  
                                     l8316 12AA                                       l8308 1264  
                                     l8260 1064                                       l8252 0FFC  
                                     l8244 0F72                                       l8236 0EE6  
                                     l8228 0E06                                       l8180 0C86  
                                     l8172 0C36                                       l8164 0B6A  
                                     l8148 0AE2                                       l8092 08E6  
                                     l8500 177C                                       l7702 2654  
                                     l7614 23AA                                       l7606 237A  
                                     l7390 1E8A                                       l7382 1E72  
                                     l7374 1E3A                                       l7366 1DDE  
                                     l7358 1D9A                                       l7294 1BE8  
                                     l7286 1BAA                                       l7278 1B76  
                                     l7198 19F8                                       l8422 300C  
                                     l8414 2F98                                       l8406 2F3E  
                                     l7534 31BC                                       l7526 3174  
                                     l7518 3112                                       l7550 33BE  
                                     l7542 336C                                       l8086 2906  
                                     l8078 28DA                                       l7438 3A2E  
                                     l7470 2A88                                       l7462 29CC  
                                     l7446 42E6                                       l8350 139A  
                                     l8342 134A                                       l8334 1320  
                                     l8326 12EE                                       l8318 12BC  
                                     l8270 111A                                       l8262 1070  
                                     l8254 100C                                       l8246 0FA6  
                                     l8238 0F1A                                       l8182 0C98  
                                     l8190 0CE8                                       l8174 0C3E  
                                     l8166 0B9E                                       l8158 0B1A  
                                     l8094 08F0                                       l8502 178E  
                                     l8600 370A                                       l7704 2656  
                                     l7640 2448                                       l7632 23FE  
                                     l7616 23BA                                       l7624 23DA  
                                     l7608 237C                                       l7800 2168  
                                     l7720 1ECA                                       l7712 1E9C  
                                     l7384 1E74                                       l7376 1E5A  
                                     l7368 1E18                                       l7288 1BAC  
                                     l8424 301E                                       l8408 2F54  
                                     l7528 3186                                       l7560 3434  
                                     l7552 33DC                                       l7544 338C  
                                     l8088 2916                                       l7480 2B44  
                                     l7464 29DA                                       l7472 2ABC  
                                     l7456 2940                                       l8360 13E4  
                                     l8344 1350                                       l8352 13A0  
                                     l8336 132E                                       l8328 1300  
                                     l8280 1164                                       l8272 112C  
                                     l8264 1094                                       l8256 1040  
                                     l8248 0FBA                                       l8184 0CAC  
                                     l8168 0BA4                                       l8176 0C72  
                                     l8096 0900                                       l8440 3B58  
                                     l8432 3B14                                       l8520 18BC  
                                     l8504 17A4                                       l8512 180E  
                                     l8602 371A                                       l7650 248E  
                                     l7642 2450                                       l7634 2418  
                                     l7626 23EA                                       l7618 23C2  
                                     l7802 2176                                       l7730 1F06  
                                     l7722 1EDA                                       l7714 1EAA  
                                     l7386 1E7A                                       l7378 1E5E  
                                     l7298 1BFC                                       l8610 486C  
                                     l7490 483A                                       l8426 3030  
                                     l8418 2FCE                                       l7570 349C  
                                     l7562 3454                                       l7554 33E4  
                                     l7546 3390                                       l7538 335A  
                                     l7394 3D78                                       l7474 2AF8  
                                     l7458 2960                                       l8370 1414  
                                     l8362 13F0                                       l8354 13B2  
                                     l8346 1376                                       l8338 1336  
                                     l8290 119A                                       l8282 1174  
                                     l8274 113A                                       l8266 10F8  
                                     l8258 1050                                       l8186 0CB4  
                                     l8178 0C82                                       l8098 090E  
                                     l8442 3B70                                       l8434 3B3E  
                                     l8530 1958                                       l8522 18F0  
                                     l8514 183C                                       l8506 17B2  
                                     l8620 412E                                       l7660 24E6  
                                     l7652 24AC                                       l7644 2460  
                                     l7636 2428                                       l7628 23EA  
                                     l7580 22E4                                       l7812 21E0  
                                     l7820 2228                                       l7804 217A  
                                     l7740 1F3C                                       l7732 1F0C  
                                     l7724 1EEA                                       l7716 1EB8  
                                     l8700 2CE4                                       l7388 1E88  
                                     l7484 47B0                                       l7564 3466  
                                     l7556 33F8                                       l7548 339E  
                                     l7396 3D86                                       l7900 3E58  
                                     l7476 2B0C                                       l7468 2A4C  
                                     l8380 146E                                       l8364 13F8  
                                     l8356 13CC                                       l8348 1392  
                                     l8292 119E                                       l8284 1178  
                                     l8268 1106                                       l8276 1142  
                                     l8196 0CFC                                       l8188 0CCE  
                                     l8444 3B8C                                       l8540 1996  
                                     l8532 1966                                       l8508 17E2  
                                     l8460 14EE                                       l8452 14A6  
                                     l8612 4212                                       l8630 4166  
                                     l8622 4136                                       l8710 34D2  
                                     l7670 2524                                       l7662 24EC  
                                     l7654 24AE                                       l7646 2474  
                                     l7638 2438                                       l7582 22F4  
                                     l7590 231E                                       l7574 22C8  
                                     l7830 229C                                       l7822 2242  
                                     l7814 21EC                                       l7806 2188  
                                     l7742 1F4C                                       l7734 1F1A  
                                     l7726 1EF0                                       l7718 1EBA  
                                     l8606 40B4                                       l8390 2EC6  
                                     l7494 3056                                       l7558 3406  
                                     l7566 346C                                       l7398 3D9A  
                                     l7910 3E90                                       l7902 3E66  
                                     l7478 2B34                                       l8382 147E  
                                     l8374 1448                                       l8366 1408  
                                     l8358 13D2                                       l8294 11A4  
                                     l8286 117E                                       l8278 1156  
                                     l8198 0D10                                       l8446 3B9E  
                                     l8438 3B4A                                       l8534 197A  
                                     l8518 18AA                                       l8470 1586  
                                     l8462 1512                                       l8454 14CA  
                                     l8614 421A                                       l8640 4192  
                                     l8632 416C                                       l8624 4148  
                                     l8712 34D8                                       l7680 258E  
                                     l7672 2528                                       l7664 24F6  
                                     l7656 24BE                                       l7648 2482  
                                     l7592 232E                                       l7584 2304  
                                     l7576 22D4                                       l7832 22AA  
                                     l7824 2256                                       l7816 21FA  
                                     l7808 21B6                                       l7760 1FCE  
                                     l7752 1F96                                       l7744 1F52  
                                     l7736 1F1C                                       l7728 1F00  
                                     l8560 42B4                                       l8552 427C  
                                     l7488 481E                                       l8392 2EDA  
                                     l7496 305A                                       l7568 347C  
                                     l7912 3E9E                                       l7920 3EC8  
                                     l7904 3E6E                                       l8384 1484  
                                     l8376 145A                                       l8368 140E  
                                     l8288 118A                                       l8296 11AA  
                                     l8448 3BC6                                       l8528 1934  
                                     l8472 15A6                                       l8464 151A  
                                     l8480 160E                                       l8456 14D8  
                                     l8544 19A4                                       l8616 4228  
                                     l8800 3AB8                                       l8570 3646  
                                     l8562 3620                                       l8634 4182  
                                     l8626 4150                                       l8650 2D8E  
                                     l8642 2D14                                       l8730 35FC  
                                     l8714 34FC                                       l8722 356E  
                                     l8706 34C0                                       l7690 25F0  
                                     l7682 259A                                       l7674 2536  
                                     l7666 2504                                       l7658 24D0  
                                     l7594 2334                                       l7586 2314  
                                     l7578 22E2                                       l7834 22AC  
                                     l7826 2270                                       l7818 2224  
                                     l7770 2018                                       l7762 1FE6  
                                     l7754 1FA2                                       l7746 1F72  
                                     l7738 1F2C                                       l8554 428C  
                                     l8810 4844                                       l8394 2EDE  
                                     l7498 3068                                       l7850 3CB8  
                                     l7922 3ED8                                       l7914 3EB4  
                                     l7906 3E80                                       l7930 3F18  
                                     l7842 45EC                                       l8378 1466  
                                     l8298 11BC                                       l8546 19C8  
                                     l8538 1988                                       l8490 16B4  
                                     l8482 1630                                       l8474 15B4  
                                     l8466 1528                                       l8458 14EA  
                                     l8618 4256                                       l8802 3AEC  
                                     l9610 3F9C                                       l8580 368E  
                                     l8572 3654                                       l8564 3624  
                                     l8636 418A                                       l8628 4158  
                                     l8660 2DE8                                       l8644 2D24  
                                     l8732 360E                                       l8724 35B0  
                                     l8716 352C                                       l8708 34D0  
                                     l7692 2606                                       l7684 25A8  
                                     l7676 2564                                       l7668 2516  
                                     l7596 233A                                       l7588 2316  
                                     l7828 228C                                       l7836 22B2  
                                     l7780 206E                                       l7772 2028  
                                     l7764 1FF2                                       l7756 1FAC  
                                     l7748 1F82                                       l8556 429A  
                                     l8740 4346                                       l8396 2EE2  
                                     l7860 3CE8                                       l7852 3CC6  
                                     l7924 3EE0                                       l7916 3EBC  
                                     l7908 3E88                                       l7940 3F90  
                                     l7932 3F28                                       l7844 45FE  
                                     l8492 16D8                                       l8484 1640  
                                     l8468 154C                                       l8804 3AF8  
                                     l9620 3FA6                                       l9612 3F9E  
                                     l8590 36D8                                       l8582 3696  
                                     l8574 3664                                       l8566 3632  
                                     l8830 4556                                       l8638 418C  
                                     l8670 2E4C                                       l8662 2DEA  
                                     l8654 2DA2                                       l8646 2D32  
                                     l8726 35C2                                       l8718 355C  
                                     l7694 2620                                       l7686 25D2  
                                     l7598 2348                                       l7838 22B6  
                                     l7790 2112                                       l7782 208A  
                                     l7774 2034                                       l7766 1FFE  
                                     l7758 1FC2                                       l8558 42AA  
                                     l8742 434A                                       l8398 2EFE  
                                     l7870 3D16                                       l7862 3CEC  
                                     l7854 3CCE                                       l7918 3EC2  
                                     l7934 3F56                                       l7950 38A2  
                                     l8494 16FC                                       l8486 1672  
                                     l8478 15FC                                       l8750 44BE  
                                     l9630 3FB0                                       l9622 3FA8  
                                     l9614 3FA0                                       l9606 3F94  
                                     l8592 36E8                                       l8584 36A2  
                                     l8576 3668                                       l8568 3642  
                                     l8840 41A2                                       l8824 4552  
                                     l8680 2EA4                                       l8672 2E6A  
                                     l8664 2DF6                                       l8656 2DAA  
                                     l8648 2D78                                       l8728 35FC  
                                     l7696 263C                                       l7688 25D6  
                                     l7792 2120                                       l7784 2096  
                                     l7776 2044                                       l7768 200C  
                                     l8760 4636                                       l8744 436E  
                                     l7880 3D4A                                       l7872 3D24  
                                     l7864 3CF4                                       l7856 3CD2  
                                     l7848 3CB4                                       l7936 3F66  
                                     l7928 3EEA                                       l7960 3930  
                                     l7952 38B2                                       l7944 3834  
                                     l8496 1744                                       l8488 1682  
                                     l8752 44C6                                       l9640 3FBA  
                                     l9632 3FB2                                       l9624 3FAA  
                                     l9616 3FA2                                       l9608 3F9A  
                                     l8594 36EA                                       l8586 36B0  
                                     l8578 3678                                       l8850 4202  
                                     l8842 41A2                                       l8834 4572  
                                     l8682 2EB2                                       l8674 2E6C  
                                     l8666 2E32                                       l8658 2DB6  
                                     l7698 2640                                       l7794 213E  
                                     l7786 20B2                                       l7778 205E  
                                     l8690 2BB6                                       l8770 4666  
                                     l8762 463E                                       l8746 4372  
                                     l7882 3D50                                       l7874 3D2A  
                                     l7866 3D06                                       l7858 3CE0  
                                     l7938 3F8A                                       l7962 3936  
                                     l7954 38C0                                       l7946 3864  
                                     l7970 479E                                       l8754 44CE  
                                     l9650 3FD0                                       l9642 3FBC  
                                     l9634 3FB4                                       l9626 3FAC  
                                     l9618 3FA4                                       l8596 36F4  
                                     l8588 36BA                                       l8860 420C  
                                     l8852 4204                                       l8844 41A4  
                                     l8684 2EB4                                       l8676 2E70  
                                     l8668 2E3E                                       l7796 2148  
                                     l7788 20DC                                       l7980 3758  
                                     l8692 2BD6                                       l8764 4640  
                                     l8780 3318                                       l7876 3D40  
                                     l7868 3D0E                                       l7884 3D56  
                                     l7892 3E3A                                       l7956 38D2  
                                     l7948 3874                                       l8756 44EA  
                                     l8748 44AC                                       l9660 4010  
                                     l9652 3FD4                                       l9644 3FBE  
                                     l9636 3FB6                                       l9628 3FAE  
                                     l8598 36FA                                       l8862 420E  
                                     l8854 4206                                       l8846 41A6  
                                     l8678 2E94                                       l7798 2156  
                                     l7990 37A6                                       l7982 3782  
                                     l7974 372C                                       l8694 2C5C  
                                     l8766 4652                                       l8774 31DE  
                                     l7886 3D66                                       l7878 3D48  
                                     l7894 3E3E                                       l7958 38E0  
                                     l7966 4778                                       l8790 3A3C  
                                     l8870 4034                                       l9662 4014  
                                     l9654 3FE8                                       l9646 3FC4  
                                     l9638 3FB8                                       l8856 4208  
                                     l8848 41DA                                       l8864 4880  
                                     l7984 3784                                       l7976 3744  
                                     l8696 2CA0                                       l8688 2B56  
                                     l8768 4654                                       l8776 32F8  
                                     l7888 3D6E                                       l7896 3E4C  
                                     l7968 478E                                       l8792 3A40  
                                     l8880 407C                                       l8872 403A  
                                     l9656 3FFA                                       l9664 401C  
                                     l9648 3FCA                                       l8858 420A  
                                     l7986 3794                                       l8890 45BA  
                                     l8778 3308                                       l7898 3E54  
                                     l8794 3A68                                       l8882 4088  
                                     l8874 4040                                       l8866 402A  
                                     l9658 400C                                       l7996 37BE  
                                     l7988 3798                                       l8892 45D0  
                                     l8796 3A90                                       l8884 40A6  
                                     l8876 404E                                       l8868 402E  
                                     l7998 37C8                                       l9790 2CFA  
                                     l8894 45E6                                       l8886 45A0  
                                     l8878 406C                                       STR_1 0860  
                                     l9792 3582                                       l8888 45A4  
                                     STR_2 0847                                       STR_3 0805  
                                     l9794 4586                                       l9786 3ACE  
                                     STR_4 088B                                       STR_5 0878  
                                     l9788 2F82                                       STR_6 089D  
                                     STR_7 08B9                                       STR_8 08AE  
                                     STR_9 08C3                                       u8000 1E3A  
                                     u8001 1E36                                       u8010 1E5A  
                                     u8011 1E56                                       u8020 1E6C  
                                     u8100 3998                                       _RCIF 007CF5  
                                     u8021 1E68                                       u8101 3994  
                                     u8030 1E88                                       u8110 39C0  
                                     u8031 1E84                                       u8111 39BC  
                                     u8040 3D86                                       u9000 3F18  
                                     u8120 39EA                                       u8200 432E  
                                     u8041 3D82                                       u9001 3F14  
                                     u8121 39E6                                       u8201 432A  
                                     u8050 3DA8                                       u9010 3F56  
                                     u8210 298A                                       u8051 3DA4  
                                     u9011 3F52                                       u9100 3778  
                                     u8060 3DFE                                       u9020 3F8A  
                                     u8140 3A24                                       u8300 2B34  
                                     u8220 29B8                                       u8061 3DFA  
                                     u9021 3F86                                       u8141 3A1E  
                                     u8301 2B30                                       u8221 29B4  
                                     u9110 37A6                                       u8310 47E0  
                                     u8070 3E0C                                       u9030 3864  
                                     u8150 3A26                                       u8230 29DA  
                                     u9111 37A2                                       u8311 47DA  
                                     u8071 3E08                                       u9031 3860  
                                     u8135 39FC                                       u8231 29D6  
                                     u8215 2980                                       u9120 37BA  
                                     u8320 47E2                                       u8400 336C  
                                     u8080 471A                                       u7600 3C6C  
                                     u9200 26AA                                       u9040 38A2  
                                     u8160 43EC                                       u9121 37B6  
                                     u9105 376E                                       u8401 3368  
                                     u8081 4716                                       u7601 3C68  
                                     u9201 26A6                                       u9041 389E  
                                     u9130 37E2                                       u8330 3068  
                                     u8410 339E                                       u7610 46BC  
                                     u9210 26DA                                       u9050 38C0  
                                     u8090 397A                                       u8250 2A48  
                                     u8170 43FE                                       u9131 37DE  
                                     u8331 3064                                       u8411 339A  
                                     u7611 46B8                                       u9211 26D6  
                                     u9051 38BC                                       u8251 2A44  
                                     u8171 43FA                                       u8500 235A  
                                     u9140 3802                                       u7700 1A82  
                                     u8340 309A                                       u8420 33DC  
                                     u7620 4810                                       u9300 28CC  
                                     u9220 26F6                                       u9060 38E0  
                                     u8260 2A6C                                       u8180 4316  
                                     u8501 2356                                       u9141 37FE  
                                     u7701 1A7E                                       u8341 3096  
                                     u8421 33D8                                       u7621 480C  
                                     u9301 28C8                                       u9221 26F2  
                                     u9061 38DC                                       u8245 29EE  
                                     u8181 4310                                       u8510 236A  
                                     u9150 3812                                       u7710 1A92  
                                     u8430 3406                                       u9310 28DA  
                                     u9230 2724                                       u9070 3930  
                                     u8270 2A88                                       u8246 29F8  
                                     u7630 4770                                       u8190 4318  
                                     u8511 2366                                       u9151 380E  
                                     u7711 1A8E                                       u8351 30C4  
                                     u8431 3402                                       u9311 28D6  
                                     u9231 2720                                       u9071 392C  
                                     u8095 3970                                       u8271 2A84  
                                     u8247 2A08                                       u8167 43E2  
                                     u7631 476A                                       u8600 2524  
                                     u8520 23AA                                       u7800 1BD8  
                                     u7720 1ACE                                       u9160 4516  
                                     u8360 30E8                                       u8440 3434  
                                     u9320 28F2                                       u9240 2732  
                                     u9080 478E                                       u8280 2ADC  
                                     u7640 4772                                       u9400 0A0E  
                                     u8601 2520                                       u8521 23A6  
                                     u7801 1BD4                                       u7721 1ACA  
                                     u9161 4512                                       u8361 30E4  
                                     u8441 3430                                       u9321 28EE  
                                     u9241 272E                                       u9081 478A  
                                     u8265 2A62                                       u9401 0A0A  
                                     u8610 2536                                       u8530 23EA  
                                     u9090 3744                                       u7810 1BE8  
                                     u7730 1ADC                                       u7650 19F6  
                                     u9170 4544                                       u8370 3112  
                                     u8450 347C                                       u7570 3BFC  
                                     u9250 285A                                       u8290 2AF8  
                                     u9410 0A9A                                       u9330 090E  
                                     u8611 2532                                       u8531 23E6  
                                     u9091 3740                                       u7811 1BE4  
                                     u7731 1AD8                                       u7651 19F2  
                                     u9171 4540                                       u8371 310E  
                                     u8451 3478                                       u7571 3BF8  
                                     u9251 2856                                       u8291 2AF4  
                                     u9411 0A96                                       u9331 090A  
                                     u8620 2564                                       u8540 2460  
                                     u8460 22E2                                       u8700 1ECA  
                                     u7900 1D46                                       u7820 1C1A  
                                     u7740 1B4A                                       u7660 1A08  
                                     u8380 3152                                       u7580 3C0E  
                                     u9260 2878                                       u9180 2692  
                                     u9500 0CCE                                       u9420 0ACA  
                                     u9340 095E                                       u8621 2560  
                                     u8541 245C                                       u8461 22DE  
                                     u8701 1EC6                                       u7901 1D42  
                                     u7821 1C16                                       u7741 1B46  
                                     u7661 1A04                                       u8381 314E  
                                     u7581 3C0A                                       u9261 2874  
                                     u9181 268C                                       u8285 2AD2  
                                     u9501 0CCA                                       u9421 0AC4  
                                     u9341 095A                                       u8630 257A  
                                     u8550 2482                                       u8470 22F4  
                                     u8710 1EDA                                       u7910 1D62  
                                     u7830 1C28                                       u7750 1B62  
                                     u7670 1A18                                       u8390 319C  
                                     u7590 3C36                                       u9270 2892  
                                     u9190 2694                                       u9510 0CF8  
                                     u9430 0ACC                                       u9350 096C  
                                     u8631 2576                                       u8551 247E  
                                     u8471 22F0                                       u8711 1ED6  
                                     u7911 1D5E                                       u7831 1C24  
                                     u7751 1B5C                                       u7671 1A14  
                                     u8391 3198                                       u7591 3C32  
                                     u9271 288E                                       u9511 0CF4  
                                     u9351 0968                                       u8640 258E  
                                     u8560 24AC                                       u8480 2304  
                                     u8800 2188                                       u8720 1F1A  
                                     u7920 1D72                                       u7840 1C46  
                                     u7760 1B64                                       u7680 1A5A  
                                     u9280 28AC                                       u9600 0DF6  
                                     u9520 0D10                                       u9440 0AE2  
                                     u9360 097E                                       u8641 258A  
                                     u8561 24A8                                       u8481 2300  
                                     u8801 2184                                       u8721 1F16  
                                     u7921 1D6E                                       u7841 1C42  
                                     u7681 1A56                                       u9281 28A8  
                                     u9601 0DF2                                       u9521 0D0C  
                                     u9441 0ADE                                       u9361 097A  
                                     u8650 25A8                                       u8570 24D0  
                                     u8490 2348                                       u8810 21B6  
                                     u8730 1F2C                                       u7930 1D84  
                                     u7850 1C7E                                       u7770 1B8C  
                                     u7690 1A70                                       u9290 28BA  
                                     u9610 0F3E                                       u9530 0D2C  
                                     u9450 0B66                                       u9370 09C6  
                                     u8651 25A4                                       u8571 24CC  
                                     u8491 2344                                       u8811 21B2  
                                     u8731 1F28                                       u7931 1D80  
                                     u7851 1C7A                                       u7771 1B88  
                                     u7691 1A6C                                       u9291 28B6  
                                     u9611 0F3A                                       u9531 0D28  
                                     u9451 0B62                                       u9371 09C2  
                                     u8660 25F0                                       u8580 24E6  
                                     u8820 21CC                                       u8740 1F3C  
                                     u7940 1D9A                                       u7860 1CC4  
                                     u7780 1BAA                                       u8900 3D06  
                                     u9700 1156                                       u9620 0FA6  
                                     u9540 0D62                                       u9460 0BFE  
                                     u9380 09F6                                       u8661 25EC  
                                     u8581 24E2                                       u8821 21C8  
                                     u8741 1F38                                       u7941 1D96  
                                     u7861 1CC0                                       u7781 1BA6  
                                     u8901 3D02                                       u9701 1152  
                                     u9621 0FA2                                       u9541 0D5E  
                                     u9461 0BFA                                       u9381 09F0  
                                     u8670 2620                                       u8590 2504  
                                     u8830 21E0                                       u8750 1F72  
                                     u7950 1DB0                                       u7870 1CFA  
                                     u7790 1BCA                                       u8910 3D24  
                                     u9710 1164                                       u9630 0FEC  
                                     u9550 0D88                                       u9470 0C72  
                                     u9390 09F8                                       u8671 261C  
                                     u8591 2500                                       u8831 21DC  
                                     u8751 1F6E                                       u7951 1DAC  
                                     u7871 1CF6                                       u7791 1BC6  
                                     u8911 3D20                                       u9711 1160  
                                     u9631 0FE8                                       u9551 0D84  
                                     u9471 0C6E                                       u8680 264E  
                                     u8840 21FA                                       u8760 1F82  
                                     u7960 1DC4                                       u7880 1D0A  
                                     u8920 3D40                                       u9800 13CC  
                                     u9720 11BC                                       u9640 0FFC  
                                     u9560 0D9A                                       u9480 0C98  
                                     u8681 264A                                       u8841 21F6  
                                     u8761 1F7E                                       u7961 1DC0  
                                     u7881 1D06                                       u8921 3D3C  
                                     u9801 13C8                                       u9721 11B8  
                                     u9641 0FF8                                       u9561 0D96  
                                     u9481 0C94                                       u8850 2242  
                                     u8770 20FC                                       u8690 1EB8  
                                     u7970 1DDE                                       u7890 1D36  
                                     u8930 3D66                                       u9810 13E4  
                                     u9730 128E                                       u9650 1064  
                                     u9570 0DA8                                       u9490 0CAC  
                                     u8851 223E                                       u8691 1EB4  
                                     u7971 1DDA                                       u7891 1D32  
                                     u8931 3D62                                       u9811 13E0  
                                     u9731 128A                                       u9651 1060  
                                     u9571 0DA4                                       u9491 0CA8  
                                     u8860 2270                                       u8780 2156  
                                     u7980 1E18                                       u9900 301E  
                                     u8940 3E4C                                       u9820 1442  
                                     u9740 12AA                                       u9660 1106  
                                     u9580 0DBE                                       u8861 226C  
                                     u8781 2152                                       u7981 1E14  
                                     u9901 301A                                       u8941 3E48  
                                     u9821 143C                                       u9741 12A6  
                                     u9661 1102                                       u9581 0DBA  
                                     u8870 22AA                                       u8790 2176  
                                     u7990 1E2A                                       u9910 3030  
                                     u8950 3E66                                       u9830 1444  
                                     u9750 12BC                                       u9670 111A  
                                     u9590 0DCC                                       u8871 22A6  
                                     u8791 2172                                       u8775 20F2  
                                     u7991 1E26                                       u9911 302C  
                                     u8951 3E62                                       u9751 12B8  
                                     u9671 1116                                       u9591 0DC8  
                                     u8880 3CC6                                       u8960 3E80  
                                     u9840 145A                                       u9760 12CA  
                                     u9680 112C                                       u9920 3B3E  
                                     u8881 3CC2                                       u8961 3E7C  
                                     u9841 1456                                       u9761 12C6  
                                     u9681 1128                                       u9921 3B3A  
                                     u9850 2EFE                                       u8890 3CE0  
                                     u8970 3E9E                                       u9770 1300  
                                     u9690 113A                                       u9930 3B70  
                                     u9851 2EFA                                       u8891 3CDC  
                                     u8971 3E9A                                       u9771 12FC  
                                     u9691 1136                                       u9931 3B6C  
                                     u9860 2F34                                       u8980 3EB4  
                                     u9780 132E                                       u9940 3B8C  
                                     u9861 2F30                                       u8981 3EB0  
                                     u9781 132A                                       u9941 3B88  
                                     u9870 2F50                                       u8990 3ED8  
                                     u9790 13B2                                       u9950 3B9E  
                                     u9871 2F4C                                       u8991 3ED4  
                                     u9791 13AE                                       u9951 3B9A  
                                     u9880 3006                                       u9960 3BC6  
                                     u9881 3000                                       u9961 3BC2  
                                     u9890 3008                                       u9970 14CA  
                                     u9971 14C6                                       u9980 1512  
                                     u9981 150E                                       u9990 154C  
                                     u9991 1548       comportamientoBasico@caminoEncontrado 0139  
                                     abs@a 0018                                       _dbuf 013D  
                                     _atoi 2EC6                                       _main 3F94  
                                     _dtoa 2662                                       _prec 0134  
                                     _nout 0130                                       pad@i 001D  
                __end_of_probarUltrasonico 3B14                                       pad@p 001A  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     indf0 000FEF                                       fsr2h 000FDA  
                                     fsr0l 000FE9                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 001F  
                                     map@x 0020                                       fsr2l 000FD9  
                                     btemp 005A                              ___fpclassifyf 393A  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 000E                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 0049                               _tolower$1519 0012  
                            __CFG_MCLRE$ON 000000                              ?_leerSensores 0001  
                             ___param_bank 000000                                      ??_abs 001A  
                                    ??_map 0034                                      ??_pad 001C  
                            __CFG_PLLDIV$1 000000                             __CFG_CCP2MX$ON 000000  
                            ___fltol@sign1 007D                            __end_of___aldiv 372C  
                          __end_of___aodiv 31DE                                      ?_atoi 000D  
                          __end_of___fladd 1E9C                                      ?_main 0001  
                                    ?_dtoa 0021                            __end_of___aomod 34BE  
                          __end_of___fldiv 2662                            __end_of___awdiv 3D78  
                          __end_of___flneg 47B0                                      STR_10 08CC  
                                    STR_11 0827                                      STR_20 08E2  
                                    STR_12 08D2                                      STR_13 08DA  
                                    STR_22 08E2                                      STR_16 08D6  
                                    STR_17 08DE                            __end_of___awmod 3EEA  
                          __end_of___flmul 22C8                            __end_of___flsub 4634  
                          __end_of___fltol 3834                                      u10000 15F6  
                                    u10001 15F0                                      u10010 15F8  
                                    u10100 18A6                                      u10020 160E  
                                    u10021 160A                                      u10110 18BC  
                                    u10030 1640                                      u10111 18B8  
                                    u10031 163C                                      u10200 370A  
                                    u10120 1958                                      u10040 1682  
                                    u10201 3706                                      u10121 1954  
                                    u10041 167E                                      u10130 429A  
                                    u10210 487E                                      u10050 16D8  
                                    u10131 4296                                      u10211 487A  
                                    u10051 16D4                                      u10300 2E2E  
                                    u10140 42D4                                      u10060 16FC  
                                    u10220 4272                                      u10301 2E2A  
                                    u10141 42D0                                      u10061 16F8  
                                    u10221 426E                                      u10150 3632  
                                    u10230 4148                                      u10310 2E4C  
                                    u10070 178E                                      u10151 362E  
                                    u10231 4144                                      u10311 2E48  
                                    u10071 178A                                      u10160 3654  
                                    u10240 4166                                      u10320 2E5C  
                                    u10400 34FC                                      u10080 183C  
                                    u10161 3650                                      u10241 4162  
                                    u10321 2E58                                      u10401 34F8  
                                    u10081 1838                                      u10170 368E  
                                    u10250 4182                                      u10330 2E6A  
                                    u10410 350A                                      u10090 18A4  
                                    u10171 368A                                      u10251 417E  
                                    u10331 2E66                                      u10411 3506  
                                    u10091 189E                                      u10180 36B0  
                                    u10340 2EA4                                      u10260 2D24  
                                    u10420 351C                                      u10500 4392  
                                    u10181 36AC                                      u10341 2EA0  
                                    u10261 2D20                                      u10421 3518  
                                    u10190 36D8                                      u10350 2EB2  
                                    u10270 2D32                                      u10430 352C  
                                    u10510 43A2                                      u10191 36D4  
                                    u10351 2EAE                                      u10271 2D2E  
                                    u10431 3528                                      u10511 439E  
                                    u10280 2D8E                                      u10440 353A  
                                    u10360 2BD6                                      u10520 4664  
                                    u10281 2D8A                                      u10441 3536  
                                    u10361 2BD2                                      u10521 4660  
                                    u10290 2DE4                                      u10450 354C  
                                    u10530 406C                                      u10291 2DE0  
                                    u10451 3548                                      u10507 4388  
                                    u11307 3B04                                      u10531 4068  
                                    u10460 355C                            ___awdiv@divisor 0008  
                                    u10461 3558                                      u11317 4638  
                                    u10470 356A                                      u10390 34EC  
                                    u10471 3566                                      u10391 34E8  
                                    u11327 34D4                                      u10375 2C70  
                                    u10480 35B0                                      u10376 2C7A  
                                    u11280 3FFA                                      _T1CON 000FCD  
                                    u10481 35AC                                      u10385 2CB4  
                                    u10377 2C8A                                      u11281 3FF6  
                                    u10386 2CBE                                      u10490 436A  
                                    u11290 400C                                      u10387 2CCE  
                                    u11291 4008                                      u10497 4360  
                                    _LATB4 007C54                                      _LATB5 007C55  
                                    _LATD2 007C62                                      _LATB6 007C56  
                                    _LATD3 007C63                                      _LATB7 007C57  
                          __end_of___lwdiv 41A2                                      i2l301 4414  
                                    i2l306 4456                                      i2l262 44A0  
                                    i2l264 44A8                                      i2l298 4406  
                             main@iniciado 0266                            ___awdiv@counter 000A  
                                    _RCREG 000FAE                               vfpfcnvrt@fmt 00C7  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _SPBRG 000FAF                              __CFG_USBDIV$1 000000  
                                    _TXREG 000FAD                              __CFG_PWRT$OFF 000000  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                        ___lmul@multiplicand 000A  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                       __size_of_UART_init 0070                                      _flags 0055  
                                    _boton 0008                                      _fputc 3BEA  
                                    _fputs 467A                            __end_of_isdigit 47E8  
                                    _pausa 01FD                                      _mouse 0057  
                              ?_UART_write 0001                                      atoi@n 001A  
                                    pad@fp 0016                                      atoi@s 000D  
                                    _width 0132                                      _putch 488A  
                                    _toint 0801                                      dtoa@d 0023  
                                    dtoa@i 0043                                      dtoa@n 003B  
                                    dtoa@p 0035                                      dtoa@s 0039  
                                    dtoa@w 0037                            __end_of_isspace 4550  
                          __end_of_isupper 4778                                      tablat 000FF5  
                         ??_probarSensores 0055                            __end_of_pwmDuty 2D12  
                                    ttemp5 005B                                      ttemp6 005E  
                                    ttemp7 0062                                      status 000FD8  
                                    wtemp8 005B                            __end_of_sprintf 44FE  
                           ?___fpclassifyf 0006                            __end_of_tolower 4346  
                          __end_of_strncmp 3BEA                             __CFG_ICPRT$OFF 000000  
                           ??_leerSensores 0051                            __initialization 46BE  
                         ??_dameLecturaAdc 0008                               __end_of_atoi 3056  
                             __end_of_main 402A                               __end_of_dtoa 2940  
                          ??_configurarAdc 0006                        dameDistancia@conteo 0026  
                   dameDistancia@distancia 0022                                     ??_atoi 000F  
                                   ??_main 0055                                     ??_dtoa 002B  
      comportamientoBasico@caminosRecorrer 01F1                              __activetblptr 000002  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_boton 0001                                     _CCP1M2 007DEA  
                                   _CCP1M3 007DEB                                     _CCP2M2 007DD2  
                                   _CCP2M3 007DD3                                     ?_fputc 0006  
                                   ?_fputs 000F                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _CCPR1L 000FBE  
                                   _CCPR2L 000FBB                           ___awdiv@dividend 0006  
                                   ?_putch 0001                                     _INT0IF 007F91  
                                   i2l6110 4402                                     i2l6112 4422  
                                   i2l6116 4434                                     i2l6220 4484  
                                   i2l6212 445A                                     i2l6222 4486  
                                   i2l6214 4468                                     i2l6224 44A2  
                                   i2l6216 446E                                     i2l6226 44A6  
                                   i2l6218 4480                                     i2l9796 4448  
                                   _TMR1IF 007CF0                                     _TMR1ON 007E68  
                                   _TMR2ON 007E52                                     _TRISB0 007C98  
                                   _TRISB1 007C99                                     _TRISB2 007C9A  
                                   _TRISC1 007CA1                                     _TRISB3 007C9B  
                                   _TRISC2 007CA2                                     _TRISB4 007C9C  
                                   _TRISB5 007C9D                                     _TRISB6 007C9E  
                                   _TRISD3 007CAB                                     _TRISB7 007C9F  
                                   _TRISC6 007CA6                                     _TRISC7 007CA7  
               __size_of_probarUltrasonico 00DC                           __end_of___xxtofl 2EC6  
                           __CFG_XINST$OFF 000000         comportamientoBasico@numMovimientos 01F9  
                             vfprintf@cfmt 00E9                  dameDistancia@numeroSensor 0021  
                                   ___flge 3834                                     ___fleq 3EEA  
                                   ___lmul 427C                                  ??___aldiv 001A  
                                ??___aodiv 0016                                  ??___fladd 0030  
                                ??___aomod 0016                                     ___wmul 481E  
                        __end_of_UART_init 4212                                  ??___fldiv 0040  
                                ??___awdiv 000A                                  ??___flneg 000A  
       comportamientoBasico@espejearCarroY 013C                                  ??___awmod 000A  
                                ??___flmul 0051                                  ??___flsub 0055  
                                ??___fltol 0079                                     _efgtoa 08E6  
                                ??___lwdiv 000A                                     _buffer 01BF  
                                   _floorf 2940                        __size_of_UART_write 0016  
                             ?_UART_printf 0007                                     clear_0 46D6  
                                   clear_1 46E2                           ___awdiv@quotient 000C  
                          ___awmod@divisor 0008                            ___awmod@counter 000A  
                                   pad@buf 0018                                     dtoa@fp 0021  
                                   _strcpy 43A4                                     _strlen 47E8  
                        _oldSensorEnfrente 0118                                     fputc@c 0006  
                                   fputs@c 0013                                     fputs@i 0014  
                                   fputs@s 000F                                  ??_isdigit 0008  
                          ___fpclassifyf@e 000E                            ___fpclassifyf@u 0010  
                          ___fpclassifyf@x 0006                               __mediumconst 0000  
                                ??_isspace 0008                                     tblptrh 000FF7  
                                ??_isupper 0008                                     tblptrl 000FF6  
                                   tblptru 000FF8                                  ??_pwmDuty 0082  
                                   putch@c 0001                           __end_of_vfprintf 427C  
                                ??_sprintf 0055                                  ??_tolower 000E  
                                ??_strncmp 000C                                 ___flge@ff1 0075  
                        _velocidadEstandar 4844                            ??___fpclassifyf 000A  
                               ___flge@ff2 0079                               ___xxtofl@arg 0017  
                             ___xxtofl@exp 0016                               ___xxtofl@val 000D  
                               ___fleq@ff1 0006                                 ___fleq@ff2 000A  
                               __accesstop 0060                    __end_of__initialization 46F2  
                          __CFG_PBADEN$OFF 000000                                 ___flneg@f1 0006  
                          __CFG_FOSC$XT_XT 000000                         ?_velocidadEstandar 0001  
                            ___rparam_used 000001                                 ___fltol@f1 0075  
                   __size_of_dameDistancia 0162                             __pcstackCOMRAM 0001  
                      ??_velocidadEstandar 0055                               __pidataBANK1 488C  
                          _sensorIzquierda 0128                              __end_of_boton 44AC  
                            __end_of_fputc 3CB4                              __end_of_fputs 46BE  
                            __end_of_putch 488C                              __end_of_toint 0805  
comportamientoBasico@numMovimientosTotales 01F8  comportamientoBasico@movimientosRealizados 018D  
                     __end_of_leerSensores 335A                         __size_of_configPwm 0050  
                                PID@difAnt 0136                  __end_of_velocidadEstandar 486A  
                                  ??_boton 0004                                    ??_fputc 000A  
                                  ??_fputs 0013                                    ??_putch 0006  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                               _efgtoa$891 0095                                 _efgtoa$886 0091  
                               _efgtoa$895 0097                                 _efgtoa$887 0093  
                               _efgtoa$896 0099                                 _efgtoa$897 009B  
                                  ?___flge 0075                                    ?___fleq 0006  
                                  ?___lmul 0006                                    ?___wmul 0006  
                                  ?_efgtoa 0081                                    _CCP1CON 000FBD  
                                  _CCP2CON 000FBA                                    ?_floorf 0051  
                           ___lmul@product 000E     decidirDireccion@cambioOrientacionCarro 0138  
                               _antiRebote 4400                                    ?_strcpy 0006  
                                  ?_strlen 0006                                    _T2CKPS0 007E50  
                                  _T2CKPS1 007E51                                  ?___xxtofl 000D  
                            _dameDistancia 34BE                         __size_of_vfpfcnvrt 0536  
                             ??_UART_write 0006                            __CFG_VREGEN$OFF 000000  
comportamientoBasico@contCaminosRecorridos 01F5                                    __Hparam 0000  
                                  __Lparam 0000                          __end_of_configPwm 45A0  
                                  ___aldiv 3620                            __size_of___flge 0106  
                          __size_of___fleq 00AA                                    ___aodiv 3056  
                                  ___fladd 19DC                                    ___aomod 335A  
                                  ___fldiv 22C8                                    ___awdiv 3CB4  
                                  ___flneg 4778                            __size_of___lmul 006A  
                                  ___awmod 3E3A                                    ___flmul 1E9C  
                                  ___flsub 45EC                                    ___fltol 372C  
                          __size_of___wmul 0026                                    ___lwdiv 412E  
                                ?_vfprintf 00E3                               __psmallconst 0800  
                          __size_of_efgtoa 0BC0                            __CFG_STVREN$OFF 000000  
                          __size_of_floorf 0216                                    __pcinit 46BE  
                                  __ramtop 0800                         __end_of_UART_write 4880  
                                  __ptext0 3F94                                    __ptext1 402A  
                                  __ptext2 3A38                                    __ptext3 44AC  
                                  __ptext4 4212                                    __ptext5 14A6  
                                  __ptext6 3B14                                    __ptext7 08E6  
                                  __ptext8 42E6                                    __ptext9 4740  
                          __size_of_strcpy 005C                            __size_of_strlen 0036  
                     __size_of_UART_printf 005E                               __size_of_abs 0040  
                             __size_of_map 007A                               __size_of_pad 00C2  
                                  _isdigit 47B0                                 ??___xxtofl 0011  
                         ___awmod@dividend 0006                             ?_dameDistancia 001B  
                         ___aldiv@dividend 0012                                    _isspace 44FE  
                                  _isupper 4740                                    efgtoa@c 0087  
                                  efgtoa@d 00A5                                    efgtoa@e 00BD  
                                  efgtoa@f 0083                                    efgtoa@g 00B9  
                                  efgtoa@h 00AF                                    efgtoa@i 00B7  
                                  efgtoa@l 00B3                                    efgtoa@m 00A1  
                                  efgtoa@n 00BF                                    efgtoa@p 00A9  
                                  efgtoa@t 009D                                    efgtoa@u 00C1  
                                  efgtoa@w 00AC                                    _pwmDuty 2B56  
                                  atoi@neg 0013                 __size_of_velocidadEstandar 0026  
                                  _sprintf 44AC                                    _tolower 42E6  
                                  _strncmp 3B14                             __pintcode_body 4458  
                     end_of_initialization 46F2                                    floorf@e 006A  
                                  floorf@m 0066                                    floorf@u 006C  
                                  floorf@x 0051                                    fputc@fp 0008  
                            __Lmediumconst 0000                                    int_func 4458  
                                  fputs@fp 0011                                  i2u1133_47 4490  
                                i2u1134_47 4428                          __end_of_vfpfcnvrt 19DC  
                               efgtoa@mode 00AE                                 efgtoa@sign 00A7  
                                _RCSTAbits 000FAB                           ___aldiv@quotient 001C  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                               ??_vfprintf 0055                      __end_of_configurarAdc 488A  
                                  strcpy@d 000E                                    strlen@a 0008  
                                  strcpy@s 000C                                    strlen@s 0006  
                              ?_antiRebote 0001                                  _PORTBbits 000F81  
                                _UART_init 41A2                      __size_of_leerSensores 017C  
                              ___fladd@grs 0037                                pwmDuty@duty 0087  
                            ___xxtofl@sign 0015                                  _TRISDbits 000F95  
                              ___fldiv@grs 004B                         _oldSensorIzquierda 011C  
                              ___fldiv@rem 0044       comportamientoBasico@posicionInvCruce 01F6  
                               map@out_max 0030                                 map@out_min 002C  
                              ___flmul@grs 006A                             _UART_init$1758 0028  
                                _TXSTAbits 000FAC                               _leerSensores 31DE  
                  __size_of_probarSensores 008A                             __end_of___flge 393A  
                           __end_of___fleq 3F94                             __end_of___lmul 42E6  
                              vfpfcnvrt@ap 00C9                                vfpfcnvrt@ct 00DF  
                              vfpfcnvrt@fp 00C5                                vfpfcnvrt@ll 00CF  
                           __end_of___wmul 4844                             __end_of_efgtoa 14A6  
                           __end_of_floorf 2B56                                 ?_UART_init 0020  
                               floorf@F524 0104                            ??_dameDistancia 001F  
    comportamientoBasico@investigandoCruce 01F7                    __size_of_dameLecturaAdc 0046  
                           __end_of_strcpy 4400                             __end_of_strlen 481E  
                      start_initialization 46BE                                __end_of_abs 4740  
                              __end_of_map 412E                                __end_of_pad 3E3A  
                      __size_of_antiRebote 0058                      __end_of___fpclassifyf 3A38  
                      pwmDuty@cicloTrabajo 007F                                vfprintf@fmt 00E5  
                                 ??___flge 007D                                   ??___fleq 000E  
                                 ??___lmul 000E                                   ??___wmul 000A  
                         _oldSensorDerecha 0120                 comportamientoBasico@mapear 013B  
                           _sensorEnfrente 0124                                   ??_efgtoa 0088  
                              __pdataBANK1 01FD                                   ??_floorf 0060  
                         __CFG_LPT1OSC$OFF 000000                                   ??_strcpy 000A  
                                 ??_strlen 0008                                  ___fladd@a 002C  
                                ___fladd@b 0028                                  ___fldiv@a 003C  
                                ___fldiv@b 0038                               _llegoDestino 0059  
                                ___flmul@a 0064                                  ___flmul@b 0060  
                              __pbssCOMRAM 0055                                  ___flsub@a 0079  
                                ___flsub@b 0075           comportamientoBasico@caminoActual 01F4  
                            __pcstackBANK0 0060                              __pcstackBANK1 01FB  
                            __pcstackBANK2 0264                           ___aodiv@dividend 0006  
                        __size_of___xxtofl 01B4                          UART_printf@cadena 0007  
                                _atoi$1390 0019                                  _atoi$1391 0017  
                                _atoi$1389 0015                  _DISTANCIA_PRIORIDAD_MEDIA 0110  
        probarSensores@lecturaSensorOptico 01FB                           ___lwdiv@dividend 0006  
                                __pintcode 0008                                   ?___aldiv 0012  
                                 ?___aodiv 0006                                   ?___fladd 0028  
                                 ?___aomod 0006                                   ?___fldiv 0038  
                                 ?___awdiv 0006                           ___aodiv@quotient 0018  
                                 ?___flneg 0006                                   ?___awmod 0006  
                                 ?___flmul 0060                                   ?___flsub 0075  
                                 ?___fltol 0075                                   ?___lwdiv 0006  
                                _configPwm 4550                                ??_UART_init 0024  
                        __size_of_vfprintf 006A                                __smallconst 0800  
                                 ?_isdigit 0006                                   ?_isspace 0006  
                                 ?_isupper 0006                                   ?_pwmDuty 007F  
                         ___lwdiv@quotient 000B              probarUltrasonico@numeroSensor 00FF  
                           __size_of_boton 44A4                                   ?_sprintf 00EB  
                                 ?_tolower 000C                             __size_of_fputc 00CA  
                           __size_of_fputs 0044                                   ?_strncmp 0006  
                           __size_of_putch 0002                            ___aldiv@divisor 0016  
                          ___aldiv@counter 001A                             ___wmul@product 000A  
                                 i2u671_40 4414                                   i2u671_41 4410  
                                 i2u672_40 4422                                   i2u680_40 4480  
                                 i2u672_41 441E                                   i2u680_41 447C  
                                 i2u679_40 4468                                   i2u679_41 4464  
                           _probarSensores 402A                           __CFG_WDTPS$32768 000000  
                            ??_UART_printf 0009                               ??_antiRebote 0001  
                                _vfpfcnvrt 14A6                                 ?_configPwm 0001  
                                map@in_max 0028                                  map@in_min 0024  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0006  
                         configPwm@channel 0008                             _dameLecturaAdc 4634  
                           UART_write@dato 0006                               _isspace$1420 000C  
                               vfpfcnvrt@c 00E2                                 vfpfcnvrt@f 00DB  
                        ___lmul@multiplier 0006                                _INTCON2bits 000FF1  
                       __end_of_antiRebote 4458                                 roundf@F525 0100  
                   __end_of_probarSensores 40B4                                   __Hrparam 0000  
                            UART_init@BAUD 0020                              _sensorDerecha 012C  
                               vfprintf@ap 00E7                                   __Lrparam 0000  
                               vfprintf@fp 00E3                           __size_of___aldiv 010C  
                         __size_of___aodiv 0188                           __size_of___fladd 04C0  
                         __size_of___aomod 0164                           __size_of___fldiv 039A  
                         __size_of___awdiv 00C4                           __size_of___flneg 0038  
                         __size_of___awmod 00B0                           __size_of___flmul 042C  
                         __size_of___flsub 0048                           __size_of___fltol 0108  
                               ?_vfpfcnvrt 00C5                           __size_of___lwdiv 0074  
                   __end_of_dameLecturaAdc 467A                            ___aodiv@divisor 000E  
                          ___aodiv@counter 0016                         ___fpclassifyf@F463 0108  
                               sprintf@fmt 00ED                                   ___xxtofl 2D12  
                      __end_of_UART_printf 43A4                           __size_of_isdigit 0038  
                                 _dtoa$862 0033                            ___lwdiv@divisor 0008  
                         __size_of_isspace 0052                            ___lwdiv@counter 000A  
                                 __ptext10 43A4                                   __ptext11 2940  
                                 __ptext20 3D78                                   __ptext12 393A  
                                 __ptext21 47E8                                   __ptext13 45EC  
                                 __ptext30 47B0                                   __ptext22 467A  
                                 __ptext14 4778                                   __ptext31 481E  
                                 __ptext23 3BEA                                   __ptext15 3834  
                                 __ptext40 40B4                                   __ptext32 4346  
                                 __ptext24 488A                                   __ptext16 3EEA  
                                 __ptext41 427C                                   __ptext33 486A  
                                 __ptext25 4700                                   __ptext17 3E3A  
                                 __ptext50 41A2                                   __ptext42 372C  
                                 __ptext34 31DE                                   __ptext26 335A  
                                 __ptext18 3CB4                                   __ptext51 3620  
                                 __ptext43 1E9C                                   __ptext35 19DC  
                                 __ptext27 3056                                   __ptext19 2662  
                                 __ptext44 22C8                                   __ptext36 4634  
                                 __ptext28 2EC6                                   __ptext53 4400  
                                 __ptext45 34BE                                   __ptext37 45A0  
                                 __ptext29 44FE                                   __ptext46 2D12  
                                 __ptext38 4844                                   __ptext47 412E  
                                 __ptext39 2B56                                   __ptext48 4880  
                                 __ptext49 4550                           __size_of_isupper 0038  
                         __size_of_pwmDuty 01BC    __end_of_inicializarComportamientoBasico 45EC  
 __size_of_inicializarComportamientoBasico 004C          ??_inicializarComportamientoBasico 0055  
         ?_inicializarComportamientoBasico 0001            _inicializarComportamientoBasico 45A0  
                         __size_of_sprintf 0052                           __size_of_tolower 0060  
                            antiRebote@pin 0003                                 strcpy@dest 0006  
                         __size_of_strncmp 00D6         comportamientoBasico@cruceDetectado 013A  
                   __size_of_configurarAdc 000A                              __size_of_atoi 0190  
                            __size_of_main 0096                              __size_of_dtoa 02DE  
                          ?_probarSensores 0001                                   efgtoa@fp 0081  
                                 efgtoa@ne 00A3                                   efgtoa@pp 009F  
                                 efgtoa@ou 008D                                   int$flags 005A  
                  dameLecturaAdc@canalLeer 000A                                   _vfprintf 4212  
                              ??_configPwm 0006                            ?_dameLecturaAdc 0006  
                         ___aomod@dividend 0006                      __CFG_CPUDIV$OSC1_PLL2 000000  
                               _INTCONbits 000FF2                      __end_of_dameDistancia 3620  
                                 isdigit@c 0006                                   intlevel2 0000  
                                sprintf@ap 00F5                                   isspace@c 0006  
                                strcpy@src 0008                                   isupper@c 0006  
                                strncmp@_l 0006                                  strncmp@_r 0008  
                              efgtoa@nmode 00AB                            ___aomod@divisor 000E  
                              ??_vfpfcnvrt 00CB                            ___aomod@counter 0016  
                            _vfpfcnvrt$911 00D7                              _vfpfcnvrt$916 00D9  
                              _UART_printf 4346                              _configurarAdc 4880  
                           pwmDuty@channel 0081                                   sprintf@f 00F7  
                                 tolower@c 000C                                   sprintf@s 00EB  
                   __size_of___fpclassifyf 00FE                                   strncmp@l 000D  
                                 strncmp@n 000A                                   strncmp@r 000F  
       comportamientoBasico@carroEspejeado 01FA                               ___aldiv@sign 001B  
                            ___fladd@signs 0034                                 _UART_write 486A  
                             ___aodiv@sign 0017                               ___fladd@aexp 0035  
                             ___fladd@bexp 0036                               ___aomod@sign 0017  
                        _probarUltrasonico 3A38  
