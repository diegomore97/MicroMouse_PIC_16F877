

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Aug 10 16:02:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           ; Version 2.10
    75                           ; Generated 31/07/2019 GMT
    76                           ; 
    77                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK1
   110  004840                     __pidataBANK1:
   111                           	opt callstack 0
   112                           
   113                           ;initializer for _pausa
   114  004840  01                 	db	1
   115                           
   116                           	psect	smallconst
   117  000800                     __psmallconst:
   118                           	opt callstack 0
   119  000800  00                 	db	0
   120  000801  0000               	dw	0
   121  000803  4B00               	dw	19200
   122  000805                     __end_of_toint:
   123                           	opt callstack 0
   124  0000                     _T1CON	set	4045
   125  0000                     _TRISDbits	set	3989
   126  0000                     _INTCON2bits	set	4081
   127  0000                     _INTCONbits	set	4082
   128  0000                     _ADRESL	set	4035
   129  0000                     _ADRESH	set	4036
   130  0000                     _ADCON0bits	set	4034
   131  0000                     _ADCON2	set	4032
   132  0000                     _ADCON1	set	4033
   133  0000                     _TXREG	set	4013
   134  0000                     _RCREG	set	4014
   135  0000                     _RCSTAbits	set	4011
   136  0000                     _TXSTAbits	set	4012
   137  0000                     _SPBRG	set	4015
   138  0000                     _PORTBbits	set	3969
   139  0000                     _TMR1L	set	4046
   140  0000                     _TMR1H	set	4047
   141  0000                     _PR2	set	4043
   142  0000                     _CCP2CON	set	4026
   143  0000                     _CCPR2L	set	4027
   144  0000                     _CCP1CON	set	4029
   145  0000                     _CCPR1L	set	4030
   146  0000                     _TRISB0	set	31896
   147  0000                     _TRISB7	set	31903
   148  0000                     _TRISB6	set	31902
   149  0000                     _TRISB5	set	31901
   150  0000                     _TRISB4	set	31900
   151  0000                     _TRISB3	set	31899
   152  0000                     _TRISB2	set	31898
   153  0000                     _TRISB1	set	31897
   154  0000                     _TRISD3	set	31915
   155  0000                     _LATB7	set	31831
   156  0000                     _LATB6	set	31830
   157  0000                     _LATB5	set	31829
   158  0000                     _LATB4	set	31828
   159  0000                     _LATD2	set	31842
   160  0000                     _INT0IF	set	32657
   161  0000                     _RCIF	set	31989
   162  0000                     _TRISC7	set	31911
   163  0000                     _TRISC6	set	31910
   164  0000                     _TMR1IF	set	31984
   165  0000                     _TMR1ON	set	32360
   166  0000                     _LATD3	set	31843
   167  0000                     _TMR2ON	set	32338
   168  0000                     _CCP2M2	set	32210
   169  0000                     _CCP2M3	set	32211
   170  0000                     _TRISC1	set	31905
   171  0000                     _CCP1M2	set	32234
   172  0000                     _CCP1M3	set	32235
   173  0000                     _TRISC2	set	31906
   174  0000                     _T2CKPS1	set	32337
   175  0000                     _T2CKPS0	set	32336
   176  000805                     STR_3:
   177  000805  0D                 	db	13
   178  000806  4C                 	db	76	;'L'
   179  000807  65                 	db	101	;'e'
   180  000808  63                 	db	99	;'c'
   181  000809  74                 	db	116	;'t'
   182  00080A  75                 	db	117	;'u'
   183  00080B  72                 	db	114	;'r'
   184  00080C  61                 	db	97	;'a'
   185  00080D  20                 	db	32
   186  00080E  64                 	db	100	;'d'
   187  00080F  65                 	db	101	;'e'
   188  000810  20                 	db	32
   189  000811  73                 	db	115	;'s'
   190  000812  65                 	db	101	;'e'
   191  000813  6E                 	db	110	;'n'
   192  000814  73                 	db	115	;'s'
   193  000815  6F                 	db	111	;'o'
   194  000816  72                 	db	114	;'r'
   195  000817  20                 	db	32
   196  000818  4F                 	db	79	;'O'
   197  000819  70                 	db	112	;'p'
   198  00081A  74                 	db	116	;'t'
   199  00081B  69                 	db	105	;'i'
   200  00081C  63                 	db	99	;'c'
   201  00081D  6F                 	db	111	;'o'
   202  00081E  20                 	db	32
   203  00081F  3D                 	db	61	;'='
   204  000820  20                 	db	32
   205  000821  25                 	db	37
   206  000822  64                 	db	100	;'d'
   207  000823  0D                 	db	13
   208  000824  0A                 	db	10
   209  000825  0A                 	db	10
   210  000826  00                 	db	0
   211  000827                     STR_2:
   212  000827  0D                 	db	13
   213  000828  44                 	db	68	;'D'
   214  000829  65                 	db	101	;'e'
   215  00082A  73                 	db	115	;'s'
   216  00082B  74                 	db	116	;'t'
   217  00082C  69                 	db	105	;'i'
   218  00082D  6E                 	db	110	;'n'
   219  00082E  6F                 	db	111	;'o'
   220  00082F  20                 	db	32
   221  000830  6E                 	db	110	;'n'
   222  000831  6F                 	db	111	;'o'
   223  000832  20                 	db	32
   224  000833  64                 	db	100	;'d'
   225  000834  65                 	db	101	;'e'
   226  000835  74                 	db	116	;'t'
   227  000836  65                 	db	101	;'e'
   228  000837  63                 	db	99	;'c'
   229  000838  74                 	db	116	;'t'
   230  000839  61                 	db	97	;'a'
   231  00083A  64                 	db	100	;'d'
   232  00083B  6F                 	db	111	;'o'
   233  00083C  20                 	db	32
   234  00083D  0D                 	db	13
   235  00083E  0A                 	db	10
   236  00083F  00                 	db	0
   237  000840                     STR_1:
   238  000840  0D                 	db	13
   239  000841  53                 	db	83	;'S'
   240  000842  65                 	db	101	;'e'
   241  000843  20                 	db	32
   242  000844  6C                 	db	108	;'l'
   243  000845  6C                 	db	108	;'l'
   244  000846  65                 	db	101	;'e'
   245  000847  67                 	db	103	;'g'
   246  000848  6F                 	db	111	;'o'
   247  000849  20                 	db	32
   248  00084A  61                 	db	97	;'a'
   249  00084B  6C                 	db	108	;'l'
   250  00084C  20                 	db	32
   251  00084D  64                 	db	100	;'d'
   252  00084E  65                 	db	101	;'e'
   253  00084F  73                 	db	115	;'s'
   254  000850  74                 	db	116	;'t'
   255  000851  69                 	db	105	;'i'
   256  000852  6E                 	db	110	;'n'
   257  000853  6F                 	db	111	;'o'
   258  000854  20                 	db	32
   259  000855  0D                 	db	13
   260  000856  0A                 	db	10
   261  000857  00                 	db	0
   262  000858                     STR_5:
   263  000858  0D                 	db	13
   264  000859  49                 	db	73	;'I'
   265  00085A  7A                 	db	122	;'z'
   266  00085B  71                 	db	113	;'q'
   267  00085C  75                 	db	117	;'u'
   268  00085D  69                 	db	105	;'i'
   269  00085E  65                 	db	101	;'e'
   270  00085F  72                 	db	114	;'r'
   271  000860  64                 	db	100	;'d'
   272  000861  61                 	db	97	;'a'
   273  000862  3A                 	db	58	;':'
   274  000863  20                 	db	32
   275  000864  25                 	db	37
   276  000865  2E                 	db	46
   277  000866  32                 	db	50	;'2'
   278  000867  66                 	db	102	;'f'
   279  000868  0D                 	db	13
   280  000869  0A                 	db	10
   281  00086A  00                 	db	0
   282  00086B                     STR_4:
   283  00086B  0D                 	db	13
   284  00086C  45                 	db	69	;'E'
   285  00086D  6E                 	db	110	;'n'
   286  00086E  66                 	db	102	;'f'
   287  00086F  72                 	db	114	;'r'
   288  000870  65                 	db	101	;'e'
   289  000871  6E                 	db	110	;'n'
   290  000872  74                 	db	116	;'t'
   291  000873  65                 	db	101	;'e'
   292  000874  3A                 	db	58	;':'
   293  000875  20                 	db	32
   294  000876  25                 	db	37
   295  000877  2E                 	db	46
   296  000878  32                 	db	50	;'2'
   297  000879  66                 	db	102	;'f'
   298  00087A  0D                 	db	13
   299  00087B  0A                 	db	10
   300  00087C  00                 	db	0
   301  00087D                     STR_6:
   302  00087D  0D                 	db	13
   303  00087E  44                 	db	68	;'D'
   304  00087F  65                 	db	101	;'e'
   305  000880  72                 	db	114	;'r'
   306  000881  65                 	db	101	;'e'
   307  000882  63                 	db	99	;'c'
   308  000883  68                 	db	104	;'h'
   309  000884  61                 	db	97	;'a'
   310  000885  3A                 	db	58	;':'
   311  000886  20                 	db	32
   312  000887  25                 	db	37
   313  000888  2E                 	db	46
   314  000889  32                 	db	50	;'2'
   315  00088A  66                 	db	102	;'f'
   316  00088B  0D                 	db	13
   317  00088C  0A                 	db	10
   318  00088D  00                 	db	0
   319  00088E                     STR_7:
   320  00088E  49                 	db	73	;'I'
   321  00088F  4E                 	db	78	;'N'
   322  000890  46                 	db	70	;'F'
   323  000891  00                 	db	0
   324  000892                     STR_11:
   325  000892  4E                 	db	78	;'N'
   326  000893  41                 	db	65	;'A'
   327  000894  4E                 	db	78	;'N'
   328  000895  00                 	db	0
   329  000896                     STR_8:
   330  000896  69                 	db	105	;'i'
   331  000897  6E                 	db	110	;'n'
   332  000898  66                 	db	102	;'f'
   333  000899  00                 	db	0
   334  00089A                     STR_12:
   335  00089A  6E                 	db	110	;'n'
   336  00089B  61                 	db	97	;'a'
   337  00089C  6E                 	db	110	;'n'
   338  00089D  00                 	db	0
   339  00089E                     STR_15:
   340  00089E  6C                 	db	108	;'l'
   341  00089F  66                 	db	102	;'f'
   342  0008A0  00                 	db	0
   343  0000                     
   344                           ; #config settings
   345  0008A1  00                 	db	0	; dummy byte at the end
   346  0000                     
   347                           	psect	cinit
   348  0046B8                     __pcinit:
   349                           	opt callstack 0
   350  0046B8                     start_initialization:
   351                           	opt callstack 0
   352  0046B8                     __initialization:
   353                           	opt callstack 0
   354                           
   355                           ; Initialize objects allocated to BANK1 (1 bytes)
   356                           ; load TBLPTR registers with __pidataBANK1
   357  0046B8  0E40               	movlw	low __pidataBANK1
   358  0046BA  6EF6               	movwf	tblptrl,c
   359  0046BC  0E48               	movlw	high __pidataBANK1
   360  0046BE  6EF7               	movwf	tblptrh,c
   361  0046C0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   362  0046C2  6EF8               	movwf	tblptru,c
   363  0046C4  0009               	tblrd		*+	;fetch initializer
   364  0046C6  CFF5 F1FB          	movff	tablat,__pdataBANK1
   365                           
   366                           ; Clear objects allocated to BANK1 (246 bytes)
   367  0046CA  EE01  F000         	lfsr	0,__pbssBANK1
   368  0046CE  0EF6               	movlw	246
   369  0046D0                     clear_0:
   370  0046D0  6AEE               	clrf	postinc0,c
   371  0046D2  06E8               	decf	wreg,f,c
   372  0046D4  E1FD               	bnz	clear_0
   373                           
   374                           ; Clear objects allocated to BANK0 (2 bytes)
   375  0046D6  0100               	movlb	0
   376  0046D8  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
   377  0046DA  6BFE               	clrf	__pbssBANK0& (0+255),b
   378                           
   379                           ; Clear objects allocated to COMRAM (5 bytes)
   380  0046DC  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   381  0046DE  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   382  0046E0  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   383  0046E2  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   384  0046E4  6A55               	clrf	__pbssCOMRAM& (0+255),c
   385  0046E6                     end_of_initialization:
   386                           	opt callstack 0
   387  0046E6                     __end_of__initialization:
   388                           	opt callstack 0
   389  0046E6  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   390  0046E8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   391  0046EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   392  0046EC  6EF8               	movwf	tblptru,c
   393  0046EE  0100               	movlb	0
   394  0046F0  EFA8  F01F         	goto	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMRAM
   397  000055                     __pbssCOMRAM:
   398                           	opt callstack 0
   399  000055                     _prec:
   400                           	opt callstack 0
   401  000055                     	ds	2
   402  000057                     _flags:
   403                           	opt callstack 0
   404  000057                     	ds	2
   405  000059                     comportamientoBasico@numMovimientos:
   406                           	opt callstack 0
   407  000059                     	ds	1
   408                           
   409                           	psect	bssBANK0
   410  0000FE                     __pbssBANK0:
   411                           	opt callstack 0
   412  0000FE                     _mouse:
   413                           	opt callstack 0
   414  0000FE                     	ds	2
   415                           
   416                           	psect	bssBANK1
   417  000100                     __pbssBANK1:
   418                           	opt callstack 0
   419  000100                     roundf@F525:
   420                           	opt callstack 0
   421  000100                     	ds	4
   422  000104                     floorf@F524:
   423                           	opt callstack 0
   424  000104                     	ds	4
   425  000108                     ___fpclassifyf@F463:
   426                           	opt callstack 0
   427  000108                     	ds	4
   428  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   429                           	opt callstack 0
   430  00010C                     	ds	4
   431  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   432                           	opt callstack 0
   433  000110                     	ds	4
   434  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   435                           	opt callstack 0
   436  000114                     	ds	4
   437  000118                     _oldSensorEnfrente:
   438                           	opt callstack 0
   439  000118                     	ds	4
   440  00011C                     _oldSensorIzquierda:
   441                           	opt callstack 0
   442  00011C                     	ds	4
   443  000120                     _oldSensorDerecha:
   444                           	opt callstack 0
   445  000120                     	ds	4
   446  000124                     _sensorEnfrente:
   447                           	opt callstack 0
   448  000124                     	ds	4
   449  000128                     _sensorIzquierda:
   450                           	opt callstack 0
   451  000128                     	ds	4
   452  00012C                     _sensorDerecha:
   453                           	opt callstack 0
   454  00012C                     	ds	4
   455  000130                     _nout:
   456                           	opt callstack 0
   457  000130                     	ds	2
   458  000132                     _width:
   459                           	opt callstack 0
   460  000132                     	ds	2
   461  000134                     PID@difAnt:
   462                           	opt callstack 0
   463  000134                     	ds	2
   464  000136                     decidirDireccion@cambioOrientacionCarro:
   465                           	opt callstack 0
   466  000136                     	ds	1
   467  000137                     comportamientoBasico@carroRotado:
   468                           	opt callstack 0
   469  000137                     	ds	1
   470  000138                     comportamientoBasico@cruceDetectado:
   471                           	opt callstack 0
   472  000138                     	ds	1
   473  000139                     comportamientoBasico@mapear:
   474                           	opt callstack 0
   475  000139                     	ds	1
   476  00013A                     comportamientoBasico@espejearCarroY:
   477                           	opt callstack 0
   478  00013A                     	ds	1
   479  00013B                     _dbuf:
   480                           	opt callstack 0
   481  00013B                     	ds	80
   482  00018B                     comportamientoBasico@movimientosRealizados:
   483                           	opt callstack 0
   484  00018B                     	ds	50
   485  0001BD                     _buffer:
   486                           	opt callstack 0
   487  0001BD                     	ds	50
   488  0001EF                     comportamientoBasico@caminosRecorrer:
   489                           	opt callstack 0
   490  0001EF                     	ds	3
   491  0001F2                     comportamientoBasico@contCaminosRecorridos:
   492                           	opt callstack 0
   493  0001F2                     	ds	1
   494  0001F3                     comportamientoBasico@posicionInvCruce:
   495                           	opt callstack 0
   496  0001F3                     	ds	1
   497  0001F4                     comportamientoBasico@investigandoCruce:
   498                           	opt callstack 0
   499  0001F4                     	ds	1
   500  0001F5                     comportamientoBasico@carroEspejeado:
   501                           	opt callstack 0
   502  0001F5                     	ds	1
   503                           
   504                           	psect	dataBANK1
   505  0001FB                     __pdataBANK1:
   506                           	opt callstack 0
   507  0001FB                     _pausa:
   508                           	opt callstack 0
   509  0001FB                     	ds	1
   510                           
   511                           	psect	cstackBANK1
   512  0001F6                     __pcstackBANK1:
   513                           	opt callstack 0
   514  0001F6                     ??_probarUltrasonico:
   515                           
   516                           ; 1 bytes @ 0x0
   517  0001F6                     	ds	2
   518  0001F8                     probarSensores@lecturaSensorOptico:
   519                           	opt callstack 0
   520                           
   521                           ; 2 bytes @ 0x2
   522  0001F8                     	ds	2
   523  0001FA                     main@iniciado:
   524                           	opt callstack 0
   525                           
   526                           ; 1 bytes @ 0x4
   527  0001FA                     	ds	1
   528                           
   529                           	psect	cstackBANK0
   530  000060                     __pcstackBANK0:
   531                           	opt callstack 0
   532  000060                     ??_floorf:
   533  000060                     ?___flmul:
   534                           	opt callstack 0
   535  000060                     ___flmul@b:
   536                           	opt callstack 0
   537                           
   538                           ; 4 bytes @ 0x0
   539  000060                     	ds	4
   540  000064                     ___flmul@a:
   541                           	opt callstack 0
   542                           
   543                           ; 4 bytes @ 0x4
   544  000064                     	ds	2
   545  000066                     floorf@m:
   546                           	opt callstack 0
   547                           
   548                           ; 4 bytes @ 0x6
   549  000066                     	ds	2
   550  000068                     ___flmul@sign:
   551                           	opt callstack 0
   552                           
   553                           ; 1 bytes @ 0x8
   554  000068                     	ds	1
   555  000069                     ___flmul@aexp:
   556                           	opt callstack 0
   557                           
   558                           ; 1 bytes @ 0x9
   559  000069                     	ds	1
   560  00006A                     floorf@e:
   561                           	opt callstack 0
   562  00006A                     ___flmul@grs:
   563                           	opt callstack 0
   564                           
   565                           ; 4 bytes @ 0xA
   566  00006A                     	ds	2
   567  00006C                     floorf@u:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0xC
   571  00006C                     	ds	2
   572  00006E                     ___flmul@bexp:
   573                           	opt callstack 0
   574                           
   575                           ; 1 bytes @ 0xE
   576  00006E                     	ds	1
   577  00006F                     ___flmul@prod:
   578                           	opt callstack 0
   579                           
   580                           ; 4 bytes @ 0xF
   581  00006F                     	ds	4
   582  000073                     ___flmul@temp:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0x13
   586  000073                     	ds	2
   587  000075                     ?___flsub:
   588                           	opt callstack 0
   589  000075                     ?___fltol:
   590                           	opt callstack 0
   591  000075                     ___flge@ff1:
   592                           	opt callstack 0
   593  000075                     ___fltol@f1:
   594                           	opt callstack 0
   595  000075                     ___flsub@b:
   596                           	opt callstack 0
   597                           
   598                           ; 4 bytes @ 0x15
   599  000075                     	ds	4
   600  000079                     ??___fltol:
   601  000079                     ___flge@ff2:
   602                           	opt callstack 0
   603  000079                     ___flsub@a:
   604                           	opt callstack 0
   605                           
   606                           ; 4 bytes @ 0x19
   607  000079                     	ds	4
   608  00007D                     ??___flge:
   609  00007D                     ___fltol@sign1:
   610                           	opt callstack 0
   611                           
   612                           ; 1 bytes @ 0x1D
   613  00007D                     	ds	1
   614  00007E                     ___fltol@exp1:
   615                           	opt callstack 0
   616                           
   617                           ; 1 bytes @ 0x1E
   618  00007E                     	ds	1
   619  00007F                     pwmDuty@cicloTrabajo:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x1F
   623  00007F                     	ds	2
   624  000081                     ?_efgtoa:
   625                           	opt callstack 0
   626  000081                     pwmDuty@channel:
   627                           	opt callstack 0
   628  000081                     efgtoa@fp:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x21
   632  000081                     	ds	1
   633  000082                     ??_pwmDuty:
   634                           
   635                           ; 1 bytes @ 0x22
   636  000082                     	ds	1
   637  000083                     efgtoa@f:
   638                           	opt callstack 0
   639                           
   640                           ; 4 bytes @ 0x23
   641  000083                     	ds	4
   642  000087                     efgtoa@c:
   643                           	opt callstack 0
   644  000087                     pwmDuty@duty:
   645                           	opt callstack 0
   646                           
   647                           ; 4 bytes @ 0x27
   648  000087                     	ds	1
   649  000088                     ??_efgtoa:
   650                           
   651                           ; 1 bytes @ 0x28
   652  000088                     	ds	5
   653  00008D                     efgtoa@ou:
   654                           	opt callstack 0
   655                           
   656                           ; 4 bytes @ 0x2D
   657  00008D                     	ds	4
   658  000091                     _efgtoa$815:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x31
   662  000091                     	ds	2
   663  000093                     _efgtoa$816:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x33
   667  000093                     	ds	2
   668  000095                     _efgtoa$820:
   669                           	opt callstack 0
   670                           
   671                           ; 2 bytes @ 0x35
   672  000095                     	ds	2
   673  000097                     _efgtoa$824:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x37
   677  000097                     	ds	2
   678  000099                     _efgtoa$825:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x39
   682  000099                     	ds	2
   683  00009B                     _efgtoa$826:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x3B
   687  00009B                     	ds	2
   688  00009D                     efgtoa@t:
   689                           	opt callstack 0
   690                           
   691                           ; 2 bytes @ 0x3D
   692  00009D                     	ds	2
   693  00009F                     efgtoa@pp:
   694                           	opt callstack 0
   695                           
   696                           ; 2 bytes @ 0x3F
   697  00009F                     	ds	2
   698  0000A1                     efgtoa@m:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x41
   702  0000A1                     	ds	2
   703  0000A3                     efgtoa@ne:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x43
   707  0000A3                     	ds	2
   708  0000A5                     efgtoa@d:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x45
   712  0000A5                     	ds	2
   713  0000A7                     efgtoa@sign:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x47
   717  0000A7                     	ds	2
   718  0000A9                     efgtoa@p:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0x49
   722  0000A9                     	ds	2
   723  0000AB                     efgtoa@nmode:
   724                           	opt callstack 0
   725                           
   726                           ; 1 bytes @ 0x4B
   727  0000AB                     	ds	1
   728  0000AC                     efgtoa@w:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x4C
   732  0000AC                     	ds	2
   733  0000AE                     efgtoa@mode:
   734                           	opt callstack 0
   735                           
   736                           ; 1 bytes @ 0x4E
   737  0000AE                     	ds	1
   738  0000AF                     efgtoa@h:
   739                           	opt callstack 0
   740                           
   741                           ; 4 bytes @ 0x4F
   742  0000AF                     	ds	4
   743  0000B3                     efgtoa@l:
   744                           	opt callstack 0
   745                           
   746                           ; 4 bytes @ 0x53
   747  0000B3                     	ds	4
   748  0000B7                     efgtoa@i:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x57
   752  0000B7                     	ds	2
   753  0000B9                     efgtoa@g:
   754                           	opt callstack 0
   755                           
   756                           ; 4 bytes @ 0x59
   757  0000B9                     	ds	4
   758  0000BD                     efgtoa@e:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x5D
   762  0000BD                     	ds	2
   763  0000BF                     efgtoa@n:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0x5F
   767  0000BF                     	ds	2
   768  0000C1                     efgtoa@u:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x61
   772  0000C1                     	ds	4
   773  0000C5                     ?_vfpfcnvrt:
   774                           	opt callstack 0
   775  0000C5                     vfpfcnvrt@fp:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x65
   779  0000C5                     	ds	2
   780  0000C7                     vfpfcnvrt@fmt:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x67
   784  0000C7                     	ds	2
   785  0000C9                     vfpfcnvrt@ap:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x69
   789  0000C9                     	ds	2
   790  0000CB                     ??_vfpfcnvrt:
   791                           
   792                           ; 1 bytes @ 0x6B
   793  0000CB                     	ds	4
   794  0000CF                     vfpfcnvrt@ll:
   795                           	opt callstack 0
   796                           
   797                           ; 8 bytes @ 0x6F
   798  0000CF                     	ds	8
   799  0000D7                     _vfpfcnvrt$840:
   800                           	opt callstack 0
   801                           
   802                           ; 2 bytes @ 0x77
   803  0000D7                     	ds	2
   804  0000D9                     _vfpfcnvrt$845:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x79
   808  0000D9                     	ds	2
   809  0000DB                     vfpfcnvrt@f:
   810                           	opt callstack 0
   811                           
   812                           ; 4 bytes @ 0x7B
   813  0000DB                     	ds	4
   814  0000DF                     vfpfcnvrt@ct:
   815                           	opt callstack 0
   816                           
   817                           ; 3 bytes @ 0x7F
   818  0000DF                     	ds	3
   819  0000E2                     vfpfcnvrt@c:
   820                           	opt callstack 0
   821                           
   822                           ; 1 bytes @ 0x82
   823  0000E2                     	ds	1
   824  0000E3                     ?_vfprintf:
   825                           	opt callstack 0
   826  0000E3                     vfprintf@fp:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x83
   830  0000E3                     	ds	2
   831  0000E5                     vfprintf@fmt:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x85
   835  0000E5                     	ds	2
   836  0000E7                     vfprintf@ap:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x87
   840  0000E7                     	ds	2
   841  0000E9                     vfprintf@cfmt:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x89
   845  0000E9                     	ds	2
   846  0000EB                     ?_sprintf:
   847                           	opt callstack 0
   848  0000EB                     sprintf@s:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x8B
   852  0000EB                     	ds	2
   853  0000ED                     sprintf@fmt:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x8D
   857  0000ED                     	ds	8
   858  0000F5                     sprintf@ap:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x95
   862  0000F5                     	ds	2
   863  0000F7                     sprintf@f:
   864                           	opt callstack 0
   865                           
   866                           ; 6 bytes @ 0x97
   867  0000F7                     	ds	6
   868  0000FD                     probarUltrasonico@numeroSensor:
   869                           	opt callstack 0
   870                           
   871                           ; 1 bytes @ 0x9D
   872  0000FD                     	ds	1
   873                           
   874                           	psect	cstackCOMRAM
   875  000001                     __pcstackCOMRAM:
   876                           	opt callstack 0
   877  000001                     ??_antiRebote:
   878  000001                     
   879                           ; 1 bytes @ 0x0
   880  000001                     	ds	2
   881  000003                     antiRebote@pin:
   882                           	opt callstack 0
   883                           
   884                           ; 1 bytes @ 0x2
   885  000003                     	ds	1
   886  000004                     ??_boton:
   887                           
   888                           ; 1 bytes @ 0x3
   889  000004                     	ds	2
   890  000006                     ??_configPwm:
   891  000006                     ?_strlen:
   892                           	opt callstack 0
   893  000006                     ?___fpclassifyf:
   894                           	opt callstack 0
   895  000006                     ?_isupper:
   896                           	opt callstack 0
   897  000006                     ?_isdigit:
   898                           	opt callstack 0
   899  000006                     ?_strncmp:
   900                           	opt callstack 0
   901  000006                     ?_isspace:
   902                           	opt callstack 0
   903  000006                     ?_dameLecturaAdc:
   904                           	opt callstack 0
   905  000006                     ?___wmul:
   906                           	opt callstack 0
   907  000006                     ?___awdiv:
   908                           	opt callstack 0
   909  000006                     ?___awmod:
   910                           	opt callstack 0
   911  000006                     ?___lwdiv:
   912                           	opt callstack 0
   913  000006                     ?___lmul:
   914                           	opt callstack 0
   915  000006                     ?___flneg:
   916                           	opt callstack 0
   917  000006                     ?___aodiv:
   918                           	opt callstack 0
   919  000006                     ?___aomod:
   920                           	opt callstack 0
   921  000006                     UART_write@dato:
   922                           	opt callstack 0
   923  000006                     ___wmul@multiplier:
   924                           	opt callstack 0
   925  000006                     ___awdiv@dividend:
   926                           	opt callstack 0
   927  000006                     ___awmod@dividend:
   928                           	opt callstack 0
   929  000006                     ___lwdiv@dividend:
   930                           	opt callstack 0
   931  000006                     isdigit@c:
   932                           	opt callstack 0
   933  000006                     isspace@c:
   934                           	opt callstack 0
   935  000006                     isupper@c:
   936                           	opt callstack 0
   937  000006                     fputc@c:
   938                           	opt callstack 0
   939  000006                     strcpy@dest:
   940                           	opt callstack 0
   941  000006                     strlen@s:
   942                           	opt callstack 0
   943  000006                     strncmp@_l:
   944                           	opt callstack 0
   945  000006                     ___lmul@multiplier:
   946                           	opt callstack 0
   947  000006                     ___fleq@ff1:
   948                           	opt callstack 0
   949  000006                     ___flneg@f1:
   950                           	opt callstack 0
   951  000006                     ___fpclassifyf@x:
   952                           	opt callstack 0
   953  000006                     ___aodiv@dividend:
   954                           	opt callstack 0
   955  000006                     ___aomod@dividend:
   956                           	opt callstack 0
   957                           
   958                           ; 8 bytes @ 0x5
   959  000006                     	ds	1
   960  000007                     UART_printf@cadena:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0x6
   964  000007                     	ds	1
   965  000008                     ??_isupper:
   966  000008                     ??_isdigit:
   967  000008                     ??_isspace:
   968  000008                     ??_dameLecturaAdc:
   969  000008                     configPwm@channel:
   970                           	opt callstack 0
   971  000008                     ___wmul@multiplicand:
   972                           	opt callstack 0
   973  000008                     ___awdiv@divisor:
   974                           	opt callstack 0
   975  000008                     ___awmod@divisor:
   976                           	opt callstack 0
   977  000008                     ___lwdiv@divisor:
   978                           	opt callstack 0
   979  000008                     fputc@fp:
   980                           	opt callstack 0
   981  000008                     strcpy@src:
   982                           	opt callstack 0
   983  000008                     strlen@a:
   984                           	opt callstack 0
   985  000008                     strncmp@_r:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0x7
   989  000008                     	ds	1
   990  000009                     
   991                           ; 1 bytes @ 0x8
   992  000009                     	ds	1
   993  00000A                     ??_fputc:
   994  00000A                     ??___fpclassifyf:
   995  00000A                     ??_strcpy:
   996  00000A                     dameLecturaAdc@canalLeer:
   997                           	opt callstack 0
   998  00000A                     ___awdiv@counter:
   999                           	opt callstack 0
  1000  00000A                     ___awmod@counter:
  1001                           	opt callstack 0
  1002  00000A                     ___lwdiv@counter:
  1003                           	opt callstack 0
  1004  00000A                     ___wmul@product:
  1005                           	opt callstack 0
  1006  00000A                     strncmp@n:
  1007                           	opt callstack 0
  1008  00000A                     ___lmul@multiplicand:
  1009                           	opt callstack 0
  1010  00000A                     ___fleq@ff2:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x9
  1014  00000A                     	ds	1
  1015  00000B                     ___awdiv@sign:
  1016                           	opt callstack 0
  1017  00000B                     ___awmod@sign:
  1018                           	opt callstack 0
  1019  00000B                     ___lwdiv@quotient:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0xA
  1023  00000B                     	ds	1
  1024  00000C                     ??_strncmp:
  1025  00000C                     ?_tolower:
  1026                           	opt callstack 0
  1027  00000C                     _isspace$1349:
  1028                           	opt callstack 0
  1029  00000C                     ___awdiv@quotient:
  1030                           	opt callstack 0
  1031  00000C                     strcpy@s:
  1032                           	opt callstack 0
  1033  00000C                     tolower@c:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0xB
  1037  00000C                     	ds	1
  1038  00000D                     ?_atoi:
  1039                           	opt callstack 0
  1040  00000D                     ?___xxtofl:
  1041                           	opt callstack 0
  1042  00000D                     atoi@s:
  1043                           	opt callstack 0
  1044  00000D                     strncmp@l:
  1045                           	opt callstack 0
  1046  00000D                     ___xxtofl@val:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 4 bytes @ 0xC
  1050  00000D                     	ds	1
  1051  00000E                     ??_tolower:
  1052  00000E                     ??___fleq:
  1053  00000E                     ___fpclassifyf@e:
  1054                           	opt callstack 0
  1055  00000E                     strcpy@d:
  1056                           	opt callstack 0
  1057  00000E                     ___lmul@product:
  1058                           	opt callstack 0
  1059  00000E                     ___aodiv@divisor:
  1060                           	opt callstack 0
  1061  00000E                     ___aomod@divisor:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 8 bytes @ 0xD
  1065  00000E                     	ds	1
  1066  00000F                     ??_atoi:
  1067  00000F                     fputs@s:
  1068                           	opt callstack 0
  1069  00000F                     strncmp@r:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 2 bytes @ 0xE
  1073  00000F                     	ds	1
  1074  000010                     ___fpclassifyf@u:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 4 bytes @ 0xF
  1078  000010                     	ds	1
  1079  000011                     ??___xxtofl:
  1080  000011                     fputs@fp:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x10
  1084  000011                     	ds	1
  1085  000012                     ?___aldiv:
  1086                           	opt callstack 0
  1087  000012                     _tolower$1448:
  1088                           	opt callstack 0
  1089  000012                     ___aldiv@dividend:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x11
  1093  000012                     	ds	1
  1094  000013                     fputs@c:
  1095                           	opt callstack 0
  1096  000013                     atoi@neg:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x12
  1100  000013                     	ds	1
  1101  000014                     fputs@i:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x13
  1105  000014                     	ds	1
  1106  000015                     ___xxtofl@sign:
  1107                           	opt callstack 0
  1108  000015                     _atoi$1318:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x14
  1112  000015                     	ds	1
  1113  000016                     ?_pad:
  1114                           	opt callstack 0
  1115  000016                     ___aodiv@counter:
  1116                           	opt callstack 0
  1117  000016                     ___aomod@counter:
  1118                           	opt callstack 0
  1119  000016                     ___xxtofl@exp:
  1120                           	opt callstack 0
  1121  000016                     pad@fp:
  1122                           	opt callstack 0
  1123  000016                     ___aldiv@divisor:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x15
  1127  000016                     	ds	1
  1128  000017                     ___aodiv@sign:
  1129                           	opt callstack 0
  1130  000017                     ___aomod@sign:
  1131                           	opt callstack 0
  1132  000017                     _atoi$1320:
  1133                           	opt callstack 0
  1134  000017                     ___xxtofl@arg:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x16
  1138  000017                     	ds	1
  1139  000018                     ?_abs:
  1140                           	opt callstack 0
  1141  000018                     pad@buf:
  1142                           	opt callstack 0
  1143  000018                     abs@a:
  1144                           	opt callstack 0
  1145  000018                     ___aodiv@quotient:
  1146                           	opt callstack 0
  1147                           
  1148                           ; 8 bytes @ 0x17
  1149  000018                     	ds	1
  1150  000019                     _atoi$1319:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x18
  1154  000019                     	ds	1
  1155  00001A                     ??_abs:
  1156  00001A                     ___aldiv@counter:
  1157                           	opt callstack 0
  1158  00001A                     pad@p:
  1159                           	opt callstack 0
  1160  00001A                     atoi@n:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x19
  1164  00001A                     	ds	1
  1165  00001B                     ?_dameDistancia:
  1166                           	opt callstack 0
  1167  00001B                     ___aldiv@sign:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x1A
  1171  00001B                     	ds	1
  1172  00001C                     ??_pad:
  1173  00001C                     ___aldiv@quotient:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x1B
  1177  00001C                     	ds	1
  1178  00001D                     pad@i:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x1C
  1182  00001D                     	ds	2
  1183  00001F                     ??_dameDistancia:
  1184  00001F                     pad@w:
  1185                           	opt callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x1E
  1188  00001F                     	ds	1
  1189  000020                     ?_map:
  1190                           	opt callstack 0
  1191  000020                     map@x:
  1192                           	opt callstack 0
  1193  000020                     UART_init@BAUD:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x1F
  1197  000020                     	ds	1
  1198  000021                     ?_dtoa:
  1199                           	opt callstack 0
  1200  000021                     dameDistancia@numeroSensor:
  1201                           	opt callstack 0
  1202  000021                     dtoa@fp:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x20
  1206  000021                     	ds	1
  1207  000022                     dameDistancia@distancia:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x21
  1211  000022                     	ds	1
  1212  000023                     dtoa@d:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 8 bytes @ 0x22
  1216  000023                     	ds	1
  1217  000024                     map@in_min:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x23
  1221  000024                     	ds	2
  1222  000026                     dameDistancia@conteo:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x25
  1226  000026                     	ds	2
  1227  000028                     ?___fladd:
  1228                           	opt callstack 0
  1229  000028                     map@in_max:
  1230                           	opt callstack 0
  1231  000028                     ___fladd@b:
  1232                           	opt callstack 0
  1233  000028                     _UART_init$1679:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x27
  1237  000028                     	ds	3
  1238  00002B                     ??_dtoa:
  1239                           
  1240                           ; 1 bytes @ 0x2A
  1241  00002B                     	ds	1
  1242  00002C                     map@out_min:
  1243                           	opt callstack 0
  1244  00002C                     ___fladd@a:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x2B
  1248  00002C                     	ds	4
  1249  000030                     ??___fladd:
  1250  000030                     map@out_max:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x2F
  1254  000030                     	ds	3
  1255  000033                     _dtoa$791:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x32
  1259  000033                     	ds	1
  1260  000034                     ___fladd@signs:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x33
  1264  000034                     	ds	1
  1265  000035                     ___fladd@aexp:
  1266                           	opt callstack 0
  1267  000035                     dtoa@p:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x34
  1271  000035                     	ds	1
  1272  000036                     ___fladd@bexp:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x35
  1276  000036                     	ds	1
  1277  000037                     ___fladd@grs:
  1278                           	opt callstack 0
  1279  000037                     dtoa@w:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x36
  1283  000037                     	ds	1
  1284  000038                     ?___fldiv:
  1285                           	opt callstack 0
  1286  000038                     ___fldiv@b:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 4 bytes @ 0x37
  1290  000038                     	ds	1
  1291  000039                     dtoa@s:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x38
  1295  000039                     	ds	2
  1296  00003B                     dtoa@n:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 8 bytes @ 0x3A
  1300  00003B                     	ds	1
  1301  00003C                     ___fldiv@a:
  1302                           	opt callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x3B
  1305  00003C                     	ds	4
  1306  000040                     ??___fldiv:
  1307                           
  1308                           ; 1 bytes @ 0x3F
  1309  000040                     	ds	3
  1310  000043                     dtoa@i:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x42
  1314  000043                     	ds	1
  1315  000044                     ___fldiv@rem:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 4 bytes @ 0x43
  1319  000044                     	ds	4
  1320  000048                     ___fldiv@sign:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x47
  1324  000048                     	ds	1
  1325  000049                     ___fldiv@new_exp:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x48
  1329  000049                     	ds	2
  1330  00004B                     ___fldiv@grs:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 4 bytes @ 0x4A
  1334  00004B                     	ds	4
  1335  00004F                     ___fldiv@bexp:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 1 bytes @ 0x4E
  1339  00004F                     	ds	1
  1340  000050                     ___fldiv@aexp:
  1341                           	opt callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x4F
  1344  000050                     	ds	1
  1345  000051                     ??___flmul:
  1346  000051                     ?_floorf:
  1347                           	opt callstack 0
  1348  000051                     floorf@x:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 4 bytes @ 0x50
  1352  000051                     	ds	4
  1353  000055                     
  1354                           ; 1 bytes @ 0x54
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 879 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  iniciado        1    4[BANK1 ] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0
  1375 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1377 ;;      Totals:         0       0       1       0       0       0       0       0       0
  1378 ;;Total ram usage:        1 bytes
  1379 ;; Hardware stack levels required when called:   12
  1380 ;; This function calls:
  1381 ;;		_UART_init
  1382 ;;		_configPwm
  1383 ;;		_configurarAdc
  1384 ;;		_inicializarComportamientoBasico
  1385 ;;		_probarSensores
  1386 ;; This function is called by:
  1387 ;;		Startup code after reset
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text0
  1392  003F50                     __ptext0:
  1393                           	opt callstack 0
  1394  003F50                     _main:
  1395                           	opt callstack 19
  1396  003F50                     
  1397                           ;main.c: 881:     T_BOOL iniciado = 0;
  1398  003F50  0E00               	movlw	0
  1399  003F52  0101               	movlb	1	; () banked
  1400  003F54  6FFA               	movwf	main@iniciado& (0+255),b
  1401  003F56                     
  1402                           ; BSR set to: 1
  1403                           ;main.c: 884:     INTCONbits.GIE = 1;
  1404  003F56  8EF2               	bsf	242,7,c	;volatile
  1405  003F58                     
  1406                           ; BSR set to: 1
  1407                           ;main.c: 885:     INTCONbits.INT0IE = 1;
  1408  003F58  88F2               	bsf	242,4,c	;volatile
  1409  003F5A                     
  1410                           ; BSR set to: 1
  1411                           ;main.c: 886:     INTCON2bits.INTEDG0 = 1;
  1412  003F5A  8CF1               	bsf	241,6,c	;volatile
  1413  003F5C                     
  1414                           ; BSR set to: 1
  1415                           ;main.c: 888:     TRISD3 = 0;
  1416  003F5C  9695               	bcf	3989,3,c	;volatile
  1417  003F5E                     
  1418                           ; BSR set to: 1
  1419                           ;main.c: 889:     TRISB1 = 1;
  1420  003F5E  8293               	bsf	3987,1,c	;volatile
  1421  003F60                     
  1422                           ; BSR set to: 1
  1423                           ;main.c: 890:     TRISB2 = 1;
  1424  003F60  8493               	bsf	3987,2,c	;volatile
  1425  003F62                     
  1426                           ; BSR set to: 1
  1427                           ;main.c: 891:     TRISB3 = 1;
  1428  003F62  8693               	bsf	3987,3,c	;volatile
  1429  003F64                     
  1430                           ; BSR set to: 1
  1431                           ;main.c: 893:     TRISB4 = 0;
  1432  003F64  9893               	bcf	3987,4,c	;volatile
  1433  003F66                     
  1434                           ; BSR set to: 1
  1435                           ;main.c: 894:     TRISB5 = 0;
  1436  003F66  9A93               	bcf	3987,5,c	;volatile
  1437  003F68                     
  1438                           ; BSR set to: 1
  1439                           ;main.c: 895:     TRISB6 = 0;
  1440  003F68  9C93               	bcf	3987,6,c	;volatile
  1441  003F6A                     
  1442                           ; BSR set to: 1
  1443                           ;main.c: 896:     TRISB7 = 0;
  1444  003F6A  9E93               	bcf	3987,7,c	;volatile
  1445  003F6C                     
  1446                           ; BSR set to: 1
  1447                           ;main.c: 898:     TRISDbits.RD2 = 0;
  1448  003F6C  9495               	bcf	149,2,c	;volatile
  1449  003F6E                     
  1450                           ; BSR set to: 1
  1451                           ;main.c: 899:     TRISB0 = 1;
  1452  003F6E  8093               	bsf	3987,0,c	;volatile
  1453  003F70                     
  1454                           ; BSR set to: 1
  1455                           ;main.c: 901:     LATD3 = 0;
  1456  003F70  968C               	bcf	3980,3,c	;volatile
  1457  003F72                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 902:     LATB4 = 0;
  1460  003F72  988A               	bcf	3978,4,c	;volatile
  1461  003F74                     
  1462                           ; BSR set to: 1
  1463                           ;main.c: 903:     LATB5 = 0;
  1464  003F74  9A8A               	bcf	3978,5,c	;volatile
  1465  003F76                     
  1466                           ; BSR set to: 1
  1467                           ;main.c: 904:     LATB6 = 0;
  1468  003F76  9C8A               	bcf	3978,6,c	;volatile
  1469  003F78                     
  1470                           ; BSR set to: 1
  1471                           ;main.c: 905:     LATB7 = 0;
  1472  003F78  9E8A               	bcf	3978,7,c	;volatile
  1473  003F7A                     
  1474                           ; BSR set to: 1
  1475                           ;main.c: 906:     LATD2 = 0;
  1476  003F7A  948C               	bcf	3980,2,c	;volatile
  1477                           
  1478                           ;main.c: 909:     T1CON = 0b00000000;
  1479  003F7C  0E00               	movlw	0
  1480  003F7E  6ECD               	movwf	205,c	;volatile
  1481  003F80                     
  1482                           ; BSR set to: 1
  1483                           ;main.c: 911:     configPwm(1);
  1484  003F80  0E01               	movlw	1
  1485  003F82  EC84  F022         	call	_configPwm
  1486  003F86                     
  1487                           ;main.c: 912:     configPwm(2);
  1488  003F86  0E02               	movlw	2
  1489  003F88  EC84  F022         	call	_configPwm
  1490  003F8C                     
  1491                           ;main.c: 913:     configurarAdc();
  1492  003F8C  EC1A  F024         	call	_configurarAdc	;wreg free
  1493  003F90                     
  1494                           ;main.c: 915:     UART_init(9600);
  1495  003F90  0E80               	movlw	128
  1496  003F92  6E20               	movwf	UART_init@BAUD^0,c
  1497  003F94  0E25               	movlw	37
  1498  003F96  6E21               	movwf	(UART_init@BAUD+1)^0,c
  1499  003F98  0E00               	movlw	0
  1500  003F9A  6E22               	movwf	(UART_init@BAUD+2)^0,c
  1501  003F9C  0E00               	movlw	0
  1502  003F9E  6E23               	movwf	(UART_init@BAUD+3)^0,c
  1503  003FA0  ECAD  F020         	call	_UART_init	;wreg free
  1504  003FA4                     l8901:
  1505                           
  1506                           ;main.c: 920:         if (!pausa) {
  1507  003FA4  0101               	movlb	1	; () banked
  1508  003FA6  51FB               	movf	_pausa& (0+255),w,b
  1509  003FA8  A4D8               	btfss	status,2,c
  1510  003FAA  EFD9  F01F         	goto	u10751
  1511  003FAE  EFDB  F01F         	goto	u10750
  1512  003FB2                     u10751:
  1513  003FB2  EFEB  F01F         	goto	l8911
  1514  003FB6                     u10750:
  1515  003FB6                     
  1516                           ; BSR set to: 1
  1517                           ;main.c: 922:             if (!iniciado) {
  1518  003FB6  51FA               	movf	main@iniciado& (0+255),w,b
  1519  003FB8  A4D8               	btfss	status,2,c
  1520  003FBA  EFE1  F01F         	goto	u10761
  1521  003FBE  EFE3  F01F         	goto	u10760
  1522  003FC2                     u10761:
  1523  003FC2  EFE7  F01F         	goto	l8909
  1524  003FC6                     u10760:
  1525  003FC6                     
  1526                           ; BSR set to: 1
  1527                           ;main.c: 923:                 iniciado = 1;
  1528  003FC6  0E01               	movlw	1
  1529  003FC8  6FFA               	movwf	main@iniciado& (0+255),b
  1530  003FCA                     
  1531                           ; BSR set to: 1
  1532                           ;main.c: 924:                 inicializarComportamientoBasico();
  1533  003FCA  ECAC  F022         	call	_inicializarComportamientoBasico	;wreg free
  1534  003FCE                     l8909:
  1535                           
  1536                           ;main.c: 927:             probarSensores();
  1537  003FCE  ECF1  F01F         	call	_probarSensores	;wreg free
  1538                           
  1539                           ;main.c: 931:         } else {
  1540  003FD2  EFD2  F01F         	goto	l8901
  1541  003FD6                     l8911:
  1542                           
  1543                           ; BSR set to: 1
  1544                           ;main.c: 933:             iniciado = 0;
  1545  003FD6  0E00               	movlw	0
  1546  003FD8  6FFA               	movwf	main@iniciado& (0+255),b
  1547  003FDA  EFD2  F01F         	goto	l8901
  1548  003FDE  EF07  F000         	goto	start
  1549  003FE2                     __end_of_main:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _probarSensores *****************
  1553 ;; Defined at:
  1554 ;;		line 103 in file "main.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  lecturaSenso    2    2[BANK1 ] short 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0
  1569 ;;      Locals:         0       0       2       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1571 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:   11
  1575 ;; This function calls:
  1576 ;;		_UART_printf
  1577 ;;		_dameLecturaAdc
  1578 ;;		_leerSensores
  1579 ;;		_probarUltrasonico
  1580 ;;		_sprintf
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text1
  1587  003FE2                     __ptext1:
  1588                           	opt callstack 0
  1589  003FE2                     _probarSensores:
  1590                           	opt callstack 19
  1591  003FE2                     
  1592                           ;main.c: 105:     leerSensores();
  1593  003FE2  ECC9  F018         	call	_leerSensores	;wreg free
  1594  003FE6                     
  1595                           ;main.c: 107:     probarUltrasonico(ENFRENTE);
  1596  003FE6  0E01               	movlw	1
  1597  003FE8  ECF6  F01C         	call	_probarUltrasonico
  1598  003FEC                     
  1599                           ;main.c: 108:     probarUltrasonico(IZQUIERDA);
  1600  003FEC  0E02               	movlw	2
  1601  003FEE  ECF6  F01C         	call	_probarUltrasonico
  1602  003FF2                     
  1603                           ;main.c: 109:     probarUltrasonico(DERECHA);
  1604  003FF2  0E03               	movlw	3
  1605  003FF4  ECF6  F01C         	call	_probarUltrasonico
  1606  003FF8                     
  1607                           ;main.c: 110:     T_WORD lecturaSensorOptico = dameLecturaAdc(0);
  1608  003FF8  0E00               	movlw	0
  1609  003FFA  ECF7  F022         	call	_dameLecturaAdc
  1610  003FFE  C006  F1F8         	movff	?_dameLecturaAdc,probarSensores@lecturaSensorOptico
  1611  004002  C007  F1F9         	movff	?_dameLecturaAdc+1,probarSensores@lecturaSensorOptico+1
  1612  004006                     
  1613                           ;main.c: 112:     if (lecturaSensorOptico < 100)
  1614  004006  0101               	movlb	1	; () banked
  1615  004008  BFF9               	btfsc	(probarSensores@lecturaSensorOptico+1)& (0+255),7,b
  1616  00400A  EF12  F020         	goto	u10170
  1617  00400E  51F9               	movf	(probarSensores@lecturaSensorOptico+1)& (0+255),w,b
  1618  004010  E107               	bnz	u10171
  1619  004012  0E64               	movlw	100
  1620  004014  5DF8               	subwf	probarSensores@lecturaSensorOptico& (0+255),w,b
  1621  004016  B0D8               	btfsc	status,0,c
  1622  004018  EF10  F020         	goto	u10171
  1623  00401C  EF12  F020         	goto	u10170
  1624  004020                     u10171:
  1625  004020  EF1A  F020         	goto	l8331
  1626  004024                     u10170:
  1627  004024                     
  1628                           ; BSR set to: 1
  1629                           ;main.c: 113:         UART_printf("\rSe llego al destino \r\n");
  1630  004024  0E40               	movlw	low STR_1
  1631  004026  6E07               	movwf	UART_printf@cadena^0,c
  1632  004028  0E08               	movlw	high STR_1
  1633  00402A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1634  00402C  EC7F  F021         	call	_UART_printf	;wreg free
  1635  004030  EF20  F020         	goto	l8333
  1636  004034                     l8331:
  1637                           
  1638                           ; BSR set to: 1
  1639                           ;main.c: 115:         UART_printf("\rDestino no detectado \r\n");
  1640  004034  0E27               	movlw	low STR_2
  1641  004036  6E07               	movwf	UART_printf@cadena^0,c
  1642  004038  0E08               	movlw	high STR_2
  1643  00403A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1644  00403C  EC7F  F021         	call	_UART_printf	;wreg free
  1645  004040                     l8333:
  1646                           
  1647                           ;main.c: 117:     sprintf(buffer, "\rLectura de sensor Optico = %d\r\n\n", lecturaSensor
      +                          Optico);
  1648  004040  0EBD               	movlw	low _buffer
  1649  004042  0100               	movlb	0	; () banked
  1650  004044  6FEB               	movwf	sprintf@s& (0+255),b
  1651  004046  0E01               	movlw	high _buffer
  1652  004048  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1653  00404A  0E05               	movlw	low STR_3
  1654  00404C  6FED               	movwf	sprintf@fmt& (0+255),b
  1655  00404E  0E08               	movlw	high STR_3
  1656  004050  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1657  004052  C1F8  F0EF         	movff	probarSensores@lecturaSensorOptico,?_sprintf+4
  1658  004056  C1F9  F0F0         	movff	probarSensores@lecturaSensorOptico+1,?_sprintf+5
  1659  00405A  EC32  F022         	call	_sprintf	;wreg free
  1660  00405E                     
  1661                           ;main.c: 118:     UART_printf(buffer);
  1662  00405E  0EBD               	movlw	low _buffer
  1663  004060  6E07               	movwf	UART_printf@cadena^0,c
  1664  004062  0E01               	movlw	high _buffer
  1665  004064  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1666  004066  EC7F  F021         	call	_UART_printf	;wreg free
  1667  00406A  0012               	return		;funcret
  1668  00406C                     __end_of_probarSensores:
  1669                           	opt callstack 0
  1670                           
  1671 ;; *************** function _probarUltrasonico *****************
  1672 ;; Defined at:
  1673 ;;		line 122 in file "main.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  numeroSensor    1    wreg     unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  numeroSensor    1  157[BANK0 ] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0
  1688 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1689 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1690 ;;      Totals:         0       1       2       0       0       0       0       0       0
  1691 ;;Total ram usage:        3 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:   10
  1694 ;; This function calls:
  1695 ;;		_UART_printf
  1696 ;;		_sprintf
  1697 ;; This function is called by:
  1698 ;;		_probarSensores
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text2
  1703  0039EC                     __ptext2:
  1704                           	opt callstack 0
  1705  0039EC                     _probarUltrasonico:
  1706                           	opt callstack 19
  1707                           
  1708                           ;incstack = 0
  1709                           ;probarUltrasonico@numeroSensor stored from wreg
  1710  0039EC  0100               	movlb	0	; () banked
  1711  0039EE  6FFD               	movwf	probarUltrasonico@numeroSensor& (0+255),b
  1712  0039F0                     
  1713                           ;main.c: 124:     switch (numeroSensor) {
  1714  0039F0  EF39  F01D         	goto	l8261
  1715  0039F4                     l8253:
  1716                           
  1717                           ; BSR set to: 1
  1718                           ;main.c: 127:             sprintf(buffer, "\rEnfrente: %.2f\r\n", sensorEnfrente);
  1719  0039F4  0EBD               	movlw	low _buffer
  1720  0039F6  0100               	movlb	0	; () banked
  1721  0039F8  6FEB               	movwf	sprintf@s& (0+255),b
  1722  0039FA  0E01               	movlw	high _buffer
  1723  0039FC  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1724  0039FE  0E6B               	movlw	low STR_4
  1725  003A00  6FED               	movwf	sprintf@fmt& (0+255),b
  1726  003A02  0E08               	movlw	high STR_4
  1727  003A04  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1728  003A06  C124  F0EF         	movff	_sensorEnfrente,?_sprintf+4
  1729  003A0A  C125  F0F0         	movff	_sensorEnfrente+1,?_sprintf+5
  1730  003A0E  C126  F0F1         	movff	_sensorEnfrente+2,?_sprintf+6
  1731  003A12  C127  F0F2         	movff	_sensorEnfrente+3,?_sprintf+7
  1732  003A16  EC32  F022         	call	_sprintf	;wreg free
  1733                           
  1734                           ;main.c: 128:             break;
  1735  003A1A  EF54  F01D         	goto	l8263
  1736  003A1E                     l8255:
  1737                           
  1738                           ; BSR set to: 1
  1739                           ;main.c: 131:             sprintf(buffer, "\rIzquierda: %.2f\r\n", sensorIzquierda);
  1740  003A1E  0EBD               	movlw	low _buffer
  1741  003A20  0100               	movlb	0	; () banked
  1742  003A22  6FEB               	movwf	sprintf@s& (0+255),b
  1743  003A24  0E01               	movlw	high _buffer
  1744  003A26  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1745  003A28  0E58               	movlw	low STR_5
  1746  003A2A  6FED               	movwf	sprintf@fmt& (0+255),b
  1747  003A2C  0E08               	movlw	high STR_5
  1748  003A2E  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1749  003A30  C128  F0EF         	movff	_sensorIzquierda,?_sprintf+4
  1750  003A34  C129  F0F0         	movff	_sensorIzquierda+1,?_sprintf+5
  1751  003A38  C12A  F0F1         	movff	_sensorIzquierda+2,?_sprintf+6
  1752  003A3C  C12B  F0F2         	movff	_sensorIzquierda+3,?_sprintf+7
  1753  003A40  EC32  F022         	call	_sprintf	;wreg free
  1754                           
  1755                           ;main.c: 132:             break;
  1756  003A44  EF54  F01D         	goto	l8263
  1757  003A48                     l8257:
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;main.c: 135:             sprintf(buffer, "\rDerecha: %.2f\r\n", sensorDerecha);
  1761  003A48  0EBD               	movlw	low _buffer
  1762  003A4A  0100               	movlb	0	; () banked
  1763  003A4C  6FEB               	movwf	sprintf@s& (0+255),b
  1764  003A4E  0E01               	movlw	high _buffer
  1765  003A50  6FEC               	movwf	(sprintf@s+1)& (0+255),b
  1766  003A52  0E7D               	movlw	low STR_6
  1767  003A54  6FED               	movwf	sprintf@fmt& (0+255),b
  1768  003A56  0E08               	movlw	high STR_6
  1769  003A58  6FEE               	movwf	(sprintf@fmt+1)& (0+255),b
  1770  003A5A  C12C  F0EF         	movff	_sensorDerecha,?_sprintf+4
  1771  003A5E  C12D  F0F0         	movff	_sensorDerecha+1,?_sprintf+5
  1772  003A62  C12E  F0F1         	movff	_sensorDerecha+2,?_sprintf+6
  1773  003A66  C12F  F0F2         	movff	_sensorDerecha+3,?_sprintf+7
  1774  003A6A  EC32  F022         	call	_sprintf	;wreg free
  1775                           
  1776                           ;main.c: 136:             break;
  1777  003A6E  EF54  F01D         	goto	l8263
  1778  003A72                     l8261:
  1779  003A72  0100               	movlb	0	; () banked
  1780  003A74  51FD               	movf	probarUltrasonico@numeroSensor& (0+255),w,b
  1781  003A76  0101               	movlb	1	; () banked
  1782  003A78  6FF6               	movwf	??_probarUltrasonico& (0+255),b
  1783  003A7A  6BF7               	clrf	(??_probarUltrasonico+1)& (0+255),b
  1784                           
  1785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1786                           ; Switch size 1, requested type "simple"
  1787                           ; Number of cases is 1, Range of values is 0 to 0
  1788                           ; switch strategies available:
  1789                           ; Name         Instructions Cycles
  1790                           ; simple_byte            4     3 (average)
  1791                           ;	Chosen strategy is simple_byte
  1792  003A7C  51F7               	movf	(??_probarUltrasonico+1)& (0+255),w,b
  1793  003A7E  0A00               	xorlw	0	; case 0
  1794  003A80  B4D8               	btfsc	status,2,c
  1795  003A82  EF45  F01D         	goto	l9043
  1796  003A86  EF54  F01D         	goto	l8263
  1797  003A8A                     l9043:
  1798                           
  1799                           ; BSR set to: 1
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 3, Range of values is 1 to 3
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte           10     6 (average)
  1805                           ;	Chosen strategy is simple_byte
  1806  003A8A  51F6               	movf	??_probarUltrasonico& (0+255),w,b
  1807  003A8C  0A01               	xorlw	1	; case 1
  1808  003A8E  B4D8               	btfsc	status,2,c
  1809  003A90  EFFA  F01C         	goto	l8253
  1810  003A94  0A03               	xorlw	3	; case 2
  1811  003A96  B4D8               	btfsc	status,2,c
  1812  003A98  EF0F  F01D         	goto	l8255
  1813  003A9C  0A01               	xorlw	1	; case 3
  1814  003A9E  B4D8               	btfsc	status,2,c
  1815  003AA0  EF24  F01D         	goto	l8257
  1816  003AA4  EF54  F01D         	goto	l8263
  1817  003AA8                     l8263:
  1818                           
  1819                           ;main.c: 141:     UART_printf(buffer);
  1820  003AA8  0EBD               	movlw	low _buffer
  1821  003AAA  6E07               	movwf	UART_printf@cadena^0,c
  1822  003AAC  0E01               	movlw	high _buffer
  1823  003AAE  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1824  003AB0  EC7F  F021         	call	_UART_printf	;wreg free
  1825  003AB4                     
  1826                           ;main.c: 142:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1827  003AB4  0E06               	movlw	6
  1828  003AB6  0101               	movlb	1	; () banked
  1829  003AB8  6FF7               	movwf	(??_probarUltrasonico+1)& (0+255),b
  1830  003ABA  0E13               	movlw	19
  1831  003ABC  6FF6               	movwf	??_probarUltrasonico& (0+255),b
  1832  003ABE  0EAD               	movlw	173
  1833  003AC0                     u10777:
  1834  003AC0  2EE8               	decfsz	wreg,f,c
  1835  003AC2  D7FE               	bra	u10777
  1836  003AC4  2FF6               	decfsz	??_probarUltrasonico& (0+255),f,b
  1837  003AC6  D7FC               	bra	u10777
  1838  003AC8  2FF7               	decfsz	(??_probarUltrasonico+1)& (0+255),f,b
  1839  003ACA  D7FA               	bra	u10777
  1840  003ACC  D000               	nop2	
  1841  003ACE  0012               	return		;funcret
  1842  003AD0                     __end_of_probarUltrasonico:
  1843                           	opt callstack 0
  1844                           
  1845 ;; *************** function _sprintf *****************
  1846 ;; Defined at:
  1847 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  s               2  139[BANK0 ] PTR unsigned char 
  1850 ;;		 -> buffer(50), 
  1851 ;;  fmt             2  141[BANK0 ] PTR const unsigned char 
  1852 ;;		 -> STR_6(17), STR_5(19), STR_4(18), STR_3(34), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  f               6  151[BANK0 ] struct _IO_FILE
  1855 ;;  ap              2  149[BANK0 ] PTR void [1]
  1856 ;;		 -> ?_sprintf(2), 
  1857 ;;  ret             2    0        int 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2  139[BANK0 ] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1867 ;;      Params:         0       8       0       0       0       0       0       0       0
  1868 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1870 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1871 ;;Total ram usage:       18 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    9
  1874 ;; This function calls:
  1875 ;;		_vfprintf
  1876 ;; This function is called by:
  1877 ;;		_probarSensores
  1878 ;;		_probarUltrasonico
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text3
  1883  004464                     __ptext3:
  1884                           	opt callstack 0
  1885  004464                     _sprintf:
  1886                           	opt callstack 20
  1887  004464  0EEF               	movlw	low (?_sprintf+4)
  1888  004466  0100               	movlb	0	; () banked
  1889  004468  6FF5               	movwf	sprintf@ap& (0+255),b
  1890  00446A  0E00               	movlw	high (?_sprintf+4)
  1891  00446C  6FF6               	movwf	(sprintf@ap+1)& (0+255),b
  1892  00446E  C0EB  F0F7         	movff	sprintf@s,sprintf@f
  1893  004472  C0EC  F0F8         	movff	sprintf@s+1,sprintf@f+1
  1894  004476                     
  1895                           ; BSR set to: 0
  1896  004476  0E00               	movlw	0
  1897  004478  6FFA               	movwf	(sprintf@f+3)& (0+255),b
  1898  00447A  0E00               	movlw	0
  1899  00447C  6FF9               	movwf	(sprintf@f+2)& (0+255),b
  1900  00447E                     
  1901                           ; BSR set to: 0
  1902  00447E  0E00               	movlw	0
  1903  004480  6FFC               	movwf	(sprintf@f+5)& (0+255),b
  1904  004482  0E00               	movlw	0
  1905  004484  6FFB               	movwf	(sprintf@f+4)& (0+255),b
  1906  004486                     
  1907                           ; BSR set to: 0
  1908  004486  0EF7               	movlw	low sprintf@f
  1909  004488  6FE3               	movwf	vfprintf@fp& (0+255),b
  1910  00448A  0E00               	movlw	high sprintf@f
  1911  00448C  6FE4               	movwf	(vfprintf@fp+1)& (0+255),b
  1912  00448E  C0ED  F0E5         	movff	sprintf@fmt,vfprintf@fmt
  1913  004492  C0EE  F0E6         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1914  004496  0EF5               	movlw	low sprintf@ap
  1915  004498  6FE7               	movwf	vfprintf@ap& (0+255),b
  1916  00449A  0E00               	movlw	high sprintf@ap
  1917  00449C  6FE8               	movwf	(vfprintf@ap+1)& (0+255),b
  1918  00449E  ECE5  F020         	call	_vfprintf	;wreg free
  1919  0044A2  0100               	movlb	0	; () banked
  1920  0044A4  51F9               	movf	(sprintf@f+2)& (0+255),w,b
  1921  0044A6  25EB               	addwf	sprintf@s& (0+255),w,b
  1922  0044A8  6ED9               	movwf	fsr2l,c
  1923  0044AA  51FA               	movf	(sprintf@f+3)& (0+255),w,b
  1924  0044AC  21EC               	addwfc	(sprintf@s+1)& (0+255),w,b
  1925  0044AE  6EDA               	movwf	fsr2h,c
  1926  0044B0  0E00               	movlw	0
  1927  0044B2  6EDF               	movwf	indf2,c
  1928  0044B4                     
  1929                           ; BSR set to: 0
  1930  0044B4  0012               	return		;funcret
  1931  0044B6                     __end_of_sprintf:
  1932                           	opt callstack 0
  1933                           
  1934 ;; *************** function _vfprintf *****************
  1935 ;; Defined at:
  1936 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  fp              2  131[BANK0 ] PTR struct _IO_FILE
  1939 ;;		 -> sprintf@f(6), 
  1940 ;;  fmt             2  133[BANK0 ] PTR const unsigned char 
  1941 ;;		 -> STR_6(17), STR_5(19), STR_4(18), STR_3(34), 
  1942 ;;  ap              2  135[BANK0 ] PTR PTR void 
  1943 ;;		 -> sprintf@ap(2), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  cfmt            2  137[BANK0 ] PTR unsigned char 
  1946 ;;		 -> STR_6(17), STR_5(19), STR_4(18), STR_3(34), 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  2  131[BANK0 ] int 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         0       6       0       0       0       0       0       0       0
  1957 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        8 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    8
  1963 ;; This function calls:
  1964 ;;		_vfpfcnvrt
  1965 ;; This function is called by:
  1966 ;;		_sprintf
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text4
  1971  0041CA                     __ptext4:
  1972                           	opt callstack 0
  1973  0041CA                     _vfprintf:
  1974                           	opt callstack 20
  1975  0041CA                     
  1976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1977  0041CA  C0E5  F0E9         	movff	vfprintf@fmt,vfprintf@cfmt
  1978  0041CE  C0E6  F0EA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1979  0041D2                     
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1981  0041D2  0E00               	movlw	0
  1982  0041D4  0101               	movlb	1	; () banked
  1983  0041D6  6F31               	movwf	(_nout+1)& (0+255),b
  1984  0041D8  0E00               	movlw	0
  1985  0041DA  6F30               	movwf	_nout& (0+255),b
  1986                           
  1987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1988  0041DC  EF07  F021         	goto	l8079
  1989  0041E0                     l8077:
  1990                           
  1991                           ; BSR set to: 1
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1993  0041E0  C0E3  F0C5         	movff	vfprintf@fp,vfpfcnvrt@fp
  1994  0041E4  C0E4  F0C6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1995  0041E8  0EE9               	movlw	low vfprintf@cfmt
  1996  0041EA  0100               	movlb	0	; () banked
  1997  0041EC  6FC7               	movwf	vfpfcnvrt@fmt& (0+255),b
  1998  0041EE  0E00               	movlw	high vfprintf@cfmt
  1999  0041F0  6FC8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2000  0041F2  C0E7  F0C9         	movff	vfprintf@ap,vfpfcnvrt@ap
  2001  0041F6  C0E8  F0CA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2002  0041FA  EC2D  F00A         	call	_vfpfcnvrt	;wreg free
  2003  0041FE  0100               	movlb	0	; () banked
  2004  004200  51C5               	movf	?_vfpfcnvrt& (0+255),w,b
  2005  004202  0101               	movlb	1	; () banked
  2006  004204  2730               	addwf	_nout& (0+255),f,b
  2007  004206  0100               	movlb	0	; () banked
  2008  004208  51C6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2009  00420A  0101               	movlb	1	; () banked
  2010  00420C  2331               	addwfc	(_nout+1)& (0+255),f,b
  2011  00420E                     l8079:
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2015  00420E  C0E9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2016  004212  C0EA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2017  004216                     	if	0	;tblptru may be non-zero
  2018  004216                     	endif
  2019  004216                     	if	0	;tblptru may be non-zero
  2020  004216                     	endif
  2021  004216  0008               	tblrd		*
  2022  004218  50F5               	movf	tablat,w,c
  2023  00421A  0900               	iorlw	0
  2024  00421C  A4D8               	btfss	status,2,c
  2025  00421E  EF13  F021         	goto	u9861
  2026  004222  EF15  F021         	goto	u9860
  2027  004226                     u9861:
  2028  004226  EFF0  F020         	goto	l8077
  2029  00422A                     u9860:
  2030  00422A                     
  2031                           ; BSR set to: 1
  2032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2033  00422A  C130  F0E3         	movff	_nout,?_vfprintf
  2034  00422E  C131  F0E4         	movff	_nout+1,?_vfprintf+1
  2035  004232                     
  2036                           ; BSR set to: 1
  2037  004232  0012               	return		;funcret
  2038  004234                     __end_of_vfprintf:
  2039                           	opt callstack 0
  2040                           
  2041 ;; *************** function _vfpfcnvrt *****************
  2042 ;; Defined at:
  2043 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  fp              2  101[BANK0 ] PTR struct _IO_FILE
  2046 ;;		 -> sprintf@f(6), 
  2047 ;;  fmt             2  103[BANK0 ] PTR PTR unsigned char 
  2048 ;;		 -> vfprintf@cfmt(2), 
  2049 ;;  ap              2  105[BANK0 ] PTR PTR void 
  2050 ;;		 -> sprintf@ap(2), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  ll              8  111[BANK0 ] long long 
  2053 ;;  llu             8    0        unsigned long long 
  2054 ;;  f               4  123[BANK0 ] unsigned long long 
  2055 ;;  ct              3  127[BANK0 ] unsigned char [3]
  2056 ;;  vp              3    0        PTR void 
  2057 ;;  cp              3    0        PTR unsigned char 
  2058 ;;  i               2    0        int 
  2059 ;;  done            2    0        int 
  2060 ;;  c               1  130[BANK0 ] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  2  101[BANK0 ] int 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2070 ;;      Params:         0       6       0       0       0       0       0       0       0
  2071 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2072 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2073 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2074 ;;Total ram usage:       30 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    7
  2077 ;; This function calls:
  2078 ;;		_atoi
  2079 ;;		_dtoa
  2080 ;;		_efgtoa
  2081 ;;		_fputc
  2082 ;;		_isdigit
  2083 ;;		_isupper
  2084 ;;		_strncmp
  2085 ;;		_tolower
  2086 ;; This function is called by:
  2087 ;;		_vfprintf
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text5
  2092  00145A                     __ptext5:
  2093                           	opt callstack 0
  2094  00145A                     _vfpfcnvrt:
  2095                           	opt callstack 20
  2096  00145A                     
  2097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2098  00145A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2099  00145E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2100  001462  CFDE FFF6          	movff	postinc2,tblptrl
  2101  001466  CFDD FFF7          	movff	postdec2,tblptrh
  2102  00146A                     	if	0	;tblptru may be non-zero
  2103  00146A                     	endif
  2104  00146A                     	if	0	;tblptru may be non-zero
  2105  00146A                     	endif
  2106  00146A  0008               	tblrd		*
  2107  00146C  50F5               	movf	tablat,w,c
  2108  00146E  0A25               	xorlw	37
  2109  001470  A4D8               	btfss	status,2,c
  2110  001472  EF3D  F00A         	goto	u9611
  2111  001476  EF3F  F00A         	goto	u9610
  2112  00147A                     u9611:
  2113  00147A  EFAC  F00C         	goto	l8005
  2114  00147E                     u9610:
  2115  00147E                     
  2116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2117  00147E  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2118  001482  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2119  001486  2ADE               	incf	postinc2,f,c
  2120  001488  0E00               	movlw	0
  2121  00148A  22DD               	addwfc	postdec2,f,c
  2122  00148C                     
  2123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2124  00148C  0E00               	movlw	0
  2125  00148E  0101               	movlb	1	; () banked
  2126  001490  6F33               	movwf	(_width+1)& (0+255),b
  2127  001492  0E00               	movlw	0
  2128  001494  6F32               	movwf	_width& (0+255),b
  2129  001496  C132  F057         	movff	_width,_flags
  2130  00149A  C133  F058         	movff	_width+1,_flags+1
  2131  00149E                     
  2132                           ; BSR set to: 1
  2133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2134  00149E  6855               	setf	_prec^0,c
  2135  0014A0  6856               	setf	(_prec+1)^0,c
  2136  0014A2                     
  2137                           ; BSR set to: 1
  2138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2139  0014A2  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2140  0014A6  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2141  0014AA  CFDE FFF6          	movff	postinc2,tblptrl
  2142  0014AE  CFDD FFF7          	movff	postdec2,tblptrh
  2143  0014B2                     	if	0	;tblptru may be non-zero
  2144  0014B2                     	endif
  2145  0014B2                     	if	0	;tblptru may be non-zero
  2146  0014B2                     	endif
  2147  0014B2  0008               	tblrd		*
  2148  0014B4  50F5               	movf	tablat,w,c
  2149  0014B6  0A2E               	xorlw	46
  2150  0014B8  A4D8               	btfss	status,2,c
  2151  0014BA  EF61  F00A         	goto	u9621
  2152  0014BE  EF63  F00A         	goto	u9620
  2153  0014C2                     u9621:
  2154  0014C2  EFE1  F00A         	goto	l7941
  2155  0014C6                     u9620:
  2156  0014C6                     
  2157                           ; BSR set to: 1
  2158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2159  0014C6  0E00               	movlw	0
  2160  0014C8  6E56               	movwf	(_prec+1)^0,c
  2161  0014CA  0E00               	movlw	0
  2162  0014CC  6E55               	movwf	_prec^0,c
  2163  0014CE                     
  2164                           ; BSR set to: 1
  2165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2166  0014CE  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2167  0014D2  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2168  0014D6  2ADE               	incf	postinc2,f,c
  2169  0014D8  0E00               	movlw	0
  2170  0014DA  22DD               	addwfc	postdec2,f,c
  2171  0014DC                     
  2172                           ; BSR set to: 1
  2173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2174  0014DC  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2175  0014E0  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2176  0014E4  CFDE FFF6          	movff	postinc2,tblptrl
  2177  0014E8  CFDD FFF7          	movff	postdec2,tblptrh
  2178  0014EC                     	if	0	;tblptru may be non-zero
  2179  0014EC                     	endif
  2180  0014EC                     	if	0	;tblptru may be non-zero
  2181  0014EC                     	endif
  2182  0014EC  0008               	tblrd		*
  2183  0014EE  50F5               	movf	tablat,w,c
  2184  0014F0  0A2A               	xorlw	42
  2185  0014F2  A4D8               	btfss	status,2,c
  2186  0014F4  EF7E  F00A         	goto	u9631
  2187  0014F8  EF80  F00A         	goto	u9630
  2188  0014FC                     u9631:
  2189  0014FC  EF9D  F00A         	goto	l7931
  2190  001500                     u9630:
  2191  001500                     
  2192                           ; BSR set to: 1
  2193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2194  001500  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2195  001504  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2196  001508  2ADE               	incf	postinc2,f,c
  2197  00150A  0E00               	movlw	0
  2198  00150C  22DD               	addwfc	postdec2,f,c
  2199                           
  2200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2201  00150E  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2202  001512  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2203  001516  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2204  00151A  0E02               	movlw	2
  2205  00151C  26DE               	addwf	postinc2,f,c
  2206  00151E  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2207  001522  0E00               	movlw	0
  2208  001524  22DD               	addwfc	postdec2,f,c
  2209  001526  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2210  00152A  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2211  00152E  CFDE F055          	movff	postinc2,_prec
  2212  001532  CFDD F056          	movff	postdec2,_prec+1
  2213                           
  2214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2215  001536  EFE1  F00A         	goto	l7941
  2216  00153A                     l7931:
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2220  00153A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2221  00153E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2222  001542  CFDE F00D          	movff	postinc2,atoi@s
  2223  001546  CFDD F00E          	movff	postdec2,atoi@s+1
  2224  00154A  EC3D  F017         	call	_atoi	;wreg free
  2225  00154E  C00D  F055         	movff	?_atoi,_prec
  2226  001552  C00E  F056         	movff	?_atoi+1,_prec+1
  2227                           
  2228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2229  001556  EFB4  F00A         	goto	l7935
  2230  00155A                     l7933:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2234  00155A  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  00155E  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  001562  2ADE               	incf	postinc2,f,c
  2237  001564  0E00               	movlw	0
  2238  001566  22DD               	addwfc	postdec2,f,c
  2239  001568                     l7935:
  2240  001568  0ED0               	movlw	208
  2241  00156A  0100               	movlb	0	; () banked
  2242  00156C  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  2243  00156E  0EFF               	movlw	255
  2244  001570  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2245  001572  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2246  001576  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2247  00157A  CFDE FFF6          	movff	postinc2,tblptrl
  2248  00157E  CFDD FFF7          	movff	postdec2,tblptrh
  2249  001582                     	if	0	;tblptru may be non-zero
  2250  001582                     	endif
  2251  001582                     	if	0	;tblptru may be non-zero
  2252  001582                     	endif
  2253  001582  0008               	tblrd		*
  2254  001584  50F5               	movf	tablat,w,c
  2255  001586  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2256  001588  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2257  00158A  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  2258  00158C  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2259  00158E  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2260  001590  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2261  001592  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2262  001594  E10A               	bnz	u9640
  2263  001596  0E0A               	movlw	10
  2264  001598  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2265  00159A  A0D8               	btfss	status,0,c
  2266  00159C  EFD2  F00A         	goto	u9641
  2267  0015A0  EFD5  F00A         	goto	u9640
  2268  0015A4                     u9641:
  2269  0015A4  0E01               	movlw	1
  2270  0015A6  EFD6  F00A         	goto	u9650
  2271  0015AA                     u9640:
  2272  0015AA  0E00               	movlw	0
  2273  0015AC                     u9650:
  2274  0015AC  6FD7               	movwf	_vfpfcnvrt$840& (0+255),b
  2275  0015AE  6BD8               	clrf	(_vfpfcnvrt$840+1)& (0+255),b
  2276  0015B0                     
  2277                           ; BSR set to: 0
  2278  0015B0  51D7               	movf	_vfpfcnvrt$840& (0+255),w,b
  2279  0015B2  11D8               	iorwf	(_vfpfcnvrt$840+1)& (0+255),w,b
  2280  0015B4  A4D8               	btfss	status,2,c
  2281  0015B6  EFDF  F00A         	goto	u9661
  2282  0015BA  EFE1  F00A         	goto	u9660
  2283  0015BE                     u9661:
  2284  0015BE  EFAD  F00A         	goto	l7933
  2285  0015C2                     u9660:
  2286  0015C2                     l7941:
  2287                           
  2288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2289  0015C2  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2290  0015C6  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2291  0015CA  CFDE FFF6          	movff	postinc2,tblptrl
  2292  0015CE  CFDD FFF7          	movff	postdec2,tblptrh
  2293  0015D2                     	if	0	;tblptru may be non-zero
  2294  0015D2                     	endif
  2295  0015D2                     	if	0	;tblptru may be non-zero
  2296  0015D2                     	endif
  2297  0015D2  0008               	tblrd		*
  2298  0015D4  50F5               	movf	tablat,w,c
  2299  0015D6  6E0C               	movwf	tolower@c^0,c
  2300  0015D8  6A0D               	clrf	(tolower@c+1)^0,c
  2301  0015DA  EC4F  F021         	call	_tolower	;wreg free
  2302  0015DE  500C               	movf	?_tolower^0,w,c
  2303  0015E0  0100               	movlb	0	; () banked
  2304  0015E2  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  2305  0015E4                     
  2306                           ; BSR set to: 0
  2307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2308  0015E4  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  2309  0015E6  B4D8               	btfsc	status,2,c
  2310  0015E8  EFF8  F00A         	goto	u9671
  2311  0015EC  EFFA  F00A         	goto	u9670
  2312  0015F0                     u9671:
  2313  0015F0  EF34  F00B         	goto	l7951
  2314  0015F4                     u9670:
  2315  0015F4                     
  2316                           ; BSR set to: 0
  2317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2318  0015F4  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2319  0015F8  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2320  0015FC  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2321  001600  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2322  001604  0E01               	movlw	1
  2323  001606  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2324  001608  0E00               	movlw	0
  2325  00160A  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2326  00160C  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2327  001610  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2328  001614                     	if	0	;tblptru may be non-zero
  2329  001614                     	endif
  2330  001614                     	if	0	;tblptru may be non-zero
  2331  001614                     	endif
  2332  001614  0008               	tblrd		*
  2333  001616  50F5               	movf	tablat,w,c
  2334  001618  6E0C               	movwf	tolower@c^0,c
  2335  00161A  6A0D               	clrf	(tolower@c+1)^0,c
  2336  00161C  EC4F  F021         	call	_tolower	;wreg free
  2337  001620  500C               	movf	?_tolower^0,w,c
  2338  001622  0100               	movlb	0	; () banked
  2339  001624  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2340  001626                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2343  001626  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2344  001628  B4D8               	btfsc	status,2,c
  2345  00162A  EF19  F00B         	goto	u9681
  2346  00162E  EF1B  F00B         	goto	u9680
  2347  001632                     u9681:
  2348  001632  EF34  F00B         	goto	l7951
  2349  001636                     u9680:
  2350  001636                     
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2353  001636  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2354  00163A  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2355  00163E  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2356  001642  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2357  001646  0E02               	movlw	2
  2358  001648  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2359  00164A  0E00               	movlw	0
  2360  00164C  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2361  00164E  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2362  001652  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2363  001656                     	if	0	;tblptru may be non-zero
  2364  001656                     	endif
  2365  001656                     	if	0	;tblptru may be non-zero
  2366  001656                     	endif
  2367  001656  0008               	tblrd		*
  2368  001658  50F5               	movf	tablat,w,c
  2369  00165A  6E0C               	movwf	tolower@c^0,c
  2370  00165C  6A0D               	clrf	(tolower@c+1)^0,c
  2371  00165E  EC4F  F021         	call	_tolower	;wreg free
  2372  001662  500C               	movf	?_tolower^0,w,c
  2373  001664  0100               	movlb	0	; () banked
  2374  001666  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2375  001668                     l7951:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2379  001668  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2380  00166C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2381  001670  CFDE FFF6          	movff	postinc2,tblptrl
  2382  001674  CFDD FFF7          	movff	postdec2,tblptrh
  2383  001678                     	if	0	;tblptru may be non-zero
  2384  001678                     	endif
  2385  001678                     	if	0	;tblptru may be non-zero
  2386  001678                     	endif
  2387  001678  0008               	tblrd		*
  2388  00167A  50F5               	movf	tablat,w,c
  2389  00167C  0A64               	xorlw	100
  2390  00167E  B4D8               	btfsc	status,2,c
  2391  001680  EF44  F00B         	goto	u9691
  2392  001684  EF46  F00B         	goto	u9690
  2393  001688                     u9691:
  2394  001688  EF58  F00B         	goto	l7955
  2395  00168C                     u9690:
  2396  00168C                     
  2397                           ; BSR set to: 0
  2398  00168C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2399  001690  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2400  001694  CFDE FFF6          	movff	postinc2,tblptrl
  2401  001698  CFDD FFF7          	movff	postdec2,tblptrh
  2402  00169C                     	if	0	;tblptru may be non-zero
  2403  00169C                     	endif
  2404  00169C                     	if	0	;tblptru may be non-zero
  2405  00169C                     	endif
  2406  00169C  0008               	tblrd		*
  2407  00169E  50F5               	movf	tablat,w,c
  2408  0016A0  0A69               	xorlw	105
  2409  0016A2  A4D8               	btfss	status,2,c
  2410  0016A4  EF56  F00B         	goto	u9701
  2411  0016A8  EF58  F00B         	goto	u9700
  2412  0016AC                     u9701:
  2413  0016AC  EF98  F00B         	goto	l7961
  2414  0016B0                     u9700:
  2415  0016B0                     l7955:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2419  0016B0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2420  0016B4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2421  0016B8  2ADE               	incf	postinc2,f,c
  2422  0016BA  0E00               	movlw	0
  2423  0016BC  22DD               	addwfc	postdec2,f,c
  2424                           
  2425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2426  0016BE  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2427  0016C2  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2428  0016C6  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2429  0016CA  0E02               	movlw	2
  2430  0016CC  26DE               	addwf	postinc2,f,c
  2431  0016CE  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2432  0016D2  0E00               	movlw	0
  2433  0016D4  22DD               	addwfc	postdec2,f,c
  2434  0016D6  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2435  0016DA  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2436  0016DE  CFDE F0CF          	movff	postinc2,vfpfcnvrt@ll
  2437  0016E2  CFDD F0D0          	movff	postdec2,vfpfcnvrt@ll+1
  2438  0016E6  0E00               	movlw	0
  2439  0016E8  BFD0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2440  0016EA  0EFF               	movlw	-1
  2441  0016EC  6FD1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2442  0016EE  6FD2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2443  0016F0  6FD3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2444  0016F2  6FD4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2445  0016F4  6FD5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2446  0016F6  6FD6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2447  0016F8                     
  2448                           ; BSR set to: 0
  2449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2450  0016F8  C0C5  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  2451  0016FC  C0C6  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2452  001700  C0CF  F023         	movff	vfpfcnvrt@ll,dtoa@d
  2453  001704  C0D0  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2454  001708  C0D1  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2455  00170C  C0D2  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2456  001710  C0D3  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2457  001714  C0D4  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2458  001718  C0D5  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2459  00171C  C0D6  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2460  001720  EC0B  F013         	call	_dtoa	;wreg free
  2461  001724  C021  F0C5         	movff	?_dtoa,?_vfpfcnvrt
  2462  001728  C022  F0C6         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2463  00172C  EFC7  F00C         	goto	l757
  2464  001730                     l7961:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2468  001730  0E66               	movlw	102
  2469  001732  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2470  001734  A4D8               	btfss	status,2,c
  2471  001736  EF9F  F00B         	goto	u9711
  2472  00173A  EFA1  F00B         	goto	u9710
  2473  00173E                     u9711:
  2474  00173E  EFE1  F00B         	goto	l7973
  2475  001742                     u9710:
  2476  001742                     
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2479  001742  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2480  001746  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2481  00174A  CFDE FFF6          	movff	postinc2,tblptrl
  2482  00174E  CFDD FFF7          	movff	postdec2,tblptrh
  2483  001752                     	if	0	;tblptru may be non-zero
  2484  001752                     	endif
  2485  001752                     	if	0	;tblptru may be non-zero
  2486  001752                     	endif
  2487  001752  0008               	tblrd		*
  2488  001754  CFF5 F0E2          	movff	tablat,vfpfcnvrt@c
  2489  001758                     
  2490                           ; BSR set to: 0
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2492  001758  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  00175C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  001760  2ADE               	incf	postinc2,f,c
  2495  001762  0E00               	movlw	0
  2496  001764  22DD               	addwfc	postdec2,f,c
  2497  001766                     
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2500  001766  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2501  00176A  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2502  00176E  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2503  001772  0E04               	movlw	4
  2504  001774  26DE               	addwf	postinc2,f,c
  2505  001776  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2506  00177A  0E00               	movlw	0
  2507  00177C  22DD               	addwfc	postdec2,f,c
  2508  00177E  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2509  001782  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2510  001786  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2511  00178A  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2512  00178E  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2513  001792  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2514  001796                     l7969:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2518  001796  C0C5  F081         	movff	vfpfcnvrt@fp,efgtoa@fp
  2519  00179A  C0C6  F082         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2520  00179E  C0DB  F083         	movff	vfpfcnvrt@f,efgtoa@f
  2521  0017A2  C0DC  F084         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2522  0017A6  C0DD  F085         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2523  0017AA  C0DE  F086         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2524  0017AE  C0E2  F087         	movff	vfpfcnvrt@c,efgtoa@c
  2525  0017B2  EC51  F004         	call	_efgtoa	;wreg free
  2526  0017B6  C081  F0C5         	movff	?_efgtoa,?_vfpfcnvrt
  2527  0017BA  C082  F0C6         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2528  0017BE  EFC7  F00C         	goto	l757
  2529  0017C2                     l7973:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2533  0017C2  0EDF               	movlw	low vfpfcnvrt@ct
  2534  0017C4  6E06               	movwf	strncmp@_l^0,c
  2535  0017C6  0E00               	movlw	high vfpfcnvrt@ct
  2536  0017C8  6E07               	movwf	(strncmp@_l+1)^0,c
  2537  0017CA  0E9E               	movlw	low STR_15
  2538  0017CC  6E08               	movwf	strncmp@_r^0,c
  2539  0017CE  0E08               	movlw	high STR_15
  2540  0017D0  6E09               	movwf	(strncmp@_r+1)^0,c
  2541  0017D2  0E00               	movlw	0
  2542  0017D4  6E0B               	movwf	(strncmp@n+1)^0,c
  2543  0017D6  0E02               	movlw	2
  2544  0017D8  6E0A               	movwf	strncmp@n^0,c
  2545  0017DA  EC68  F01D         	call	_strncmp	;wreg free
  2546  0017DE  5006               	movf	?_strncmp^0,w,c
  2547  0017E0  1007               	iorwf	(?_strncmp+1)^0,w,c
  2548  0017E2  A4D8               	btfss	status,2,c
  2549  0017E4  EFF6  F00B         	goto	u9721
  2550  0017E8  EFF8  F00B         	goto	u9720
  2551  0017EC                     u9721:
  2552  0017EC  EF74  F00C         	goto	l7989
  2553  0017F0                     u9720:
  2554  0017F0                     
  2555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2556  0017F0  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2557  0017F4  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2558  0017F8  CFDE F0CB          	movff	postinc2,??_vfpfcnvrt
  2559  0017FC  CFDD F0CC          	movff	postdec2,??_vfpfcnvrt+1
  2560  001800  0E01               	movlw	1
  2561  001802  0100               	movlb	0	; () banked
  2562  001804  27CB               	addwf	??_vfpfcnvrt& (0+255),f,b
  2563  001806  0E00               	movlw	0
  2564  001808  23CC               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2565  00180A  C0CB  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2566  00180E  C0CC  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2567  001812                     	if	0	;tblptru may be non-zero
  2568  001812                     	endif
  2569  001812                     	if	0	;tblptru may be non-zero
  2570  001812                     	endif
  2571  001812  0008               	tblrd		*
  2572  001814  CFF5 F0E2          	movff	tablat,vfpfcnvrt@c
  2573  001818  0EBF               	movlw	191
  2574  00181A  6FCB               	movwf	??_vfpfcnvrt& (0+255),b
  2575  00181C  0EFF               	movlw	255
  2576  00181E  6FCC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2577  001820  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2578  001824  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2579  001828  CFDE FFF6          	movff	postinc2,tblptrl
  2580  00182C  CFDD FFF7          	movff	postdec2,tblptrh
  2581  001830                     	if	0	;tblptru may be non-zero
  2582  001830                     	endif
  2583  001830                     	if	0	;tblptru may be non-zero
  2584  001830                     	endif
  2585  001830  0008               	tblrd		*
  2586  001832  50F5               	movf	tablat,w,c
  2587  001834  6FCD               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2588  001836  6BCE               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2589  001838  51CB               	movf	??_vfpfcnvrt& (0+255),w,b
  2590  00183A  27CD               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2591  00183C  51CC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2592  00183E  23CE               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2593  001840  51CE               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2594  001842  E10A               	bnz	u9730
  2595  001844  0E1A               	movlw	26
  2596  001846  5DCD               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2597  001848  A0D8               	btfss	status,0,c
  2598  00184A  EF29  F00C         	goto	u9731
  2599  00184E  EF2C  F00C         	goto	u9730
  2600  001852                     u9731:
  2601  001852  0E01               	movlw	1
  2602  001854  EF2D  F00C         	goto	u9740
  2603  001858                     u9730:
  2604  001858  0E00               	movlw	0
  2605  00185A                     u9740:
  2606  00185A  6FD9               	movwf	_vfpfcnvrt$845& (0+255),b
  2607  00185C  6BDA               	clrf	(_vfpfcnvrt$845+1)& (0+255),b
  2608  00185E                     
  2609                           ; BSR set to: 0
  2610  00185E  51D9               	movf	_vfpfcnvrt$845& (0+255),w,b
  2611  001860  11DA               	iorwf	(_vfpfcnvrt$845+1)& (0+255),w,b
  2612  001862  B4D8               	btfsc	status,2,c
  2613  001864  EF36  F00C         	goto	u9751
  2614  001868  EF38  F00C         	goto	u9750
  2615  00186C                     u9751:
  2616  00186C  EF52  F00C         	goto	l7983
  2617  001870                     u9750:
  2618  001870                     
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2621  001870  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2622  001874  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2623  001878  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2624  00187C  0E04               	movlw	4
  2625  00187E  26DE               	addwf	postinc2,f,c
  2626  001880  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2627  001884  0E00               	movlw	0
  2628  001886  22DD               	addwfc	postdec2,f,c
  2629  001888  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2630  00188C  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2631  001890  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2632  001894  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2633  001898  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2634  00189C  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2635                           
  2636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2637  0018A0  EF6A  F00C         	goto	l765
  2638  0018A4                     l7983:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2642  0018A4  C0C9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2643  0018A8  C0CA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2644  0018AC  CFDF F0CB          	movff	indf2,??_vfpfcnvrt
  2645  0018B0  0E04               	movlw	4
  2646  0018B2  26DE               	addwf	postinc2,f,c
  2647  0018B4  CFDF F0CC          	movff	indf2,??_vfpfcnvrt+1
  2648  0018B8  0E00               	movlw	0
  2649  0018BA  22DD               	addwfc	postdec2,f,c
  2650  0018BC  C0CB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2651  0018C0  C0CC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2652  0018C4  CFDE F0DB          	movff	postinc2,vfpfcnvrt@f
  2653  0018C8  CFDE F0DC          	movff	postinc2,vfpfcnvrt@f+1
  2654  0018CC  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f+2
  2655  0018D0  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+3
  2656  0018D4                     l765:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2660  0018D4  0E02               	movlw	2
  2661  0018D6  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2662  0018DA  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2663  0018DE  26DE               	addwf	postinc2,f,c
  2664  0018E0  0E00               	movlw	0
  2665  0018E2  22DD               	addwfc	postdec2,f,c
  2666  0018E4  EFCB  F00B         	goto	l7969
  2667  0018E8                     l7989:
  2668                           
  2669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2670  0018E8  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2671  0018EC  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2672  0018F0  CFDE FFF6          	movff	postinc2,tblptrl
  2673  0018F4  CFDD FFF7          	movff	postdec2,tblptrh
  2674  0018F8                     	if	0	;tblptru may be non-zero
  2675  0018F8                     	endif
  2676  0018F8                     	if	0	;tblptru may be non-zero
  2677  0018F8                     	endif
  2678  0018F8  0008               	tblrd		*
  2679  0018FA  50F5               	movf	tablat,w,c
  2680  0018FC  0A25               	xorlw	37
  2681  0018FE  A4D8               	btfss	status,2,c
  2682  001900  EF84  F00C         	goto	u9761
  2683  001904  EF86  F00C         	goto	u9760
  2684  001908                     u9761:
  2685  001908  EF9E  F00C         	goto	l7999
  2686  00190C                     u9760:
  2687  00190C                     
  2688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2689  00190C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2690  001910  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2691  001914  2ADE               	incf	postinc2,f,c
  2692  001916  0E00               	movlw	0
  2693  001918  22DD               	addwfc	postdec2,f,c
  2694  00191A                     
  2695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2696  00191A  0E00               	movlw	0
  2697  00191C  6E07               	movwf	(fputc@c+1)^0,c
  2698  00191E  0E25               	movlw	37
  2699  001920  6E06               	movwf	fputc@c^0,c
  2700  001922  C0C5  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2701  001926  C0C6  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2702  00192A  ECD3  F01D         	call	_fputc	;wreg free
  2703  00192E                     l7995:
  2704                           
  2705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2706  00192E  0E00               	movlw	0
  2707  001930  0100               	movlb	0	; () banked
  2708  001932  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2709  001934  0E01               	movlw	1
  2710  001936  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2711  001938  EFC7  F00C         	goto	l757
  2712  00193C                     l7999:
  2713                           
  2714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2715  00193C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2716  001940  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2717  001944  2ADE               	incf	postinc2,f,c
  2718  001946  0E00               	movlw	0
  2719  001948  22DD               	addwfc	postdec2,f,c
  2720  00194A                     
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2722  00194A  0E00               	movlw	0
  2723  00194C  0100               	movlb	0	; () banked
  2724  00194E  6FC6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2725  001950  0E00               	movlw	0
  2726  001952  6FC5               	movwf	?_vfpfcnvrt& (0+255),b
  2727  001954  EFC7  F00C         	goto	l757
  2728  001958                     l8005:
  2729                           
  2730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2731  001958  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2732  00195C  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2733  001960  CFDE FFF6          	movff	postinc2,tblptrl
  2734  001964  CFDD FFF7          	movff	postdec2,tblptrh
  2735  001968                     	if	0	;tblptru may be non-zero
  2736  001968                     	endif
  2737  001968                     	if	0	;tblptru may be non-zero
  2738  001968                     	endif
  2739  001968  0008               	tblrd		*
  2740  00196A  50F5               	movf	tablat,w,c
  2741  00196C  6E06               	movwf	fputc@c^0,c
  2742  00196E  6A07               	clrf	(fputc@c+1)^0,c
  2743  001970  C0C5  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2744  001974  C0C6  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2745  001978  ECD3  F01D         	call	_fputc	;wreg free
  2746  00197C                     
  2747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2748  00197C  C0C7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2749  001980  C0C8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2750  001984  2ADE               	incf	postinc2,f,c
  2751  001986  0E00               	movlw	0
  2752  001988  22DD               	addwfc	postdec2,f,c
  2753  00198A  EF97  F00C         	goto	l7995
  2754  00198E                     l757:
  2755  00198E  0012               	return		;funcret
  2756  001990                     __end_of_vfpfcnvrt:
  2757                           	opt callstack 0
  2758                           
  2759 ;; *************** function _strncmp *****************
  2760 ;; Defined at:
  2761 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  2764 ;;		 -> vfpfcnvrt@ct(3), 
  2765 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  2766 ;;		 -> STR_17(3), 
  2767 ;;  n               2    9[COMRAM] unsigned int 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  r               2   14[COMRAM] PTR const unsigned char 
  2770 ;;		 -> STR_17(3), 
  2771 ;;  l               2   12[COMRAM] PTR const unsigned char 
  2772 ;;		 -> vfpfcnvrt@ct(3), 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  2    5[COMRAM] int 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2782 ;;      Params:         6       0       0       0       0       0       0       0       0
  2783 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2784 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2785 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2786 ;;Total ram usage:       11 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    2
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_vfpfcnvrt
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text6
  2797  003AD0                     __ptext6:
  2798                           	opt callstack 0
  2799  003AD0                     _strncmp:
  2800                           	opt callstack 24
  2801  003AD0  C006  F00D         	movff	strncmp@_l,strncmp@l
  2802  003AD4  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  2803  003AD8  C008  F00F         	movff	strncmp@_r,strncmp@r
  2804  003ADC  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  2805  003AE0  060A               	decf	strncmp@n^0,f,c
  2806  003AE2  A0D8               	btfss	status,0,c
  2807  003AE4  060B               	decf	(strncmp@n+1)^0,f,c
  2808  003AE6  280A               	incf	strncmp@n^0,w,c
  2809  003AE8  E106               	bnz	u9561
  2810  003AEA  280B               	incf	(strncmp@n+1)^0,w,c
  2811  003AEC  A4D8               	btfss	status,2,c
  2812  003AEE  EF7B  F01D         	goto	u9561
  2813  003AF2  EF7D  F01D         	goto	u9560
  2814  003AF6                     u9561:
  2815  003AF6  EF8A  F01D         	goto	l7901
  2816  003AFA                     u9560:
  2817  003AFA  0E00               	movlw	0
  2818  003AFC  6E07               	movwf	(?_strncmp+1)^0,c
  2819  003AFE  0E00               	movlw	0
  2820  003B00  6E06               	movwf	?_strncmp^0,c
  2821  003B02  EFD2  F01D         	goto	l1589
  2822  003B06                     l7899:
  2823  003B06  4A0D               	infsnz	strncmp@l^0,f,c
  2824  003B08  2A0E               	incf	(strncmp@l+1)^0,f,c
  2825  003B0A  4A0F               	infsnz	strncmp@r^0,f,c
  2826  003B0C  2A10               	incf	(strncmp@r+1)^0,f,c
  2827  003B0E  060A               	decf	strncmp@n^0,f,c
  2828  003B10  A0D8               	btfss	status,0,c
  2829  003B12  060B               	decf	(strncmp@n+1)^0,f,c
  2830  003B14                     l7901:
  2831  003B14  C00D  FFD9         	movff	strncmp@l,fsr2l
  2832  003B18  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2833  003B1C  50DF               	movf	indf2,w,c
  2834  003B1E  B4D8               	btfsc	status,2,c
  2835  003B20  EF94  F01D         	goto	u9571
  2836  003B24  EF96  F01D         	goto	u9570
  2837  003B28                     u9571:
  2838  003B28  EFC1  F01D         	goto	l7909
  2839  003B2C                     u9570:
  2840  003B2C  C00F  FFF6         	movff	strncmp@r,tblptrl
  2841  003B30  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2842  003B34                     	if	0	;tblptru may be non-zero
  2843  003B34                     	endif
  2844  003B34                     	if	0	;tblptru may be non-zero
  2845  003B34                     	endif
  2846  003B34  0008               	tblrd		*
  2847  003B36  50F5               	movf	tablat,w,c
  2848  003B38  0900               	iorlw	0
  2849  003B3A  B4D8               	btfsc	status,2,c
  2850  003B3C  EFA2  F01D         	goto	u9581
  2851  003B40  EFA4  F01D         	goto	u9580
  2852  003B44                     u9581:
  2853  003B44  EFC1  F01D         	goto	l7909
  2854  003B48                     u9580:
  2855  003B48  500A               	movf	strncmp@n^0,w,c
  2856  003B4A  100B               	iorwf	(strncmp@n+1)^0,w,c
  2857  003B4C  B4D8               	btfsc	status,2,c
  2858  003B4E  EFAB  F01D         	goto	u9591
  2859  003B52  EFAD  F01D         	goto	u9590
  2860  003B56                     u9591:
  2861  003B56  EFC1  F01D         	goto	l7909
  2862  003B5A                     u9590:
  2863  003B5A  C00D  FFD9         	movff	strncmp@l,fsr2l
  2864  003B5E  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2865  003B62  50DF               	movf	indf2,w,c
  2866  003B64  6E0C               	movwf	??_strncmp^0,c
  2867  003B66  C00F  FFF6         	movff	strncmp@r,tblptrl
  2868  003B6A  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2869  003B6E                     	if	0	;tblptru may be non-zero
  2870  003B6E                     	endif
  2871  003B6E                     	if	0	;tblptru may be non-zero
  2872  003B6E                     	endif
  2873  003B6E  0008               	tblrd		*
  2874  003B70  50F5               	movf	tablat,w,c
  2875  003B72  180C               	xorwf	??_strncmp^0,w,c
  2876  003B74  B4D8               	btfsc	status,2,c
  2877  003B76  EFBF  F01D         	goto	u9601
  2878  003B7A  EFC1  F01D         	goto	u9600
  2879  003B7E                     u9601:
  2880  003B7E  EF83  F01D         	goto	l7899
  2881  003B82                     u9600:
  2882  003B82                     l7909:
  2883  003B82  C00D  FFD9         	movff	strncmp@l,fsr2l
  2884  003B86  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2885  003B8A  50DF               	movf	indf2,w,c
  2886  003B8C  6E0C               	movwf	??_strncmp^0,c
  2887  003B8E  C00F  FFF6         	movff	strncmp@r,tblptrl
  2888  003B92  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2889  003B96                     	if	0	;tblptru may be non-zero
  2890  003B96                     	endif
  2891  003B96                     	if	0	;tblptru may be non-zero
  2892  003B96                     	endif
  2893  003B96  0008               	tblrd		*
  2894  003B98  50F5               	movf	tablat,w,c
  2895  003B9A  5C0C               	subwf	??_strncmp^0,w,c
  2896  003B9C  6E06               	movwf	?_strncmp^0,c
  2897  003B9E  6A07               	clrf	(?_strncmp+1)^0,c
  2898  003BA0  A0D8               	btfss	status,0,c
  2899  003BA2  0607               	decf	(?_strncmp+1)^0,f,c
  2900  003BA4                     l1589:
  2901  003BA4  0012               	return		;funcret
  2902  003BA6                     __end_of_strncmp:
  2903                           	opt callstack 0
  2904                           
  2905 ;; *************** function _efgtoa *****************
  2906 ;; Defined at:
  2907 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  fp              2   33[BANK0 ] PTR struct _IO_FILE
  2910 ;;		 -> sprintf@f(6), 
  2911 ;;  f               4   35[BANK0 ] PTR struct _IO_FILE
  2912 ;;  c               1   39[BANK0 ] unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  u               4   97[BANK0 ] unsigned char 
  2915 ;;  g               4   89[BANK0 ] unsigned char 
  2916 ;;  l               4   83[BANK0 ] unsigned char 
  2917 ;;  h               4   79[BANK0 ] unsigned char 
  2918 ;;  ou              4   45[BANK0 ] unsigned char 
  2919 ;;  n               2   95[BANK0 ] int 
  2920 ;;  e               2   93[BANK0 ] int 
  2921 ;;  i               2   87[BANK0 ] int 
  2922 ;;  w               2   76[BANK0 ] int 
  2923 ;;  p               2   73[BANK0 ] int 
  2924 ;;  sign            2   71[BANK0 ] int 
  2925 ;;  d               2   69[BANK0 ] int 
  2926 ;;  ne              2   67[BANK0 ] int 
  2927 ;;  m               2   65[BANK0 ] int 
  2928 ;;  pp              2   63[BANK0 ] int 
  2929 ;;  t               2   61[BANK0 ] int 
  2930 ;;  mode            1   78[BANK0 ] unsigned char 
  2931 ;;  nmode           1   75[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  2   33[BANK0 ] int 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2941 ;;      Params:         0       7       0       0       0       0       0       0       0
  2942 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2943 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2944 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2945 ;;Total ram usage:       68 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    6
  2948 ;; This function calls:
  2949 ;;		___awdiv
  2950 ;;		___awmod
  2951 ;;		___fladd
  2952 ;;		___fldiv
  2953 ;;		___fleq
  2954 ;;		___flge
  2955 ;;		___flmul
  2956 ;;		___flneg
  2957 ;;		___flsub
  2958 ;;		___fltol
  2959 ;;		___fpclassifyf
  2960 ;;		_floorf
  2961 ;;		_isupper
  2962 ;;		_pad
  2963 ;;		_strcpy
  2964 ;;		_tolower
  2965 ;; This function is called by:
  2966 ;;		_vfpfcnvrt
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text7
  2971  0008A2                     __ptext7:
  2972                           	opt callstack 0
  2973  0008A2                     _efgtoa:
  2974                           	opt callstack 20
  2975  0008A2                     
  2976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2977  0008A2  0E00               	movlw	0
  2978  0008A4  0100               	movlb	0	; () banked
  2979  0008A6  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  2980  0008A8  0E00               	movlw	0
  2981  0008AA  6FA7               	movwf	efgtoa@sign& (0+255),b
  2982  0008AC                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2985  0008AC  C083  F0B9         	movff	efgtoa@f,efgtoa@g
  2986  0008B0  C084  F0BA         	movff	efgtoa@f+1,efgtoa@g+1
  2987  0008B4  C085  F0BB         	movff	efgtoa@f+2,efgtoa@g+2
  2988  0008B8  C086  F0BC         	movff	efgtoa@f+3,efgtoa@g+3
  2989  0008BC                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2992  0008BC  BFBC               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2993  0008BE  EF65  F004         	goto	u8970
  2994  0008C2  EF63  F004         	goto	u8971
  2995  0008C6                     u8971:
  2996  0008C6  EF7B  F004         	goto	l7563
  2997  0008CA                     u8970:
  2998  0008CA                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3001  0008CA  0E00               	movlw	0
  3002  0008CC  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  3003  0008CE  0E01               	movlw	1
  3004  0008D0  6FA7               	movwf	efgtoa@sign& (0+255),b
  3005  0008D2                     
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3008  0008D2  C0B9  F006         	movff	efgtoa@g,___flneg@f1
  3009  0008D6  C0BA  F007         	movff	efgtoa@g+1,___flneg@f1+1
  3010  0008DA  C0BB  F008         	movff	efgtoa@g+2,___flneg@f1+2
  3011  0008DE  C0BC  F009         	movff	efgtoa@g+3,___flneg@f1+3
  3012  0008E2  EC96  F023         	call	___flneg	;wreg free
  3013  0008E6  C006  F0B9         	movff	?___flneg,efgtoa@g
  3014  0008EA  C007  F0BA         	movff	?___flneg+1,efgtoa@g+1
  3015  0008EE  C008  F0BB         	movff	?___flneg+2,efgtoa@g+2
  3016  0008F2  C009  F0BC         	movff	?___flneg+3,efgtoa@g+3
  3017  0008F6                     l7563:
  3018                           
  3019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3020  0008F6  0E00               	movlw	0
  3021  0008F8  0100               	movlb	0	; () banked
  3022  0008FA  6FC0               	movwf	(efgtoa@n+1)& (0+255),b
  3023  0008FC  0E00               	movlw	0
  3024  0008FE  6FBF               	movwf	efgtoa@n& (0+255),b
  3025  000900                     
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3028  000900  C132  F0AC         	movff	_width,efgtoa@w
  3029  000904  C133  F0AD         	movff	_width+1,efgtoa@w+1
  3030  000908                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3033  000908  51A7               	movf	efgtoa@sign& (0+255),w,b
  3034  00090A  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3035  00090C  A4D8               	btfss	status,2,c
  3036  00090E  EF8B  F004         	goto	u8981
  3037  000912  EF8D  F004         	goto	u8980
  3038  000916                     u8981:
  3039  000916  EF94  F004         	goto	l7571
  3040  00091A                     u8980:
  3041  00091A                     
  3042                           ; BSR set to: 0
  3043  00091A  A457               	btfss	_flags^0,2,c
  3044  00091C  EF92  F004         	goto	u8991
  3045  000920  EF94  F004         	goto	u8990
  3046  000924                     u8991:
  3047  000924  EFAE  F004         	goto	l7583
  3048  000928                     u8990:
  3049  000928                     l7571:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3053  000928  51A7               	movf	efgtoa@sign& (0+255),w,b
  3054  00092A  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3055  00092C  A4D8               	btfss	status,2,c
  3056  00092E  EF9B  F004         	goto	u9001
  3057  000932  EF9D  F004         	goto	u9000
  3058  000936                     u9001:
  3059  000936  EFA3  F004         	goto	l7575
  3060  00093A                     u9000:
  3061  00093A                     
  3062                           ; BSR set to: 0
  3063  00093A  0E00               	movlw	0
  3064  00093C  6F92               	movwf	(_efgtoa$815+1)& (0+255),b
  3065  00093E  0E2B               	movlw	43
  3066  000940  6F91               	movwf	_efgtoa$815& (0+255),b
  3067  000942  EFA7  F004         	goto	l7577
  3068  000946                     l7575:
  3069                           
  3070                           ; BSR set to: 0
  3071  000946  0E00               	movlw	0
  3072  000948  6F92               	movwf	(_efgtoa$815+1)& (0+255),b
  3073  00094A  0E2D               	movlw	45
  3074  00094C  6F91               	movwf	_efgtoa$815& (0+255),b
  3075  00094E                     l7577:
  3076                           
  3077                           ; BSR set to: 0
  3078  00094E  C091  F13B         	movff	_efgtoa$815,_dbuf
  3079  000952                     
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3082  000952  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  3083  000954  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  3084  000956                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3087  000956  07AC               	decf	efgtoa@w& (0+255),f,b
  3088  000958  A0D8               	btfss	status,0,c
  3089  00095A  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  3090  00095C                     l7583:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3094  00095C  C0B9  F006         	movff	efgtoa@g,___fpclassifyf@x
  3095  000960  C0BA  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3096  000964  C0BB  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3097  000968  C0BC  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3098  00096C  EC77  F01C         	call	___fpclassifyf	;wreg free
  3099  000970  0406               	decf	?___fpclassifyf^0,w,c
  3100  000972  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3101  000974  A4D8               	btfss	status,2,c
  3102  000976  EFBF  F004         	goto	u9011
  3103  00097A  EFC1  F004         	goto	u9010
  3104  00097E                     u9011:
  3105  00097E  EF18  F005         	goto	l7601
  3106  000982                     u9010:
  3107  000982  0EBF               	movlw	191
  3108  000984  0100               	movlb	0	; () banked
  3109  000986  6F88               	movwf	??_efgtoa& (0+255),b
  3110  000988  0EFF               	movlw	255
  3111  00098A  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3112  00098C  5187               	movf	efgtoa@c& (0+255),w,b
  3113  00098E  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  3114  000990  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  3115  000992  5188               	movf	??_efgtoa& (0+255),w,b
  3116  000994  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3117  000996  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3118  000998  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3119  00099A  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3120  00099C  E10A               	bnz	u9020
  3121  00099E  0E1A               	movlw	26
  3122  0009A0  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3123  0009A2  A0D8               	btfss	status,0,c
  3124  0009A4  EFD6  F004         	goto	u9021
  3125  0009A8  EFD9  F004         	goto	u9020
  3126  0009AC                     u9021:
  3127  0009AC  0E01               	movlw	1
  3128  0009AE  EFDA  F004         	goto	u9030
  3129  0009B2                     u9020:
  3130  0009B2  0E00               	movlw	0
  3131  0009B4                     u9030:
  3132  0009B4  6F93               	movwf	_efgtoa$816& (0+255),b
  3133  0009B6  6B94               	clrf	(_efgtoa$816+1)& (0+255),b
  3134  0009B8                     
  3135                           ; BSR set to: 0
  3136  0009B8  5193               	movf	_efgtoa$816& (0+255),w,b
  3137  0009BA  1194               	iorwf	(_efgtoa$816+1)& (0+255),w,b
  3138  0009BC  B4D8               	btfsc	status,2,c
  3139  0009BE  EFE3  F004         	goto	u9041
  3140  0009C2  EFE5  F004         	goto	u9040
  3141  0009C6                     u9041:
  3142  0009C6  EFF3  F004         	goto	l7593
  3143  0009CA                     u9040:
  3144  0009CA                     
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3147  0009CA  0E3B               	movlw	low _dbuf
  3148  0009CC  25BF               	addwf	efgtoa@n& (0+255),w,b
  3149  0009CE  6E06               	movwf	strcpy@dest^0,c
  3150  0009D0  0E01               	movlw	high _dbuf
  3151  0009D2  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3152  0009D4  6E07               	movwf	(strcpy@dest+1)^0,c
  3153  0009D6  0E8E               	movlw	low STR_7
  3154  0009D8  6E08               	movwf	strcpy@src^0,c
  3155  0009DA  0E08               	movlw	high STR_7
  3156  0009DC  6E09               	movwf	(strcpy@src+1)^0,c
  3157  0009DE  ECAE  F021         	call	_strcpy	;wreg free
  3158                           
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3160  0009E2  EFFF  F004         	goto	l7595
  3161  0009E6                     l7593:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3165  0009E6  0E3B               	movlw	low _dbuf
  3166  0009E8  25BF               	addwf	efgtoa@n& (0+255),w,b
  3167  0009EA  6E06               	movwf	strcpy@dest^0,c
  3168  0009EC  0E01               	movlw	high _dbuf
  3169  0009EE  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3170  0009F0  6E07               	movwf	(strcpy@dest+1)^0,c
  3171  0009F2  0E96               	movlw	low STR_8
  3172  0009F4  6E08               	movwf	strcpy@src^0,c
  3173  0009F6  0E08               	movlw	high STR_8
  3174  0009F8  6E09               	movwf	(strcpy@src+1)^0,c
  3175  0009FA  ECAE  F021         	call	_strcpy	;wreg free
  3176  0009FE                     l7595:
  3177                           
  3178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3179  0009FE  0100               	movlb	0	; () banked
  3180  000A00  0EFD               	movlw	253
  3181  000A02  27AC               	addwf	efgtoa@w& (0+255),f,b
  3182  000A04  0EFF               	movlw	255
  3183  000A06  23AD               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3184  000A08                     l7597:
  3185                           
  3186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3187  000A08  C081  F016         	movff	efgtoa@fp,pad@fp
  3188  000A0C  C082  F017         	movff	efgtoa@fp+1,pad@fp+1
  3189  000A10  0E3B               	movlw	low _dbuf
  3190  000A12  6E18               	movwf	pad@buf^0,c
  3191  000A14  0E01               	movlw	high _dbuf
  3192  000A16  6E19               	movwf	(pad@buf+1)^0,c
  3193  000A18  C0AC  F01A         	movff	efgtoa@w,pad@p
  3194  000A1C  C0AD  F01B         	movff	efgtoa@w+1,pad@p+1
  3195  000A20  EC9A  F01E         	call	_pad	;wreg free
  3196  000A24  C016  F081         	movff	?_pad,?_efgtoa
  3197  000A28  C017  F082         	movff	?_pad+1,?_efgtoa+1
  3198  000A2C  EF2C  F00A         	goto	l665
  3199  000A30                     l7601:
  3200                           
  3201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3202  000A30  C0B9  F006         	movff	efgtoa@g,___fpclassifyf@x
  3203  000A34  C0BA  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3204  000A38  C0BB  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3205  000A3C  C0BC  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3206  000A40  EC77  F01C         	call	___fpclassifyf	;wreg free
  3207  000A44  5006               	movf	?___fpclassifyf^0,w,c
  3208  000A46  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3209  000A48  A4D8               	btfss	status,2,c
  3210  000A4A  EF29  F005         	goto	u9051
  3211  000A4E  EF2B  F005         	goto	u9050
  3212  000A52                     u9051:
  3213  000A52  EF6B  F005         	goto	l7619
  3214  000A56                     u9050:
  3215  000A56  0EBF               	movlw	191
  3216  000A58  0100               	movlb	0	; () banked
  3217  000A5A  6F88               	movwf	??_efgtoa& (0+255),b
  3218  000A5C  0EFF               	movlw	255
  3219  000A5E  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3220  000A60  5187               	movf	efgtoa@c& (0+255),w,b
  3221  000A62  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  3222  000A64  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  3223  000A66  5188               	movf	??_efgtoa& (0+255),w,b
  3224  000A68  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3225  000A6A  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3226  000A6C  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3227  000A6E  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3228  000A70  E10A               	bnz	u9060
  3229  000A72  0E1A               	movlw	26
  3230  000A74  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3231  000A76  A0D8               	btfss	status,0,c
  3232  000A78  EF40  F005         	goto	u9061
  3233  000A7C  EF43  F005         	goto	u9060
  3234  000A80                     u9061:
  3235  000A80  0E01               	movlw	1
  3236  000A82  EF44  F005         	goto	u9070
  3237  000A86                     u9060:
  3238  000A86  0E00               	movlw	0
  3239  000A88                     u9070:
  3240  000A88  6F95               	movwf	_efgtoa$820& (0+255),b
  3241  000A8A  6B96               	clrf	(_efgtoa$820+1)& (0+255),b
  3242  000A8C                     
  3243                           ; BSR set to: 0
  3244  000A8C  5195               	movf	_efgtoa$820& (0+255),w,b
  3245  000A8E  1196               	iorwf	(_efgtoa$820+1)& (0+255),w,b
  3246  000A90  B4D8               	btfsc	status,2,c
  3247  000A92  EF4D  F005         	goto	u9081
  3248  000A96  EF4F  F005         	goto	u9080
  3249  000A9A                     u9081:
  3250  000A9A  EF5D  F005         	goto	l7611
  3251  000A9E                     u9080:
  3252  000A9E                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3255  000A9E  0E3B               	movlw	low _dbuf
  3256  000AA0  25BF               	addwf	efgtoa@n& (0+255),w,b
  3257  000AA2  6E06               	movwf	strcpy@dest^0,c
  3258  000AA4  0E01               	movlw	high _dbuf
  3259  000AA6  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3260  000AA8  6E07               	movwf	(strcpy@dest+1)^0,c
  3261  000AAA  0E92               	movlw	low STR_11
  3262  000AAC  6E08               	movwf	strcpy@src^0,c
  3263  000AAE  0E08               	movlw	high STR_11
  3264  000AB0  6E09               	movwf	(strcpy@src+1)^0,c
  3265  000AB2  ECAE  F021         	call	_strcpy	;wreg free
  3266                           
  3267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3268  000AB6  EFFF  F004         	goto	l7595
  3269  000ABA                     l7611:
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3273  000ABA  0E3B               	movlw	low _dbuf
  3274  000ABC  25BF               	addwf	efgtoa@n& (0+255),w,b
  3275  000ABE  6E06               	movwf	strcpy@dest^0,c
  3276  000AC0  0E01               	movlw	high _dbuf
  3277  000AC2  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3278  000AC4  6E07               	movwf	(strcpy@dest+1)^0,c
  3279  000AC6  0E9A               	movlw	low STR_12
  3280  000AC8  6E08               	movwf	strcpy@src^0,c
  3281  000ACA  0E08               	movlw	high STR_12
  3282  000ACC  6E09               	movwf	(strcpy@src+1)^0,c
  3283  000ACE  ECAE  F021         	call	_strcpy	;wreg free
  3284  000AD2  EFFF  F004         	goto	l7595
  3285  000AD6                     l7619:
  3286                           
  3287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3288  000AD6  0E00               	movlw	0
  3289  000AD8  0100               	movlb	0	; () banked
  3290  000ADA  6FC1               	movwf	efgtoa@u& (0+255),b
  3291  000ADC  0E00               	movlw	0
  3292  000ADE  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  3293  000AE0  0E80               	movlw	128
  3294  000AE2  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  3295  000AE4  0E3F               	movlw	63
  3296  000AE6  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  3297                           
  3298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3299  000AE8  0E00               	movlw	0
  3300  000AEA  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  3301  000AEC  0E00               	movlw	0
  3302  000AEE  6FBD               	movwf	efgtoa@e& (0+255),b
  3303  000AF0                     
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3306  000AF0  C0B9  F006         	movff	efgtoa@g,___fleq@ff1
  3307  000AF4  C0BA  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  3308  000AF8  C0BB  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  3309  000AFC  C0BC  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  3310  000B00  0E00               	movlw	0
  3311  000B02  6E0A               	movwf	___fleq@ff2^0,c
  3312  000B04  0E00               	movlw	0
  3313  000B06  6E0B               	movwf	(___fleq@ff2+1)^0,c
  3314  000B08  0E00               	movlw	0
  3315  000B0A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  3316  000B0C  0E00               	movlw	0
  3317  000B0E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  3318  000B10  EC53  F01F         	call	___fleq	;wreg free
  3319  000B14  B0D8               	btfsc	status,0,c
  3320  000B16  EF8F  F005         	goto	u9091
  3321  000B1A  EF91  F005         	goto	u9090
  3322  000B1E                     u9091:
  3323  000B1E  EF17  F006         	goto	l7637
  3324  000B22                     u9090:
  3325  000B22  EFB0  F005         	goto	l7629
  3326  000B26                     l7625:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3330  000B26  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3331  000B2A  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3332  000B2E  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3333  000B32  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3334  000B36  0E00               	movlw	0
  3335  000B38  6F64               	movwf	___flmul@a& (0+255),b
  3336  000B3A  0E00               	movlw	0
  3337  000B3C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3338  000B3E  0E20               	movlw	32
  3339  000B40  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3340  000B42  0E41               	movlw	65
  3341  000B44  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3342  000B46  EC28  F00F         	call	___flmul	;wreg free
  3343  000B4A  C060  F0C1         	movff	?___flmul,efgtoa@u
  3344  000B4E  C061  F0C2         	movff	?___flmul+1,efgtoa@u+1
  3345  000B52  C062  F0C3         	movff	?___flmul+2,efgtoa@u+2
  3346  000B56  C063  F0C4         	movff	?___flmul+3,efgtoa@u+3
  3347  000B5A                     
  3348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3349  000B5A  0100               	movlb	0	; () banked
  3350  000B5C  4BBD               	infsnz	efgtoa@e& (0+255),f,b
  3351  000B5E  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  3352  000B60                     l7629:
  3353                           
  3354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3355  000B60  C0B9  F075         	movff	efgtoa@g,___flge@ff1
  3356  000B64  C0BA  F076         	movff	efgtoa@g+1,___flge@ff1+1
  3357  000B68  C0BB  F077         	movff	efgtoa@g+2,___flge@ff1+2
  3358  000B6C  C0BC  F078         	movff	efgtoa@g+3,___flge@ff1+3
  3359  000B70  0E00               	movlw	0
  3360  000B72  0100               	movlb	0	; () banked
  3361  000B74  6F64               	movwf	___flmul@a& (0+255),b
  3362  000B76  0E00               	movlw	0
  3363  000B78  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3364  000B7A  0E20               	movlw	32
  3365  000B7C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3366  000B7E  0E41               	movlw	65
  3367  000B80  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3368  000B82  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3369  000B86  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3370  000B8A  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3371  000B8E  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3372  000B92  EC28  F00F         	call	___flmul	;wreg free
  3373  000B96  C060  F079         	movff	?___flmul,___flge@ff2
  3374  000B9A  C061  F07A         	movff	?___flmul+1,___flge@ff2+1
  3375  000B9E  C062  F07B         	movff	?___flmul+2,___flge@ff2+2
  3376  000BA2  C063  F07C         	movff	?___flmul+3,___flge@ff2+3
  3377  000BA6  ECF4  F01B         	call	___flge	;wreg free
  3378  000BAA  0100               	movlb	0	; () banked
  3379  000BAC  B0D8               	btfsc	status,0,c
  3380  000BAE  EFDB  F005         	goto	u9101
  3381  000BB2  EFDD  F005         	goto	u9100
  3382  000BB6                     u9101:
  3383  000BB6  EF93  F005         	goto	l7625
  3384  000BBA                     u9100:
  3385  000BBA  EFFD  F005         	goto	l7635
  3386  000BBE                     l7631:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3390  000BBE  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  3391  000BC2  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  3392  000BC6  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  3393  000BCA  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  3394  000BCE  0E00               	movlw	0
  3395  000BD0  6E3C               	movwf	___fldiv@a^0,c
  3396  000BD2  0E00               	movlw	0
  3397  000BD4  6E3D               	movwf	(___fldiv@a+1)^0,c
  3398  000BD6  0E20               	movlw	32
  3399  000BD8  6E3E               	movwf	(___fldiv@a+2)^0,c
  3400  000BDA  0E41               	movlw	65
  3401  000BDC  6E3F               	movwf	(___fldiv@a+3)^0,c
  3402  000BDE  EC3E  F011         	call	___fldiv	;wreg free
  3403  000BE2  C038  F0C1         	movff	?___fldiv,efgtoa@u
  3404  000BE6  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3405  000BEA  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3406  000BEE  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3407  000BF2                     
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3409  000BF2  0100               	movlb	0	; () banked
  3410  000BF4  07BD               	decf	efgtoa@e& (0+255),f,b
  3411  000BF6  A0D8               	btfss	status,0,c
  3412  000BF8  07BE               	decf	(efgtoa@e+1)& (0+255),f,b
  3413  000BFA                     l7635:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3417  000BFA  C0B9  F075         	movff	efgtoa@g,___flge@ff1
  3418  000BFE  C0BA  F076         	movff	efgtoa@g+1,___flge@ff1+1
  3419  000C02  C0BB  F077         	movff	efgtoa@g+2,___flge@ff1+2
  3420  000C06  C0BC  F078         	movff	efgtoa@g+3,___flge@ff1+3
  3421  000C0A  C0C1  F079         	movff	efgtoa@u,___flge@ff2
  3422  000C0E  C0C2  F07A         	movff	efgtoa@u+1,___flge@ff2+1
  3423  000C12  C0C3  F07B         	movff	efgtoa@u+2,___flge@ff2+2
  3424  000C16  C0C4  F07C         	movff	efgtoa@u+3,___flge@ff2+3
  3425  000C1A  ECF4  F01B         	call	___flge	;wreg free
  3426  000C1E  0100               	movlb	0	; () banked
  3427  000C20  A0D8               	btfss	status,0,c
  3428  000C22  EF15  F006         	goto	u9111
  3429  000C26  EF17  F006         	goto	u9110
  3430  000C2A                     u9111:
  3431  000C2A  EFDF  F005         	goto	l7631
  3432  000C2E                     u9110:
  3433  000C2E                     l7637:
  3434                           
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3436  000C2E  C087  F00C         	movff	efgtoa@c,tolower@c
  3437  000C32  6A0D               	clrf	(tolower@c+1)^0,c
  3438  000C34  EC4F  F021         	call	_tolower	;wreg free
  3439  000C38  500C               	movf	?_tolower^0,w,c
  3440  000C3A  0100               	movlb	0	; () banked
  3441  000C3C  6FAE               	movwf	efgtoa@mode& (0+255),b
  3442  000C3E                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3445  000C3E  C0AE  F0AB         	movff	efgtoa@mode,efgtoa@nmode
  3446  000C42                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3449  000C42  0E67               	movlw	103
  3450  000C44  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3451  000C46  A4D8               	btfss	status,2,c
  3452  000C48  EF28  F006         	goto	u9121
  3453  000C4C  EF2A  F006         	goto	u9120
  3454  000C50                     u9121:
  3455  000C50  EF50  F006         	goto	l7651
  3456  000C54                     u9120:
  3457  000C54                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3460  000C54  5055               	movf	_prec^0,w,c
  3461  000C56  1056               	iorwf	(_prec+1)^0,w,c
  3462  000C58  A4D8               	btfss	status,2,c
  3463  000C5A  EF31  F006         	goto	u9131
  3464  000C5E  EF33  F006         	goto	u9130
  3465  000C62                     u9131:
  3466  000C62  EF37  F006         	goto	l7647
  3467  000C66                     u9130:
  3468  000C66                     
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3471  000C66  0E00               	movlw	0
  3472  000C68  6E56               	movwf	(_prec+1)^0,c
  3473  000C6A  0E01               	movlw	1
  3474  000C6C  6E55               	movwf	_prec^0,c
  3475  000C6E                     l7647:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3479  000C6E  BE56               	btfsc	(_prec+1)^0,7,c
  3480  000C70  EF44  F006         	goto	u9140
  3481  000C74  5056               	movf	(_prec+1)^0,w,c
  3482  000C76  E106               	bnz	u9141
  3483  000C78  0455               	decf	_prec^0,w,c
  3484  000C7A  B0D8               	btfsc	status,0,c
  3485  000C7C  EF42  F006         	goto	u9141
  3486  000C80  EF44  F006         	goto	u9140
  3487  000C84                     u9141:
  3488  000C84  EF4A  F006         	goto	l683
  3489  000C88                     u9140:
  3490  000C88                     l7649:
  3491                           
  3492                           ; BSR set to: 0
  3493  000C88  0E00               	movlw	0
  3494  000C8A  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  3495  000C8C  0E06               	movlw	6
  3496  000C8E  6FA9               	movwf	efgtoa@p& (0+255),b
  3497  000C90  EF59  F006         	goto	l7657
  3498  000C94                     l683:
  3499                           
  3500                           ; BSR set to: 0
  3501  000C94  C055  F0A9         	movff	_prec,efgtoa@p
  3502  000C98  C056  F0AA         	movff	_prec+1,efgtoa@p+1
  3503  000C9C  EF59  F006         	goto	l7657
  3504  000CA0                     l7651:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3508  000CA0  BE56               	btfsc	(_prec+1)^0,7,c
  3509  000CA2  EF55  F006         	goto	u9151
  3510  000CA6  EF57  F006         	goto	u9150
  3511  000CAA                     u9151:
  3512  000CAA  EF44  F006         	goto	l7649
  3513  000CAE                     u9150:
  3514  000CAE  EF4A  F006         	goto	l683
  3515  000CB2                     l7657:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3519  000CB2  0E67               	movlw	103
  3520  000CB4  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3521  000CB6  A4D8               	btfss	status,2,c
  3522  000CB8  EF60  F006         	goto	u9161
  3523  000CBC  EF62  F006         	goto	u9160
  3524  000CC0                     u9161:
  3525  000CC0  EF91  F006         	goto	l7667
  3526  000CC4                     u9160:
  3527  000CC4                     
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3530  000CC4  AFBE               	btfss	(efgtoa@e+1)& (0+255),7,b
  3531  000CC6  EF70  F006         	goto	u9170
  3532  000CCA  0EFC               	movlw	252
  3533  000CCC  5DBD               	subwf	efgtoa@e& (0+255),w,b
  3534  000CCE  0EFF               	movlw	255
  3535  000CD0  59BE               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3536  000CD2  A0D8               	btfss	status,0,c
  3537  000CD4  EF6E  F006         	goto	u9171
  3538  000CD8  EF70  F006         	goto	u9170
  3539  000CDC                     u9171:
  3540  000CDC  EF8F  F006         	goto	l7665
  3541  000CE0                     u9170:
  3542  000CE0                     
  3543                           ; BSR set to: 0
  3544  000CE0  0EFF               	movlw	255
  3545  000CE2  6F88               	movwf	??_efgtoa& (0+255),b
  3546  000CE4  0EFF               	movlw	255
  3547  000CE6  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  3548  000CE8  C0A9  F08A         	movff	efgtoa@p,??_efgtoa+2
  3549  000CEC  C0AA  F08B         	movff	efgtoa@p+1,??_efgtoa+3
  3550  000CF0  5188               	movf	??_efgtoa& (0+255),w,b
  3551  000CF2  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  3552  000CF4  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  3553  000CF6  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3554  000CF8  51BD               	movf	efgtoa@e& (0+255),w,b
  3555  000CFA  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  3556  000CFC  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  3557  000CFE  0A80               	xorlw	128
  3558  000D00  6F8C               	movwf	(??_efgtoa+4)& (0+255),b
  3559  000D02  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  3560  000D04  0A80               	xorlw	128
  3561  000D06  598C               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3562  000D08  A0D8               	btfss	status,0,c
  3563  000D0A  EF89  F006         	goto	u9181
  3564  000D0E  EF8B  F006         	goto	u9180
  3565  000D12                     u9181:
  3566  000D12  EF8F  F006         	goto	l7665
  3567  000D16                     u9180:
  3568  000D16                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3571  000D16  0E66               	movlw	102
  3572  000D18  6FAB               	movwf	efgtoa@nmode& (0+255),b
  3573                           
  3574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3575  000D1A  EF91  F006         	goto	l7667
  3576  000D1E                     l7665:
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3580  000D1E  0E65               	movlw	101
  3581  000D20  6FAB               	movwf	efgtoa@nmode& (0+255),b
  3582  000D22                     l7667:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3586  000D22  C0A9  F0A1         	movff	efgtoa@p,efgtoa@m
  3587  000D26  C0AA  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  3588  000D2A                     
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3591  000D2A  0E67               	movlw	103
  3592  000D2C  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3593  000D2E  A4D8               	btfss	status,2,c
  3594  000D30  EF9C  F006         	goto	u9191
  3595  000D34  EF9E  F006         	goto	u9190
  3596  000D38                     u9191:
  3597  000D38  EFAE  F006         	goto	l7675
  3598  000D3C                     u9190:
  3599  000D3C                     
  3600                           ; BSR set to: 0
  3601  000D3C  0E66               	movlw	102
  3602  000D3E  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  3603  000D40  A4D8               	btfss	status,2,c
  3604  000D42  EFA5  F006         	goto	u9201
  3605  000D46  EFA7  F006         	goto	u9200
  3606  000D4A                     u9201:
  3607  000D4A  EFB0  F006         	goto	l7677
  3608  000D4E                     u9200:
  3609  000D4E                     
  3610                           ; BSR set to: 0
  3611  000D4E  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3612  000D50  EFAE  F006         	goto	u9210
  3613  000D54  EFAC  F006         	goto	u9211
  3614  000D58                     u9211:
  3615  000D58  EFB0  F006         	goto	l7677
  3616  000D5C                     u9210:
  3617  000D5C                     l7675:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3621  000D5C  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  3622  000D5E  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  3623  000D60                     l7677:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3627  000D60  0E66               	movlw	102
  3628  000D62  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  3629  000D64  A4D8               	btfss	status,2,c
  3630  000D66  EFB7  F006         	goto	u9221
  3631  000D6A  EFB9  F006         	goto	u9220
  3632  000D6E                     u9221:
  3633  000D6E  EFD9  F006         	goto	l7687
  3634  000D72                     u9220:
  3635  000D72                     
  3636                           ; BSR set to: 0
  3637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3638  000D72  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3639  000D74  EFC0  F006         	goto	u9230
  3640  000D78  EFBE  F006         	goto	u9231
  3641  000D7C                     u9231:
  3642  000D7C  EFCC  F006         	goto	l7683
  3643  000D80                     u9230:
  3644  000D80                     
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3647  000D80  0E00               	movlw	0
  3648  000D82  6FC1               	movwf	efgtoa@u& (0+255),b
  3649  000D84  0E00               	movlw	0
  3650  000D86  6FC2               	movwf	(efgtoa@u+1)& (0+255),b
  3651  000D88  0E80               	movlw	128
  3652  000D8A  6FC3               	movwf	(efgtoa@u+2)& (0+255),b
  3653  000D8C  0E3F               	movlw	63
  3654  000D8E  6FC4               	movwf	(efgtoa@u+3)& (0+255),b
  3655                           
  3656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3657  000D90  0E00               	movlw	0
  3658  000D92  6FBE               	movwf	(efgtoa@e+1)& (0+255),b
  3659  000D94  0E00               	movlw	0
  3660  000D96  6FBD               	movwf	efgtoa@e& (0+255),b
  3661  000D98                     l7683:
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3665  000D98  0E67               	movlw	103
  3666  000D9A  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  3667  000D9C  B4D8               	btfsc	status,2,c
  3668  000D9E  EFD3  F006         	goto	u9241
  3669  000DA2  EFD5  F006         	goto	u9240
  3670  000DA6                     u9241:
  3671  000DA6  EFD9  F006         	goto	l7687
  3672  000DAA                     u9240:
  3673  000DAA                     
  3674                           ; BSR set to: 0
  3675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3676  000DAA  51BD               	movf	efgtoa@e& (0+255),w,b
  3677  000DAC  27A1               	addwf	efgtoa@m& (0+255),f,b
  3678  000DAE  51BE               	movf	(efgtoa@e+1)& (0+255),w,b
  3679  000DB0  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3680  000DB2                     l7687:
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3684  000DB2  0E00               	movlw	0
  3685  000DB4  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3686  000DB6  0E00               	movlw	0
  3687  000DB8  6FB7               	movwf	efgtoa@i& (0+255),b
  3688  000DBA                     
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3691  000DBA  C0B9  F0AF         	movff	efgtoa@g,efgtoa@h
  3692  000DBE  C0BA  F0B0         	movff	efgtoa@g+1,efgtoa@h+1
  3693  000DC2  C0BB  F0B1         	movff	efgtoa@g+2,efgtoa@h+2
  3694  000DC6  C0BC  F0B2         	movff	efgtoa@g+3,efgtoa@h+3
  3695  000DCA                     
  3696                           ; BSR set to: 0
  3697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3698  000DCA  C0C1  F08D         	movff	efgtoa@u,efgtoa@ou
  3699  000DCE  C0C2  F08E         	movff	efgtoa@u+1,efgtoa@ou+1
  3700  000DD2  C0C3  F08F         	movff	efgtoa@u+2,efgtoa@ou+2
  3701  000DD6  C0C4  F090         	movff	efgtoa@u+3,efgtoa@ou+3
  3702                           
  3703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3704  000DDA  EF6A  F007         	goto	l7701
  3705  000DDE                     l7693:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3709  000DDE  C0AF  F038         	movff	efgtoa@h,___fldiv@b
  3710  000DE2  C0B0  F039         	movff	efgtoa@h+1,___fldiv@b+1
  3711  000DE6  C0B1  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  3712  000DEA  C0B2  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  3713  000DEE  C0C1  F03C         	movff	efgtoa@u,___fldiv@a
  3714  000DF2  C0C2  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  3715  000DF6  C0C3  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  3716  000DFA  C0C4  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  3717  000DFE  EC3E  F011         	call	___fldiv	;wreg free
  3718  000E02  C038  F051         	movff	?___fldiv,floorf@x
  3719  000E06  C039  F052         	movff	?___fldiv+1,floorf@x+1
  3720  000E0A  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  3721  000E0E  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  3722  000E12  EC7A  F014         	call	_floorf	;wreg free
  3723  000E16  C051  F0B3         	movff	?_floorf,efgtoa@l
  3724  000E1A  C052  F0B4         	movff	?_floorf+1,efgtoa@l+1
  3725  000E1E  C053  F0B5         	movff	?_floorf+2,efgtoa@l+2
  3726  000E22  C054  F0B6         	movff	?_floorf+3,efgtoa@l+3
  3727                           
  3728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3729  000E26  C0B3  F075         	movff	efgtoa@l,___fltol@f1
  3730  000E2A  C0B4  F076         	movff	efgtoa@l+1,___fltol@f1+1
  3731  000E2E  C0B5  F077         	movff	efgtoa@l+2,___fltol@f1+2
  3732  000E32  C0B6  F078         	movff	efgtoa@l+3,___fltol@f1+3
  3733  000E36  EC70  F01B         	call	___fltol	;wreg free
  3734  000E3A  C075  F0A5         	movff	?___fltol,efgtoa@d
  3735  000E3E  C076  F0A6         	movff	?___fltol+1,efgtoa@d+1
  3736  000E42                     
  3737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3738  000E42  C0AF  F075         	movff	efgtoa@h,___flsub@b
  3739  000E46  C0B0  F076         	movff	efgtoa@h+1,___flsub@b+1
  3740  000E4A  C0B1  F077         	movff	efgtoa@h+2,___flsub@b+2
  3741  000E4E  C0B2  F078         	movff	efgtoa@h+3,___flsub@b+3
  3742  000E52  C0C1  F064         	movff	efgtoa@u,___flmul@a
  3743  000E56  C0C2  F065         	movff	efgtoa@u+1,___flmul@a+1
  3744  000E5A  C0C3  F066         	movff	efgtoa@u+2,___flmul@a+2
  3745  000E5E  C0C4  F067         	movff	efgtoa@u+3,___flmul@a+3
  3746  000E62  C0B3  F060         	movff	efgtoa@l,___flmul@b
  3747  000E66  C0B4  F061         	movff	efgtoa@l+1,___flmul@b+1
  3748  000E6A  C0B5  F062         	movff	efgtoa@l+2,___flmul@b+2
  3749  000E6E  C0B6  F063         	movff	efgtoa@l+3,___flmul@b+3
  3750  000E72  EC28  F00F         	call	___flmul	;wreg free
  3751  000E76  C060  F079         	movff	?___flmul,___flsub@a
  3752  000E7A  C061  F07A         	movff	?___flmul+1,___flsub@a+1
  3753  000E7E  C062  F07B         	movff	?___flmul+2,___flsub@a+2
  3754  000E82  C063  F07C         	movff	?___flmul+3,___flsub@a+3
  3755  000E86  ECD3  F022         	call	___flsub	;wreg free
  3756  000E8A  C075  F0AF         	movff	?___flsub,efgtoa@h
  3757  000E8E  C076  F0B0         	movff	?___flsub+1,efgtoa@h+1
  3758  000E92  C077  F0B1         	movff	?___flsub+2,efgtoa@h+2
  3759  000E96  C078  F0B2         	movff	?___flsub+3,efgtoa@h+3
  3760  000E9A                     
  3761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3762  000E9A  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  3763  000E9E  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  3764  000EA2  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  3765  000EA6  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  3766  000EAA  0E00               	movlw	0
  3767  000EAC  6E3C               	movwf	___fldiv@a^0,c
  3768  000EAE  0E00               	movlw	0
  3769  000EB0  6E3D               	movwf	(___fldiv@a+1)^0,c
  3770  000EB2  0E20               	movlw	32
  3771  000EB4  6E3E               	movwf	(___fldiv@a+2)^0,c
  3772  000EB6  0E41               	movlw	65
  3773  000EB8  6E3F               	movwf	(___fldiv@a+3)^0,c
  3774  000EBA  EC3E  F011         	call	___fldiv	;wreg free
  3775  000EBE  C038  F0C1         	movff	?___fldiv,efgtoa@u
  3776  000EC2  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  3777  000EC6  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  3778  000ECA  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  3779  000ECE                     
  3780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3781  000ECE  0100               	movlb	0	; () banked
  3782  000ED0  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  3783  000ED2  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  3784  000ED4                     l7701:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3788  000ED4  51A1               	movf	efgtoa@m& (0+255),w,b
  3789  000ED6  5DB7               	subwf	efgtoa@i& (0+255),w,b
  3790  000ED8  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  3791  000EDA  0A80               	xorlw	128
  3792  000EDC  6F88               	movwf	??_efgtoa& (0+255),b
  3793  000EDE  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  3794  000EE0  0A80               	xorlw	128
  3795  000EE2  5988               	subwfb	??_efgtoa& (0+255),w,b
  3796  000EE4  A0D8               	btfss	status,0,c
  3797  000EE6  EF77  F007         	goto	u9251
  3798  000EEA  EF79  F007         	goto	u9250
  3799  000EEE                     u9251:
  3800  000EEE  EFEF  F006         	goto	l7693
  3801  000EF2                     u9250:
  3802  000EF2                     
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3805  000EF2  C0C1  F060         	movff	efgtoa@u,___flmul@b
  3806  000EF6  C0C2  F061         	movff	efgtoa@u+1,___flmul@b+1
  3807  000EFA  C0C3  F062         	movff	efgtoa@u+2,___flmul@b+2
  3808  000EFE  C0C4  F063         	movff	efgtoa@u+3,___flmul@b+3
  3809  000F02  0E00               	movlw	0
  3810  000F04  6F64               	movwf	___flmul@a& (0+255),b
  3811  000F06  0E00               	movlw	0
  3812  000F08  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3813  000F0A  0EA0               	movlw	160
  3814  000F0C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3815  000F0E  0E40               	movlw	64
  3816  000F10  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3817  000F12  EC28  F00F         	call	___flmul	;wreg free
  3818  000F16  C060  F0B3         	movff	?___flmul,efgtoa@l
  3819  000F1A  C061  F0B4         	movff	?___flmul+1,efgtoa@l+1
  3820  000F1E  C062  F0B5         	movff	?___flmul+2,efgtoa@l+2
  3821  000F22  C063  F0B6         	movff	?___flmul+3,efgtoa@l+3
  3822  000F26                     
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3824  000F26  C0AF  F075         	movff	efgtoa@h,___flge@ff1
  3825  000F2A  C0B0  F076         	movff	efgtoa@h+1,___flge@ff1+1
  3826  000F2E  C0B1  F077         	movff	efgtoa@h+2,___flge@ff1+2
  3827  000F32  C0B2  F078         	movff	efgtoa@h+3,___flge@ff1+3
  3828  000F36  C0B3  F079         	movff	efgtoa@l,___flge@ff2
  3829  000F3A  C0B4  F07A         	movff	efgtoa@l+1,___flge@ff2+1
  3830  000F3E  C0B5  F07B         	movff	efgtoa@l+2,___flge@ff2+2
  3831  000F42  C0B6  F07C         	movff	efgtoa@l+3,___flge@ff2+3
  3832  000F46  ECF4  F01B         	call	___flge	;wreg free
  3833  000F4A  0100               	movlb	0	; () banked
  3834  000F4C  B0D8               	btfsc	status,0,c
  3835  000F4E  EFAB  F007         	goto	u9261
  3836  000F52  EFAD  F007         	goto	u9260
  3837  000F56                     u9261:
  3838  000F56  EFB7  F007         	goto	l7709
  3839  000F5A                     u9260:
  3840  000F5A                     
  3841                           ; BSR set to: 0
  3842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3843  000F5A  0E00               	movlw	0
  3844  000F5C  6FB3               	movwf	efgtoa@l& (0+255),b
  3845  000F5E  0E00               	movlw	0
  3846  000F60  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3847  000F62  0E00               	movlw	0
  3848  000F64  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3849  000F66  0E00               	movlw	0
  3850  000F68  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3851                           
  3852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3853  000F6A  EFE0  F007         	goto	l7715
  3854  000F6E                     l7709:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3858  000F6E  C0AF  F006         	movff	efgtoa@h,___fleq@ff1
  3859  000F72  C0B0  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  3860  000F76  C0B1  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  3861  000F7A  C0B2  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  3862  000F7E  C0B3  F00A         	movff	efgtoa@l,___fleq@ff2
  3863  000F82  C0B4  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  3864  000F86  C0B5  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  3865  000F8A  C0B6  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  3866  000F8E  EC53  F01F         	call	___fleq	;wreg free
  3867  000F92  A0D8               	btfss	status,0,c
  3868  000F94  EFCE  F007         	goto	u9271
  3869  000F98  EFD0  F007         	goto	u9270
  3870  000F9C                     u9271:
  3871  000F9C  EFE0  F007         	goto	l7715
  3872  000FA0                     u9270:
  3873  000FA0  0100               	movlb	0	; () banked
  3874  000FA2  B1A5               	btfsc	efgtoa@d& (0+255),0,b
  3875  000FA4  EFD6  F007         	goto	u9281
  3876  000FA8  EFD8  F007         	goto	u9280
  3877  000FAC                     u9281:
  3878  000FAC  EFE0  F007         	goto	l7715
  3879  000FB0                     u9280:
  3880  000FB0                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3883  000FB0  0E00               	movlw	0
  3884  000FB2  6FB3               	movwf	efgtoa@l& (0+255),b
  3885  000FB4  0E00               	movlw	0
  3886  000FB6  6FB4               	movwf	(efgtoa@l+1)& (0+255),b
  3887  000FB8  0E00               	movlw	0
  3888  000FBA  6FB5               	movwf	(efgtoa@l+2)& (0+255),b
  3889  000FBC  0E00               	movlw	0
  3890  000FBE  6FB6               	movwf	(efgtoa@l+3)& (0+255),b
  3891  000FC0                     l7715:
  3892                           
  3893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3894  000FC0  C0B9  F028         	movff	efgtoa@g,___fladd@b
  3895  000FC4  C0BA  F029         	movff	efgtoa@g+1,___fladd@b+1
  3896  000FC8  C0BB  F02A         	movff	efgtoa@g+2,___fladd@b+2
  3897  000FCC  C0BC  F02B         	movff	efgtoa@g+3,___fladd@b+3
  3898  000FD0  C0B3  F02C         	movff	efgtoa@l,___fladd@a
  3899  000FD4  C0B4  F02D         	movff	efgtoa@l+1,___fladd@a+1
  3900  000FD8  C0B5  F02E         	movff	efgtoa@l+2,___fladd@a+2
  3901  000FDC  C0B6  F02F         	movff	efgtoa@l+3,___fladd@a+3
  3902  000FE0  ECC8  F00C         	call	___fladd	;wreg free
  3903  000FE4  C028  F0AF         	movff	?___fladd,efgtoa@h
  3904  000FE8  C029  F0B0         	movff	?___fladd+1,efgtoa@h+1
  3905  000FEC  C02A  F0B1         	movff	?___fladd+2,efgtoa@h+2
  3906  000FF0  C02B  F0B2         	movff	?___fladd+3,efgtoa@h+3
  3907  000FF4                     
  3908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3909  000FF4  C08D  F0C1         	movff	efgtoa@ou,efgtoa@u
  3910  000FF8  C08E  F0C2         	movff	efgtoa@ou+1,efgtoa@u+1
  3911  000FFC  C08F  F0C3         	movff	efgtoa@ou+2,efgtoa@u+2
  3912  001000  C090  F0C4         	movff	efgtoa@ou+3,efgtoa@u+3
  3913  001004                     
  3914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3915  001004  0E65               	movlw	101
  3916  001006  0100               	movlb	0	; () banked
  3917  001008  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  3918  00100A  B4D8               	btfsc	status,2,c
  3919  00100C  EF0A  F008         	goto	u9291
  3920  001010  EF0C  F008         	goto	u9290
  3921  001014                     u9291:
  3922  001014  EF12  F008         	goto	l7723
  3923  001018                     u9290:
  3924  001018                     
  3925                           ; BSR set to: 0
  3926  001018  C0BD  F0A3         	movff	efgtoa@e,efgtoa@ne
  3927  00101C  C0BE  F0A4         	movff	efgtoa@e+1,efgtoa@ne+1
  3928  001020  EF16  F008         	goto	l709
  3929  001024                     l7723:
  3930                           
  3931                           ; BSR set to: 0
  3932  001024  0E00               	movlw	0
  3933  001026  6FA4               	movwf	(efgtoa@ne+1)& (0+255),b
  3934  001028  0E00               	movlw	0
  3935  00102A  6FA3               	movwf	efgtoa@ne& (0+255),b
  3936  00102C                     l709:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3940  00102C  0E00               	movlw	0
  3941  00102E  6FA0               	movwf	(efgtoa@pp+1)& (0+255),b
  3942  001030  0E00               	movlw	0
  3943  001032  6F9F               	movwf	efgtoa@pp& (0+255),b
  3944                           
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3946  001034  0E00               	movlw	0
  3947  001036  6F9E               	movwf	(efgtoa@t+1)& (0+255),b
  3948  001038  0E00               	movlw	0
  3949  00103A  6F9D               	movwf	efgtoa@t& (0+255),b
  3950                           
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3952  00103C  0E00               	movlw	0
  3953  00103E  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  3954  001040  0E00               	movlw	0
  3955  001042  6FB7               	movwf	efgtoa@i& (0+255),b
  3956                           
  3957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3958  001044  EF12  F009         	goto	l7773
  3959  001048                     l7725:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3963  001048  C0AF  F038         	movff	efgtoa@h,___fldiv@b
  3964  00104C  C0B0  F039         	movff	efgtoa@h+1,___fldiv@b+1
  3965  001050  C0B1  F03A         	movff	efgtoa@h+2,___fldiv@b+2
  3966  001054  C0B2  F03B         	movff	efgtoa@h+3,___fldiv@b+3
  3967  001058  C0C1  F03C         	movff	efgtoa@u,___fldiv@a
  3968  00105C  C0C2  F03D         	movff	efgtoa@u+1,___fldiv@a+1
  3969  001060  C0C3  F03E         	movff	efgtoa@u+2,___fldiv@a+2
  3970  001064  C0C4  F03F         	movff	efgtoa@u+3,___fldiv@a+3
  3971  001068  EC3E  F011         	call	___fldiv	;wreg free
  3972  00106C  C038  F051         	movff	?___fldiv,floorf@x
  3973  001070  C039  F052         	movff	?___fldiv+1,floorf@x+1
  3974  001074  C03A  F053         	movff	?___fldiv+2,floorf@x+2
  3975  001078  C03B  F054         	movff	?___fldiv+3,floorf@x+3
  3976  00107C  EC7A  F014         	call	_floorf	;wreg free
  3977  001080  C051  F0B3         	movff	?_floorf,efgtoa@l
  3978  001084  C052  F0B4         	movff	?_floorf+1,efgtoa@l+1
  3979  001088  C053  F0B5         	movff	?_floorf+2,efgtoa@l+2
  3980  00108C  C054  F0B6         	movff	?_floorf+3,efgtoa@l+3
  3981                           
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3983  001090  C0B3  F075         	movff	efgtoa@l,___fltol@f1
  3984  001094  C0B4  F076         	movff	efgtoa@l+1,___fltol@f1+1
  3985  001098  C0B5  F077         	movff	efgtoa@l+2,___fltol@f1+2
  3986  00109C  C0B6  F078         	movff	efgtoa@l+3,___fltol@f1+3
  3987  0010A0  EC70  F01B         	call	___fltol	;wreg free
  3988  0010A4  C075  F0A5         	movff	?___fltol,efgtoa@d
  3989  0010A8  C076  F0A6         	movff	?___fltol+1,efgtoa@d+1
  3990  0010AC                     
  3991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3992  0010AC  B857               	btfsc	_flags^0,4,c
  3993  0010AE  EF5B  F008         	goto	u9301
  3994  0010B2  EF5D  F008         	goto	u9300
  3995  0010B6                     u9301:
  3996  0010B6  EF7B  F008         	goto	l7737
  3997  0010BA                     u9300:
  3998  0010BA  0100               	movlb	0	; () banked
  3999  0010BC  51A5               	movf	efgtoa@d& (0+255),w,b
  4000  0010BE  11A6               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4001  0010C0  A4D8               	btfss	status,2,c
  4002  0010C2  EF65  F008         	goto	u9311
  4003  0010C6  EF67  F008         	goto	u9310
  4004  0010CA                     u9311:
  4005  0010CA  EF7B  F008         	goto	l7737
  4006  0010CE                     u9310:
  4007  0010CE                     
  4008                           ; BSR set to: 0
  4009  0010CE  0E67               	movlw	103
  4010  0010D0  19AE               	xorwf	efgtoa@mode& (0+255),w,b
  4011  0010D2  A4D8               	btfss	status,2,c
  4012  0010D4  EF6E  F008         	goto	u9321
  4013  0010D8  EF70  F008         	goto	u9320
  4014  0010DC                     u9321:
  4015  0010DC  EF7B  F008         	goto	l7737
  4016  0010E0                     u9320:
  4017  0010E0                     
  4018                           ; BSR set to: 0
  4019  0010E0  BFA4               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4020  0010E2  EF77  F008         	goto	u9330
  4021  0010E6  EF75  F008         	goto	u9331
  4022  0010EA                     u9331:
  4023  0010EA  EF7B  F008         	goto	l7737
  4024  0010EE                     u9330:
  4025  0010EE                     
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4028  0010EE  4B9D               	infsnz	efgtoa@t& (0+255),f,b
  4029  0010F0  2B9E               	incf	(efgtoa@t+1)& (0+255),f,b
  4030                           
  4031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4032  0010F2  EFC6  F008         	goto	l7765
  4033  0010F6                     l7737:
  4034                           
  4035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4036  0010F6  0100               	movlb	0	; () banked
  4037  0010F8  519F               	movf	efgtoa@pp& (0+255),w,b
  4038  0010FA  11A0               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4039  0010FC  A4D8               	btfss	status,2,c
  4040  0010FE  EF83  F008         	goto	u9341
  4041  001102  EF85  F008         	goto	u9340
  4042  001106                     u9341:
  4043  001106  EFAF  F008         	goto	l7757
  4044  00110A                     u9340:
  4045  00110A                     
  4046                           ; BSR set to: 0
  4047  00110A  BFA4               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4048  00110C  EF8C  F008         	goto	u9350
  4049  001110  EF8A  F008         	goto	u9351
  4050  001114                     u9351:
  4051  001114  EFAF  F008         	goto	l7757
  4052  001118                     u9350:
  4053  001118                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4056  001118  0E3B               	movlw	low _dbuf
  4057  00111A  25BF               	addwf	efgtoa@n& (0+255),w,b
  4058  00111C  6ED9               	movwf	fsr2l,c
  4059  00111E  0E01               	movlw	high _dbuf
  4060  001120  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4061  001122  6EDA               	movwf	fsr2h,c
  4062  001124  0E2E               	movlw	46
  4063  001126  6EDF               	movwf	indf2,c
  4064  001128                     
  4065                           ; BSR set to: 0
  4066  001128  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4067  00112A  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4068  00112C                     
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4071  00112C  07AC               	decf	efgtoa@w& (0+255),f,b
  4072  00112E  A0D8               	btfss	status,0,c
  4073  001130  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4074  001132                     
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4077  001132  0E00               	movlw	0
  4078  001134  6FA0               	movwf	(efgtoa@pp+1)& (0+255),b
  4079  001136  0E01               	movlw	1
  4080  001138  6F9F               	movwf	efgtoa@pp& (0+255),b
  4081  00113A  EFAF  F008         	goto	l7757
  4082  00113E                     l7749:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4086  00113E  0E3B               	movlw	low _dbuf
  4087  001140  25BF               	addwf	efgtoa@n& (0+255),w,b
  4088  001142  6ED9               	movwf	fsr2l,c
  4089  001144  0E01               	movlw	high _dbuf
  4090  001146  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4091  001148  6EDA               	movwf	fsr2h,c
  4092  00114A  0E30               	movlw	48
  4093  00114C  6EDF               	movwf	indf2,c
  4094  00114E                     
  4095                           ; BSR set to: 0
  4096  00114E  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4097  001150  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4098  001152                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4101  001152  07AC               	decf	efgtoa@w& (0+255),f,b
  4102  001154  A0D8               	btfss	status,0,c
  4103  001156  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4104  001158                     
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4107  001158  079D               	decf	efgtoa@t& (0+255),f,b
  4108  00115A  A0D8               	btfss	status,0,c
  4109  00115C  079E               	decf	(efgtoa@t+1)& (0+255),f,b
  4110  00115E                     l7757:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4114  00115E  519D               	movf	efgtoa@t& (0+255),w,b
  4115  001160  119E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4116  001162  A4D8               	btfss	status,2,c
  4117  001164  EFB6  F008         	goto	u9361
  4118  001168  EFB8  F008         	goto	u9360
  4119  00116C                     u9361:
  4120  00116C  EF9F  F008         	goto	l7749
  4121  001170                     u9360:
  4122  001170                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4125  001170  0E3B               	movlw	low _dbuf
  4126  001172  25BF               	addwf	efgtoa@n& (0+255),w,b
  4127  001174  6ED9               	movwf	fsr2l,c
  4128  001176  0E01               	movlw	high _dbuf
  4129  001178  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4130  00117A  6EDA               	movwf	fsr2h,c
  4131  00117C  51A5               	movf	efgtoa@d& (0+255),w,b
  4132  00117E  0F30               	addlw	48
  4133  001180  6EDF               	movwf	indf2,c
  4134  001182                     
  4135                           ; BSR set to: 0
  4136  001182  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4137  001184  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4138  001186                     
  4139                           ; BSR set to: 0
  4140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4141  001186  07AC               	decf	efgtoa@w& (0+255),f,b
  4142  001188  A0D8               	btfss	status,0,c
  4143  00118A  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4144  00118C                     l7765:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4148  00118C  C0AF  F075         	movff	efgtoa@h,___flsub@b
  4149  001190  C0B0  F076         	movff	efgtoa@h+1,___flsub@b+1
  4150  001194  C0B1  F077         	movff	efgtoa@h+2,___flsub@b+2
  4151  001198  C0B2  F078         	movff	efgtoa@h+3,___flsub@b+3
  4152  00119C  C0C1  F064         	movff	efgtoa@u,___flmul@a
  4153  0011A0  C0C2  F065         	movff	efgtoa@u+1,___flmul@a+1
  4154  0011A4  C0C3  F066         	movff	efgtoa@u+2,___flmul@a+2
  4155  0011A8  C0C4  F067         	movff	efgtoa@u+3,___flmul@a+3
  4156  0011AC  C0B3  F060         	movff	efgtoa@l,___flmul@b
  4157  0011B0  C0B4  F061         	movff	efgtoa@l+1,___flmul@b+1
  4158  0011B4  C0B5  F062         	movff	efgtoa@l+2,___flmul@b+2
  4159  0011B8  C0B6  F063         	movff	efgtoa@l+3,___flmul@b+3
  4160  0011BC  EC28  F00F         	call	___flmul	;wreg free
  4161  0011C0  C060  F079         	movff	?___flmul,___flsub@a
  4162  0011C4  C061  F07A         	movff	?___flmul+1,___flsub@a+1
  4163  0011C8  C062  F07B         	movff	?___flmul+2,___flsub@a+2
  4164  0011CC  C063  F07C         	movff	?___flmul+3,___flsub@a+3
  4165  0011D0  ECD3  F022         	call	___flsub	;wreg free
  4166  0011D4  C075  F0AF         	movff	?___flsub,efgtoa@h
  4167  0011D8  C076  F0B0         	movff	?___flsub+1,efgtoa@h+1
  4168  0011DC  C077  F0B1         	movff	?___flsub+2,efgtoa@h+2
  4169  0011E0  C078  F0B2         	movff	?___flsub+3,efgtoa@h+3
  4170  0011E4                     
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4172  0011E4  C0C1  F038         	movff	efgtoa@u,___fldiv@b
  4173  0011E8  C0C2  F039         	movff	efgtoa@u+1,___fldiv@b+1
  4174  0011EC  C0C3  F03A         	movff	efgtoa@u+2,___fldiv@b+2
  4175  0011F0  C0C4  F03B         	movff	efgtoa@u+3,___fldiv@b+3
  4176  0011F4  0E00               	movlw	0
  4177  0011F6  6E3C               	movwf	___fldiv@a^0,c
  4178  0011F8  0E00               	movlw	0
  4179  0011FA  6E3D               	movwf	(___fldiv@a+1)^0,c
  4180  0011FC  0E20               	movlw	32
  4181  0011FE  6E3E               	movwf	(___fldiv@a+2)^0,c
  4182  001200  0E41               	movlw	65
  4183  001202  6E3F               	movwf	(___fldiv@a+3)^0,c
  4184  001204  EC3E  F011         	call	___fldiv	;wreg free
  4185  001208  C038  F0C1         	movff	?___fldiv,efgtoa@u
  4186  00120C  C039  F0C2         	movff	?___fldiv+1,efgtoa@u+1
  4187  001210  C03A  F0C3         	movff	?___fldiv+2,efgtoa@u+2
  4188  001214  C03B  F0C4         	movff	?___fldiv+3,efgtoa@u+3
  4189  001218                     
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4191  001218  0100               	movlb	0	; () banked
  4192  00121A  07A3               	decf	efgtoa@ne& (0+255),f,b
  4193  00121C  A0D8               	btfss	status,0,c
  4194  00121E  07A4               	decf	(efgtoa@ne+1)& (0+255),f,b
  4195  001220                     
  4196                           ; BSR set to: 0
  4197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4198  001220  4BB7               	infsnz	efgtoa@i& (0+255),f,b
  4199  001222  2BB8               	incf	(efgtoa@i+1)& (0+255),f,b
  4200  001224                     l7773:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4204  001224  51A1               	movf	efgtoa@m& (0+255),w,b
  4205  001226  5DB7               	subwf	efgtoa@i& (0+255),w,b
  4206  001228  51B8               	movf	(efgtoa@i+1)& (0+255),w,b
  4207  00122A  0A80               	xorlw	128
  4208  00122C  6F88               	movwf	??_efgtoa& (0+255),b
  4209  00122E  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  4210  001230  0A80               	xorlw	128
  4211  001232  5988               	subwfb	??_efgtoa& (0+255),w,b
  4212  001234  B0D8               	btfsc	status,0,c
  4213  001236  EF1F  F009         	goto	u9371
  4214  00123A  EF21  F009         	goto	u9370
  4215  00123E                     u9371:
  4216  00123E  EF2F  F009         	goto	l7777
  4217  001242                     u9370:
  4218  001242                     
  4219                           ; BSR set to: 0
  4220  001242  BFC0               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4221  001244  EF2D  F009         	goto	u9381
  4222  001248  51C0               	movf	(efgtoa@n+1)& (0+255),w,b
  4223  00124A  E109               	bnz	u9380
  4224  00124C  0E4B               	movlw	75
  4225  00124E  5DBF               	subwf	efgtoa@n& (0+255),w,b
  4226  001250  A0D8               	btfss	status,0,c
  4227  001252  EF2D  F009         	goto	u9381
  4228  001256  EF2F  F009         	goto	u9380
  4229  00125A                     u9381:
  4230  00125A  EF24  F008         	goto	l7725
  4231  00125E                     u9380:
  4232  00125E                     l7777:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4236  00125E  519F               	movf	efgtoa@pp& (0+255),w,b
  4237  001260  11A0               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4238  001262  A4D8               	btfss	status,2,c
  4239  001264  EF36  F009         	goto	u9391
  4240  001268  EF38  F009         	goto	u9390
  4241  00126C                     u9391:
  4242  00126C  EF49  F009         	goto	l7785
  4243  001270                     u9390:
  4244  001270                     
  4245                           ; BSR set to: 0
  4246  001270  A857               	btfss	_flags^0,4,c
  4247  001272  EF3D  F009         	goto	u9401
  4248  001276  EF3F  F009         	goto	u9400
  4249  00127A                     u9401:
  4250  00127A  EF49  F009         	goto	l7785
  4251  00127E                     u9400:
  4252  00127E                     
  4253                           ; BSR set to: 0
  4254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4255  00127E  0E3B               	movlw	low _dbuf
  4256  001280  25BF               	addwf	efgtoa@n& (0+255),w,b
  4257  001282  6ED9               	movwf	fsr2l,c
  4258  001284  0E01               	movlw	high _dbuf
  4259  001286  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4260  001288  6EDA               	movwf	fsr2h,c
  4261  00128A  0E2E               	movlw	46
  4262  00128C  6EDF               	movwf	indf2,c
  4263  00128E                     
  4264                           ; BSR set to: 0
  4265  00128E  4BBF               	infsnz	efgtoa@n& (0+255),f,b
  4266  001290  2BC0               	incf	(efgtoa@n+1)& (0+255),f,b
  4267  001292                     l7785:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4271  001292  0E3B               	movlw	low _dbuf
  4272  001294  25BF               	addwf	efgtoa@n& (0+255),w,b
  4273  001296  6ED9               	movwf	fsr2l,c
  4274  001298  0E01               	movlw	high _dbuf
  4275  00129A  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4276  00129C  6EDA               	movwf	fsr2h,c
  4277  00129E  0E00               	movlw	0
  4278  0012A0  6EDF               	movwf	indf2,c
  4279  0012A2                     
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4282  0012A2  0E65               	movlw	101
  4283  0012A4  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
  4284  0012A6  A4D8               	btfss	status,2,c
  4285  0012A8  EF58  F009         	goto	u9411
  4286  0012AC  EF5A  F009         	goto	u9410
  4287  0012B0                     u9411:
  4288  0012B0  EF04  F005         	goto	l7597
  4289  0012B4                     u9410:
  4290  0012B4                     
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4293  0012B4  0E00               	movlw	0
  4294  0012B6  6FB8               	movwf	(efgtoa@i+1)& (0+255),b
  4295  0012B8  0E4F               	movlw	79
  4296  0012BA  6FB7               	movwf	efgtoa@i& (0+255),b
  4297  0012BC                     
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4300  0012BC  0E3B               	movlw	low _dbuf
  4301  0012BE  25B7               	addwf	efgtoa@i& (0+255),w,b
  4302  0012C0  6ED9               	movwf	fsr2l,c
  4303  0012C2  0E01               	movlw	high _dbuf
  4304  0012C4  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4305  0012C6  6EDA               	movwf	fsr2h,c
  4306  0012C8  0E00               	movlw	0
  4307  0012CA  6EDF               	movwf	indf2,c
  4308  0012CC                     
  4309                           ; BSR set to: 0
  4310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4311  0012CC  0E00               	movlw	0
  4312  0012CE  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  4313  0012D0  0E00               	movlw	0
  4314  0012D2  6FA7               	movwf	efgtoa@sign& (0+255),b
  4315  0012D4                     
  4316                           ; BSR set to: 0
  4317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4318  0012D4  BFBE               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4319  0012D6  EF71  F009         	goto	u9420
  4320  0012DA  EF6F  F009         	goto	u9421
  4321  0012DE                     u9421:
  4322  0012DE  EF79  F009         	goto	l7801
  4323  0012E2                     u9420:
  4324  0012E2                     
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4327  0012E2  0E00               	movlw	0
  4328  0012E4  6FA8               	movwf	(efgtoa@sign+1)& (0+255),b
  4329  0012E6  0E01               	movlw	1
  4330  0012E8  6FA7               	movwf	efgtoa@sign& (0+255),b
  4331  0012EA                     
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4334  0012EA  6DBD               	negf	efgtoa@e& (0+255),b
  4335  0012EC  1FBE               	comf	(efgtoa@e+1)& (0+255),f,b
  4336  0012EE  B0D8               	btfsc	status,0,c
  4337  0012F0  2BBE               	incf	(efgtoa@e+1)& (0+255),f,b
  4338  0012F2                     l7801:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4342  0012F2  0E00               	movlw	0
  4343  0012F4  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
  4344  0012F6  0E02               	movlw	2
  4345  0012F8  6FA9               	movwf	efgtoa@p& (0+255),b
  4346                           
  4347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4348  0012FA  EFAA  F009         	goto	l7813
  4349  0012FE                     l7803:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4353  0012FE  07B7               	decf	efgtoa@i& (0+255),f,b
  4354  001300  A0D8               	btfss	status,0,c
  4355  001302  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4356  001304                     
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4359  001304  0E3B               	movlw	low _dbuf
  4360  001306  25B7               	addwf	efgtoa@i& (0+255),w,b
  4361  001308  6ED9               	movwf	fsr2l,c
  4362  00130A  0E01               	movlw	high _dbuf
  4363  00130C  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4364  00130E  6EDA               	movwf	fsr2h,c
  4365  001310  C0BD  F006         	movff	efgtoa@e,___awmod@dividend
  4366  001314  C0BE  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  4367  001318  0E00               	movlw	0
  4368  00131A  6E09               	movwf	(___awmod@divisor+1)^0,c
  4369  00131C  0E0A               	movlw	10
  4370  00131E  6E08               	movwf	___awmod@divisor^0,c
  4371  001320  ECFB  F01E         	call	___awmod	;wreg free
  4372  001324  5006               	movf	?___awmod^0,w,c
  4373  001326  0F30               	addlw	48
  4374  001328  6EDF               	movwf	indf2,c
  4375  00132A                     
  4376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4377  00132A  C0BD  F006         	movff	efgtoa@e,___awdiv@dividend
  4378  00132E  C0BE  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  4379  001332  0E00               	movlw	0
  4380  001334  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4381  001336  0E0A               	movlw	10
  4382  001338  6E08               	movwf	___awdiv@divisor^0,c
  4383  00133A  EC38  F01E         	call	___awdiv	;wreg free
  4384  00133E  C006  F0BD         	movff	?___awdiv,efgtoa@e
  4385  001342  C007  F0BE         	movff	?___awdiv+1,efgtoa@e+1
  4386  001346                     
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4388  001346  0100               	movlb	0	; () banked
  4389  001348  07A9               	decf	efgtoa@p& (0+255),f,b
  4390  00134A  A0D8               	btfss	status,0,c
  4391  00134C  07AA               	decf	(efgtoa@p+1)& (0+255),f,b
  4392  00134E                     
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4395  00134E  07AC               	decf	efgtoa@w& (0+255),f,b
  4396  001350  A0D8               	btfss	status,0,c
  4397  001352  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4398  001354                     l7813:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4402  001354  51BD               	movf	efgtoa@e& (0+255),w,b
  4403  001356  11BE               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4404  001358  A4D8               	btfss	status,2,c
  4405  00135A  EFB1  F009         	goto	u9431
  4406  00135E  EFB3  F009         	goto	u9430
  4407  001362                     u9431:
  4408  001362  EF7F  F009         	goto	l7803
  4409  001366                     u9430:
  4410  001366                     
  4411                           ; BSR set to: 0
  4412  001366  BFAA               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4413  001368  EFC0  F009         	goto	u9440
  4414  00136C  51AA               	movf	(efgtoa@p+1)& (0+255),w,b
  4415  00136E  E106               	bnz	u9441
  4416  001370  05A9               	decf	efgtoa@p& (0+255),w,b
  4417  001372  B0D8               	btfsc	status,0,c
  4418  001374  EFBE  F009         	goto	u9441
  4419  001378  EFC0  F009         	goto	u9440
  4420  00137C                     u9441:
  4421  00137C  EF7F  F009         	goto	l7803
  4422  001380                     u9440:
  4423  001380                     
  4424                           ; BSR set to: 0
  4425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4426  001380  07B7               	decf	efgtoa@i& (0+255),f,b
  4427  001382  A0D8               	btfss	status,0,c
  4428  001384  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4429  001386                     
  4430                           ; BSR set to: 0
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4432  001386  51A7               	movf	efgtoa@sign& (0+255),w,b
  4433  001388  11A8               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4434  00138A  A4D8               	btfss	status,2,c
  4435  00138C  EFCA  F009         	goto	u9451
  4436  001390  EFCC  F009         	goto	u9450
  4437  001394                     u9451:
  4438  001394  EFD2  F009         	goto	l7823
  4439  001398                     u9450:
  4440  001398                     
  4441                           ; BSR set to: 0
  4442  001398  0E00               	movlw	0
  4443  00139A  6F98               	movwf	(_efgtoa$824+1)& (0+255),b
  4444  00139C  0E2B               	movlw	43
  4445  00139E  6F97               	movwf	_efgtoa$824& (0+255),b
  4446  0013A0  EFD6  F009         	goto	l7825
  4447  0013A4                     l7823:
  4448                           
  4449                           ; BSR set to: 0
  4450  0013A4  0E00               	movlw	0
  4451  0013A6  6F98               	movwf	(_efgtoa$824+1)& (0+255),b
  4452  0013A8  0E2D               	movlw	45
  4453  0013AA  6F97               	movwf	_efgtoa$824& (0+255),b
  4454  0013AC                     l7825:
  4455                           
  4456                           ; BSR set to: 0
  4457  0013AC  0E3B               	movlw	low _dbuf
  4458  0013AE  25B7               	addwf	efgtoa@i& (0+255),w,b
  4459  0013B0  6ED9               	movwf	fsr2l,c
  4460  0013B2  0E01               	movlw	high _dbuf
  4461  0013B4  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4462  0013B6  6EDA               	movwf	fsr2h,c
  4463  0013B8  C097  FFDF         	movff	_efgtoa$824,indf2
  4464  0013BC                     
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4467  0013BC  07AC               	decf	efgtoa@w& (0+255),f,b
  4468  0013BE  A0D8               	btfss	status,0,c
  4469  0013C0  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4470  0013C2                     
  4471                           ; BSR set to: 0
  4472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4473  0013C2  07B7               	decf	efgtoa@i& (0+255),f,b
  4474  0013C4  A0D8               	btfss	status,0,c
  4475  0013C6  07B8               	decf	(efgtoa@i+1)& (0+255),f,b
  4476  0013C8                     
  4477                           ; BSR set to: 0
  4478  0013C8  0EBF               	movlw	191
  4479  0013CA  6F88               	movwf	??_efgtoa& (0+255),b
  4480  0013CC  0EFF               	movlw	255
  4481  0013CE  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  4482  0013D0  5187               	movf	efgtoa@c& (0+255),w,b
  4483  0013D2  6F8A               	movwf	(??_efgtoa+2)& (0+255),b
  4484  0013D4  6B8B               	clrf	(??_efgtoa+3)& (0+255),b
  4485  0013D6  5188               	movf	??_efgtoa& (0+255),w,b
  4486  0013D8  278A               	addwf	(??_efgtoa+2)& (0+255),f,b
  4487  0013DA  5189               	movf	(??_efgtoa+1)& (0+255),w,b
  4488  0013DC  238B               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4489  0013DE  518B               	movf	(??_efgtoa+3)& (0+255),w,b
  4490  0013E0  E10A               	bnz	u9460
  4491  0013E2  0E1A               	movlw	26
  4492  0013E4  5D8A               	subwf	(??_efgtoa+2)& (0+255),w,b
  4493  0013E6  A0D8               	btfss	status,0,c
  4494  0013E8  EFF8  F009         	goto	u9461
  4495  0013EC  EFFB  F009         	goto	u9460
  4496  0013F0                     u9461:
  4497  0013F0  0E01               	movlw	1
  4498  0013F2  EFFC  F009         	goto	u9470
  4499  0013F6                     u9460:
  4500  0013F6  0E00               	movlw	0
  4501  0013F8                     u9470:
  4502  0013F8  6F9B               	movwf	_efgtoa$826& (0+255),b
  4503  0013FA  6B9C               	clrf	(_efgtoa$826+1)& (0+255),b
  4504  0013FC                     
  4505                           ; BSR set to: 0
  4506  0013FC  519B               	movf	_efgtoa$826& (0+255),w,b
  4507  0013FE  119C               	iorwf	(_efgtoa$826+1)& (0+255),w,b
  4508  001400  A4D8               	btfss	status,2,c
  4509  001402  EF05  F00A         	goto	u9481
  4510  001406  EF07  F00A         	goto	u9480
  4511  00140A                     u9481:
  4512  00140A  EF0D  F00A         	goto	l7839
  4513  00140E                     u9480:
  4514  00140E                     
  4515                           ; BSR set to: 0
  4516  00140E  0E00               	movlw	0
  4517  001410  6F9A               	movwf	(_efgtoa$825+1)& (0+255),b
  4518  001412  0E65               	movlw	101
  4519  001414  6F99               	movwf	_efgtoa$825& (0+255),b
  4520  001416  EF11  F00A         	goto	l7841
  4521  00141A                     l7839:
  4522                           
  4523                           ; BSR set to: 0
  4524  00141A  0E00               	movlw	0
  4525  00141C  6F9A               	movwf	(_efgtoa$825+1)& (0+255),b
  4526  00141E  0E45               	movlw	69
  4527  001420  6F99               	movwf	_efgtoa$825& (0+255),b
  4528  001422                     l7841:
  4529                           
  4530                           ; BSR set to: 0
  4531  001422  0E3B               	movlw	low _dbuf
  4532  001424  25B7               	addwf	efgtoa@i& (0+255),w,b
  4533  001426  6ED9               	movwf	fsr2l,c
  4534  001428  0E01               	movlw	high _dbuf
  4535  00142A  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4536  00142C  6EDA               	movwf	fsr2h,c
  4537  00142E  C099  FFDF         	movff	_efgtoa$825,indf2
  4538  001432                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4541  001432  07AC               	decf	efgtoa@w& (0+255),f,b
  4542  001434  A0D8               	btfss	status,0,c
  4543  001436  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4544  001438                     
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4547  001438  0E3B               	movlw	low _dbuf
  4548  00143A  25BF               	addwf	efgtoa@n& (0+255),w,b
  4549  00143C  6E06               	movwf	strcpy@dest^0,c
  4550  00143E  0E01               	movlw	high _dbuf
  4551  001440  21C0               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4552  001442  6E07               	movwf	(strcpy@dest+1)^0,c
  4553  001444  0E3B               	movlw	low _dbuf
  4554  001446  25B7               	addwf	efgtoa@i& (0+255),w,b
  4555  001448  6E08               	movwf	strcpy@src^0,c
  4556  00144A  0E01               	movlw	high _dbuf
  4557  00144C  21B8               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4558  00144E  6E09               	movwf	(strcpy@src+1)^0,c
  4559  001450  ECAE  F021         	call	_strcpy	;wreg free
  4560  001454  EF04  F005         	goto	l7597
  4561  001458                     l665:
  4562  001458  0012               	return		;funcret
  4563  00145A                     __end_of_efgtoa:
  4564                           	opt callstack 0
  4565                           
  4566 ;; *************** function _tolower *****************
  4567 ;; Defined at:
  4568 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  c               2   11[COMRAM] int 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  2   11[COMRAM] int 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4582 ;;      Params:         2       0       0       0       0       0       0       0       0
  4583 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4584 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4585 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        8 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    3
  4589 ;; This function calls:
  4590 ;;		_isupper
  4591 ;; This function is called by:
  4592 ;;		_efgtoa
  4593 ;;		_vfpfcnvrt
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text8
  4598  00429E                     __ptext8:
  4599                           	opt callstack 0
  4600  00429E                     _tolower:
  4601                           	opt callstack 23
  4602  00429E  0EBF               	movlw	191
  4603  0042A0  6E0E               	movwf	??_tolower^0,c
  4604  0042A2  0EFF               	movlw	255
  4605  0042A4  6E0F               	movwf	(??_tolower+1)^0,c
  4606  0042A6  C00C  F010         	movff	tolower@c,??_tolower+2
  4607  0042AA  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4608  0042AE  500E               	movf	??_tolower^0,w,c
  4609  0042B0  2610               	addwf	(??_tolower+2)^0,f,c
  4610  0042B2  500F               	movf	(??_tolower+1)^0,w,c
  4611  0042B4  2211               	addwfc	(??_tolower+3)^0,f,c
  4612  0042B6  5011               	movf	(??_tolower+3)^0,w,c
  4613  0042B8  E10A               	bnz	u7820
  4614  0042BA  0E1A               	movlw	26
  4615  0042BC  5C10               	subwf	(??_tolower+2)^0,w,c
  4616  0042BE  A0D8               	btfss	status,0,c
  4617  0042C0  EF64  F021         	goto	u7821
  4618  0042C4  EF67  F021         	goto	u7820
  4619  0042C8                     u7821:
  4620  0042C8  0E01               	movlw	1
  4621  0042CA  EF68  F021         	goto	u7830
  4622  0042CE                     u7820:
  4623  0042CE  0E00               	movlw	0
  4624  0042D0                     u7830:
  4625  0042D0  6E12               	movwf	_tolower$1448^0,c
  4626  0042D2  6A13               	clrf	(_tolower$1448+1)^0,c
  4627  0042D4  5012               	movf	_tolower$1448^0,w,c
  4628  0042D6  1013               	iorwf	(_tolower$1448+1)^0,w,c
  4629  0042D8  B4D8               	btfsc	status,2,c
  4630  0042DA  EF71  F021         	goto	u7841
  4631  0042DE  EF73  F021         	goto	u7840
  4632  0042E2                     u7841:
  4633  0042E2  EF7A  F021         	goto	l1599
  4634  0042E6                     u7840:
  4635  0042E6  0E20               	movlw	32
  4636  0042E8  100C               	iorwf	tolower@c^0,w,c
  4637  0042EA  6E0C               	movwf	?_tolower^0,c
  4638  0042EC  500D               	movf	(tolower@c+1)^0,w,c
  4639  0042EE  6E0D               	movwf	(?_tolower+1)^0,c
  4640  0042F0  EF7E  F021         	goto	l1604
  4641  0042F4                     l1599:
  4642  0042F4  C00C  F00C         	movff	tolower@c,?_tolower
  4643  0042F8  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  4644  0042FC                     l1604:
  4645  0042FC  0012               	return		;funcret
  4646  0042FE                     __end_of_tolower:
  4647                           	opt callstack 0
  4648                           
  4649 ;; *************** function _isupper *****************
  4650 ;; Defined at:
  4651 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  c               2    5[COMRAM] int 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2    5[COMRAM] int 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4665 ;;      Params:         2       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4667 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4668 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:        6 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    2
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_efgtoa
  4676 ;;		_vfpfcnvrt
  4677 ;;		_tolower
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text9
  4682  0046F4                     __ptext9:
  4683                           	opt callstack 0
  4684  0046F4                     _isupper:
  4685                           	opt callstack 23
  4686  0046F4  0EBF               	movlw	191
  4687  0046F6  6E08               	movwf	??_isupper^0,c
  4688  0046F8  0EFF               	movlw	255
  4689  0046FA  6E09               	movwf	(??_isupper+1)^0,c
  4690  0046FC  C006  F00A         	movff	isupper@c,??_isupper+2
  4691  004700  C007  F00B         	movff	isupper@c+1,??_isupper+3
  4692  004704  5008               	movf	??_isupper^0,w,c
  4693  004706  260A               	addwf	(??_isupper+2)^0,f,c
  4694  004708  5009               	movf	(??_isupper+1)^0,w,c
  4695  00470A  220B               	addwfc	(??_isupper+3)^0,f,c
  4696  00470C  500B               	movf	(??_isupper+3)^0,w,c
  4697  00470E  E10A               	bnz	u7270
  4698  004710  0E1A               	movlw	26
  4699  004712  5C0A               	subwf	(??_isupper+2)^0,w,c
  4700  004714  A0D8               	btfss	status,0,c
  4701  004716  EF8F  F023         	goto	u7271
  4702  00471A  EF92  F023         	goto	u7270
  4703  00471E                     u7271:
  4704  00471E  0E01               	movlw	1
  4705  004720  EF93  F023         	goto	u7280
  4706  004724                     u7270:
  4707  004724  0E00               	movlw	0
  4708  004726                     u7280:
  4709  004726  6E06               	movwf	?_isupper^0,c
  4710  004728  6A07               	clrf	(?_isupper+1)^0,c
  4711  00472A  0012               	return		;funcret
  4712  00472C                     __end_of_isupper:
  4713                           	opt callstack 0
  4714                           
  4715 ;; *************** function _strcpy *****************
  4716 ;; Defined at:
  4717 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4720 ;;		 -> dbuf(80), 
  4721 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4722 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  4723 ;;		 -> dbuf(80), 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  d               2   13[COMRAM] PTR unsigned char 
  4726 ;;		 -> dbuf(80), 
  4727 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4728 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  4729 ;;		 -> dbuf(80), 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  2    5[COMRAM] PTR unsigned char 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4739 ;;      Params:         4       0       0       0       0       0       0       0       0
  4740 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4741 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4742 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4743 ;;Total ram usage:       10 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    2
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_efgtoa
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text10
  4754  00435C                     __ptext10:
  4755                           	opt callstack 0
  4756  00435C                     _strcpy:
  4757                           	opt callstack 23
  4758  00435C  C008  F00C         	movff	strcpy@src,strcpy@s
  4759  004360  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  4760  004364  C006  F00E         	movff	strcpy@dest,strcpy@d
  4761  004368  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  4762  00436C                     l6905:
  4763  00436C  500C               	movf	strcpy@s^0,w,c
  4764  00436E  6E0A               	movwf	??_strcpy^0,c
  4765  004370  500D               	movf	(strcpy@s+1)^0,w,c
  4766  004372  6E0B               	movwf	(??_strcpy+1)^0,c
  4767  004374  4A0C               	infsnz	strcpy@s^0,f,c
  4768  004376  2A0D               	incf	(strcpy@s+1)^0,f,c
  4769  004378  C00A  FFF6         	movff	??_strcpy,tblptrl
  4770  00437C  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  4771  004380  6AF8               	clrf	tblptru,c
  4772  004382  C00E  FFD9         	movff	strcpy@d,fsr2l
  4773  004386  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  4774  00438A  4A0E               	infsnz	strcpy@d^0,f,c
  4775  00438C  2A0F               	incf	(strcpy@d+1)^0,f,c
  4776  00438E  0E07               	movlw	(high __ramtop+-1)
  4777  004390  64F7               	cpfsgt	tblptrh,c
  4778  004392  D003               	bra	u7807
  4779  004394  0008               	tblrd		*
  4780  004396  50F5               	movf	tablat,w,c
  4781  004398  D005               	bra	u7800
  4782  00439A                     u7807:
  4783  00439A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4784  00439E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4785  0043A2  50EF               	movf	indf0,w,c
  4786  0043A4                     u7800:
  4787  0043A4  6EDF               	movwf	indf2,c
  4788  0043A6  50DF               	movf	indf2,w,c
  4789  0043A8  A4D8               	btfss	status,2,c
  4790  0043AA  EFD9  F021         	goto	u7811
  4791  0043AE  EFDB  F021         	goto	u7810
  4792  0043B2                     u7811:
  4793  0043B2  EFB6  F021         	goto	l6905
  4794  0043B6                     u7810:
  4795  0043B6  0012               	return		;funcret
  4796  0043B8                     __end_of_strcpy:
  4797                           	opt callstack 0
  4798                           
  4799 ;; *************** function _floorf *****************
  4800 ;; Defined at:
  4801 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  x               4   80[COMRAM] float 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  u               4   12[BANK0 ] struct .
  4806 ;;  m               4    6[BANK0 ] unsigned long 
  4807 ;;  e               2   10[BANK0 ] int 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  4   80[COMRAM] float 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4817 ;;      Params:         4       0       0       0       0       0       0       0       0
  4818 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4819 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4820 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4821 ;;Total ram usage:       20 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    2
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_efgtoa
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text11
  4832  0028F4                     __ptext11:
  4833                           	opt callstack 0
  4834  0028F4                     _floorf:
  4835                           	opt callstack 23
  4836  0028F4  C104  F06C         	movff	floorf@F524,floorf@u
  4837  0028F8  C105  F06D         	movff	floorf@F524+1,floorf@u+1
  4838  0028FC  C106  F06E         	movff	floorf@F524+2,floorf@u+2
  4839  002900  C107  F06F         	movff	floorf@F524+3,floorf@u+3
  4840  002904  C051  F06C         	movff	floorf@x,floorf@u
  4841  002908  C052  F06D         	movff	floorf@x+1,floorf@u+1
  4842  00290C  C053  F06E         	movff	floorf@x+2,floorf@u+2
  4843  002910  C054  F06F         	movff	floorf@x+3,floorf@u+3
  4844  002914  0E81               	movlw	129
  4845  002916  0100               	movlb	0	; () banked
  4846  002918  6F60               	movwf	??_floorf& (0+255),b
  4847  00291A  0EFF               	movlw	255
  4848  00291C  6F61               	movwf	(??_floorf+1)& (0+255),b
  4849  00291E  C06C  F062         	movff	floorf@u,??_floorf+2
  4850  002922  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4851  002926  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4852  00292A  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4853  00292E  0E18               	movlw	24
  4854  002930  EF9F  F014         	goto	u7850
  4855  002934                     u7855:
  4856  002934  90D8               	bcf	status,0,c
  4857  002936  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4858  002938  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4859  00293A  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4860  00293C  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4861  00293E                     u7850:
  4862  00293E  2EE8               	decfsz	wreg,f,c
  4863  002940  EF9A  F014         	goto	u7855
  4864  002944  5162               	movf	(??_floorf+2)& (0+255),w,b
  4865  002946  2560               	addwf	??_floorf& (0+255),w,b
  4866  002948  6F6A               	movwf	floorf@e& (0+255),b
  4867  00294A  0E00               	movlw	0
  4868  00294C  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4869  00294E  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4870  002950  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4871  002952  EFB4  F014         	goto	u7861
  4872  002956  516B               	movf	(floorf@e+1)& (0+255),w,b
  4873  002958  E109               	bnz	u7860
  4874  00295A  0E17               	movlw	23
  4875  00295C  5D6A               	subwf	floorf@e& (0+255),w,b
  4876  00295E  A0D8               	btfss	status,0,c
  4877  002960  EFB4  F014         	goto	u7861
  4878  002964  EFB6  F014         	goto	u7860
  4879  002968                     u7861:
  4880  002968  EFC0  F014         	goto	l6923
  4881  00296C                     u7860:
  4882  00296C                     l6921:
  4883                           
  4884                           ; BSR set to: 0
  4885  00296C  C051  F051         	movff	floorf@x,?_floorf
  4886  002970  C052  F052         	movff	floorf@x+1,?_floorf+1
  4887  002974  C053  F053         	movff	floorf@x+2,?_floorf+2
  4888  002978  C054  F054         	movff	floorf@x+3,?_floorf+3
  4889  00297C  EF84  F015         	goto	l1501
  4890  002980                     l6923:
  4891                           
  4892                           ; BSR set to: 0
  4893  002980  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4894  002982  EFC5  F014         	goto	u7871
  4895  002986  EFC7  F014         	goto	u7870
  4896  00298A                     u7871:
  4897  00298A  EF38  F015         	goto	l6933
  4898  00298E                     u7870:
  4899  00298E                     
  4900                           ; BSR set to: 0
  4901  00298E  C06A  F060         	movff	floorf@e,??_floorf
  4902  002992  0EFF               	movlw	255
  4903  002994  6F61               	movwf	(??_floorf+1)& (0+255),b
  4904  002996  0EFF               	movlw	255
  4905  002998  6F62               	movwf	(??_floorf+2)& (0+255),b
  4906  00299A  0E7F               	movlw	127
  4907  00299C  6F63               	movwf	(??_floorf+3)& (0+255),b
  4908  00299E  0E00               	movlw	0
  4909  0029A0  6F64               	movwf	(??_floorf+4)& (0+255),b
  4910  0029A2                     u7885:
  4911  0029A2  6760               	tstfsz	??_floorf& (0+255),b
  4912  0029A4  EFD6  F014         	goto	u7886
  4913  0029A8  EFDE  F014         	goto	u7887
  4914  0029AC                     u7886:
  4915  0029AC  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  4916  0029AE  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4917  0029B0  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4918  0029B2  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4919  0029B4  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4920  0029B6  2F60               	decfsz	??_floorf& (0+255),f,b
  4921  0029B8  EFD1  F014         	goto	u7885
  4922  0029BC                     u7887:
  4923  0029BC  C061  F066         	movff	??_floorf+1,floorf@m
  4924  0029C0  C062  F067         	movff	??_floorf+2,floorf@m+1
  4925  0029C4  C063  F068         	movff	??_floorf+3,floorf@m+2
  4926  0029C8  C064  F069         	movff	??_floorf+4,floorf@m+3
  4927  0029CC  0100               	movlb	0	; () banked
  4928  0029CE  5166               	movf	floorf@m& (0+255),w,b
  4929  0029D0  156C               	andwf	floorf@u& (0+255),w,b
  4930  0029D2  6F60               	movwf	??_floorf& (0+255),b
  4931  0029D4  5167               	movf	(floorf@m+1)& (0+255),w,b
  4932  0029D6  156D               	andwf	(floorf@u+1)& (0+255),w,b
  4933  0029D8  6F61               	movwf	(??_floorf+1)& (0+255),b
  4934  0029DA  5168               	movf	(floorf@m+2)& (0+255),w,b
  4935  0029DC  156E               	andwf	(floorf@u+2)& (0+255),w,b
  4936  0029DE  6F62               	movwf	(??_floorf+2)& (0+255),b
  4937  0029E0  5169               	movf	(floorf@m+3)& (0+255),w,b
  4938  0029E2  156F               	andwf	(floorf@u+3)& (0+255),w,b
  4939  0029E4  6F63               	movwf	(??_floorf+3)& (0+255),b
  4940  0029E6  5160               	movf	??_floorf& (0+255),w,b
  4941  0029E8  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4942  0029EA  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4943  0029EC  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4944  0029EE  A4D8               	btfss	status,2,c
  4945  0029F0  EFFC  F014         	goto	u7891
  4946  0029F4  EFFE  F014         	goto	u7890
  4947  0029F8                     u7891:
  4948  0029F8  EF00  F015         	goto	l6929
  4949  0029FC                     u7890:
  4950  0029FC  EFB6  F014         	goto	l6921
  4951  002A00                     l6929:
  4952                           
  4953                           ; BSR set to: 0
  4954  002A00  C06C  F060         	movff	floorf@u,??_floorf
  4955  002A04  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4956  002A08  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4957  002A0C  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4958  002A10  0E20               	movlw	32
  4959  002A12  EF10  F015         	goto	u7900
  4960  002A16                     u7905:
  4961  002A16  90D8               	bcf	status,0,c
  4962  002A18  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4963  002A1A  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4964  002A1C  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4965  002A1E  3360               	rrcf	??_floorf& (0+255),f,b
  4966  002A20                     u7900:
  4967  002A20  2EE8               	decfsz	wreg,f,c
  4968  002A22  EF0B  F015         	goto	u7905
  4969  002A26  5160               	movf	??_floorf& (0+255),w,b
  4970  002A28  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4971  002A2A  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4972  002A2C  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4973  002A2E  B4D8               	btfsc	status,2,c
  4974  002A30  EF1C  F015         	goto	u7911
  4975  002A34  EF1E  F015         	goto	u7910
  4976  002A38                     u7911:
  4977  002A38  EF26  F015         	goto	l1504
  4978  002A3C                     u7910:
  4979  002A3C                     
  4980                           ; BSR set to: 0
  4981  002A3C  5166               	movf	floorf@m& (0+255),w,b
  4982  002A3E  276C               	addwf	floorf@u& (0+255),f,b
  4983  002A40  5167               	movf	(floorf@m+1)& (0+255),w,b
  4984  002A42  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  4985  002A44  5168               	movf	(floorf@m+2)& (0+255),w,b
  4986  002A46  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  4987  002A48  5169               	movf	(floorf@m+3)& (0+255),w,b
  4988  002A4A  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  4989  002A4C                     l1504:
  4990                           
  4991                           ; BSR set to: 0
  4992  002A4C  1D66               	comf	floorf@m& (0+255),w,b
  4993  002A4E  6F60               	movwf	??_floorf& (0+255),b
  4994  002A50  1D67               	comf	(floorf@m+1)& (0+255),w,b
  4995  002A52  6F61               	movwf	(??_floorf+1)& (0+255),b
  4996  002A54  1D68               	comf	(floorf@m+2)& (0+255),w,b
  4997  002A56  6F62               	movwf	(??_floorf+2)& (0+255),b
  4998  002A58  1D69               	comf	(floorf@m+3)& (0+255),w,b
  4999  002A5A  6F63               	movwf	(??_floorf+3)& (0+255),b
  5000  002A5C  5160               	movf	??_floorf& (0+255),w,b
  5001  002A5E  176C               	andwf	floorf@u& (0+255),f,b
  5002  002A60  5161               	movf	(??_floorf+1)& (0+255),w,b
  5003  002A62  176D               	andwf	(floorf@u+1)& (0+255),f,b
  5004  002A64  5162               	movf	(??_floorf+2)& (0+255),w,b
  5005  002A66  176E               	andwf	(floorf@u+2)& (0+255),f,b
  5006  002A68  5163               	movf	(??_floorf+3)& (0+255),w,b
  5007  002A6A  176F               	andwf	(floorf@u+3)& (0+255),f,b
  5008  002A6C  EF7C  F015         	goto	l6941
  5009  002A70                     l6933:
  5010                           
  5011                           ; BSR set to: 0
  5012  002A70  C06C  F060         	movff	floorf@u,??_floorf
  5013  002A74  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5014  002A78  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5015  002A7C  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5016  002A80  0E20               	movlw	32
  5017  002A82  EF48  F015         	goto	u7920
  5018  002A86                     u7925:
  5019  002A86  90D8               	bcf	status,0,c
  5020  002A88  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5021  002A8A  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5022  002A8C  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5023  002A8E  3360               	rrcf	??_floorf& (0+255),f,b
  5024  002A90                     u7920:
  5025  002A90  2EE8               	decfsz	wreg,f,c
  5026  002A92  EF43  F015         	goto	u7925
  5027  002A96  5160               	movf	??_floorf& (0+255),w,b
  5028  002A98  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5029  002A9A  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5030  002A9C  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5031  002A9E  A4D8               	btfss	status,2,c
  5032  002AA0  EF54  F015         	goto	u7931
  5033  002AA4  EF56  F015         	goto	u7930
  5034  002AA8                     u7931:
  5035  002AA8  EF60  F015         	goto	l6937
  5036  002AAC                     u7930:
  5037  002AAC                     
  5038                           ; BSR set to: 0
  5039  002AAC  0E00               	movlw	0
  5040  002AAE  6F6C               	movwf	floorf@u& (0+255),b
  5041  002AB0  0E00               	movlw	0
  5042  002AB2  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5043  002AB4  0E00               	movlw	0
  5044  002AB6  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5045  002AB8  0E00               	movlw	0
  5046  002ABA  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5047  002ABC  EF7C  F015         	goto	l6941
  5048  002AC0                     l6937:
  5049                           
  5050                           ; BSR set to: 0
  5051  002AC0  90D8               	bcf	status,0,c
  5052  002AC2  356C               	rlcf	floorf@u& (0+255),w,b
  5053  002AC4  6F60               	movwf	??_floorf& (0+255),b
  5054  002AC6  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  5055  002AC8  6F61               	movwf	(??_floorf+1)& (0+255),b
  5056  002ACA  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  5057  002ACC  6F62               	movwf	(??_floorf+2)& (0+255),b
  5058  002ACE  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  5059  002AD0  6F63               	movwf	(??_floorf+3)& (0+255),b
  5060  002AD2  5160               	movf	??_floorf& (0+255),w,b
  5061  002AD4  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5062  002AD6  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5063  002AD8  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5064  002ADA  B4D8               	btfsc	status,2,c
  5065  002ADC  EF72  F015         	goto	u7941
  5066  002AE0  EF74  F015         	goto	u7940
  5067  002AE4                     u7941:
  5068  002AE4  EF7C  F015         	goto	l6941
  5069  002AE8                     u7940:
  5070  002AE8                     
  5071                           ; BSR set to: 0
  5072  002AE8  0E00               	movlw	0
  5073  002AEA  6F6C               	movwf	floorf@u& (0+255),b
  5074  002AEC  0E00               	movlw	0
  5075  002AEE  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5076  002AF0  0E80               	movlw	128
  5077  002AF2  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5078  002AF4  0EBF               	movlw	191
  5079  002AF6  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5080  002AF8                     l6941:
  5081                           
  5082                           ; BSR set to: 0
  5083  002AF8  C06C  F051         	movff	floorf@u,?_floorf
  5084  002AFC  C06D  F052         	movff	floorf@u+1,?_floorf+1
  5085  002B00  C06E  F053         	movff	floorf@u+2,?_floorf+2
  5086  002B04  C06F  F054         	movff	floorf@u+3,?_floorf+3
  5087  002B08                     l1501:
  5088                           
  5089                           ; BSR set to: 0
  5090  002B08  0012               	return		;funcret
  5091  002B0A                     __end_of_floorf:
  5092                           	opt callstack 0
  5093                           
  5094 ;; *************** function ___fpclassifyf *****************
  5095 ;; Defined at:
  5096 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  x               4    5[COMRAM] float 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  u               4   15[COMRAM] struct .
  5101 ;;  e               2   13[COMRAM] int 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  2    5[COMRAM] int 
  5104 ;; Registers used:
  5105 ;;		wreg, status,2, status,0
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5111 ;;      Params:         4       0       0       0       0       0       0       0       0
  5112 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5113 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5114 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5115 ;;Total ram usage:       14 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:    2
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_efgtoa
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text12
  5126  0038EE                     __ptext12:
  5127                           	opt callstack 0
  5128  0038EE                     ___fpclassifyf:
  5129                           	opt callstack 23
  5130  0038EE  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5131  0038F2  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5132  0038F6  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5133  0038FA  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5134  0038FE  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5135  003902  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5136  003906  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5137  00390A  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5138  00390E  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5139  003912  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5140  003916  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5141  00391A  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5142  00391E  0E18               	movlw	24
  5143  003920  EF97  F01C         	goto	u7730
  5144  003924                     u7735:
  5145  003924  90D8               	bcf	status,0,c
  5146  003926  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5147  003928  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5148  00392A  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5149  00392C  320A               	rrcf	??___fpclassifyf^0,f,c
  5150  00392E                     u7730:
  5151  00392E  2EE8               	decfsz	wreg,f,c
  5152  003930  EF92  F01C         	goto	u7735
  5153  003934  500A               	movf	??___fpclassifyf^0,w,c
  5154  003936  6E0E               	movwf	___fpclassifyf@e^0,c
  5155  003938  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5156  00393A  500E               	movf	___fpclassifyf@e^0,w,c
  5157  00393C  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5158  00393E  A4D8               	btfss	status,2,c
  5159  003940  EFA4  F01C         	goto	u7741
  5160  003944  EFA6  F01C         	goto	u7740
  5161  003948                     u7741:
  5162  003948  EFC6  F01C         	goto	l6893
  5163  00394C                     u7740:
  5164  00394C  90D8               	bcf	status,0,c
  5165  00394E  3410               	rlcf	___fpclassifyf@u^0,w,c
  5166  003950  6E0A               	movwf	??___fpclassifyf^0,c
  5167  003952  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5168  003954  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5169  003956  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5170  003958  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5171  00395A  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5172  00395C  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5173  00395E  500A               	movf	??___fpclassifyf^0,w,c
  5174  003960  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5175  003962  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5176  003964  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5177  003966  A4D8               	btfss	status,2,c
  5178  003968  EFB8  F01C         	goto	u7751
  5179  00396C  EFBA  F01C         	goto	u7750
  5180  003970                     u7751:
  5181  003970  EFC0  F01C         	goto	l6889
  5182  003974                     u7750:
  5183  003974  0E00               	movlw	0
  5184  003976  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5185  003978  0E02               	movlw	2
  5186  00397A  6E06               	movwf	?___fpclassifyf^0,c
  5187  00397C  EFF5  F01C         	goto	l1456
  5188  003980                     l6889:
  5189  003980  0E00               	movlw	0
  5190  003982  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5191  003984  0E03               	movlw	3
  5192  003986  6E06               	movwf	?___fpclassifyf^0,c
  5193  003988  EFF5  F01C         	goto	l1456
  5194  00398C                     l6893:
  5195  00398C  280E               	incf	___fpclassifyf@e^0,w,c
  5196  00398E  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5197  003990  A4D8               	btfss	status,2,c
  5198  003992  EFCD  F01C         	goto	u7761
  5199  003996  EFCF  F01C         	goto	u7760
  5200  00399A                     u7761:
  5201  00399A  EFF1  F01C         	goto	l6899
  5202  00399E                     u7760:
  5203  00399E  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5204  0039A2  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5205  0039A6  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5206  0039AA  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5207  0039AE  0E09               	movlw	9
  5208  0039B0                     u7775:
  5209  0039B0  90D8               	bcf	status,0,c
  5210  0039B2  360A               	rlcf	??___fpclassifyf^0,f,c
  5211  0039B4  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5212  0039B6  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5213  0039B8  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5214  0039BA  2EE8               	decfsz	wreg,f,c
  5215  0039BC  EFD8  F01C         	goto	u7775
  5216  0039C0  500A               	movf	??___fpclassifyf^0,w,c
  5217  0039C2  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5218  0039C4  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5219  0039C6  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5220  0039C8  B4D8               	btfsc	status,2,c
  5221  0039CA  EFE9  F01C         	goto	u7781
  5222  0039CE  EFEC  F01C         	goto	u7780
  5223  0039D2                     u7781:
  5224  0039D2  0E01               	movlw	1
  5225  0039D4  EFED  F01C         	goto	u7790
  5226  0039D8                     u7780:
  5227  0039D8  0E00               	movlw	0
  5228  0039DA                     u7790:
  5229  0039DA  6E06               	movwf	?___fpclassifyf^0,c
  5230  0039DC  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5231  0039DE  EFF5  F01C         	goto	l1456
  5232  0039E2                     l6899:
  5233  0039E2  0E00               	movlw	0
  5234  0039E4  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5235  0039E6  0E04               	movlw	4
  5236  0039E8  6E06               	movwf	?___fpclassifyf^0,c
  5237  0039EA                     l1456:
  5238  0039EA  0012               	return		;funcret
  5239  0039EC                     __end_of___fpclassifyf:
  5240                           	opt callstack 0
  5241                           
  5242 ;; *************** function ___flsub *****************
  5243 ;; Defined at:
  5244 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  b               4   21[BANK0 ] int 
  5247 ;;  a               4   25[BANK0 ] int 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  4   21[BANK0 ] int 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5259 ;;      Params:         0       8       0       0       0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5262 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5263 ;;Total ram usage:        8 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    3
  5266 ;; This function calls:
  5267 ;;		___fladd
  5268 ;; This function is called by:
  5269 ;;		_efgtoa
  5270 ;;		_PID
  5271 ;;		_roundf
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text13
  5276  0045A6                     __ptext13:
  5277                           	opt callstack 0
  5278  0045A6                     ___flsub:
  5279                           	opt callstack 22
  5280  0045A6  0E00               	movlw	0
  5281  0045A8  0100               	movlb	0	; () banked
  5282  0045AA  1B79               	xorwf	___flsub@a& (0+255),f,b
  5283  0045AC  0E00               	movlw	0
  5284  0045AE  1B7A               	xorwf	(___flsub@a+1)& (0+255),f,b
  5285  0045B0  0E00               	movlw	0
  5286  0045B2  1B7B               	xorwf	(___flsub@a+2)& (0+255),f,b
  5287  0045B4  0E80               	movlw	128
  5288  0045B6  1B7C               	xorwf	(___flsub@a+3)& (0+255),f,b
  5289  0045B8                     
  5290                           ; BSR set to: 0
  5291  0045B8  C075  F028         	movff	___flsub@b,___fladd@b
  5292  0045BC  C076  F029         	movff	___flsub@b+1,___fladd@b+1
  5293  0045C0  C077  F02A         	movff	___flsub@b+2,___fladd@b+2
  5294  0045C4  C078  F02B         	movff	___flsub@b+3,___fladd@b+3
  5295  0045C8  C079  F02C         	movff	___flsub@a,___fladd@a
  5296  0045CC  C07A  F02D         	movff	___flsub@a+1,___fladd@a+1
  5297  0045D0  C07B  F02E         	movff	___flsub@a+2,___fladd@a+2
  5298  0045D4  C07C  F02F         	movff	___flsub@a+3,___fladd@a+3
  5299  0045D8  ECC8  F00C         	call	___fladd	;wreg free
  5300  0045DC  C028  F075         	movff	?___fladd,?___flsub
  5301  0045E0  C029  F076         	movff	?___fladd+1,?___flsub+1
  5302  0045E4  C02A  F077         	movff	?___fladd+2,?___flsub+2
  5303  0045E8  C02B  F078         	movff	?___fladd+3,?___flsub+3
  5304  0045EC  0012               	return		;funcret
  5305  0045EE                     __end_of___flsub:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function ___flneg *****************
  5309 ;; Defined at:
  5310 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  f1              4    5[COMRAM] int 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  4    5[COMRAM] int 
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5324 ;;      Params:         4       0       0       0       0       0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5327 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5328 ;;Total ram usage:        4 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    2
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_efgtoa
  5335 ;;		_roundf
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text14
  5340  00472C                     __ptext14:
  5341                           	opt callstack 0
  5342  00472C                     ___flneg:
  5343                           	opt callstack 23
  5344  00472C  5006               	movf	___flneg@f1^0,w,c
  5345  00472E  1007               	iorwf	(___flneg@f1+1)^0,w,c
  5346  004730  1008               	iorwf	(___flneg@f1+2)^0,w,c
  5347  004732  1009               	iorwf	(___flneg@f1+3)^0,w,c
  5348  004734  B4D8               	btfsc	status,2,c
  5349  004736  EF9F  F023         	goto	u8721
  5350  00473A  EFA1  F023         	goto	u8720
  5351  00473E                     u8721:
  5352  00473E  EFA9  F023         	goto	l7431
  5353  004742                     u8720:
  5354  004742  0E00               	movlw	0
  5355  004744  1A06               	xorwf	___flneg@f1^0,f,c
  5356  004746  0E00               	movlw	0
  5357  004748  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  5358  00474A  0E00               	movlw	0
  5359  00474C  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  5360  00474E  0E80               	movlw	128
  5361  004750  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  5362  004752                     l7431:
  5363  004752  C006  F006         	movff	___flneg@f1,?___flneg
  5364  004756  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  5365  00475A  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  5366  00475E  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  5367  004762  0012               	return		;funcret
  5368  004764                     __end_of___flneg:
  5369                           	opt callstack 0
  5370                           
  5371 ;; *************** function ___flge *****************
  5372 ;; Defined at:
  5373 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  ff1             4   21[BANK0 ] int 
  5376 ;;  ff2             4   25[BANK0 ] int 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;		None               void
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5388 ;;      Params:         0       8       0       0       0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5390 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5391 ;;      Totals:         0      12       0       0       0       0       0       0       0
  5392 ;;Total ram usage:       12 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    2
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_efgtoa
  5399 ;;		_hayCruce
  5400 ;;		_decidirDireccion
  5401 ;;		_roundf
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text15
  5406  0037E8                     __ptext15:
  5407                           	opt callstack 0
  5408  0037E8                     ___flge:
  5409                           	opt callstack 23
  5410  0037E8  0E00               	movlw	0
  5411  0037EA  0100               	movlb	0	; () banked
  5412  0037EC  1575               	andwf	___flge@ff1& (0+255),w,b
  5413  0037EE  6F7D               	movwf	??___flge& (0+255),b
  5414  0037F0  0E00               	movlw	0
  5415  0037F2  1576               	andwf	(___flge@ff1+1)& (0+255),w,b
  5416  0037F4  6F7E               	movwf	(??___flge+1)& (0+255),b
  5417  0037F6  0E80               	movlw	128
  5418  0037F8  1577               	andwf	(___flge@ff1+2)& (0+255),w,b
  5419  0037FA  6F7F               	movwf	(??___flge+2)& (0+255),b
  5420  0037FC  0E7F               	movlw	127
  5421  0037FE  1578               	andwf	(___flge@ff1+3)& (0+255),w,b
  5422  003800  6F80               	movwf	(??___flge+3)& (0+255),b
  5423  003802  517D               	movf	??___flge& (0+255),w,b
  5424  003804  117E               	iorwf	(??___flge+1)& (0+255),w,b
  5425  003806  117F               	iorwf	(??___flge+2)& (0+255),w,b
  5426  003808  1180               	iorwf	(??___flge+3)& (0+255),w,b
  5427  00380A  A4D8               	btfss	status,2,c
  5428  00380C  EF0A  F01C         	goto	u8671
  5429  003810  EF0C  F01C         	goto	u8670
  5430  003814                     u8671:
  5431  003814  EF14  F01C         	goto	l7409
  5432  003818                     u8670:
  5433  003818                     
  5434                           ; BSR set to: 0
  5435  003818  0E00               	movlw	0
  5436  00381A  6F75               	movwf	___flge@ff1& (0+255),b
  5437  00381C  0E00               	movlw	0
  5438  00381E  6F76               	movwf	(___flge@ff1+1)& (0+255),b
  5439  003820  0E00               	movlw	0
  5440  003822  6F77               	movwf	(___flge@ff1+2)& (0+255),b
  5441  003824  0E00               	movlw	0
  5442  003826  6F78               	movwf	(___flge@ff1+3)& (0+255),b
  5443  003828                     l7409:
  5444                           
  5445                           ; BSR set to: 0
  5446  003828  0E00               	movlw	0
  5447  00382A  1579               	andwf	___flge@ff2& (0+255),w,b
  5448  00382C  6F7D               	movwf	??___flge& (0+255),b
  5449  00382E  0E00               	movlw	0
  5450  003830  157A               	andwf	(___flge@ff2+1)& (0+255),w,b
  5451  003832  6F7E               	movwf	(??___flge+1)& (0+255),b
  5452  003834  0E80               	movlw	128
  5453  003836  157B               	andwf	(___flge@ff2+2)& (0+255),w,b
  5454  003838  6F7F               	movwf	(??___flge+2)& (0+255),b
  5455  00383A  0E7F               	movlw	127
  5456  00383C  157C               	andwf	(___flge@ff2+3)& (0+255),w,b
  5457  00383E  6F80               	movwf	(??___flge+3)& (0+255),b
  5458  003840  517D               	movf	??___flge& (0+255),w,b
  5459  003842  117E               	iorwf	(??___flge+1)& (0+255),w,b
  5460  003844  117F               	iorwf	(??___flge+2)& (0+255),w,b
  5461  003846  1180               	iorwf	(??___flge+3)& (0+255),w,b
  5462  003848  A4D8               	btfss	status,2,c
  5463  00384A  EF29  F01C         	goto	u8681
  5464  00384E  EF2B  F01C         	goto	u8680
  5465  003852                     u8681:
  5466  003852  EF33  F01C         	goto	l7413
  5467  003856                     u8680:
  5468  003856                     
  5469                           ; BSR set to: 0
  5470  003856  0E00               	movlw	0
  5471  003858  6F79               	movwf	___flge@ff2& (0+255),b
  5472  00385A  0E00               	movlw	0
  5473  00385C  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5474  00385E  0E00               	movlw	0
  5475  003860  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5476  003862  0E00               	movlw	0
  5477  003864  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5478  003866                     l7413:
  5479                           
  5480                           ; BSR set to: 0
  5481  003866  AF78               	btfss	(___flge@ff1+3)& (0+255),7,b
  5482  003868  EF38  F01C         	goto	u8691
  5483  00386C  EF3A  F01C         	goto	u8690
  5484  003870                     u8691:
  5485  003870  EF43  F01C         	goto	l7417
  5486  003874                     u8690:
  5487  003874                     
  5488                           ; BSR set to: 0
  5489  003874  6D75               	negf	___flge@ff1& (0+255),b
  5490  003876  1F76               	comf	(___flge@ff1+1)& (0+255),f,b
  5491  003878  B0D8               	btfsc	status,0,c
  5492  00387A  2B76               	incf	(___flge@ff1+1)& (0+255),f,b
  5493  00387C  1F77               	comf	(___flge@ff1+2)& (0+255),f,b
  5494  00387E  B0D8               	btfsc	status,0,c
  5495  003880  2B77               	incf	(___flge@ff1+2)& (0+255),f,b
  5496  003882  0E80               	movlw	128
  5497  003884  5778               	subfwb	(___flge@ff1+3)& (0+255),f,b
  5498  003886                     l7417:
  5499                           
  5500                           ; BSR set to: 0
  5501  003886  AF7C               	btfss	(___flge@ff2+3)& (0+255),7,b
  5502  003888  EF48  F01C         	goto	u8701
  5503  00388C  EF4A  F01C         	goto	u8700
  5504  003890                     u8701:
  5505  003890  EF53  F01C         	goto	l1040
  5506  003894                     u8700:
  5507  003894                     
  5508                           ; BSR set to: 0
  5509  003894  6D79               	negf	___flge@ff2& (0+255),b
  5510  003896  1F7A               	comf	(___flge@ff2+1)& (0+255),f,b
  5511  003898  B0D8               	btfsc	status,0,c
  5512  00389A  2B7A               	incf	(___flge@ff2+1)& (0+255),f,b
  5513  00389C  1F7B               	comf	(___flge@ff2+2)& (0+255),f,b
  5514  00389E  B0D8               	btfsc	status,0,c
  5515  0038A0  2B7B               	incf	(___flge@ff2+2)& (0+255),f,b
  5516  0038A2  0E80               	movlw	128
  5517  0038A4  577C               	subfwb	(___flge@ff2+3)& (0+255),f,b
  5518  0038A6                     l1040:
  5519                           
  5520                           ; BSR set to: 0
  5521  0038A6  0E00               	movlw	0
  5522  0038A8  1B75               	xorwf	___flge@ff1& (0+255),f,b
  5523  0038AA  0E00               	movlw	0
  5524  0038AC  1B76               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5525  0038AE  0E00               	movlw	0
  5526  0038B0  1B77               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5527  0038B2  0E80               	movlw	128
  5528  0038B4  1B78               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5529  0038B6  0E00               	movlw	0
  5530  0038B8  1B79               	xorwf	___flge@ff2& (0+255),f,b
  5531  0038BA  0E00               	movlw	0
  5532  0038BC  1B7A               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5533  0038BE  0E00               	movlw	0
  5534  0038C0  1B7B               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5535  0038C2  0E80               	movlw	128
  5536  0038C4  1B7C               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5537  0038C6  5179               	movf	___flge@ff2& (0+255),w,b
  5538  0038C8  5D75               	subwf	___flge@ff1& (0+255),w,b
  5539  0038CA  517A               	movf	(___flge@ff2+1)& (0+255),w,b
  5540  0038CC  5976               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5541  0038CE  517B               	movf	(___flge@ff2+2)& (0+255),w,b
  5542  0038D0  5977               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5543  0038D2  517C               	movf	(___flge@ff2+3)& (0+255),w,b
  5544  0038D4  5978               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5545  0038D6  B0D8               	btfsc	status,0,c
  5546  0038D8  EF70  F01C         	goto	u8711
  5547  0038DC  EF72  F01C         	goto	u8710
  5548  0038E0                     u8711:
  5549  0038E0  EF75  F01C         	goto	l7423
  5550  0038E4                     u8710:
  5551  0038E4                     
  5552                           ; BSR set to: 0
  5553  0038E4  90D8               	bcf	status,0,c
  5554  0038E6  EF76  F01C         	goto	l1045
  5555  0038EA                     l7423:
  5556                           
  5557                           ; BSR set to: 0
  5558  0038EA  80D8               	bsf	status,0,c
  5559  0038EC                     l1045:
  5560                           
  5561                           ; BSR set to: 0
  5562  0038EC  0012               	return		;funcret
  5563  0038EE                     __end_of___flge:
  5564                           	opt callstack 0
  5565                           
  5566 ;; *************** function ___fleq *****************
  5567 ;; Defined at:
  5568 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  ff1             4    5[COMRAM] int 
  5571 ;;  ff2             4    9[COMRAM] int 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;		None               void
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5583 ;;      Params:         8       0       0       0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5585 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5586 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5587 ;;Total ram usage:       12 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    2
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_efgtoa
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text16
  5598  003EA6                     __ptext16:
  5599                           	opt callstack 0
  5600  003EA6                     ___fleq:
  5601                           	opt callstack 23
  5602  003EA6  0E00               	movlw	0
  5603  003EA8  1406               	andwf	___fleq@ff1^0,w,c
  5604  003EAA  6E0E               	movwf	??___fleq^0,c
  5605  003EAC  0E00               	movlw	0
  5606  003EAE  1407               	andwf	(___fleq@ff1+1)^0,w,c
  5607  003EB0  6E0F               	movwf	(??___fleq+1)^0,c
  5608  003EB2  0E80               	movlw	128
  5609  003EB4  1408               	andwf	(___fleq@ff1+2)^0,w,c
  5610  003EB6  6E10               	movwf	(??___fleq+2)^0,c
  5611  003EB8  0E7F               	movlw	127
  5612  003EBA  1409               	andwf	(___fleq@ff1+3)^0,w,c
  5613  003EBC  6E11               	movwf	(??___fleq+3)^0,c
  5614  003EBE  500E               	movf	??___fleq^0,w,c
  5615  003EC0  100F               	iorwf	(??___fleq+1)^0,w,c
  5616  003EC2  1010               	iorwf	(??___fleq+2)^0,w,c
  5617  003EC4  1011               	iorwf	(??___fleq+3)^0,w,c
  5618  003EC6  A4D8               	btfss	status,2,c
  5619  003EC8  EF68  F01F         	goto	u8641
  5620  003ECC  EF6A  F01F         	goto	u8640
  5621  003ED0                     u8641:
  5622  003ED0  EF72  F01F         	goto	l7393
  5623  003ED4                     u8640:
  5624  003ED4  0E00               	movlw	0
  5625  003ED6  6E06               	movwf	___fleq@ff1^0,c
  5626  003ED8  0E00               	movlw	0
  5627  003EDA  6E07               	movwf	(___fleq@ff1+1)^0,c
  5628  003EDC  0E00               	movlw	0
  5629  003EDE  6E08               	movwf	(___fleq@ff1+2)^0,c
  5630  003EE0  0E00               	movlw	0
  5631  003EE2  6E09               	movwf	(___fleq@ff1+3)^0,c
  5632  003EE4                     l7393:
  5633  003EE4  0E00               	movlw	0
  5634  003EE6  140A               	andwf	___fleq@ff2^0,w,c
  5635  003EE8  6E0E               	movwf	??___fleq^0,c
  5636  003EEA  0E00               	movlw	0
  5637  003EEC  140B               	andwf	(___fleq@ff2+1)^0,w,c
  5638  003EEE  6E0F               	movwf	(??___fleq+1)^0,c
  5639  003EF0  0E80               	movlw	128
  5640  003EF2  140C               	andwf	(___fleq@ff2+2)^0,w,c
  5641  003EF4  6E10               	movwf	(??___fleq+2)^0,c
  5642  003EF6  0E7F               	movlw	127
  5643  003EF8  140D               	andwf	(___fleq@ff2+3)^0,w,c
  5644  003EFA  6E11               	movwf	(??___fleq+3)^0,c
  5645  003EFC  500E               	movf	??___fleq^0,w,c
  5646  003EFE  100F               	iorwf	(??___fleq+1)^0,w,c
  5647  003F00  1010               	iorwf	(??___fleq+2)^0,w,c
  5648  003F02  1011               	iorwf	(??___fleq+3)^0,w,c
  5649  003F04  A4D8               	btfss	status,2,c
  5650  003F06  EF87  F01F         	goto	u8651
  5651  003F0A  EF89  F01F         	goto	u8650
  5652  003F0E                     u8651:
  5653  003F0E  EF91  F01F         	goto	l7397
  5654  003F12                     u8650:
  5655  003F12  0E00               	movlw	0
  5656  003F14  6E0A               	movwf	___fleq@ff2^0,c
  5657  003F16  0E00               	movlw	0
  5658  003F18  6E0B               	movwf	(___fleq@ff2+1)^0,c
  5659  003F1A  0E00               	movlw	0
  5660  003F1C  6E0C               	movwf	(___fleq@ff2+2)^0,c
  5661  003F1E  0E00               	movlw	0
  5662  003F20  6E0D               	movwf	(___fleq@ff2+3)^0,c
  5663  003F22                     l7397:
  5664  003F22  500A               	movf	___fleq@ff2^0,w,c
  5665  003F24  1806               	xorwf	___fleq@ff1^0,w,c
  5666  003F26  E10F               	bnz	u8660
  5667  003F28  500B               	movf	(___fleq@ff2+1)^0,w,c
  5668  003F2A  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  5669  003F2C  E10C               	bnz	u8660
  5670  003F2E  500C               	movf	(___fleq@ff2+2)^0,w,c
  5671  003F30  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  5672  003F32  E109               	bnz	u8660
  5673  003F34  500D               	movf	(___fleq@ff2+3)^0,w,c
  5674  003F36  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  5675  003F38  B4D8               	btfsc	status,2,c
  5676  003F3A  EFA1  F01F         	goto	u8661
  5677  003F3E  EFA3  F01F         	goto	u8660
  5678  003F42                     u8661:
  5679  003F42  EFA6  F01F         	goto	l7401
  5680  003F46                     u8660:
  5681  003F46  90D8               	bcf	status,0,c
  5682  003F48  EFA7  F01F         	goto	l1034
  5683  003F4C                     l7401:
  5684  003F4C  80D8               	bsf	status,0,c
  5685  003F4E                     l1034:
  5686  003F4E  0012               	return		;funcret
  5687  003F50                     __end_of___fleq:
  5688                           	opt callstack 0
  5689                           
  5690 ;; *************** function ___awmod *****************
  5691 ;; Defined at:
  5692 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  dividend        2    5[COMRAM] int 
  5695 ;;  divisor         2    7[COMRAM] int 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  sign            1   10[COMRAM] unsigned char 
  5698 ;;  counter         1    9[COMRAM] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  2    5[COMRAM] int 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5708 ;;      Params:         4       0       0       0       0       0       0       0       0
  5709 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5711 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5712 ;;Total ram usage:        6 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    2
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_efgtoa
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text17
  5723  003DF6                     __ptext17:
  5724                           	opt callstack 0
  5725  003DF6                     ___awmod:
  5726                           	opt callstack 23
  5727  003DF6  0E00               	movlw	0
  5728  003DF8  6E0B               	movwf	___awmod@sign^0,c
  5729  003DFA  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5730  003DFC  EF04  F01F         	goto	u8580
  5731  003E00  EF02  F01F         	goto	u8581
  5732  003E04                     u8581:
  5733  003E04  EF0A  F01F         	goto	l7361
  5734  003E08                     u8580:
  5735  003E08  6C06               	negf	___awmod@dividend^0,c
  5736  003E0A  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5737  003E0C  B0D8               	btfsc	status,0,c
  5738  003E0E  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5739  003E10  0E01               	movlw	1
  5740  003E12  6E0B               	movwf	___awmod@sign^0,c
  5741  003E14                     l7361:
  5742  003E14  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5743  003E16  EF11  F01F         	goto	u8590
  5744  003E1A  EF0F  F01F         	goto	u8591
  5745  003E1E                     u8591:
  5746  003E1E  EF15  F01F         	goto	l7365
  5747  003E22                     u8590:
  5748  003E22  6C08               	negf	___awmod@divisor^0,c
  5749  003E24  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5750  003E26  B0D8               	btfsc	status,0,c
  5751  003E28  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5752  003E2A                     l7365:
  5753  003E2A  5008               	movf	___awmod@divisor^0,w,c
  5754  003E2C  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5755  003E2E  B4D8               	btfsc	status,2,c
  5756  003E30  EF1C  F01F         	goto	u8601
  5757  003E34  EF1E  F01F         	goto	u8600
  5758  003E38                     u8601:
  5759  003E38  EF42  F01F         	goto	l7381
  5760  003E3C                     u8600:
  5761  003E3C  0E01               	movlw	1
  5762  003E3E  6E0A               	movwf	___awmod@counter^0,c
  5763  003E40  EF26  F01F         	goto	l7371
  5764  003E44                     l7369:
  5765  003E44  90D8               	bcf	status,0,c
  5766  003E46  3608               	rlcf	___awmod@divisor^0,f,c
  5767  003E48  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5768  003E4A  2A0A               	incf	___awmod@counter^0,f,c
  5769  003E4C                     l7371:
  5770  003E4C  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5771  003E4E  EF2B  F01F         	goto	u8611
  5772  003E52  EF2D  F01F         	goto	u8610
  5773  003E56                     u8611:
  5774  003E56  EF22  F01F         	goto	l7369
  5775  003E5A                     u8610:
  5776  003E5A                     l7373:
  5777  003E5A  5008               	movf	___awmod@divisor^0,w,c
  5778  003E5C  5C06               	subwf	___awmod@dividend^0,w,c
  5779  003E5E  5009               	movf	(___awmod@divisor+1)^0,w,c
  5780  003E60  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5781  003E62  A0D8               	btfss	status,0,c
  5782  003E64  EF36  F01F         	goto	u8621
  5783  003E68  EF38  F01F         	goto	u8620
  5784  003E6C                     u8621:
  5785  003E6C  EF3C  F01F         	goto	l7377
  5786  003E70                     u8620:
  5787  003E70  5008               	movf	___awmod@divisor^0,w,c
  5788  003E72  5E06               	subwf	___awmod@dividend^0,f,c
  5789  003E74  5009               	movf	(___awmod@divisor+1)^0,w,c
  5790  003E76  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5791  003E78                     l7377:
  5792  003E78  90D8               	bcf	status,0,c
  5793  003E7A  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5794  003E7C  3208               	rrcf	___awmod@divisor^0,f,c
  5795  003E7E  2E0A               	decfsz	___awmod@counter^0,f,c
  5796  003E80  EF2D  F01F         	goto	l7373
  5797  003E84                     l7381:
  5798  003E84  500B               	movf	___awmod@sign^0,w,c
  5799  003E86  B4D8               	btfsc	status,2,c
  5800  003E88  EF48  F01F         	goto	u8631
  5801  003E8C  EF4A  F01F         	goto	u8630
  5802  003E90                     u8631:
  5803  003E90  EF4E  F01F         	goto	l7385
  5804  003E94                     u8630:
  5805  003E94  6C06               	negf	___awmod@dividend^0,c
  5806  003E96  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5807  003E98  B0D8               	btfsc	status,0,c
  5808  003E9A  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5809  003E9C                     l7385:
  5810  003E9C  C006  F006         	movff	___awmod@dividend,?___awmod
  5811  003EA0  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5812  003EA4  0012               	return		;funcret
  5813  003EA6                     __end_of___awmod:
  5814                           	opt callstack 0
  5815                           
  5816 ;; *************** function ___awdiv *****************
  5817 ;; Defined at:
  5818 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  dividend        2    5[COMRAM] int 
  5821 ;;  divisor         2    7[COMRAM] int 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  quotient        2   11[COMRAM] int 
  5824 ;;  sign            1   10[COMRAM] unsigned char 
  5825 ;;  counter         1    9[COMRAM] unsigned char 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  2    5[COMRAM] int 
  5828 ;; Registers used:
  5829 ;;		wreg, status,2, status,0
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5835 ;;      Params:         4       0       0       0       0       0       0       0       0
  5836 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5838 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5839 ;;Total ram usage:        8 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    2
  5842 ;; This function calls:
  5843 ;;		Nothing
  5844 ;; This function is called by:
  5845 ;;		_efgtoa
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text18
  5850  003C70                     __ptext18:
  5851                           	opt callstack 0
  5852  003C70                     ___awdiv:
  5853                           	opt callstack 23
  5854  003C70  0E00               	movlw	0
  5855  003C72  6E0B               	movwf	___awdiv@sign^0,c
  5856  003C74  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5857  003C76  EF41  F01E         	goto	u8520
  5858  003C7A  EF3F  F01E         	goto	u8521
  5859  003C7E                     u8521:
  5860  003C7E  EF47  F01E         	goto	l7317
  5861  003C82                     u8520:
  5862  003C82  6C08               	negf	___awdiv@divisor^0,c
  5863  003C84  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5864  003C86  B0D8               	btfsc	status,0,c
  5865  003C88  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5866  003C8A  0E01               	movlw	1
  5867  003C8C  6E0B               	movwf	___awdiv@sign^0,c
  5868  003C8E                     l7317:
  5869  003C8E  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5870  003C90  EF4E  F01E         	goto	u8530
  5871  003C94  EF4C  F01E         	goto	u8531
  5872  003C98                     u8531:
  5873  003C98  EF54  F01E         	goto	l7323
  5874  003C9C                     u8530:
  5875  003C9C  6C06               	negf	___awdiv@dividend^0,c
  5876  003C9E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5877  003CA0  B0D8               	btfsc	status,0,c
  5878  003CA2  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5879  003CA4  0E01               	movlw	1
  5880  003CA6  1A0B               	xorwf	___awdiv@sign^0,f,c
  5881  003CA8                     l7323:
  5882  003CA8  0E00               	movlw	0
  5883  003CAA  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5884  003CAC  0E00               	movlw	0
  5885  003CAE  6E0C               	movwf	___awdiv@quotient^0,c
  5886  003CB0  5008               	movf	___awdiv@divisor^0,w,c
  5887  003CB2  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5888  003CB4  B4D8               	btfsc	status,2,c
  5889  003CB6  EF5F  F01E         	goto	u8541
  5890  003CBA  EF61  F01E         	goto	u8540
  5891  003CBE                     u8541:
  5892  003CBE  EF89  F01E         	goto	l7345
  5893  003CC2                     u8540:
  5894  003CC2  0E01               	movlw	1
  5895  003CC4  6E0A               	movwf	___awdiv@counter^0,c
  5896  003CC6  EF69  F01E         	goto	l7331
  5897  003CCA                     l7329:
  5898  003CCA  90D8               	bcf	status,0,c
  5899  003CCC  3608               	rlcf	___awdiv@divisor^0,f,c
  5900  003CCE  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5901  003CD0  2A0A               	incf	___awdiv@counter^0,f,c
  5902  003CD2                     l7331:
  5903  003CD2  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  5904  003CD4  EF6E  F01E         	goto	u8551
  5905  003CD8  EF70  F01E         	goto	u8550
  5906  003CDC                     u8551:
  5907  003CDC  EF65  F01E         	goto	l7329
  5908  003CE0                     u8550:
  5909  003CE0                     l7333:
  5910  003CE0  90D8               	bcf	status,0,c
  5911  003CE2  360C               	rlcf	___awdiv@quotient^0,f,c
  5912  003CE4  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  5913  003CE6  5008               	movf	___awdiv@divisor^0,w,c
  5914  003CE8  5C06               	subwf	___awdiv@dividend^0,w,c
  5915  003CEA  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5916  003CEC  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  5917  003CEE  A0D8               	btfss	status,0,c
  5918  003CF0  EF7C  F01E         	goto	u8561
  5919  003CF4  EF7E  F01E         	goto	u8560
  5920  003CF8                     u8561:
  5921  003CF8  EF83  F01E         	goto	l7341
  5922  003CFC                     u8560:
  5923  003CFC  5008               	movf	___awdiv@divisor^0,w,c
  5924  003CFE  5E06               	subwf	___awdiv@dividend^0,f,c
  5925  003D00  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5926  003D02  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  5927  003D04  800C               	bsf	___awdiv@quotient^0,0,c
  5928  003D06                     l7341:
  5929  003D06  90D8               	bcf	status,0,c
  5930  003D08  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  5931  003D0A  3208               	rrcf	___awdiv@divisor^0,f,c
  5932  003D0C  2E0A               	decfsz	___awdiv@counter^0,f,c
  5933  003D0E  EF70  F01E         	goto	l7333
  5934  003D12                     l7345:
  5935  003D12  500B               	movf	___awdiv@sign^0,w,c
  5936  003D14  B4D8               	btfsc	status,2,c
  5937  003D16  EF8F  F01E         	goto	u8571
  5938  003D1A  EF91  F01E         	goto	u8570
  5939  003D1E                     u8571:
  5940  003D1E  EF95  F01E         	goto	l7349
  5941  003D22                     u8570:
  5942  003D22  6C0C               	negf	___awdiv@quotient^0,c
  5943  003D24  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  5944  003D26  B0D8               	btfsc	status,0,c
  5945  003D28  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  5946  003D2A                     l7349:
  5947  003D2A  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5948  003D2E  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5949  003D32  0012               	return		;funcret
  5950  003D34                     __end_of___awdiv:
  5951                           	opt callstack 0
  5952                           
  5953 ;; *************** function _dtoa *****************
  5954 ;; Defined at:
  5955 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  5958 ;;		 -> sprintf@f(6), 
  5959 ;;  d               8   34[COMRAM] long long 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  n               8   58[COMRAM] long long 
  5962 ;;  i               2   66[COMRAM] int 
  5963 ;;  s               2   56[COMRAM] int 
  5964 ;;  w               2   54[COMRAM] int 
  5965 ;;  p               2   52[COMRAM] int 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  2   32[COMRAM] int 
  5968 ;; Registers used:
  5969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5975 ;;      Params:        10       0       0       0       0       0       0       0       0
  5976 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5977 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5978 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5979 ;;Total ram usage:       36 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    6
  5982 ;; This function calls:
  5983 ;;		___aodiv
  5984 ;;		___aomod
  5985 ;;		_abs
  5986 ;;		_pad
  5987 ;; This function is called by:
  5988 ;;		_vfpfcnvrt
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text19
  5993  002616                     __ptext19:
  5994                           	opt callstack 0
  5995  002616                     _dtoa:
  5996                           	opt callstack 20
  5997  002616                     
  5998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5999  002616  C023  F03B         	movff	dtoa@d,dtoa@n
  6000  00261A  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  6001  00261E  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  6002  002622  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  6003  002626  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  6004  00262A  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  6005  00262E  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  6006  002632  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  6007  002636                     
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6009  002636  BE42               	btfsc	(dtoa@n+7)^0,7,c
  6010  002638  EF20  F013         	goto	u8821
  6011  00263C  EF23  F013         	goto	u8820
  6012  002640                     u8821:
  6013  002640  0E01               	movlw	1
  6014  002642  EF24  F013         	goto	u8830
  6015  002646                     u8820:
  6016  002646  0E00               	movlw	0
  6017  002648                     u8830:
  6018  002648  6E39               	movwf	dtoa@s^0,c
  6019  00264A  6A3A               	clrf	(dtoa@s+1)^0,c
  6020                           
  6021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6022  00264C  5039               	movf	dtoa@s^0,w,c
  6023  00264E  103A               	iorwf	(dtoa@s+1)^0,w,c
  6024  002650  B4D8               	btfsc	status,2,c
  6025  002652  EF2D  F013         	goto	u8841
  6026  002656  EF2F  F013         	goto	u8840
  6027  00265A                     u8841:
  6028  00265A  EF3F  F013         	goto	l7497
  6029  00265E                     u8840:
  6030  00265E                     
  6031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6032  00265E  1E42               	comf	(dtoa@n+7)^0,f,c
  6033  002660  1E41               	comf	(dtoa@n+6)^0,f,c
  6034  002662  1E40               	comf	(dtoa@n+5)^0,f,c
  6035  002664  1E3F               	comf	(dtoa@n+4)^0,f,c
  6036  002666  1E3E               	comf	(dtoa@n+3)^0,f,c
  6037  002668  1E3D               	comf	(dtoa@n+2)^0,f,c
  6038  00266A  1E3C               	comf	(dtoa@n+1)^0,f,c
  6039  00266C  6C3B               	negf	dtoa@n^0,c
  6040  00266E  0E00               	movlw	0
  6041  002670  223C               	addwfc	(dtoa@n+1)^0,f,c
  6042  002672  223D               	addwfc	(dtoa@n+2)^0,f,c
  6043  002674  223E               	addwfc	(dtoa@n+3)^0,f,c
  6044  002676  223F               	addwfc	(dtoa@n+4)^0,f,c
  6045  002678  2240               	addwfc	(dtoa@n+5)^0,f,c
  6046  00267A  2241               	addwfc	(dtoa@n+6)^0,f,c
  6047  00267C  2242               	addwfc	(dtoa@n+7)^0,f,c
  6048  00267E                     l7497:
  6049                           
  6050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6051  00267E  BE56               	btfsc	(_prec+1)^0,7,c
  6052  002680  EF44  F013         	goto	u8851
  6053  002684  EF46  F013         	goto	u8850
  6054  002688                     u8851:
  6055  002688  EF47  F013         	goto	l7501
  6056  00268C                     u8850:
  6057  00268C                     
  6058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6059  00268C  9257               	bcf	_flags^0,1,c
  6060  00268E                     l7501:
  6061                           
  6062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6063  00268E  BE56               	btfsc	(_prec+1)^0,7,c
  6064  002690  EF54  F013         	goto	u8860
  6065  002694  5056               	movf	(_prec+1)^0,w,c
  6066  002696  E106               	bnz	u8861
  6067  002698  0455               	decf	_prec^0,w,c
  6068  00269A  B0D8               	btfsc	status,0,c
  6069  00269C  EF52  F013         	goto	u8861
  6070  0026A0  EF54  F013         	goto	u8860
  6071  0026A4                     u8861:
  6072  0026A4  EF5A  F013         	goto	l627
  6073  0026A8                     u8860:
  6074  0026A8  0E00               	movlw	0
  6075  0026AA  6E36               	movwf	(dtoa@p+1)^0,c
  6076  0026AC  0E01               	movlw	1
  6077  0026AE  6E35               	movwf	dtoa@p^0,c
  6078  0026B0  EF5E  F013         	goto	l629
  6079  0026B4                     l627:
  6080  0026B4  C055  F035         	movff	_prec,dtoa@p
  6081  0026B8  C056  F036         	movff	_prec+1,dtoa@p+1
  6082  0026BC                     l629:
  6083                           
  6084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6085  0026BC  C132  F037         	movff	_width,dtoa@w
  6086  0026C0  C133  F038         	movff	_width+1,dtoa@w+1
  6087  0026C4                     
  6088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6089  0026C4  5039               	movf	dtoa@s^0,w,c
  6090  0026C6  103A               	iorwf	(dtoa@s+1)^0,w,c
  6091  0026C8  A4D8               	btfss	status,2,c
  6092  0026CA  EF69  F013         	goto	u8871
  6093  0026CE  EF6B  F013         	goto	u8870
  6094  0026D2                     u8871:
  6095  0026D2  EF72  F013         	goto	l7509
  6096  0026D6                     u8870:
  6097  0026D6  A457               	btfss	_flags^0,2,c
  6098  0026D8  EF70  F013         	goto	u8881
  6099  0026DC  EF72  F013         	goto	u8880
  6100  0026E0                     u8881:
  6101  0026E0  EF75  F013         	goto	l7511
  6102  0026E4                     u8880:
  6103  0026E4                     l7509:
  6104                           
  6105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6106  0026E4  0637               	decf	dtoa@w^0,f,c
  6107  0026E6  A0D8               	btfss	status,0,c
  6108  0026E8  0638               	decf	(dtoa@w+1)^0,f,c
  6109  0026EA                     l7511:
  6110                           
  6111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6112  0026EA  0E00               	movlw	0
  6113  0026EC  6E44               	movwf	(dtoa@i+1)^0,c
  6114  0026EE  0E4F               	movlw	79
  6115  0026F0  6E43               	movwf	dtoa@i^0,c
  6116  0026F2                     
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6118  0026F2  0E00               	movlw	0
  6119  0026F4  0101               	movlb	1	; () banked
  6120  0026F6  6F8A               	movwf	(_dbuf+79)& (0+255),b
  6121                           
  6122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6123  0026F8  EFFA  F013         	goto	l7525
  6124  0026FC                     l7515:
  6125                           
  6126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6127  0026FC  0643               	decf	dtoa@i^0,f,c
  6128  0026FE  A0D8               	btfss	status,0,c
  6129  002700  0644               	decf	(dtoa@i+1)^0,f,c
  6130  002702                     
  6131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6132  002702  0E3B               	movlw	low _dbuf
  6133  002704  2443               	addwf	dtoa@i^0,w,c
  6134  002706  6ED9               	movwf	fsr2l,c
  6135  002708  0E01               	movlw	high _dbuf
  6136  00270A  2044               	addwfc	(dtoa@i+1)^0,w,c
  6137  00270C  6EDA               	movwf	fsr2h,c
  6138  00270E  C03B  F006         	movff	dtoa@n,___aomod@dividend
  6139  002712  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
  6140  002716  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
  6141  00271A  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
  6142  00271E  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  6143  002722  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  6144  002726  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  6145  00272A  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  6146  00272E  0E0A               	movlw	10
  6147  002730  6E0E               	movwf	___aomod@divisor^0,c
  6148  002732  0E00               	movlw	0
  6149  002734  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6150  002736  0E00               	movlw	0
  6151  002738  6E10               	movwf	(___aomod@divisor+2)^0,c
  6152  00273A  0E00               	movlw	0
  6153  00273C  6E11               	movwf	(___aomod@divisor+3)^0,c
  6154  00273E  0E00               	movlw	0
  6155  002740  6E12               	movwf	(___aomod@divisor+4)^0,c
  6156  002742  0E00               	movlw	0
  6157  002744  6E13               	movwf	(___aomod@divisor+5)^0,c
  6158  002746  0E00               	movlw	0
  6159  002748  6E14               	movwf	(___aomod@divisor+6)^0,c
  6160  00274A  0E00               	movlw	0
  6161  00274C  6E15               	movwf	(___aomod@divisor+7)^0,c
  6162  00274E  EC87  F019         	call	___aomod	;wreg free
  6163  002752  C006  F02B         	movff	?___aomod,??_dtoa
  6164  002756  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  6165  00275A  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  6166  00275E  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  6167  002762  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  6168  002766  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  6169  00276A  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  6170  00276E  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  6171  002772  C02B  F018         	movff	??_dtoa,abs@a
  6172  002776  C02D  F019         	movff	??_dtoa+2,abs@a+1
  6173  00277A  EC3C  F023         	call	_abs	;wreg free
  6174  00277E  5018               	movf	?_abs^0,w,c
  6175  002780  0F30               	addlw	48
  6176  002782  6EDF               	movwf	indf2,c
  6177  002784                     
  6178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6179  002784  0635               	decf	dtoa@p^0,f,c
  6180  002786  A0D8               	btfss	status,0,c
  6181  002788  0636               	decf	(dtoa@p+1)^0,f,c
  6182  00278A                     
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6184  00278A  0637               	decf	dtoa@w^0,f,c
  6185  00278C  A0D8               	btfss	status,0,c
  6186  00278E  0638               	decf	(dtoa@w+1)^0,f,c
  6187  002790                     
  6188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6189  002790  C03B  F006         	movff	dtoa@n,___aodiv@dividend
  6190  002794  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  6191  002798  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  6192  00279C  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  6193  0027A0  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  6194  0027A4  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  6195  0027A8  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  6196  0027AC  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  6197  0027B0  0E0A               	movlw	10
  6198  0027B2  6E0E               	movwf	___aodiv@divisor^0,c
  6199  0027B4  0E00               	movlw	0
  6200  0027B6  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6201  0027B8  0E00               	movlw	0
  6202  0027BA  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6203  0027BC  0E00               	movlw	0
  6204  0027BE  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6205  0027C0  0E00               	movlw	0
  6206  0027C2  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6207  0027C4  0E00               	movlw	0
  6208  0027C6  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6209  0027C8  0E00               	movlw	0
  6210  0027CA  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6211  0027CC  0E00               	movlw	0
  6212  0027CE  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6213  0027D0  EC05  F018         	call	___aodiv	;wreg free
  6214  0027D4  C006  F03B         	movff	?___aodiv,dtoa@n
  6215  0027D8  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
  6216  0027DC  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
  6217  0027E0  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
  6218  0027E4  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
  6219  0027E8  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
  6220  0027EC  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
  6221  0027F0  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
  6222  0027F4                     l7525:
  6223                           
  6224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6225  0027F4  BE44               	btfsc	(dtoa@i+1)^0,7,c
  6226  0027F6  EF05  F014         	goto	u8891
  6227  0027FA  5044               	movf	(dtoa@i+1)^0,w,c
  6228  0027FC  E108               	bnz	u8890
  6229  0027FE  0443               	decf	dtoa@i^0,w,c
  6230  002800  A0D8               	btfss	status,0,c
  6231  002802  EF05  F014         	goto	u8891
  6232  002806  EF07  F014         	goto	u8890
  6233  00280A                     u8891:
  6234  00280A  EF37  F014         	goto	l7535
  6235  00280E                     u8890:
  6236  00280E  503B               	movf	dtoa@n^0,w,c
  6237  002810  103C               	iorwf	(dtoa@n+1)^0,w,c
  6238  002812  103D               	iorwf	(dtoa@n+2)^0,w,c
  6239  002814  103E               	iorwf	(dtoa@n+3)^0,w,c
  6240  002816  103F               	iorwf	(dtoa@n+4)^0,w,c
  6241  002818  1040               	iorwf	(dtoa@n+5)^0,w,c
  6242  00281A  1041               	iorwf	(dtoa@n+6)^0,w,c
  6243  00281C  1042               	iorwf	(dtoa@n+7)^0,w,c
  6244  00281E  A4D8               	btfss	status,2,c
  6245  002820  EF14  F014         	goto	u8901
  6246  002824  EF16  F014         	goto	u8900
  6247  002828                     u8901:
  6248  002828  EF7E  F013         	goto	l7515
  6249  00282C                     u8900:
  6250  00282C  BE36               	btfsc	(dtoa@p+1)^0,7,c
  6251  00282E  EF23  F014         	goto	u8910
  6252  002832  5036               	movf	(dtoa@p+1)^0,w,c
  6253  002834  E106               	bnz	u8911
  6254  002836  0435               	decf	dtoa@p^0,w,c
  6255  002838  B0D8               	btfsc	status,0,c
  6256  00283A  EF21  F014         	goto	u8911
  6257  00283E  EF23  F014         	goto	u8910
  6258  002842                     u8911:
  6259  002842  EF7E  F013         	goto	l7515
  6260  002846                     u8910:
  6261  002846  BE38               	btfsc	(dtoa@w+1)^0,7,c
  6262  002848  EF2E  F014         	goto	u8921
  6263  00284C  5038               	movf	(dtoa@w+1)^0,w,c
  6264  00284E  E108               	bnz	u8920
  6265  002850  0437               	decf	dtoa@w^0,w,c
  6266  002852  A0D8               	btfss	status,0,c
  6267  002854  EF2E  F014         	goto	u8921
  6268  002858  EF30  F014         	goto	u8920
  6269  00285C                     u8921:
  6270  00285C  EF37  F014         	goto	l7535
  6271  002860                     u8920:
  6272  002860  B257               	btfsc	_flags^0,1,c
  6273  002862  EF35  F014         	goto	u8931
  6274  002866  EF37  F014         	goto	u8930
  6275  00286A                     u8931:
  6276  00286A  EF7E  F013         	goto	l7515
  6277  00286E                     u8930:
  6278  00286E                     l7535:
  6279                           
  6280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6281  00286E  5039               	movf	dtoa@s^0,w,c
  6282  002870  103A               	iorwf	(dtoa@s+1)^0,w,c
  6283  002872  A4D8               	btfss	status,2,c
  6284  002874  EF3E  F014         	goto	u8941
  6285  002878  EF40  F014         	goto	u8940
  6286  00287C                     u8941:
  6287  00287C  EF47  F014         	goto	l7539
  6288  002880                     u8940:
  6289  002880  A457               	btfss	_flags^0,2,c
  6290  002882  EF45  F014         	goto	u8951
  6291  002886  EF47  F014         	goto	u8950
  6292  00288A                     u8951:
  6293  00288A  EF65  F014         	goto	l7549
  6294  00288E                     u8950:
  6295  00288E                     l7539:
  6296                           
  6297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6298  00288E  0643               	decf	dtoa@i^0,f,c
  6299  002890  A0D8               	btfss	status,0,c
  6300  002892  0644               	decf	(dtoa@i+1)^0,f,c
  6301  002894                     
  6302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6303  002894  5039               	movf	dtoa@s^0,w,c
  6304  002896  103A               	iorwf	(dtoa@s+1)^0,w,c
  6305  002898  A4D8               	btfss	status,2,c
  6306  00289A  EF51  F014         	goto	u8961
  6307  00289E  EF53  F014         	goto	u8960
  6308  0028A2                     u8961:
  6309  0028A2  EF59  F014         	goto	l7545
  6310  0028A6                     u8960:
  6311  0028A6  0E00               	movlw	0
  6312  0028A8  6E34               	movwf	(_dtoa$791+1)^0,c
  6313  0028AA  0E2B               	movlw	43
  6314  0028AC  6E33               	movwf	_dtoa$791^0,c
  6315  0028AE  EF5D  F014         	goto	l7547
  6316  0028B2                     l7545:
  6317  0028B2  0E00               	movlw	0
  6318  0028B4  6E34               	movwf	(_dtoa$791+1)^0,c
  6319  0028B6  0E2D               	movlw	45
  6320  0028B8  6E33               	movwf	_dtoa$791^0,c
  6321  0028BA                     l7547:
  6322  0028BA  0E3B               	movlw	low _dbuf
  6323  0028BC  2443               	addwf	dtoa@i^0,w,c
  6324  0028BE  6ED9               	movwf	fsr2l,c
  6325  0028C0  0E01               	movlw	high _dbuf
  6326  0028C2  2044               	addwfc	(dtoa@i+1)^0,w,c
  6327  0028C4  6EDA               	movwf	fsr2h,c
  6328  0028C6  C033  FFDF         	movff	_dtoa$791,indf2
  6329  0028CA                     l7549:
  6330                           
  6331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6332  0028CA  C021  F016         	movff	dtoa@fp,pad@fp
  6333  0028CE  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  6334  0028D2  0E3B               	movlw	low _dbuf
  6335  0028D4  2443               	addwf	dtoa@i^0,w,c
  6336  0028D6  6E18               	movwf	pad@buf^0,c
  6337  0028D8  0E01               	movlw	high _dbuf
  6338  0028DA  2044               	addwfc	(dtoa@i+1)^0,w,c
  6339  0028DC  6E19               	movwf	(pad@buf+1)^0,c
  6340  0028DE  C037  F01A         	movff	dtoa@w,pad@p
  6341  0028E2  C038  F01B         	movff	dtoa@w+1,pad@p+1
  6342  0028E6  EC9A  F01E         	call	_pad	;wreg free
  6343  0028EA  C016  F021         	movff	?_pad,?_dtoa
  6344  0028EE  C017  F022         	movff	?_pad+1,?_dtoa+1
  6345  0028F2  0012               	return		;funcret
  6346  0028F4                     __end_of_dtoa:
  6347                           	opt callstack 0
  6348                           
  6349 ;; *************** function _pad *****************
  6350 ;; Defined at:
  6351 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  6354 ;;		 -> sprintf@f(6), 
  6355 ;;  buf             2   23[COMRAM] PTR unsigned char 
  6356 ;;		 -> dbuf(80), 
  6357 ;;  p               2   25[COMRAM] int 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  w               2   30[COMRAM] int 
  6360 ;;  i               2   28[COMRAM] int 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  2   21[COMRAM] int 
  6363 ;; Registers used:
  6364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6370 ;;      Params:         6       0       0       0       0       0       0       0       0
  6371 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6372 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6373 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6374 ;;Total ram usage:       11 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    5
  6377 ;; This function calls:
  6378 ;;		_fputc
  6379 ;;		_fputs
  6380 ;;		_strlen
  6381 ;; This function is called by:
  6382 ;;		_dtoa
  6383 ;;		_efgtoa
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text20
  6388  003D34                     __ptext20:
  6389                           	opt callstack 0
  6390  003D34                     _pad:
  6391                           	opt callstack 20
  6392  003D34                     
  6393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6394  003D34  A057               	btfss	_flags^0,0,c
  6395  003D36  EF9F  F01E         	goto	u7681
  6396  003D3A  EFA1  F01E         	goto	u7680
  6397  003D3E                     u7681:
  6398  003D3E  EFAB  F01E         	goto	l6859
  6399  003D42                     u7680:
  6400  003D42                     
  6401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6402  003D42  C018  F00F         	movff	pad@buf,fputs@s
  6403  003D46  C019  F010         	movff	pad@buf+1,fputs@s+1
  6404  003D4A  C016  F011         	movff	pad@fp,fputs@fp
  6405  003D4E  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6406  003D52  EC1A  F023         	call	_fputs	;wreg free
  6407  003D56                     l6859:
  6408                           
  6409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6410  003D56  BE1B               	btfsc	(pad@p+1)^0,7,c
  6411  003D58  EFB0  F01E         	goto	u7691
  6412  003D5C  EFB2  F01E         	goto	u7690
  6413  003D60                     u7691:
  6414  003D60  EFB8  F01E         	goto	l6863
  6415  003D64                     u7690:
  6416  003D64  C01A  F01F         	movff	pad@p,pad@w
  6417  003D68  C01B  F020         	movff	pad@p+1,pad@w+1
  6418  003D6C  EFBC  F01E         	goto	l616
  6419  003D70                     l6863:
  6420  003D70  0E00               	movlw	0
  6421  003D72  6E20               	movwf	(pad@w+1)^0,c
  6422  003D74  0E00               	movlw	0
  6423  003D76  6E1F               	movwf	pad@w^0,c
  6424  003D78                     l616:
  6425                           
  6426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6427  003D78  0E00               	movlw	0
  6428  003D7A  6E1E               	movwf	(pad@i+1)^0,c
  6429  003D7C  0E00               	movlw	0
  6430  003D7E  6E1D               	movwf	pad@i^0,c
  6431                           
  6432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6433  003D80  EFCE  F01E         	goto	l6869
  6434  003D84                     l6865:
  6435                           
  6436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6437  003D84  0E00               	movlw	0
  6438  003D86  6E07               	movwf	(fputc@c+1)^0,c
  6439  003D88  0E20               	movlw	32
  6440  003D8A  6E06               	movwf	fputc@c^0,c
  6441  003D8C  C016  F008         	movff	pad@fp,fputc@fp
  6442  003D90  C017  F009         	movff	pad@fp+1,fputc@fp+1
  6443  003D94  ECD3  F01D         	call	_fputc	;wreg free
  6444  003D98                     
  6445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6446  003D98  4A1D               	infsnz	pad@i^0,f,c
  6447  003D9A  2A1E               	incf	(pad@i+1)^0,f,c
  6448  003D9C                     l6869:
  6449                           
  6450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6451  003D9C  501F               	movf	pad@w^0,w,c
  6452  003D9E  5C1D               	subwf	pad@i^0,w,c
  6453  003DA0  501E               	movf	(pad@i+1)^0,w,c
  6454  003DA2  0A80               	xorlw	128
  6455  003DA4  6E1C               	movwf	??_pad^0,c
  6456  003DA6  5020               	movf	(pad@w+1)^0,w,c
  6457  003DA8  0A80               	xorlw	128
  6458  003DAA  581C               	subwfb	??_pad^0,w,c
  6459  003DAC  A0D8               	btfss	status,0,c
  6460  003DAE  EFDB  F01E         	goto	u7701
  6461  003DB2  EFDD  F01E         	goto	u7700
  6462  003DB6                     u7701:
  6463  003DB6  EFC2  F01E         	goto	l6865
  6464  003DBA                     u7700:
  6465  003DBA                     
  6466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6467  003DBA  B057               	btfsc	_flags^0,0,c
  6468  003DBC  EFE2  F01E         	goto	u7711
  6469  003DC0  EFE4  F01E         	goto	u7710
  6470  003DC4                     u7711:
  6471  003DC4  EFEE  F01E         	goto	l6873
  6472  003DC8                     u7710:
  6473  003DC8                     
  6474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6475  003DC8  C018  F00F         	movff	pad@buf,fputs@s
  6476  003DCC  C019  F010         	movff	pad@buf+1,fputs@s+1
  6477  003DD0  C016  F011         	movff	pad@fp,fputs@fp
  6478  003DD4  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6479  003DD8  EC1A  F023         	call	_fputs	;wreg free
  6480  003DDC                     l6873:
  6481                           
  6482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6483  003DDC  C018  F006         	movff	pad@buf,strlen@s
  6484  003DE0  C019  F007         	movff	pad@buf+1,strlen@s+1
  6485  003DE4  ECCE  F023         	call	_strlen	;wreg free
  6486  003DE8  501F               	movf	pad@w^0,w,c
  6487  003DEA  2406               	addwf	?_strlen^0,w,c
  6488  003DEC  6E16               	movwf	?_pad^0,c
  6489  003DEE  5020               	movf	(pad@w+1)^0,w,c
  6490  003DF0  2007               	addwfc	(?_strlen+1)^0,w,c
  6491  003DF2  6E17               	movwf	(?_pad+1)^0,c
  6492  003DF4  0012               	return		;funcret
  6493  003DF6                     __end_of_pad:
  6494                           	opt callstack 0
  6495                           
  6496 ;; *************** function _strlen *****************
  6497 ;; Defined at:
  6498 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  s               2    5[COMRAM] PTR const unsigned char 
  6501 ;;		 -> dbuf(80), 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  a               2    7[COMRAM] PTR const unsigned char 
  6504 ;;		 -> dbuf(80), 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  2    5[COMRAM] unsigned int 
  6507 ;; Registers used:
  6508 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6514 ;;      Params:         2       0       0       0       0       0       0       0       0
  6515 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6517 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6518 ;;Total ram usage:        4 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    2
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_pad
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text21
  6529  00479C                     __ptext21:
  6530                           	opt callstack 0
  6531  00479C                     _strlen:
  6532                           	opt callstack 22
  6533  00479C  C006  F008         	movff	strlen@s,strlen@a
  6534  0047A0  C007  F009         	movff	strlen@s+1,strlen@a+1
  6535  0047A4  EFD6  F023         	goto	l6643
  6536  0047A8                     l6641:
  6537  0047A8  4A06               	infsnz	strlen@s^0,f,c
  6538  0047AA  2A07               	incf	(strlen@s+1)^0,f,c
  6539  0047AC                     l6643:
  6540  0047AC  C006  FFD9         	movff	strlen@s,fsr2l
  6541  0047B0  C007  FFDA         	movff	strlen@s+1,fsr2h
  6542  0047B4  50DF               	movf	indf2,w,c
  6543  0047B6  A4D8               	btfss	status,2,c
  6544  0047B8  EFE0  F023         	goto	u7261
  6545  0047BC  EFE2  F023         	goto	u7260
  6546  0047C0                     u7261:
  6547  0047C0  EFD4  F023         	goto	l6641
  6548  0047C4                     u7260:
  6549  0047C4  5008               	movf	strlen@a^0,w,c
  6550  0047C6  5C06               	subwf	strlen@s^0,w,c
  6551  0047C8  6E06               	movwf	?_strlen^0,c
  6552  0047CA  5009               	movf	(strlen@a+1)^0,w,c
  6553  0047CC  5807               	subwfb	(strlen@s+1)^0,w,c
  6554  0047CE  6E07               	movwf	(?_strlen+1)^0,c
  6555  0047D0  0012               	return		;funcret
  6556  0047D2                     __end_of_strlen:
  6557                           	opt callstack 0
  6558                           
  6559 ;; *************** function _fputs *****************
  6560 ;; Defined at:
  6561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6564 ;;		 -> dbuf(80), 
  6565 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6566 ;;		 -> sprintf@f(6), 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  i               2   19[COMRAM] int 
  6569 ;;  c               1   18[COMRAM] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  2   14[COMRAM] int 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6579 ;;      Params:         4       0       0       0       0       0       0       0       0
  6580 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6582 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6583 ;;Total ram usage:        7 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    4
  6586 ;; This function calls:
  6587 ;;		_fputc
  6588 ;; This function is called by:
  6589 ;;		_pad
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text22
  6594  004634                     __ptext22:
  6595                           	opt callstack 0
  6596  004634                     _fputs:
  6597                           	opt callstack 20
  6598  004634  0E00               	movlw	0
  6599  004636  6E15               	movwf	(fputs@i+1)^0,c
  6600  004638  0E00               	movlw	0
  6601  00463A  6E14               	movwf	fputs@i^0,c
  6602  00463C  EF2B  F023         	goto	l6637
  6603  004640                     l6633:
  6604  004640  C013  F006         	movff	fputs@c,fputc@c
  6605  004644  6A07               	clrf	(fputc@c+1)^0,c
  6606  004646  C011  F008         	movff	fputs@fp,fputc@fp
  6607  00464A  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  6608  00464E  ECD3  F01D         	call	_fputc	;wreg free
  6609  004652  4A14               	infsnz	fputs@i^0,f,c
  6610  004654  2A15               	incf	(fputs@i+1)^0,f,c
  6611  004656                     l6637:
  6612  004656  5014               	movf	fputs@i^0,w,c
  6613  004658  240F               	addwf	fputs@s^0,w,c
  6614  00465A  6ED9               	movwf	fsr2l,c
  6615  00465C  5015               	movf	(fputs@i+1)^0,w,c
  6616  00465E  2010               	addwfc	(fputs@s+1)^0,w,c
  6617  004660  6EDA               	movwf	fsr2h,c
  6618  004662  50DF               	movf	indf2,w,c
  6619  004664  6E13               	movwf	fputs@c^0,c
  6620  004666  5013               	movf	fputs@c^0,w,c
  6621  004668  A4D8               	btfss	status,2,c
  6622  00466A  EF39  F023         	goto	u7251
  6623  00466E  EF3B  F023         	goto	u7250
  6624  004672                     u7251:
  6625  004672  EF20  F023         	goto	l6633
  6626  004676                     u7250:
  6627  004676  0012               	return		;funcret
  6628  004678                     __end_of_fputs:
  6629                           	opt callstack 0
  6630                           
  6631 ;; *************** function _fputc *****************
  6632 ;; Defined at:
  6633 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  c               2    5[COMRAM] int 
  6636 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  6637 ;;		 -> sprintf@f(6), 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  2    5[COMRAM] int 
  6642 ;; Registers used:
  6643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6649 ;;      Params:         4       0       0       0       0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6651 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6652 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6653 ;;Total ram usage:        9 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    3
  6656 ;; This function calls:
  6657 ;;		_putch
  6658 ;; This function is called by:
  6659 ;;		_pad
  6660 ;;		_vfpfcnvrt
  6661 ;;		_fputs
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text23
  6666  003BA6                     __ptext23:
  6667                           	opt callstack 0
  6668  003BA6                     _fputc:
  6669                           	opt callstack 23
  6670  003BA6  5008               	movf	fputc@fp^0,w,c
  6671  003BA8  1009               	iorwf	(fputc@fp+1)^0,w,c
  6672  003BAA  B4D8               	btfsc	status,2,c
  6673  003BAC  EFDA  F01D         	goto	u7211
  6674  003BB0  EFDC  F01D         	goto	u7210
  6675  003BB4                     u7211:
  6676  003BB4  EFE5  F01D         	goto	l6621
  6677  003BB8                     u7210:
  6678  003BB8  5008               	movf	fputc@fp^0,w,c
  6679  003BBA  1009               	iorwf	(fputc@fp+1)^0,w,c
  6680  003BBC  A4D8               	btfss	status,2,c
  6681  003BBE  EFE3  F01D         	goto	u7221
  6682  003BC2  EFE5  F01D         	goto	u7220
  6683  003BC6                     u7221:
  6684  003BC6  EFEA  F01D         	goto	l6623
  6685  003BCA                     u7220:
  6686  003BCA                     l6621:
  6687  003BCA  5006               	movf	fputc@c^0,w,c
  6688  003BCC  EC1F  F024         	call	_putch
  6689  003BD0  EF37  F01E         	goto	l1540
  6690  003BD4                     l6623:
  6691  003BD4  EE20 F004          	lfsr	2,4
  6692  003BD8  5008               	movf	fputc@fp^0,w,c
  6693  003BDA  26D9               	addwf	fsr2l,f,c
  6694  003BDC  5009               	movf	(fputc@fp+1)^0,w,c
  6695  003BDE  22DA               	addwfc	fsr2h,f,c
  6696  003BE0  50DE               	movf	postinc2,w,c
  6697  003BE2  10DE               	iorwf	postinc2,w,c
  6698  003BE4  B4D8               	btfsc	status,2,c
  6699  003BE6  EFF7  F01D         	goto	u7231
  6700  003BEA  EFF9  F01D         	goto	u7230
  6701  003BEE                     u7231:
  6702  003BEE  EF14  F01E         	goto	l6627
  6703  003BF2                     u7230:
  6704  003BF2  EE20 F004          	lfsr	2,4
  6705  003BF6  5008               	movf	fputc@fp^0,w,c
  6706  003BF8  26D9               	addwf	fsr2l,f,c
  6707  003BFA  5009               	movf	(fputc@fp+1)^0,w,c
  6708  003BFC  22DA               	addwfc	fsr2h,f,c
  6709  003BFE  EE10 F002          	lfsr	1,2
  6710  003C02  5008               	movf	fputc@fp^0,w,c
  6711  003C04  26E1               	addwf	fsr1l,f,c
  6712  003C06  5009               	movf	(fputc@fp+1)^0,w,c
  6713  003C08  22E2               	addwfc	fsr1h,f,c
  6714  003C0A  50DE               	movf	postinc2,w,c
  6715  003C0C  5CE6               	subwf	postinc1,w,c
  6716  003C0E  50E6               	movf	postinc1,w,c
  6717  003C10  0A80               	xorlw	128
  6718  003C12  6E0E               	movwf	(??_fputc+4)^0,c
  6719  003C14  50DE               	movf	postinc2,w,c
  6720  003C16  0A80               	xorlw	128
  6721  003C18  580E               	subwfb	(??_fputc+4)^0,w,c
  6722  003C1A  B0D8               	btfsc	status,0,c
  6723  003C1C  EF12  F01E         	goto	u7241
  6724  003C20  EF14  F01E         	goto	u7240
  6725  003C24                     u7241:
  6726  003C24  EF37  F01E         	goto	l1540
  6727  003C28                     u7240:
  6728  003C28                     l6627:
  6729  003C28  EE20 F002          	lfsr	2,2
  6730  003C2C  5008               	movf	fputc@fp^0,w,c
  6731  003C2E  26D9               	addwf	fsr2l,f,c
  6732  003C30  5009               	movf	(fputc@fp+1)^0,w,c
  6733  003C32  22DA               	addwfc	fsr2h,f,c
  6734  003C34  CFDE F00A          	movff	postinc2,??_fputc
  6735  003C38  CFDD F00B          	movff	postdec2,??_fputc+1
  6736  003C3C  C008  FFD9         	movff	fputc@fp,fsr2l
  6737  003C40  C009  FFDA         	movff	fputc@fp+1,fsr2h
  6738  003C44  CFDE F00C          	movff	postinc2,??_fputc+2
  6739  003C48  CFDD F00D          	movff	postdec2,??_fputc+3
  6740  003C4C  500A               	movf	??_fputc^0,w,c
  6741  003C4E  240C               	addwf	(??_fputc+2)^0,w,c
  6742  003C50  6ED9               	movwf	fsr2l,c
  6743  003C52  500B               	movf	(??_fputc+1)^0,w,c
  6744  003C54  200D               	addwfc	(??_fputc+3)^0,w,c
  6745  003C56  6EDA               	movwf	fsr2h,c
  6746  003C58  C006  FFDF         	movff	fputc@c,indf2
  6747  003C5C  EE20 F002          	lfsr	2,2
  6748  003C60  5008               	movf	fputc@fp^0,w,c
  6749  003C62  26D9               	addwf	fsr2l,f,c
  6750  003C64  5009               	movf	(fputc@fp+1)^0,w,c
  6751  003C66  22DA               	addwfc	fsr2h,f,c
  6752  003C68  2ADE               	incf	postinc2,f,c
  6753  003C6A  0E00               	movlw	0
  6754  003C6C  22DD               	addwfc	postdec2,f,c
  6755  003C6E                     l1540:
  6756  003C6E  0012               	return		;funcret
  6757  003C70                     __end_of_fputc:
  6758                           	opt callstack 0
  6759                           
  6760 ;; *************** function _putch *****************
  6761 ;; Defined at:
  6762 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;  c               1    wreg     unsigned char 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  c               1    0[COMRAM] unsigned char 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6776 ;;      Params:         0       0       0       0       0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6779 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6780 ;;Total ram usage:        0 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:    2
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_fputc
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text24
  6791  00483E                     __ptext24:
  6792                           	opt callstack 0
  6793  00483E                     _putch:
  6794                           	opt callstack 23
  6795  00483E  0012               	return		;funcret
  6796  004840                     __end_of_putch:
  6797                           	opt callstack 0
  6798                           
  6799 ;; *************** function _abs *****************
  6800 ;; Defined at:
  6801 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  a               2   23[COMRAM] int 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;		None
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  2   23[COMRAM] int 
  6808 ;; Registers used:
  6809 ;;		wreg, status,2, status,0
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6815 ;;      Params:         2       0       0       0       0       0       0       0       0
  6816 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6817 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6818 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6819 ;;Total ram usage:        4 bytes
  6820 ;; Hardware stack levels used:    1
  6821 ;; Hardware stack levels required when called:    2
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_dtoa
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text25
  6830  004678                     __ptext25:
  6831                           	opt callstack 0
  6832  004678                     _abs:
  6833                           	opt callstack 23
  6834  004678  BE19               	btfsc	(abs@a+1)^0,7,c
  6835  00467A  EF49  F023         	goto	u7720
  6836  00467E  5019               	movf	(abs@a+1)^0,w,c
  6837  004680  E106               	bnz	u7721
  6838  004682  0418               	decf	abs@a^0,w,c
  6839  004684  B0D8               	btfsc	status,0,c
  6840  004686  EF47  F023         	goto	u7721
  6841  00468A  EF49  F023         	goto	u7720
  6842  00468E                     u7721:
  6843  00468E  EF57  F023         	goto	l1461
  6844  004692                     u7720:
  6845  004692  C018  F01A         	movff	abs@a,??_abs
  6846  004696  C019  F01B         	movff	abs@a+1,??_abs+1
  6847  00469A  1E1A               	comf	??_abs^0,f,c
  6848  00469C  1E1B               	comf	(??_abs+1)^0,f,c
  6849  00469E  4A1A               	infsnz	??_abs^0,f,c
  6850  0046A0  2A1B               	incf	(??_abs+1)^0,f,c
  6851  0046A2  C01A  F018         	movff	??_abs,?_abs
  6852  0046A6  C01B  F019         	movff	??_abs+1,?_abs+1
  6853  0046AA  EF5B  F023         	goto	l1464
  6854  0046AE                     l1461:
  6855  0046AE  C018  F018         	movff	abs@a,?_abs
  6856  0046B2  C019  F019         	movff	abs@a+1,?_abs+1
  6857  0046B6                     l1464:
  6858  0046B6  0012               	return		;funcret
  6859  0046B8                     __end_of_abs:
  6860                           	opt callstack 0
  6861                           
  6862 ;; *************** function ___aomod *****************
  6863 ;; Defined at:
  6864 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  dividend        8    5[COMRAM] long long 
  6867 ;;  divisor         8   13[COMRAM] long long 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  sign            1   22[COMRAM] unsigned char 
  6870 ;;  counter         1   21[COMRAM] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  8    5[COMRAM] long long 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6880 ;;      Params:        16       0       0       0       0       0       0       0       0
  6881 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6883 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6884 ;;Total ram usage:       18 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    2
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_dtoa
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text26
  6895  00330E                     __ptext26:
  6896                           	opt callstack 0
  6897  00330E                     ___aomod:
  6898                           	opt callstack 23
  6899  00330E  0E00               	movlw	0
  6900  003310  6E17               	movwf	___aomod@sign^0,c
  6901  003312  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  6902  003314  EF90  F019         	goto	u8040
  6903  003318  EF8E  F019         	goto	u8041
  6904  00331C                     u8041:
  6905  00331C  EFA2  F019         	goto	l7007
  6906  003320                     u8040:
  6907  003320  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  6908  003322  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  6909  003324  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  6910  003326  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  6911  003328  1E09               	comf	(___aomod@dividend+3)^0,f,c
  6912  00332A  1E08               	comf	(___aomod@dividend+2)^0,f,c
  6913  00332C  1E07               	comf	(___aomod@dividend+1)^0,f,c
  6914  00332E  6C06               	negf	___aomod@dividend^0,c
  6915  003330  0E00               	movlw	0
  6916  003332  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  6917  003334  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  6918  003336  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  6919  003338  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  6920  00333A  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  6921  00333C  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  6922  00333E  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  6923  003340  0E01               	movlw	1
  6924  003342  6E17               	movwf	___aomod@sign^0,c
  6925  003344                     l7007:
  6926  003344  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  6927  003346  EFA9  F019         	goto	u8050
  6928  00334A  EFA7  F019         	goto	u8051
  6929  00334E                     u8051:
  6930  00334E  EFB9  F019         	goto	l7011
  6931  003352                     u8050:
  6932  003352  1E15               	comf	(___aomod@divisor+7)^0,f,c
  6933  003354  1E14               	comf	(___aomod@divisor+6)^0,f,c
  6934  003356  1E13               	comf	(___aomod@divisor+5)^0,f,c
  6935  003358  1E12               	comf	(___aomod@divisor+4)^0,f,c
  6936  00335A  1E11               	comf	(___aomod@divisor+3)^0,f,c
  6937  00335C  1E10               	comf	(___aomod@divisor+2)^0,f,c
  6938  00335E  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  6939  003360  6C0E               	negf	___aomod@divisor^0,c
  6940  003362  0E00               	movlw	0
  6941  003364  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  6942  003366  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  6943  003368  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  6944  00336A  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  6945  00336C  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  6946  00336E  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  6947  003370  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  6948  003372                     l7011:
  6949  003372  500E               	movf	___aomod@divisor^0,w,c
  6950  003374  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  6951  003376  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  6952  003378  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  6953  00337A  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  6954  00337C  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  6955  00337E  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  6956  003380  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  6957  003382  B4D8               	btfsc	status,2,c
  6958  003384  EFC6  F019         	goto	u8061
  6959  003388  EFC8  F019         	goto	u8060
  6960  00338C                     u8061:
  6961  00338C  EF10  F01A         	goto	l7027
  6962  003390                     u8060:
  6963  003390  0E01               	movlw	1
  6964  003392  6E16               	movwf	___aomod@counter^0,c
  6965  003394  EFD6  F019         	goto	l7017
  6966  003398                     l7015:
  6967  003398  90D8               	bcf	status,0,c
  6968  00339A  360E               	rlcf	___aomod@divisor^0,f,c
  6969  00339C  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  6970  00339E  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  6971  0033A0  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  6972  0033A2  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  6973  0033A4  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  6974  0033A6  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  6975  0033A8  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  6976  0033AA  2A16               	incf	___aomod@counter^0,f,c
  6977  0033AC                     l7017:
  6978  0033AC  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  6979  0033AE  EFDB  F019         	goto	u8071
  6980  0033B2  EFDD  F019         	goto	u8070
  6981  0033B6                     u8071:
  6982  0033B6  EFCC  F019         	goto	l7015
  6983  0033BA                     u8070:
  6984  0033BA                     l7019:
  6985  0033BA  500E               	movf	___aomod@divisor^0,w,c
  6986  0033BC  5C06               	subwf	___aomod@dividend^0,w,c
  6987  0033BE  500F               	movf	(___aomod@divisor+1)^0,w,c
  6988  0033C0  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  6989  0033C2  5010               	movf	(___aomod@divisor+2)^0,w,c
  6990  0033C4  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  6991  0033C6  5011               	movf	(___aomod@divisor+3)^0,w,c
  6992  0033C8  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  6993  0033CA  5012               	movf	(___aomod@divisor+4)^0,w,c
  6994  0033CC  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  6995  0033CE  5013               	movf	(___aomod@divisor+5)^0,w,c
  6996  0033D0  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  6997  0033D2  5014               	movf	(___aomod@divisor+6)^0,w,c
  6998  0033D4  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  6999  0033D6  5015               	movf	(___aomod@divisor+7)^0,w,c
  7000  0033D8  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7001  0033DA  A0D8               	btfss	status,0,c
  7002  0033DC  EFF2  F019         	goto	u8081
  7003  0033E0  EFF4  F019         	goto	u8080
  7004  0033E4                     u8081:
  7005  0033E4  EF04  F01A         	goto	l7023
  7006  0033E8                     u8080:
  7007  0033E8  500E               	movf	___aomod@divisor^0,w,c
  7008  0033EA  5E06               	subwf	___aomod@dividend^0,f,c
  7009  0033EC  500F               	movf	(___aomod@divisor+1)^0,w,c
  7010  0033EE  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7011  0033F0  5010               	movf	(___aomod@divisor+2)^0,w,c
  7012  0033F2  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7013  0033F4  5011               	movf	(___aomod@divisor+3)^0,w,c
  7014  0033F6  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7015  0033F8  5012               	movf	(___aomod@divisor+4)^0,w,c
  7016  0033FA  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7017  0033FC  5013               	movf	(___aomod@divisor+5)^0,w,c
  7018  0033FE  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7019  003400  5014               	movf	(___aomod@divisor+6)^0,w,c
  7020  003402  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7021  003404  5015               	movf	(___aomod@divisor+7)^0,w,c
  7022  003406  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7023  003408                     l7023:
  7024  003408  90D8               	bcf	status,0,c
  7025  00340A  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7026  00340C  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7027  00340E  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7028  003410  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7029  003412  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7030  003414  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7031  003416  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7032  003418  320E               	rrcf	___aomod@divisor^0,f,c
  7033  00341A  2E16               	decfsz	___aomod@counter^0,f,c
  7034  00341C  EFDD  F019         	goto	l7019
  7035  003420                     l7027:
  7036  003420  5017               	movf	___aomod@sign^0,w,c
  7037  003422  B4D8               	btfsc	status,2,c
  7038  003424  EF16  F01A         	goto	u8091
  7039  003428  EF18  F01A         	goto	u8090
  7040  00342C                     u8091:
  7041  00342C  EF28  F01A         	goto	l7031
  7042  003430                     u8090:
  7043  003430  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7044  003432  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7045  003434  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7046  003436  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7047  003438  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7048  00343A  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7049  00343C  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7050  00343E  6C06               	negf	___aomod@dividend^0,c
  7051  003440  0E00               	movlw	0
  7052  003442  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7053  003444  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7054  003446  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7055  003448  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7056  00344A  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7057  00344C  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7058  00344E  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7059  003450                     l7031:
  7060  003450  C006  F006         	movff	___aomod@dividend,?___aomod
  7061  003454  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  7062  003458  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  7063  00345C  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  7064  003460  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  7065  003464  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  7066  003468  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  7067  00346C  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  7068  003470  0012               	return		;funcret
  7069  003472                     __end_of___aomod:
  7070                           	opt callstack 0
  7071                           
  7072 ;; *************** function ___aodiv *****************
  7073 ;; Defined at:
  7074 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  dividend        8    5[COMRAM] long long 
  7077 ;;  divisor         8   13[COMRAM] long long 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  quotient        8   23[COMRAM] long long 
  7080 ;;  sign            1   22[COMRAM] unsigned char 
  7081 ;;  counter         1   21[COMRAM] unsigned char 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  8    5[COMRAM] long long 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7091 ;;      Params:        16       0       0       0       0       0       0       0       0
  7092 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7094 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7095 ;;Total ram usage:       26 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    2
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_dtoa
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text27
  7106  00300A                     __ptext27:
  7107                           	opt callstack 0
  7108  00300A                     ___aodiv:
  7109                           	opt callstack 23
  7110  00300A  0E00               	movlw	0
  7111  00300C  6E17               	movwf	___aodiv@sign^0,c
  7112  00300E  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  7113  003010  EF0E  F018         	goto	u7970
  7114  003014  EF0C  F018         	goto	u7971
  7115  003018                     u7971:
  7116  003018  EF20  F018         	goto	l6963
  7117  00301C                     u7970:
  7118  00301C  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7119  00301E  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7120  003020  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7121  003022  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7122  003024  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7123  003026  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7124  003028  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7125  00302A  6C0E               	negf	___aodiv@divisor^0,c
  7126  00302C  0E00               	movlw	0
  7127  00302E  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7128  003030  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7129  003032  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7130  003034  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7131  003036  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7132  003038  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7133  00303A  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7134  00303C  0E01               	movlw	1
  7135  00303E  6E17               	movwf	___aodiv@sign^0,c
  7136  003040                     l6963:
  7137  003040  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  7138  003042  EF27  F018         	goto	u7980
  7139  003046  EF25  F018         	goto	u7981
  7140  00304A                     u7981:
  7141  00304A  EF39  F018         	goto	l6969
  7142  00304E                     u7980:
  7143  00304E  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7144  003050  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7145  003052  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7146  003054  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7147  003056  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7148  003058  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7149  00305A  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7150  00305C  6C06               	negf	___aodiv@dividend^0,c
  7151  00305E  0E00               	movlw	0
  7152  003060  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7153  003062  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7154  003064  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7155  003066  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7156  003068  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7157  00306A  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7158  00306C  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7159  00306E  0E01               	movlw	1
  7160  003070  1A17               	xorwf	___aodiv@sign^0,f,c
  7161  003072                     l6969:
  7162  003072  EE20  F018         	lfsr	2,___aodiv@quotient
  7163  003076  0E07               	movlw	7
  7164  003078                     u7991:
  7165  003078  6ADE               	clrf	postinc2,c
  7166  00307A  06E8               	decf	wreg,f,c
  7167  00307C  E2FD               	bc	u7991
  7168  00307E  500E               	movf	___aodiv@divisor^0,w,c
  7169  003080  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7170  003082  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7171  003084  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7172  003086  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7173  003088  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7174  00308A  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7175  00308C  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7176  00308E  B4D8               	btfsc	status,2,c
  7177  003090  EF4C  F018         	goto	u8001
  7178  003094  EF4E  F018         	goto	u8000
  7179  003098                     u8001:
  7180  003098  EFA0  F018         	goto	l6991
  7181  00309C                     u8000:
  7182  00309C  0E01               	movlw	1
  7183  00309E  6E16               	movwf	___aodiv@counter^0,c
  7184  0030A0  EF5C  F018         	goto	l6977
  7185  0030A4                     l6975:
  7186  0030A4  90D8               	bcf	status,0,c
  7187  0030A6  360E               	rlcf	___aodiv@divisor^0,f,c
  7188  0030A8  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7189  0030AA  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7190  0030AC  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7191  0030AE  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7192  0030B0  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7193  0030B2  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7194  0030B4  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7195  0030B6  2A16               	incf	___aodiv@counter^0,f,c
  7196  0030B8                     l6977:
  7197  0030B8  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7198  0030BA  EF61  F018         	goto	u8011
  7199  0030BE  EF63  F018         	goto	u8010
  7200  0030C2                     u8011:
  7201  0030C2  EF52  F018         	goto	l6975
  7202  0030C6                     u8010:
  7203  0030C6                     l6979:
  7204  0030C6  90D8               	bcf	status,0,c
  7205  0030C8  3618               	rlcf	___aodiv@quotient^0,f,c
  7206  0030CA  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7207  0030CC  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7208  0030CE  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7209  0030D0  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7210  0030D2  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7211  0030D4  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7212  0030D6  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7213  0030D8  500E               	movf	___aodiv@divisor^0,w,c
  7214  0030DA  5C06               	subwf	___aodiv@dividend^0,w,c
  7215  0030DC  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7216  0030DE  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7217  0030E0  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7218  0030E2  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7219  0030E4  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7220  0030E6  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7221  0030E8  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7222  0030EA  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7223  0030EC  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7224  0030EE  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7225  0030F0  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7226  0030F2  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  7227  0030F4  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7228  0030F6  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  7229  0030F8  A0D8               	btfss	status,0,c
  7230  0030FA  EF81  F018         	goto	u8021
  7231  0030FE  EF83  F018         	goto	u8020
  7232  003102                     u8021:
  7233  003102  EF94  F018         	goto	l6987
  7234  003106                     u8020:
  7235  003106  500E               	movf	___aodiv@divisor^0,w,c
  7236  003108  5E06               	subwf	___aodiv@dividend^0,f,c
  7237  00310A  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7238  00310C  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  7239  00310E  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7240  003110  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  7241  003112  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7242  003114  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  7243  003116  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7244  003118  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  7245  00311A  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7246  00311C  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  7247  00311E  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7248  003120  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  7249  003122  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7250  003124  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  7251  003126  8018               	bsf	___aodiv@quotient^0,0,c
  7252  003128                     l6987:
  7253  003128  90D8               	bcf	status,0,c
  7254  00312A  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  7255  00312C  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  7256  00312E  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  7257  003130  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  7258  003132  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  7259  003134  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  7260  003136  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  7261  003138  320E               	rrcf	___aodiv@divisor^0,f,c
  7262  00313A  2E16               	decfsz	___aodiv@counter^0,f,c
  7263  00313C  EF63  F018         	goto	l6979
  7264  003140                     l6991:
  7265  003140  5017               	movf	___aodiv@sign^0,w,c
  7266  003142  B4D8               	btfsc	status,2,c
  7267  003144  EFA6  F018         	goto	u8031
  7268  003148  EFA8  F018         	goto	u8030
  7269  00314C                     u8031:
  7270  00314C  EFB8  F018         	goto	l6995
  7271  003150                     u8030:
  7272  003150  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  7273  003152  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  7274  003154  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  7275  003156  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  7276  003158  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  7277  00315A  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  7278  00315C  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  7279  00315E  6C18               	negf	___aodiv@quotient^0,c
  7280  003160  0E00               	movlw	0
  7281  003162  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  7282  003164  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  7283  003166  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  7284  003168  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  7285  00316A  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  7286  00316C  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  7287  00316E  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  7288  003170                     l6995:
  7289  003170  C018  F006         	movff	___aodiv@quotient,?___aodiv
  7290  003174  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  7291  003178  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  7292  00317C  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  7293  003180  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  7294  003184  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  7295  003188  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  7296  00318C  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  7297  003190  0012               	return		;funcret
  7298  003192                     __end_of___aodiv:
  7299                           	opt callstack 0
  7300                           
  7301 ;; *************** function _atoi *****************
  7302 ;; Defined at:
  7303 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7306 ;;		 -> STR_6(17), STR_5(19), STR_4(18), STR_3(34), 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  n               2   25[COMRAM] int 
  7309 ;;  neg             2   18[COMRAM] int 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  2   12[COMRAM] int 
  7312 ;; Registers used:
  7313 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7319 ;;      Params:         2       0       0       0       0       0       0       0       0
  7320 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7321 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7322 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7323 ;;Total ram usage:       15 bytes
  7324 ;; Hardware stack levels used:    1
  7325 ;; Hardware stack levels required when called:    3
  7326 ;; This function calls:
  7327 ;;		___wmul
  7328 ;;		_isdigit
  7329 ;;		_isspace
  7330 ;; This function is called by:
  7331 ;;		_vfpfcnvrt
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text28
  7336  002E7A                     __ptext28:
  7337                           	opt callstack 0
  7338  002E7A                     _atoi:
  7339                           	opt callstack 23
  7340  002E7A  0E00               	movlw	0
  7341  002E7C  6E1B               	movwf	(atoi@n+1)^0,c
  7342  002E7E  0E00               	movlw	0
  7343  002E80  6E1A               	movwf	atoi@n^0,c
  7344  002E82  0E00               	movlw	0
  7345  002E84  6E14               	movwf	(atoi@neg+1)^0,c
  7346  002E86  0E00               	movlw	0
  7347  002E88  6E13               	movwf	atoi@neg^0,c
  7348  002E8A  EF49  F017         	goto	l7855
  7349  002E8E                     l7853:
  7350  002E8E  4A0D               	infsnz	atoi@s^0,f,c
  7351  002E90  2A0E               	incf	(atoi@s+1)^0,f,c
  7352  002E92                     l7855:
  7353  002E92  0E01               	movlw	1
  7354  002E94  6E19               	movwf	_atoi$1319^0,c
  7355  002E96  C00D  FFF6         	movff	atoi@s,tblptrl
  7356  002E9A  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7357  002E9E                     	if	0	;tblptru may be non-zero
  7358  002E9E                     	endif
  7359  002E9E                     	if	0	;tblptru may be non-zero
  7360  002E9E                     	endif
  7361  002E9E  0008               	tblrd		*
  7362  002EA0  50F5               	movf	tablat,w,c
  7363  002EA2  0A20               	xorlw	32
  7364  002EA4  B4D8               	btfsc	status,2,c
  7365  002EA6  EF57  F017         	goto	u9491
  7366  002EAA  EF59  F017         	goto	u9490
  7367  002EAE                     u9491:
  7368  002EAE  EF76  F017         	goto	l7863
  7369  002EB2                     u9490:
  7370  002EB2  0EF7               	movlw	247
  7371  002EB4  6E0F               	movwf	??_atoi^0,c
  7372  002EB6  0EFF               	movlw	255
  7373  002EB8  6E10               	movwf	(??_atoi+1)^0,c
  7374  002EBA  C00D  FFF6         	movff	atoi@s,tblptrl
  7375  002EBE  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7376  002EC2                     	if	0	;tblptru may be non-zero
  7377  002EC2                     	endif
  7378  002EC2                     	if	0	;tblptru may be non-zero
  7379  002EC2                     	endif
  7380  002EC2  0008               	tblrd		*
  7381  002EC4  50F5               	movf	tablat,w,c
  7382  002EC6  6E11               	movwf	(??_atoi+2)^0,c
  7383  002EC8  6A12               	clrf	(??_atoi+3)^0,c
  7384  002ECA  500F               	movf	??_atoi^0,w,c
  7385  002ECC  2611               	addwf	(??_atoi+2)^0,f,c
  7386  002ECE  5010               	movf	(??_atoi+1)^0,w,c
  7387  002ED0  2212               	addwfc	(??_atoi+3)^0,f,c
  7388  002ED2  5012               	movf	(??_atoi+3)^0,w,c
  7389  002ED4  E109               	bnz	u9500
  7390  002ED6  0E05               	movlw	5
  7391  002ED8  5C11               	subwf	(??_atoi+2)^0,w,c
  7392  002EDA  A0D8               	btfss	status,0,c
  7393  002EDC  EF72  F017         	goto	u9501
  7394  002EE0  EF74  F017         	goto	u9500
  7395  002EE4                     u9501:
  7396  002EE4  EF76  F017         	goto	l7863
  7397  002EE8                     u9500:
  7398  002EE8  0E00               	movlw	0
  7399  002EEA  6E19               	movwf	_atoi$1319^0,c
  7400  002EEC                     l7863:
  7401  002EEC  C019  F015         	movff	_atoi$1319,_atoi$1318
  7402  002EF0  6A16               	clrf	(_atoi$1318+1)^0,c
  7403  002EF2  5015               	movf	_atoi$1318^0,w,c
  7404  002EF4  1016               	iorwf	(_atoi$1318+1)^0,w,c
  7405  002EF6  A4D8               	btfss	status,2,c
  7406  002EF8  EF80  F017         	goto	u9511
  7407  002EFC  EF82  F017         	goto	u9510
  7408  002F00                     u9511:
  7409  002F00  EF47  F017         	goto	l7853
  7410  002F04                     u9510:
  7411  002F04  EF8C  F017         	goto	l7873
  7412  002F08                     l7869:
  7413  002F08  0E00               	movlw	0
  7414  002F0A  6E14               	movwf	(atoi@neg+1)^0,c
  7415  002F0C  0E01               	movlw	1
  7416  002F0E  6E13               	movwf	atoi@neg^0,c
  7417  002F10                     l7871:
  7418  002F10  4A0D               	infsnz	atoi@s^0,f,c
  7419  002F12  2A0E               	incf	(atoi@s+1)^0,f,c
  7420  002F14  EFC1  F017         	goto	l7879
  7421  002F18                     l7873:
  7422  002F18  C00D  FFF6         	movff	atoi@s,tblptrl
  7423  002F1C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7424  002F20                     	if	0	;tblptru may be non-zero
  7425  002F20                     	endif
  7426  002F20                     	if	0	;tblptru may be non-zero
  7427  002F20                     	endif
  7428  002F20  0008               	tblrd		*
  7429  002F22  50F5               	movf	tablat,w,c
  7430  002F24  6E0F               	movwf	??_atoi^0,c
  7431  002F26  6A10               	clrf	(??_atoi+1)^0,c
  7432                           
  7433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7434                           ; Switch size 1, requested type "simple"
  7435                           ; Number of cases is 1, Range of values is 0 to 0
  7436                           ; switch strategies available:
  7437                           ; Name         Instructions Cycles
  7438                           ; simple_byte            4     3 (average)
  7439                           ;	Chosen strategy is simple_byte
  7440  002F28  5010               	movf	(??_atoi+1)^0,w,c
  7441  002F2A  0A00               	xorlw	0	; case 0
  7442  002F2C  B4D8               	btfsc	status,2,c
  7443  002F2E  EF9B  F017         	goto	l9045
  7444  002F32  EFC1  F017         	goto	l7879
  7445  002F36                     l9045:
  7446                           
  7447                           ; Switch size 1, requested type "simple"
  7448                           ; Number of cases is 2, Range of values is 43 to 45
  7449                           ; switch strategies available:
  7450                           ; Name         Instructions Cycles
  7451                           ; simple_byte            7     4 (average)
  7452                           ;	Chosen strategy is simple_byte
  7453  002F36  500F               	movf	??_atoi^0,w,c
  7454  002F38  0A2B               	xorlw	43	; case 43
  7455  002F3A  B4D8               	btfsc	status,2,c
  7456  002F3C  EF88  F017         	goto	l7871
  7457  002F40  0A06               	xorlw	6	; case 45
  7458  002F42  B4D8               	btfsc	status,2,c
  7459  002F44  EF84  F017         	goto	l7869
  7460  002F48  EFC1  F017         	goto	l7879
  7461  002F4C                     l7875:
  7462  002F4C  C01A  F006         	movff	atoi@n,___wmul@multiplier
  7463  002F50  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  7464  002F54  0E00               	movlw	0
  7465  002F56  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7466  002F58  0E0A               	movlw	10
  7467  002F5A  6E08               	movwf	___wmul@multiplicand^0,c
  7468  002F5C  ECE9  F023         	call	___wmul	;wreg free
  7469  002F60  C00D  FFF6         	movff	atoi@s,tblptrl
  7470  002F64  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7471  002F68                     	if	0	;tblptru may be non-zero
  7472  002F68                     	endif
  7473  002F68                     	if	0	;tblptru may be non-zero
  7474  002F68                     	endif
  7475  002F68  0008               	tblrd		*
  7476  002F6A  50F5               	movf	tablat,w,c
  7477  002F6C  5E06               	subwf	?___wmul^0,f,c
  7478  002F6E  0E00               	movlw	0
  7479  002F70  5A07               	subwfb	(?___wmul+1)^0,f,c
  7480  002F72  0E30               	movlw	48
  7481  002F74  2406               	addwf	?___wmul^0,w,c
  7482  002F76  6E1A               	movwf	atoi@n^0,c
  7483  002F78  0E00               	movlw	0
  7484  002F7A  2007               	addwfc	(?___wmul+1)^0,w,c
  7485  002F7C  6E1B               	movwf	(atoi@n+1)^0,c
  7486  002F7E  EF88  F017         	goto	l7871
  7487  002F82                     l7879:
  7488  002F82  0ED0               	movlw	208
  7489  002F84  6E0F               	movwf	??_atoi^0,c
  7490  002F86  0EFF               	movlw	255
  7491  002F88  6E10               	movwf	(??_atoi+1)^0,c
  7492  002F8A  C00D  FFF6         	movff	atoi@s,tblptrl
  7493  002F8E  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7494  002F92                     	if	0	;tblptru may be non-zero
  7495  002F92                     	endif
  7496  002F92                     	if	0	;tblptru may be non-zero
  7497  002F92                     	endif
  7498  002F92  0008               	tblrd		*
  7499  002F94  50F5               	movf	tablat,w,c
  7500  002F96  6E11               	movwf	(??_atoi+2)^0,c
  7501  002F98  6A12               	clrf	(??_atoi+3)^0,c
  7502  002F9A  500F               	movf	??_atoi^0,w,c
  7503  002F9C  2611               	addwf	(??_atoi+2)^0,f,c
  7504  002F9E  5010               	movf	(??_atoi+1)^0,w,c
  7505  002FA0  2212               	addwfc	(??_atoi+3)^0,f,c
  7506  002FA2  5012               	movf	(??_atoi+3)^0,w,c
  7507  002FA4  E10A               	bnz	u9520
  7508  002FA6  0E0A               	movlw	10
  7509  002FA8  5C11               	subwf	(??_atoi+2)^0,w,c
  7510  002FAA  A0D8               	btfss	status,0,c
  7511  002FAC  EFDA  F017         	goto	u9521
  7512  002FB0  EFDD  F017         	goto	u9520
  7513  002FB4                     u9521:
  7514  002FB4  0E01               	movlw	1
  7515  002FB6  EFDE  F017         	goto	u9530
  7516  002FBA                     u9520:
  7517  002FBA  0E00               	movlw	0
  7518  002FBC                     u9530:
  7519  002FBC  6E17               	movwf	_atoi$1320^0,c
  7520  002FBE  6A18               	clrf	(_atoi$1320+1)^0,c
  7521  002FC0  5017               	movf	_atoi$1320^0,w,c
  7522  002FC2  1018               	iorwf	(_atoi$1320+1)^0,w,c
  7523  002FC4  A4D8               	btfss	status,2,c
  7524  002FC6  EFE7  F017         	goto	u9541
  7525  002FCA  EFE9  F017         	goto	u9540
  7526  002FCE                     u9541:
  7527  002FCE  EFA6  F017         	goto	l7875
  7528  002FD2                     u9540:
  7529  002FD2  5013               	movf	atoi@neg^0,w,c
  7530  002FD4  1014               	iorwf	(atoi@neg+1)^0,w,c
  7531  002FD6  A4D8               	btfss	status,2,c
  7532  002FD8  EFF0  F017         	goto	u9551
  7533  002FDC  EFF2  F017         	goto	u9550
  7534  002FE0                     u9551:
  7535  002FE0  EF00  F018         	goto	l1492
  7536  002FE4                     u9550:
  7537  002FE4  C01A  F00F         	movff	atoi@n,??_atoi
  7538  002FE8  C01B  F010         	movff	atoi@n+1,??_atoi+1
  7539  002FEC  1E0F               	comf	??_atoi^0,f,c
  7540  002FEE  1E10               	comf	(??_atoi+1)^0,f,c
  7541  002FF0  4A0F               	infsnz	??_atoi^0,f,c
  7542  002FF2  2A10               	incf	(??_atoi+1)^0,f,c
  7543  002FF4  C00F  F00D         	movff	??_atoi,?_atoi
  7544  002FF8  C010  F00E         	movff	??_atoi+1,?_atoi+1
  7545  002FFC  EF04  F018         	goto	l1495
  7546  003000                     l1492:
  7547  003000  C01A  F00D         	movff	atoi@n,?_atoi
  7548  003004  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  7549  003008                     l1495:
  7550  003008  0012               	return		;funcret
  7551  00300A                     __end_of_atoi:
  7552                           	opt callstack 0
  7553                           
  7554 ;; *************** function _isspace *****************
  7555 ;; Defined at:
  7556 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  c               2    5[COMRAM] int 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  2    5[COMRAM] int 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7570 ;;      Params:         2       0       0       0       0       0       0       0       0
  7571 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7572 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7573 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7574 ;;Total ram usage:        7 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    2
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		_atoi
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text29
  7585  0044B6                     __ptext29:
  7586                           	opt callstack 0
  7587  0044B6                     _isspace:
  7588                           	opt callstack 23
  7589  0044B6  0E01               	movlw	1
  7590  0044B8  6E0C               	movwf	_isspace$1349^0,c
  7591  0044BA  0E20               	movlw	32
  7592  0044BC  1806               	xorwf	isspace@c^0,w,c
  7593  0044BE  1007               	iorwf	(isspace@c+1)^0,w,c
  7594  0044C0  B4D8               	btfsc	status,2,c
  7595  0044C2  EF65  F022         	goto	u8801
  7596  0044C6  EF67  F022         	goto	u8800
  7597  0044CA                     u8801:
  7598  0044CA  EF80  F022         	goto	l7487
  7599  0044CE                     u8800:
  7600  0044CE  0EF7               	movlw	247
  7601  0044D0  6E08               	movwf	??_isspace^0,c
  7602  0044D2  0EFF               	movlw	255
  7603  0044D4  6E09               	movwf	(??_isspace+1)^0,c
  7604  0044D6  C006  F00A         	movff	isspace@c,??_isspace+2
  7605  0044DA  C007  F00B         	movff	isspace@c+1,??_isspace+3
  7606  0044DE  5008               	movf	??_isspace^0,w,c
  7607  0044E0  260A               	addwf	(??_isspace+2)^0,f,c
  7608  0044E2  5009               	movf	(??_isspace+1)^0,w,c
  7609  0044E4  220B               	addwfc	(??_isspace+3)^0,f,c
  7610  0044E6  500B               	movf	(??_isspace+3)^0,w,c
  7611  0044E8  E109               	bnz	u8810
  7612  0044EA  0E05               	movlw	5
  7613  0044EC  5C0A               	subwf	(??_isspace+2)^0,w,c
  7614  0044EE  A0D8               	btfss	status,0,c
  7615  0044F0  EF7C  F022         	goto	u8811
  7616  0044F4  EF7E  F022         	goto	u8810
  7617  0044F8                     u8811:
  7618  0044F8  EF80  F022         	goto	l7487
  7619  0044FC                     u8810:
  7620  0044FC  0E00               	movlw	0
  7621  0044FE  6E0C               	movwf	_isspace$1349^0,c
  7622  004500                     l7487:
  7623  004500  C00C  F006         	movff	_isspace$1349,?_isspace
  7624  004504  6A07               	clrf	(?_isspace+1)^0,c
  7625  004506  0012               	return		;funcret
  7626  004508                     __end_of_isspace:
  7627                           	opt callstack 0
  7628                           
  7629 ;; *************** function _isdigit *****************
  7630 ;; Defined at:
  7631 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  c               2    5[COMRAM] int 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  2    5[COMRAM] int 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7645 ;;      Params:         2       0       0       0       0       0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7647 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7648 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7649 ;;Total ram usage:        6 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    2
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_vfpfcnvrt
  7656 ;;		_atoi
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text30
  7661  004764                     __ptext30:
  7662                           	opt callstack 0
  7663  004764                     _isdigit:
  7664                           	opt callstack 24
  7665  004764  0ED0               	movlw	208
  7666  004766  6E08               	movwf	??_isdigit^0,c
  7667  004768  0EFF               	movlw	255
  7668  00476A  6E09               	movwf	(??_isdigit+1)^0,c
  7669  00476C  C006  F00A         	movff	isdigit@c,??_isdigit+2
  7670  004770  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  7671  004774  5008               	movf	??_isdigit^0,w,c
  7672  004776  260A               	addwf	(??_isdigit+2)^0,f,c
  7673  004778  5009               	movf	(??_isdigit+1)^0,w,c
  7674  00477A  220B               	addwfc	(??_isdigit+3)^0,f,c
  7675  00477C  500B               	movf	(??_isdigit+3)^0,w,c
  7676  00477E  E10A               	bnz	u7950
  7677  004780  0E0A               	movlw	10
  7678  004782  5C0A               	subwf	(??_isdigit+2)^0,w,c
  7679  004784  A0D8               	btfss	status,0,c
  7680  004786  EFC7  F023         	goto	u7951
  7681  00478A  EFCA  F023         	goto	u7950
  7682  00478E                     u7951:
  7683  00478E  0E01               	movlw	1
  7684  004790  EFCB  F023         	goto	u7960
  7685  004794                     u7950:
  7686  004794  0E00               	movlw	0
  7687  004796                     u7960:
  7688  004796  6E06               	movwf	?_isdigit^0,c
  7689  004798  6A07               	clrf	(?_isdigit+1)^0,c
  7690  00479A  0012               	return		;funcret
  7691  00479C                     __end_of_isdigit:
  7692                           	opt callstack 0
  7693                           
  7694 ;; *************** function ___wmul *****************
  7695 ;; Defined at:
  7696 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  multiplier      2    5[COMRAM] unsigned int 
  7699 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  product         2    9[COMRAM] unsigned int 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  2    5[COMRAM] unsigned int 
  7704 ;; Registers used:
  7705 ;;		wreg, status,2, status,0, prodl, prodh
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7711 ;;      Params:         4       0       0       0       0       0       0       0       0
  7712 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7714 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7715 ;;Total ram usage:        6 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    2
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_atoi
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text31
  7726  0047D2                     __ptext31:
  7727                           	opt callstack 0
  7728  0047D2                     ___wmul:
  7729                           	opt callstack 23
  7730  0047D2  5006               	movf	___wmul@multiplier^0,w,c
  7731  0047D4  0208               	mulwf	___wmul@multiplicand^0,c
  7732  0047D6  CFF3 F00A          	movff	prodl,___wmul@product
  7733  0047DA  CFF4 F00B          	movff	prodh,___wmul@product+1
  7734  0047DE  5006               	movf	___wmul@multiplier^0,w,c
  7735  0047E0  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7736  0047E2  50F3               	movf	243,w,c
  7737  0047E4  260B               	addwf	(___wmul@product+1)^0,f,c
  7738  0047E6  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7739  0047E8  0208               	mulwf	___wmul@multiplicand^0,c
  7740  0047EA  50F3               	movf	243,w,c
  7741  0047EC  260B               	addwf	(___wmul@product+1)^0,f,c
  7742  0047EE  C00A  F006         	movff	___wmul@product,?___wmul
  7743  0047F2  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7744  0047F6  0012               	return		;funcret
  7745  0047F8                     __end_of___wmul:
  7746                           	opt callstack 0
  7747                           
  7748 ;; *************** function _UART_printf *****************
  7749 ;; Defined at:
  7750 ;;		line 47 in file "./UART.h"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  cadena          2    6[COMRAM] PTR unsigned char 
  7753 ;;		 -> buffer(50), STR_2(25), STR_1(24), 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7765 ;;      Params:         2       0       0       0       0       0       0       0       0
  7766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7768 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7769 ;;Total ram usage:        2 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:    3
  7772 ;; This function calls:
  7773 ;;		_UART_write
  7774 ;; This function is called by:
  7775 ;;		_probarSensores
  7776 ;;		_probarUltrasonico
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text32
  7781  0042FE                     __ptext32:
  7782                           	opt callstack 0
  7783  0042FE                     _UART_printf:
  7784                           	opt callstack 25
  7785  0042FE                     
  7786                           ;./UART.h: 48:     while (*cadena) {
  7787  0042FE  EF95  F021         	goto	l8207
  7788  004302                     l8203:
  7789                           
  7790                           ;./UART.h: 49:         UART_write(*cadena++);
  7791  004302  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7792  004306  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7793  00430A  6AF8               	clrf	tblptru,c
  7794  00430C  0E07               	movlw	(high __ramtop+-1)
  7795  00430E  64F7               	cpfsgt	tblptrh,c
  7796  004310  D003               	bra	u10137
  7797  004312  0008               	tblrd		*
  7798  004314  50F5               	movf	tablat,w,c
  7799  004316  D005               	bra	u10130
  7800  004318                     u10137:
  7801  004318  CFF6 FFE9          	movff	tblptrl,fsr0l
  7802  00431C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7803  004320  50EF               	movf	indf0,w,c
  7804  004322                     u10130:
  7805  004322  EC0F  F024         	call	_UART_write
  7806  004326  4A07               	infsnz	UART_printf@cadena^0,f,c
  7807  004328  2A08               	incf	(UART_printf@cadena+1)^0,f,c
  7808  00432A                     l8207:
  7809                           
  7810                           ;./UART.h: 48:     while (*cadena) {
  7811  00432A  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7812  00432E  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7813  004332  6AF8               	clrf	tblptru,c
  7814  004334  0E07               	movlw	(high __ramtop+-1)
  7815  004336  64F7               	cpfsgt	tblptrh,c
  7816  004338  D003               	bra	u10147
  7817  00433A  0008               	tblrd		*
  7818  00433C  50F5               	movf	tablat,w,c
  7819  00433E  D005               	bra	u10140
  7820  004340                     u10147:
  7821  004340  CFF6 FFE9          	movff	tblptrl,fsr0l
  7822  004344  CFF7 FFEA          	movff	tblptrh,fsr0h
  7823  004348  50EF               	movf	indf0,w,c
  7824  00434A                     u10140:
  7825  00434A  0900               	iorlw	0
  7826  00434C  A4D8               	btfss	status,2,c
  7827  00434E  EFAB  F021         	goto	u10151
  7828  004352  EFAD  F021         	goto	u10150
  7829  004356                     u10151:
  7830  004356  EF81  F021         	goto	l8203
  7831  00435A                     u10150:
  7832  00435A  0012               	return		;funcret
  7833  00435C                     __end_of_UART_printf:
  7834                           	opt callstack 0
  7835                           
  7836 ;; *************** function _UART_write *****************
  7837 ;; Defined at:
  7838 ;;		line 42 in file "./UART.h"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  dato            1    wreg     unsigned char 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  dato            1    5[COMRAM] unsigned char 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0
  7853 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7855 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7856 ;;Total ram usage:        1 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    2
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_UART_printf
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text33
  7867  00481E                     __ptext33:
  7868                           	opt callstack 0
  7869  00481E                     _UART_write:
  7870                           	opt callstack 25
  7871                           
  7872                           ;incstack = 0
  7873                           ;UART_write@dato stored from wreg
  7874  00481E  6E06               	movwf	UART_write@dato^0,c
  7875  004820                     
  7876                           ;./UART.h: 43:     TXREG = dato;
  7877  004820  C006  FFAD         	movff	UART_write@dato,4013	;volatile
  7878  004824                     l212:
  7879  004824  A2AC               	btfss	172,1,c	;volatile
  7880  004826  EF17  F024         	goto	u9851
  7881  00482A  EF19  F024         	goto	u9850
  7882  00482E                     u9851:
  7883  00482E  EF12  F024         	goto	l212
  7884  004832                     u9850:
  7885  004832  0012               	return		;funcret
  7886  004834                     __end_of_UART_write:
  7887                           	opt callstack 0
  7888                           
  7889 ;; *************** function _leerSensores *****************
  7890 ;; Defined at:
  7891 ;;		line 821 in file "main.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7905 ;;      Params:         0       0       0       0       0       0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7908 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7909 ;;Total ram usage:        0 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    4
  7912 ;; This function calls:
  7913 ;;		___fladd
  7914 ;;		___fldiv
  7915 ;;		_dameDistancia
  7916 ;; This function is called by:
  7917 ;;		_probarSensores
  7918 ;;		_comportamientoBasico
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text34
  7923  003192                     __ptext34:
  7924                           	opt callstack 0
  7925  003192                     _leerSensores:
  7926                           	opt callstack 25
  7927  003192                     
  7928                           ;main.c: 823:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  7929  003192  C120  F02C         	movff	_oldSensorDerecha,___fladd@a
  7930  003196  C121  F02D         	movff	_oldSensorDerecha+1,___fladd@a+1
  7931  00319A  C122  F02E         	movff	_oldSensorDerecha+2,___fladd@a+2
  7932  00319E  C123  F02F         	movff	_oldSensorDerecha+3,___fladd@a+3
  7933  0031A2  0E03               	movlw	3
  7934  0031A4  EC39  F01A         	call	_dameDistancia
  7935  0031A8  C01B  F028         	movff	?_dameDistancia,___fladd@b
  7936  0031AC  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  7937  0031B0  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  7938  0031B4  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  7939  0031B8  ECC8  F00C         	call	___fladd	;wreg free
  7940  0031BC  C028  F038         	movff	?___fladd,___fldiv@b
  7941  0031C0  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  7942  0031C4  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  7943  0031C8  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  7944  0031CC  0E00               	movlw	0
  7945  0031CE  6E3C               	movwf	___fldiv@a^0,c
  7946  0031D0  0E00               	movlw	0
  7947  0031D2  6E3D               	movwf	(___fldiv@a+1)^0,c
  7948  0031D4  0E00               	movlw	0
  7949  0031D6  6E3E               	movwf	(___fldiv@a+2)^0,c
  7950  0031D8  0E40               	movlw	64
  7951  0031DA  6E3F               	movwf	(___fldiv@a+3)^0,c
  7952  0031DC  EC3E  F011         	call	___fldiv	;wreg free
  7953  0031E0  C038  F12C         	movff	?___fldiv,_sensorDerecha
  7954  0031E4  C039  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  7955  0031E8  C03A  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  7956  0031EC  C03B  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  7957                           
  7958                           ;main.c: 824:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2;
  7959  0031F0  C11C  F02C         	movff	_oldSensorIzquierda,___fladd@a
  7960  0031F4  C11D  F02D         	movff	_oldSensorIzquierda+1,___fladd@a+1
  7961  0031F8  C11E  F02E         	movff	_oldSensorIzquierda+2,___fladd@a+2
  7962  0031FC  C11F  F02F         	movff	_oldSensorIzquierda+3,___fladd@a+3
  7963  003200  0E02               	movlw	2
  7964  003202  EC39  F01A         	call	_dameDistancia
  7965  003206  C01B  F028         	movff	?_dameDistancia,___fladd@b
  7966  00320A  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  7967  00320E  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  7968  003212  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  7969  003216  ECC8  F00C         	call	___fladd	;wreg free
  7970  00321A  C028  F038         	movff	?___fladd,___fldiv@b
  7971  00321E  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  7972  003222  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  7973  003226  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  7974  00322A  0E00               	movlw	0
  7975  00322C  6E3C               	movwf	___fldiv@a^0,c
  7976  00322E  0E00               	movlw	0
  7977  003230  6E3D               	movwf	(___fldiv@a+1)^0,c
  7978  003232  0E00               	movlw	0
  7979  003234  6E3E               	movwf	(___fldiv@a+2)^0,c
  7980  003236  0E40               	movlw	64
  7981  003238  6E3F               	movwf	(___fldiv@a+3)^0,c
  7982  00323A  EC3E  F011         	call	___fldiv	;wreg free
  7983  00323E  C038  F128         	movff	?___fldiv,_sensorIzquierda
  7984  003242  C039  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  7985  003246  C03A  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  7986  00324A  C03B  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  7987                           
  7988                           ;main.c: 825:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  7989  00324E  C118  F02C         	movff	_oldSensorEnfrente,___fladd@a
  7990  003252  C119  F02D         	movff	_oldSensorEnfrente+1,___fladd@a+1
  7991  003256  C11A  F02E         	movff	_oldSensorEnfrente+2,___fladd@a+2
  7992  00325A  C11B  F02F         	movff	_oldSensorEnfrente+3,___fladd@a+3
  7993  00325E  0E01               	movlw	1
  7994  003260  EC39  F01A         	call	_dameDistancia
  7995  003264  C01B  F028         	movff	?_dameDistancia,___fladd@b
  7996  003268  C01C  F029         	movff	?_dameDistancia+1,___fladd@b+1
  7997  00326C  C01D  F02A         	movff	?_dameDistancia+2,___fladd@b+2
  7998  003270  C01E  F02B         	movff	?_dameDistancia+3,___fladd@b+3
  7999  003274  ECC8  F00C         	call	___fladd	;wreg free
  8000  003278  C028  F038         	movff	?___fladd,___fldiv@b
  8001  00327C  C029  F039         	movff	?___fladd+1,___fldiv@b+1
  8002  003280  C02A  F03A         	movff	?___fladd+2,___fldiv@b+2
  8003  003284  C02B  F03B         	movff	?___fladd+3,___fldiv@b+3
  8004  003288  0E00               	movlw	0
  8005  00328A  6E3C               	movwf	___fldiv@a^0,c
  8006  00328C  0E00               	movlw	0
  8007  00328E  6E3D               	movwf	(___fldiv@a+1)^0,c
  8008  003290  0E00               	movlw	0
  8009  003292  6E3E               	movwf	(___fldiv@a+2)^0,c
  8010  003294  0E40               	movlw	64
  8011  003296  6E3F               	movwf	(___fldiv@a+3)^0,c
  8012  003298  EC3E  F011         	call	___fldiv	;wreg free
  8013  00329C  C038  F124         	movff	?___fldiv,_sensorEnfrente
  8014  0032A0  C039  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  8015  0032A4  C03A  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  8016  0032A8  C03B  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  8017  0032AC                     
  8018                           ;main.c: 827:     oldSensorDerecha = sensorDerecha;
  8019  0032AC  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  8020  0032B0  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  8021  0032B4  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  8022  0032B8  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  8023  0032BC                     
  8024                           ;main.c: 828:     oldSensorIzquierda = sensorIzquierda;
  8025  0032BC  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  8026  0032C0  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  8027  0032C4  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  8028  0032C8  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  8029  0032CC                     
  8030                           ;main.c: 829:     oldSensorEnfrente = sensorEnfrente;
  8031  0032CC  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  8032  0032D0  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  8033  0032D4  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  8034  0032D8  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  8035  0032DC                     
  8036                           ;main.c: 834:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  8037  0032DC  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  8038  0032E0  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  8039  0032E4  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  8040  0032E8  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  8041  0032EC                     
  8042                           ;main.c: 843:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  8043  0032EC  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  8044  0032F0  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  8045  0032F4  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  8046  0032F8  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  8047  0032FC                     
  8048                           ;main.c: 846:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  8049  0032FC  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  8050  003300  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  8051  003304  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  8052  003308  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  8053  00330C  0012               	return		;funcret
  8054  00330E                     __end_of_leerSensores:
  8055                           	opt callstack 0
  8056                           
  8057 ;; *************** function ___fladd *****************
  8058 ;; Defined at:
  8059 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  b               4   39[COMRAM] void 
  8062 ;;  a               4   43[COMRAM] void 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  grs             1   54[COMRAM] unsigned char 
  8065 ;;  bexp            1   53[COMRAM] unsigned char 
  8066 ;;  aexp            1   52[COMRAM] unsigned char 
  8067 ;;  signs           1   51[COMRAM] unsigned char 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  4   39[COMRAM] unsigned char 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2, status,0
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8077 ;;      Params:         8       0       0       0       0       0       0       0       0
  8078 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8079 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8080 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8081 ;;Total ram usage:       16 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    2
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		_leerSensores
  8088 ;;		_efgtoa
  8089 ;;		___flsub
  8090 ;;		_PID
  8091 ;;		_roundf
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text35
  8096  001990                     __ptext35:
  8097                           	opt callstack 0
  8098  001990                     ___fladd:
  8099                           	opt callstack 22
  8100  001990  502B               	movf	(___fladd@b+3)^0,w,c
  8101  001992  0B80               	andlw	128
  8102  001994  6E34               	movwf	___fladd@signs^0,c
  8103  001996  502B               	movf	(___fladd@b+3)^0,w,c
  8104  001998  242B               	addwf	(___fladd@b+3)^0,w,c
  8105  00199A  6E36               	movwf	___fladd@bexp^0,c
  8106  00199C  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8107  00199E  EFD3  F00C         	goto	u7291
  8108  0019A2  EFD5  F00C         	goto	u7290
  8109  0019A6                     u7291:
  8110  0019A6  EFD6  F00C         	goto	l6659
  8111  0019AA                     u7290:
  8112  0019AA  8036               	bsf	___fladd@bexp^0,0,c
  8113  0019AC                     l6659:
  8114  0019AC  5036               	movf	___fladd@bexp^0,w,c
  8115  0019AE  B4D8               	btfsc	status,2,c
  8116  0019B0  EFDC  F00C         	goto	u7301
  8117  0019B4  EFDE  F00C         	goto	u7300
  8118  0019B8                     u7301:
  8119  0019B8  EFF3  F00C         	goto	l6669
  8120  0019BC                     u7300:
  8121  0019BC  2836               	incf	___fladd@bexp^0,w,c
  8122  0019BE  A4D8               	btfss	status,2,c
  8123  0019C0  EFE4  F00C         	goto	u7311
  8124  0019C4  EFE6  F00C         	goto	u7310
  8125  0019C8                     u7311:
  8126  0019C8  EFEE  F00C         	goto	l6665
  8127  0019CC                     u7310:
  8128  0019CC  0E00               	movlw	0
  8129  0019CE  6E28               	movwf	___fladd@b^0,c
  8130  0019D0  0E00               	movlw	0
  8131  0019D2  6E29               	movwf	(___fladd@b+1)^0,c
  8132  0019D4  0E00               	movlw	0
  8133  0019D6  6E2A               	movwf	(___fladd@b+2)^0,c
  8134  0019D8  0E00               	movlw	0
  8135  0019DA  6E2B               	movwf	(___fladd@b+3)^0,c
  8136  0019DC                     l6665:
  8137  0019DC  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8138  0019DE  0E00               	movlw	0
  8139  0019E0  6E2B               	movwf	(___fladd@b+3)^0,c
  8140  0019E2  EFFB  F00C         	goto	l6671
  8141  0019E6                     l6669:
  8142  0019E6  0E00               	movlw	0
  8143  0019E8  6E28               	movwf	___fladd@b^0,c
  8144  0019EA  0E00               	movlw	0
  8145  0019EC  6E29               	movwf	(___fladd@b+1)^0,c
  8146  0019EE  0E00               	movlw	0
  8147  0019F0  6E2A               	movwf	(___fladd@b+2)^0,c
  8148  0019F2  0E00               	movlw	0
  8149  0019F4  6E2B               	movwf	(___fladd@b+3)^0,c
  8150  0019F6                     l6671:
  8151  0019F6  502F               	movf	(___fladd@a+3)^0,w,c
  8152  0019F8  0B80               	andlw	128
  8153  0019FA  6E35               	movwf	___fladd@aexp^0,c
  8154  0019FC  5034               	movf	___fladd@signs^0,w,c
  8155  0019FE  1835               	xorwf	___fladd@aexp^0,w,c
  8156  001A00  B4D8               	btfsc	status,2,c
  8157  001A02  EF05  F00D         	goto	u7321
  8158  001A06  EF07  F00D         	goto	u7320
  8159  001A0A                     u7321:
  8160  001A0A  EF08  F00D         	goto	l6677
  8161  001A0E                     u7320:
  8162  001A0E  8C34               	bsf	___fladd@signs^0,6,c
  8163  001A10                     l6677:
  8164  001A10  502F               	movf	(___fladd@a+3)^0,w,c
  8165  001A12  242F               	addwf	(___fladd@a+3)^0,w,c
  8166  001A14  6E35               	movwf	___fladd@aexp^0,c
  8167  001A16  AE2E               	btfss	(___fladd@a+2)^0,7,c
  8168  001A18  EF10  F00D         	goto	u7331
  8169  001A1C  EF12  F00D         	goto	u7330
  8170  001A20                     u7331:
  8171  001A20  EF13  F00D         	goto	l6683
  8172  001A24                     u7330:
  8173  001A24  8035               	bsf	___fladd@aexp^0,0,c
  8174  001A26                     l6683:
  8175  001A26  5035               	movf	___fladd@aexp^0,w,c
  8176  001A28  B4D8               	btfsc	status,2,c
  8177  001A2A  EF19  F00D         	goto	u7341
  8178  001A2E  EF1B  F00D         	goto	u7340
  8179  001A32                     u7341:
  8180  001A32  EF30  F00D         	goto	l6693
  8181  001A36                     u7340:
  8182  001A36  2835               	incf	___fladd@aexp^0,w,c
  8183  001A38  A4D8               	btfss	status,2,c
  8184  001A3A  EF21  F00D         	goto	u7351
  8185  001A3E  EF23  F00D         	goto	u7350
  8186  001A42                     u7351:
  8187  001A42  EF2B  F00D         	goto	l6689
  8188  001A46                     u7350:
  8189  001A46  0E00               	movlw	0
  8190  001A48  6E2C               	movwf	___fladd@a^0,c
  8191  001A4A  0E00               	movlw	0
  8192  001A4C  6E2D               	movwf	(___fladd@a+1)^0,c
  8193  001A4E  0E00               	movlw	0
  8194  001A50  6E2E               	movwf	(___fladd@a+2)^0,c
  8195  001A52  0E00               	movlw	0
  8196  001A54  6E2F               	movwf	(___fladd@a+3)^0,c
  8197  001A56                     l6689:
  8198  001A56  8E2E               	bsf	(___fladd@a+2)^0,7,c
  8199  001A58  0E00               	movlw	0
  8200  001A5A  6E2F               	movwf	(___fladd@a+3)^0,c
  8201  001A5C  EF38  F00D         	goto	l6695
  8202  001A60                     l6693:
  8203  001A60  0E00               	movlw	0
  8204  001A62  6E2C               	movwf	___fladd@a^0,c
  8205  001A64  0E00               	movlw	0
  8206  001A66  6E2D               	movwf	(___fladd@a+1)^0,c
  8207  001A68  0E00               	movlw	0
  8208  001A6A  6E2E               	movwf	(___fladd@a+2)^0,c
  8209  001A6C  0E00               	movlw	0
  8210  001A6E  6E2F               	movwf	(___fladd@a+3)^0,c
  8211  001A70                     l6695:
  8212  001A70  5036               	movf	___fladd@bexp^0,w,c
  8213  001A72  5C35               	subwf	___fladd@aexp^0,w,c
  8214  001A74  B0D8               	btfsc	status,0,c
  8215  001A76  EF3F  F00D         	goto	u7361
  8216  001A7A  EF41  F00D         	goto	u7360
  8217  001A7E                     u7361:
  8218  001A7E  EF68  F00D         	goto	l6731
  8219  001A82                     u7360:
  8220  001A82  AC34               	btfss	___fladd@signs^0,6,c
  8221  001A84  EF46  F00D         	goto	u7371
  8222  001A88  EF48  F00D         	goto	u7370
  8223  001A8C                     u7371:
  8224  001A8C  EF4A  F00D         	goto	l6701
  8225  001A90                     u7370:
  8226  001A90  0E80               	movlw	128
  8227  001A92  1A34               	xorwf	___fladd@signs^0,f,c
  8228  001A94                     l6701:
  8229  001A94  C036  F037         	movff	___fladd@bexp,___fladd@grs
  8230  001A98  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8231  001A9C  C037  F035         	movff	___fladd@grs,___fladd@aexp
  8232  001AA0  C028  F037         	movff	___fladd@b,___fladd@grs
  8233  001AA4  C02C  F028         	movff	___fladd@a,___fladd@b
  8234  001AA8  C037  F02C         	movff	___fladd@grs,___fladd@a
  8235  001AAC  C029  F037         	movff	___fladd@b+1,___fladd@grs
  8236  001AB0  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  8237  001AB4  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  8238  001AB8  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  8239  001ABC  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  8240  001AC0  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  8241  001AC4  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  8242  001AC8  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  8243  001ACC  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  8244  001AD0                     l6731:
  8245  001AD0  0E00               	movlw	0
  8246  001AD2  6E37               	movwf	___fladd@grs^0,c
  8247  001AD4  5036               	movf	___fladd@bexp^0,w,c
  8248  001AD6  C035  F030         	movff	___fladd@aexp,??___fladd
  8249  001ADA  6A31               	clrf	(??___fladd+1)^0,c
  8250  001ADC  5E30               	subwf	??___fladd^0,f,c
  8251  001ADE  0E00               	movlw	0
  8252  001AE0  5A31               	subwfb	(??___fladd+1)^0,f,c
  8253  001AE2  BE31               	btfsc	(??___fladd+1)^0,7,c
  8254  001AE4  EF7D  F00D         	goto	u7381
  8255  001AE8  5031               	movf	(??___fladd+1)^0,w,c
  8256  001AEA  E109               	bnz	u7380
  8257  001AEC  0E1A               	movlw	26
  8258  001AEE  5C30               	subwf	??___fladd^0,w,c
  8259  001AF0  A0D8               	btfss	status,0,c
  8260  001AF2  EF7D  F00D         	goto	u7381
  8261  001AF6  EF7F  F00D         	goto	u7380
  8262  001AFA                     u7381:
  8263  001AFA  EFB6  F00D         	goto	l1304
  8264  001AFE                     u7380:
  8265  001AFE  5028               	movf	___fladd@b^0,w,c
  8266  001B00  1029               	iorwf	(___fladd@b+1)^0,w,c
  8267  001B02  102A               	iorwf	(___fladd@b+2)^0,w,c
  8268  001B04  102B               	iorwf	(___fladd@b+3)^0,w,c
  8269  001B06  A4D8               	btfss	status,2,c
  8270  001B08  EF88  F00D         	goto	u7391
  8271  001B0C  EF8B  F00D         	goto	u7390
  8272  001B10                     u7391:
  8273  001B10  0E01               	movlw	1
  8274  001B12  EF8C  F00D         	goto	u7400
  8275  001B16                     u7390:
  8276  001B16  0E00               	movlw	0
  8277  001B18                     u7400:
  8278  001B18  6E37               	movwf	___fladd@grs^0,c
  8279  001B1A  0E00               	movlw	0
  8280  001B1C  6E28               	movwf	___fladd@b^0,c
  8281  001B1E  0E00               	movlw	0
  8282  001B20  6E29               	movwf	(___fladd@b+1)^0,c
  8283  001B22  0E00               	movlw	0
  8284  001B24  6E2A               	movwf	(___fladd@b+2)^0,c
  8285  001B26  0E00               	movlw	0
  8286  001B28  6E2B               	movwf	(___fladd@b+3)^0,c
  8287  001B2A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  8288  001B2E  EFBF  F00D         	goto	l1303
  8289  001B32                     l1305:
  8290  001B32  A037               	btfss	___fladd@grs^0,0,c
  8291  001B34  EF9E  F00D         	goto	u7411
  8292  001B38  EFA0  F00D         	goto	u7410
  8293  001B3C                     u7411:
  8294  001B3C  EFA6  F00D         	goto	l6743
  8295  001B40                     u7410:
  8296  001B40  90D8               	bcf	status,0,c
  8297  001B42  3037               	rrcf	___fladd@grs^0,w,c
  8298  001B44  0901               	iorlw	1
  8299  001B46  6E37               	movwf	___fladd@grs^0,c
  8300  001B48  EFA8  F00D         	goto	l6745
  8301  001B4C                     l6743:
  8302  001B4C  90D8               	bcf	status,0,c
  8303  001B4E  3237               	rrcf	___fladd@grs^0,f,c
  8304  001B50                     l6745:
  8305  001B50  A028               	btfss	___fladd@b^0,0,c
  8306  001B52  EFAD  F00D         	goto	u7421
  8307  001B56  EFAF  F00D         	goto	u7420
  8308  001B5A                     u7421:
  8309  001B5A  EFB0  F00D         	goto	l6749
  8310  001B5E                     u7420:
  8311  001B5E  8E37               	bsf	___fladd@grs^0,7,c
  8312  001B60                     l6749:
  8313  001B60  342B               	rlcf	(___fladd@b+3)^0,w,c
  8314  001B62  322B               	rrcf	(___fladd@b+3)^0,f,c
  8315  001B64  322A               	rrcf	(___fladd@b+2)^0,f,c
  8316  001B66  3229               	rrcf	(___fladd@b+1)^0,f,c
  8317  001B68  3228               	rrcf	___fladd@b^0,f,c
  8318  001B6A  2A36               	incf	___fladd@bexp^0,f,c
  8319  001B6C                     l1304:
  8320  001B6C  5035               	movf	___fladd@aexp^0,w,c
  8321  001B6E  5C36               	subwf	___fladd@bexp^0,w,c
  8322  001B70  A0D8               	btfss	status,0,c
  8323  001B72  EFBD  F00D         	goto	u7431
  8324  001B76  EFBF  F00D         	goto	u7430
  8325  001B7A                     u7431:
  8326  001B7A  EF99  F00D         	goto	l1305
  8327  001B7E                     u7430:
  8328  001B7E                     l1303:
  8329  001B7E  BC34               	btfsc	___fladd@signs^0,6,c
  8330  001B80  EFC4  F00D         	goto	u7441
  8331  001B84  EFC6  F00D         	goto	u7440
  8332  001B88                     u7441:
  8333  001B88  EF06  F00E         	goto	l6777
  8334  001B8C                     u7440:
  8335  001B8C  5036               	movf	___fladd@bexp^0,w,c
  8336  001B8E  A4D8               	btfss	status,2,c
  8337  001B90  EFCC  F00D         	goto	u7451
  8338  001B94  EFCE  F00D         	goto	u7450
  8339  001B98                     u7451:
  8340  001B98  EFD8  F00D         	goto	l6759
  8341  001B9C                     u7450:
  8342  001B9C  0E00               	movlw	0
  8343  001B9E  6E28               	movwf	?___fladd^0,c
  8344  001BA0  0E00               	movlw	0
  8345  001BA2  6E29               	movwf	(?___fladd+1)^0,c
  8346  001BA4  0E00               	movlw	0
  8347  001BA6  6E2A               	movwf	(?___fladd+2)^0,c
  8348  001BA8  0E00               	movlw	0
  8349  001BAA  6E2B               	movwf	(?___fladd+3)^0,c
  8350  001BAC  EF27  F00F         	goto	l1312
  8351  001BB0                     l6759:
  8352  001BB0  502C               	movf	___fladd@a^0,w,c
  8353  001BB2  2628               	addwf	___fladd@b^0,f,c
  8354  001BB4  502D               	movf	(___fladd@a+1)^0,w,c
  8355  001BB6  2229               	addwfc	(___fladd@b+1)^0,f,c
  8356  001BB8  502E               	movf	(___fladd@a+2)^0,w,c
  8357  001BBA  222A               	addwfc	(___fladd@b+2)^0,f,c
  8358  001BBC  502F               	movf	(___fladd@a+3)^0,w,c
  8359  001BBE  222B               	addwfc	(___fladd@b+3)^0,f,c
  8360  001BC0  A02B               	btfss	(___fladd@b+3)^0,0,c
  8361  001BC2  EFE5  F00D         	goto	u7461
  8362  001BC6  EFE7  F00D         	goto	u7460
  8363  001BCA                     u7461:
  8364  001BCA  EF93  F00E         	goto	l6813
  8365  001BCE                     u7460:
  8366  001BCE  A037               	btfss	___fladd@grs^0,0,c
  8367  001BD0  EFEC  F00D         	goto	u7471
  8368  001BD4  EFEE  F00D         	goto	u7470
  8369  001BD8                     u7471:
  8370  001BD8  EFF4  F00D         	goto	l6767
  8371  001BDC                     u7470:
  8372  001BDC  90D8               	bcf	status,0,c
  8373  001BDE  3037               	rrcf	___fladd@grs^0,w,c
  8374  001BE0  0901               	iorlw	1
  8375  001BE2  6E37               	movwf	___fladd@grs^0,c
  8376  001BE4  EFF6  F00D         	goto	l6769
  8377  001BE8                     l6767:
  8378  001BE8  90D8               	bcf	status,0,c
  8379  001BEA  3237               	rrcf	___fladd@grs^0,f,c
  8380  001BEC                     l6769:
  8381  001BEC  A028               	btfss	___fladd@b^0,0,c
  8382  001BEE  EFFB  F00D         	goto	u7481
  8383  001BF2  EFFD  F00D         	goto	u7480
  8384  001BF6                     u7481:
  8385  001BF6  EFFE  F00D         	goto	l6773
  8386  001BFA                     u7480:
  8387  001BFA  8E37               	bsf	___fladd@grs^0,7,c
  8388  001BFC                     l6773:
  8389  001BFC  342B               	rlcf	(___fladd@b+3)^0,w,c
  8390  001BFE  322B               	rrcf	(___fladd@b+3)^0,f,c
  8391  001C00  322A               	rrcf	(___fladd@b+2)^0,f,c
  8392  001C02  3229               	rrcf	(___fladd@b+1)^0,f,c
  8393  001C04  3228               	rrcf	___fladd@b^0,f,c
  8394  001C06  2A36               	incf	___fladd@bexp^0,f,c
  8395  001C08  EF93  F00E         	goto	l6813
  8396  001C0C                     l6777:
  8397  001C0C  502C               	movf	___fladd@a^0,w,c
  8398  001C0E  5C28               	subwf	___fladd@b^0,w,c
  8399  001C10  502D               	movf	(___fladd@a+1)^0,w,c
  8400  001C12  5829               	subwfb	(___fladd@b+1)^0,w,c
  8401  001C14  502E               	movf	(___fladd@a+2)^0,w,c
  8402  001C16  582A               	subwfb	(___fladd@b+2)^0,w,c
  8403  001C18  502B               	movf	(___fladd@b+3)^0,w,c
  8404  001C1A  0A80               	xorlw	128
  8405  001C1C  6E30               	movwf	??___fladd^0,c
  8406  001C1E  502F               	movf	(___fladd@a+3)^0,w,c
  8407  001C20  0A80               	xorlw	128
  8408  001C22  5830               	subwfb	??___fladd^0,w,c
  8409  001C24  B0D8               	btfsc	status,0,c
  8410  001C26  EF17  F00E         	goto	u7491
  8411  001C2A  EF19  F00E         	goto	u7490
  8412  001C2E                     u7491:
  8413  001C2E  EF44  F00E         	goto	l6787
  8414  001C32                     u7490:
  8415  001C32  5028               	movf	___fladd@b^0,w,c
  8416  001C34  5C2C               	subwf	___fladd@a^0,w,c
  8417  001C36  6E30               	movwf	??___fladd^0,c
  8418  001C38  5029               	movf	(___fladd@b+1)^0,w,c
  8419  001C3A  582D               	subwfb	(___fladd@a+1)^0,w,c
  8420  001C3C  6E31               	movwf	(??___fladd+1)^0,c
  8421  001C3E  502A               	movf	(___fladd@b+2)^0,w,c
  8422  001C40  582E               	subwfb	(___fladd@a+2)^0,w,c
  8423  001C42  6E32               	movwf	(??___fladd+2)^0,c
  8424  001C44  502B               	movf	(___fladd@b+3)^0,w,c
  8425  001C46  582F               	subwfb	(___fladd@a+3)^0,w,c
  8426  001C48  6E33               	movwf	(??___fladd+3)^0,c
  8427  001C4A  0EFF               	movlw	255
  8428  001C4C  2430               	addwf	??___fladd^0,w,c
  8429  001C4E  6E28               	movwf	___fladd@b^0,c
  8430  001C50  0EFF               	movlw	255
  8431  001C52  2031               	addwfc	(??___fladd+1)^0,w,c
  8432  001C54  6E29               	movwf	(___fladd@b+1)^0,c
  8433  001C56  0EFF               	movlw	255
  8434  001C58  2032               	addwfc	(??___fladd+2)^0,w,c
  8435  001C5A  6E2A               	movwf	(___fladd@b+2)^0,c
  8436  001C5C  0EFF               	movlw	255
  8437  001C5E  2033               	addwfc	(??___fladd+3)^0,w,c
  8438  001C60  6E2B               	movwf	(___fladd@b+3)^0,c
  8439  001C62  0E80               	movlw	128
  8440  001C64  1A34               	xorwf	___fladd@signs^0,f,c
  8441  001C66  6C37               	negf	___fladd@grs^0,c
  8442  001C68  5037               	movf	___fladd@grs^0,w,c
  8443  001C6A  A4D8               	btfss	status,2,c
  8444  001C6C  EF3A  F00E         	goto	u7501
  8445  001C70  EF3C  F00E         	goto	u7500
  8446  001C74                     u7501:
  8447  001C74  EF4C  F00E         	goto	l1320
  8448  001C78                     u7500:
  8449  001C78  0E01               	movlw	1
  8450  001C7A  2628               	addwf	___fladd@b^0,f,c
  8451  001C7C  0E00               	movlw	0
  8452  001C7E  2229               	addwfc	(___fladd@b+1)^0,f,c
  8453  001C80  222A               	addwfc	(___fladd@b+2)^0,f,c
  8454  001C82  222B               	addwfc	(___fladd@b+3)^0,f,c
  8455  001C84  EF4C  F00E         	goto	l1320
  8456  001C88                     l6787:
  8457  001C88  502C               	movf	___fladd@a^0,w,c
  8458  001C8A  5E28               	subwf	___fladd@b^0,f,c
  8459  001C8C  502D               	movf	(___fladd@a+1)^0,w,c
  8460  001C8E  5A29               	subwfb	(___fladd@b+1)^0,f,c
  8461  001C90  502E               	movf	(___fladd@a+2)^0,w,c
  8462  001C92  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  8463  001C94  502F               	movf	(___fladd@a+3)^0,w,c
  8464  001C96  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  8465  001C98                     l1320:
  8466  001C98  5028               	movf	___fladd@b^0,w,c
  8467  001C9A  1029               	iorwf	(___fladd@b+1)^0,w,c
  8468  001C9C  102A               	iorwf	(___fladd@b+2)^0,w,c
  8469  001C9E  102B               	iorwf	(___fladd@b+3)^0,w,c
  8470  001CA0  A4D8               	btfss	status,2,c
  8471  001CA2  EF55  F00E         	goto	u7511
  8472  001CA6  EF57  F00E         	goto	u7510
  8473  001CAA                     u7511:
  8474  001CAA  EF8C  F00E         	goto	l6811
  8475  001CAE                     u7510:
  8476  001CAE  5037               	movf	___fladd@grs^0,w,c
  8477  001CB0  A4D8               	btfss	status,2,c
  8478  001CB2  EF5D  F00E         	goto	u7521
  8479  001CB6  EF5F  F00E         	goto	u7520
  8480  001CBA                     u7521:
  8481  001CBA  EF8C  F00E         	goto	l6811
  8482  001CBE                     u7520:
  8483  001CBE  0E00               	movlw	0
  8484  001CC0  6E28               	movwf	?___fladd^0,c
  8485  001CC2  0E00               	movlw	0
  8486  001CC4  6E29               	movwf	(?___fladd+1)^0,c
  8487  001CC6  0E00               	movlw	0
  8488  001CC8  6E2A               	movwf	(?___fladd+2)^0,c
  8489  001CCA  0E00               	movlw	0
  8490  001CCC  6E2B               	movwf	(?___fladd+3)^0,c
  8491  001CCE  EF27  F00F         	goto	l1312
  8492  001CD2                     l6795:
  8493  001CD2  90D8               	bcf	status,0,c
  8494  001CD4  3628               	rlcf	___fladd@b^0,f,c
  8495  001CD6  3629               	rlcf	(___fladd@b+1)^0,f,c
  8496  001CD8  362A               	rlcf	(___fladd@b+2)^0,f,c
  8497  001CDA  362B               	rlcf	(___fladd@b+3)^0,f,c
  8498  001CDC  AE37               	btfss	___fladd@grs^0,7,c
  8499  001CDE  EF73  F00E         	goto	u7531
  8500  001CE2  EF75  F00E         	goto	u7530
  8501  001CE6                     u7531:
  8502  001CE6  EF76  F00E         	goto	l6801
  8503  001CEA                     u7530:
  8504  001CEA  8028               	bsf	___fladd@b^0,0,c
  8505  001CEC                     l6801:
  8506  001CEC  A037               	btfss	___fladd@grs^0,0,c
  8507  001CEE  EF7B  F00E         	goto	u7541
  8508  001CF2  EF7D  F00E         	goto	u7540
  8509  001CF6                     u7541:
  8510  001CF6  EF81  F00E         	goto	l6805
  8511  001CFA                     u7540:
  8512  001CFA  80D8               	bsf	status,0,c
  8513  001CFC  3637               	rlcf	___fladd@grs^0,f,c
  8514  001CFE  EF83  F00E         	goto	l6807
  8515  001D02                     l6805:
  8516  001D02  90D8               	bcf	status,0,c
  8517  001D04  3637               	rlcf	___fladd@grs^0,f,c
  8518  001D06                     l6807:
  8519  001D06  5036               	movf	___fladd@bexp^0,w,c
  8520  001D08  B4D8               	btfsc	status,2,c
  8521  001D0A  EF89  F00E         	goto	u7551
  8522  001D0E  EF8B  F00E         	goto	u7550
  8523  001D12                     u7551:
  8524  001D12  EF8C  F00E         	goto	l6811
  8525  001D16                     u7550:
  8526  001D16  0636               	decf	___fladd@bexp^0,f,c
  8527  001D18                     l6811:
  8528  001D18  AE2A               	btfss	(___fladd@b+2)^0,7,c
  8529  001D1A  EF91  F00E         	goto	u7561
  8530  001D1E  EF93  F00E         	goto	u7560
  8531  001D22                     u7561:
  8532  001D22  EF69  F00E         	goto	l6795
  8533  001D26                     u7560:
  8534  001D26                     l6813:
  8535  001D26  0E00               	movlw	0
  8536  001D28  6E35               	movwf	___fladd@aexp^0,c
  8537  001D2A  AE37               	btfss	___fladd@grs^0,7,c
  8538  001D2C  EF9A  F00E         	goto	u7571
  8539  001D30  EF9C  F00E         	goto	u7570
  8540  001D34                     u7571:
  8541  001D34  EFB4  F00E         	goto	l1329
  8542  001D38                     u7570:
  8543  001D38  C037  F030         	movff	___fladd@grs,??___fladd
  8544  001D3C  0E7F               	movlw	127
  8545  001D3E  1630               	andwf	??___fladd^0,f,c
  8546  001D40  B4D8               	btfsc	status,2,c
  8547  001D42  EFA5  F00E         	goto	u7581
  8548  001D46  EFA7  F00E         	goto	u7580
  8549  001D4A                     u7581:
  8550  001D4A  EFAB  F00E         	goto	l1330
  8551  001D4E                     u7580:
  8552  001D4E                     l6819:
  8553  001D4E  0E01               	movlw	1
  8554  001D50  6E35               	movwf	___fladd@aexp^0,c
  8555  001D52  EFB4  F00E         	goto	l1329
  8556  001D56                     l1330:
  8557  001D56  A028               	btfss	___fladd@b^0,0,c
  8558  001D58  EFB0  F00E         	goto	u7591
  8559  001D5C  EFB2  F00E         	goto	u7590
  8560  001D60                     u7591:
  8561  001D60  EFB4  F00E         	goto	l1329
  8562  001D64                     u7590:
  8563  001D64  EFA7  F00E         	goto	l6819
  8564  001D68                     l1329:
  8565  001D68  5035               	movf	___fladd@aexp^0,w,c
  8566  001D6A  B4D8               	btfsc	status,2,c
  8567  001D6C  EFBA  F00E         	goto	u7601
  8568  001D70  EFBC  F00E         	goto	u7600
  8569  001D74                     u7601:
  8570  001D74  EFE7  F00E         	goto	l6831
  8571  001D78                     u7600:
  8572  001D78  0E01               	movlw	1
  8573  001D7A  2628               	addwf	___fladd@b^0,f,c
  8574  001D7C  0E00               	movlw	0
  8575  001D7E  2229               	addwfc	(___fladd@b+1)^0,f,c
  8576  001D80  222A               	addwfc	(___fladd@b+2)^0,f,c
  8577  001D82  222B               	addwfc	(___fladd@b+3)^0,f,c
  8578  001D84  A02B               	btfss	(___fladd@b+3)^0,0,c
  8579  001D86  EFC7  F00E         	goto	u7611
  8580  001D8A  EFC9  F00E         	goto	u7610
  8581  001D8E                     u7611:
  8582  001D8E  EFE7  F00E         	goto	l6831
  8583  001D92                     u7610:
  8584  001D92  C028  F030         	movff	___fladd@b,??___fladd
  8585  001D96  C029  F031         	movff	___fladd@b+1,??___fladd+1
  8586  001D9A  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  8587  001D9E  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  8588  001DA2  3433               	rlcf	(??___fladd+3)^0,w,c
  8589  001DA4  3233               	rrcf	(??___fladd+3)^0,f,c
  8590  001DA6  3232               	rrcf	(??___fladd+2)^0,f,c
  8591  001DA8  3231               	rrcf	(??___fladd+1)^0,f,c
  8592  001DAA  3230               	rrcf	??___fladd^0,f,c
  8593  001DAC  C030  F028         	movff	??___fladd,___fladd@b
  8594  001DB0  C031  F029         	movff	??___fladd+1,___fladd@b+1
  8595  001DB4  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  8596  001DB8  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  8597  001DBC  2836               	incf	___fladd@bexp^0,w,c
  8598  001DBE  B4D8               	btfsc	status,2,c
  8599  001DC0  EFE4  F00E         	goto	u7621
  8600  001DC4  EFE6  F00E         	goto	u7620
  8601  001DC8                     u7621:
  8602  001DC8  EFE7  F00E         	goto	l6831
  8603  001DCC                     u7620:
  8604  001DCC  2A36               	incf	___fladd@bexp^0,f,c
  8605  001DCE                     l6831:
  8606  001DCE  2836               	incf	___fladd@bexp^0,w,c
  8607  001DD0  B4D8               	btfsc	status,2,c
  8608  001DD2  EFED  F00E         	goto	u7631
  8609  001DD6  EFEF  F00E         	goto	u7630
  8610  001DDA                     u7631:
  8611  001DDA  EFF7  F00E         	goto	l6835
  8612  001DDE                     u7630:
  8613  001DDE  5036               	movf	___fladd@bexp^0,w,c
  8614  001DE0  A4D8               	btfss	status,2,c
  8615  001DE2  EFF5  F00E         	goto	u7641
  8616  001DE6  EFF7  F00E         	goto	u7640
  8617  001DEA                     u7641:
  8618  001DEA  EF09  F00F         	goto	l6839
  8619  001DEE                     u7640:
  8620  001DEE                     l6835:
  8621  001DEE  0E00               	movlw	0
  8622  001DF0  6E28               	movwf	___fladd@b^0,c
  8623  001DF2  0E00               	movlw	0
  8624  001DF4  6E29               	movwf	(___fladd@b+1)^0,c
  8625  001DF6  0E00               	movlw	0
  8626  001DF8  6E2A               	movwf	(___fladd@b+2)^0,c
  8627  001DFA  0E00               	movlw	0
  8628  001DFC  6E2B               	movwf	(___fladd@b+3)^0,c
  8629  001DFE  5036               	movf	___fladd@bexp^0,w,c
  8630  001E00  A4D8               	btfss	status,2,c
  8631  001E02  EF05  F00F         	goto	u7651
  8632  001E06  EF07  F00F         	goto	u7650
  8633  001E0A                     u7651:
  8634  001E0A  EF09  F00F         	goto	l6839
  8635  001E0E                     u7650:
  8636  001E0E  0E00               	movlw	0
  8637  001E10  6E34               	movwf	___fladd@signs^0,c
  8638  001E12                     l6839:
  8639  001E12  A036               	btfss	___fladd@bexp^0,0,c
  8640  001E14  EF0E  F00F         	goto	u7661
  8641  001E18  EF10  F00F         	goto	u7660
  8642  001E1C                     u7661:
  8643  001E1C  EF13  F00F         	goto	l6843
  8644  001E20                     u7660:
  8645  001E20  8E2A               	bsf	(___fladd@b+2)^0,7,c
  8646  001E22  EF14  F00F         	goto	l6845
  8647  001E26                     l6843:
  8648  001E26  9E2A               	bcf	(___fladd@b+2)^0,7,c
  8649  001E28                     l6845:
  8650  001E28  90D8               	bcf	status,0,c
  8651  001E2A  3036               	rrcf	___fladd@bexp^0,w,c
  8652  001E2C  6E2B               	movwf	(___fladd@b+3)^0,c
  8653  001E2E  AE34               	btfss	___fladd@signs^0,7,c
  8654  001E30  EF1C  F00F         	goto	u7671
  8655  001E34  EF1E  F00F         	goto	u7670
  8656  001E38                     u7671:
  8657  001E38  EF1F  F00F         	goto	l6851
  8658  001E3C                     u7670:
  8659  001E3C  8E2B               	bsf	(___fladd@b+3)^0,7,c
  8660  001E3E                     l6851:
  8661  001E3E  C028  F028         	movff	___fladd@b,?___fladd
  8662  001E42  C029  F029         	movff	___fladd@b+1,?___fladd+1
  8663  001E46  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  8664  001E4A  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  8665  001E4E                     l1312:
  8666  001E4E  0012               	return		;funcret
  8667  001E50                     __end_of___fladd:
  8668                           	opt callstack 0
  8669                           
  8670 ;; *************** function _dameLecturaAdc *****************
  8671 ;; Defined at:
  8672 ;;		line 12 in file "./adc.h"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  canalLeer       1    wreg     unsigned char 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  canalLeer       1    9[COMRAM] unsigned char 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  2    5[COMRAM] short 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2, status,0
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8686 ;;      Params:         2       0       0       0       0       0       0       0       0
  8687 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8688 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8689 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8690 ;;Total ram usage:        5 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    2
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_probarSensores
  8697 ;;		_seLlegoAlDestino
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text36
  8702  0045EE                     __ptext36:
  8703                           	opt callstack 0
  8704  0045EE                     _dameLecturaAdc:
  8705                           	opt callstack 27
  8706                           
  8707                           ;incstack = 0
  8708                           ;dameLecturaAdc@canalLeer stored from wreg
  8709  0045EE  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
  8710  0045F0                     
  8711                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  8712  0045F0  0E06               	movlw	6
  8713  0045F2                     u10787:
  8714  0045F2  2EE8               	decfsz	wreg,f,c
  8715  0045F4  D7FE               	bra	u10787
  8716  0045F6  D000               	nop2	
  8717  0045F8                     
  8718                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
  8719  0045F8  80C2               	bsf	194,0,c	;volatile
  8720  0045FA                     
  8721                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
  8722  0045FA  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
  8723  0045FE  4608               	rlncf	??_dameLecturaAdc^0,f,c
  8724  004600  4608               	rlncf	??_dameLecturaAdc^0,f,c
  8725  004602  50C2               	movf	194,w,c	;volatile
  8726  004604  1808               	xorwf	??_dameLecturaAdc^0,w,c
  8727  004606  0BC3               	andlw	-61
  8728  004608  1808               	xorwf	??_dameLecturaAdc^0,w,c
  8729  00460A  6EC2               	movwf	194,c	;volatile
  8730  00460C                     
  8731                           ;./adc.h: 18:     ADCON0bits.GO = 1;
  8732  00460C  82C2               	bsf	194,1,c	;volatile
  8733  00460E                     
  8734                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
  8735  00460E  82C2               	bsf	194,1,c	;volatile
  8736  004610                     l227:
  8737  004610  B2C2               	btfsc	194,1,c	;volatile
  8738  004612  EF0D  F023         	goto	u10161
  8739  004616  EF0F  F023         	goto	u10160
  8740  00461A                     u10161:
  8741  00461A  EF08  F023         	goto	l227
  8742  00461E                     u10160:
  8743  00461E                     
  8744                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
  8745  00461E  90C2               	bcf	194,0,c	;volatile
  8746  004620                     
  8747                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
  8748  004620  50C4               	movf	196,w,c	;volatile
  8749  004622  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
  8750  004624  6A08               	clrf	??_dameLecturaAdc^0,c
  8751  004626  50C3               	movf	195,w,c	;volatile
  8752  004628  2408               	addwf	??_dameLecturaAdc^0,w,c
  8753  00462A  6E06               	movwf	?_dameLecturaAdc^0,c
  8754  00462C  0E00               	movlw	0
  8755  00462E  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
  8756  004630  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
  8757  004632  0012               	return		;funcret
  8758  004634                     __end_of_dameLecturaAdc:
  8759                           	opt callstack 0
  8760                           
  8761 ;; *************** function _inicializarComportamientoBasico *****************
  8762 ;; Defined at:
  8763 ;;		line 188 in file "main.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;		None
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;		None
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  1    wreg      void 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8777 ;;      Params:         0       0       0       0       0       0       0       0       0
  8778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8780 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8781 ;;Total ram usage:        0 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:    6
  8784 ;; This function calls:
  8785 ;;		_dameDistancia
  8786 ;;		_velocidadEstandar
  8787 ;; This function is called by:
  8788 ;;		_main
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text37
  8793  004558                     __ptext37:
  8794                           	opt callstack 0
  8795  004558                     _inicializarComportamientoBasico:
  8796                           	opt callstack 24
  8797  004558                     
  8798                           ;main.c: 190:     mouse.curr_state = ENFRENTE;
  8799  004558  0E01               	movlw	1
  8800  00455A  0100               	movlb	0	; () banked
  8801  00455C  6FFE               	movwf	_mouse& (0+255),b
  8802  00455E                     
  8803                           ; BSR set to: 0
  8804                           ;main.c: 192:     oldSensorDerecha = dameDistancia(DERECHA);
  8805  00455E  0E03               	movlw	3
  8806  004560  EC39  F01A         	call	_dameDistancia
  8807  004564  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  8808  004568  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  8809  00456C  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  8810  004570  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  8811  004574                     
  8812                           ;main.c: 193:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  8813  004574  0E02               	movlw	2
  8814  004576  EC39  F01A         	call	_dameDistancia
  8815  00457A  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  8816  00457E  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  8817  004582  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  8818  004586  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  8819  00458A                     
  8820                           ;main.c: 194:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  8821  00458A  0E01               	movlw	1
  8822  00458C  EC39  F01A         	call	_dameDistancia
  8823  004590  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  8824  004594  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  8825  004598  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  8826  00459C  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  8827  0045A0                     
  8828                           ;main.c: 196:     velocidadEstandar();
  8829  0045A0  ECFC  F023         	call	_velocidadEstandar	;wreg free
  8830  0045A4  0012               	return		;funcret
  8831  0045A6                     __end_of_inicializarComportamientoBasico:
  8832                           	opt callstack 0
  8833                           
  8834 ;; *************** function _velocidadEstandar *****************
  8835 ;; Defined at:
  8836 ;;		line 873 in file "main.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;		None
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;		None
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  1    wreg      void 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8850 ;;      Params:         0       0       0       0       0       0       0       0       0
  8851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8852 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8853 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8854 ;;Total ram usage:        0 bytes
  8855 ;; Hardware stack levels used:    1
  8856 ;; Hardware stack levels required when called:    5
  8857 ;; This function calls:
  8858 ;;		_pwmDuty
  8859 ;; This function is called by:
  8860 ;;		_inicializarComportamientoBasico
  8861 ;;		_comportamientoBasico
  8862 ;;		_regresarCruceAnterior
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text38
  8867  0047F8                     __ptext38:
  8868                           	opt callstack 0
  8869  0047F8                     _velocidadEstandar:
  8870                           	opt callstack 24
  8871  0047F8                     
  8872                           ;main.c: 874:     pwmDuty(70, 1);
  8873  0047F8  0E00               	movlw	0
  8874  0047FA  0100               	movlb	0	; () banked
  8875  0047FC  6F80               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8876  0047FE  0E46               	movlw	70
  8877  004800  6F7F               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8878  004802  0E01               	movlw	1
  8879  004804  6F81               	movwf	pwmDuty@channel& (0+255),b
  8880  004806  EC85  F015         	call	_pwmDuty	;wreg free
  8881                           
  8882                           ;main.c: 875:     pwmDuty(70, 2);
  8883  00480A  0E00               	movlw	0
  8884  00480C  0100               	movlb	0	; () banked
  8885  00480E  6F80               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8886  004810  0E46               	movlw	70
  8887  004812  6F7F               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8888  004814  0E02               	movlw	2
  8889  004816  6F81               	movwf	pwmDuty@channel& (0+255),b
  8890  004818  EC85  F015         	call	_pwmDuty	;wreg free
  8891  00481C  0012               	return		;funcret
  8892  00481E                     __end_of_velocidadEstandar:
  8893                           	opt callstack 0
  8894                           
  8895 ;; *************** function _pwmDuty *****************
  8896 ;; Defined at:
  8897 ;;		line 20 in file "./pwm.h"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  cicloTrabajo    2   31[BANK0 ] unsigned int 
  8900 ;;  channel         1   33[BANK0 ] unsigned char 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  duty            4   39[BANK0 ] long 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8912 ;;      Params:         0       3       0       0       0       0       0       0       0
  8913 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8914 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8915 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8916 ;;Total ram usage:       12 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:    4
  8919 ;; This function calls:
  8920 ;;		___fldiv
  8921 ;;		___flmul
  8922 ;;		___fltol
  8923 ;;		___xxtofl
  8924 ;;		_map
  8925 ;; This function is called by:
  8926 ;;		_velocidadEstandar
  8927 ;;		_PID
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931                           	psect	text39
  8932  002B0A                     __ptext39:
  8933                           	opt callstack 0
  8934  002B0A                     _pwmDuty:
  8935                           	opt callstack 24
  8936  002B0A                     
  8937                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  8938  002B0A  C07F  F020         	movff	pwmDuty@cicloTrabajo,map@x
  8939  002B0E  C080  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  8940  002B12  6A22               	clrf	(map@x+2)^0,c
  8941  002B14  6A23               	clrf	(map@x+3)^0,c
  8942  002B16  0E00               	movlw	0
  8943  002B18  6E24               	movwf	map@in_min^0,c
  8944  002B1A  0E00               	movlw	0
  8945  002B1C  6E25               	movwf	(map@in_min+1)^0,c
  8946  002B1E  0E00               	movlw	0
  8947  002B20  6E26               	movwf	(map@in_min+2)^0,c
  8948  002B22  0E00               	movlw	0
  8949  002B24  6E27               	movwf	(map@in_min+3)^0,c
  8950  002B26  0E64               	movlw	100
  8951  002B28  6E28               	movwf	map@in_max^0,c
  8952  002B2A  0E00               	movlw	0
  8953  002B2C  6E29               	movwf	(map@in_max+1)^0,c
  8954  002B2E  0E00               	movlw	0
  8955  002B30  6E2A               	movwf	(map@in_max+2)^0,c
  8956  002B32  0E00               	movlw	0
  8957  002B34  6E2B               	movwf	(map@in_max+3)^0,c
  8958  002B36  0E00               	movlw	0
  8959  002B38  6E2C               	movwf	map@out_min^0,c
  8960  002B3A  0E00               	movlw	0
  8961  002B3C  6E2D               	movwf	(map@out_min+1)^0,c
  8962  002B3E  0E00               	movlw	0
  8963  002B40  6E2E               	movwf	(map@out_min+2)^0,c
  8964  002B42  0E00               	movlw	0
  8965  002B44  6E2F               	movwf	(map@out_min+3)^0,c
  8966  002B46  0EFF               	movlw	255
  8967  002B48  6E30               	movwf	map@out_max^0,c
  8968  002B4A  0E03               	movlw	3
  8969  002B4C  6E31               	movwf	(map@out_max+1)^0,c
  8970  002B4E  0E00               	movlw	0
  8971  002B50  6E32               	movwf	(map@out_max+2)^0,c
  8972  002B52  0E00               	movlw	0
  8973  002B54  6E33               	movwf	(map@out_max+3)^0,c
  8974  002B56  EC36  F020         	call	_map	;wreg free
  8975  002B5A  C020  F087         	movff	?_map,pwmDuty@duty
  8976  002B5E  C021  F088         	movff	?_map+1,pwmDuty@duty+1
  8977  002B62  C022  F089         	movff	?_map+2,pwmDuty@duty+2
  8978  002B66  C023  F08A         	movff	?_map+3,pwmDuty@duty+3
  8979  002B6A                     
  8980                           ;./pwm.h: 24:     if (duty < 1024) {
  8981  002B6A  0100               	movlb	0	; () banked
  8982  002B6C  BF8A               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  8983  002B6E  EFC5  F015         	goto	u10000
  8984  002B72  518A               	movf	(pwmDuty@duty+3)& (0+255),w,b
  8985  002B74  1189               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  8986  002B76  E107               	bnz	u10001
  8987  002B78  0E04               	movlw	4
  8988  002B7A  5D88               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  8989  002B7C  B0D8               	btfsc	status,0,c
  8990  002B7E  EFC3  F015         	goto	u10001
  8991  002B82  EFC5  F015         	goto	u10000
  8992  002B86                     u10001:
  8993  002B86  EF62  F016         	goto	l143
  8994  002B8A                     u10000:
  8995  002B8A                     
  8996                           ; BSR set to: 0
  8997                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  8998  002B8A  0E00               	movlw	0
  8999  002B8C  6F64               	movwf	___flmul@a& (0+255),b
  9000  002B8E  0E00               	movlw	0
  9001  002B90  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9002  002B92  0EFA               	movlw	250
  9003  002B94  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9004  002B96  0E43               	movlw	67
  9005  002B98  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9006  002B9A  0E00               	movlw	0
  9007  002B9C  6E3C               	movwf	___fldiv@a^0,c
  9008  002B9E  0EC0               	movlw	192
  9009  002BA0  6E3D               	movwf	(___fldiv@a+1)^0,c
  9010  002BA2  0E7F               	movlw	127
  9011  002BA4  6E3E               	movwf	(___fldiv@a+2)^0,c
  9012  002BA6  0E44               	movlw	68
  9013  002BA8  6E3F               	movwf	(___fldiv@a+3)^0,c
  9014  002BAA  C087  F00D         	movff	pwmDuty@duty,___xxtofl@val
  9015  002BAE  C088  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  9016  002BB2  C089  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  9017  002BB6  C08A  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  9018  002BBA  0E01               	movlw	1
  9019  002BBC  EC63  F016         	call	___xxtofl
  9020  002BC0  C00D  F038         	movff	?___xxtofl,___fldiv@b
  9021  002BC4  C00E  F039         	movff	?___xxtofl+1,___fldiv@b+1
  9022  002BC8  C00F  F03A         	movff	?___xxtofl+2,___fldiv@b+2
  9023  002BCC  C010  F03B         	movff	?___xxtofl+3,___fldiv@b+3
  9024  002BD0  EC3E  F011         	call	___fldiv	;wreg free
  9025  002BD4  C038  F060         	movff	?___fldiv,___flmul@b
  9026  002BD8  C039  F061         	movff	?___fldiv+1,___flmul@b+1
  9027  002BDC  C03A  F062         	movff	?___fldiv+2,___flmul@b+2
  9028  002BE0  C03B  F063         	movff	?___fldiv+3,___flmul@b+3
  9029  002BE4  EC28  F00F         	call	___flmul	;wreg free
  9030  002BE8  C060  F075         	movff	?___flmul,___fltol@f1
  9031  002BEC  C061  F076         	movff	?___flmul+1,___fltol@f1+1
  9032  002BF0  C062  F077         	movff	?___flmul+2,___fltol@f1+2
  9033  002BF4  C063  F078         	movff	?___flmul+3,___fltol@f1+3
  9034  002BF8  EC70  F01B         	call	___fltol	;wreg free
  9035  002BFC  C075  F087         	movff	?___fltol,pwmDuty@duty
  9036  002C00  C076  F088         	movff	?___fltol+1,pwmDuty@duty+1
  9037  002C04  C077  F089         	movff	?___fltol+2,pwmDuty@duty+2
  9038  002C08  C078  F08A         	movff	?___fltol+3,pwmDuty@duty+3
  9039                           
  9040                           ;./pwm.h: 28:         switch (channel) {
  9041  002C0C  EF4C  F016         	goto	l8161
  9042  002C10                     l8155:
  9043                           
  9044                           ; BSR set to: 0
  9045                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  9046  002C10  0E02               	movlw	2
  9047  002C12  6F82               	movwf	??_pwmDuty& (0+255),b
  9048  002C14  C087  F083         	movff	pwmDuty@duty,??_pwmDuty+1
  9049  002C18  C088  F084         	movff	pwmDuty@duty+1,??_pwmDuty+2
  9050  002C1C  C089  F085         	movff	pwmDuty@duty+2,??_pwmDuty+3
  9051  002C20  C08A  F086         	movff	pwmDuty@duty+3,??_pwmDuty+4
  9052  002C24                     u10015:
  9053  002C24  6782               	tstfsz	??_pwmDuty& (0+255),b
  9054  002C26  EF17  F016         	goto	u10016
  9055  002C2A  EF1F  F016         	goto	u10017
  9056  002C2E                     u10016:
  9057  002C2E  3586               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  9058  002C30  3386               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  9059  002C32  3385               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  9060  002C34  3384               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  9061  002C36  3383               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  9062  002C38  2F82               	decfsz	??_pwmDuty& (0+255),f,b
  9063  002C3A  EF12  F016         	goto	u10015
  9064  002C3E                     u10017:
  9065  002C3E  0100               	movlb	0	; () banked
  9066  002C40  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9067  002C42  6EBE               	movwf	190,c	;volatile
  9068                           
  9069                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  9070  002C44  0ECF               	movlw	207
  9071  002C46  16BD               	andwf	189,f,c	;volatile
  9072                           
  9073                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  9074  002C48  3987               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  9075  002C4A  0BF0               	andlw	240
  9076  002C4C  0B30               	andlw	48
  9077  002C4E  12BD               	iorwf	189,f,c	;volatile
  9078                           
  9079                           ;./pwm.h: 34:                 break;
  9080  002C50  EF62  F016         	goto	l143
  9081  002C54                     l8157:
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  9085  002C54  0E02               	movlw	2
  9086  002C56  6F82               	movwf	??_pwmDuty& (0+255),b
  9087  002C58  C087  F083         	movff	pwmDuty@duty,??_pwmDuty+1
  9088  002C5C  C088  F084         	movff	pwmDuty@duty+1,??_pwmDuty+2
  9089  002C60  C089  F085         	movff	pwmDuty@duty+2,??_pwmDuty+3
  9090  002C64  C08A  F086         	movff	pwmDuty@duty+3,??_pwmDuty+4
  9091  002C68                     u10025:
  9092  002C68  6782               	tstfsz	??_pwmDuty& (0+255),b
  9093  002C6A  EF39  F016         	goto	u10026
  9094  002C6E  EF41  F016         	goto	u10027
  9095  002C72                     u10026:
  9096  002C72  3586               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  9097  002C74  3386               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  9098  002C76  3385               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  9099  002C78  3384               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  9100  002C7A  3383               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  9101  002C7C  2F82               	decfsz	??_pwmDuty& (0+255),f,b
  9102  002C7E  EF34  F016         	goto	u10025
  9103  002C82                     u10027:
  9104  002C82  0100               	movlb	0	; () banked
  9105  002C84  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9106  002C86  6EBB               	movwf	187,c	;volatile
  9107                           
  9108                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  9109  002C88  0ECF               	movlw	207
  9110  002C8A  16BA               	andwf	186,f,c	;volatile
  9111                           
  9112                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  9113  002C8C  3987               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  9114  002C8E  0BF0               	andlw	240
  9115  002C90  0B30               	andlw	48
  9116  002C92  12BA               	iorwf	186,f,c	;volatile
  9117                           
  9118                           ;./pwm.h: 40:                 break;
  9119  002C94  EF62  F016         	goto	l143
  9120  002C98                     l8161:
  9121  002C98  0100               	movlb	0	; () banked
  9122  002C9A  5181               	movf	pwmDuty@channel& (0+255),w,b
  9123  002C9C  6F82               	movwf	??_pwmDuty& (0+255),b
  9124  002C9E  6B83               	clrf	(??_pwmDuty+1)& (0+255),b
  9125                           
  9126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9127                           ; Switch size 1, requested type "simple"
  9128                           ; Number of cases is 1, Range of values is 0 to 0
  9129                           ; switch strategies available:
  9130                           ; Name         Instructions Cycles
  9131                           ; simple_byte            4     3 (average)
  9132                           ;	Chosen strategy is simple_byte
  9133  002CA0  5183               	movf	(??_pwmDuty+1)& (0+255),w,b
  9134  002CA2  0A00               	xorlw	0	; case 0
  9135  002CA4  B4D8               	btfsc	status,2,c
  9136  002CA6  EF57  F016         	goto	l9047
  9137  002CAA  EF62  F016         	goto	l143
  9138  002CAE                     l9047:
  9139                           
  9140                           ; BSR set to: 0
  9141                           ; Switch size 1, requested type "simple"
  9142                           ; Number of cases is 2, Range of values is 1 to 2
  9143                           ; switch strategies available:
  9144                           ; Name         Instructions Cycles
  9145                           ; simple_byte            7     4 (average)
  9146                           ;	Chosen strategy is simple_byte
  9147  002CAE  5182               	movf	??_pwmDuty& (0+255),w,b
  9148  002CB0  0A01               	xorlw	1	; case 1
  9149  002CB2  B4D8               	btfsc	status,2,c
  9150  002CB4  EF08  F016         	goto	l8155
  9151  002CB8  0A03               	xorlw	3	; case 2
  9152  002CBA  B4D8               	btfsc	status,2,c
  9153  002CBC  EF2A  F016         	goto	l8157
  9154  002CC0  EF62  F016         	goto	l143
  9155  002CC4                     l143:
  9156                           
  9157                           ; BSR set to: 0
  9158  002CC4  0012               	return		;funcret
  9159  002CC6                     __end_of_pwmDuty:
  9160                           	opt callstack 0
  9161                           
  9162 ;; *************** function _map *****************
  9163 ;; Defined at:
  9164 ;;		line 16 in file "./pwm.h"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  x               4   31[COMRAM] long 
  9167 ;;  in_min          4   35[COMRAM] long 
  9168 ;;  in_max          4   39[COMRAM] long 
  9169 ;;  out_min         4   43[COMRAM] long 
  9170 ;;  out_max         4   47[COMRAM] long 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;		None
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  4   31[COMRAM] long 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9182 ;;      Params:        20       0       0       0       0       0       0       0       0
  9183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9185 ;;      Totals:        20       0       0       0       0       0       0       0       0
  9186 ;;Total ram usage:       20 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    3
  9189 ;; This function calls:
  9190 ;;		___aldiv
  9191 ;;		___lmul
  9192 ;; This function is called by:
  9193 ;;		_pwmDuty
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text40
  9198  00406C                     __ptext40:
  9199                           	opt callstack 0
  9200  00406C                     _map:
  9201                           	opt callstack 24
  9202  00406C                     
  9203                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  9204  00406C  5024               	movf	map@in_min^0,w,c
  9205  00406E  5C20               	subwf	map@x^0,w,c
  9206  004070  6E06               	movwf	___lmul@multiplier^0,c
  9207  004072  5025               	movf	(map@in_min+1)^0,w,c
  9208  004074  5821               	subwfb	(map@x+1)^0,w,c
  9209  004076  6E07               	movwf	(___lmul@multiplier+1)^0,c
  9210  004078  5026               	movf	(map@in_min+2)^0,w,c
  9211  00407A  5822               	subwfb	(map@x+2)^0,w,c
  9212  00407C  6E08               	movwf	(___lmul@multiplier+2)^0,c
  9213  00407E  5027               	movf	(map@in_min+3)^0,w,c
  9214  004080  5823               	subwfb	(map@x+3)^0,w,c
  9215  004082  6E09               	movwf	(___lmul@multiplier+3)^0,c
  9216  004084  502C               	movf	map@out_min^0,w,c
  9217  004086  5C30               	subwf	map@out_max^0,w,c
  9218  004088  6E0A               	movwf	___lmul@multiplicand^0,c
  9219  00408A  502D               	movf	(map@out_min+1)^0,w,c
  9220  00408C  5831               	subwfb	(map@out_max+1)^0,w,c
  9221  00408E  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  9222  004090  502E               	movf	(map@out_min+2)^0,w,c
  9223  004092  5832               	subwfb	(map@out_max+2)^0,w,c
  9224  004094  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  9225  004096  502F               	movf	(map@out_min+3)^0,w,c
  9226  004098  5833               	subwfb	(map@out_max+3)^0,w,c
  9227  00409A  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  9228  00409C  EC1A  F021         	call	___lmul	;wreg free
  9229  0040A0  C006  F012         	movff	?___lmul,___aldiv@dividend
  9230  0040A4  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  9231  0040A8  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  9232  0040AC  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  9233  0040B0  5024               	movf	map@in_min^0,w,c
  9234  0040B2  5C28               	subwf	map@in_max^0,w,c
  9235  0040B4  6E16               	movwf	___aldiv@divisor^0,c
  9236  0040B6  5025               	movf	(map@in_min+1)^0,w,c
  9237  0040B8  5829               	subwfb	(map@in_max+1)^0,w,c
  9238  0040BA  6E17               	movwf	(___aldiv@divisor+1)^0,c
  9239  0040BC  5026               	movf	(map@in_min+2)^0,w,c
  9240  0040BE  582A               	subwfb	(map@in_max+2)^0,w,c
  9241  0040C0  6E18               	movwf	(___aldiv@divisor+2)^0,c
  9242  0040C2  5027               	movf	(map@in_min+3)^0,w,c
  9243  0040C4  582B               	subwfb	(map@in_max+3)^0,w,c
  9244  0040C6  6E19               	movwf	(___aldiv@divisor+3)^0,c
  9245  0040C8  ECEA  F01A         	call	___aldiv	;wreg free
  9246  0040CC  502C               	movf	map@out_min^0,w,c
  9247  0040CE  2412               	addwf	?___aldiv^0,w,c
  9248  0040D0  6E20               	movwf	?_map^0,c
  9249  0040D2  502D               	movf	(map@out_min+1)^0,w,c
  9250  0040D4  2013               	addwfc	(?___aldiv+1)^0,w,c
  9251  0040D6  6E21               	movwf	(?_map+1)^0,c
  9252  0040D8  502E               	movf	(map@out_min+2)^0,w,c
  9253  0040DA  2014               	addwfc	(?___aldiv+2)^0,w,c
  9254  0040DC  6E22               	movwf	(?_map+2)^0,c
  9255  0040DE  502F               	movf	(map@out_min+3)^0,w,c
  9256  0040E0  2015               	addwfc	(?___aldiv+3)^0,w,c
  9257  0040E2  6E23               	movwf	(?_map+3)^0,c
  9258  0040E4  0012               	return		;funcret
  9259  0040E6                     __end_of_map:
  9260                           	opt callstack 0
  9261                           
  9262 ;; *************** function ___lmul *****************
  9263 ;; Defined at:
  9264 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  multiplier      4    5[COMRAM] unsigned long 
  9267 ;;  multiplicand    4    9[COMRAM] unsigned long 
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;  product         4   13[COMRAM] unsigned long 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  4    5[COMRAM] unsigned long 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2, status,0
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9279 ;;      Params:         8       0       0       0       0       0       0       0       0
  9280 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9282 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9283 ;;Total ram usage:       12 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    2
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		_map
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text41
  9294  004234                     __ptext41:
  9295                           	opt callstack 0
  9296  004234                     ___lmul:
  9297                           	opt callstack 24
  9298  004234  0E00               	movlw	0
  9299  004236  6E0E               	movwf	___lmul@product^0,c
  9300  004238  0E00               	movlw	0
  9301  00423A  6E0F               	movwf	(___lmul@product+1)^0,c
  9302  00423C  0E00               	movlw	0
  9303  00423E  6E10               	movwf	(___lmul@product+2)^0,c
  9304  004240  0E00               	movlw	0
  9305  004242  6E11               	movwf	(___lmul@product+3)^0,c
  9306  004244                     l8015:
  9307  004244  A006               	btfss	___lmul@multiplier^0,0,c
  9308  004246  EF27  F021         	goto	u9771
  9309  00424A  EF29  F021         	goto	u9770
  9310  00424E                     u9771:
  9311  00424E  EF31  F021         	goto	l8019
  9312  004252                     u9770:
  9313  004252  500A               	movf	___lmul@multiplicand^0,w,c
  9314  004254  260E               	addwf	___lmul@product^0,f,c
  9315  004256  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  9316  004258  220F               	addwfc	(___lmul@product+1)^0,f,c
  9317  00425A  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  9318  00425C  2210               	addwfc	(___lmul@product+2)^0,f,c
  9319  00425E  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  9320  004260  2211               	addwfc	(___lmul@product+3)^0,f,c
  9321  004262                     l8019:
  9322  004262  90D8               	bcf	status,0,c
  9323  004264  360A               	rlcf	___lmul@multiplicand^0,f,c
  9324  004266  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9325  004268  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9326  00426A  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9327  00426C  90D8               	bcf	status,0,c
  9328  00426E  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  9329  004270  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  9330  004272  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  9331  004274  3206               	rrcf	___lmul@multiplier^0,f,c
  9332  004276  5006               	movf	___lmul@multiplier^0,w,c
  9333  004278  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  9334  00427A  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  9335  00427C  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  9336  00427E  A4D8               	btfss	status,2,c
  9337  004280  EF44  F021         	goto	u9781
  9338  004284  EF46  F021         	goto	u9780
  9339  004288                     u9781:
  9340  004288  EF22  F021         	goto	l8015
  9341  00428C                     u9780:
  9342  00428C  C00E  F006         	movff	___lmul@product,?___lmul
  9343  004290  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  9344  004294  C010  F008         	movff	___lmul@product+2,?___lmul+2
  9345  004298  C011  F009         	movff	___lmul@product+3,?___lmul+3
  9346  00429C  0012               	return		;funcret
  9347  00429E                     __end_of___lmul:
  9348                           	opt callstack 0
  9349                           
  9350 ;; *************** function ___fltol *****************
  9351 ;; Defined at:
  9352 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  f1              4   21[BANK0 ] unsigned long 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  exp1            1   30[BANK0 ] unsigned char 
  9357 ;;  sign1           1   29[BANK0 ] unsigned char 
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  4   21[BANK0 ] long 
  9360 ;; Registers used:
  9361 ;;		wreg, status,2, status,0
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9367 ;;      Params:         0       4       0       0       0       0       0       0       0
  9368 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9369 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9370 ;;      Totals:         0      10       0       0       0       0       0       0       0
  9371 ;;Total ram usage:       10 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:    2
  9374 ;; This function calls:
  9375 ;;		Nothing
  9376 ;; This function is called by:
  9377 ;;		_pwmDuty
  9378 ;;		_efgtoa
  9379 ;;		_PID
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text42
  9384  0036E0                     __ptext42:
  9385                           	opt callstack 0
  9386  0036E0                     ___fltol:
  9387                           	opt callstack 23
  9388  0036E0  0100               	movlb	0	; () banked
  9389  0036E2  3577               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9390  0036E4  3578               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9391  0036E6  6F7E               	movwf	___fltol@exp1& (0+255),b
  9392  0036E8  517E               	movf	___fltol@exp1& (0+255),w,b
  9393  0036EA  A4D8               	btfss	status,2,c
  9394  0036EC  EF7A  F01B         	goto	u8731
  9395  0036F0  EF7C  F01B         	goto	u8730
  9396  0036F4                     u8731:
  9397  0036F4  EF86  F01B         	goto	l7441
  9398  0036F8                     u8730:
  9399  0036F8                     l7437:
  9400                           
  9401                           ; BSR set to: 0
  9402  0036F8  0E00               	movlw	0
  9403  0036FA  6F75               	movwf	?___fltol& (0+255),b
  9404  0036FC  0E00               	movlw	0
  9405  0036FE  6F76               	movwf	(?___fltol+1)& (0+255),b
  9406  003700  0E00               	movlw	0
  9407  003702  6F77               	movwf	(?___fltol+2)& (0+255),b
  9408  003704  0E00               	movlw	0
  9409  003706  6F78               	movwf	(?___fltol+3)& (0+255),b
  9410  003708  EFF3  F01B         	goto	l1072
  9411  00370C                     l7441:
  9412                           
  9413                           ; BSR set to: 0
  9414  00370C  C075  F079         	movff	___fltol@f1,??___fltol
  9415  003710  C076  F07A         	movff	___fltol@f1+1,??___fltol+1
  9416  003714  C077  F07B         	movff	___fltol@f1+2,??___fltol+2
  9417  003718  C078  F07C         	movff	___fltol@f1+3,??___fltol+3
  9418  00371C  0E20               	movlw	32
  9419  00371E  EF96  F01B         	goto	u8740
  9420  003722                     u8745:
  9421  003722  90D8               	bcf	status,0,c
  9422  003724  337C               	rrcf	(??___fltol+3)& (0+255),f,b
  9423  003726  337B               	rrcf	(??___fltol+2)& (0+255),f,b
  9424  003728  337A               	rrcf	(??___fltol+1)& (0+255),f,b
  9425  00372A  3379               	rrcf	??___fltol& (0+255),f,b
  9426  00372C                     u8740:
  9427  00372C  2EE8               	decfsz	wreg,f,c
  9428  00372E  EF91  F01B         	goto	u8745
  9429  003732  5179               	movf	??___fltol& (0+255),w,b
  9430  003734  6F7D               	movwf	___fltol@sign1& (0+255),b
  9431  003736                     
  9432                           ; BSR set to: 0
  9433  003736  8F77               	bsf	(___fltol@f1+2)& (0+255),7,b
  9434  003738                     
  9435                           ; BSR set to: 0
  9436  003738  0EFF               	movlw	255
  9437  00373A  1775               	andwf	___fltol@f1& (0+255),f,b
  9438  00373C  0EFF               	movlw	255
  9439  00373E  1776               	andwf	(___fltol@f1+1)& (0+255),f,b
  9440  003740  0EFF               	movlw	255
  9441  003742  1777               	andwf	(___fltol@f1+2)& (0+255),f,b
  9442  003744  0E00               	movlw	0
  9443  003746  1778               	andwf	(___fltol@f1+3)& (0+255),f,b
  9444  003748                     
  9445                           ; BSR set to: 0
  9446  003748  0E96               	movlw	150
  9447  00374A  5F7E               	subwf	___fltol@exp1& (0+255),f,b
  9448  00374C                     
  9449                           ; BSR set to: 0
  9450  00374C  BF7E               	btfsc	___fltol@exp1& (0+255),7,b
  9451  00374E  EFAD  F01B         	goto	u8750
  9452  003752  EFAB  F01B         	goto	u8751
  9453  003756                     u8751:
  9454  003756  EFC3  F01B         	goto	l7461
  9455  00375A                     u8750:
  9456  00375A                     
  9457                           ; BSR set to: 0
  9458  00375A  517E               	movf	___fltol@exp1& (0+255),w,b
  9459  00375C  0A80               	xorlw	128
  9460  00375E  0F97               	addlw	151
  9461  003760  B0D8               	btfsc	status,0,c
  9462  003762  EFB5  F01B         	goto	u8761
  9463  003766  EFB7  F01B         	goto	u8760
  9464  00376A                     u8761:
  9465  00376A  EFB9  F01B         	goto	l7457
  9466  00376E                     u8760:
  9467  00376E  EF7C  F01B         	goto	l7437
  9468  003772                     l7457:
  9469                           
  9470                           ; BSR set to: 0
  9471  003772  90D8               	bcf	status,0,c
  9472  003774  3378               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9473  003776  3377               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9474  003778  3376               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9475  00377A  3375               	rrcf	___fltol@f1& (0+255),f,b
  9476  00377C                     
  9477                           ; BSR set to: 0
  9478  00377C  3F7E               	incfsz	___fltol@exp1& (0+255),f,b
  9479  00377E  EFB9  F01B         	goto	l7457
  9480  003782  EFDB  F01B         	goto	l7471
  9481  003786                     l7461:
  9482                           
  9483                           ; BSR set to: 0
  9484  003786  0E1F               	movlw	31
  9485  003788  657E               	cpfsgt	___fltol@exp1& (0+255),b
  9486  00378A  EFC9  F01B         	goto	u8771
  9487  00378E  EFCB  F01B         	goto	u8770
  9488  003792                     u8771:
  9489  003792  EFD3  F01B         	goto	l7469
  9490  003796                     u8770:
  9491  003796  EF7C  F01B         	goto	l7437
  9492  00379A                     l7467:
  9493                           
  9494                           ; BSR set to: 0
  9495  00379A  90D8               	bcf	status,0,c
  9496  00379C  3775               	rlcf	___fltol@f1& (0+255),f,b
  9497  00379E  3776               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9498  0037A0  3777               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9499  0037A2  3778               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9500  0037A4  077E               	decf	___fltol@exp1& (0+255),f,b
  9501  0037A6                     l7469:
  9502                           
  9503                           ; BSR set to: 0
  9504  0037A6  517E               	movf	___fltol@exp1& (0+255),w,b
  9505  0037A8  A4D8               	btfss	status,2,c
  9506  0037AA  EFD9  F01B         	goto	u8781
  9507  0037AE  EFDB  F01B         	goto	u8780
  9508  0037B2                     u8781:
  9509  0037B2  EFCD  F01B         	goto	l7467
  9510  0037B6                     u8780:
  9511  0037B6                     l7471:
  9512                           
  9513                           ; BSR set to: 0
  9514  0037B6  517D               	movf	___fltol@sign1& (0+255),w,b
  9515  0037B8  B4D8               	btfsc	status,2,c
  9516  0037BA  EFE1  F01B         	goto	u8791
  9517  0037BE  EFE3  F01B         	goto	u8790
  9518  0037C2                     u8791:
  9519  0037C2  EFEB  F01B         	goto	l7475
  9520  0037C6                     u8790:
  9521  0037C6                     
  9522                           ; BSR set to: 0
  9523  0037C6  1F78               	comf	(___fltol@f1+3)& (0+255),f,b
  9524  0037C8  1F77               	comf	(___fltol@f1+2)& (0+255),f,b
  9525  0037CA  1F76               	comf	(___fltol@f1+1)& (0+255),f,b
  9526  0037CC  6D75               	negf	___fltol@f1& (0+255),b
  9527  0037CE  0E00               	movlw	0
  9528  0037D0  2376               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9529  0037D2  2377               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9530  0037D4  2378               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9531  0037D6                     l7475:
  9532                           
  9533                           ; BSR set to: 0
  9534  0037D6  C075  F075         	movff	___fltol@f1,?___fltol
  9535  0037DA  C076  F076         	movff	___fltol@f1+1,?___fltol+1
  9536  0037DE  C077  F077         	movff	___fltol@f1+2,?___fltol+2
  9537  0037E2  C078  F078         	movff	___fltol@f1+3,?___fltol+3
  9538  0037E6                     l1072:
  9539                           
  9540                           ; BSR set to: 0
  9541  0037E6  0012               	return		;funcret
  9542  0037E8                     __end_of___fltol:
  9543                           	opt callstack 0
  9544                           
  9545 ;; *************** function ___flmul *****************
  9546 ;; Defined at:
  9547 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  b               4    0[BANK0 ] long 
  9550 ;;  a               4    4[BANK0 ] long 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;  prod            4   15[BANK0 ] struct .
  9553 ;;  grs             4   10[BANK0 ] unsigned long 
  9554 ;;  temp            2   19[BANK0 ] struct .
  9555 ;;  bexp            1   14[BANK0 ] unsigned char 
  9556 ;;  aexp            1    9[BANK0 ] unsigned char 
  9557 ;;  sign            1    8[BANK0 ] unsigned char 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  4    0[BANK0 ] unsigned char 
  9560 ;; Registers used:
  9561 ;;		wreg, status,2, status,0, prodl, prodh
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9567 ;;      Params:         0       8       0       0       0       0       0       0       0
  9568 ;;      Locals:         0      13       0       0       0       0       0       0       0
  9569 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9570 ;;      Totals:         4      21       0       0       0       0       0       0       0
  9571 ;;Total ram usage:       25 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; Hardware stack levels required when called:    2
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_pwmDuty
  9578 ;;		_efgtoa
  9579 ;;		_PID
  9580 ;;		_roundf
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           	psect	text43
  9585  001E50                     __ptext43:
  9586                           	opt callstack 0
  9587  001E50                     ___flmul:
  9588                           	opt callstack 23
  9589  001E50  0100               	movlb	0	; () banked
  9590  001E52  5163               	movf	(___flmul@b+3)& (0+255),w,b
  9591  001E54  0B80               	andlw	128
  9592  001E56  6F68               	movwf	___flmul@sign& (0+255),b
  9593  001E58  5163               	movf	(___flmul@b+3)& (0+255),w,b
  9594  001E5A  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  9595  001E5C  6F6E               	movwf	___flmul@bexp& (0+255),b
  9596  001E5E                     
  9597                           ; BSR set to: 0
  9598  001E5E  AF62               	btfss	(___flmul@b+2)& (0+255),7,b
  9599  001E60  EF34  F00F         	goto	u8331
  9600  001E64  EF36  F00F         	goto	u8330
  9601  001E68                     u8331:
  9602  001E68  EF37  F00F         	goto	l7179
  9603  001E6C                     u8330:
  9604  001E6C                     
  9605                           ; BSR set to: 0
  9606  001E6C  816E               	bsf	___flmul@bexp& (0+255),0,b
  9607  001E6E                     l7179:
  9608                           
  9609                           ; BSR set to: 0
  9610  001E6E  516E               	movf	___flmul@bexp& (0+255),w,b
  9611  001E70  B4D8               	btfsc	status,2,c
  9612  001E72  EF3D  F00F         	goto	u8341
  9613  001E76  EF3F  F00F         	goto	u8340
  9614  001E7A                     u8341:
  9615  001E7A  EF52  F00F         	goto	l7187
  9616  001E7E                     u8340:
  9617  001E7E                     
  9618                           ; BSR set to: 0
  9619  001E7E  296E               	incf	___flmul@bexp& (0+255),w,b
  9620  001E80  A4D8               	btfss	status,2,c
  9621  001E82  EF45  F00F         	goto	u8351
  9622  001E86  EF47  F00F         	goto	u8350
  9623  001E8A                     u8351:
  9624  001E8A  EF4F  F00F         	goto	l7185
  9625  001E8E                     u8350:
  9626  001E8E                     
  9627                           ; BSR set to: 0
  9628  001E8E  0E00               	movlw	0
  9629  001E90  6F60               	movwf	___flmul@b& (0+255),b
  9630  001E92  0E00               	movlw	0
  9631  001E94  6F61               	movwf	(___flmul@b+1)& (0+255),b
  9632  001E96  0E00               	movlw	0
  9633  001E98  6F62               	movwf	(___flmul@b+2)& (0+255),b
  9634  001E9A  0E00               	movlw	0
  9635  001E9C  6F63               	movwf	(___flmul@b+3)& (0+255),b
  9636  001E9E                     l7185:
  9637                           
  9638                           ; BSR set to: 0
  9639  001E9E  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  9640  001EA0  EF5A  F00F         	goto	l7189
  9641  001EA4                     l7187:
  9642                           
  9643                           ; BSR set to: 0
  9644  001EA4  0E00               	movlw	0
  9645  001EA6  6F60               	movwf	___flmul@b& (0+255),b
  9646  001EA8  0E00               	movlw	0
  9647  001EAA  6F61               	movwf	(___flmul@b+1)& (0+255),b
  9648  001EAC  0E00               	movlw	0
  9649  001EAE  6F62               	movwf	(___flmul@b+2)& (0+255),b
  9650  001EB0  0E00               	movlw	0
  9651  001EB2  6F63               	movwf	(___flmul@b+3)& (0+255),b
  9652  001EB4                     l7189:
  9653                           
  9654                           ; BSR set to: 0
  9655  001EB4  5167               	movf	(___flmul@a+3)& (0+255),w,b
  9656  001EB6  0B80               	andlw	128
  9657  001EB8  1B68               	xorwf	___flmul@sign& (0+255),f,b
  9658  001EBA                     
  9659                           ; BSR set to: 0
  9660  001EBA  5167               	movf	(___flmul@a+3)& (0+255),w,b
  9661  001EBC  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  9662  001EBE  6F69               	movwf	___flmul@aexp& (0+255),b
  9663  001EC0                     
  9664                           ; BSR set to: 0
  9665  001EC0  AF66               	btfss	(___flmul@a+2)& (0+255),7,b
  9666  001EC2  EF65  F00F         	goto	u8361
  9667  001EC6  EF67  F00F         	goto	u8360
  9668  001ECA                     u8361:
  9669  001ECA  EF68  F00F         	goto	l7197
  9670  001ECE                     u8360:
  9671  001ECE                     
  9672                           ; BSR set to: 0
  9673  001ECE  8169               	bsf	___flmul@aexp& (0+255),0,b
  9674  001ED0                     l7197:
  9675                           
  9676                           ; BSR set to: 0
  9677  001ED0  5169               	movf	___flmul@aexp& (0+255),w,b
  9678  001ED2  B4D8               	btfsc	status,2,c
  9679  001ED4  EF6E  F00F         	goto	u8371
  9680  001ED8  EF70  F00F         	goto	u8370
  9681  001EDC                     u8371:
  9682  001EDC  EF83  F00F         	goto	l7205
  9683  001EE0                     u8370:
  9684  001EE0                     
  9685                           ; BSR set to: 0
  9686  001EE0  2969               	incf	___flmul@aexp& (0+255),w,b
  9687  001EE2  A4D8               	btfss	status,2,c
  9688  001EE4  EF76  F00F         	goto	u8381
  9689  001EE8  EF78  F00F         	goto	u8380
  9690  001EEC                     u8381:
  9691  001EEC  EF80  F00F         	goto	l7203
  9692  001EF0                     u8380:
  9693  001EF0                     
  9694                           ; BSR set to: 0
  9695  001EF0  0E00               	movlw	0
  9696  001EF2  6F64               	movwf	___flmul@a& (0+255),b
  9697  001EF4  0E00               	movlw	0
  9698  001EF6  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9699  001EF8  0E00               	movlw	0
  9700  001EFA  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9701  001EFC  0E00               	movlw	0
  9702  001EFE  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9703  001F00                     l7203:
  9704                           
  9705                           ; BSR set to: 0
  9706  001F00  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  9707  001F02  EF8B  F00F         	goto	l1389
  9708  001F06                     l7205:
  9709                           
  9710                           ; BSR set to: 0
  9711  001F06  0E00               	movlw	0
  9712  001F08  6F64               	movwf	___flmul@a& (0+255),b
  9713  001F0A  0E00               	movlw	0
  9714  001F0C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9715  001F0E  0E00               	movlw	0
  9716  001F10  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9717  001F12  0E00               	movlw	0
  9718  001F14  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9719  001F16                     l1389:
  9720                           
  9721                           ; BSR set to: 0
  9722  001F16  5169               	movf	___flmul@aexp& (0+255),w,b
  9723  001F18  B4D8               	btfsc	status,2,c
  9724  001F1A  EF91  F00F         	goto	u8391
  9725  001F1E  EF93  F00F         	goto	u8390
  9726  001F22                     u8391:
  9727  001F22  EF9B  F00F         	goto	l7209
  9728  001F26                     u8390:
  9729  001F26                     
  9730                           ; BSR set to: 0
  9731  001F26  516E               	movf	___flmul@bexp& (0+255),w,b
  9732  001F28  A4D8               	btfss	status,2,c
  9733  001F2A  EF99  F00F         	goto	u8401
  9734  001F2E  EF9B  F00F         	goto	u8400
  9735  001F32                     u8401:
  9736  001F32  EFA5  F00F         	goto	l7213
  9737  001F36                     u8400:
  9738  001F36                     l7209:
  9739                           
  9740                           ; BSR set to: 0
  9741  001F36  0E00               	movlw	0
  9742  001F38  6F60               	movwf	?___flmul& (0+255),b
  9743  001F3A  0E00               	movlw	0
  9744  001F3C  6F61               	movwf	(?___flmul+1)& (0+255),b
  9745  001F3E  0E00               	movlw	0
  9746  001F40  6F62               	movwf	(?___flmul+2)& (0+255),b
  9747  001F42  0E00               	movlw	0
  9748  001F44  6F63               	movwf	(?___flmul+3)& (0+255),b
  9749  001F46  EF3D  F011         	goto	l1393
  9750  001F4A                     l7213:
  9751                           
  9752                           ; BSR set to: 0
  9753  001F4A  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9754  001F4C  0360               	mulwf	___flmul@b& (0+255),b
  9755  001F4E  CFF3 F073          	movff	prodl,___flmul@temp
  9756  001F52  CFF4 F074          	movff	prodh,___flmul@temp+1
  9757  001F56                     
  9758                           ; BSR set to: 0
  9759  001F56  5173               	movf	___flmul@temp& (0+255),w,b
  9760  001F58  6F6A               	movwf	___flmul@grs& (0+255),b
  9761  001F5A  6B6B               	clrf	(___flmul@grs+1)& (0+255),b
  9762  001F5C  6B6C               	clrf	(___flmul@grs+2)& (0+255),b
  9763  001F5E  6B6D               	clrf	(___flmul@grs+3)& (0+255),b
  9764  001F60                     
  9765                           ; BSR set to: 0
  9766  001F60  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9767  001F62  6F6F               	movwf	___flmul@prod& (0+255),b
  9768  001F64  6B70               	clrf	(___flmul@prod+1)& (0+255),b
  9769  001F66  6B71               	clrf	(___flmul@prod+2)& (0+255),b
  9770  001F68  6B72               	clrf	(___flmul@prod+3)& (0+255),b
  9771  001F6A  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9772  001F6C  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9773  001F6E  CFF3 F073          	movff	prodl,___flmul@temp
  9774  001F72  CFF4 F074          	movff	prodh,___flmul@temp+1
  9775  001F76                     
  9776                           ; BSR set to: 0
  9777  001F76  5173               	movf	___flmul@temp& (0+255),w,b
  9778  001F78  276A               	addwf	___flmul@grs& (0+255),f,b
  9779  001F7A  0E00               	movlw	0
  9780  001F7C  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9781  001F7E  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9782  001F80  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9783  001F82                     
  9784                           ; BSR set to: 0
  9785  001F82  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9786  001F84  276F               	addwf	___flmul@prod& (0+255),f,b
  9787  001F86  0E00               	movlw	0
  9788  001F88  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9789  001F8A  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9790  001F8C  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9791  001F8E  5164               	movf	___flmul@a& (0+255),w,b
  9792  001F90  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9793  001F92  CFF3 F073          	movff	prodl,___flmul@temp
  9794  001F96  CFF4 F074          	movff	prodh,___flmul@temp+1
  9795  001F9A                     
  9796                           ; BSR set to: 0
  9797  001F9A  5173               	movf	___flmul@temp& (0+255),w,b
  9798  001F9C  276A               	addwf	___flmul@grs& (0+255),f,b
  9799  001F9E  0E00               	movlw	0
  9800  001FA0  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9801  001FA2  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9802  001FA4  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9803  001FA6                     
  9804                           ; BSR set to: 0
  9805  001FA6  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9806  001FA8  276F               	addwf	___flmul@prod& (0+255),f,b
  9807  001FAA  0E00               	movlw	0
  9808  001FAC  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9809  001FAE  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9810  001FB0  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9811  001FB2                     
  9812                           ; BSR set to: 0
  9813  001FB2  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
  9814  001FB6  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
  9815  001FBA  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
  9816  001FBE  6B6A               	clrf	___flmul@grs& (0+255),b
  9817  001FC0                     
  9818                           ; BSR set to: 0
  9819  001FC0  5164               	movf	___flmul@a& (0+255),w,b
  9820  001FC2  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9821  001FC4  CFF3 F073          	movff	prodl,___flmul@temp
  9822  001FC8  CFF4 F074          	movff	prodh,___flmul@temp+1
  9823  001FCC                     
  9824                           ; BSR set to: 0
  9825  001FCC  5173               	movf	___flmul@temp& (0+255),w,b
  9826  001FCE  276A               	addwf	___flmul@grs& (0+255),f,b
  9827  001FD0  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9828  001FD2  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9829  001FD4  0E00               	movlw	0
  9830  001FD6  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9831  001FD8  0E00               	movlw	0
  9832  001FDA  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9833  001FDC                     
  9834                           ; BSR set to: 0
  9835  001FDC  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9836  001FDE  0360               	mulwf	___flmul@b& (0+255),b
  9837  001FE0  CFF3 F073          	movff	prodl,___flmul@temp
  9838  001FE4  CFF4 F074          	movff	prodh,___flmul@temp+1
  9839  001FE8                     
  9840                           ; BSR set to: 0
  9841  001FE8  5173               	movf	___flmul@temp& (0+255),w,b
  9842  001FEA  276A               	addwf	___flmul@grs& (0+255),f,b
  9843  001FEC  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9844  001FEE  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9845  001FF0  0E00               	movlw	0
  9846  001FF2  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9847  001FF4  0E00               	movlw	0
  9848  001FF6  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9849  001FF8                     
  9850                           ; BSR set to: 0
  9851  001FF8  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
  9852  001FFC  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
  9853  002000  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
  9854  002004  6B6A               	clrf	___flmul@grs& (0+255),b
  9855  002006  5164               	movf	___flmul@a& (0+255),w,b
  9856  002008  0360               	mulwf	___flmul@b& (0+255),b
  9857  00200A  CFF3 F073          	movff	prodl,___flmul@temp
  9858  00200E  CFF4 F074          	movff	prodh,___flmul@temp+1
  9859  002012                     
  9860                           ; BSR set to: 0
  9861  002012  5173               	movf	___flmul@temp& (0+255),w,b
  9862  002014  276A               	addwf	___flmul@grs& (0+255),f,b
  9863  002016  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9864  002018  236B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9865  00201A  0E00               	movlw	0
  9866  00201C  236C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9867  00201E  0E00               	movlw	0
  9868  002020  236D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9869  002022                     
  9870                           ; BSR set to: 0
  9871  002022  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9872  002024  0361               	mulwf	(___flmul@b+1)& (0+255),b
  9873  002026  CFF3 F073          	movff	prodl,___flmul@temp
  9874  00202A  CFF4 F074          	movff	prodh,___flmul@temp+1
  9875  00202E  5173               	movf	___flmul@temp& (0+255),w,b
  9876  002030  276F               	addwf	___flmul@prod& (0+255),f,b
  9877  002032  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9878  002034  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9879  002036  0E00               	movlw	0
  9880  002038  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9881  00203A  0E00               	movlw	0
  9882  00203C  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9883  00203E                     
  9884                           ; BSR set to: 0
  9885  00203E  5165               	movf	(___flmul@a+1)& (0+255),w,b
  9886  002040  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9887  002042  CFF3 F073          	movff	prodl,___flmul@temp
  9888  002046  CFF4 F074          	movff	prodh,___flmul@temp+1
  9889  00204A                     
  9890                           ; BSR set to: 0
  9891  00204A  5173               	movf	___flmul@temp& (0+255),w,b
  9892  00204C  276F               	addwf	___flmul@prod& (0+255),f,b
  9893  00204E  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9894  002050  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9895  002052  0E00               	movlw	0
  9896  002054  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9897  002056  0E00               	movlw	0
  9898  002058  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9899  00205A  5166               	movf	(___flmul@a+2)& (0+255),w,b
  9900  00205C  0362               	mulwf	(___flmul@b+2)& (0+255),b
  9901  00205E  CFF3 F073          	movff	prodl,___flmul@temp
  9902  002062  CFF4 F074          	movff	prodh,___flmul@temp+1
  9903  002066                     
  9904                           ; BSR set to: 0
  9905  002066  5173               	movf	___flmul@temp& (0+255),w,b
  9906  002068  6E51               	movwf	??___flmul^0,c
  9907  00206A  5174               	movf	(___flmul@temp+1)& (0+255),w,b
  9908  00206C  6E52               	movwf	(??___flmul+1)^0,c
  9909  00206E  6A53               	clrf	(??___flmul+2)^0,c
  9910  002070  6A54               	clrf	(??___flmul+3)^0,c
  9911  002072  C053  F054         	movff	??___flmul+2,??___flmul+3
  9912  002076  C052  F053         	movff	??___flmul+1,??___flmul+2
  9913  00207A  C051  F052         	movff	??___flmul,??___flmul+1
  9914  00207E  6A51               	clrf	??___flmul^0,c
  9915  002080  5051               	movf	??___flmul^0,w,c
  9916  002082  276F               	addwf	___flmul@prod& (0+255),f,b
  9917  002084  5052               	movf	(??___flmul+1)^0,w,c
  9918  002086  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9919  002088  5053               	movf	(??___flmul+2)^0,w,c
  9920  00208A  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9921  00208C  5054               	movf	(??___flmul+3)^0,w,c
  9922  00208E  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9923  002090                     
  9924                           ; BSR set to: 0
  9925  002090  C06A  F051         	movff	___flmul@grs,??___flmul
  9926  002094  C06B  F052         	movff	___flmul@grs+1,??___flmul+1
  9927  002098  C06C  F053         	movff	___flmul@grs+2,??___flmul+2
  9928  00209C  C06D  F054         	movff	___flmul@grs+3,??___flmul+3
  9929  0020A0  0E19               	movlw	25
  9930  0020A2  EF58  F010         	goto	u8410
  9931  0020A6                     u8415:
  9932  0020A6  90D8               	bcf	status,0,c
  9933  0020A8  3254               	rrcf	(??___flmul+3)^0,f,c
  9934  0020AA  3253               	rrcf	(??___flmul+2)^0,f,c
  9935  0020AC  3252               	rrcf	(??___flmul+1)^0,f,c
  9936  0020AE  3251               	rrcf	??___flmul^0,f,c
  9937  0020B0                     u8410:
  9938  0020B0  2EE8               	decfsz	wreg,f,c
  9939  0020B2  EF53  F010         	goto	u8415
  9940  0020B6  5051               	movf	??___flmul^0,w,c
  9941  0020B8  276F               	addwf	___flmul@prod& (0+255),f,b
  9942  0020BA  5052               	movf	(??___flmul+1)^0,w,c
  9943  0020BC  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9944  0020BE  5053               	movf	(??___flmul+2)^0,w,c
  9945  0020C0  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9946  0020C2  5054               	movf	(??___flmul+3)^0,w,c
  9947  0020C4  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9948  0020C6                     
  9949                           ; BSR set to: 0
  9950  0020C6  C06C  F06D         	movff	___flmul@grs+2,___flmul@grs+3
  9951  0020CA  C06B  F06C         	movff	___flmul@grs+1,___flmul@grs+2
  9952  0020CE  C06A  F06B         	movff	___flmul@grs,___flmul@grs+1
  9953  0020D2  6B6A               	clrf	___flmul@grs& (0+255),b
  9954  0020D4                     
  9955                           ; BSR set to: 0
  9956  0020D4  5169               	movf	___flmul@aexp& (0+255),w,b
  9957  0020D6  C06E  F051         	movff	___flmul@bexp,??___flmul
  9958  0020DA  6A52               	clrf	(??___flmul+1)^0,c
  9959  0020DC  2651               	addwf	??___flmul^0,f,c
  9960  0020DE  0E00               	movlw	0
  9961  0020E0  2252               	addwfc	(??___flmul+1)^0,f,c
  9962  0020E2  0E82               	movlw	130
  9963  0020E4  2451               	addwf	??___flmul^0,w,c
  9964  0020E6  6F73               	movwf	___flmul@temp& (0+255),b
  9965  0020E8  0EFF               	movlw	255
  9966  0020EA  2052               	addwfc	(??___flmul+1)^0,w,c
  9967  0020EC  6F74               	movwf	(___flmul@temp+1)& (0+255),b
  9968  0020EE  EF8E  F010         	goto	l7261
  9969  0020F2                     l7255:
  9970                           
  9971                           ; BSR set to: 0
  9972  0020F2  90D8               	bcf	status,0,c
  9973  0020F4  376F               	rlcf	___flmul@prod& (0+255),f,b
  9974  0020F6  3770               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9975  0020F8  3771               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9976  0020FA  3772               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9977  0020FC                     
  9978                           ; BSR set to: 0
  9979  0020FC  AF6D               	btfss	(___flmul@grs+3)& (0+255),7,b
  9980  0020FE  EF83  F010         	goto	u8421
  9981  002102  EF85  F010         	goto	u8420
  9982  002106                     u8421:
  9983  002106  EF86  F010         	goto	l1396
  9984  00210A                     u8420:
  9985  00210A                     
  9986                           ; BSR set to: 0
  9987  00210A  816F               	bsf	___flmul@prod& (0+255),0,b
  9988  00210C                     l1396:
  9989                           
  9990                           ; BSR set to: 0
  9991  00210C  90D8               	bcf	status,0,c
  9992  00210E  376A               	rlcf	___flmul@grs& (0+255),f,b
  9993  002110  376B               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9994  002112  376C               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9995  002114  376D               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9996  002116  0773               	decf	___flmul@temp& (0+255),f,b
  9997  002118  A0D8               	btfss	status,0,c
  9998  00211A  0774               	decf	(___flmul@temp+1)& (0+255),f,b
  9999  00211C                     l7261:
 10000                           
 10001                           ; BSR set to: 0
 10002  00211C  AF71               	btfss	(___flmul@prod+2)& (0+255),7,b
 10003  00211E  EF93  F010         	goto	u8431
 10004  002122  EF95  F010         	goto	u8430
 10005  002126                     u8431:
 10006  002126  EF79  F010         	goto	l7255
 10007  00212A                     u8430:
 10008  00212A                     
 10009                           ; BSR set to: 0
 10010  00212A  0E00               	movlw	0
 10011  00212C  6F69               	movwf	___flmul@aexp& (0+255),b
 10012  00212E                     
 10013                           ; BSR set to: 0
 10014  00212E  AF6D               	btfss	(___flmul@grs+3)& (0+255),7,b
 10015  002130  EF9C  F010         	goto	u8441
 10016  002134  EF9E  F010         	goto	u8440
 10017  002138                     u8441:
 10018  002138  EFC2  F010         	goto	l1398
 10019  00213C                     u8440:
 10020  00213C                     
 10021                           ; BSR set to: 0
 10022  00213C  0EFF               	movlw	255
 10023  00213E  156A               	andwf	___flmul@grs& (0+255),w,b
 10024  002140  6E51               	movwf	??___flmul^0,c
 10025  002142  0EFF               	movlw	255
 10026  002144  156B               	andwf	(___flmul@grs+1)& (0+255),w,b
 10027  002146  6E52               	movwf	(??___flmul+1)^0,c
 10028  002148  0EFF               	movlw	255
 10029  00214A  156C               	andwf	(___flmul@grs+2)& (0+255),w,b
 10030  00214C  6E53               	movwf	(??___flmul+2)^0,c
 10031  00214E  0E7F               	movlw	127
 10032  002150  156D               	andwf	(___flmul@grs+3)& (0+255),w,b
 10033  002152  6E54               	movwf	(??___flmul+3)^0,c
 10034  002154  5051               	movf	??___flmul^0,w,c
 10035  002156  1052               	iorwf	(??___flmul+1)^0,w,c
 10036  002158  1053               	iorwf	(??___flmul+2)^0,w,c
 10037  00215A  1054               	iorwf	(??___flmul+3)^0,w,c
 10038  00215C  B4D8               	btfsc	status,2,c
 10039  00215E  EFB3  F010         	goto	u8451
 10040  002162  EFB5  F010         	goto	u8450
 10041  002166                     u8451:
 10042  002166  EFB9  F010         	goto	l1399
 10043  00216A                     u8450:
 10044  00216A                     l7269:
 10045                           
 10046                           ; BSR set to: 0
 10047  00216A  0E01               	movlw	1
 10048  00216C  6F69               	movwf	___flmul@aexp& (0+255),b
 10049  00216E  EFC2  F010         	goto	l1398
 10050  002172                     l1399:
 10051                           
 10052                           ; BSR set to: 0
 10053  002172  A16F               	btfss	___flmul@prod& (0+255),0,b
 10054  002174  EFBE  F010         	goto	u8461
 10055  002178  EFC0  F010         	goto	u8460
 10056  00217C                     u8461:
 10057  00217C  EFC2  F010         	goto	l1398
 10058  002180                     u8460:
 10059  002180  EFB5  F010         	goto	l7269
 10060  002184                     l1398:
 10061                           
 10062                           ; BSR set to: 0
 10063  002184  5169               	movf	___flmul@aexp& (0+255),w,b
 10064  002186  B4D8               	btfsc	status,2,c
 10065  002188  EFC8  F010         	goto	u8471
 10066  00218C  EFCA  F010         	goto	u8470
 10067  002190                     u8471:
 10068  002190  EFEE  F010         	goto	l7281
 10069  002194                     u8470:
 10070  002194                     
 10071                           ; BSR set to: 0
 10072  002194  0E01               	movlw	1
 10073  002196  276F               	addwf	___flmul@prod& (0+255),f,b
 10074  002198  0E00               	movlw	0
 10075  00219A  2370               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10076  00219C  2371               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10077  00219E  2372               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10078  0021A0                     
 10079                           ; BSR set to: 0
 10080  0021A0  A172               	btfss	(___flmul@prod+3)& (0+255),0,b
 10081  0021A2  EFD5  F010         	goto	u8481
 10082  0021A6  EFD7  F010         	goto	u8480
 10083  0021AA                     u8481:
 10084  0021AA  EFEE  F010         	goto	l7281
 10085  0021AE                     u8480:
 10086  0021AE                     
 10087                           ; BSR set to: 0
 10088  0021AE  C06F  F051         	movff	___flmul@prod,??___flmul
 10089  0021B2  C070  F052         	movff	___flmul@prod+1,??___flmul+1
 10090  0021B6  C071  F053         	movff	___flmul@prod+2,??___flmul+2
 10091  0021BA  C072  F054         	movff	___flmul@prod+3,??___flmul+3
 10092  0021BE  3454               	rlcf	(??___flmul+3)^0,w,c
 10093  0021C0  3254               	rrcf	(??___flmul+3)^0,f,c
 10094  0021C2  3253               	rrcf	(??___flmul+2)^0,f,c
 10095  0021C4  3252               	rrcf	(??___flmul+1)^0,f,c
 10096  0021C6  3251               	rrcf	??___flmul^0,f,c
 10097  0021C8  C051  F06F         	movff	??___flmul,___flmul@prod
 10098  0021CC  C052  F070         	movff	??___flmul+1,___flmul@prod+1
 10099  0021D0  C053  F071         	movff	??___flmul+2,___flmul@prod+2
 10100  0021D4  C054  F072         	movff	??___flmul+3,___flmul@prod+3
 10101  0021D8                     
 10102                           ; BSR set to: 0
 10103  0021D8  4B73               	infsnz	___flmul@temp& (0+255),f,b
 10104  0021DA  2B74               	incf	(___flmul@temp+1)& (0+255),f,b
 10105  0021DC                     l7281:
 10106                           
 10107                           ; BSR set to: 0
 10108  0021DC  BF74               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10109  0021DE  EFF9  F010         	goto	u8491
 10110  0021E2  5174               	movf	(___flmul@temp+1)& (0+255),w,b
 10111  0021E4  E108               	bnz	u8490
 10112  0021E6  2973               	incf	___flmul@temp& (0+255),w,b
 10113  0021E8  A0D8               	btfss	status,0,c
 10114  0021EA  EFF9  F010         	goto	u8491
 10115  0021EE  EFFB  F010         	goto	u8490
 10116  0021F2                     u8491:
 10117  0021F2  EF05  F011         	goto	l7285
 10118  0021F6                     u8490:
 10119  0021F6                     
 10120                           ; BSR set to: 0
 10121  0021F6  0E00               	movlw	0
 10122  0021F8  6F6F               	movwf	___flmul@prod& (0+255),b
 10123  0021FA  0E00               	movlw	0
 10124  0021FC  6F70               	movwf	(___flmul@prod+1)& (0+255),b
 10125  0021FE  0E80               	movlw	128
 10126  002200  6F71               	movwf	(___flmul@prod+2)& (0+255),b
 10127  002202  0E7F               	movlw	127
 10128  002204  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10129  002206  EF33  F011         	goto	l7297
 10130  00220A                     l7285:
 10131                           
 10132                           ; BSR set to: 0
 10133  00220A  BF74               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10134  00220C  EF12  F011         	goto	u8500
 10135  002210  5174               	movf	(___flmul@temp+1)& (0+255),w,b
 10136  002212  E106               	bnz	u8501
 10137  002214  0573               	decf	___flmul@temp& (0+255),w,b
 10138  002216  B0D8               	btfsc	status,0,c
 10139  002218  EF10  F011         	goto	u8501
 10140  00221C  EF12  F011         	goto	u8500
 10141  002220                     u8501:
 10142  002220  EF1E  F011         	goto	l1406
 10143  002224                     u8500:
 10144  002224                     
 10145                           ; BSR set to: 0
 10146  002224  0E00               	movlw	0
 10147  002226  6F6F               	movwf	___flmul@prod& (0+255),b
 10148  002228  0E00               	movlw	0
 10149  00222A  6F70               	movwf	(___flmul@prod+1)& (0+255),b
 10150  00222C  0E00               	movlw	0
 10151  00222E  6F71               	movwf	(___flmul@prod+2)& (0+255),b
 10152  002230  0E00               	movlw	0
 10153  002232  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10154  002234  0E00               	movlw	0
 10155  002236  6F68               	movwf	___flmul@sign& (0+255),b
 10156  002238  EF33  F011         	goto	l7297
 10157  00223C                     l1406:
 10158                           
 10159                           ; BSR set to: 0
 10160  00223C  C073  F06E         	movff	___flmul@temp,___flmul@bexp
 10161  002240                     
 10162                           ; BSR set to: 0
 10163  002240  0EFF               	movlw	255
 10164  002242  176F               	andwf	___flmul@prod& (0+255),f,b
 10165  002244  0EFF               	movlw	255
 10166  002246  1770               	andwf	(___flmul@prod+1)& (0+255),f,b
 10167  002248  0E7F               	movlw	127
 10168  00224A  1771               	andwf	(___flmul@prod+2)& (0+255),f,b
 10169  00224C  0E00               	movlw	0
 10170  00224E  1772               	andwf	(___flmul@prod+3)& (0+255),f,b
 10171  002250                     
 10172                           ; BSR set to: 0
 10173  002250  A16E               	btfss	___flmul@bexp& (0+255),0,b
 10174  002252  EF2D  F011         	goto	u8511
 10175  002256  EF2F  F011         	goto	u8510
 10176  00225A                     u8511:
 10177  00225A  EF30  F011         	goto	l7295
 10178  00225E                     u8510:
 10179  00225E                     
 10180                           ; BSR set to: 0
 10181  00225E  8F71               	bsf	(___flmul@prod+2)& (0+255),7,b
 10182  002260                     l7295:
 10183                           
 10184                           ; BSR set to: 0
 10185  002260  90D8               	bcf	status,0,c
 10186  002262  316E               	rrcf	___flmul@bexp& (0+255),w,b
 10187  002264  6F72               	movwf	(___flmul@prod+3)& (0+255),b
 10188  002266                     l7297:
 10189                           
 10190                           ; BSR set to: 0
 10191  002266  5168               	movf	___flmul@sign& (0+255),w,b
 10192  002268  1372               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10193  00226A                     
 10194                           ; BSR set to: 0
 10195  00226A  C06F  F060         	movff	___flmul@prod,?___flmul
 10196  00226E  C070  F061         	movff	___flmul@prod+1,?___flmul+1
 10197  002272  C071  F062         	movff	___flmul@prod+2,?___flmul+2
 10198  002276  C072  F063         	movff	___flmul@prod+3,?___flmul+3
 10199  00227A                     l1393:
 10200                           
 10201                           ; BSR set to: 0
 10202  00227A  0012               	return		;funcret
 10203  00227C                     __end_of___flmul:
 10204                           	opt callstack 0
 10205                           
 10206 ;; *************** function ___fldiv *****************
 10207 ;; Defined at:
 10208 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 10209 ;; Parameters:    Size  Location     Type
 10210 ;;  b               4   55[COMRAM] unsigned char 
 10211 ;;  a               4   59[COMRAM] unsigned char 
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;  grs             4   74[COMRAM] unsigned long 
 10214 ;;  rem             4   67[COMRAM] unsigned long 
 10215 ;;  new_exp         2   72[COMRAM] short 
 10216 ;;  aexp            1   79[COMRAM] unsigned char 
 10217 ;;  bexp            1   78[COMRAM] unsigned char 
 10218 ;;  sign            1   71[COMRAM] unsigned char 
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  4   55[COMRAM] unsigned char 
 10221 ;; Registers used:
 10222 ;;		wreg, status,2, status,0
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10228 ;;      Params:         8       0       0       0       0       0       0       0       0
 10229 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10230 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10231 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10232 ;;Total ram usage:       25 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:    2
 10235 ;; This function calls:
 10236 ;;		Nothing
 10237 ;; This function is called by:
 10238 ;;		_pwmDuty
 10239 ;;		_leerSensores
 10240 ;;		_efgtoa
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           	psect	text44
 10245  00227C                     __ptext44:
 10246                           	opt callstack 0
 10247  00227C                     ___fldiv:
 10248                           	opt callstack 23
 10249  00227C  503B               	movf	(___fldiv@b+3)^0,w,c
 10250  00227E  0B80               	andlw	128
 10251  002280  6E48               	movwf	___fldiv@sign^0,c
 10252  002282  503B               	movf	(___fldiv@b+3)^0,w,c
 10253  002284  243B               	addwf	(___fldiv@b+3)^0,w,c
 10254  002286  6E4F               	movwf	___fldiv@bexp^0,c
 10255  002288  AE3A               	btfss	(___fldiv@b+2)^0,7,c
 10256  00228A  EF49  F011         	goto	u8101
 10257  00228E  EF4B  F011         	goto	u8100
 10258  002292                     u8101:
 10259  002292  EF4C  F011         	goto	l7041
 10260  002296                     u8100:
 10261  002296  804F               	bsf	___fldiv@bexp^0,0,c
 10262  002298                     l7041:
 10263  002298  504F               	movf	___fldiv@bexp^0,w,c
 10264  00229A  B4D8               	btfsc	status,2,c
 10265  00229C  EF52  F011         	goto	u8111
 10266  0022A0  EF54  F011         	goto	u8110
 10267  0022A4                     u8111:
 10268  0022A4  EF69  F011         	goto	l7051
 10269  0022A8                     u8110:
 10270  0022A8  284F               	incf	___fldiv@bexp^0,w,c
 10271  0022AA  A4D8               	btfss	status,2,c
 10272  0022AC  EF5A  F011         	goto	u8121
 10273  0022B0  EF5C  F011         	goto	u8120
 10274  0022B4                     u8121:
 10275  0022B4  EF64  F011         	goto	l7047
 10276  0022B8                     u8120:
 10277  0022B8  0E00               	movlw	0
 10278  0022BA  6E38               	movwf	___fldiv@b^0,c
 10279  0022BC  0E00               	movlw	0
 10280  0022BE  6E39               	movwf	(___fldiv@b+1)^0,c
 10281  0022C0  0E00               	movlw	0
 10282  0022C2  6E3A               	movwf	(___fldiv@b+2)^0,c
 10283  0022C4  0E00               	movlw	0
 10284  0022C6  6E3B               	movwf	(___fldiv@b+3)^0,c
 10285  0022C8                     l7047:
 10286  0022C8  8E3A               	bsf	(___fldiv@b+2)^0,7,c
 10287  0022CA  0E00               	movlw	0
 10288  0022CC  6E3B               	movwf	(___fldiv@b+3)^0,c
 10289  0022CE  EF71  F011         	goto	l7053
 10290  0022D2                     l7051:
 10291  0022D2  0E00               	movlw	0
 10292  0022D4  6E38               	movwf	___fldiv@b^0,c
 10293  0022D6  0E00               	movlw	0
 10294  0022D8  6E39               	movwf	(___fldiv@b+1)^0,c
 10295  0022DA  0E00               	movlw	0
 10296  0022DC  6E3A               	movwf	(___fldiv@b+2)^0,c
 10297  0022DE  0E00               	movlw	0
 10298  0022E0  6E3B               	movwf	(___fldiv@b+3)^0,c
 10299  0022E2                     l7053:
 10300  0022E2  503F               	movf	(___fldiv@a+3)^0,w,c
 10301  0022E4  0B80               	andlw	128
 10302  0022E6  1A48               	xorwf	___fldiv@sign^0,f,c
 10303  0022E8  503F               	movf	(___fldiv@a+3)^0,w,c
 10304  0022EA  243F               	addwf	(___fldiv@a+3)^0,w,c
 10305  0022EC  6E50               	movwf	___fldiv@aexp^0,c
 10306  0022EE  AE3E               	btfss	(___fldiv@a+2)^0,7,c
 10307  0022F0  EF7C  F011         	goto	u8131
 10308  0022F4  EF7E  F011         	goto	u8130
 10309  0022F8                     u8131:
 10310  0022F8  EF7F  F011         	goto	l7061
 10311  0022FC                     u8130:
 10312  0022FC  8050               	bsf	___fldiv@aexp^0,0,c
 10313  0022FE                     l7061:
 10314  0022FE  5050               	movf	___fldiv@aexp^0,w,c
 10315  002300  B4D8               	btfsc	status,2,c
 10316  002302  EF85  F011         	goto	u8141
 10317  002306  EF87  F011         	goto	u8140
 10318  00230A                     u8141:
 10319  00230A  EF9C  F011         	goto	l7071
 10320  00230E                     u8140:
 10321  00230E  2850               	incf	___fldiv@aexp^0,w,c
 10322  002310  A4D8               	btfss	status,2,c
 10323  002312  EF8D  F011         	goto	u8151
 10324  002316  EF8F  F011         	goto	u8150
 10325  00231A                     u8151:
 10326  00231A  EF97  F011         	goto	l7067
 10327  00231E                     u8150:
 10328  00231E  0E00               	movlw	0
 10329  002320  6E3C               	movwf	___fldiv@a^0,c
 10330  002322  0E00               	movlw	0
 10331  002324  6E3D               	movwf	(___fldiv@a+1)^0,c
 10332  002326  0E00               	movlw	0
 10333  002328  6E3E               	movwf	(___fldiv@a+2)^0,c
 10334  00232A  0E00               	movlw	0
 10335  00232C  6E3F               	movwf	(___fldiv@a+3)^0,c
 10336  00232E                     l7067:
 10337  00232E  8E3E               	bsf	(___fldiv@a+2)^0,7,c
 10338  002330  0E00               	movlw	0
 10339  002332  6E3F               	movwf	(___fldiv@a+3)^0,c
 10340  002334  EFA4  F011         	goto	l7073
 10341  002338                     l7071:
 10342  002338  0E00               	movlw	0
 10343  00233A  6E3C               	movwf	___fldiv@a^0,c
 10344  00233C  0E00               	movlw	0
 10345  00233E  6E3D               	movwf	(___fldiv@a+1)^0,c
 10346  002340  0E00               	movlw	0
 10347  002342  6E3E               	movwf	(___fldiv@a+2)^0,c
 10348  002344  0E00               	movlw	0
 10349  002346  6E3F               	movwf	(___fldiv@a+3)^0,c
 10350  002348                     l7073:
 10351  002348  503C               	movf	___fldiv@a^0,w,c
 10352  00234A  103D               	iorwf	(___fldiv@a+1)^0,w,c
 10353  00234C  103E               	iorwf	(___fldiv@a+2)^0,w,c
 10354  00234E  103F               	iorwf	(___fldiv@a+3)^0,w,c
 10355  002350  A4D8               	btfss	status,2,c
 10356  002352  EFAD  F011         	goto	u8161
 10357  002356  EFAF  F011         	goto	u8160
 10358  00235A                     u8161:
 10359  00235A  EFC7  F011         	goto	l7085
 10360  00235E                     u8160:
 10361  00235E  0E00               	movlw	0
 10362  002360  6E38               	movwf	___fldiv@b^0,c
 10363  002362  0E00               	movlw	0
 10364  002364  6E39               	movwf	(___fldiv@b+1)^0,c
 10365  002366  0E00               	movlw	0
 10366  002368  6E3A               	movwf	(___fldiv@b+2)^0,c
 10367  00236A  0E00               	movlw	0
 10368  00236C  6E3B               	movwf	(___fldiv@b+3)^0,c
 10369  00236E  0E80               	movlw	128
 10370  002370  123A               	iorwf	(___fldiv@b+2)^0,f,c
 10371  002372  0E7F               	movlw	127
 10372  002374  123B               	iorwf	(___fldiv@b+3)^0,f,c
 10373  002376                     l7079:
 10374  002376  5048               	movf	___fldiv@sign^0,w,c
 10375  002378  123B               	iorwf	(___fldiv@b+3)^0,f,c
 10376  00237A  C038  F038         	movff	___fldiv@b,?___fldiv
 10377  00237E  C039  F039         	movff	___fldiv@b+1,?___fldiv+1
 10378  002382  C03A  F03A         	movff	___fldiv@b+2,?___fldiv+2
 10379  002386  C03B  F03B         	movff	___fldiv@b+3,?___fldiv+3
 10380  00238A  EF0A  F013         	goto	l1357
 10381  00238E                     l7085:
 10382  00238E  504F               	movf	___fldiv@bexp^0,w,c
 10383  002390  A4D8               	btfss	status,2,c
 10384  002392  EFCD  F011         	goto	u8171
 10385  002396  EFCF  F011         	goto	u8170
 10386  00239A                     u8171:
 10387  00239A  EFD9  F011         	goto	l7093
 10388  00239E                     u8170:
 10389  00239E  0E00               	movlw	0
 10390  0023A0  6E38               	movwf	?___fldiv^0,c
 10391  0023A2  0E00               	movlw	0
 10392  0023A4  6E39               	movwf	(?___fldiv+1)^0,c
 10393  0023A6  0E00               	movlw	0
 10394  0023A8  6E3A               	movwf	(?___fldiv+2)^0,c
 10395  0023AA  0E00               	movlw	0
 10396  0023AC  6E3B               	movwf	(?___fldiv+3)^0,c
 10397  0023AE  EF0A  F013         	goto	l1357
 10398  0023B2                     l7093:
 10399  0023B2  5050               	movf	___fldiv@aexp^0,w,c
 10400  0023B4  C04F  F040         	movff	___fldiv@bexp,??___fldiv
 10401  0023B8  6A41               	clrf	(??___fldiv+1)^0,c
 10402  0023BA  5E40               	subwf	??___fldiv^0,f,c
 10403  0023BC  0E00               	movlw	0
 10404  0023BE  5A41               	subwfb	(??___fldiv+1)^0,f,c
 10405  0023C0  0E7F               	movlw	127
 10406  0023C2  2440               	addwf	??___fldiv^0,w,c
 10407  0023C4  6E49               	movwf	___fldiv@new_exp^0,c
 10408  0023C6  0E00               	movlw	0
 10409  0023C8  2041               	addwfc	(??___fldiv+1)^0,w,c
 10410  0023CA  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10411  0023CC  C038  F044         	movff	___fldiv@b,___fldiv@rem
 10412  0023D0  C039  F045         	movff	___fldiv@b+1,___fldiv@rem+1
 10413  0023D4  C03A  F046         	movff	___fldiv@b+2,___fldiv@rem+2
 10414  0023D8  C03B  F047         	movff	___fldiv@b+3,___fldiv@rem+3
 10415  0023DC  0E00               	movlw	0
 10416  0023DE  6E38               	movwf	___fldiv@b^0,c
 10417  0023E0  0E00               	movlw	0
 10418  0023E2  6E39               	movwf	(___fldiv@b+1)^0,c
 10419  0023E4  0E00               	movlw	0
 10420  0023E6  6E3A               	movwf	(___fldiv@b+2)^0,c
 10421  0023E8  0E00               	movlw	0
 10422  0023EA  6E3B               	movwf	(___fldiv@b+3)^0,c
 10423  0023EC  0E00               	movlw	0
 10424  0023EE  6E4B               	movwf	___fldiv@grs^0,c
 10425  0023F0  0E00               	movlw	0
 10426  0023F2  6E4C               	movwf	(___fldiv@grs+1)^0,c
 10427  0023F4  0E00               	movlw	0
 10428  0023F6  6E4D               	movwf	(___fldiv@grs+2)^0,c
 10429  0023F8  0E00               	movlw	0
 10430  0023FA  6E4E               	movwf	(___fldiv@grs+3)^0,c
 10431  0023FC  0E00               	movlw	0
 10432  0023FE  6E50               	movwf	___fldiv@aexp^0,c
 10433  002400  EF3A  F012         	goto	l1359
 10434  002404                     l7103:
 10435  002404  5050               	movf	___fldiv@aexp^0,w,c
 10436  002406  B4D8               	btfsc	status,2,c
 10437  002408  EF08  F012         	goto	u8181
 10438  00240C  EF0A  F012         	goto	u8180
 10439  002410                     u8181:
 10440  002410  EF21  F012         	goto	l7111
 10441  002414                     u8180:
 10442  002414  90D8               	bcf	status,0,c
 10443  002416  3644               	rlcf	___fldiv@rem^0,f,c
 10444  002418  3645               	rlcf	(___fldiv@rem+1)^0,f,c
 10445  00241A  3646               	rlcf	(___fldiv@rem+2)^0,f,c
 10446  00241C  3647               	rlcf	(___fldiv@rem+3)^0,f,c
 10447  00241E  90D8               	bcf	status,0,c
 10448  002420  3638               	rlcf	___fldiv@b^0,f,c
 10449  002422  3639               	rlcf	(___fldiv@b+1)^0,f,c
 10450  002424  363A               	rlcf	(___fldiv@b+2)^0,f,c
 10451  002426  363B               	rlcf	(___fldiv@b+3)^0,f,c
 10452  002428  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10453  00242A  EF19  F012         	goto	u8191
 10454  00242E  EF1B  F012         	goto	u8190
 10455  002432                     u8191:
 10456  002432  EF1C  F012         	goto	l1362
 10457  002436                     u8190:
 10458  002436  8038               	bsf	___fldiv@b^0,0,c
 10459  002438                     l1362:
 10460  002438  90D8               	bcf	status,0,c
 10461  00243A  364B               	rlcf	___fldiv@grs^0,f,c
 10462  00243C  364C               	rlcf	(___fldiv@grs+1)^0,f,c
 10463  00243E  364D               	rlcf	(___fldiv@grs+2)^0,f,c
 10464  002440  364E               	rlcf	(___fldiv@grs+3)^0,f,c
 10465  002442                     l7111:
 10466  002442  503C               	movf	___fldiv@a^0,w,c
 10467  002444  5C44               	subwf	___fldiv@rem^0,w,c
 10468  002446  503D               	movf	(___fldiv@a+1)^0,w,c
 10469  002448  5845               	subwfb	(___fldiv@rem+1)^0,w,c
 10470  00244A  503E               	movf	(___fldiv@a+2)^0,w,c
 10471  00244C  5846               	subwfb	(___fldiv@rem+2)^0,w,c
 10472  00244E  503F               	movf	(___fldiv@a+3)^0,w,c
 10473  002450  5847               	subwfb	(___fldiv@rem+3)^0,w,c
 10474  002452  A0D8               	btfss	status,0,c
 10475  002454  EF2E  F012         	goto	u8201
 10476  002458  EF30  F012         	goto	u8200
 10477  00245C                     u8201:
 10478  00245C  EF39  F012         	goto	l7117
 10479  002460                     u8200:
 10480  002460  8C4E               	bsf	(___fldiv@grs+3)^0,6,c
 10481  002462  503C               	movf	___fldiv@a^0,w,c
 10482  002464  5E44               	subwf	___fldiv@rem^0,f,c
 10483  002466  503D               	movf	(___fldiv@a+1)^0,w,c
 10484  002468  5A45               	subwfb	(___fldiv@rem+1)^0,f,c
 10485  00246A  503E               	movf	(___fldiv@a+2)^0,w,c
 10486  00246C  5A46               	subwfb	(___fldiv@rem+2)^0,f,c
 10487  00246E  503F               	movf	(___fldiv@a+3)^0,w,c
 10488  002470  5A47               	subwfb	(___fldiv@rem+3)^0,f,c
 10489  002472                     l7117:
 10490  002472  2A50               	incf	___fldiv@aexp^0,f,c
 10491  002474                     l1359:
 10492  002474  0E19               	movlw	25
 10493  002476  6450               	cpfsgt	___fldiv@aexp^0,c
 10494  002478  EF40  F012         	goto	u8211
 10495  00247C  EF42  F012         	goto	u8210
 10496  002480                     u8211:
 10497  002480  EF02  F012         	goto	l7103
 10498  002484                     u8210:
 10499  002484  5044               	movf	___fldiv@rem^0,w,c
 10500  002486  1045               	iorwf	(___fldiv@rem+1)^0,w,c
 10501  002488  1046               	iorwf	(___fldiv@rem+2)^0,w,c
 10502  00248A  1047               	iorwf	(___fldiv@rem+3)^0,w,c
 10503  00248C  B4D8               	btfsc	status,2,c
 10504  00248E  EF4B  F012         	goto	u8221
 10505  002492  EF4D  F012         	goto	u8220
 10506  002496                     u8221:
 10507  002496  EF65  F012         	goto	l7129
 10508  00249A                     u8220:
 10509  00249A  804B               	bsf	___fldiv@grs^0,0,c
 10510  00249C  EF65  F012         	goto	l7129
 10511  0024A0                     l7123:
 10512  0024A0  90D8               	bcf	status,0,c
 10513  0024A2  3638               	rlcf	___fldiv@b^0,f,c
 10514  0024A4  3639               	rlcf	(___fldiv@b+1)^0,f,c
 10515  0024A6  363A               	rlcf	(___fldiv@b+2)^0,f,c
 10516  0024A8  363B               	rlcf	(___fldiv@b+3)^0,f,c
 10517  0024AA  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10518  0024AC  EF5A  F012         	goto	u8231
 10519  0024B0  EF5C  F012         	goto	u8230
 10520  0024B4                     u8231:
 10521  0024B4  EF5D  F012         	goto	l1368
 10522  0024B8                     u8230:
 10523  0024B8  8038               	bsf	___fldiv@b^0,0,c
 10524  0024BA                     l1368:
 10525  0024BA  90D8               	bcf	status,0,c
 10526  0024BC  364B               	rlcf	___fldiv@grs^0,f,c
 10527  0024BE  364C               	rlcf	(___fldiv@grs+1)^0,f,c
 10528  0024C0  364D               	rlcf	(___fldiv@grs+2)^0,f,c
 10529  0024C2  364E               	rlcf	(___fldiv@grs+3)^0,f,c
 10530  0024C4  0649               	decf	___fldiv@new_exp^0,f,c
 10531  0024C6  A0D8               	btfss	status,0,c
 10532  0024C8  064A               	decf	(___fldiv@new_exp+1)^0,f,c
 10533  0024CA                     l7129:
 10534  0024CA  AE3A               	btfss	(___fldiv@b+2)^0,7,c
 10535  0024CC  EF6A  F012         	goto	u8241
 10536  0024D0  EF6C  F012         	goto	u8240
 10537  0024D4                     u8241:
 10538  0024D4  EF50  F012         	goto	l7123
 10539  0024D8                     u8240:
 10540  0024D8  0E00               	movlw	0
 10541  0024DA  6E50               	movwf	___fldiv@aexp^0,c
 10542  0024DC  AE4E               	btfss	(___fldiv@grs+3)^0,7,c
 10543  0024DE  EF73  F012         	goto	u8251
 10544  0024E2  EF75  F012         	goto	u8250
 10545  0024E6                     u8251:
 10546  0024E6  EF99  F012         	goto	l1370
 10547  0024EA                     u8250:
 10548  0024EA  0EFF               	movlw	255
 10549  0024EC  144B               	andwf	___fldiv@grs^0,w,c
 10550  0024EE  6E40               	movwf	??___fldiv^0,c
 10551  0024F0  0EFF               	movlw	255
 10552  0024F2  144C               	andwf	(___fldiv@grs+1)^0,w,c
 10553  0024F4  6E41               	movwf	(??___fldiv+1)^0,c
 10554  0024F6  0EFF               	movlw	255
 10555  0024F8  144D               	andwf	(___fldiv@grs+2)^0,w,c
 10556  0024FA  6E42               	movwf	(??___fldiv+2)^0,c
 10557  0024FC  0E7F               	movlw	127
 10558  0024FE  144E               	andwf	(___fldiv@grs+3)^0,w,c
 10559  002500  6E43               	movwf	(??___fldiv+3)^0,c
 10560  002502  5040               	movf	??___fldiv^0,w,c
 10561  002504  1041               	iorwf	(??___fldiv+1)^0,w,c
 10562  002506  1042               	iorwf	(??___fldiv+2)^0,w,c
 10563  002508  1043               	iorwf	(??___fldiv+3)^0,w,c
 10564  00250A  B4D8               	btfsc	status,2,c
 10565  00250C  EF8A  F012         	goto	u8261
 10566  002510  EF8C  F012         	goto	u8260
 10567  002514                     u8261:
 10568  002514  EF90  F012         	goto	l1371
 10569  002518                     u8260:
 10570  002518                     l7137:
 10571  002518  0E01               	movlw	1
 10572  00251A  6E50               	movwf	___fldiv@aexp^0,c
 10573  00251C  EF99  F012         	goto	l1370
 10574  002520                     l1371:
 10575  002520  A038               	btfss	___fldiv@b^0,0,c
 10576  002522  EF95  F012         	goto	u8271
 10577  002526  EF97  F012         	goto	u8270
 10578  00252A                     u8271:
 10579  00252A  EF99  F012         	goto	l1370
 10580  00252E                     u8270:
 10581  00252E  EF8C  F012         	goto	l7137
 10582  002532                     l1370:
 10583  002532  5050               	movf	___fldiv@aexp^0,w,c
 10584  002534  B4D8               	btfsc	status,2,c
 10585  002536  EF9F  F012         	goto	u8281
 10586  00253A  EFA1  F012         	goto	u8280
 10587  00253E                     u8281:
 10588  00253E  EFC5  F012         	goto	l7149
 10589  002542                     u8280:
 10590  002542  0E01               	movlw	1
 10591  002544  2638               	addwf	___fldiv@b^0,f,c
 10592  002546  0E00               	movlw	0
 10593  002548  2239               	addwfc	(___fldiv@b+1)^0,f,c
 10594  00254A  223A               	addwfc	(___fldiv@b+2)^0,f,c
 10595  00254C  223B               	addwfc	(___fldiv@b+3)^0,f,c
 10596  00254E  A03B               	btfss	(___fldiv@b+3)^0,0,c
 10597  002550  EFAC  F012         	goto	u8291
 10598  002554  EFAE  F012         	goto	u8290
 10599  002558                     u8291:
 10600  002558  EFC5  F012         	goto	l7149
 10601  00255C                     u8290:
 10602  00255C  C038  F040         	movff	___fldiv@b,??___fldiv
 10603  002560  C039  F041         	movff	___fldiv@b+1,??___fldiv+1
 10604  002564  C03A  F042         	movff	___fldiv@b+2,??___fldiv+2
 10605  002568  C03B  F043         	movff	___fldiv@b+3,??___fldiv+3
 10606  00256C  3443               	rlcf	(??___fldiv+3)^0,w,c
 10607  00256E  3243               	rrcf	(??___fldiv+3)^0,f,c
 10608  002570  3242               	rrcf	(??___fldiv+2)^0,f,c
 10609  002572  3241               	rrcf	(??___fldiv+1)^0,f,c
 10610  002574  3240               	rrcf	??___fldiv^0,f,c
 10611  002576  C040  F038         	movff	??___fldiv,___fldiv@b
 10612  00257A  C041  F039         	movff	??___fldiv+1,___fldiv@b+1
 10613  00257E  C042  F03A         	movff	??___fldiv+2,___fldiv@b+2
 10614  002582  C043  F03B         	movff	??___fldiv+3,___fldiv@b+3
 10615  002586  4A49               	infsnz	___fldiv@new_exp^0,f,c
 10616  002588  2A4A               	incf	(___fldiv@new_exp+1)^0,f,c
 10617  00258A                     l7149:
 10618  00258A  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10619  00258C  EFD0  F012         	goto	u8301
 10620  002590  504A               	movf	(___fldiv@new_exp+1)^0,w,c
 10621  002592  E108               	bnz	u8300
 10622  002594  2849               	incf	___fldiv@new_exp^0,w,c
 10623  002596  A0D8               	btfss	status,0,c
 10624  002598  EFD0  F012         	goto	u8301
 10625  00259C  EFD2  F012         	goto	u8300
 10626  0025A0                     u8301:
 10627  0025A0  EFDD  F012         	goto	l7153
 10628  0025A4                     u8300:
 10629  0025A4  0E00               	movlw	0
 10630  0025A6  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10631  0025A8  6849               	setf	___fldiv@new_exp^0,c
 10632  0025AA  0E00               	movlw	0
 10633  0025AC  6E38               	movwf	___fldiv@b^0,c
 10634  0025AE  0E00               	movlw	0
 10635  0025B0  6E39               	movwf	(___fldiv@b+1)^0,c
 10636  0025B2  0E00               	movlw	0
 10637  0025B4  6E3A               	movwf	(___fldiv@b+2)^0,c
 10638  0025B6  0E00               	movlw	0
 10639  0025B8  6E3B               	movwf	(___fldiv@b+3)^0,c
 10640  0025BA                     l7153:
 10641  0025BA  BE4A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10642  0025BC  EFEA  F012         	goto	u8310
 10643  0025C0  504A               	movf	(___fldiv@new_exp+1)^0,w,c
 10644  0025C2  E106               	bnz	u8311
 10645  0025C4  0449               	decf	___fldiv@new_exp^0,w,c
 10646  0025C6  B0D8               	btfsc	status,0,c
 10647  0025C8  EFE8  F012         	goto	u8311
 10648  0025CC  EFEA  F012         	goto	u8310
 10649  0025D0                     u8311:
 10650  0025D0  EFF8  F012         	goto	l7157
 10651  0025D4                     u8310:
 10652  0025D4  0E00               	movlw	0
 10653  0025D6  6E4A               	movwf	(___fldiv@new_exp+1)^0,c
 10654  0025D8  0E00               	movlw	0
 10655  0025DA  6E49               	movwf	___fldiv@new_exp^0,c
 10656  0025DC  0E00               	movlw	0
 10657  0025DE  6E38               	movwf	___fldiv@b^0,c
 10658  0025E0  0E00               	movlw	0
 10659  0025E2  6E39               	movwf	(___fldiv@b+1)^0,c
 10660  0025E4  0E00               	movlw	0
 10661  0025E6  6E3A               	movwf	(___fldiv@b+2)^0,c
 10662  0025E8  0E00               	movlw	0
 10663  0025EA  6E3B               	movwf	(___fldiv@b+3)^0,c
 10664  0025EC  0E00               	movlw	0
 10665  0025EE  6E48               	movwf	___fldiv@sign^0,c
 10666  0025F0                     l7157:
 10667  0025F0  C049  F04F         	movff	___fldiv@new_exp,___fldiv@bexp
 10668  0025F4  A04F               	btfss	___fldiv@bexp^0,0,c
 10669  0025F6  EFFF  F012         	goto	u8321
 10670  0025FA  EF01  F013         	goto	u8320
 10671  0025FE                     u8321:
 10672  0025FE  EF04  F013         	goto	l7163
 10673  002602                     u8320:
 10674  002602  8E3A               	bsf	(___fldiv@b+2)^0,7,c
 10675  002604  EF05  F013         	goto	l7165
 10676  002608                     l7163:
 10677  002608  9E3A               	bcf	(___fldiv@b+2)^0,7,c
 10678  00260A                     l7165:
 10679  00260A  90D8               	bcf	status,0,c
 10680  00260C  304F               	rrcf	___fldiv@bexp^0,w,c
 10681  00260E  6E3B               	movwf	(___fldiv@b+3)^0,c
 10682  002610  EFBB  F011         	goto	l7079
 10683  002614                     l1357:
 10684  002614  0012               	return		;funcret
 10685  002616                     __end_of___fldiv:
 10686                           	opt callstack 0
 10687                           
 10688 ;; *************** function _dameDistancia *****************
 10689 ;; Defined at:
 10690 ;;		line 26 in file "./ultrasonico.h"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  numeroSensor    1    wreg     unsigned char 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;  numeroSensor    1   32[COMRAM] unsigned char 
 10695 ;;  distancia       4   33[COMRAM] float 
 10696 ;;  conteo          2   37[COMRAM] unsigned int 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  4   26[COMRAM] float 
 10699 ;; Registers used:
 10700 ;;		wreg, status,2, status,0, cstack
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10706 ;;      Params:         4       0       0       0       0       0       0       0       0
 10707 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10708 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10709 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10710 ;;Total ram usage:       13 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; Hardware stack levels required when called:    3
 10713 ;; This function calls:
 10714 ;;		___lwdiv
 10715 ;;		___xxtofl
 10716 ;; This function is called by:
 10717 ;;		_inicializarComportamientoBasico
 10718 ;;		_leerSensores
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text45
 10723  003472                     __ptext45:
 10724                           	opt callstack 0
 10725  003472                     _dameDistancia:
 10726                           	opt callstack 25
 10727                           
 10728                           ;incstack = 0
 10729                           ;dameDistancia@numeroSensor stored from wreg
 10730  003472  6E21               	movwf	dameDistancia@numeroSensor^0,c
 10731  003474                     
 10732                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
 10733  003474  0E00               	movlw	0
 10734  003476  6ECF               	movwf	207,c	;volatile
 10735                           
 10736                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
 10737  003478  0E00               	movlw	0
 10738  00347A  6ECE               	movwf	206,c	;volatile
 10739                           
 10740                           ;./ultrasonico.h: 33:     conteo = 0;
 10741  00347C  0E00               	movlw	0
 10742  00347E  6E27               	movwf	(dameDistancia@conteo+1)^0,c
 10743  003480  0E00               	movlw	0
 10744  003482  6E26               	movwf	dameDistancia@conteo^0,c
 10745  003484                     
 10746                           ;./ultrasonico.h: 34:     LATD3 = 1;
 10747  003484  868C               	bsf	3980,3,c	;volatile
 10748  003486                     
 10749                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
 10750  003486  0E04               	movlw	4
 10751  003488                     u10797:
 10752  003488  2EE8               	decfsz	wreg,f,c
 10753  00348A  D7FE               	bra	u10797
 10754  00348C                     
 10755                           ;./ultrasonico.h: 36:     LATD3 = 0;
 10756  00348C  968C               	bcf	3980,3,c	;volatile
 10757                           
 10758                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
 10759  00348E  EF91  F01A         	goto	l8183
 10760  003492                     l171:
 10761  003492  A281               	btfss	129,1,c	;volatile
 10762  003494  EF4E  F01A         	goto	u10031
 10763  003498  EF50  F01A         	goto	u10030
 10764  00349C                     u10031:
 10765  00349C  EF49  F01A         	goto	l171
 10766  0034A0                     u10030:
 10767  0034A0                     
 10768                           ;./ultrasonico.h: 43:             TMR1ON = 1;
 10769  0034A0  80CD               	bsf	4045,0,c	;volatile
 10770  0034A2                     l174:
 10771  0034A2  A281               	btfss	129,1,c	;volatile
 10772  0034A4  EF56  F01A         	goto	u10041
 10773  0034A8  EF58  F01A         	goto	u10040
 10774  0034AC                     u10041:
 10775  0034AC  EFAA  F01A         	goto	l179
 10776  0034B0                     u10040:
 10777  0034B0  A09E               	btfss	3998,0,c	;volatile
 10778  0034B2  EF5D  F01A         	goto	u10051
 10779  0034B6  EF5F  F01A         	goto	u10050
 10780  0034BA                     u10051:
 10781  0034BA  EF51  F01A         	goto	l174
 10782  0034BE                     u10050:
 10783  0034BE  EFAA  F01A         	goto	l179
 10784  0034C2                     l181:
 10785  0034C2  A481               	btfss	129,2,c	;volatile
 10786  0034C4  EF66  F01A         	goto	u10061
 10787  0034C8  EF68  F01A         	goto	u10060
 10788  0034CC                     u10061:
 10789  0034CC  EF61  F01A         	goto	l181
 10790  0034D0                     u10060:
 10791  0034D0                     
 10792                           ;./ultrasonico.h: 51:             TMR1ON = 1;
 10793  0034D0  80CD               	bsf	4045,0,c	;volatile
 10794  0034D2                     l184:
 10795  0034D2  A481               	btfss	129,2,c	;volatile
 10796  0034D4  EF6E  F01A         	goto	u10071
 10797  0034D8  EF70  F01A         	goto	u10070
 10798  0034DC                     u10071:
 10799  0034DC  EFAA  F01A         	goto	l179
 10800  0034E0                     u10070:
 10801  0034E0  A09E               	btfss	3998,0,c	;volatile
 10802  0034E2  EF75  F01A         	goto	u10081
 10803  0034E6  EF77  F01A         	goto	u10080
 10804  0034EA                     u10081:
 10805  0034EA  EF69  F01A         	goto	l184
 10806  0034EE                     u10080:
 10807  0034EE  EFAA  F01A         	goto	l179
 10808  0034F2                     l190:
 10809  0034F2  A681               	btfss	129,3,c	;volatile
 10810  0034F4  EF7E  F01A         	goto	u10091
 10811  0034F8  EF80  F01A         	goto	u10090
 10812  0034FC                     u10091:
 10813  0034FC  EF79  F01A         	goto	l190
 10814  003500                     u10090:
 10815  003500                     
 10816                           ;./ultrasonico.h: 59:             TMR1ON = 1;
 10817  003500  80CD               	bsf	4045,0,c	;volatile
 10818  003502                     l193:
 10819  003502  A681               	btfss	129,3,c	;volatile
 10820  003504  EF86  F01A         	goto	u10101
 10821  003508  EF88  F01A         	goto	u10100
 10822  00350C                     u10101:
 10823  00350C  EFAA  F01A         	goto	l179
 10824  003510                     u10100:
 10825  003510  A09E               	btfss	3998,0,c	;volatile
 10826  003512  EF8D  F01A         	goto	u10111
 10827  003516  EF8F  F01A         	goto	u10110
 10828  00351A                     u10111:
 10829  00351A  EF81  F01A         	goto	l193
 10830  00351E                     u10110:
 10831  00351E  EFAA  F01A         	goto	l179
 10832  003522                     l8183:
 10833  003522  5021               	movf	dameDistancia@numeroSensor^0,w,c
 10834  003524  6E1F               	movwf	??_dameDistancia^0,c
 10835  003526  6A20               	clrf	(??_dameDistancia+1)^0,c
 10836                           
 10837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10838                           ; Switch size 1, requested type "simple"
 10839                           ; Number of cases is 1, Range of values is 0 to 0
 10840                           ; switch strategies available:
 10841                           ; Name         Instructions Cycles
 10842                           ; simple_byte            4     3 (average)
 10843                           ;	Chosen strategy is simple_byte
 10844  003528  5020               	movf	(??_dameDistancia+1)^0,w,c
 10845  00352A  0A00               	xorlw	0	; case 0
 10846  00352C  B4D8               	btfsc	status,2,c
 10847  00352E  EF9B  F01A         	goto	l9049
 10848  003532  EFAA  F01A         	goto	l179
 10849  003536                     l9049:
 10850                           
 10851                           ; Switch size 1, requested type "simple"
 10852                           ; Number of cases is 3, Range of values is 1 to 3
 10853                           ; switch strategies available:
 10854                           ; Name         Instructions Cycles
 10855                           ; simple_byte           10     6 (average)
 10856                           ;	Chosen strategy is simple_byte
 10857  003536  501F               	movf	??_dameDistancia^0,w,c
 10858  003538  0A01               	xorlw	1	; case 1
 10859  00353A  B4D8               	btfsc	status,2,c
 10860  00353C  EF49  F01A         	goto	l171
 10861  003540  0A03               	xorlw	3	; case 2
 10862  003542  B4D8               	btfsc	status,2,c
 10863  003544  EF61  F01A         	goto	l181
 10864  003548  0A01               	xorlw	1	; case 3
 10865  00354A  B4D8               	btfsc	status,2,c
 10866  00354C  EF79  F01A         	goto	l190
 10867  003550  EFAA  F01A         	goto	l179
 10868  003554                     l179:
 10869                           
 10870                           ;./ultrasonico.h: 66:     TMR1ON = 0;
 10871  003554  90CD               	bcf	4045,0,c	;volatile
 10872                           
 10873                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
 10874  003556  B09E               	btfsc	3998,0,c	;volatile
 10875  003558  EFB0  F01A         	goto	u10121
 10876  00355C  EFB2  F01A         	goto	u10120
 10877  003560                     u10121:
 10878  003560  EFD8  F01A         	goto	l8189
 10879  003564                     u10120:
 10880  003564                     
 10881                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
 10882  003564  50CF               	movf	207,w,c	;volatile
 10883  003566  6E20               	movwf	(??_dameDistancia+1)^0,c
 10884  003568  6A1F               	clrf	??_dameDistancia^0,c
 10885  00356A  501F               	movf	??_dameDistancia^0,w,c
 10886  00356C  1226               	iorwf	dameDistancia@conteo^0,f,c
 10887  00356E  5020               	movf	(??_dameDistancia+1)^0,w,c
 10888  003570  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
 10889                           
 10890                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
 10891  003572  50CE               	movf	206,w,c	;volatile
 10892  003574  1226               	iorwf	dameDistancia@conteo^0,f,c
 10893  003576                     
 10894                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
 10895  003576  0E00               	movlw	0
 10896  003578  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 10897  00357A  0E3A               	movlw	58
 10898  00357C  6E08               	movwf	___lwdiv@divisor^0,c
 10899  00357E  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
 10900  003582  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
 10901  003586  EC73  F020         	call	___lwdiv	;wreg free
 10902  00358A  C006  F00D         	movff	?___lwdiv,___xxtofl@val
 10903  00358E  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
 10904  003592  6A0F               	clrf	(___xxtofl@val+2)^0,c
 10905  003594  6A10               	clrf	(___xxtofl@val+3)^0,c
 10906  003596  0E00               	movlw	0
 10907  003598  EC63  F016         	call	___xxtofl
 10908  00359C  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
 10909  0035A0  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
 10910  0035A4  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
 10911  0035A8  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
 10912                           
 10913                           ;./ultrasonico.h: 73:     } else {
 10914  0035AC  EFE1  F01A         	goto	l8193
 10915  0035B0                     l8189:
 10916  0035B0                     
 10917                           ;./ultrasonico.h: 75:         TMR1IF = 0;
 10918  0035B0  909E               	bcf	3998,0,c	;volatile
 10919                           
 10920                           ;./ultrasonico.h: 76:         distancia = 0;
 10921  0035B2  0E00               	movlw	0
 10922  0035B4  6E22               	movwf	dameDistancia@distancia^0,c
 10923  0035B6  0E00               	movlw	0
 10924  0035B8  6E23               	movwf	(dameDistancia@distancia+1)^0,c
 10925  0035BA  0E00               	movlw	0
 10926  0035BC  6E24               	movwf	(dameDistancia@distancia+2)^0,c
 10927  0035BE  0E00               	movlw	0
 10928  0035C0  6E25               	movwf	(dameDistancia@distancia+3)^0,c
 10929  0035C2                     l8193:
 10930                           
 10931                           ;./ultrasonico.h: 80:     return distancia;
 10932  0035C2  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
 10933  0035C6  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
 10934  0035CA  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
 10935  0035CE  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
 10936  0035D2  0012               	return		;funcret
 10937  0035D4                     __end_of_dameDistancia:
 10938                           	opt callstack 0
 10939                           
 10940 ;; *************** function ___xxtofl *****************
 10941 ;; Defined at:
 10942 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  sign            1    wreg     unsigned char 
 10945 ;;  val             4   12[COMRAM] long 
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;  sign            1   20[COMRAM] unsigned char 
 10948 ;;  arg             4   22[COMRAM] unsigned long 
 10949 ;;  exp             1   21[COMRAM] unsigned char 
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  4   12[COMRAM] unsigned char 
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10959 ;;      Params:         4       0       0       0       0       0       0       0       0
 10960 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10961 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10962 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10963 ;;Total ram usage:       14 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    2
 10966 ;; This function calls:
 10967 ;;		Nothing
 10968 ;; This function is called by:
 10969 ;;		_pwmDuty
 10970 ;;		_dameDistancia
 10971 ;;		_PID
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text46
 10976  002CC6                     __ptext46:
 10977                           	opt callstack 0
 10978  002CC6                     ___xxtofl:
 10979                           	opt callstack 25
 10980                           
 10981                           ;incstack = 0
 10982                           ;___xxtofl@sign stored from wreg
 10983  002CC6  6E15               	movwf	___xxtofl@sign^0,c
 10984  002CC8  5015               	movf	___xxtofl@sign^0,w,c
 10985  002CCA  B4D8               	btfsc	status,2,c
 10986  002CCC  EF6A  F016         	goto	u9901
 10987  002CD0  EF6C  F016         	goto	u9900
 10988  002CD4                     u9901:
 10989  002CD4  EF8E  F016         	goto	l1430
 10990  002CD8                     u9900:
 10991  002CD8  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 10992  002CDA  EF73  F016         	goto	u9910
 10993  002CDE  EF71  F016         	goto	u9911
 10994  002CE2                     u9911:
 10995  002CE2  EF8E  F016         	goto	l1430
 10996  002CE6                     u9910:
 10997  002CE6  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 10998  002CEA  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 10999  002CEE  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 11000  002CF2  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 11001  002CF6  1E11               	comf	??___xxtofl^0,f,c
 11002  002CF8  1E12               	comf	(??___xxtofl+1)^0,f,c
 11003  002CFA  1E13               	comf	(??___xxtofl+2)^0,f,c
 11004  002CFC  1E14               	comf	(??___xxtofl+3)^0,f,c
 11005  002CFE  2A11               	incf	??___xxtofl^0,f,c
 11006  002D00  0E00               	movlw	0
 11007  002D02  2212               	addwfc	(??___xxtofl+1)^0,f,c
 11008  002D04  2213               	addwfc	(??___xxtofl+2)^0,f,c
 11009  002D06  2214               	addwfc	(??___xxtofl+3)^0,f,c
 11010  002D08  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 11011  002D0C  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 11012  002D10  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 11013  002D14  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 11014  002D18  EF96  F016         	goto	l8109
 11015  002D1C                     l1430:
 11016  002D1C  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 11017  002D20  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11018  002D24  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11019  002D28  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11020  002D2C                     l8109:
 11021  002D2C  500D               	movf	___xxtofl@val^0,w,c
 11022  002D2E  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 11023  002D30  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 11024  002D32  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 11025  002D34  A4D8               	btfss	status,2,c
 11026  002D36  EF9F  F016         	goto	u9921
 11027  002D3A  EFA1  F016         	goto	u9920
 11028  002D3E                     u9921:
 11029  002D3E  EFAB  F016         	goto	l8115
 11030  002D42                     u9920:
 11031  002D42  0E00               	movlw	0
 11032  002D44  6E0D               	movwf	?___xxtofl^0,c
 11033  002D46  0E00               	movlw	0
 11034  002D48  6E0E               	movwf	(?___xxtofl+1)^0,c
 11035  002D4A  0E00               	movlw	0
 11036  002D4C  6E0F               	movwf	(?___xxtofl+2)^0,c
 11037  002D4E  0E00               	movlw	0
 11038  002D50  6E10               	movwf	(?___xxtofl+3)^0,c
 11039  002D52  EF3C  F017         	goto	l1433
 11040  002D56                     l8115:
 11041  002D56  0E96               	movlw	150
 11042  002D58  6E16               	movwf	___xxtofl@exp^0,c
 11043  002D5A  EFB5  F016         	goto	l8119
 11044  002D5E                     l8117:
 11045  002D5E  2A16               	incf	___xxtofl@exp^0,f,c
 11046  002D60  90D8               	bcf	status,0,c
 11047  002D62  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 11048  002D64  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 11049  002D66  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 11050  002D68  3217               	rrcf	___xxtofl@arg^0,f,c
 11051  002D6A                     l8119:
 11052  002D6A  0E00               	movlw	0
 11053  002D6C  1417               	andwf	___xxtofl@arg^0,w,c
 11054  002D6E  6E11               	movwf	??___xxtofl^0,c
 11055  002D70  0E00               	movlw	0
 11056  002D72  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 11057  002D74  6E12               	movwf	(??___xxtofl+1)^0,c
 11058  002D76  0E00               	movlw	0
 11059  002D78  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 11060  002D7A  6E13               	movwf	(??___xxtofl+2)^0,c
 11061  002D7C  0EFE               	movlw	254
 11062  002D7E  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 11063  002D80  6E14               	movwf	(??___xxtofl+3)^0,c
 11064  002D82  5011               	movf	??___xxtofl^0,w,c
 11065  002D84  1012               	iorwf	(??___xxtofl+1)^0,w,c
 11066  002D86  1013               	iorwf	(??___xxtofl+2)^0,w,c
 11067  002D88  1014               	iorwf	(??___xxtofl+3)^0,w,c
 11068  002D8A  A4D8               	btfss	status,2,c
 11069  002D8C  EFCA  F016         	goto	u9931
 11070  002D90  EFCC  F016         	goto	u9930
 11071  002D94                     u9931:
 11072  002D94  EFAF  F016         	goto	l8117
 11073  002D98                     u9930:
 11074  002D98  EFDA  F016         	goto	l1437
 11075  002D9C                     l8121:
 11076  002D9C  2A16               	incf	___xxtofl@exp^0,f,c
 11077  002D9E  0E01               	movlw	1
 11078  002DA0  2617               	addwf	___xxtofl@arg^0,f,c
 11079  002DA2  0E00               	movlw	0
 11080  002DA4  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 11081  002DA6  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 11082  002DA8  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 11083  002DAA  90D8               	bcf	status,0,c
 11084  002DAC  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 11085  002DAE  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 11086  002DB0  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 11087  002DB2  3217               	rrcf	___xxtofl@arg^0,f,c
 11088  002DB4                     l1437:
 11089  002DB4  0E00               	movlw	0
 11090  002DB6  1417               	andwf	___xxtofl@arg^0,w,c
 11091  002DB8  6E11               	movwf	??___xxtofl^0,c
 11092  002DBA  0E00               	movlw	0
 11093  002DBC  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 11094  002DBE  6E12               	movwf	(??___xxtofl+1)^0,c
 11095  002DC0  0E00               	movlw	0
 11096  002DC2  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 11097  002DC4  6E13               	movwf	(??___xxtofl+2)^0,c
 11098  002DC6  0EFF               	movlw	255
 11099  002DC8  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 11100  002DCA  6E14               	movwf	(??___xxtofl+3)^0,c
 11101  002DCC  5011               	movf	??___xxtofl^0,w,c
 11102  002DCE  1012               	iorwf	(??___xxtofl+1)^0,w,c
 11103  002DD0  1013               	iorwf	(??___xxtofl+2)^0,w,c
 11104  002DD2  1014               	iorwf	(??___xxtofl+3)^0,w,c
 11105  002DD4  A4D8               	btfss	status,2,c
 11106  002DD6  EFEF  F016         	goto	u9941
 11107  002DDA  EFF1  F016         	goto	u9940
 11108  002DDE                     u9941:
 11109  002DDE  EFCE  F016         	goto	l8121
 11110  002DE2                     u9940:
 11111  002DE2  EFF9  F016         	goto	l8129
 11112  002DE6                     l8127:
 11113  002DE6  0616               	decf	___xxtofl@exp^0,f,c
 11114  002DE8  90D8               	bcf	status,0,c
 11115  002DEA  3617               	rlcf	___xxtofl@arg^0,f,c
 11116  002DEC  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 11117  002DEE  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 11118  002DF0  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 11119  002DF2                     l8129:
 11120  002DF2  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 11121  002DF4  EFFE  F016         	goto	u9951
 11122  002DF8  EF00  F017         	goto	u9950
 11123  002DFC                     u9951:
 11124  002DFC  EF08  F017         	goto	l1444
 11125  002E00                     u9950:
 11126  002E00  0E02               	movlw	2
 11127  002E02  6016               	cpfslt	___xxtofl@exp^0,c
 11128  002E04  EF06  F017         	goto	u9961
 11129  002E08  EF08  F017         	goto	u9960
 11130  002E0C                     u9961:
 11131  002E0C  EFF3  F016         	goto	l8127
 11132  002E10                     u9960:
 11133  002E10                     l1444:
 11134  002E10  B016               	btfsc	___xxtofl@exp^0,0,c
 11135  002E12  EF0D  F017         	goto	u9971
 11136  002E16  EF0F  F017         	goto	u9970
 11137  002E1A                     u9971:
 11138  002E1A  EF10  F017         	goto	l8135
 11139  002E1E                     u9970:
 11140  002E1E  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 11141  002E20                     l8135:
 11142  002E20  90D8               	bcf	status,0,c
 11143  002E22  3216               	rrcf	___xxtofl@exp^0,f,c
 11144  002E24  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 11145  002E28  6A12               	clrf	(??___xxtofl+1)^0,c
 11146  002E2A  6A13               	clrf	(??___xxtofl+2)^0,c
 11147  002E2C  6A14               	clrf	(??___xxtofl+3)^0,c
 11148  002E2E  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 11149  002E32  6A13               	clrf	(??___xxtofl+2)^0,c
 11150  002E34  6A12               	clrf	(??___xxtofl+1)^0,c
 11151  002E36  6A11               	clrf	??___xxtofl^0,c
 11152  002E38  5011               	movf	??___xxtofl^0,w,c
 11153  002E3A  1217               	iorwf	___xxtofl@arg^0,f,c
 11154  002E3C  5012               	movf	(??___xxtofl+1)^0,w,c
 11155  002E3E  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 11156  002E40  5013               	movf	(??___xxtofl+2)^0,w,c
 11157  002E42  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 11158  002E44  5014               	movf	(??___xxtofl+3)^0,w,c
 11159  002E46  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 11160  002E48  5015               	movf	___xxtofl@sign^0,w,c
 11161  002E4A  B4D8               	btfsc	status,2,c
 11162  002E4C  EF2A  F017         	goto	u9981
 11163  002E50  EF2C  F017         	goto	u9980
 11164  002E54                     u9981:
 11165  002E54  EF34  F017         	goto	l8145
 11166  002E58                     u9980:
 11167  002E58  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 11168  002E5A  EF33  F017         	goto	u9990
 11169  002E5E  EF31  F017         	goto	u9991
 11170  002E62                     u9991:
 11171  002E62  EF34  F017         	goto	l8145
 11172  002E66                     u9990:
 11173  002E66  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 11174  002E68                     l8145:
 11175  002E68  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 11176  002E6C  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 11177  002E70  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 11178  002E74  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 11179  002E78                     l1433:
 11180  002E78  0012               	return		;funcret
 11181  002E7A                     __end_of___xxtofl:
 11182                           	opt callstack 0
 11183                           
 11184 ;; *************** function ___lwdiv *****************
 11185 ;; Defined at:
 11186 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 11187 ;; Parameters:    Size  Location     Type
 11188 ;;  dividend        2    5[COMRAM] unsigned int 
 11189 ;;  divisor         2    7[COMRAM] unsigned int 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;  quotient        2   10[COMRAM] unsigned int 
 11192 ;;  counter         1    9[COMRAM] unsigned char 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  2    5[COMRAM] unsigned int 
 11195 ;; Registers used:
 11196 ;;		wreg, status,2, status,0
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11202 ;;      Params:         4       0       0       0       0       0       0       0       0
 11203 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11204 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11205 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11206 ;;Total ram usage:        7 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:    2
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_dameDistancia
 11213 ;; This function uses a non-reentrant model
 11214 ;;
 11215                           
 11216                           	psect	text47
 11217  0040E6                     __ptext47:
 11218                           	opt callstack 0
 11219  0040E6                     ___lwdiv:
 11220                           	opt callstack 25
 11221  0040E6  0E00               	movlw	0
 11222  0040E8  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11223  0040EA  0E00               	movlw	0
 11224  0040EC  6E0B               	movwf	___lwdiv@quotient^0,c
 11225  0040EE  5008               	movf	___lwdiv@divisor^0,w,c
 11226  0040F0  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11227  0040F2  B4D8               	btfsc	status,2,c
 11228  0040F4  EF7E  F020         	goto	u9871
 11229  0040F8  EF80  F020         	goto	u9870
 11230  0040FC                     u9871:
 11231  0040FC  EFA8  F020         	goto	l1266
 11232  004100                     u9870:
 11233  004100  0E01               	movlw	1
 11234  004102  6E0A               	movwf	___lwdiv@counter^0,c
 11235  004104  EF88  F020         	goto	l8089
 11236  004108                     l8087:
 11237  004108  90D8               	bcf	status,0,c
 11238  00410A  3608               	rlcf	___lwdiv@divisor^0,f,c
 11239  00410C  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11240  00410E  2A0A               	incf	___lwdiv@counter^0,f,c
 11241  004110                     l8089:
 11242  004110  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 11243  004112  EF8D  F020         	goto	u9881
 11244  004116  EF8F  F020         	goto	u9880
 11245  00411A                     u9881:
 11246  00411A  EF84  F020         	goto	l8087
 11247  00411E                     u9880:
 11248  00411E                     l8091:
 11249  00411E  90D8               	bcf	status,0,c
 11250  004120  360B               	rlcf	___lwdiv@quotient^0,f,c
 11251  004122  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11252  004124  5008               	movf	___lwdiv@divisor^0,w,c
 11253  004126  5C06               	subwf	___lwdiv@dividend^0,w,c
 11254  004128  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11255  00412A  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11256  00412C  A0D8               	btfss	status,0,c
 11257  00412E  EF9B  F020         	goto	u9891
 11258  004132  EF9D  F020         	goto	u9890
 11259  004136                     u9891:
 11260  004136  EFA2  F020         	goto	l8099
 11261  00413A                     u9890:
 11262  00413A  5008               	movf	___lwdiv@divisor^0,w,c
 11263  00413C  5E06               	subwf	___lwdiv@dividend^0,f,c
 11264  00413E  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11265  004140  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11266  004142  800B               	bsf	___lwdiv@quotient^0,0,c
 11267  004144                     l8099:
 11268  004144  90D8               	bcf	status,0,c
 11269  004146  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11270  004148  3208               	rrcf	___lwdiv@divisor^0,f,c
 11271  00414A  2E0A               	decfsz	___lwdiv@counter^0,f,c
 11272  00414C  EF8F  F020         	goto	l8091
 11273  004150                     l1266:
 11274  004150  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
 11275  004154  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11276  004158  0012               	return		;funcret
 11277  00415A                     __end_of___lwdiv:
 11278                           	opt callstack 0
 11279                           
 11280 ;; *************** function _configurarAdc *****************
 11281 ;; Defined at:
 11282 ;;		line 7 in file "./adc.h"
 11283 ;; Parameters:    Size  Location     Type
 11284 ;;		None
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;		None
 11287 ;; Return value:  Size  Location     Type
 11288 ;;                  1    wreg      void 
 11289 ;; Registers used:
 11290 ;;		wreg, status,2
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11296 ;;      Params:         0       0       0       0       0       0       0       0       0
 11297 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11298 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11299 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11300 ;;Total ram usage:        0 bytes
 11301 ;; Hardware stack levels used:    1
 11302 ;; Hardware stack levels required when called:    2
 11303 ;; This function calls:
 11304 ;;		Nothing
 11305 ;; This function is called by:
 11306 ;;		_main
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           	psect	text48
 11311  004834                     __ptext48:
 11312                           	opt callstack 0
 11313  004834                     _configurarAdc:
 11314                           	opt callstack 28
 11315  004834                     
 11316                           ;./adc.h: 8:     ADCON1 = 0b00001110;
 11317  004834  0E0E               	movlw	14
 11318  004836  6EC1               	movwf	193,c	;volatile
 11319                           
 11320                           ;./adc.h: 9:     ADCON2 = 0b10100101;
 11321  004838  0EA5               	movlw	165
 11322  00483A  6EC0               	movwf	192,c	;volatile
 11323  00483C  0012               	return		;funcret
 11324  00483E                     __end_of_configurarAdc:
 11325                           	opt callstack 0
 11326                           
 11327 ;; *************** function _configPwm *****************
 11328 ;; Defined at:
 11329 ;;		line 47 in file "./pwm.h"
 11330 ;; Parameters:    Size  Location     Type
 11331 ;;  channel         1    wreg     unsigned char 
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;  channel         1    7[COMRAM] unsigned char 
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  1    wreg      void 
 11336 ;; Registers used:
 11337 ;;		wreg, status,2, status,0
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/0
 11340 ;;		On exit  : 0/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11343 ;;      Params:         0       0       0       0       0       0       0       0       0
 11344 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11345 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11346 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11347 ;;Total ram usage:        3 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:    2
 11350 ;; This function calls:
 11351 ;;		Nothing
 11352 ;; This function is called by:
 11353 ;;		_main
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text49
 11358  004508                     __ptext49:
 11359                           	opt callstack 0
 11360  004508                     _configPwm:
 11361                           	opt callstack 28
 11362                           
 11363                           ;incstack = 0
 11364                           ;configPwm@channel stored from wreg
 11365  004508  6E08               	movwf	configPwm@channel^0,c
 11366  00450A                     
 11367                           ;./pwm.h: 56:         T2CKPS0 = 1;
 11368  00450A  80CA               	bsf	4042,0,c	;volatile
 11369                           
 11370                           ;./pwm.h: 57:         T2CKPS1 = 1;
 11371  00450C  82CA               	bsf	4042,1,c	;volatile
 11372  00450E                     
 11373                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
 11374  00450E  0E7C               	movlw	124
 11375  004510  6ECB               	movwf	203,c	;volatile
 11376                           
 11377                           ;./pwm.h: 63:     switch (channel) {
 11378  004512  EF95  F022         	goto	l8285
 11379  004516                     l151:
 11380                           
 11381                           ;./pwm.h: 66:             TRISC2 = 0;
 11382  004516  9494               	bcf	3988,2,c	;volatile
 11383                           
 11384                           ;./pwm.h: 67:             CCP1M3 = 1;
 11385  004518  86BD               	bsf	4029,3,c	;volatile
 11386                           
 11387                           ;./pwm.h: 68:             CCP1M2 = 1;
 11388  00451A  84BD               	bsf	4029,2,c	;volatile
 11389                           
 11390                           ;./pwm.h: 71:             break;
 11391  00451C  EFAA  F022         	goto	l152
 11392  004520                     l153:
 11393                           
 11394                           ;./pwm.h: 74:             TRISC1 = 0;
 11395  004520  9294               	bcf	3988,1,c	;volatile
 11396                           
 11397                           ;./pwm.h: 75:             CCP2M3 = 1;
 11398  004522  86BA               	bsf	4026,3,c	;volatile
 11399                           
 11400                           ;./pwm.h: 76:             CCP2M2 = 1;
 11401  004524  84BA               	bsf	4026,2,c	;volatile
 11402                           
 11403                           ;./pwm.h: 77:             break;
 11404  004526  EFAA  F022         	goto	l152
 11405  00452A                     l8285:
 11406  00452A  5008               	movf	configPwm@channel^0,w,c
 11407  00452C  6E06               	movwf	??_configPwm^0,c
 11408  00452E  6A07               	clrf	(??_configPwm+1)^0,c
 11409                           
 11410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11411                           ; Switch size 1, requested type "simple"
 11412                           ; Number of cases is 1, Range of values is 0 to 0
 11413                           ; switch strategies available:
 11414                           ; Name         Instructions Cycles
 11415                           ; simple_byte            4     3 (average)
 11416                           ;	Chosen strategy is simple_byte
 11417  004530  5007               	movf	(??_configPwm+1)^0,w,c
 11418  004532  0A00               	xorlw	0	; case 0
 11419  004534  B4D8               	btfsc	status,2,c
 11420  004536  EF9F  F022         	goto	l9051
 11421  00453A  EFAA  F022         	goto	l152
 11422  00453E                     l9051:
 11423                           
 11424                           ; Switch size 1, requested type "simple"
 11425                           ; Number of cases is 2, Range of values is 1 to 2
 11426                           ; switch strategies available:
 11427                           ; Name         Instructions Cycles
 11428                           ; simple_byte            7     4 (average)
 11429                           ;	Chosen strategy is simple_byte
 11430  00453E  5006               	movf	??_configPwm^0,w,c
 11431  004540  0A01               	xorlw	1	; case 1
 11432  004542  B4D8               	btfsc	status,2,c
 11433  004544  EF8B  F022         	goto	l151
 11434  004548  0A03               	xorlw	3	; case 2
 11435  00454A  B4D8               	btfsc	status,2,c
 11436  00454C  EF90  F022         	goto	l153
 11437  004550  EFAA  F022         	goto	l152
 11438  004554                     l152:
 11439                           
 11440                           ;./pwm.h: 81:     TMR2ON = 1;
 11441  004554  84CA               	bsf	4042,2,c	;volatile
 11442  004556  0012               	return		;funcret
 11443  004558                     __end_of_configPwm:
 11444                           	opt callstack 0
 11445                           
 11446 ;; *************** function _UART_init *****************
 11447 ;; Defined at:
 11448 ;;		line 13 in file "./UART.h"
 11449 ;; Parameters:    Size  Location     Type
 11450 ;;  BAUD            4   31[COMRAM] long 
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  frecuenciaCr    4    0        long 
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  1    wreg      void 
 11455 ;; Registers used:
 11456 ;;		wreg, status,2, status,0, cstack
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/0
 11459 ;;		On exit  : 0/0
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11462 ;;      Params:         4       0       0       0       0       0       0       0       0
 11463 ;;      Locals:         8       0       0       0       0       0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11465 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11466 ;;Total ram usage:       12 bytes
 11467 ;; Hardware stack levels used:    1
 11468 ;; Hardware stack levels required when called:    3
 11469 ;; This function calls:
 11470 ;;		___aldiv
 11471 ;; This function is called by:
 11472 ;;		_main
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           	psect	text50
 11477  00415A                     __ptext50:
 11478                           	opt callstack 0
 11479  00415A                     _UART_init:
 11480                           	opt callstack 27
 11481  00415A                     
 11482                           ;./UART.h: 16:     TRISC6 = 0;
 11483  00415A  9C94               	bcf	3988,6,c	;volatile
 11484  00415C                     
 11485                           ;./UART.h: 17:     TRISC7 = 1;
 11486  00415C  8E94               	bsf	3988,7,c	;volatile
 11487  00415E                     
 11488                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11489  00415E  0E10               	movlw	16
 11490  004160  6E16               	movwf	___aldiv@divisor^0,c
 11491  004162  0E00               	movlw	0
 11492  004164  6E17               	movwf	(___aldiv@divisor+1)^0,c
 11493  004166  0E00               	movlw	0
 11494  004168  6E18               	movwf	(___aldiv@divisor+2)^0,c
 11495  00416A  0E00               	movlw	0
 11496  00416C  6E19               	movwf	(___aldiv@divisor+3)^0,c
 11497  00416E  0E00               	movlw	0
 11498  004170  6E12               	movwf	___aldiv@dividend^0,c
 11499  004172  0E09               	movlw	9
 11500  004174  6E13               	movwf	(___aldiv@dividend+1)^0,c
 11501  004176  0E3D               	movlw	61
 11502  004178  6E14               	movwf	(___aldiv@dividend+2)^0,c
 11503  00417A  0E00               	movlw	0
 11504  00417C  6E15               	movwf	(___aldiv@dividend+3)^0,c
 11505  00417E  ECEA  F01A         	call	___aldiv	;wreg free
 11506  004182  C012  F028         	movff	?___aldiv,_UART_init$1679
 11507  004186  C013  F029         	movff	?___aldiv+1,_UART_init$1679+1
 11508  00418A  C014  F02A         	movff	?___aldiv+2,_UART_init$1679+2
 11509  00418E  C015  F02B         	movff	?___aldiv+3,_UART_init$1679+3
 11510  004192                     
 11511                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 11512  004192  C028  F012         	movff	_UART_init$1679,___aldiv@dividend
 11513  004196  C029  F013         	movff	_UART_init$1679+1,___aldiv@dividend+1
 11514  00419A  C02A  F014         	movff	_UART_init$1679+2,___aldiv@dividend+2
 11515  00419E  C02B  F015         	movff	_UART_init$1679+3,___aldiv@dividend+3
 11516  0041A2  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 11517  0041A6  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 11518  0041AA  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 11519  0041AE  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 11520  0041B2  ECEA  F01A         	call	___aldiv	;wreg free
 11521  0041B6  0412               	decf	?___aldiv^0,w,c
 11522  0041B8  6EAF               	movwf	175,c	;volatile
 11523  0041BA                     
 11524                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 11525  0041BA  84AC               	bsf	172,2,c	;volatile
 11526  0041BC                     
 11527                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 11528  0041BC  98AC               	bcf	172,4,c	;volatile
 11529  0041BE                     
 11530                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 11531  0041BE  8EAB               	bsf	171,7,c	;volatile
 11532  0041C0                     
 11533                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 11534  0041C0  9CAC               	bcf	172,6,c	;volatile
 11535  0041C2                     
 11536                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 11537  0041C2  8AAC               	bsf	172,5,c	;volatile
 11538  0041C4                     
 11539                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 11540  0041C4  9CAB               	bcf	171,6,c	;volatile
 11541  0041C6                     
 11542                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 11543  0041C6  88AB               	bsf	171,4,c	;volatile
 11544  0041C8  0012               	return		;funcret
 11545  0041CA                     __end_of_UART_init:
 11546                           	opt callstack 0
 11547                           
 11548 ;; *************** function ___aldiv *****************
 11549 ;; Defined at:
 11550 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11551 ;; Parameters:    Size  Location     Type
 11552 ;;  dividend        4   17[COMRAM] long 
 11553 ;;  divisor         4   21[COMRAM] long 
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;  quotient        4   27[COMRAM] long 
 11556 ;;  sign            1   26[COMRAM] unsigned char 
 11557 ;;  counter         1   25[COMRAM] unsigned char 
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  4   17[COMRAM] long 
 11560 ;; Registers used:
 11561 ;;		wreg, status,2, status,0
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11567 ;;      Params:         8       0       0       0       0       0       0       0       0
 11568 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11569 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11570 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11571 ;;Total ram usage:       14 bytes
 11572 ;; Hardware stack levels used:    1
 11573 ;; Hardware stack levels required when called:    2
 11574 ;; This function calls:
 11575 ;;		Nothing
 11576 ;; This function is called by:
 11577 ;;		_map
 11578 ;;		_UART_init
 11579 ;; This function uses a non-reentrant model
 11580 ;;
 11581                           
 11582                           	psect	text51
 11583  0035D4                     __ptext51:
 11584                           	opt callstack 0
 11585  0035D4                     ___aldiv:
 11586                           	opt callstack 24
 11587  0035D4  0E00               	movlw	0
 11588  0035D6  6E1B               	movwf	___aldiv@sign^0,c
 11589  0035D8  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 11590  0035DA  EFF3  F01A         	goto	u9790
 11591  0035DE  EFF1  F01A         	goto	u9791
 11592  0035E2                     u9791:
 11593  0035E2  EFFD  F01A         	goto	l8031
 11594  0035E6                     u9790:
 11595  0035E6  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 11596  0035E8  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 11597  0035EA  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 11598  0035EC  6C16               	negf	___aldiv@divisor^0,c
 11599  0035EE  0E00               	movlw	0
 11600  0035F0  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 11601  0035F2  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 11602  0035F4  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 11603  0035F6  0E01               	movlw	1
 11604  0035F8  6E1B               	movwf	___aldiv@sign^0,c
 11605  0035FA                     l8031:
 11606  0035FA  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 11607  0035FC  EF04  F01B         	goto	u9800
 11608  003600  EF02  F01B         	goto	u9801
 11609  003604                     u9801:
 11610  003604  EF0E  F01B         	goto	l8037
 11611  003608                     u9800:
 11612  003608  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 11613  00360A  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 11614  00360C  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 11615  00360E  6C12               	negf	___aldiv@dividend^0,c
 11616  003610  0E00               	movlw	0
 11617  003612  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 11618  003614  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 11619  003616  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 11620  003618  0E01               	movlw	1
 11621  00361A  1A1B               	xorwf	___aldiv@sign^0,f,c
 11622  00361C                     l8037:
 11623  00361C  0E00               	movlw	0
 11624  00361E  6E1C               	movwf	___aldiv@quotient^0,c
 11625  003620  0E00               	movlw	0
 11626  003622  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 11627  003624  0E00               	movlw	0
 11628  003626  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 11629  003628  0E00               	movlw	0
 11630  00362A  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 11631  00362C  5016               	movf	___aldiv@divisor^0,w,c
 11632  00362E  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 11633  003630  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 11634  003632  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 11635  003634  B4D8               	btfsc	status,2,c
 11636  003636  EF1F  F01B         	goto	u9811
 11637  00363A  EF21  F01B         	goto	u9810
 11638  00363E                     u9811:
 11639  00363E  EF57  F01B         	goto	l8059
 11640  003642                     u9810:
 11641  003642  0E01               	movlw	1
 11642  003644  6E1A               	movwf	___aldiv@counter^0,c
 11643  003646  EF2B  F01B         	goto	l8045
 11644  00364A                     l8043:
 11645  00364A  90D8               	bcf	status,0,c
 11646  00364C  3616               	rlcf	___aldiv@divisor^0,f,c
 11647  00364E  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 11648  003650  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 11649  003652  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 11650  003654  2A1A               	incf	___aldiv@counter^0,f,c
 11651  003656                     l8045:
 11652  003656  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 11653  003658  EF30  F01B         	goto	u9821
 11654  00365C  EF32  F01B         	goto	u9820
 11655  003660                     u9821:
 11656  003660  EF25  F01B         	goto	l8043
 11657  003664                     u9820:
 11658  003664                     l8047:
 11659  003664  90D8               	bcf	status,0,c
 11660  003666  361C               	rlcf	___aldiv@quotient^0,f,c
 11661  003668  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 11662  00366A  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 11663  00366C  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 11664  00366E  5016               	movf	___aldiv@divisor^0,w,c
 11665  003670  5C12               	subwf	___aldiv@dividend^0,w,c
 11666  003672  5017               	movf	(___aldiv@divisor+1)^0,w,c
 11667  003674  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 11668  003676  5018               	movf	(___aldiv@divisor+2)^0,w,c
 11669  003678  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 11670  00367A  5019               	movf	(___aldiv@divisor+3)^0,w,c
 11671  00367C  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 11672  00367E  A0D8               	btfss	status,0,c
 11673  003680  EF44  F01B         	goto	u9831
 11674  003684  EF46  F01B         	goto	u9830
 11675  003688                     u9831:
 11676  003688  EF4F  F01B         	goto	l8055
 11677  00368C                     u9830:
 11678  00368C  5016               	movf	___aldiv@divisor^0,w,c
 11679  00368E  5E12               	subwf	___aldiv@dividend^0,f,c
 11680  003690  5017               	movf	(___aldiv@divisor+1)^0,w,c
 11681  003692  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 11682  003694  5018               	movf	(___aldiv@divisor+2)^0,w,c
 11683  003696  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 11684  003698  5019               	movf	(___aldiv@divisor+3)^0,w,c
 11685  00369A  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 11686  00369C  801C               	bsf	___aldiv@quotient^0,0,c
 11687  00369E                     l8055:
 11688  00369E  90D8               	bcf	status,0,c
 11689  0036A0  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 11690  0036A2  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 11691  0036A4  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 11692  0036A6  3216               	rrcf	___aldiv@divisor^0,f,c
 11693  0036A8  2E1A               	decfsz	___aldiv@counter^0,f,c
 11694  0036AA  EF32  F01B         	goto	l8047
 11695  0036AE                     l8059:
 11696  0036AE  501B               	movf	___aldiv@sign^0,w,c
 11697  0036B0  B4D8               	btfsc	status,2,c
 11698  0036B2  EF5D  F01B         	goto	u9841
 11699  0036B6  EF5F  F01B         	goto	u9840
 11700  0036BA                     u9841:
 11701  0036BA  EF67  F01B         	goto	l8063
 11702  0036BE                     u9840:
 11703  0036BE  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 11704  0036C0  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 11705  0036C2  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 11706  0036C4  6C1C               	negf	___aldiv@quotient^0,c
 11707  0036C6  0E00               	movlw	0
 11708  0036C8  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 11709  0036CA  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 11710  0036CC  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 11711  0036CE                     l8063:
 11712  0036CE  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 11713  0036D2  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 11714  0036D6  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 11715  0036DA  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 11716  0036DE  0012               	return		;funcret
 11717  0036E0                     __end_of___aldiv:
 11718                           	opt callstack 0
 11719                           
 11720 ;; *************** function _boton *****************
 11721 ;; Defined at:
 11722 ;;		line 85 in file "main.c"
 11723 ;; Parameters:    Size  Location     Type
 11724 ;;		None
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;		None
 11727 ;; Return value:  Size  Location     Type
 11728 ;;                  1    wreg      void 
 11729 ;; Registers used:
 11730 ;;		wreg, status,2, status,0, cstack
 11731 ;; Tracked objects:
 11732 ;;		On entry : 0/0
 11733 ;;		On exit  : 0/0
 11734 ;;		Unchanged: 0/0
 11735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11736 ;;      Params:         0       0       0       0       0       0       0       0       0
 11737 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11738 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11739 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11740 ;;Total ram usage:        2 bytes
 11741 ;; Hardware stack levels used:    1
 11742 ;; Hardware stack levels required when called:    1
 11743 ;; This function calls:
 11744 ;;		_antiRebote
 11745 ;; This function is called by:
 11746 ;;		Interrupt level 2
 11747 ;; This function uses a non-reentrant model
 11748 ;;
 11749                           
 11750                           	psect	intcode
 11751  000008                     __pintcode:
 11752                           	opt callstack 0
 11753  000008                     _boton:
 11754                           	opt callstack 19
 11755                           
 11756                           ;incstack = 0
 11757  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11758  00000A  ED08  F022         	call	int_func,f	;refresh shadow registers
 11759                           
 11760                           	psect	intcode_body
 11761  004410                     __pintcode_body:
 11762                           	opt callstack 19
 11763  004410                     int_func:
 11764                           	opt callstack 19
 11765  004410  0006               	pop		; remove dummy address from shadow register refresh
 11766  004412                     
 11767                           ;main.c: 87:     if (INT0IF)
 11768  004412  A2F2               	btfss	4082,1,c	;volatile
 11769  004414  EF0E  F022         	goto	i2u657_41
 11770  004418  EF10  F022         	goto	i2u657_40
 11771  00441C                     i2u657_41:
 11772  00441C  EF30  F022         	goto	i2l250
 11773  004420                     i2u657_40:
 11774  004420                     
 11775                           ;main.c: 88:     {;main.c: 89:         antiRebote(1);
 11776  004420  0E01               	movlw	1
 11777  004422  ECDC  F021         	call	_antiRebote
 11778  004426                     
 11779                           ;main.c: 90:         if (pausa) {
 11780  004426  0101               	movlb	1	; () banked
 11781  004428  51FB               	movf	_pausa& (0+255),w,b
 11782  00442A  B4D8               	btfsc	status,2,c
 11783  00442C  EF1A  F022         	goto	i2u658_41
 11784  004430  EF1C  F022         	goto	i2u658_40
 11785  004434                     i2u658_41:
 11786  004434  EF2C  F022         	goto	i2l248
 11787  004438                     i2u658_40:
 11788  004438                     
 11789                           ; BSR set to: 1
 11790                           ;main.c: 91:             pausa = 0;
 11791  004438  0E00               	movlw	0
 11792  00443A  6FFB               	movwf	_pausa& (0+255),b
 11793  00443C                     
 11794                           ; BSR set to: 1
 11795                           ;main.c: 92:             LATD2 = 1;
 11796  00443C  848C               	bsf	3980,2,c	;volatile
 11797  00443E                     
 11798                           ; BSR set to: 1
 11799                           ;main.c: 93:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 11800  00443E  0E10               	movlw	16
 11801  004440  6E05               	movwf	(??_boton+1)^0,c
 11802  004442  0E39               	movlw	57
 11803  004444  6E04               	movwf	??_boton^0,c
 11804  004446  0E0E               	movlw	14
 11805  004448                     i2u1080_47:
 11806  004448  2EE8               	decfsz	wreg,f,c
 11807  00444A  D7FE               	bra	i2u1080_47
 11808  00444C  2E04               	decfsz	??_boton^0,f,c
 11809  00444E  D7FC               	bra	i2u1080_47
 11810  004450  2E05               	decfsz	(??_boton+1)^0,f,c
 11811  004452  D7FA               	bra	i2u1080_47
 11812                           
 11813                           ;main.c: 94:         } else {
 11814  004454  EF2F  F022         	goto	i2l5865
 11815  004458                     i2l248:
 11816                           
 11817                           ; BSR set to: 1
 11818                           ;main.c: 95:             LATD2 = 0;
 11819  004458  948C               	bcf	3980,2,c	;volatile
 11820  00445A                     
 11821                           ; BSR set to: 1
 11822                           ;main.c: 96:             pausa = 1;
 11823  00445A  0E01               	movlw	1
 11824  00445C  6FFB               	movwf	_pausa& (0+255),b
 11825  00445E                     i2l5865:
 11826                           
 11827                           ;main.c: 99:         INT0IF = 0;
 11828  00445E  92F2               	bcf	4082,1,c	;volatile
 11829  004460                     i2l250:
 11830  004460  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11831  004462  0011               	retfie		f
 11832  004464                     __end_of_boton:
 11833                           	opt callstack 0
 11834                           
 11835 ;; *************** function _antiRebote *****************
 11836 ;; Defined at:
 11837 ;;		line 173 in file "main.c"
 11838 ;; Parameters:    Size  Location     Type
 11839 ;;  pin             1    wreg     unsigned char 
 11840 ;; Auto vars:     Size  Location     Type
 11841 ;;  pin             1    2[COMRAM] unsigned char 
 11842 ;; Return value:  Size  Location     Type
 11843 ;;                  1    wreg      void 
 11844 ;; Registers used:
 11845 ;;		wreg, status,2, status,0
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 0/0
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11851 ;;      Params:         0       0       0       0       0       0       0       0       0
 11852 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11853 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11854 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11855 ;;Total ram usage:        3 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; This function calls:
 11858 ;;		Nothing
 11859 ;; This function is called by:
 11860 ;;		_boton
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864                           	psect	text53
 11865  0043B8                     __ptext53:
 11866                           	opt callstack 0
 11867  0043B8                     _antiRebote:
 11868                           	opt callstack 19
 11869                           
 11870                           ;incstack = 0
 11871                           ;antiRebote@pin stored from wreg
 11872  0043B8  6E03               	movwf	antiRebote@pin^0,c
 11873  0043BA                     
 11874                           ;main.c: 175:     switch (pin) {
 11875  0043BA  EFF6  F021         	goto	i2l5791
 11876  0043BE                     i2l275:
 11877  0043BE  A081               	btfss	129,0,c	;volatile
 11878  0043C0  EFE4  F021         	goto	i2u653_41
 11879  0043C4  EFE6  F021         	goto	i2u653_40
 11880  0043C8                     i2u653_41:
 11881  0043C8  EFDF  F021         	goto	i2l275
 11882  0043CC                     i2u653_40:
 11883  0043CC                     i2l278:
 11884  0043CC  B081               	btfsc	129,0,c	;volatile
 11885  0043CE  EFEB  F021         	goto	i2u654_41
 11886  0043D2  EFED  F021         	goto	i2u654_40
 11887  0043D6                     i2u654_41:
 11888  0043D6  EFE6  F021         	goto	i2l278
 11889  0043DA                     i2u654_40:
 11890  0043DA                     
 11891                           ;main.c: 179:             _delay((unsigned long)((100)*(4000000/4000.0)));
 11892  0043DA  0E82               	movlw	130
 11893  0043DC  6E01               	movwf	??_antiRebote^0,c
 11894  0043DE  0EDE               	movlw	222
 11895  0043E0                     i2u1081_47:
 11896  0043E0  2EE8               	decfsz	wreg,f,c
 11897  0043E2  D7FE               	bra	i2u1081_47
 11898  0043E4  2E01               	decfsz	??_antiRebote^0,f,c
 11899  0043E6  D7FC               	bra	i2u1081_47
 11900                           
 11901                           ;main.c: 180:             break;
 11902  0043E8  EF07  F022         	goto	i2l283
 11903  0043EC                     i2l5791:
 11904  0043EC  5003               	movf	antiRebote@pin^0,w,c
 11905  0043EE  6E01               	movwf	??_antiRebote^0,c
 11906  0043F0  6A02               	clrf	(??_antiRebote+1)^0,c
 11907                           
 11908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11909                           ; Switch size 1, requested type "simple"
 11910                           ; Number of cases is 1, Range of values is 0 to 0
 11911                           ; switch strategies available:
 11912                           ; Name         Instructions Cycles
 11913                           ; simple_byte            4     3 (average)
 11914                           ;	Chosen strategy is simple_byte
 11915  0043F2  5002               	movf	(??_antiRebote+1)^0,w,c
 11916  0043F4  0A00               	xorlw	0	; case 0
 11917  0043F6  B4D8               	btfsc	status,2,c
 11918  0043F8  EF00  F022         	goto	i2l9053
 11919  0043FC  EF07  F022         	goto	i2l283
 11920  004400                     i2l9053:
 11921                           
 11922                           ; Switch size 1, requested type "simple"
 11923                           ; Number of cases is 1, Range of values is 1 to 1
 11924                           ; switch strategies available:
 11925                           ; Name         Instructions Cycles
 11926                           ; simple_byte            4     3 (average)
 11927                           ;	Chosen strategy is simple_byte
 11928  004400  5001               	movf	??_antiRebote^0,w,c
 11929  004402  0A01               	xorlw	1	; case 1
 11930  004404  B4D8               	btfsc	status,2,c
 11931  004406  EFDF  F021         	goto	i2l275
 11932  00440A  EF07  F022         	goto	i2l283
 11933  00440E                     i2l283:
 11934  00440E  0012               	return		;funcret
 11935  004410                     __end_of_antiRebote:
 11936                           	opt callstack 0
 11937                           
 11938                           	psect	rparam
 11939  0000                     
 11940                           	psect	temp
 11941  00005A                     btemp:
 11942                           	opt callstack 0
 11943  00005A                     	ds	1
 11944  0000                     int$flags	set	btemp
 11945  0000                     wtemp8	set	btemp+1
 11946  0000                     ttemp5	set	btemp+1
 11947  0000                     ttemp6	set	btemp+4
 11948  0000                     ttemp7	set	btemp+8
 11949                           tosu	equ	0xFFF
 11950                           tosh	equ	0xFFE
 11951                           tosl	equ	0xFFD
 11952                           stkptr	equ	0xFFC
 11953                           pclatu	equ	0xFFB
 11954                           pclath	equ	0xFFA
 11955                           pcl	equ	0xFF9
 11956                           tblptru	equ	0xFF8
 11957                           tblptrh	equ	0xFF7
 11958                           tblptrl	equ	0xFF6
 11959                           tablat	equ	0xFF5
 11960                           prodh	equ	0xFF4
 11961                           prodl	equ	0xFF3
 11962                           indf0	equ	0xFEF
 11963                           postinc0	equ	0xFEE
 11964                           postdec0	equ	0xFED
 11965                           preinc0	equ	0xFEC
 11966                           plusw0	equ	0xFEB
 11967                           fsr0h	equ	0xFEA
 11968                           fsr0l	equ	0xFE9
 11969                           wreg	equ	0xFE8
 11970                           indf1	equ	0xFE7
 11971                           postinc1	equ	0xFE6
 11972                           postdec1	equ	0xFE5
 11973                           preinc1	equ	0xFE4
 11974                           plusw1	equ	0xFE3
 11975                           fsr1h	equ	0xFE2
 11976                           fsr1l	equ	0xFE1
 11977                           bsr	equ	0xFE0
 11978                           indf2	equ	0xFDF
 11979                           postinc2	equ	0xFDE
 11980                           postdec2	equ	0xFDD
 11981                           preinc2	equ	0xFDC
 11982                           plusw2	equ	0xFDB
 11983                           fsr2h	equ	0xFDA
 11984                           fsr2l	equ	0xFD9
 11985                           status	equ	0xFD8


Data Sizes:
    Strings     156
    Constant    4
    Data        1
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     160
    BANK1           256      5     252
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1362_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _efgtoa->___flmul
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_printf->_UART_write
    _leerSensores->___fldiv
    ___fladd->_dameDistancia
    _pwmDuty->___flmul
    _map->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___fladd
    _dameDistancia->___xxtofl
    ___xxtofl->___lwdiv
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _probarSensores->_probarUltrasonico
    _probarUltrasonico->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flsub->___flmul
    ___flge->___flmul
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol
    ___fltol->___flmul

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_probarSensores
    _probarSensores->_probarUltrasonico

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  128448
                                              4 BANK1      1     1      0
                          _UART_init
                          _configPwm
                      _configurarAdc
    _inicializarComportamientoBasico
                     _probarSensores
 ---------------------------------------------------------------------------------
 (1) _probarSensores                                       2     2      0  113766
                                              2 BANK1      2     2      0
                        _UART_printf
                     _dameLecturaAdc
                       _leerSensores
                  _probarUltrasonico
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _probarUltrasonico                                    3     3      0   51846
                                            157 BANK0      1     1      0
                                              0 BANK1      2     2      0
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   51359
                                            139 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   50309
                                            131 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   49770
                                            101 BANK0     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   36179
                                             33 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             80 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6091
                                             21 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     303
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2182
                                             21 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2     456
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10009
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5198
                                             39 COMRAM    16     8      8
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (2) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13437
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12069
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12069
                                             31 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             21 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3921
                                             80 COMRAM     4     4      0
                                              0 BANK0     21    13      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (3) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configPwm
   _configurarAdc
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___fldiv (ARG)
             ___fladd (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fldiv (ARG)
             ___fladd (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _probarSensores
     _UART_printf
       _UART_write
     _dameLecturaAdc
     _leerSensores
       ___fladd
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _probarUltrasonico
       _UART_printf
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F5      20        0.0%
DATA                 0      0     1F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Aug 10 16:02:27 2020

                       ?_probarUltrasonico 0001                               ___fldiv@aexp 0050  
                             ___fldiv@bexp 004F                               ___fldiv@sign 0048  
                             ___awdiv@sign 000B                             ?_configurarAdc 0001  
                      ___wmul@multiplicand 0008                                __CFG_BORV$3 000000  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                      ??_probarUltrasonico 01F6                                        l200 35D2  
                                      l203 41C8                                        l212 4824  
                                      l221 435A                                        l230 4632  
                                      l151 4516                                        l135 40E4  
                                      l143 2CC4                                        l215 4832  
                                      l152 4554                                        l224 483C  
                                      l153 4520                                        l154 4556  
                                      l171 3492                                        l227 4610  
                                      l148 450A                                        l181 34C2  
                                      l173 34A0                                        l229 461E  
                                      l190 34F2                                        l174 34A2  
                                      l183 34D0                                        l263 3ACE  
                                      l255 406A                                        l192 3500  
                                      l184 34D2                                        l193 3502  
                                      l179 3554                                        l531 32FC  
                                      l532 32EC                                        l621 3DF4  
                                      l286 45A4                                        l526 32DC  
                                      l616 3D78                                        l562 481C  
                                      l538 330C                                        l619 3DBA  
                                      l627 26B4                                        l629 26BC  
                                      l709 102C                                        l902 3470  
                                      l647 28F2                                        l665 1458  
                                      l683 0C94                                        l771 422A  
                                      l772 4232                                        l765 18D4  
                                      l757 198E                                        l854 36DE  
                                      l775 47F6                                        l786 428C  
                                      l787 429C                                        l889 3190  
                             __CFG_CPB$OFF 000000                                        _PR2 000FCB  
                             __CFG_CPD$OFF 000000                               __CFG_BOR$OFF 000000  
                                      _abs 4678                                        _map 406C  
                                      _pad 3D34                               ___awmod@sign 000B  
                                      wreg 000FE8                               ___flmul@aexp 0069  
                             ___flmul@bexp 006E                   _DISTANCIA_PRIORIDAD_BAJA 010C  
                 _DISTANCIA_PRIORIDAD_ALTA 0114                               ___flmul@sign 0068  
                             ___flmul@temp 0073                               ___flmul@prod 006F  
                             __CFG_LVP$OFF 000000                               ___fltol@exp1 007E  
                             __CFG_WDT$OFF 000000                                       l1006 3D32  
                                     l1040 38A6                                       l1034 3F4E  
                                     l1019 3EA4                                       ?_abs 0018  
                                     l1045 38EC                                       l1303 1B7E  
                                     l1072 37E6                                       l1320 1C98  
                                     l1312 1E4E                                       l1304 1B6C  
                                     l1305 1B32                                       l1049 4762  
                                     l1330 1D56                                       l1501 2B08  
                                     l1430 2D1C                                       l1406 223C  
                                     l1511 479A                                       l1504 2A4C  
                                     l1273 4158                                       l1433 2E78  
                                     l1329 1D68                                       l1345 45EC  
                                     l1266 4150                                       l1370 2532  
                                     l1362 2438                                       l1371 2520  
                                     l1444 2E10                                       l1540 3C6E  
                                     l1604 42FC                                       l1437 2DB4  
                                     l1357 2614                                       l1461 46AE  
                                     l1525 472A                                       l1359 2474  
                                     l1519 4506                                       l1368 24BA  
                                     l1464 46B6                                       l1456 39EA  
                                     l1393 227A                                       l1555 44B4  
                                     l1396 210C                                       l1492 3000  
                                     l1548 4676                                       l1389 1F16  
                                     l1398 2184                                       l1558 483E  
                                     l1399 2172                                       l1495 3008  
                                     l1585 47D0                                       l1579 43B6  
                                     l1589 3BA4                                       l1599 42F4  
                                     l7001 3312                                       l7011 3372  
                                     l7003 3320                                       l7101 23FC  
                                     l7021 33E8                                       l7013 3390  
                                     l7005 3340                                       ?_map 0020  
                                     ?_pad 0016                                       l7111 2442  
                                     l7103 2404                                       l7031 3450  
                                     l7023 3408                                       l7015 3398  
                                     l7007 3344                                       l7121 249A  
                                     l7113 2460                                       l7105 2414  
                                     l7041 2298                                       l7201 1EF0  
                                     l7025 341A                                       l7017 33AC  
                                     l7009 3352                                       l8001 194A  
                                     l7131 24D8                                       l7123 24A0  
                                     l7115 2462                                       l7107 2428  
                                     l7043 22A8                                       l7051 22D2  
                                     l7035 227C                                       l7203 1F00  
                                     l7019 33BA                                       l7027 3420  
                                     l8101 414A                                       l7141 2542  
                                     l7133 24DC                                       l7125 24AA  
                                     l7117 2472                                       l7109 2436  
                                     l7061 22FE                                       l7053 22E2  
                                     l7045 22B8                                       l7037 2288  
                                     l7221 1F82                                       l7213 1F4A  
                                     l7205 1F06                                       l8021 426C  
                                     l8013 4234                                       l7029 3430  
                                     l8005 1958                                       l8031 35FA  
                                     l8023 35D4                                       l8111 2D42  
                                     l8103 2CC8                                       l7151 25A4  
                                     l7143 254E                                       l7135 24EA  
                                     l7127 24B8                                       l7119 2484  
                                     l7063 230E                                       l7071 2338  
                                     l7055 22E8                                       l7047 22C8  
                                     l7039 2296                                       l7231 1FCC  
                                     l7223 1F9A                                       l7215 1F56  
                                     l7207 1F26                                       l8015 4244  
                                     l7311 3C74                                       l7303 45A6  
                                     l8007 197C                                       l8041 3642  
                                     l8033 3608                                       l8025 35D8  
                                     l8121 2D9C                                       l8105 2CD8  
                                     l7161 2602                                       l7153 25BA  
                                     l7145 255C                                       l7137 2518  
                                     l7129 24CA                                       l7081 237A  
                                     l7073 2348                                       l7065 231E  
                                     l7057 22EE                                       l7049 22CA  
                                     l7241 2022                                       l7233 1FDC  
                                     l7225 1FA6                                       l7217 1F60  
                                     l7209 1F36                                       l8017 4252  
                                     l8201 42FE                                       l7321 3CA4  
                                     l7313 3C82                                       l7401 3F4C  
                                     l7305 45B8                                       l8051 368C  
                                     l8043 364A                                       l8035 3618  
                                     l8027 35E6                                       l8131 2E00  
                                     l8123 2D9E                                       l8115 2D56  
                                     l8107 2CE6                                       l7163 2608  
                                     l7155 25D4                                       l7147 2586  
                                     l7075 235E                                       l7067 232E  
                                     l7059 22FC                                       l7251 20C6  
                                     l7243 203E                                       l7235 1FE8  
                                     l7227 1FB2                                       l7219 1F76  
                                     l8019 4262                                       l8203 4302  
                                     l7331 3CD2                                       l7323 3CA8  
                                     l7315 3C8A                                       l7411 3856  
                                     l8211 4476                                       l8061 36BE  
                                     l8053 369C                                       l8045 3656  
                                     l8037 361C                                       l8029 35F6  
                                     l8301 41BA                                       l8141 2E58  
                                     l8133 2E1E                                       l8125 2DAA  
                                     l8117 2D5E                                       l8109 2D2C  
                                     l7165 260A                                       l7157 25F0  
                                     l7149 258A                                       l7093 23B2  
                                     l7077 236E                                       l7085 238E  
                                     l7069 2330                                       l7261 211C  
                                     l7253 20D4                                       l7245 204A  
                                     l7237 1FF8                                       l7229 1FC0  
                                     l7181 1E7E                                       l7173 1E50  
                                     l8221 45F0                                       l6701 1A94  
                                     l8205 4326                                       l6621 3BCA  
                                     l7501 268E                                       l7341 3D06  
                                     l7333 3CE0                                       l7325 3CB0  
                                     l7317 3C8E                                       l7309 3C70  
                                     l7421 38E4                                       l7413 3866  
                                     l7405 37E8                                       l8213 447E  
                                     l8063 36CE                                       l8055 369E  
                                     l8047 3664                                       l8039 362C  
                                     l8311 41C4                                       l8303 41BC  
                                     l8143 2E66                                       l8135 2E20  
                                     l8127 2DE6                                       l8119 2D6A  
                                     l7159 25F4                                       l7095 23CC  
                                     l7087 239E                                       l7079 2376  
                                     l7263 212A                                       l7255 20F2  
                                     l7247 2066                                       l7239 2012  
                                     l7191 1EBA                                       l7183 1E8E  
                                     l7175 1E5E                                       l8151 2B6A  
                                     l8231 4620                                       l8223 45F8  
                                     l6711 1AA8                                       l6703 1A98  
                                     l8071 4820                                       l8207 432A  
                                     l6623 3BD4                                       l6631 4634  
                                     l7511 26EA                                       l7503 26A8  
                                     l7343 3D0C                                       l7335 3CE6  
                                     l7327 3CC2                                       l7319 3C9C  
                                     l7423 38EA                                       l7415 3874  
                                     l7407 3818                                       l7431 4752  
                                     l8215 4486                                       l8057 36A8  
                                     l8049 366E                                       l8313 41C6  
                                     l8305 41BE                                       l8081 40E6  
                                     l8145 2E68                                       l8137 2E24  
                                     l8129 2DF2                                       l7097 23DC  
                                     l7089 239E                                       l7273 2194  
                                     l7281 21DC                                       l7265 212E  
                                     l7257 20FC                                       l7249 2090  
                                     l7193 1EC0                                       l7185 1E9E  
                                     l7177 1E6C                                       l7441 370C  
                                     l8161 2C98                                       l8153 2B8A  
                                     l8225 45FA                                       l6801 1CEC  
                                     l6721 1ABC                                       l6713 1AAC  
                                     l6705 1A9C                                       l8241 32CC  
                                     l6625 3BF2                                       l6617 3BA6  
                                     l6633 4640                                       l6641 47A8  
                                     l7521 278A                                       l7513 26F2  
                                     l7505 26C4                                       l7337 3CFC  
                                     l7329 3CCA                                       l7345 3D12  
                                     l7361 3E14                                       l7353 3DF6  
                                     l7417 3886                                       l7409 3828  
                                     l7601 0A30                                       l8073 41CA  
                                     l8217 44A2                                       l8209 4464  
                                     l8321 3FEC                                       l8059 36AE  
                                     l8307 41C0                                       l9051 453E  
                                     l8315 4834                                       l8091 411E  
                                     l8083 40EE                                       l8139 2E48  
                                     l8171 3486                                       l7099 23EC  
                                     l7291 2250                                       l7283 21F6  
                                     l7275 21A0                                       l7267 213C  
                                     l7259 210A                                       l7195 1ECE  
                                     l7187 1EA4                                       l7179 1E6E  
                                     l7451 375A                                       l7443 3736  
                                     l7435 36E0                                       l8067 406C  
                                     l8155 2C10                                       l8227 460C  
                                     l6803 1CFA                                       l6811 1D18  
                                     l6723 1AC0                                       l6715 1AB0  
                                     l6707 1AA0                                       l6731 1AD0  
                                     l8235 3192                                       l6627 3C28  
                                     l6619 3BB8                                       l6635 4652  
                                     l6643 47AC                                       l7531 2846  
                                     l7523 2790                                       l7515 26FC  
                                     l7507 26D6                                       l7347 3D22  
                                     l7339 3D04                                       l7371 3E4C  
                                     l7363 3E22                                       l7355 3DFA  
                                     l7419 3894                                       l7427 472C  
                                     l7611 0ABA                                       l7603 0A56  
                                     l8075 41D2                                       l9043 3A8A  
                                     l8251 39F0                                       l8331 4034  
                                     l8323 3FF2                                       l8309 41C2  
                                     l8093 4124                                       l8085 4100  
                                     l8173 348C                                       l7293 225E  
                                     l7285 220A                                       l7277 21AE  
                                     l7269 216A                                       l7197 1ED0  
                                     l7189 1EB4                                       l7461 3786  
                                     l7445 3738                                       l7437 36F8  
                                     l8157 2C54                                       l8149 2B0A  
                                     l8341 4574                                       l8229 460E  
                                     l6805 1D02                                       l6813 1D26  
                                     l6741 1B40                                       l6733 1AD4  
                                     l6725 1AC4                                       l6717 1AB4  
                                     l6709 1AA4                                       l6661 19BC  
                                     l6653 1990                                       l8237 32AC  
                                     l9045 2F36                                       l6637 4656  
                                     l6645 47C4                                       l7541 2894  
                                     l7533 2860                                       l7517 2702  
                                     l7525 27F4                                       l7509 26E4  
                                     l7349 3D2A                                       l7373 3E5A  
                                     l7381 3E84                                       l7365 3E2A  
                                     l7357 3E08                                       l7429 4742  
                                     l7701 0ED4                                       l7621 0AF0  
                                     l8077 41E0                                       l8253 39F4  
                                     l8261 3A72                                       l8333 4040  
                                     l8325 3FF8                                       l8317 3FE2  
                                     l8095 413A                                       l8087 4108  
                                     l8191 35B0                                       l8175 34B0  
                                     l8183 3522                                       l8167 3474  
                                     l7295 2260                                       l7287 2224  
                                     l7279 21D8                                       l7199 1EE0  
                                     l7471 37B6                                       l7447 3748  
                                     l9047 2CAE                                       l8343 458A  
                                     l6823 1D78                                       l6831 1DCE  
                                     l6815 1D2A                                       l6807 1D06  
                                     l6751 1B6A                                       l6743 1B4C  
                                     l6735 1AFE                                       l6727 1AC8  
                                     l6719 1AB8                                       l6671 19F6  
                                     l6663 19CC                                       l6655 199C  
                                     l8239 32BC                                       l6639 479C  
                                     l7543 28A6                                       l7527 280E  
                                     l7535 286E                                       l7519 2784  
                                     l7383 3E94                                       l7375 3E70  
                                     l7367 3E3C                                       l7359 3E10  
                                     l7391 3ED4                                       l6903 435C  
                                     l6911 42D4                                       l7711 0FA0  
                                     l7703 0EF2                                       l7631 0BBE  
                                     l7607 0A8C                                       l8079 420E  
                                     l8255 3A1E                                       l8263 3AA8  
                                     l8335 405E                                       l8327 4006  
                                     l8319 3FE6                                       l8281 450E  
                                     l8097 4142                                       l8089 4110  
                                     l8193 35C2                                       l8185 3564  
                                     l9049 3536                                       l8177 34E0  
                                     l8169 3484                                       l7289 2240  
                                     l7297 2266                                       l7473 37C6  
                                     l7457 3772                                       l7449 374C  
                                     l8273 47F8                                       l8345 45A0  
                                     l8337 4558                                       l6841 1E20  
                                     l6833 1DDE                                       l6825 1D84  
                                     l6817 1D38                                       l6809 1D16  
                                     l6761 1BC0                                       l6753 1B8C  
                                     l6745 1B50                                       l6737 1B1A  
                                     l6729 1ACC                                       l6681 1A24  
                                     l6673 19FC                                       l6665 19DC  
                                     l6657 19AA                                       l7481 44BA  
                                     l7545 28B2                                       l7537 2880  
                                     l7529 282C                                       l7385 3E9C  
                                     l7377 3E78                                       l7369 3E44  
                                     l7393 3EE4                                       l6921 296C  
                                     l6905 436C                                       l6649 46F4  
                                     l6913 42E6                                       l7801 12F2  
                                     l7721 1018                                       l7713 0FB0  
                                     l7705 0F26                                       l7641 0C42  
                                     l7633 0BF2                                       l7625 0B26  
                                     l7609 0A9E                                       l7561 08D2  
                                     l7553 08A2                                       l8265 3AB4  
                                     l8257 3A48                                       l8329 4024  
                                     l8291 415A                                       l8275 450A  
                                     l8099 4144                                       l8187 3576  
                                     l8179 3510                                       l7299 226A  
                                     l7475 37D6                                       l7467 379A  
                                     l7459 377C                                       l8339 455E  
                                     l6851 1E3E                                       l6843 1E26  
                                     l6835 1DEE                                       l6827 1D92  
                                     l6819 1D4E                                       l6771 1BFA  
                                     l6763 1BCE                                       l6755 1B9C  
                                     l6747 1B5E                                       l6739 1B2A  
                                     l6691 1A58                                       l6683 1A26  
                                     l6675 1A0E                                       l6667 19DE  
                                     l6659 19AC                                       l7483 44CE  
                                     l7547 28BA                                       l7539 288E  
                                     l7491 2616                                       l7379 3E7E  
                                     l7395 3F12                                       l6931 2A3C  
                                     l6923 2980                                       l6907 429E  
                                     l7811 134E                                       l7803 12FE  
                                     l7731 10CE                                       l7723 1024  
                                     l7715 0FC0                                       l7707 0F5A  
                                     l7643 0C54                                       l7651 0CA0  
                                     l7635 0BFA                                       l7627 0B5A  
                                     l7619 0AD6                                       l7571 0928  
                                     l7563 08F6                                       l7555 08AC  
                                     l8293 415A                                       l8285 452A  
                                     l8189 35B0                                       l7469 37A6  
                                     l6845 1E28                                       l6837 1E0E  
                                     l6829 1DCC                                       l6781 1C66  
                                     l6773 1BFC                                       l6765 1BDC  
                                     l6749 1B60                                       l6685 1A36  
                                     l6693 1A60                                       l6677 1A10  
                                     l6669 19E6                                       l7485 44FC  
                                     l6861 3D64                                       l7549 28CA  
                                     l7493 2636                                       l7397 3F22  
                                     l7389 3EA6                                       l6941 2AF8  
                                     l6925 298E                                       l6933 2A70  
                                     l6917 28F4                                       l7821 1398  
                                     l7805 1304                                       l7813 1354  
                                     l7741 1118                                       l7733 10E0  
                                     l7725 1048                                       l7717 0FF4  
                                     l7709 0F6E                                       l7661 0CE0  
                                     l7645 0C66                                       l7629 0B60  
                                     l7637 0C2E                                       l7581 0956  
                                     l7573 093A                                       l7565 0900  
                                     l7557 08BC                                       l7901 3B14  
                                     l8295 415C                                       l6847 1E2E  
                                     l6839 1E12                                       l6791 1CBE  
                                     l6783 1C68                                       l6775 1C06  
                                     l6767 1BE8                                       l6759 1BB0  
                                     l6695 1A70                                       l6687 1A46  
                                     l6679 1A16                                       l6951 47EE  
                                     l7487 4500                                       l7479 44B6  
                                     l6871 3DC8                                       l6863 3D70  
                                     l6855 3D34                                       l7495 265E  
                                     l7399 3F46                                       l6935 2AAC  
                                     l6919 2914                                       l7831 13C8  
                                     l7823 13A4                                       l7815 1366  
                                     l7807 132A                                       l7751 114E  
                                     l7743 1128                                       l7735 10EE  
                                     l7727 10AC                                       l7719 1004  
                                     l7671 0D3C                                       l7663 0D16  
                                     l7647 0C6E                                       l7639 0C3E  
                                     l7591 09CA                                       l7575 0946  
                                     l7583 095C                                       l7567 0908  
                                     l7559 08CA                                       l7903 3B2C  
                                     l8297 415E                                       l6849 1E3C  
                                     l6785 1C78                                       l6769 1BEC  
                                     l6777 1C0C                                       l6697 1A82  
                                     l6689 1A56                                       l6945 4764  
                                     l6961 303C                                       l6873 3DDC  
                                     l6865 3D84                                       l6857 3D42  
                                     l7497 267E                                       l6881 38EE  
                                     l6937 2AC0                                       l6929 2A00  
                                     l7841 1422                                       l7825 13AC  
                                     l7817 1380                                       l7809 1346  
                                     l7761 1182                                       l7753 1152  
                                     l7745 112C                                       l7729 10BA  
                                     l7737 10F6                                       l7681 0D80  
                                     l7673 0D4E                                       l7665 0D1E  
                                     l7657 0CB2                                       l7649 0C88  
                                     l7593 09E6                                       l7585 0982  
                                     l7577 094E                                       l7569 091A  
                                     l7905 3B48                                       l7921 14A2  
                                     l7913 145A                                       l8299 4192  
                                     l6795 1CD2                                       l6779 1C32  
                                     l6787 1C88                                       l6699 1A90  
                                     l7851 2E7A                                       l6971 307E  
                                     l6963 3040                                       l6955 300A  
                                     l6867 3D98                                       l6859 3D56  
                                     l7499 268C                                       l6883 390E  
                                     l6939 2AE8                                       l7843 1432  
                                     l7835 13FC                                       l7827 13BC  
                                     l7819 1386                                       l7771 1220  
                                     l7763 1186                                       l7755 1158  
                                     l7747 1132                                       l7739 110A  
                                     l7691 0DCA                                       l7683 0D98  
                                     l7675 0D5C                                       l7659 0CC4  
                                     l7667 0D22                                       l7595 09FE  
                                     l7579 0952                                       l7907 3B5A  
                                     l7931 153A                                       l7923 14C6  
                                     l7915 147E                                       l6797 1CDC  
                                     l6789 1CAE                                       l6949 47D2  
                                     l7861 2EE8                                       l7853 2E8E  
                                     l6981 30D8                                       l6973 309C  
                                     l6965 304E                                       l6957 300E  
                                     l6877 4678                                       l6869 3D9C  
                                     l6885 394C                                       l6893 398C  
                                     l7845 1438                                       l7837 140E  
                                     l7829 13C2                                       l7781 127E  
                                     l7749 113E                                       l7757 115E  
                                     l7765 118C                                       l7773 1224  
                                     l7693 0DDE                                       l7685 0DAA  
                                     l7677 0D60                                       l7669 0D2A  
                                     l7597 0A08                                       l7589 09B8  
                                     l7909 3B82                                       l7933 155A  
                                     l7925 14CE                                       l7941 15C2  
                                     l7917 148C                                       l8901 3FA4  
                                     l6799 1CEA                                       l7871 2F10  
                                     l7863 2EEC                                       l7855 2E92  
                                     l6983 3106                                       l6975 30A4  
                                     l6991 3140                                       l6967 306E  
                                     l6959 301C                                       l6879 4692  
                                     l6895 399E                                       l6887 3974  
                                     l7839 141A                                       l7791 12BC  
                                     l7783 128E                                       l7775 1242  
                                     l7767 11E4                                       l7759 1170  
                                     l7695 0E42                                       l7679 0D72  
                                     l7687 0DB2                                       l7951 1668  
                                     l7943 15E4                                       l7935 1568  
                                     l7927 14DC                                       l7919 149E  
                                     l8903 3FB6                                       l8911 3FD6  
                                     l7873 2F18                                       l7857 2E96  
                                     l6993 3150                                       l6985 3126  
                                     l6977 30B8                                       l6969 3072  
                                     l6889 3980                                       l7793 12CC  
                                     l7785 1292                                       l7777 125E  
                                     l7769 1218                                       l7697 0E9A  
                                     l7689 0DBA                                       l7961 1730  
                                     l7953 168C                                       l7945 15F4  
                                     l7929 1500                                       l8905 3FC6  
                                     l7883 2FC0                                       l7875 2F4C  
                                     l7867 2EF2                                       l7859 2EB2  
                                     l6995 3170                                       l6987 3128  
                                     l6979 30C6                                       l6899 39E2  
                                     l7795 12D4                                       l7787 12A2  
                                     l7779 1270                                       l7699 0ECE  
                                     l7963 1742                                       l7955 16B0  
                                     l7947 1626                                       l7939 15B0  
                                     l8907 3FCA                                       l7885 2FD2  
                                     l7869 2F08                                       l6989 313A  
                                     l7797 12E2                                       l7789 12B4  
                                     l7893 3AD0                                       l7981 1870  
                                     l7965 1758                                       l7973 17C2  
                                     l7957 16F8                                       l7949 1636  
                                     l8909 3FCE                                       l8861 3F5C  
                                     l8853 3F50                                       l7887 2FE4  
                                     l7879 2F82                                       l6999 330E  
                                     l7799 12EA                                       l7895 3AFA  
                                     l7991 190C                                       l7983 18A4  
                                     l7975 17F0                                       l7967 1766  
                                     l8871 3F66                                       l8863 3F5E  
                                     l8855 3F56                                       l7993 191A  
                                     l7969 1796                                       l8881 3F70  
                                     l8873 3F68                                       l8865 3F60  
                                     l8857 3F58                                       l7899 3B06  
                                     l7995 192E                                       l7979 185E  
                                     l8891 3F7A                                       l8883 3F72  
                                     l8875 3F6A                                       l8867 3F62  
                                     l8859 3F5A                                       l7989 18E8  
                                     l8893 3F80                                       l8885 3F74  
                                     l8877 3F6C                                       l8869 3F64  
                                     l7999 193C                                       l8895 3F86  
                                     l8887 3F76                                       l8879 3F6E  
                                     STR_1 0840                                       STR_2 0827  
                                     l8897 3F8C                                       l8889 3F78  
                                     STR_3 0805                                       STR_4 086B  
                                     l8899 3F90                                       STR_5 0858  
                                     STR_6 087D                                       STR_7 088E  
                                     STR_8 0896                                       u8000 309C  
                                     u8001 3098                                       u8010 30C6  
                                     u7210 3BB8                                       u8011 30C2  
                                     u7211 3BB4                                       u8100 2296  
                                     u7300 19BC                                       u8020 3106  
                                     u7220 3BCA                                       _RCIF 007CF5  
                                     u8101 2292                                       u7301 19B8  
                                     u8021 3102                                       u7221 3BC6  
                                     u8110 22A8                                       u7310 19CC  
                                     u8030 3150                                       u7230 3BF2  
                                     u8111 22A4                                       u7311 19C8  
                                     u8031 314C                                       u7231 3BEE  
                                     u8200 2460                                       u8120 22B8  
                                     u7400 1B18                                       u7320 1A0E  
                                     u8040 3320                                       u7240 3C28  
                                     u9000 093A                                       u8201 245C  
                                     u8121 22B4                                       u7321 1A0A  
                                     u8041 331C                                       u7241 3C24  
                                     u9001 0936                                       u8210 2484  
                                     u8130 22FC                                       u7410 1B40  
                                     u7330 1A24                                       u8050 3352  
                                     u7250 4676                                       u9010 0982  
                                     u8211 2480                                       u8131 22F8  
                                     u7411 1B3C                                       u7331 1A20  
                                     u8051 334E                                       u7251 4672  
                                     u9011 097E                                       u8300 25A4  
                                     u8220 249A                                       u8140 230E  
                                     u7500 1C78                                       u7420 1B5E  
                                     u7340 1A36                                       u8060 3390  
                                     u7260 47C4                                       u9100 0BBA  
                                     u9020 09B2                                       u8301 25A0  
                                     u8221 2496                                       u8141 230A  
                                     u7501 1C74                                       u7421 1B5A  
                                     u7341 1A32                                       u8061 338C  
                                     u7261 47C0                                       u9101 0BB6  
                                     u9021 09AC                                       u8310 25D4  
                                     u8230 24B8                                       u8150 231E  
                                     u7510 1CAE                                       u7430 1B7E  
                                     u7350 1A46                                       u8070 33BA  
                                     u7270 4724                                       u9110 0C2E  
                                     u9030 09B4                                       u8311 25D0  
                                     u8231 24B4                                       u8151 231A  
                                     u7511 1CAA                                       u7431 1B7A  
                                     u7351 1A42                                       u8071 33B6  
                                     u7271 471E                                       u9111 0C2A  
                                     u8320 2602                                       u8240 24D8  
                                     u8160 235E                                       u8400 1F36  
                                     u7600 1D78                                       u7520 1CBE  
                                     u7440 1B8C                                       u7360 1A82  
                                     u8080 33E8                                       u7280 4726  
                                     u9200 0D4E                                       u9120 0C54  
                                     u9040 09CA                                       u8321 25FE  
                                     u8241 24D4                                       u8161 235A  
                                     u8401 1F32                                       u7601 1D74  
                                     u7521 1CBA                                       u7441 1B88  
                                     u7361 1A7E                                       u8081 33E4  
                                     u9201 0D4A                                       u9121 0C50  
                                     u9041 09C6                                       u8250 24EA  
                                     u8170 239E                                       u8410 20B0  
                                     u8330 1E6C                                       u7610 1D92  
                                     u7530 1CEA                                       u7450 1B9C  
                                     u7370 1A90                                       u7290 19AA  
                                     u8090 3430                                       u9210 0D5C  
                                     u9130 0C66                                       u9050 0A56  
                                     u8251 24E6                                       u8171 239A  
                                     u8331 1E68                                       u7611 1D8E  
                                     u7531 1CE6                                       u7451 1B98  
                                     u7371 1A8C                                       u7291 19A6  
                                     u8091 342C                                       u9211 0D58  
                                     u9131 0C62                                       u9051 0A52  
                                     u8260 2518                                       u8180 2414  
                                     u8500 2224                                       u8420 210A  
                                     u8340 1E7E                                       u7620 1DCC  
                                     u7540 1CFA                                       u7460 1BCE  
                                     u7380 1AFE                                       u7700 3DBA  
                                     u9300 10BA                                       u9220 0D72  
                                     u9140 0C88                                       u9060 0A86  
                                     u8261 2514                                       u8181 2410  
                                     u8501 2220                                       u8421 2106  
                                     u8341 1E7A                                       u7621 1DC8  
                                     u7541 1CF6                                       u7461 1BCA  
                                     u7381 1AFA                                       u7701 3DB6  
                                     u9301 10B6                                       u9221 0D6E  
                                     u9141 0C84                                       u9061 0A80  
                                     u8270 252E                                       u8190 2436  
                                     u8510 225E                                       u8430 212A  
                                     u8350 1E8E                                       u7630 1DDE  
                                     u7550 1D16                                       u7470 1BDC  
                                     u7390 1B16                                       u7710 3DC8  
                                     u9310 10CE                                       u9230 0D80  
                                     u9150 0CAE                                       u9070 0A88  
                                     u8271 252A                                       u8191 2432  
                                     u8511 225A                                       u8431 2126  
                                     u8415 20A6                                       u8351 1E8A  
                                     u7631 1DDA                                       u7551 1D12  
                                     u7471 1BD8                                       u7391 1B10  
                                     u7711 3DC4                                       u9311 10CA  
                                     u9231 0D7C                                       u9151 0CAA  
                                     u8280 2542                                       u8440 213C  
                                     u8360 1ECE                                       u7640 1DEE  
                                     u7560 1D26                                       u7480 1BFA  
                                     u7720 4692                                       u8520 3C82  
                                     u8600 3E3C                                       u7800 43A4  
                                     u9400 127E                                       u9320 10E0  
                                     u9240 0DAA                                       u9160 0CC4  
                                     u9080 0A9E                                       u8281 253E  
                                     u8441 2138                                       u8361 1ECA  
                                     u7641 1DEA                                       u7561 1D22  
                                     u7481 1BF6                                       u7721 468E  
                                     u8521 3C7E                                       u8601 3E38  
                                     u9401 127A                                       u9321 10DC  
                                     u9241 0DA6                                       u9161 0CC0  
                                     u9081 0A9A                                       u8290 255C  
                                     u8450 216A                                       u8370 1EE0  
                                     u7650 1E0E                                       u7570 1D38  
                                     u7490 1C32                                       u8530 3C9C  
                                     u8610 3E5A                                       u7730 392E  
                                     u7810 43B6                                       u9410 12B4  
                                     u9330 10EE                                       u9250 0EF2  
                                     u9170 0CE0                                       u9090 0B22  
                                     u8291 2558                                       u8451 2166  
                                     u8371 1EDC                                       u7651 1E0A  
                                     u7571 1D34                                       u7491 1C2E  
                                     u8531 3C98                                       u8611 3E56  
                                     u7811 43B2                                       u9411 12B0  
                                     u9331 10EA                                       u9251 0EEE  
                                     u9171 0CDC                                       u9091 0B1E  
                                     u8460 2180                                       u8380 1EF0  
                                     u7660 1E20                                       u7580 1D4E  
                                     u9500 2EE8                                       u8540 3CC2  
                                     u8620 3E70                                       u8700 3894  
                                     u7740 394C                                       u7900 2A20  
                                     u7820 42CE                                       u9420 12E2  
                                     u9340 110A                                       u9260 0F5A  
                                     u9180 0D16                                       u8461 217C  
                                     u8381 1EEC                                       u7661 1E1C  
                                     u7581 1D4A                                       u9501 2EE4  
                                     u8541 3CBE                                       u8621 3E6C  
                                     u8701 3890                                       u7741 3948  
                                     u7821 42C8                                       u9421 12DE  
                                     u9341 1106                                       u9261 0F56  
                                     u9181 0D12                                       u8470 2194  
                                     u8390 1F26                                       u7670 1E3C  
                                     u7590 1D64                                       u9510 2F04  
                                     u8550 3CE0                                       u8630 3E94  
                                     u8710 38E4                                       u7750 3974  
                                     u7910 2A3C                                       u7830 42D0  
                                     u9430 1366                                       u9350 1118  
                                     u9270 0FA0                                       u9190 0D3C  
                                     u8471 2190                                       u8391 1F22  
                                     u7671 1E38                                       u7591 1D60  
                                     u9511 2F00                                       u8551 3CDC  
                                     u8631 3E90                                       u8711 38E0  
                                     u7751 3970                                       u7735 3924  
                                     u7911 2A38                                       u7807 439A  
                                     u9431 1362                                       u9351 1114  
                                     u9271 0F9C                                       u9191 0D38  
                                     u8480 21AE                                       u8800 44CE  
                                     u9520 2FBA                                       u7680 3D42  
                                     u8560 3CFC                                       u8640 3ED4  
                                     u8720 4742                                       u7760 399E  
                                     u7920 2A90                                       u7840 42E6  
                                     u9440 1380                                       u9360 1170  
                                     u9280 0FB0                                       u9600 3B82  
                                     u8481 21AA                                       u8801 44CA  
                                     u9521 2FB4                                       u7681 3D3E  
                                     u8561 3CF8                                       u8641 3ED0  
                                     u8721 473E                                       u7761 399A  
                                     u7905 2A16                                       u7841 42E2  
                                     u9441 137C                                       u9361 116C  
                                     u9281 0FAC                                       u9601 3B7E  
                                     u8490 21F6                                       u8730 36F8  
                                     u8810 44FC                                       u9530 2FBC  
                                     u7690 3D64                                       u8570 3D22  
                                     u8650 3F12                                       u7930 2AAC  
                                     u7850 293E                                       u9450 1398  
                                     u9370 1242                                       u9290 1018  
                                     u9610 147E                                       u8491 21F2  
                                     u8731 36F4                                       u8811 44F8  
                                     u7691 3D60                                       u8571 3D1E  
                                     u8651 3F0E                                       u7931 2AA8  
                                     u9451 1394                                       u9371 123E  
                                     u9291 1014                                       u9611 147A  
                                     u8740 372C                                       u9540 2FD2  
                                     u8900 282C                                       u8820 2646  
                                     u8580 3E08                                       u8660 3F46  
                                     u7780 39D8                                       u7940 2AE8  
                                     u7860 296C                                       u9460 13F6  
                                     u9380 125E                                       u9700 16B0  
                                     u9620 14C6                                       u9541 2FCE  
                                     u8901 2828                                       u8821 2640  
                                     u8581 3E04                                       u8661 3F42  
                                     u7781 39D2                                       u7941 2AE4  
                                     u7925 2A86                                       u7861 2968  
                                     u9461 13F0                                       u9381 125A  
                                     u9701 16AC                                       u9621 14C2  
                                     u8750 375A                                       u7950 4794  
                                     u9550 2FE4                                       u8910 2846  
                                     u8830 2648                                       u8590 3E22  
                                     u8670 3818                                       u7790 39DA  
                                     u7870 298E                                       u9470 13F8  
                                     u9390 1270                                       u9710 1742  
                                     u9630 1500                                       u8751 3756  
                                     u7951 478E                                       u9551 2FE0  
                                     u8911 2842                                       u8591 3E1E  
                                     u8671 3814                                       u7775 39B0  
                                     u7871 298A                                       u7855 2934  
                                     u9391 126C                                       u9711 173E  
                                     u9631 14FC                                       u9800 3608  
                                     u8760 376E                                       u7960 4796  
                                     u8920 2860                                       u8840 265E  
                                     u8680 3856                                       u9480 140E  
                                     u9560 3AFA                                       u9720 17F0  
                                     u9640 15AA                                       u9801 3604  
                                     u8761 376A                                       u8745 3722  
                                     u8921 285C                                       u8841 265A  
                                     u8681 3852                                       u9481 140A  
                                     u9561 3AF6                                       u9721 17EC  
                                     u9641 15A4                                       u9810 3642  
                                     u8770 3796                                       u9490 2EB2  
                                     u7970 301C                                       u8930 286E  
                                     u8850 268C                                       u8690 3874  
                                     u7890 29FC                                       u9570 3B2C  
                                     u9730 1858                                       u9650 15AC  
                                     u9811 363E                                       u8771 3792  
                                     u9491 2EAE                                       u7971 3018  
                                     u8931 286A                                       u8851 2688  
                                     u8691 3870                                       u7891 29F8  
                                     u9571 3B28                                       u9731 1852  
                                     u9820 3664                                       u9900 2CD8  
                                     u8780 37B6                                       u7980 304E  
                                     u8940 2880                                       u8860 26A8  
                                     u9580 3B48                                       u9740 185A  
                                     u9660 15C2                                       u9821 3660  
                                     u9901 2CD4                                       u8781 37B2  
                                     u7981 304A                                       u8941 287C  
                                     u8861 26A4                                       u7885 29A2  
                                     u9581 3B44                                       u9661 15BE  
                                     u9830 368C                                       u9910 2CE6  
                                     u8790 37C6                                       u8950 288E  
                                     u8870 26D6                                       u7886 29AC  
                                     u9590 3B5A                                       u9750 1870  
                                     u9670 15F4                                       u9831 3688  
                                     u9911 2CE2                                       u8791 37C2  
                                     u7991 3078                                       u8951 288A  
                                     u8871 26D2                                       u7887 29BC  
                                     u9591 3B56                                       u9751 186C  
                                     u9671 15F0                                       u9840 36BE  
                                     u9920 2D42                                       u8960 28A6  
                                     u8880 26E4                                       u9760 190C  
                                     u9680 1636                                       u9841 36BA  
                                     u9921 2D3E                                       u8961 28A2  
                                     u8881 26E0                                       u9761 1908  
                                     u9681 1632                                       u9930 2D98  
                                     u9770 4252                                       u9850 4832  
                                     u8890 280E                                       u8970 08CA  
                                     u9690 168C                                       u9931 2D94  
                                     u9771 424E                                       u9851 482E  
                                     u8891 280A                                       u8971 08C6  
                                     u9691 1688                                       u9940 2DE2  
                                     u9780 428C                                       u8980 091A  
                                     u9860 422A                                       u9941 2DDE  
                                     u9781 4288                                       u8981 0916  
                                     u9861 4226                                       u9790 35E6  
                                     u9870 4100                                       u9950 2E00  
                                     u8990 0928                                       u9791 35E2  
                                     u9871 40FC                                       u9951 2DFC  
                                     u8991 0924                                       u9880 411E  
                                     u9960 2E10                                       u9881 411A  
                                     u9961 2E0C                                       u9890 413A  
                                     u9970 2E1E                                       u9891 4136  
                                     u9971 2E1A                                       u9980 2E58  
                                     u9981 2E54                                       u9990 2E66  
                                     u9991 2E62                                       abs@a 0018  
                                     _dbuf 013B                                       _atoi 2E7A  
                                     _main 3F50                                       _dtoa 2616  
                                     _prec 0055                                       _nout 0130  
                                     pad@i 001D                  __end_of_probarUltrasonico 3AD0  
                                     pad@p 001A                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       indf0 000FEF  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001F                                       map@x 0020  
                                     fsr2l 000FD9                                       btemp 005A  
                            ___fpclassifyf 38EE                                       prodh 000FF4  
                                     prodl 000FF3            comportamientoBasico@carroRotado 0137  
                                     start 000E                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 0049                               _tolower$1448 0012  
                            __CFG_MCLRE$ON 000000                              ?_leerSensores 0001  
                             ___param_bank 000000                                      ??_abs 001A  
                                    ??_map 0034                                      ??_pad 001C  
                            __CFG_PLLDIV$1 000000                             __CFG_CCP2MX$ON 000000  
                            ___fltol@sign1 007D                            __end_of___aldiv 36E0  
                          __end_of___aodiv 3192                                      ?_atoi 000D  
                          __end_of___fladd 1E50                                      ?_main 0001  
                                    ?_dtoa 0021                            __end_of___aomod 3472  
                          __end_of___fldiv 2616                            __end_of___awdiv 3D34  
                          __end_of___flneg 4764                                      STR_11 0892  
                                    STR_12 089A                                      STR_15 089E  
                                    STR_17 089E                            __end_of___awmod 3EA6  
                          __end_of___flmul 227C                            __end_of___flsub 45EE  
                          __end_of___fltol 37E8                                      u10000 2B8A  
                                    u10001 2B86                                      u10100 3510  
                                    u10101 350C                                      u10110 351E  
                                    u10030 34A0                                      u10111 351A  
                                    u10031 349C                                      u10015 2C24  
                                    u10120 3564                                      u10040 34B0  
                                    u10016 2C2E                                      u10121 3560  
                                    u10041 34AC                                      u10025 2C68  
                                    u10017 2C3E                                      u10050 34BE  
                                    u10026 2C72                                      u10130 4322  
                                    u10051 34BA                                      u10027 2C82  
                                    u10060 34D0                                      u10140 434A  
                                    u10061 34CC                                      u10070 34E0  
                                    u10150 435A                                      u10071 34DC  
                                    u10151 4356                                      u10080 34EE  
                                    u10160 461E                                      u10081 34EA  
                                    u10161 461A                                      u10137 4318  
                                    u10090 3500                                      u10170 4024  
                                    u10091 34FC                                      u10147 4340  
                                    u10171 4020                            ___awdiv@divisor 0008  
                                    _T1CON 000FCD                                      u10750 3FB6  
                                    u10751 3FB2                                      u10760 3FC6  
                                    u10761 3FC2                                      _LATB4 007C54  
                                    u10777 3AC0                                      _LATB5 007C55  
                                    _LATD2 007C62                                      _LATB6 007C56  
                                    u10787 45F2                                      _LATD3 007C63  
                                    _LATB7 007C57                                      u10797 3488  
                          __end_of___lwdiv 415A                                      i2l250 4460  
                                    i2l248 4458                                      i2l283 440E  
                                    i2l275 43BE                                      i2l278 43CC  
                             main@iniciado 01FA                            ___awdiv@counter 000A  
                                    _RCREG 000FAE                               vfpfcnvrt@fmt 00C7  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _SPBRG 000FAF                              __CFG_USBDIV$1 000000  
                                    _TXREG 000FAD                              __CFG_PWRT$OFF 000000  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                        ___lmul@multiplicand 000A  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                       __size_of_UART_init 0070                                      _flags 0057  
                                    _boton 0008                                      _fputc 3BA6  
                                    _fputs 4634                            __end_of_isdigit 479C  
                                    _pausa 01FB                                      _mouse 00FE  
                              ?_UART_write 0001                                      atoi@n 001A  
                                    pad@fp 0016                                      atoi@s 000D  
                                    _width 0132                                      _putch 483E  
                                    _toint 0801                                      dtoa@d 0023  
                                    dtoa@i 0043                                      dtoa@n 003B  
                                    dtoa@p 0035                                      dtoa@s 0039  
                                    dtoa@w 0037                            __end_of_isspace 4508  
                          __end_of_isupper 472C                                      tablat 000FF5  
                         ??_probarSensores 0055                            __end_of_pwmDuty 2CC6  
                                    ttemp5 005B                                      ttemp6 005E  
                                    ttemp7 0062                                      status 000FD8  
                                    wtemp8 005B                            __end_of_sprintf 44B6  
                           ?___fpclassifyf 0006                            __end_of_tolower 42FE  
                          __end_of_strncmp 3BA6                             __CFG_ICPRT$OFF 000000  
                           ??_leerSensores 0051                            __initialization 46B8  
                         ??_dameLecturaAdc 0008                               __end_of_atoi 300A  
                             __end_of_main 3FE2                               __end_of_dtoa 28F4  
                          ??_configurarAdc 0006                        dameDistancia@conteo 0026  
                   dameDistancia@distancia 0022                                     ??_atoi 000F  
                                   ??_main 0055                                     ??_dtoa 002B  
      comportamientoBasico@caminosRecorrer 01EF                              __activetblptr 000002  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_boton 0001                                     _CCP1M2 007DEA  
                                   _CCP1M3 007DEB                                     _CCP2M2 007DD2  
                                   _CCP2M3 007DD3                                     ?_fputc 0006  
                                   ?_fputs 000F                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _CCPR1L 000FBE  
                                   _CCPR2L 000FBB                           ___awdiv@dividend 0006  
                                   ?_putch 0001                                     _INT0IF 007F91  
                                   i2l5851 4412                                     i2l9053 4400  
                                   i2l5861 443E                                     i2l5853 4420  
                                   i2l5791 43EC                                     i2l5863 445A  
                                   i2l5855 4426                                     i2l5785 43BA  
                                   i2l5865 445E                                     i2l5857 4438  
                                   i2l5787 43DA                                     i2l5859 443C  
                                   _TMR1IF 007CF0                                     _TMR1ON 007E68  
                                   _TMR2ON 007E52                                     _TRISB0 007C98  
                                   _TRISB1 007C99                                     _TRISB2 007C9A  
                                   _TRISC1 007CA1                                     _TRISB3 007C9B  
                                   _TRISC2 007CA2                                     _TRISB4 007C9C  
                                   _TRISB5 007C9D                                     _TRISB6 007C9E  
                                   _TRISD3 007CAB                                     _TRISB7 007C9F  
                                   _TRISC6 007CA6                                     _TRISC7 007CA7  
               __size_of_probarUltrasonico 00E4                           __end_of___xxtofl 2E7A  
                           __CFG_XINST$OFF 000000         comportamientoBasico@numMovimientos 0059  
                             vfprintf@cfmt 00E9                  dameDistancia@numeroSensor 0021  
                                   ___flge 37E8                                     ___fleq 3EA6  
                                   ___lmul 4234                                  ??___aldiv 001A  
                                ??___aodiv 0016                                  ??___fladd 0030  
                                ??___aomod 0016                                     ___wmul 47D2  
                        __end_of_UART_init 41CA                                  ??___fldiv 0040  
                                ??___awdiv 000A                                  ??___flneg 000A  
       comportamientoBasico@espejearCarroY 013A                                  ??___awmod 000A  
                                ??___flmul 0051                                  ??___flsub 0055  
                                ??___fltol 0079                                     _efgtoa 08A2  
                                ??___lwdiv 000A                                     _buffer 01BD  
                                   _floorf 28F4                        __size_of_UART_write 0016  
                             ?_UART_printf 0007                                     clear_0 46D0  
                         ___awdiv@quotient 000C                            ___awmod@divisor 0008  
                          ___awmod@counter 000A                                     pad@buf 0018  
                                   dtoa@fp 0021                                     _strcpy 435C  
                                   _strlen 479C                          _oldSensorEnfrente 0118  
                                   fputc@c 0006                                     fputs@c 0013  
                                   fputs@i 0014                                     fputs@s 000F  
                                ??_isdigit 0008                            ___fpclassifyf@e 000E  
                          ___fpclassifyf@u 0010                            ___fpclassifyf@x 0006  
                             __mediumconst 0000                                  ??_isspace 0008  
                                   tblptrh 000FF7                                  ??_isupper 0008  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                                ??_pwmDuty 0082                                     putch@c 0001  
                         __end_of_vfprintf 4234                                  ??_sprintf 0055  
                                ??_tolower 000E                                  ??_strncmp 000C  
                               ___flge@ff1 0075                          _velocidadEstandar 47F8  
                          ??___fpclassifyf 000A                                 ___flge@ff2 0079  
                             ___xxtofl@arg 0017                               ___xxtofl@exp 0016  
                             ___xxtofl@val 000D                                 ___fleq@ff1 0006  
                               ___fleq@ff2 000A                                 __accesstop 0060  
                  __end_of__initialization 46E6                            __CFG_PBADEN$OFF 000000  
                               ___flneg@f1 0006                            __CFG_FOSC$XT_XT 000000  
                       ?_velocidadEstandar 0001                              ___rparam_used 000001  
                               ___fltol@f1 0075                     __size_of_dameDistancia 0162  
                           __pcstackCOMRAM 0001                        ??_velocidadEstandar 0055  
                             __pidataBANK1 4840                            _sensorIzquierda 0128  
                            __end_of_boton 4464                              __end_of_fputc 3C70  
                            __end_of_fputs 4678                              __end_of_putch 4840  
                            __end_of_toint 0805  comportamientoBasico@movimientosRealizados 018B  
                     __end_of_leerSensores 330E                         __size_of_configPwm 0050  
                                PID@difAnt 0134                  __end_of_velocidadEstandar 481E  
                                  ??_boton 0004                                    ??_fputc 000A  
                                  ??_fputs 0013                                    ??_putch 0006  
                               __pbssBANK0 00FE                                 __pbssBANK1 0100  
                               _efgtoa$820 0095                                 _efgtoa$815 0091  
                               _efgtoa$824 0097                                 _efgtoa$816 0093  
                               _efgtoa$825 0099                                 _efgtoa$826 009B  
                                  ?___flge 0075                                    ?___fleq 0006  
                                  ?___lmul 0006                                    ?___wmul 0006  
                                  ?_efgtoa 0081                                    _CCP1CON 000FBD  
                                  _CCP2CON 000FBA                                    ?_floorf 0051  
                           ___lmul@product 000E     decidirDireccion@cambioOrientacionCarro 0136  
                               _antiRebote 43B8                                    ?_strcpy 0006  
                                  ?_strlen 0006                                    _T2CKPS0 007E50  
                                  _T2CKPS1 007E51                                  ?___xxtofl 000D  
                            _dameDistancia 3472                         __size_of_vfpfcnvrt 0536  
                             ??_UART_write 0006                            __CFG_VREGEN$OFF 000000  
comportamientoBasico@contCaminosRecorridos 01F2                                    __Hparam 0000  
                                  __Lparam 0000                          __end_of_configPwm 4558  
                                  ___aldiv 35D4                            __size_of___flge 0106  
                          __size_of___fleq 00AA                                    ___aodiv 300A  
                                  ___fladd 1990                                    ___aomod 330E  
                                  ___fldiv 227C                                    ___awdiv 3C70  
                                  ___flneg 472C                            __size_of___lmul 006A  
                                  ___awmod 3DF6                                    ___flmul 1E50  
                                  ___flsub 45A6                                    ___fltol 36E0  
                          __size_of___wmul 0026                                    ___lwdiv 40E6  
                                ?_vfprintf 00E3                               __psmallconst 0800  
                          __size_of_efgtoa 0BB8                            __CFG_STVREN$OFF 000000  
                          __size_of_floorf 0216                                    __pcinit 46B8  
                                  __ramtop 0800                         __end_of_UART_write 4834  
                                  __ptext0 3F50                                    __ptext1 3FE2  
                                  __ptext2 39EC                                    __ptext3 4464  
                                  __ptext4 41CA                                    __ptext5 145A  
                                  __ptext6 3AD0                                    __ptext7 08A2  
                                  __ptext8 429E                                    __ptext9 46F4  
                          __size_of_strcpy 005C                            __size_of_strlen 0036  
                     __size_of_UART_printf 005E                               __size_of_abs 0040  
                             __size_of_map 007A                               __size_of_pad 00C2  
                                  _isdigit 4764                                 ??___xxtofl 0011  
                         ___awmod@dividend 0006                             ?_dameDistancia 001B  
                         ___aldiv@dividend 0012                                    _isspace 44B6  
                                  _isupper 46F4                                    efgtoa@c 0087  
                                  efgtoa@d 00A5                                    efgtoa@e 00BD  
                                  efgtoa@f 0083                                    efgtoa@g 00B9  
                                  efgtoa@h 00AF                                    efgtoa@i 00B7  
                                  efgtoa@l 00B3                                    efgtoa@m 00A1  
                                  efgtoa@n 00BF                                    efgtoa@p 00A9  
                                  efgtoa@t 009D                                    efgtoa@u 00C1  
                                  efgtoa@w 00AC                                    _pwmDuty 2B0A  
                                  atoi@neg 0013                 __size_of_velocidadEstandar 0026  
                                  _sprintf 4464                                    _tolower 429E  
                                  _strncmp 3AD0                             __pintcode_body 4410  
                     end_of_initialization 46E6                                    floorf@e 006A  
                                  floorf@m 0066                                    floorf@u 006C  
                                  floorf@x 0051                                    fputc@fp 0008  
                            __Lmediumconst 0000                                    int_func 4410  
                                  fputs@fp 0011                                  i2u1080_47 4448  
                                i2u1081_47 43E0                          __end_of_vfpfcnvrt 1990  
                               efgtoa@mode 00AE                                 efgtoa@sign 00A7  
                                _RCSTAbits 000FAB                           ___aldiv@quotient 001C  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                               ??_vfprintf 0055                      __end_of_configurarAdc 483E  
                                  strcpy@d 000E                                    strlen@a 0008  
                                  strcpy@s 000C                                    strlen@s 0006  
                              ?_antiRebote 0001                                  _PORTBbits 000F81  
                                _UART_init 415A                      __size_of_leerSensores 017C  
                              ___fladd@grs 0037                                pwmDuty@duty 0087  
                            ___xxtofl@sign 0015                                  _TRISDbits 000F95  
                              ___fldiv@grs 004B                         _oldSensorIzquierda 011C  
                              ___fldiv@rem 0044       comportamientoBasico@posicionInvCruce 01F3  
                               map@out_max 0030                                 map@out_min 002C  
                              ___flmul@grs 006A                             _UART_init$1679 0028  
                                _TXSTAbits 000FAC                               _leerSensores 3192  
                  __size_of_probarSensores 008A                             __end_of___flge 38EE  
                           __end_of___fleq 3F50                             __end_of___lmul 429E  
                              vfpfcnvrt@ap 00C9                                vfpfcnvrt@ct 00DF  
                              vfpfcnvrt@fp 00C5                                vfpfcnvrt@ll 00CF  
                           __end_of___wmul 47F8                             __end_of_efgtoa 145A  
                           __end_of_floorf 2B0A                                 ?_UART_init 0020  
                               floorf@F524 0104                            ??_dameDistancia 001F  
    comportamientoBasico@investigandoCruce 01F4                    __size_of_dameLecturaAdc 0046  
                           __end_of_strcpy 43B8                             __end_of_strlen 47D2  
                      start_initialization 46B8                                __end_of_abs 46B8  
                              __end_of_map 40E6                                __end_of_pad 3DF6  
                      __size_of_antiRebote 0058                      __end_of___fpclassifyf 39EC  
                      pwmDuty@cicloTrabajo 007F                                vfprintf@fmt 00E5  
                                 ??___flge 007D                                   ??___fleq 000E  
                                 ??___lmul 000E                                   ??___wmul 000A  
                         _oldSensorDerecha 0120                 comportamientoBasico@mapear 0139  
                           _sensorEnfrente 0124                                   ??_efgtoa 0088  
                              __pdataBANK1 01FB                                   ??_floorf 0060  
                         __CFG_LPT1OSC$OFF 000000                                   ??_strcpy 000A  
                                 ??_strlen 0008                                  ___fladd@a 002C  
                                ___fladd@b 0028                                  ___fldiv@a 003C  
                                ___fldiv@b 0038                                  ___flmul@a 0064  
                                ___flmul@b 0060                                __pbssCOMRAM 0055  
                                ___flsub@a 0079                                  ___flsub@b 0075  
                            __pcstackBANK0 0060                              __pcstackBANK1 01F6  
                         ___aodiv@dividend 0006                          __size_of___xxtofl 01B4  
                        UART_printf@cadena 0007                                  _atoi$1320 0017  
                                _atoi$1318 0015                                  _atoi$1319 0019  
                _DISTANCIA_PRIORIDAD_MEDIA 0110          probarSensores@lecturaSensorOptico 01F8  
                         ___lwdiv@dividend 0006                                  __pintcode 0008  
                                 ?___aldiv 0012                                   ?___aodiv 0006  
                                 ?___fladd 0028                                   ?___aomod 0006  
                                 ?___fldiv 0038                                   ?___awdiv 0006  
                         ___aodiv@quotient 0018                                   ?___flneg 0006  
                                 ?___awmod 0006                                   ?___flmul 0060  
                                 ?___flsub 0075                                   ?___fltol 0075  
                                 ?___lwdiv 0006                                  _configPwm 4508  
                              ??_UART_init 0024                          __size_of_vfprintf 006A  
                              __smallconst 0800                                   ?_isdigit 0006  
                                 ?_isspace 0006                                   ?_isupper 0006  
                                 ?_pwmDuty 007F                           ___lwdiv@quotient 000B  
            probarUltrasonico@numeroSensor 00FD                             __size_of_boton 445C  
                                 ?_sprintf 00EB                                   ?_tolower 000C  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0006                             __size_of_putch 0002  
                          ___aldiv@divisor 0016                            ___aldiv@counter 001A  
                           ___wmul@product 000A                                   i2u653_40 43CC  
                                 i2u653_41 43C8                                   i2u654_40 43DA  
                                 i2u654_41 43D6                                   i2u657_40 4420  
                                 i2u657_41 441C                                   i2u658_40 4438  
                                 i2u658_41 4434                             _probarSensores 3FE2  
                         __CFG_WDTPS$32768 000000                              ??_UART_printf 0009  
                             ??_antiRebote 0001                                  _vfpfcnvrt 145A  
                               ?_configPwm 0001                                  map@in_max 0028  
                                map@in_min 0024                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 0006                           configPwm@channel 0008  
                           _dameLecturaAdc 45EE                             UART_write@dato 0006  
                             _isspace$1349 000C                                 vfpfcnvrt@c 00E2  
                               vfpfcnvrt@f 00DB                          ___lmul@multiplier 0006  
                              _INTCON2bits 000FF1                         __end_of_antiRebote 4410  
                               roundf@F525 0100                     __end_of_probarSensores 406C  
                                 __Hrparam 0000                              UART_init@BAUD 0020  
                            _sensorDerecha 012C                                 vfprintf@ap 00E7  
                                 __Lrparam 0000                                 vfprintf@fp 00E3  
                         __size_of___aldiv 010C                           __size_of___aodiv 0188  
                         __size_of___fladd 04C0                           __size_of___aomod 0164  
                         __size_of___fldiv 039A                           __size_of___awdiv 00C4  
                         __size_of___flneg 0038                           __size_of___awmod 00B0  
                         __size_of___flmul 042C                           __size_of___flsub 0048  
                         __size_of___fltol 0108                                 ?_vfpfcnvrt 00C5  
                         __size_of___lwdiv 0074                     __end_of_dameLecturaAdc 4634  
                          ___aodiv@divisor 000E                            ___aodiv@counter 0016  
                       ___fpclassifyf@F463 0108                                 sprintf@fmt 00ED  
                                 ___xxtofl 2CC6                        __end_of_UART_printf 435C  
                         __size_of_isdigit 0038                                   _dtoa$791 0033  
                          ___lwdiv@divisor 0008                           __size_of_isspace 0052  
                          ___lwdiv@counter 000A                                   __ptext10 435C  
                                 __ptext11 28F4                                   __ptext20 3D34  
                                 __ptext12 38EE                                   __ptext21 479C  
                                 __ptext13 45A6                                   __ptext30 4764  
                                 __ptext22 4634                                   __ptext14 472C  
                                 __ptext31 47D2                                   __ptext23 3BA6  
                                 __ptext15 37E8                                   __ptext40 406C  
                                 __ptext32 42FE                                   __ptext24 483E  
                                 __ptext16 3EA6                                   __ptext41 4234  
                                 __ptext33 481E                                   __ptext25 4678  
                                 __ptext17 3DF6                                   __ptext50 415A  
                                 __ptext42 36E0                                   __ptext34 3192  
                                 __ptext26 330E                                   __ptext18 3C70  
                                 __ptext51 35D4                                   __ptext43 1E50  
                                 __ptext35 1990                                   __ptext27 300A  
                                 __ptext19 2616                                   __ptext44 227C  
                                 __ptext36 45EE                                   __ptext28 2E7A  
                                 __ptext53 43B8                                   __ptext45 3472  
                                 __ptext37 4558                                   __ptext29 44B6  
                                 __ptext46 2CC6                                   __ptext38 47F8  
                                 __ptext47 40E6                                   __ptext39 2B0A  
                                 __ptext48 4834                                   __ptext49 4508  
                         __size_of_isupper 0038                           __size_of_pwmDuty 01BC  
  __end_of_inicializarComportamientoBasico 45A6   __size_of_inicializarComportamientoBasico 004E  
        ??_inicializarComportamientoBasico 0055           ?_inicializarComportamientoBasico 0001  
          _inicializarComportamientoBasico 4558                           __size_of_sprintf 0052  
                         __size_of_tolower 0060                              antiRebote@pin 0003  
                               strcpy@dest 0006                           __size_of_strncmp 00D6  
       comportamientoBasico@cruceDetectado 0138                     __size_of_configurarAdc 000A  
                            __size_of_atoi 0190                              __size_of_main 0092  
                            __size_of_dtoa 02DE                            ?_probarSensores 0001  
                                 efgtoa@fp 0081                                   efgtoa@ne 00A3  
                                 efgtoa@pp 009F                                   efgtoa@ou 008D  
                                 int$flags 005A                    dameLecturaAdc@canalLeer 000A  
                                 _vfprintf 41CA                                ??_configPwm 0006  
                          ?_dameLecturaAdc 0006                           ___aomod@dividend 0006  
                    __CFG_CPUDIV$OSC1_PLL2 000000                                 _INTCONbits 000FF2  
                    __end_of_dameDistancia 35D4                                   isdigit@c 0006  
                                 intlevel2 0000                                  sprintf@ap 00F5  
                                 isspace@c 0006                                  strcpy@src 0008  
                                 isupper@c 0006                                  strncmp@_l 0006  
                                strncmp@_r 0008                                efgtoa@nmode 00AB  
                          ___aomod@divisor 000E                                ??_vfpfcnvrt 00CB  
                          ___aomod@counter 0016                              _vfpfcnvrt$840 00D7  
                            _vfpfcnvrt$845 00D9                                _UART_printf 42FE  
                            _configurarAdc 4834                             pwmDuty@channel 0081  
                                 sprintf@f 00F7                                   tolower@c 000C  
                                 sprintf@s 00EB                     __size_of___fpclassifyf 00FE  
                                 strncmp@l 000D                                   strncmp@n 000A  
                                 strncmp@r 000F         comportamientoBasico@carroEspejeado 01F5  
                             ___aldiv@sign 001B                              ___fladd@signs 0034  
                               _UART_write 481E                               ___aodiv@sign 0017  
                             ___fladd@aexp 0035                               ___fladd@bexp 0036  
                             ___aomod@sign 0017                          _probarUltrasonico 39EC  
