

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 09 14:29:27 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97  0000                     
    98                           ; Version 2.10
    99                           ; Generated 31/07/2019 GMT
   100                           ; 
   101                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F4550 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	idataBANK1
   134  006808                     __pidataBANK1:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for _ida
   138  006808  01                 	db	1
   139                           
   140                           ;initializer for _pausa
   141  006809  01                 	db	1
   142                           
   143                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   144  00680A  03                 	db	3
   145                           
   146                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   147  00680B  02                 	db	2
   148                           
   149                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   150  00680C  01                 	db	1
   151                           
   152                           	psect	mediumconst
   153  007D46                     __pmediumconst:
   154                           	opt callstack 0
   155  007D46  00                 	db	0
   156  007D47                     _half:
   157                           	opt callstack 0
   158  007D47  0000               	dw	0
   159  007D49  3F00               	dw	16128
   160  007D4B  0000               	dw	0
   161  007D4D  BF00               	dw	48896
   162  007D4F                     __end_of_half:
   163                           	opt callstack 0
   164  007D4F  9E26               	dw	40486
   165  007D51  3E78               	dw	15992
   166  007D53                     __end_of_Lg4:
   167                           	opt callstack 0
   168  007D53  E9EE               	dw	59886
   169  007D55  3E91               	dw	16017
   170  007D57                     __end_of_Lg3:
   171                           	opt callstack 0
   172  007D57  CE13               	dw	52755
   173  007D59  3ECC               	dw	16076
   174  007D5B                     __end_of_Lg2:
   175                           	opt callstack 0
   176  007D5B  AAAA               	dw	43690
   177  007D5D  3F2A               	dw	16170
   178  007D5F                     __end_of_Lg1:
   179                           	opt callstack 0
   180  007D5F  F7D1               	dw	63441
   181  007D61  3717               	dw	14103
   182  007D63                     __end_of_ln2_lo:
   183                           	opt callstack 0
   184  007D63  7180               	dw	29056
   185  007D65  3F31               	dw	16177
   186  007D67                     __end_of_ln2_hi:
   187                           	opt callstack 0
   188  007D67  5215               	dw	21013
   189  007D69  BB35               	dw	47925
   190  007D6B                     __end_of_P2:
   191                           	opt callstack 0
   192  007D6B  AA8F               	dw	43663
   193  007D6D  3E2A               	dw	15914
   194  007D6F                     __end_of_P1:
   195                           	opt callstack 0
   196  007D6F  BE8E               	dw	48782
   197  007D71  35BF               	dw	13759
   198  007D73                     __end_of_ln2lo:
   199                           	opt callstack 0
   200  007D73  7200               	dw	29184
   201  007D75  3F31               	dw	16177
   202  007D77                     __end_of_ln2hi:
   203                           	opt callstack 0
   204  007D77  AA3B               	dw	43579
   205  007D79  3FB8               	dw	16312
   206  007D7B                     __end_of_invln2:
   207                           	opt callstack 0
   208  0000                     _TRISDbits	set	3989
   209  0000                     _INTCON2bits	set	4081
   210  0000                     _INTCONbits	set	4082
   211  0000                     _PORTBbits	set	3969
   212  0000                     _ADRESL	set	4035
   213  0000                     _ADRESH	set	4036
   214  0000                     _ADCON0bits	set	4034
   215  0000                     _ADCON2	set	4032
   216  0000                     _ADCON1	set	4033
   217  0000                     _TXREG	set	4013
   218  0000                     _RCREG	set	4014
   219  0000                     _RCSTAbits	set	4011
   220  0000                     _TXSTAbits	set	4012
   221  0000                     _SPBRG	set	4015
   222  0000                     _PR2	set	4043
   223  0000                     _CCP2CON	set	4026
   224  0000                     _CCPR2L	set	4027
   225  0000                     _CCP1CON	set	4029
   226  0000                     _CCPR1L	set	4030
   227  0000                     _TRISB0	set	31896
   228  0000                     _TRISB7	set	31903
   229  0000                     _TRISB6	set	31902
   230  0000                     _TRISB5	set	31901
   231  0000                     _TRISB4	set	31900
   232  0000                     _LATB7	set	31831
   233  0000                     _LATB6	set	31830
   234  0000                     _LATB5	set	31829
   235  0000                     _LATB4	set	31828
   236  0000                     _LATD2	set	31842
   237  0000                     _INT0IF	set	32657
   238  0000                     _RCIF	set	31989
   239  0000                     _TRISC7	set	31911
   240  0000                     _TRISC6	set	31910
   241  0000                     _TMR2ON	set	32338
   242  0000                     _CCP2M2	set	32210
   243  0000                     _CCP2M3	set	32211
   244  0000                     _TRISC1	set	31905
   245  0000                     _CCP1M2	set	32234
   246  0000                     _CCP1M3	set	32235
   247  0000                     _TRISC2	set	31906
   248  0000                     _T2CKPS1	set	32337
   249  0000                     _T2CKPS0	set	32336
   250  007D7B                     STR_12:
   251  007D7B  0A                 	db	10
   252  007D7C  0A                 	db	10
   253  007D7D  4F                 	db	79	;'O'
   254  007D7E  56                 	db	86	;'V'
   255  007D7F  45                 	db	69	;'E'
   256  007D80  52                 	db	82	;'R'
   257  007D81  46                 	db	70	;'F'
   258  007D82  4C                 	db	76	;'L'
   259  007D83  4F                 	db	79	;'O'
   260  007D84  57                 	db	87	;'W'
   261  007D85  20                 	db	32
   262  007D86  65                 	db	101	;'e'
   263  007D87  6E                 	db	110	;'n'
   264  007D88  20                 	db	32
   265  007D89  65                 	db	101	;'e'
   266  007D8A  6C                 	db	108	;'l'
   267  007D8B  20                 	db	32
   268  007D8C  6D                 	db	109	;'m'
   269  007D8D  61                 	db	97	;'a'
   270  007D8E  70                 	db	112	;'p'
   271  007D8F  65                 	db	101	;'e'
   272  007D90  6F                 	db	111	;'o'
   273  007D91  20                 	db	32
   274  007D92  64                 	db	100	;'d'
   275  007D93  65                 	db	101	;'e'
   276  007D94  20                 	db	32
   277  007D95  70                 	db	112	;'p'
   278  007D96  61                 	db	97	;'a'
   279  007D97  73                 	db	115	;'s'
   280  007D98  6F                 	db	111	;'o'
   281  007D99  73                 	db	115	;'s'
   282  007D9A  20                 	db	32
   283  007D9B  52                 	db	82	;'R'
   284  007D9C  65                 	db	101	;'e'
   285  007D9D  61                 	db	97	;'a'
   286  007D9E  6C                 	db	108	;'l'
   287  007D9F  69                 	db	105	;'i'
   288  007DA0  7A                 	db	122	;'z'
   289  007DA1  61                 	db	97	;'a'
   290  007DA2  64                 	db	100	;'d'
   291  007DA3  6F                 	db	111	;'o'
   292  007DA4  73                 	db	115	;'s'
   293  007DA5  20                 	db	32
   294  007DA6  70                 	db	112	;'p'
   295  007DA7  61                 	db	97	;'a'
   296  007DA8  72                 	db	114	;'r'
   297  007DA9  61                 	db	97	;'a'
   298  007DAA  20                 	db	32
   299  007DAB  63                 	db	99	;'c'
   300  007DAC  72                 	db	114	;'r'
   301  007DAD  75                 	db	117	;'u'
   302  007DAE  63                 	db	99	;'c'
   303  007DAF  65                 	db	101	;'e'
   304  007DB0  0A                 	db	10
   305  007DB1  0A                 	db	10
   306  007DB2  00                 	db	0
   307  007DB3                     STR_21:
   308  007DB3  0D                 	db	13
   309  007DB4  0A                 	db	10
   310  007DB5  45                 	db	69	;'E'
   311  007DB6  6C                 	db	108	;'l'
   312  007DB7  20                 	db	32
   313  007DB8  63                 	db	99	;'c'
   314  007DB9  61                 	db	97	;'a'
   315  007DBA  6D                 	db	109	;'m'
   316  007DBB  69                 	db	105	;'i'
   317  007DBC  6E                 	db	110	;'n'
   318  007DBD  6F                 	db	111	;'o'
   319  007DBE  20                 	db	32
   320  007DBF  49                 	db	73	;'I'
   321  007DC0  5A                 	db	90	;'Z'
   322  007DC1  51                 	db	81	;'Q'
   323  007DC2  55                 	db	85	;'U'
   324  007DC3  49                 	db	73	;'I'
   325  007DC4  45                 	db	69	;'E'
   326  007DC5  52                 	db	82	;'R'
   327  007DC6  44                 	db	68	;'D'
   328  007DC7  41                 	db	65	;'A'
   329  007DC8  20                 	db	32
   330  007DC9  73                 	db	115	;'s'
   331  007DCA  65                 	db	101	;'e'
   332  007DCB  20                 	db	32
   333  007DCC  61                 	db	97	;'a'
   334  007DCD  63                 	db	99	;'c'
   335  007DCE  65                 	db	101	;'e'
   336  007DCF  72                 	db	114	;'r'
   337  007DD0  63                 	db	99	;'c'
   338  007DD1  61                 	db	97	;'a'
   339  007DD2  20                 	db	32
   340  007DD3  6D                 	db	109	;'m'
   341  007DD4  61                 	db	97	;'a'
   342  007DD5  73                 	db	115	;'s'
   343  007DD6  20                 	db	32
   344  007DD7  61                 	db	97	;'a'
   345  007DD8  6C                 	db	108	;'l'
   346  007DD9  20                 	db	32
   347  007DDA  64                 	db	100	;'d'
   348  007DDB  65                 	db	101	;'e'
   349  007DDC  73                 	db	115	;'s'
   350  007DDD  74                 	db	116	;'t'
   351  007DDE  69                 	db	105	;'i'
   352  007DDF  6E                 	db	110	;'n'
   353  007DE0  6F                 	db	111	;'o'
   354  007DE1  0D                 	db	13
   355  007DE2  0A                 	db	10
   356  007DE3  00                 	db	0
   357  007DE4                     STR_20:
   358  007DE4  0D                 	db	13
   359  007DE5  0A                 	db	10
   360  007DE6  45                 	db	69	;'E'
   361  007DE7  6C                 	db	108	;'l'
   362  007DE8  20                 	db	32
   363  007DE9  63                 	db	99	;'c'
   364  007DEA  61                 	db	97	;'a'
   365  007DEB  6D                 	db	109	;'m'
   366  007DEC  69                 	db	105	;'i'
   367  007DED  6E                 	db	110	;'n'
   368  007DEE  6F                 	db	111	;'o'
   369  007DEF  20                 	db	32
   370  007DF0  45                 	db	69	;'E'
   371  007DF1  4E                 	db	78	;'N'
   372  007DF2  46                 	db	70	;'F'
   373  007DF3  52                 	db	82	;'R'
   374  007DF4  45                 	db	69	;'E'
   375  007DF5  4E                 	db	78	;'N'
   376  007DF6  54                 	db	84	;'T'
   377  007DF7  45                 	db	69	;'E'
   378  007DF8  20                 	db	32
   379  007DF9  73                 	db	115	;'s'
   380  007DFA  65                 	db	101	;'e'
   381  007DFB  20                 	db	32
   382  007DFC  61                 	db	97	;'a'
   383  007DFD  63                 	db	99	;'c'
   384  007DFE  65                 	db	101	;'e'
   385  007DFF  72                 	db	114	;'r'
   386  007E00  63                 	db	99	;'c'
   387  007E01  61                 	db	97	;'a'
   388  007E02  20                 	db	32
   389  007E03  6D                 	db	109	;'m'
   390  007E04  61                 	db	97	;'a'
   391  007E05  73                 	db	115	;'s'
   392  007E06  20                 	db	32
   393  007E07  61                 	db	97	;'a'
   394  007E08  6C                 	db	108	;'l'
   395  007E09  20                 	db	32
   396  007E0A  64                 	db	100	;'d'
   397  007E0B  65                 	db	101	;'e'
   398  007E0C  73                 	db	115	;'s'
   399  007E0D  74                 	db	116	;'t'
   400  007E0E  69                 	db	105	;'i'
   401  007E0F  6E                 	db	110	;'n'
   402  007E10  6F                 	db	111	;'o'
   403  007E11  0D                 	db	13
   404  007E12  0A                 	db	10
   405  007E13  00                 	db	0
   406  007E14                     STR_22:
   407  007E14  0D                 	db	13
   408  007E15  0A                 	db	10
   409  007E16  45                 	db	69	;'E'
   410  007E17  6C                 	db	108	;'l'
   411  007E18  20                 	db	32
   412  007E19  63                 	db	99	;'c'
   413  007E1A  61                 	db	97	;'a'
   414  007E1B  6D                 	db	109	;'m'
   415  007E1C  69                 	db	105	;'i'
   416  007E1D  6E                 	db	110	;'n'
   417  007E1E  6F                 	db	111	;'o'
   418  007E1F  20                 	db	32
   419  007E20  44                 	db	68	;'D'
   420  007E21  45                 	db	69	;'E'
   421  007E22  52                 	db	82	;'R'
   422  007E23  45                 	db	69	;'E'
   423  007E24  43                 	db	67	;'C'
   424  007E25  48                 	db	72	;'H'
   425  007E26  41                 	db	65	;'A'
   426  007E27  20                 	db	32
   427  007E28  73                 	db	115	;'s'
   428  007E29  65                 	db	101	;'e'
   429  007E2A  20                 	db	32
   430  007E2B  61                 	db	97	;'a'
   431  007E2C  63                 	db	99	;'c'
   432  007E2D  65                 	db	101	;'e'
   433  007E2E  72                 	db	114	;'r'
   434  007E2F  63                 	db	99	;'c'
   435  007E30  61                 	db	97	;'a'
   436  007E31  20                 	db	32
   437  007E32  6D                 	db	109	;'m'
   438  007E33  61                 	db	97	;'a'
   439  007E34  73                 	db	115	;'s'
   440  007E35  20                 	db	32
   441  007E36  61                 	db	97	;'a'
   442  007E37  6C                 	db	108	;'l'
   443  007E38  20                 	db	32
   444  007E39  64                 	db	100	;'d'
   445  007E3A  65                 	db	101	;'e'
   446  007E3B  73                 	db	115	;'s'
   447  007E3C  74                 	db	116	;'t'
   448  007E3D  69                 	db	105	;'i'
   449  007E3E  6E                 	db	110	;'n'
   450  007E3F  6F                 	db	111	;'o'
   451  007E40  0D                 	db	13
   452  007E41  0A                 	db	10
   453  007E42  00                 	db	0
   454  007E43  0D                 	db	13
   455  007E44  4C                 	db	76	;'L'
   456  007E45  65                 	db	101	;'e'
   457  007E46  63                 	db	99	;'c'
   458  007E47  74                 	db	116	;'t'
   459  007E48  75                 	db	117	;'u'
   460  007E49  72                 	db	114	;'r'
   461  007E4A  61                 	db	97	;'a'
   462  007E4B  20                 	db	32
   463  007E4C  64                 	db	100	;'d'
   464  007E4D  65                 	db	101	;'e'
   465  007E4E  20                 	db	32
   466  007E4F  73                 	db	115	;'s'
   467  007E50  65                 	db	101	;'e'
   468  007E51  6E                 	db	110	;'n'
   469  007E52  73                 	db	115	;'s'
   470  007E53  6F                 	db	111	;'o'
   471  007E54  72                 	db	114	;'r'
   472  007E55  20                 	db	32
   473  007E56  4F                 	db	79	;'O'
   474  007E57  70                 	db	112	;'p'
   475  007E58  74                 	db	116	;'t'
   476  007E59  69                 	db	105	;'i'
   477  007E5A  63                 	db	99	;'c'
   478  007E5B  6F                 	db	111	;'o'
   479  007E5C  20                 	db	32
   480  007E5D  3D                 	db	61	;'='
   481  007E5E  20                 	db	32
   482  007E5F  25                 	db	37
   483  007E60  64                 	db	100	;'d'
   484  007E61  0D                 	db	13
   485  007E62  0A                 	db	10
   486  007E63  0A                 	db	10
   487  007E64  00                 	db	0
   488  007E65                     STR_13:
   489  007E65  0D                 	db	13
   490  007E66  53                 	db	83	;'S'
   491  007E67  65                 	db	101	;'e'
   492  007E68  20                 	db	32
   493  007E69  72                 	db	114	;'r'
   494  007E6A  65                 	db	101	;'e'
   495  007E6B  67                 	db	103	;'g'
   496  007E6C  72                 	db	114	;'r'
   497  007E6D  65                 	db	101	;'e'
   498  007E6E  73                 	db	115	;'s'
   499  007E6F  6F                 	db	111	;'o'
   500  007E70  20                 	db	32
   501  007E71  61                 	db	97	;'a'
   502  007E72  6C                 	db	108	;'l'
   503  007E73  20                 	db	32
   504  007E74  70                 	db	112	;'p'
   505  007E75  75                 	db	117	;'u'
   506  007E76  6E                 	db	110	;'n'
   507  007E77  74                 	db	116	;'t'
   508  007E78  6F                 	db	111	;'o'
   509  007E79  20                 	db	32
   510  007E7A  64                 	db	100	;'d'
   511  007E7B  65                 	db	101	;'e'
   512  007E7C  20                 	db	32
   513  007E7D  70                 	db	112	;'p'
   514  007E7E  61                 	db	97	;'a'
   515  007E7F  72                 	db	114	;'r'
   516  007E80  74                 	db	116	;'t'
   517  007E81  69                 	db	105	;'i'
   518  007E82  64                 	db	100	;'d'
   519  007E83  61                 	db	97	;'a'
   520  007E84  0D                 	db	13
   521  007E85  0A                 	db	10
   522  007E86  00                 	db	0
   523  007E87                     STR_19:
   524  007E87  49                 	db	73	;'I'
   525  007E88  6E                 	db	110	;'n'
   526  007E89  76                 	db	118	;'v'
   527  007E8A  65                 	db	101	;'e'
   528  007E8B  73                 	db	115	;'s'
   529  007E8C  74                 	db	116	;'t'
   530  007E8D  69                 	db	105	;'i'
   531  007E8E  67                 	db	103	;'g'
   532  007E8F  61                 	db	97	;'a'
   533  007E90  6E                 	db	110	;'n'
   534  007E91  64                 	db	100	;'d'
   535  007E92  6F                 	db	111	;'o'
   536  007E93  20                 	db	32
   537  007E94  43                 	db	67	;'C'
   538  007E95  72                 	db	114	;'r'
   539  007E96  75                 	db	117	;'u'
   540  007E97  63                 	db	99	;'c'
   541  007E98  65                 	db	101	;'e'
   542  007E99  3A                 	db	58	;':'
   543  007E9A  20                 	db	32
   544  007E9B  25                 	db	37
   545  007E9C  63                 	db	99	;'c'
   546  007E9D  20                 	db	32
   547  007E9E  7C                 	db	124
   548  007E9F  20                 	db	32
   549  007EA0  25                 	db	37
   550  007EA1  63                 	db	99	;'c'
   551  007EA2  20                 	db	32
   552  007EA3  7C                 	db	124
   553  007EA4  20                 	db	32
   554  007EA5  25                 	db	37
   555  007EA6  63                 	db	99	;'c'
   556  007EA7  0A                 	db	10
   557  007EA8  00                 	db	0
   558  007EA9                     STR_16:
   559  007EA9  0D                 	db	13
   560  007EAA  44                 	db	68	;'D'
   561  007EAB  69                 	db	105	;'i'
   562  007EAC  72                 	db	114	;'r'
   563  007EAD  65                 	db	101	;'e'
   564  007EAE  63                 	db	99	;'c'
   565  007EAF  63                 	db	99	;'c'
   566  007EB0  69                 	db	105	;'i'
   567  007EB1  6F                 	db	111	;'o'
   568  007EB2  6E                 	db	110	;'n'
   569  007EB3  20                 	db	32
   570  007EB4  45                 	db	69	;'E'
   571  007EB5  6C                 	db	108	;'l'
   572  007EB6  65                 	db	101	;'e'
   573  007EB7  67                 	db	103	;'g'
   574  007EB8  69                 	db	105	;'i'
   575  007EB9  64                 	db	100	;'d'
   576  007EBA  61                 	db	97	;'a'
   577  007EBB  3A                 	db	58	;':'
   578  007EBC  20                 	db	32
   579  007EBD  49                 	db	73	;'I'
   580  007EBE  5A                 	db	90	;'Z'
   581  007EBF  51                 	db	81	;'Q'
   582  007EC0  55                 	db	85	;'U'
   583  007EC1  49                 	db	73	;'I'
   584  007EC2  45                 	db	69	;'E'
   585  007EC3  52                 	db	82	;'R'
   586  007EC4  44                 	db	68	;'D'
   587  007EC5  41                 	db	65	;'A'
   588  007EC6  0A                 	db	10
   589  007EC7  0A                 	db	10
   590  007EC8  0D                 	db	13
   591  007EC9  00                 	db	0
   592  007ECA                     STR_11:
   593  007ECA  0D                 	db	13
   594  007ECB  4D                 	db	77	;'M'
   595  007ECC  6F                 	db	111	;'o'
   596  007ECD  76                 	db	118	;'v'
   597  007ECE  69                 	db	105	;'i'
   598  007ECF  6D                 	db	109	;'m'
   599  007ED0  69                 	db	105	;'i'
   600  007ED1  65                 	db	101	;'e'
   601  007ED2  6E                 	db	110	;'n'
   602  007ED3  74                 	db	116	;'t'
   603  007ED4  6F                 	db	111	;'o'
   604  007ED5  73                 	db	115	;'s'
   605  007ED6  20                 	db	32
   606  007ED7  52                 	db	82	;'R'
   607  007ED8  65                 	db	101	;'e'
   608  007ED9  61                 	db	97	;'a'
   609  007EDA  6C                 	db	108	;'l'
   610  007EDB  69                 	db	105	;'i'
   611  007EDC  7A                 	db	122	;'z'
   612  007EDD  61                 	db	97	;'a'
   613  007EDE  64                 	db	100	;'d'
   614  007EDF  6F                 	db	111	;'o'
   615  007EE0  73                 	db	115	;'s'
   616  007EE1  20                 	db	32
   617  007EE2  3D                 	db	61	;'='
   618  007EE3  20                 	db	32
   619  007EE4  25                 	db	37
   620  007EE5  64                 	db	100	;'d'
   621  007EE6  0D                 	db	13
   622  007EE7  0A                 	db	10
   623  007EE8  0A                 	db	10
   624  007EE9  00                 	db	0
   625  007EEA                     STR_15:
   626  007EEA  0D                 	db	13
   627  007EEB  44                 	db	68	;'D'
   628  007EEC  69                 	db	105	;'i'
   629  007EED  72                 	db	114	;'r'
   630  007EEE  65                 	db	101	;'e'
   631  007EEF  63                 	db	99	;'c'
   632  007EF0  63                 	db	99	;'c'
   633  007EF1  69                 	db	105	;'i'
   634  007EF2  6F                 	db	111	;'o'
   635  007EF3  6E                 	db	110	;'n'
   636  007EF4  20                 	db	32
   637  007EF5  45                 	db	69	;'E'
   638  007EF6  6C                 	db	108	;'l'
   639  007EF7  65                 	db	101	;'e'
   640  007EF8  67                 	db	103	;'g'
   641  007EF9  69                 	db	105	;'i'
   642  007EFA  64                 	db	100	;'d'
   643  007EFB  61                 	db	97	;'a'
   644  007EFC  3A                 	db	58	;':'
   645  007EFD  20                 	db	32
   646  007EFE  45                 	db	69	;'E'
   647  007EFF  4E                 	db	78	;'N'
   648  007F00  46                 	db	70	;'F'
   649  007F01  52                 	db	82	;'R'
   650  007F02  45                 	db	69	;'E'
   651  007F03  4E                 	db	78	;'N'
   652  007F04  54                 	db	84	;'T'
   653  007F05  45                 	db	69	;'E'
   654  007F06  0A                 	db	10
   655  007F07  0A                 	db	10
   656  007F08  0D                 	db	13
   657  007F09  00                 	db	0
   658  007F0A                     STR_18:
   659  007F0A  0D                 	db	13
   660  007F0B  44                 	db	68	;'D'
   661  007F0C  69                 	db	105	;'i'
   662  007F0D  72                 	db	114	;'r'
   663  007F0E  65                 	db	101	;'e'
   664  007F0F  63                 	db	99	;'c'
   665  007F10  63                 	db	99	;'c'
   666  007F11  69                 	db	105	;'i'
   667  007F12  6F                 	db	111	;'o'
   668  007F13  6E                 	db	110	;'n'
   669  007F14  20                 	db	32
   670  007F15  45                 	db	69	;'E'
   671  007F16  6C                 	db	108	;'l'
   672  007F17  65                 	db	101	;'e'
   673  007F18  67                 	db	103	;'g'
   674  007F19  69                 	db	105	;'i'
   675  007F1A  64                 	db	100	;'d'
   676  007F1B  61                 	db	97	;'a'
   677  007F1C  3A                 	db	58	;':'
   678  007F1D  20                 	db	32
   679  007F1E  43                 	db	67	;'C'
   680  007F1F  41                 	db	65	;'A'
   681  007F20  4C                 	db	76	;'L'
   682  007F21  4C                 	db	76	;'L'
   683  007F22  45                 	db	69	;'E'
   684  007F23  4A                 	db	74	;'J'
   685  007F24  4F                 	db	79	;'O'
   686  007F25  4E                 	db	78	;'N'
   687  007F26  0A                 	db	10
   688  007F27  0A                 	db	10
   689  007F28  0D                 	db	13
   690  007F29  00                 	db	0
   691  007F2A                     STR_17:
   692  007F2A  0D                 	db	13
   693  007F2B  44                 	db	68	;'D'
   694  007F2C  69                 	db	105	;'i'
   695  007F2D  72                 	db	114	;'r'
   696  007F2E  65                 	db	101	;'e'
   697  007F2F  63                 	db	99	;'c'
   698  007F30  63                 	db	99	;'c'
   699  007F31  69                 	db	105	;'i'
   700  007F32  6F                 	db	111	;'o'
   701  007F33  6E                 	db	110	;'n'
   702  007F34  20                 	db	32
   703  007F35  45                 	db	69	;'E'
   704  007F36  6C                 	db	108	;'l'
   705  007F37  65                 	db	101	;'e'
   706  007F38  67                 	db	103	;'g'
   707  007F39  69                 	db	105	;'i'
   708  007F3A  64                 	db	100	;'d'
   709  007F3B  61                 	db	97	;'a'
   710  007F3C  3A                 	db	58	;':'
   711  007F3D  20                 	db	32
   712  007F3E  44                 	db	68	;'D'
   713  007F3F  45                 	db	69	;'E'
   714  007F40  52                 	db	82	;'R'
   715  007F41  45                 	db	69	;'E'
   716  007F42  43                 	db	67	;'C'
   717  007F43  48                 	db	72	;'H'
   718  007F44  41                 	db	65	;'A'
   719  007F45  0A                 	db	10
   720  007F46  0A                 	db	10
   721  007F47  0D                 	db	13
   722  007F48  00                 	db	0
   723  007F49  0D                 	db	13
   724  007F4A  44                 	db	68	;'D'
   725  007F4B  65                 	db	101	;'e'
   726  007F4C  73                 	db	115	;'s'
   727  007F4D  74                 	db	116	;'t'
   728  007F4E  69                 	db	105	;'i'
   729  007F4F  6E                 	db	110	;'n'
   730  007F50  6F                 	db	111	;'o'
   731  007F51  20                 	db	32
   732  007F52  6E                 	db	110	;'n'
   733  007F53  6F                 	db	111	;'o'
   734  007F54  20                 	db	32
   735  007F55  64                 	db	100	;'d'
   736  007F56  65                 	db	101	;'e'
   737  007F57  74                 	db	116	;'t'
   738  007F58  65                 	db	101	;'e'
   739  007F59  63                 	db	99	;'c'
   740  007F5A  74                 	db	116	;'t'
   741  007F5B  61                 	db	97	;'a'
   742  007F5C  64                 	db	100	;'d'
   743  007F5D  6F                 	db	111	;'o'
   744  007F5E  20                 	db	32
   745  007F5F  0D                 	db	13
   746  007F60  0A                 	db	10
   747  007F61  00                 	db	0
   748  007F62  0D                 	db	13
   749  007F63  53                 	db	83	;'S'
   750  007F64  65                 	db	101	;'e'
   751  007F65  20                 	db	32
   752  007F66  6C                 	db	108	;'l'
   753  007F67  6C                 	db	108	;'l'
   754  007F68  65                 	db	101	;'e'
   755  007F69  67                 	db	103	;'g'
   756  007F6A  6F                 	db	111	;'o'
   757  007F6B  20                 	db	32
   758  007F6C  61                 	db	97	;'a'
   759  007F6D  6C                 	db	108	;'l'
   760  007F6E  20                 	db	32
   761  007F6F  64                 	db	100	;'d'
   762  007F70  65                 	db	101	;'e'
   763  007F71  73                 	db	115	;'s'
   764  007F72  74                 	db	116	;'t'
   765  007F73  69                 	db	105	;'i'
   766  007F74  6E                 	db	110	;'n'
   767  007F75  6F                 	db	111	;'o'
   768  007F76  20                 	db	32
   769  007F77  0D                 	db	13
   770  007F78  0A                 	db	10
   771  007F79  00                 	db	0
   772  007F7A                     STR_14:
   773  007F7A  0D                 	db	13
   774  007F7B  53                 	db	83	;'S'
   775  007F7C  65                 	db	101	;'e'
   776  007F7D  20                 	db	32
   777  007F7E  6C                 	db	108	;'l'
   778  007F7F  6C                 	db	108	;'l'
   779  007F80  65                 	db	101	;'e'
   780  007F81  67                 	db	103	;'g'
   781  007F82  6F                 	db	111	;'o'
   782  007F83  20                 	db	32
   783  007F84  41                 	db	65	;'A'
   784  007F85  6C                 	db	108	;'l'
   785  007F86  20                 	db	32
   786  007F87  64                 	db	100	;'d'
   787  007F88  65                 	db	101	;'e'
   788  007F89  73                 	db	115	;'s'
   789  007F8A  74                 	db	116	;'t'
   790  007F8B  69                 	db	105	;'i'
   791  007F8C  6E                 	db	110	;'n'
   792  007F8D  6F                 	db	111	;'o'
   793  007F8E  0D                 	db	13
   794  007F8F  0A                 	db	10
   795  007F90  00                 	db	0
   796  007F91  0D                 	db	13
   797  007F92  49                 	db	73	;'I'
   798  007F93  7A                 	db	122	;'z'
   799  007F94  71                 	db	113	;'q'
   800  007F95  75                 	db	117	;'u'
   801  007F96  69                 	db	105	;'i'
   802  007F97  65                 	db	101	;'e'
   803  007F98  72                 	db	114	;'r'
   804  007F99  64                 	db	100	;'d'
   805  007F9A  61                 	db	97	;'a'
   806  007F9B  3A                 	db	58	;':'
   807  007F9C  20                 	db	32
   808  007F9D  25                 	db	37
   809  007F9E  2E                 	db	46
   810  007F9F  32                 	db	50	;'2'
   811  007FA0  66                 	db	102	;'f'
   812  007FA1  0D                 	db	13
   813  007FA2  0A                 	db	10
   814  007FA3  00                 	db	0
   815  007FA4  0D                 	db	13
   816  007FA5  45                 	db	69	;'E'
   817  007FA6  6E                 	db	110	;'n'
   818  007FA7  66                 	db	102	;'f'
   819  007FA8  72                 	db	114	;'r'
   820  007FA9  65                 	db	101	;'e'
   821  007FAA  6E                 	db	110	;'n'
   822  007FAB  74                 	db	116	;'t'
   823  007FAC  65                 	db	101	;'e'
   824  007FAD  3A                 	db	58	;':'
   825  007FAE  20                 	db	32
   826  007FAF  25                 	db	37
   827  007FB0  2E                 	db	46
   828  007FB1  32                 	db	50	;'2'
   829  007FB2  66                 	db	102	;'f'
   830  007FB3  0D                 	db	13
   831  007FB4  0A                 	db	10
   832  007FB5  00                 	db	0
   833  007FB6  0D                 	db	13
   834  007FB7  44                 	db	68	;'D'
   835  007FB8  65                 	db	101	;'e'
   836  007FB9  72                 	db	114	;'r'
   837  007FBA  65                 	db	101	;'e'
   838  007FBB  63                 	db	99	;'c'
   839  007FBC  68                 	db	104	;'h'
   840  007FBD  61                 	db	97	;'a'
   841  007FBE  3A                 	db	58	;':'
   842  007FBF  20                 	db	32
   843  007FC0  25                 	db	37
   844  007FC1  2E                 	db	46
   845  007FC2  32                 	db	50	;'2'
   846  007FC3  66                 	db	102	;'f'
   847  007FC4  0D                 	db	13
   848  007FC5  0A                 	db	10
   849  007FC6  00                 	db	0
   850  007FC7                     STR_8:
   851  007FC7  49                 	db	73	;'I'
   852  007FC8  7A                 	db	122	;'z'
   853  007FC9  71                 	db	113	;'q'
   854  007FCA  75                 	db	117	;'u'
   855  007FCB  69                 	db	105	;'i'
   856  007FCC  65                 	db	101	;'e'
   857  007FCD  72                 	db	114	;'r'
   858  007FCE  64                 	db	100	;'d'
   859  007FCF  61                 	db	97	;'a'
   860  007FD0  0A                 	db	10
   861  007FD1  00                 	db	0
   862  007FD2                     STR_7:
   863  007FD2  45                 	db	69	;'E'
   864  007FD3  6E                 	db	110	;'n'
   865  007FD4  66                 	db	102	;'f'
   866  007FD5  72                 	db	114	;'r'
   867  007FD6  65                 	db	101	;'e'
   868  007FD7  6E                 	db	110	;'n'
   869  007FD8  74                 	db	116	;'t'
   870  007FD9  65                 	db	101	;'e'
   871  007FDA  0A                 	db	10
   872  007FDB  00                 	db	0
   873  007FDC                     STR_9:
   874  007FDC  44                 	db	68	;'D'
   875  007FDD  65                 	db	101	;'e'
   876  007FDE  72                 	db	114	;'r'
   877  007FDF  65                 	db	101	;'e'
   878  007FE0  63                 	db	99	;'c'
   879  007FE1  68                 	db	104	;'h'
   880  007FE2  61                 	db	97	;'a'
   881  007FE3  0A                 	db	10
   882  007FE4  00                 	db	0
   883  007FE5                     STR_10:
   884  007FE5  41                 	db	65	;'A'
   885  007FE6  6C                 	db	108	;'l'
   886  007FE7  74                 	db	116	;'t'
   887  007FE8  6F                 	db	111	;'o'
   888  007FE9  0A                 	db	10
   889  007FEA  00                 	db	0
   890  007FEB                     STR_23:
   891  007FEB  49                 	db	73	;'I'
   892  007FEC  4E                 	db	78	;'N'
   893  007FED  46                 	db	70	;'F'
   894  007FEE  00                 	db	0
   895  007FEF                     STR_27:
   896  007FEF  4E                 	db	78	;'N'
   897  007FF0  41                 	db	65	;'A'
   898  007FF1  4E                 	db	78	;'N'
   899  007FF2  00                 	db	0
   900  007FF3                     STR_24:
   901  007FF3  69                 	db	105	;'i'
   902  007FF4  6E                 	db	110	;'n'
   903  007FF5  66                 	db	102	;'f'
   904  007FF6  00                 	db	0
   905  007FF7                     STR_28:
   906  007FF7  6E                 	db	110	;'n'
   907  007FF8  61                 	db	97	;'a'
   908  007FF9  6E                 	db	110	;'n'
   909  007FFA  00                 	db	0
   910  007FFB                     STR_31:
   911  007FFB  6C                 	db	108	;'l'
   912  007FFC  66                 	db	102	;'f'
   913  007FFD  00                 	db	0
   914  0000                     
   915                           ; #config settings
   916  007FFE  00                 	db	0	; dummy byte at the end
   917  0000                     
   918                           	psect	cinit
   919  00638A                     __pcinit:
   920                           	opt callstack 0
   921  00638A                     start_initialization:
   922                           	opt callstack 0
   923  00638A                     __initialization:
   924                           	opt callstack 0
   925                           
   926                           ; Initialize objects allocated to BANK1 (5 bytes)
   927                           ; load TBLPTR registers with __pidataBANK1
   928  00638A  0E08               	movlw	low __pidataBANK1
   929  00638C  6EF6               	movwf	tblptrl,c
   930  00638E  0E68               	movlw	high __pidataBANK1
   931  006390  6EF7               	movwf	tblptrh,c
   932  006392  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   933  006394  6EF8               	movwf	tblptru,c
   934  006396  EE01  F0F3         	lfsr	0,__pdataBANK1
   935  00639A  EE10 F005          	lfsr	1,5
   936  00639E                     copy_data0:
   937  00639E  0009               	tblrd		*+
   938  0063A0  CFF5 FFEE          	movff	tablat,postinc0
   939  0063A4  50E5               	movf	postdec1,w,c
   940  0063A6  50E1               	movf	fsr1l,w,c
   941  0063A8  E1FA               	bnz	copy_data0
   942                           
   943                           ; Clear objects allocated to BANK2 (220 bytes)
   944  0063AA  EE02  F000         	lfsr	0,__pbssBANK2
   945  0063AE  0EDC               	movlw	220
   946  0063B0                     clear_0:
   947  0063B0  6AEE               	clrf	postinc0,c
   948  0063B2  06E8               	decf	wreg,f,c
   949  0063B4  E1FD               	bnz	clear_0
   950                           
   951                           ; Clear objects allocated to BANK1 (218 bytes)
   952  0063B6  EE01  F000         	lfsr	0,__pbssBANK1
   953  0063BA  0EDA               	movlw	218
   954  0063BC                     clear_1:
   955  0063BC  6AEE               	clrf	postinc0,c
   956  0063BE  06E8               	decf	wreg,f,c
   957  0063C0  E1FD               	bnz	clear_1
   958                           
   959                           ; Clear objects allocated to COMRAM (5 bytes)
   960  0063C2  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   961  0063C4  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   962  0063C6  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   963  0063C8  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   964  0063CA  6A55               	clrf	__pbssCOMRAM& (0+255),c
   965  0063CC                     end_of_initialization:
   966                           	opt callstack 0
   967  0063CC                     __end_of__initialization:
   968                           	opt callstack 0
   969  0063CC  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   970  0063CE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   971  0063D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   972  0063D2  6EF8               	movwf	tblptru,c
   973  0063D4  0100               	movlb	0
   974  0063D6  EFAB  F02E         	goto	_main	;jump to C main() function
   975                           
   976                           	psect	bssCOMRAM
   977  000055                     __pbssCOMRAM:
   978                           	opt callstack 0
   979  000055                     _sensorDerecha:
   980                           	opt callstack 0
   981  000055                     	ds	4
   982  000059                     _llegoDestino:
   983                           	opt callstack 0
   984  000059                     	ds	1
   985                           
   986                           	psect	bssBANK1
   987  000100                     __pbssBANK1:
   988                           	opt callstack 0
   989  000100                     logf@F469:
   990                           	opt callstack 0
   991  000100                     	ds	4
   992  000104                     floorf@F524:
   993                           	opt callstack 0
   994  000104                     	ds	4
   995  000108                     ___fpclassifyf@F463:
   996                           	opt callstack 0
   997  000108                     	ds	4
   998  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   999                           	opt callstack 0
  1000  00010C                     	ds	4
  1001  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
  1002                           	opt callstack 0
  1003  000110                     	ds	4
  1004  000114                     _DISTANCIA_PRIORIDAD_ALTA:
  1005                           	opt callstack 0
  1006  000114                     	ds	4
  1007  000118                     _oldSensorEnfrente:
  1008                           	opt callstack 0
  1009  000118                     	ds	4
  1010  00011C                     _oldSensorIzquierda:
  1011                           	opt callstack 0
  1012  00011C                     	ds	4
  1013  000120                     _oldSensorDerecha:
  1014                           	opt callstack 0
  1015  000120                     	ds	4
  1016  000124                     _sensorEnfrente:
  1017                           	opt callstack 0
  1018  000124                     	ds	4
  1019  000128                     _sensorIzquierda:
  1020                           	opt callstack 0
  1021  000128                     	ds	4
  1022  00012C                     _nout:
  1023                           	opt callstack 0
  1024  00012C                     	ds	2
  1025  00012E                     _width:
  1026                           	opt callstack 0
  1027  00012E                     	ds	2
  1028  000130                     _prec:
  1029                           	opt callstack 0
  1030  000130                     	ds	2
  1031  000132                     _flags:
  1032                           	opt callstack 0
  1033  000132                     	ds	2
  1034  000134                     _mouse:
  1035                           	opt callstack 0
  1036  000134                     	ds	2
  1037  000136                     PID@difAnt:
  1038                           	opt callstack 0
  1039  000136                     	ds	2
  1040  000138                     PID@D:
  1041                           	opt callstack 0
  1042  000138                     	ds	2
  1043  00013A                     PID@I:
  1044                           	opt callstack 0
  1045  00013A                     	ds	2
  1046  00013C                     PID@P:
  1047                           	opt callstack 0
  1048  00013C                     	ds	2
  1049  00013E                     comportamientoBasico@espejearCarroY:
  1050                           	opt callstack 0
  1051  00013E                     	ds	1
  1052  00013F                     _paredIzquierda:
  1053                           	opt callstack 0
  1054  00013F                     	ds	1
  1055  000140                     _paredDerecha:
  1056                           	opt callstack 0
  1057  000140                     	ds	1
  1058  000141                     _paredEnfrente:
  1059                           	opt callstack 0
  1060  000141                     	ds	1
  1061  000142                     _posicionDestinoY:
  1062                           	opt callstack 0
  1063  000142                     	ds	1
  1064  000143                     _posicionDestinoX:
  1065                           	opt callstack 0
  1066  000143                     	ds	1
  1067  000144                     _posicionCarroY:
  1068                           	opt callstack 0
  1069  000144                     	ds	1
  1070  000145                     _posicionCarroX:
  1071                           	opt callstack 0
  1072  000145                     	ds	1
  1073  000146                     _crucesRecorridos:
  1074                           	opt callstack 0
  1075  000146                     	ds	1
  1076  000147                     _caminoEncontrado:
  1077                           	opt callstack 0
  1078  000147                     	ds	1
  1079  000148                     _numMovimientosTotales:
  1080                           	opt callstack 0
  1081  000148                     	ds	1
  1082  000149                     _reiniciarPID:
  1083                           	opt callstack 0
  1084  000149                     	ds	1
  1085  00014A                     _dbuf:
  1086                           	opt callstack 0
  1087  00014A                     	ds	80
  1088  00019A                     _buffer:
  1089                           	opt callstack 0
  1090  00019A                     	ds	50
  1091  0001CC                     comportamientoBasico@caminosRecorrer:
  1092                           	opt callstack 0
  1093  0001CC                     	ds	3
  1094  0001CF                     comportamientoBasico@numMovimientos:
  1095                           	opt callstack 0
  1096  0001CF                     	ds	2
  1097  0001D1                     comportamientoBasico@avanceRectoLargo:
  1098                           	opt callstack 0
  1099  0001D1                     	ds	1
  1100  0001D2                     comportamientoBasico@cambioOrientacionCarro:
  1101                           	opt callstack 0
  1102  0001D2                     	ds	1
  1103  0001D3                     comportamientoBasico@caminoActual:
  1104                           	opt callstack 0
  1105  0001D3                     	ds	1
  1106  0001D4                     comportamientoBasico@contCaminosRecorridos:
  1107                           	opt callstack 0
  1108  0001D4                     	ds	1
  1109  0001D5                     comportamientoBasico@posicionInvCruce:
  1110                           	opt callstack 0
  1111  0001D5                     	ds	1
  1112  0001D6                     comportamientoBasico@investigandoCruce:
  1113                           	opt callstack 0
  1114  0001D6                     	ds	1
  1115  0001D7                     comportamientoBasico@cruceDetectado:
  1116                           	opt callstack 0
  1117  0001D7                     	ds	1
  1118  0001D8                     comportamientoBasico@mapear:
  1119                           	opt callstack 0
  1120  0001D8                     	ds	1
  1121  0001D9                     comportamientoBasico@carroEspejeado:
  1122                           	opt callstack 0
  1123  0001D9                     	ds	1
  1124                           
  1125                           	psect	dataBANK1
  1126  0001F3                     __pdataBANK1:
  1127                           	opt callstack 0
  1128  0001F3                     _ida:
  1129                           	opt callstack 0
  1130  0001F3                     	ds	1
  1131  0001F4                     _pausa:
  1132                           	opt callstack 0
  1133  0001F4                     	ds	1
  1134  0001F5                     _SENSOR_PRIORIDAD_BAJA:
  1135                           	opt callstack 0
  1136  0001F5                     	ds	1
  1137  0001F6                     _SENSOR_PRIORIDAD_MEDIA:
  1138                           	opt callstack 0
  1139  0001F6                     	ds	1
  1140  0001F7                     _SENSOR_PRIORIDAD_ALTA:
  1141                           	opt callstack 0
  1142  0001F7                     	ds	1
  1143                           
  1144                           	psect	bssBANK2
  1145  000200                     __pbssBANK2:
  1146                           	opt callstack 0
  1147  000200                     comportamientoBasico@movimientosRealizados:
  1148                           	opt callstack 0
  1149  000200                     	ds	200
  1150  0002C8                     comportamientoBasico@caminoFinal:
  1151                           	opt callstack 0
  1152  0002C8                     	ds	20
  1153                           
  1154                           	psect	cstackBANK1
  1155  0001DA                     __pcstackBANK1:
  1156                           	opt callstack 0
  1157  0001DA                     decidirDireccion@caminosRecorrer:
  1158                           	opt callstack 0
  1159  0001DA                     dameDistancia@distancia:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x0
  1163  0001DA                     	ds	2
  1164  0001DC                     decidirDireccion@investigandoCruce:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x2
  1168  0001DC                     	ds	2
  1169  0001DE                     decidirDireccion@posicionInvCruce:
  1170                           	opt callstack 0
  1171  0001DE                     _dameDistancia$1889:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x4
  1175  0001DE                     	ds	2
  1176  0001E0                     decidirDireccion@contCaminosRecorridos:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x6
  1180  0001E0                     	ds	2
  1181  0001E2                     dameDistancia@numeroSensor:
  1182                           	opt callstack 0
  1183  0001E2                     decidirDireccion@caminoActual:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x8
  1187  0001E2                     	ds	1
  1188  0001E3                     _leerSensores$1890:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x9
  1192  0001E3                     	ds	1
  1193  0001E4                     decidirDireccion@cambioOrientacionCarro:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0xA
  1197  0001E4                     	ds	2
  1198  0001E6                     decidirDireccion@mapear:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 2 bytes @ 0xC
  1202  0001E6                     	ds	2
  1203  0001E8                     decidirDireccion@cruceDetectado:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 2 bytes @ 0xE
  1207  0001E8                     	ds	2
  1208  0001EA                     decidirDireccion@avanceRectoLargo:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x10
  1212  0001EA                     	ds	2
  1213  0001EC                     decidirDireccion@caminoFinal:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x12
  1217  0001EC                     	ds	2
  1218  0001EE                     ??_comportamientoBasico:
  1219                           
  1220                           ; 1 bytes @ 0x14
  1221  0001EE                     	ds	4
  1222  0001F2                     main@iniciado:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 1 bytes @ 0x18
  1226  0001F2                     	ds	1
  1227                           
  1228                           	psect	cstackBANK0
  1229  000060                     __pcstackBANK0:
  1230                           	opt callstack 0
  1231  000060                     ___flmul@sign:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x0
  1235  000060                     	ds	1
  1236  000061                     ___flmul@aexp:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x1
  1240  000061                     	ds	1
  1241  000062                     ___flmul@grs:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x2
  1245  000062                     	ds	4
  1246  000066                     ___flmul@bexp:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 1 bytes @ 0x6
  1250  000066                     	ds	1
  1251  000067                     ___flmul@prod:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x7
  1255  000067                     	ds	4
  1256  00006B                     ___flmul@temp:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0xB
  1260  00006B                     	ds	2
  1261  00006D                     ?_logf:
  1262                           	opt callstack 0
  1263  00006D                     ?_scalbnf:
  1264                           	opt callstack 0
  1265  00006D                     ?___fltol:
  1266                           	opt callstack 0
  1267  00006D                     ___flge@ff1:
  1268                           	opt callstack 0
  1269  00006D                     ___fltol@f1:
  1270                           	opt callstack 0
  1271  00006D                     logf@x:
  1272                           	opt callstack 0
  1273  00006D                     scalbnf@x:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 4 bytes @ 0xD
  1277  00006D                     	ds	4
  1278  000071                     pwmDuty@cicloTrabajo:
  1279                           	opt callstack 0
  1280  000071                     scalbnf@n:
  1281                           	opt callstack 0
  1282  000071                     ___flge@ff2:
  1283                           	opt callstack 0
  1284  000071                     logf@R:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x11
  1288  000071                     	ds	2
  1289  000073                     pwmDuty@channel:
  1290                           	opt callstack 0
  1291  000073                     scalbnf@u:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x13
  1295  000073                     	ds	1
  1296  000074                     pwmDuty@duty:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x14
  1300  000074                     	ds	1
  1301  000075                     ?_efgtoa:
  1302                           	opt callstack 0
  1303  000075                     efgtoa@fp:
  1304                           	opt callstack 0
  1305  000075                     logf@t1:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 4 bytes @ 0x15
  1309  000075                     	ds	2
  1310  000077                     efgtoa@f:
  1311                           	opt callstack 0
  1312  000077                     scalbnf@y:
  1313                           	opt callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x17
  1316  000077                     	ds	1
  1317  000078                     ??_PID:
  1318  000078                     ??_forzarEspejeoIzquierda:
  1319  000078                     ??_forzarEspejeoDerecha:
  1320                           
  1321                           ; 1 bytes @ 0x18
  1322  000078                     	ds	1
  1323  000079                     moverCarrito@carroEspejeado:
  1324                           	opt callstack 0
  1325  000079                     logf@t2:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x19
  1329  000079                     	ds	1
  1330  00007A                     PID@velocidadIzquierda:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x1A
  1334  00007A                     	ds	1
  1335  00007B                     efgtoa@c:
  1336                           	opt callstack 0
  1337  00007B                     moverCarrito@avanceRectoLargo:
  1338                           	opt callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x1B
  1341  00007B                     	ds	1
  1342  00007C                     _PID$599:
  1343                           	opt callstack 0
  1344  00007C                     efgtoa@ou:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x1C
  1348  00007C                     	ds	1
  1349  00007D                     ??_moverCarrito:
  1350  00007D                     _logf$1896:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 4 bytes @ 0x1D
  1354  00007D                     	ds	1
  1355  00007E                     PID@velocidadDerecha:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 2 bytes @ 0x1E
  1359  00007E                     	ds	1
  1360  00007F                     moverCarrito@espejearCarroY:
  1361                           	opt callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x1F
  1364  00007F                     	ds	1
  1365  000080                     _PID$601:
  1366                           	opt callstack 0
  1367  000080                     _efgtoa$928:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x20
  1371  000080                     	ds	1
  1372  000081                     _logf$1897:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 4 bytes @ 0x21
  1376  000081                     	ds	1
  1377  000082                     PID@dif:
  1378                           	opt callstack 0
  1379  000082                     _efgtoa$929:
  1380                           	opt callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x22
  1383  000082                     	ds	2
  1384  000084                     PID@error:
  1385                           	opt callstack 0
  1386  000084                     _efgtoa$933:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x24
  1390  000084                     	ds	1
  1391  000085                     _logf$1898:
  1392                           	opt callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x25
  1395  000085                     	ds	1
  1396  000086                     regresarAlCruce@movimientos:
  1397                           	opt callstack 0
  1398  000086                     _efgtoa$937:
  1399                           	opt callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x26
  1402  000086                     	ds	2
  1403  000088                     regresarAlCruce@numMovimientos:
  1404                           	opt callstack 0
  1405  000088                     _efgtoa$938:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x28
  1409  000088                     	ds	1
  1410  000089                     _logf$1899:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 4 bytes @ 0x29
  1414  000089                     	ds	1
  1415  00008A                     _efgtoa$939:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x2A
  1419  00008A                     	ds	1
  1420  00008B                     regresarAlCruce@i:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x2B
  1424  00008B                     	ds	1
  1425  00008C                     efgtoa@t:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x2C
  1429  00008C                     	ds	1
  1430  00008D                     logf@k:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 2 bytes @ 0x2D
  1434  00008D                     	ds	1
  1435  00008E                     efgtoa@pp:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x2E
  1439  00008E                     	ds	1
  1440  00008F                     logf@hfsq:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x2F
  1444  00008F                     	ds	1
  1445  000090                     efgtoa@m:
  1446                           	opt callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x30
  1449  000090                     	ds	2
  1450  000092                     efgtoa@ne:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x32
  1454  000092                     	ds	1
  1455  000093                     logf@dk:
  1456                           	opt callstack 0
  1457                           
  1458                           ; 4 bytes @ 0x33
  1459  000093                     	ds	1
  1460  000094                     efgtoa@d:
  1461                           	opt callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x34
  1464  000094                     	ds	2
  1465  000096                     efgtoa@sign:
  1466                           	opt callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x36
  1469  000096                     	ds	1
  1470  000097                     logf@s:
  1471                           	opt callstack 0
  1472                           
  1473                           ; 4 bytes @ 0x37
  1474  000097                     	ds	1
  1475  000098                     efgtoa@p:
  1476                           	opt callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x38
  1479  000098                     	ds	2
  1480  00009A                     efgtoa@nmode:
  1481                           	opt callstack 0
  1482                           
  1483                           ; 1 bytes @ 0x3A
  1484  00009A                     	ds	1
  1485  00009B                     efgtoa@w:
  1486                           	opt callstack 0
  1487  00009B                     logf@z:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 4 bytes @ 0x3B
  1491  00009B                     	ds	2
  1492  00009D                     efgtoa@mode:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 1 bytes @ 0x3D
  1496  00009D                     	ds	1
  1497  00009E                     efgtoa@h:
  1498                           	opt callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x3E
  1501  00009E                     	ds	1
  1502  00009F                     logf@w:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x3F
  1506  00009F                     	ds	3
  1507  0000A2                     efgtoa@l:
  1508                           	opt callstack 0
  1509                           
  1510                           ; 4 bytes @ 0x42
  1511  0000A2                     	ds	1
  1512  0000A3                     _logf$1895:
  1513                           	opt callstack 0
  1514                           
  1515                           ; 4 bytes @ 0x43
  1516  0000A3                     	ds	3
  1517  0000A6                     efgtoa@i:
  1518                           	opt callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x46
  1521  0000A6                     	ds	1
  1522  0000A7                     logf@u:
  1523                           	opt callstack 0
  1524                           
  1525                           ; 4 bytes @ 0x47
  1526  0000A7                     	ds	1
  1527  0000A8                     efgtoa@g:
  1528                           	opt callstack 0
  1529                           
  1530                           ; 4 bytes @ 0x48
  1531  0000A8                     	ds	3
  1532  0000AB                     logf@f:
  1533                           	opt callstack 0
  1534                           
  1535                           ; 4 bytes @ 0x4B
  1536  0000AB                     	ds	1
  1537  0000AC                     efgtoa@e:
  1538                           	opt callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x4C
  1541  0000AC                     	ds	2
  1542  0000AE                     efgtoa@n:
  1543                           	opt callstack 0
  1544                           
  1545                           ; 2 bytes @ 0x4E
  1546  0000AE                     	ds	1
  1547  0000AF                     logf@ix:
  1548                           	opt callstack 0
  1549                           
  1550                           ; 4 bytes @ 0x4F
  1551  0000AF                     	ds	1
  1552  0000B0                     efgtoa@u:
  1553                           	opt callstack 0
  1554                           
  1555                           ; 4 bytes @ 0x50
  1556  0000B0                     	ds	3
  1557  0000B3                     ?_expf:
  1558                           	opt callstack 0
  1559  0000B3                     expf@x:
  1560                           	opt callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x53
  1563  0000B3                     	ds	1
  1564  0000B4                     ?_vfpfcnvrt:
  1565                           	opt callstack 0
  1566  0000B4                     vfpfcnvrt@fp:
  1567                           	opt callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x54
  1570  0000B4                     	ds	2
  1571  0000B6                     vfpfcnvrt@fmt:
  1572                           	opt callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x56
  1575  0000B6                     	ds	1
  1576  0000B7                     expf@__xc8_float_word:
  1577                           	opt callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x57
  1580  0000B7                     	ds	1
  1581  0000B8                     vfpfcnvrt@ap:
  1582                           	opt callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x58
  1585  0000B8                     	ds	2
  1586  0000BA                     ??_vfpfcnvrt:
  1587                           
  1588                           ; 1 bytes @ 0x5A
  1589  0000BA                     	ds	1
  1590  0000BB                     _expf$1891:
  1591                           	opt callstack 0
  1592                           
  1593                           ; 4 bytes @ 0x5B
  1594  0000BB                     	ds	3
  1595  0000BE                     vfpfcnvrt@ll:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 8 bytes @ 0x5E
  1599  0000BE                     	ds	1
  1600  0000BF                     _expf$1892:
  1601                           	opt callstack 0
  1602                           
  1603                           ; 4 bytes @ 0x5F
  1604  0000BF                     	ds	4
  1605  0000C3                     _expf$1893:
  1606                           	opt callstack 0
  1607                           
  1608                           ; 4 bytes @ 0x63
  1609  0000C3                     	ds	3
  1610  0000C6                     _vfpfcnvrt$953:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x66
  1614  0000C6                     	ds	1
  1615  0000C7                     _expf$1894:
  1616                           	opt callstack 0
  1617                           
  1618                           ; 4 bytes @ 0x67
  1619  0000C7                     	ds	1
  1620  0000C8                     _vfpfcnvrt$959:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x68
  1624  0000C8                     	ds	2
  1625  0000CA                     vfpfcnvrt@ct:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 3 bytes @ 0x6A
  1629  0000CA                     	ds	1
  1630  0000CB                     expf@c:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 4 bytes @ 0x6B
  1634  0000CB                     	ds	2
  1635  0000CD                     vfpfcnvrt@f:
  1636                           	opt callstack 0
  1637                           
  1638                           ; 4 bytes @ 0x6D
  1639  0000CD                     	ds	2
  1640  0000CF                     expf@xx:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 4 bytes @ 0x6F
  1644  0000CF                     	ds	2
  1645  0000D1                     vfpfcnvrt@c:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 1 bytes @ 0x71
  1649  0000D1                     	ds	1
  1650  0000D2                     ?_vfprintf:
  1651                           	opt callstack 0
  1652  0000D2                     vfprintf@fp:
  1653                           	opt callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x72
  1656  0000D2                     	ds	1
  1657  0000D3                     expf@y:
  1658                           	opt callstack 0
  1659                           
  1660                           ; 4 bytes @ 0x73
  1661  0000D3                     	ds	1
  1662  0000D4                     vfprintf@fmt:
  1663                           	opt callstack 0
  1664                           
  1665                           ; 2 bytes @ 0x74
  1666  0000D4                     	ds	2
  1667  0000D6                     vfprintf@ap:
  1668                           	opt callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x76
  1671  0000D6                     	ds	1
  1672  0000D7                     expf@hi:
  1673                           	opt callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x77
  1676  0000D7                     	ds	1
  1677  0000D8                     vfprintf@cfmt:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 2 bytes @ 0x78
  1681  0000D8                     	ds	2
  1682  0000DA                     ?_sprintf:
  1683                           	opt callstack 0
  1684  0000DA                     sprintf@s:
  1685                           	opt callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x7A
  1688  0000DA                     	ds	1
  1689  0000DB                     expf@lo:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 4 bytes @ 0x7B
  1693  0000DB                     	ds	1
  1694  0000DC                     sprintf@fmt:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 2 bytes @ 0x7C
  1698  0000DC                     	ds	3
  1699  0000DF                     expf@sign:
  1700                           	opt callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x7F
  1703  0000DF                     	ds	2
  1704  0000E1                     expf@k:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 4 bytes @ 0x81
  1708  0000E1                     	ds	4
  1709  0000E5                     expf@hx:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 4 bytes @ 0x85
  1713  0000E5                     	ds	1
  1714  0000E6                     sprintf@ap:
  1715                           	opt callstack 0
  1716                           
  1717                           ; 2 bytes @ 0x86
  1718  0000E6                     	ds	2
  1719  0000E8                     sprintf@f:
  1720                           	opt callstack 0
  1721                           
  1722                           ; 6 bytes @ 0x88
  1723  0000E8                     	ds	1
  1724  0000E9                     ?_myPow:
  1725                           	opt callstack 0
  1726  0000E9                     myPow@x:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 4 bytes @ 0x89
  1730  0000E9                     	ds	4
  1731  0000ED                     myPow@y:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 4 bytes @ 0x8D
  1735  0000ED                     	ds	1
  1736  0000EE                     ??_decidirDireccion:
  1737  0000EE                     visualizarPasosRealizados@numMovimientos:
  1738                           	opt callstack 0
  1739  0000EE                     probarMapeoDireccionCruces@caminoFinal:
  1740                           	opt callstack 0
  1741                           
  1742                           ; 2 bytes @ 0x8E
  1743  0000EE                     	ds	2
  1744  0000F0                     ??_visualizarPasosRealizados:
  1745  0000F0                     probarMapeoDireccionCruces@caminoActual:
  1746                           	opt callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x90
  1749  0000F0                     	ds	1
  1750  0000F1                     decidirDireccion@direccionElegida:
  1751                           	opt callstack 0
  1752  0000F1                     probarMapeoDireccionCruces@investigandoCruce:
  1753                           	opt callstack 0
  1754  0000F1                     _myPow$1887:
  1755                           	opt callstack 0
  1756                           
  1757                           ; 4 bytes @ 0x91
  1758  0000F1                     	ds	2
  1759  0000F3                     probarMapeoDireccionCruces@posicionInvCruce:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x93
  1763  0000F3                     	ds	2
  1764  0000F5                     probarMapeoDireccionCruces@mapear:
  1765                           	opt callstack 0
  1766  0000F5                     _myPow$1888:
  1767                           	opt callstack 0
  1768                           
  1769                           ; 4 bytes @ 0x95
  1770  0000F5                     	ds	2
  1771  0000F7                     probarMapeoDireccionCruces@cruceDetectado:
  1772                           	opt callstack 0
  1773                           
  1774                           ; 2 bytes @ 0x97
  1775  0000F7                     	ds	2
  1776  0000F9                     ?_dameDistancia:
  1777                           	opt callstack 0
  1778  0000F9                     probarMapeoDireccionCruces@contCaminosRecorridos:
  1779                           	opt callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x99
  1782  0000F9                     	ds	2
  1783  0000FB                     probarMapeoDireccionCruces@cambioOrientacionCarro:
  1784                           	opt callstack 0
  1785                           
  1786                           ; 2 bytes @ 0x9B
  1787  0000FB                     	ds	2
  1788  0000FD                     ??_probarMapeoDireccionCruces:
  1789                           
  1790                           ; 1 bytes @ 0x9D
  1791  0000FD                     	ds	2
  1792  0000FF                     comportamientoBasico@direccionElegida:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 1 bytes @ 0x9F
  1796  0000FF                     	ds	1
  1797                           
  1798                           	psect	cstackCOMRAM
  1799  000001                     __pcstackCOMRAM:
  1800                           	opt callstack 0
  1801  000001                     ??_antiRebote:
  1802  000001                     
  1803                           ; 1 bytes @ 0x0
  1804  000001                     	ds	2
  1805  000003                     antiRebote@pin:
  1806                           	opt callstack 0
  1807                           
  1808                           ; 1 bytes @ 0x2
  1809  000003                     	ds	1
  1810  000004                     ??_boton:
  1811                           
  1812                           ; 1 bytes @ 0x3
  1813  000004                     	ds	2
  1814  000006                     ??_forzarParoAuto:
  1815  000006                     ??_configPwm:
  1816  000006                     ??_forzarReversa:
  1817  000006                     ??_forzarAvanceRecto:
  1818  000006                     ??_forzarGiroIzquierda:
  1819  000006                     ??_forzarGiroDerecha:
  1820  000006                     ?_strlen:
  1821                           	opt callstack 0
  1822  000006                     ?___fpclassifyf:
  1823                           	opt callstack 0
  1824  000006                     ?_isupper:
  1825                           	opt callstack 0
  1826  000006                     ?_isdigit:
  1827                           	opt callstack 0
  1828  000006                     ?_strncmp:
  1829                           	opt callstack 0
  1830  000006                     ?_isspace:
  1831                           	opt callstack 0
  1832  000006                     ?_dameLecturaAdc:
  1833                           	opt callstack 0
  1834  000006                     ?___wmul:
  1835                           	opt callstack 0
  1836  000006                     ?___awdiv:
  1837                           	opt callstack 0
  1838  000006                     ?___awmod:
  1839                           	opt callstack 0
  1840  000006                     ?___fladd:
  1841                           	opt callstack 0
  1842  000006                     ?___lmul:
  1843                           	opt callstack 0
  1844  000006                     ?___aodiv:
  1845                           	opt callstack 0
  1846  000006                     ?___aomod:
  1847                           	opt callstack 0
  1848  000006                     UART_write@dato:
  1849                           	opt callstack 0
  1850  000006                     limpiarMovimientos@movimientos:
  1851                           	opt callstack 0
  1852  000006                     ___wmul@multiplier:
  1853                           	opt callstack 0
  1854  000006                     ___awdiv@dividend:
  1855                           	opt callstack 0
  1856  000006                     ___awmod@dividend:
  1857                           	opt callstack 0
  1858  000006                     isdigit@c:
  1859                           	opt callstack 0
  1860  000006                     isspace@c:
  1861                           	opt callstack 0
  1862  000006                     isupper@c:
  1863                           	opt callstack 0
  1864  000006                     fputc@c:
  1865                           	opt callstack 0
  1866  000006                     strcpy@dest:
  1867                           	opt callstack 0
  1868  000006                     strlen@s:
  1869                           	opt callstack 0
  1870  000006                     strncmp@_l:
  1871                           	opt callstack 0
  1872  000006                     ___lmul@multiplier:
  1873                           	opt callstack 0
  1874  000006                     ___fleq@ff1:
  1875                           	opt callstack 0
  1876  000006                     ___fladd@b:
  1877                           	opt callstack 0
  1878  000006                     ___fpclassifyf@x:
  1879                           	opt callstack 0
  1880  000006                     ___aodiv@dividend:
  1881                           	opt callstack 0
  1882  000006                     ___aomod@dividend:
  1883                           	opt callstack 0
  1884                           
  1885                           ; 8 bytes @ 0x5
  1886  000006                     	ds	1
  1887  000007                     UART_printf@cadena:
  1888                           	opt callstack 0
  1889                           
  1890                           ; 2 bytes @ 0x6
  1891  000007                     	ds	1
  1892  000008                     ??_mover:
  1893  000008                     ??_isupper:
  1894  000008                     ??_isdigit:
  1895  000008                     ??_isspace:
  1896  000008                     ??_dameLecturaAdc:
  1897  000008                     configPwm@channel:
  1898                           	opt callstack 0
  1899  000008                     limpiarMovimientos@numMovimientos:
  1900                           	opt callstack 0
  1901  000008                     ___wmul@multiplicand:
  1902                           	opt callstack 0
  1903  000008                     ___awdiv@divisor:
  1904                           	opt callstack 0
  1905  000008                     ___awmod@divisor:
  1906                           	opt callstack 0
  1907  000008                     fputc@fp:
  1908                           	opt callstack 0
  1909  000008                     strcpy@src:
  1910                           	opt callstack 0
  1911  000008                     strlen@a:
  1912                           	opt callstack 0
  1913  000008                     strncmp@_r:
  1914                           	opt callstack 0
  1915                           
  1916                           ; 2 bytes @ 0x7
  1917  000008                     	ds	1
  1918  000009                     ??_mostrarDireccionElegida:
  1919                           
  1920                           ; 1 bytes @ 0x8
  1921  000009                     	ds	1
  1922  00000A                     ??_fputc:
  1923  00000A                     ??___fpclassifyf:
  1924  00000A                     ??_strcpy:
  1925  00000A                     dameLecturaAdc@canalLeer:
  1926                           	opt callstack 0
  1927  00000A                     ___awdiv@counter:
  1928                           	opt callstack 0
  1929  00000A                     ___awmod@counter:
  1930                           	opt callstack 0
  1931  00000A                     ___wmul@product:
  1932                           	opt callstack 0
  1933  00000A                     strncmp@n:
  1934                           	opt callstack 0
  1935  00000A                     ___lmul@multiplicand:
  1936                           	opt callstack 0
  1937  00000A                     ___fleq@ff2:
  1938                           	opt callstack 0
  1939  00000A                     ___fladd@a:
  1940                           	opt callstack 0
  1941                           
  1942                           ; 4 bytes @ 0x9
  1943  00000A                     	ds	1
  1944  00000B                     ?___xxtofl:
  1945                           	opt callstack 0
  1946  00000B                     seLlegoAlDestino@llegoDestino:
  1947                           	opt callstack 0
  1948  00000B                     mostrarDireccionElegida@direccionElegida:
  1949                           	opt callstack 0
  1950  00000B                     ___awdiv@sign:
  1951                           	opt callstack 0
  1952  00000B                     ___awmod@sign:
  1953                           	opt callstack 0
  1954  00000B                     ___xxtofl@val:
  1955                           	opt callstack 0
  1956                           
  1957                           ; 4 bytes @ 0xA
  1958  00000B                     	ds	1
  1959  00000C                     ??_strncmp:
  1960  00000C                     ?_tolower:
  1961                           	opt callstack 0
  1962  00000C                     _isspace$1491:
  1963                           	opt callstack 0
  1964  00000C                     limpiarMovimientos@i:
  1965                           	opt callstack 0
  1966  00000C                     ___awdiv@quotient:
  1967                           	opt callstack 0
  1968  00000C                     strcpy@s:
  1969                           	opt callstack 0
  1970  00000C                     tolower@c:
  1971                           	opt callstack 0
  1972                           
  1973                           ; 2 bytes @ 0xB
  1974  00000C                     	ds	1
  1975  00000D                     ?_atoi:
  1976                           	opt callstack 0
  1977  00000D                     atoi@s:
  1978                           	opt callstack 0
  1979  00000D                     strncmp@l:
  1980                           	opt callstack 0
  1981                           
  1982                           ; 2 bytes @ 0xC
  1983  00000D                     	ds	1
  1984  00000E                     ??_tolower:
  1985  00000E                     ??___fladd:
  1986  00000E                     ??___fleq:
  1987  00000E                     ___fpclassifyf@e:
  1988                           	opt callstack 0
  1989  00000E                     strcpy@d:
  1990                           	opt callstack 0
  1991  00000E                     ___lmul@product:
  1992                           	opt callstack 0
  1993  00000E                     ___aodiv@divisor:
  1994                           	opt callstack 0
  1995  00000E                     ___aomod@divisor:
  1996                           	opt callstack 0
  1997                           
  1998                           ; 8 bytes @ 0xD
  1999  00000E                     	ds	1
  2000  00000F                     ??_atoi:
  2001  00000F                     ??___xxtofl:
  2002  00000F                     fputs@s:
  2003                           	opt callstack 0
  2004  00000F                     strncmp@r:
  2005                           	opt callstack 0
  2006                           
  2007                           ; 2 bytes @ 0xE
  2008  00000F                     	ds	1
  2009  000010                     ___fpclassifyf@u:
  2010                           	opt callstack 0
  2011                           
  2012                           ; 4 bytes @ 0xF
  2013  000010                     	ds	1
  2014  000011                     fputs@fp:
  2015                           	opt callstack 0
  2016                           
  2017                           ; 2 bytes @ 0x10
  2018  000011                     	ds	1
  2019  000012                     ?___aldiv:
  2020                           	opt callstack 0
  2021  000012                     ___fladd@signs:
  2022                           	opt callstack 0
  2023  000012                     _tolower$1614:
  2024                           	opt callstack 0
  2025  000012                     ___aldiv@dividend:
  2026                           	opt callstack 0
  2027                           
  2028                           ; 4 bytes @ 0x11
  2029  000012                     	ds	1
  2030  000013                     ___fladd@aexp:
  2031                           	opt callstack 0
  2032  000013                     ___xxtofl@sign:
  2033                           	opt callstack 0
  2034  000013                     fputs@c:
  2035                           	opt callstack 0
  2036  000013                     atoi@neg:
  2037                           	opt callstack 0
  2038                           
  2039                           ; 2 bytes @ 0x12
  2040  000013                     	ds	1
  2041  000014                     ___fladd@bexp:
  2042                           	opt callstack 0
  2043  000014                     ___xxtofl@exp:
  2044                           	opt callstack 0
  2045  000014                     fputs@i:
  2046                           	opt callstack 0
  2047                           
  2048                           ; 2 bytes @ 0x13
  2049  000014                     	ds	1
  2050  000015                     ___fladd@grs:
  2051                           	opt callstack 0
  2052  000015                     _atoi$1432:
  2053                           	opt callstack 0
  2054  000015                     ___xxtofl@arg:
  2055                           	opt callstack 0
  2056                           
  2057                           ; 4 bytes @ 0x14
  2058  000015                     	ds	1
  2059  000016                     ?_pad:
  2060                           	opt callstack 0
  2061  000016                     ___aodiv@counter:
  2062                           	opt callstack 0
  2063  000016                     ___aomod@counter:
  2064                           	opt callstack 0
  2065  000016                     pad@fp:
  2066                           	opt callstack 0
  2067  000016                     ___aldiv@divisor:
  2068                           	opt callstack 0
  2069                           
  2070                           ; 4 bytes @ 0x15
  2071  000016                     	ds	1
  2072  000017                     ___aodiv@sign:
  2073                           	opt callstack 0
  2074  000017                     ___aomod@sign:
  2075                           	opt callstack 0
  2076  000017                     _atoi$1434:
  2077                           	opt callstack 0
  2078                           
  2079                           ; 2 bytes @ 0x16
  2080  000017                     	ds	1
  2081  000018                     ?_abs:
  2082                           	opt callstack 0
  2083  000018                     pad@buf:
  2084                           	opt callstack 0
  2085  000018                     abs@a:
  2086                           	opt callstack 0
  2087  000018                     ___aodiv@quotient:
  2088                           	opt callstack 0
  2089                           
  2090                           ; 8 bytes @ 0x17
  2091  000018                     	ds	1
  2092  000019                     ?___flsub:
  2093                           	opt callstack 0
  2094  000019                     _atoi$1433:
  2095                           	opt callstack 0
  2096  000019                     ___flsub@b:
  2097                           	opt callstack 0
  2098                           
  2099                           ; 4 bytes @ 0x18
  2100  000019                     	ds	1
  2101  00001A                     ??_abs:
  2102  00001A                     ___aldiv@counter:
  2103                           	opt callstack 0
  2104  00001A                     pad@p:
  2105                           	opt callstack 0
  2106  00001A                     atoi@n:
  2107                           	opt callstack 0
  2108                           
  2109                           ; 2 bytes @ 0x19
  2110  00001A                     	ds	1
  2111  00001B                     ___aldiv@sign:
  2112                           	opt callstack 0
  2113                           
  2114                           ; 1 bytes @ 0x1A
  2115  00001B                     	ds	1
  2116  00001C                     ??_pad:
  2117  00001C                     ___aldiv@quotient:
  2118                           	opt callstack 0
  2119                           
  2120                           ; 4 bytes @ 0x1B
  2121  00001C                     	ds	1
  2122  00001D                     pad@i:
  2123                           	opt callstack 0
  2124  00001D                     ___flsub@a:
  2125                           	opt callstack 0
  2126                           
  2127                           ; 4 bytes @ 0x1C
  2128  00001D                     	ds	2
  2129  00001F                     pad@w:
  2130                           	opt callstack 0
  2131                           
  2132                           ; 2 bytes @ 0x1E
  2133  00001F                     	ds	1
  2134  000020                     ?_map:
  2135                           	opt callstack 0
  2136  000020                     map@x:
  2137                           	opt callstack 0
  2138  000020                     UART_init@BAUD:
  2139                           	opt callstack 0
  2140                           
  2141                           ; 4 bytes @ 0x1F
  2142  000020                     	ds	1
  2143  000021                     ?_ctoa:
  2144                           	opt callstack 0
  2145  000021                     ?_dtoa:
  2146                           	opt callstack 0
  2147  000021                     ?___fldiv:
  2148                           	opt callstack 0
  2149  000021                     ctoa@fp:
  2150                           	opt callstack 0
  2151  000021                     dtoa@fp:
  2152                           	opt callstack 0
  2153  000021                     ___fldiv@b:
  2154                           	opt callstack 0
  2155                           
  2156                           ; 4 bytes @ 0x20
  2157  000021                     	ds	2
  2158  000023                     ctoa@c:
  2159                           	opt callstack 0
  2160  000023                     dtoa@d:
  2161                           	opt callstack 0
  2162                           
  2163                           ; 8 bytes @ 0x22
  2164  000023                     	ds	1
  2165  000024                     ctoa@w:
  2166                           	opt callstack 0
  2167  000024                     map@in_min:
  2168                           	opt callstack 0
  2169                           
  2170                           ; 4 bytes @ 0x23
  2171  000024                     	ds	1
  2172  000025                     ___fldiv@a:
  2173                           	opt callstack 0
  2174                           
  2175                           ; 4 bytes @ 0x24
  2176  000025                     	ds	3
  2177  000028                     map@in_max:
  2178                           	opt callstack 0
  2179  000028                     _UART_init$1886:
  2180                           	opt callstack 0
  2181                           
  2182                           ; 4 bytes @ 0x27
  2183  000028                     	ds	1
  2184  000029                     ??___fldiv:
  2185                           
  2186                           ; 1 bytes @ 0x28
  2187  000029                     	ds	2
  2188  00002B                     ??_dtoa:
  2189                           
  2190                           ; 1 bytes @ 0x2A
  2191  00002B                     	ds	1
  2192  00002C                     map@out_min:
  2193                           	opt callstack 0
  2194                           
  2195                           ; 4 bytes @ 0x2B
  2196  00002C                     	ds	1
  2197  00002D                     ___fldiv@rem:
  2198                           	opt callstack 0
  2199                           
  2200                           ; 4 bytes @ 0x2C
  2201  00002D                     	ds	3
  2202  000030                     map@out_max:
  2203                           	opt callstack 0
  2204                           
  2205                           ; 4 bytes @ 0x2F
  2206  000030                     	ds	1
  2207  000031                     ___fldiv@sign:
  2208                           	opt callstack 0
  2209                           
  2210                           ; 1 bytes @ 0x30
  2211  000031                     	ds	1
  2212  000032                     ___fldiv@new_exp:
  2213                           	opt callstack 0
  2214                           
  2215                           ; 2 bytes @ 0x31
  2216  000032                     	ds	1
  2217  000033                     _dtoa$905:
  2218                           	opt callstack 0
  2219                           
  2220                           ; 2 bytes @ 0x32
  2221  000033                     	ds	1
  2222  000034                     ___fldiv@grs:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 4 bytes @ 0x33
  2226  000034                     	ds	1
  2227  000035                     dtoa@p:
  2228                           	opt callstack 0
  2229                           
  2230                           ; 2 bytes @ 0x34
  2231  000035                     	ds	2
  2232  000037                     dtoa@w:
  2233                           	opt callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x36
  2236  000037                     	ds	1
  2237  000038                     ___fldiv@bexp:
  2238                           	opt callstack 0
  2239                           
  2240                           ; 1 bytes @ 0x37
  2241  000038                     	ds	1
  2242  000039                     ___fldiv@aexp:
  2243                           	opt callstack 0
  2244  000039                     dtoa@s:
  2245                           	opt callstack 0
  2246                           
  2247                           ; 2 bytes @ 0x38
  2248  000039                     	ds	1
  2249  00003A                     ?_floorf:
  2250                           	opt callstack 0
  2251  00003A                     ?___flneg:
  2252                           	opt callstack 0
  2253  00003A                     ___flneg@f1:
  2254                           	opt callstack 0
  2255  00003A                     floorf@x:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 4 bytes @ 0x39
  2259  00003A                     	ds	1
  2260  00003B                     dtoa@n:
  2261                           	opt callstack 0
  2262                           
  2263                           ; 8 bytes @ 0x3A
  2264  00003B                     	ds	3
  2265  00003E                     ??_floorf:
  2266  00003E                     ?___flmul:
  2267                           	opt callstack 0
  2268  00003E                     ___flmul@b:
  2269                           	opt callstack 0
  2270                           
  2271                           ; 4 bytes @ 0x3D
  2272  00003E                     	ds	4
  2273  000042                     ___flmul@a:
  2274                           	opt callstack 0
  2275                           
  2276                           ; 4 bytes @ 0x41
  2277  000042                     	ds	1
  2278  000043                     dtoa@i:
  2279                           	opt callstack 0
  2280                           
  2281                           ; 2 bytes @ 0x42
  2282  000043                     	ds	1
  2283  000044                     floorf@m:
  2284                           	opt callstack 0
  2285                           
  2286                           ; 4 bytes @ 0x43
  2287  000044                     	ds	2
  2288  000046                     ??___flmul:
  2289                           
  2290                           ; 1 bytes @ 0x45
  2291  000046                     	ds	2
  2292  000048                     floorf@e:
  2293                           	opt callstack 0
  2294                           
  2295                           ; 2 bytes @ 0x47
  2296  000048                     	ds	2
  2297  00004A                     ??_logf:
  2298  00004A                     ??_scalbnf:
  2299  00004A                     ??___flge:
  2300  00004A                     ??___fltol:
  2301  00004A                     floorf@u:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 4 bytes @ 0x49
  2305  00004A                     	ds	4
  2306  00004E                     hayCruceRapidoPID@contCaminos:
  2307                           	opt callstack 0
  2308  00004E                     ___fltol@sign1:
  2309                           	opt callstack 0
  2310  00004E                     hayCruce@caminosRecorrer:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 2 bytes @ 0x4D
  2314  00004E                     	ds	1
  2315  00004F                     ___fltol@exp1:
  2316                           	opt callstack 0
  2317                           
  2318                           ; 1 bytes @ 0x4E
  2319  00004F                     	ds	1
  2320  000050                     ??_expf:
  2321  000050                     ??_pwmDuty:
  2322  000050                     ??_efgtoa:
  2323  000050                     hayCruce@investigandoCruce:
  2324                           	opt callstack 0
  2325                           
  2326                           ; 1 bytes @ 0x4F
  2327  000050                     	ds	1
  2328  000051                     hayCruce@contCaminos:
  2329                           	opt callstack 0
  2330                           
  2331                           ; 1 bytes @ 0x50
  2332  000051                     	ds	3
  2333  000054                     
  2334                           ; 1 bytes @ 0x53
  2335  000054                     	ds	1
  2336  000055                     
  2337                           ; 1 bytes @ 0x54
  2338 ;;
  2339 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2340 ;;
  2341 ;; *************** function _main *****************
  2342 ;; Defined at:
  2343 ;;		line 1354 in file "main.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  numMovimient    2    0        int 
  2348 ;;  iniciado        1   24[BANK1 ] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0
  2359 ;;      Locals:         0       0       3       0       0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2361 ;;      Totals:         0       0       3       0       0       0       0       0       0
  2362 ;;Total ram usage:        3 bytes
  2363 ;; Hardware stack levels required when called:   12
  2364 ;; This function calls:
  2365 ;;		_UART_init
  2366 ;;		_comportamientoBasico
  2367 ;;		_configPwm
  2368 ;;		_configurarAdc
  2369 ;;		_forzarParoAuto
  2370 ;;		_inicializarComportamientoBasico
  2371 ;;		_visualizarPasosRealizados
  2372 ;; This function is called by:
  2373 ;;		Startup code after reset
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text0
  2378  005D56                     __ptext0:
  2379                           	opt callstack 0
  2380  005D56                     _main:
  2381                           	opt callstack 19
  2382  005D56                     
  2383                           ;main.c: 1356:     T_BOOL iniciado = 0;
  2384  005D56  0E00               	movlw	0
  2385  005D58  0101               	movlb	1	; () banked
  2386  005D5A  6FF2               	movwf	main@iniciado& (0+255),b
  2387  005D5C                     
  2388                           ; BSR set to: 1
  2389                           ;main.c: 1360:     INTCONbits.GIE = 1;
  2390  005D5C  8EF2               	bsf	242,7,c	;volatile
  2391  005D5E                     
  2392                           ; BSR set to: 1
  2393                           ;main.c: 1361:     INTCONbits.INT0IE = 1;
  2394  005D5E  88F2               	bsf	242,4,c	;volatile
  2395  005D60                     
  2396                           ; BSR set to: 1
  2397                           ;main.c: 1362:     INTCON2bits.INTEDG0 = 1;
  2398  005D60  8CF1               	bsf	241,6,c	;volatile
  2399  005D62                     
  2400                           ; BSR set to: 1
  2401                           ;main.c: 1364:     TRISB4 = 0;
  2402  005D62  9893               	bcf	3987,4,c	;volatile
  2403  005D64                     
  2404                           ; BSR set to: 1
  2405                           ;main.c: 1365:     TRISB5 = 0;
  2406  005D64  9A93               	bcf	3987,5,c	;volatile
  2407  005D66                     
  2408                           ; BSR set to: 1
  2409                           ;main.c: 1366:     TRISB6 = 0;
  2410  005D66  9C93               	bcf	3987,6,c	;volatile
  2411  005D68                     
  2412                           ; BSR set to: 1
  2413                           ;main.c: 1367:     TRISB7 = 0;
  2414  005D68  9E93               	bcf	3987,7,c	;volatile
  2415  005D6A                     
  2416                           ; BSR set to: 1
  2417                           ;main.c: 1369:     TRISDbits.RD2 = 0;
  2418  005D6A  9495               	bcf	149,2,c	;volatile
  2419  005D6C                     
  2420                           ; BSR set to: 1
  2421                           ;main.c: 1370:     TRISB0 = 1;
  2422  005D6C  8093               	bsf	3987,0,c	;volatile
  2423  005D6E                     
  2424                           ; BSR set to: 1
  2425                           ;main.c: 1372:     LATB4 = 0;
  2426  005D6E  988A               	bcf	3978,4,c	;volatile
  2427  005D70                     
  2428                           ; BSR set to: 1
  2429                           ;main.c: 1373:     LATB5 = 0;
  2430  005D70  9A8A               	bcf	3978,5,c	;volatile
  2431  005D72                     
  2432                           ; BSR set to: 1
  2433                           ;main.c: 1374:     LATB6 = 0;
  2434  005D72  9C8A               	bcf	3978,6,c	;volatile
  2435  005D74                     
  2436                           ; BSR set to: 1
  2437                           ;main.c: 1375:     LATB7 = 0;
  2438  005D74  9E8A               	bcf	3978,7,c	;volatile
  2439  005D76                     
  2440                           ; BSR set to: 1
  2441                           ;main.c: 1376:     LATD2 = 0;
  2442  005D76  948C               	bcf	3980,2,c	;volatile
  2443  005D78                     
  2444                           ; BSR set to: 1
  2445                           ;main.c: 1380:     configPwm(1);
  2446  005D78  0E01               	movlw	1
  2447  005D7A  ECED  F031         	call	_configPwm
  2448  005D7E                     
  2449                           ;main.c: 1381:     configPwm(2);
  2450  005D7E  0E02               	movlw	2
  2451  005D80  ECED  F031         	call	_configPwm
  2452  005D84                     
  2453                           ;main.c: 1382:     configurarAdc();
  2454  005D84  ECFF  F033         	call	_configurarAdc	;wreg free
  2455  005D88                     
  2456                           ;main.c: 1384:     UART_init(9600);
  2457  005D88  0E80               	movlw	128
  2458  005D8A  6E20               	movwf	UART_init@BAUD^0,c
  2459  005D8C  0E25               	movlw	37
  2460  005D8E  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2461  005D90  0E00               	movlw	0
  2462  005D92  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2463  005D94  0E00               	movlw	0
  2464  005D96  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2465  005D98  EC6D  F02F         	call	_UART_init	;wreg free
  2466  005D9C                     l10805:
  2467                           
  2468                           ;main.c: 1389:         if (!pausa) {
  2469  005D9C  0101               	movlb	1	; () banked
  2470  005D9E  51F4               	movf	_pausa& (0+255),w,b
  2471  005DA0  A4D8               	btfss	status,2,c
  2472  005DA2  EFD5  F02E         	goto	u11401
  2473  005DA6  EFD7  F02E         	goto	u11400
  2474  005DAA                     u11401:
  2475  005DAA  EFE9  F02E         	goto	l10821
  2476  005DAE                     u11400:
  2477  005DAE                     
  2478                           ; BSR set to: 1
  2479                           ;main.c: 1391:             if (!iniciado) {
  2480  005DAE  51F2               	movf	main@iniciado& (0+255),w,b
  2481  005DB0  A4D8               	btfss	status,2,c
  2482  005DB2  EFDD  F02E         	goto	u11411
  2483  005DB6  EFDF  F02E         	goto	u11410
  2484  005DBA                     u11411:
  2485  005DBA  EFE3  F02E         	goto	l10817
  2486  005DBE                     u11410:
  2487  005DBE                     
  2488                           ; BSR set to: 1
  2489                           ;main.c: 1392:                 iniciado = 1;
  2490  005DBE  0E01               	movlw	1
  2491  005DC0  6FF2               	movwf	main@iniciado& (0+255),b
  2492  005DC2                     
  2493                           ; BSR set to: 1
  2494                           ;main.c: 1393:                 inicializarComportamientoBasico();
  2495  005DC2  EC45  F02A         	call	_inicializarComportamientoBasico	;wreg free
  2496  005DC6                     l10817:
  2497                           
  2498                           ;main.c: 1404:             comportamientoBasico();
  2499  005DC6  EC9E  F017         	call	_comportamientoBasico	;wreg free
  2500  005DCA                     
  2501                           ;main.c: 1405:             forzarParoAuto();
  2502  005DCA  ECE7  F033         	call	_forzarParoAuto	;wreg free
  2503                           
  2504                           ;main.c: 1407:         } else {
  2505  005DCE  EFCE  F02E         	goto	l10805
  2506  005DD2                     l10821:
  2507                           
  2508                           ; BSR set to: 1
  2509                           ;main.c: 1409:             iniciado = 0;
  2510  005DD2  0E00               	movlw	0
  2511  005DD4  6FF2               	movwf	main@iniciado& (0+255),b
  2512  005DD6  EFCE  F02E         	goto	l10805
  2513  005DDA  EF07  F000         	goto	start
  2514  005DDE                     __end_of_main:
  2515                           	opt callstack 0
  2516                           
  2517 ;; *************** function _visualizarPasosRealizados *****************
  2518 ;; Defined at:
  2519 ;;		line 195 in file "main.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  numMovimient    2  142[BANK0 ] unsigned int 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2533 ;;      Params:         0       2       0       0       0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2535 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2536 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2537 ;;Total ram usage:        4 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:   10
  2540 ;; This function calls:
  2541 ;;		_UART_printf
  2542 ;;		_sprintf
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text1
  2549  005AC2                     __ptext1:
  2550                           	opt callstack 0
  2551  005AC2                     _visualizarPasosRealizados:
  2552                           	opt callstack 20
  2553  005AC2                     
  2554                           ;main.c: 197:     switch (mouse.curr_state) {
  2555  005AC2  EF83  F02D         	goto	l10485
  2556  005AC6                     l10475:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;main.c: 199:             UART_printf("Enfrente\n");
  2560  005AC6  0ED2               	movlw	low STR_7
  2561  005AC8  6E07               	movwf	UART_printf@cadena^0,c
  2562  005ACA  0E7F               	movlw	high STR_7
  2563  005ACC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2564  005ACE  EC3F  F030         	call	_UART_printf	;wreg free
  2565                           
  2566                           ;main.c: 200:             break;
  2567  005AD2  EFA2  F02D         	goto	l10487
  2568  005AD6                     l10477:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;main.c: 203:             UART_printf("Izquierda\n");
  2572  005AD6  0EC7               	movlw	low STR_8
  2573  005AD8  6E07               	movwf	UART_printf@cadena^0,c
  2574  005ADA  0E7F               	movlw	high STR_8
  2575  005ADC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2576  005ADE  EC3F  F030         	call	_UART_printf	;wreg free
  2577                           
  2578                           ;main.c: 204:             break;
  2579  005AE2  EFA2  F02D         	goto	l10487
  2580  005AE6                     l10479:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;main.c: 207:             UART_printf("Derecha\n");
  2584  005AE6  0EDC               	movlw	low STR_9
  2585  005AE8  6E07               	movwf	UART_printf@cadena^0,c
  2586  005AEA  0E7F               	movlw	high STR_9
  2587  005AEC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2588  005AEE  EC3F  F030         	call	_UART_printf	;wreg free
  2589                           
  2590                           ;main.c: 208:             break;
  2591  005AF2  EFA2  F02D         	goto	l10487
  2592  005AF6                     l10481:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;main.c: 211:             UART_printf("Alto\n");
  2596  005AF6  0EE5               	movlw	low STR_10
  2597  005AF8  6E07               	movwf	UART_printf@cadena^0,c
  2598  005AFA  0E7F               	movlw	high STR_10
  2599  005AFC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2600  005AFE  EC3F  F030         	call	_UART_printf	;wreg free
  2601                           
  2602                           ;main.c: 212:             break;
  2603  005B02  EFA2  F02D         	goto	l10487
  2604  005B06                     l10485:
  2605  005B06  0101               	movlb	1	; () banked
  2606  005B08  5134               	movf	_mouse& (0+255),w,b
  2607  005B0A  0100               	movlb	0	; () banked
  2608  005B0C  6FF0               	movwf	??_visualizarPasosRealizados& (0+255),b
  2609  005B0E  6BF1               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2610                           
  2611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2612                           ; Switch size 1, requested type "simple"
  2613                           ; Number of cases is 1, Range of values is 0 to 0
  2614                           ; switch strategies available:
  2615                           ; Name         Instructions Cycles
  2616                           ; simple_byte            4     3 (average)
  2617                           ;	Chosen strategy is simple_byte
  2618  005B10  51F1               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2619  005B12  0A00               	xorlw	0	; case 0
  2620  005B14  B4D8               	btfsc	status,2,c
  2621  005B16  EF8F  F02D         	goto	l11143
  2622  005B1A  EFA2  F02D         	goto	l10487
  2623  005B1E                     l11143:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ; Switch size 1, requested type "simple"
  2627                           ; Number of cases is 4, Range of values is 1 to 4
  2628                           ; switch strategies available:
  2629                           ; Name         Instructions Cycles
  2630                           ; simple_byte           13     7 (average)
  2631                           ;	Chosen strategy is simple_byte
  2632  005B1E  51F0               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2633  005B20  0A01               	xorlw	1	; case 1
  2634  005B22  B4D8               	btfsc	status,2,c
  2635  005B24  EF63  F02D         	goto	l10475
  2636  005B28  0A03               	xorlw	3	; case 2
  2637  005B2A  B4D8               	btfsc	status,2,c
  2638  005B2C  EF6B  F02D         	goto	l10477
  2639  005B30  0A01               	xorlw	1	; case 3
  2640  005B32  B4D8               	btfsc	status,2,c
  2641  005B34  EF73  F02D         	goto	l10479
  2642  005B38  0A07               	xorlw	7	; case 4
  2643  005B3A  B4D8               	btfsc	status,2,c
  2644  005B3C  EF7B  F02D         	goto	l10481
  2645  005B40  EFA2  F02D         	goto	l10487
  2646  005B44                     l10487:
  2647                           
  2648                           ;main.c: 215:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2649  005B44  0E9A               	movlw	low _buffer
  2650  005B46  0100               	movlb	0	; () banked
  2651  005B48  6FDA               	movwf	sprintf@s& (0+255),b
  2652  005B4A  0E01               	movlw	high _buffer
  2653  005B4C  6FDB               	movwf	(sprintf@s+1)& (0+255),b
  2654  005B4E  0ECA               	movlw	low STR_11
  2655  005B50  6FDC               	movwf	sprintf@fmt& (0+255),b
  2656  005B52  0E7E               	movlw	high STR_11
  2657  005B54  6FDD               	movwf	(sprintf@fmt+1)& (0+255),b
  2658  005B56  C0EE  F0DE         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2659  005B5A  C0EF  F0DF         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2660  005B5E  EC73  F031         	call	_sprintf	;wreg free
  2661  005B62                     
  2662                           ;main.c: 216:     UART_printf(buffer);
  2663  005B62  0E9A               	movlw	low _buffer
  2664  005B64  6E07               	movwf	UART_printf@cadena^0,c
  2665  005B66  0E01               	movlw	high _buffer
  2666  005B68  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2667  005B6A  EC3F  F030         	call	_UART_printf	;wreg free
  2668  005B6E  0012               	return		;funcret
  2669  005B70                     __end_of_visualizarPasosRealizados:
  2670                           	opt callstack 0
  2671                           
  2672 ;; *************** function _inicializarComportamientoBasico *****************
  2673 ;; Defined at:
  2674 ;;		line 234 in file "main.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    7
  2695 ;; This function calls:
  2696 ;;		___flsub
  2697 ;;		_dameDistancia
  2698 ;;		_velocidadEstandar
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text2
  2705  00548A                     __ptext2:
  2706                           	opt callstack 0
  2707  00548A                     _inicializarComportamientoBasico:
  2708                           	opt callstack 23
  2709  00548A                     
  2710                           ;main.c: 236:     mouse.curr_state = ENFRENTE;
  2711  00548A  0E01               	movlw	1
  2712  00548C  0101               	movlb	1	; () banked
  2713  00548E  6F34               	movwf	_mouse& (0+255),b
  2714  005490                     
  2715                           ; BSR set to: 1
  2716                           ;main.c: 238:     oldSensorDerecha = dameDistancia(DERECHA);
  2717  005490  0E03               	movlw	3
  2718  005492  EC0D  F02E         	call	_dameDistancia
  2719  005496  C0F9  F120         	movff	?_dameDistancia,_oldSensorDerecha
  2720  00549A  C0FA  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  2721  00549E  C0FB  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  2722  0054A2  C0FC  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  2723  0054A6                     
  2724                           ;main.c: 239:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  2725  0054A6  0E02               	movlw	2
  2726  0054A8  EC0D  F02E         	call	_dameDistancia
  2727  0054AC  C0F9  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  2728  0054B0  C0FA  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  2729  0054B4  C0FB  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  2730  0054B8  C0FC  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  2731  0054BC                     
  2732                           ;main.c: 240:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  2733  0054BC  0E01               	movlw	1
  2734  0054BE  EC0D  F02E         	call	_dameDistancia
  2735  0054C2  C0F9  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  2736  0054C6  C0FA  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  2737  0054CA  C0FB  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  2738  0054CE  C0FC  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  2739  0054D2                     
  2740                           ;main.c: 242:     oldSensorDerecha -= 1.7;
  2741  0054D2  C120  F019         	movff	_oldSensorDerecha,___flsub@b
  2742  0054D6  C121  F01A         	movff	_oldSensorDerecha+1,___flsub@b+1
  2743  0054DA  C122  F01B         	movff	_oldSensorDerecha+2,___flsub@b+2
  2744  0054DE  C123  F01C         	movff	_oldSensorDerecha+3,___flsub@b+3
  2745  0054E2  0E9A               	movlw	154
  2746  0054E4  6E1D               	movwf	___flsub@a^0,c
  2747  0054E6  0E99               	movlw	153
  2748  0054E8  6E1E               	movwf	(___flsub@a+1)^0,c
  2749  0054EA  0ED9               	movlw	217
  2750  0054EC  6E1F               	movwf	(___flsub@a+2)^0,c
  2751  0054EE  0E3F               	movlw	63
  2752  0054F0  6E20               	movwf	(___flsub@a+3)^0,c
  2753  0054F2  EC3D  F032         	call	___flsub	;wreg free
  2754  0054F6  C019  F120         	movff	?___flsub,_oldSensorDerecha
  2755  0054FA  C01A  F121         	movff	?___flsub+1,_oldSensorDerecha+1
  2756  0054FE  C01B  F122         	movff	?___flsub+2,_oldSensorDerecha+2
  2757  005502  C01C  F123         	movff	?___flsub+3,_oldSensorDerecha+3
  2758  005506                     
  2759                           ;main.c: 243:     oldSensorIzquierda -= 1.7;
  2760  005506  C11C  F019         	movff	_oldSensorIzquierda,___flsub@b
  2761  00550A  C11D  F01A         	movff	_oldSensorIzquierda+1,___flsub@b+1
  2762  00550E  C11E  F01B         	movff	_oldSensorIzquierda+2,___flsub@b+2
  2763  005512  C11F  F01C         	movff	_oldSensorIzquierda+3,___flsub@b+3
  2764  005516  0E9A               	movlw	154
  2765  005518  6E1D               	movwf	___flsub@a^0,c
  2766  00551A  0E99               	movlw	153
  2767  00551C  6E1E               	movwf	(___flsub@a+1)^0,c
  2768  00551E  0ED9               	movlw	217
  2769  005520  6E1F               	movwf	(___flsub@a+2)^0,c
  2770  005522  0E3F               	movlw	63
  2771  005524  6E20               	movwf	(___flsub@a+3)^0,c
  2772  005526  EC3D  F032         	call	___flsub	;wreg free
  2773  00552A  C019  F11C         	movff	?___flsub,_oldSensorIzquierda
  2774  00552E  C01A  F11D         	movff	?___flsub+1,_oldSensorIzquierda+1
  2775  005532  C01B  F11E         	movff	?___flsub+2,_oldSensorIzquierda+2
  2776  005536  C01C  F11F         	movff	?___flsub+3,_oldSensorIzquierda+3
  2777  00553A                     
  2778                           ;main.c: 244:     oldSensorEnfrente -= 1.7;
  2779  00553A  C118  F019         	movff	_oldSensorEnfrente,___flsub@b
  2780  00553E  C119  F01A         	movff	_oldSensorEnfrente+1,___flsub@b+1
  2781  005542  C11A  F01B         	movff	_oldSensorEnfrente+2,___flsub@b+2
  2782  005546  C11B  F01C         	movff	_oldSensorEnfrente+3,___flsub@b+3
  2783  00554A  0E9A               	movlw	154
  2784  00554C  6E1D               	movwf	___flsub@a^0,c
  2785  00554E  0E99               	movlw	153
  2786  005550  6E1E               	movwf	(___flsub@a+1)^0,c
  2787  005552  0ED9               	movlw	217
  2788  005554  6E1F               	movwf	(___flsub@a+2)^0,c
  2789  005556  0E3F               	movlw	63
  2790  005558  6E20               	movwf	(___flsub@a+3)^0,c
  2791  00555A  EC3D  F032         	call	___flsub	;wreg free
  2792  00555E  C019  F118         	movff	?___flsub,_oldSensorEnfrente
  2793  005562  C01A  F119         	movff	?___flsub+1,_oldSensorEnfrente+1
  2794  005566  C01B  F11A         	movff	?___flsub+2,_oldSensorEnfrente+2
  2795  00556A  C01C  F11B         	movff	?___flsub+3,_oldSensorEnfrente+3
  2796  00556E                     
  2797                           ;main.c: 246:     velocidadEstandar();
  2798  00556E  EC6C  F033         	call	_velocidadEstandar	;wreg free
  2799  005572  0012               	return		;funcret
  2800  005574                     __end_of_inicializarComportamientoBasico:
  2801                           	opt callstack 0
  2802                           
  2803 ;; *************** function _configurarAdc *****************
  2804 ;; Defined at:
  2805 ;;		line 7 in file "./adc.h"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2819 ;;      Params:         0       0       0       0       0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    2
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text3
  2834  0067FE                     __ptext3:
  2835                           	opt callstack 0
  2836  0067FE                     _configurarAdc:
  2837                           	opt callstack 28
  2838  0067FE                     
  2839                           ;./adc.h: 8:     ADCON1 = 0b00001011;
  2840  0067FE  0E0B               	movlw	11
  2841  006800  6EC1               	movwf	193,c	;volatile
  2842                           
  2843                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  2844  006802  0EA5               	movlw	165
  2845  006804  6EC0               	movwf	192,c	;volatile
  2846  006806  0012               	return		;funcret
  2847  006808                     __end_of_configurarAdc:
  2848                           	opt callstack 0
  2849                           
  2850 ;; *************** function _configPwm *****************
  2851 ;; Defined at:
  2852 ;;		line 47 in file "./pwm.h"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  channel         1    wreg     unsigned char 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  channel         1    7[COMRAM] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2866 ;;      Params:         0       0       0       0       0       0       0       0       0
  2867 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2868 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2869 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2870 ;;Total ram usage:        3 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    2
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text4
  2881  0063DA                     __ptext4:
  2882                           	opt callstack 0
  2883  0063DA                     _configPwm:
  2884                           	opt callstack 28
  2885                           
  2886                           ;incstack = 0
  2887                           ;configPwm@channel stored from wreg
  2888  0063DA  6E08               	movwf	configPwm@channel^0,c
  2889  0063DC                     
  2890                           ;./pwm.h: 56:         T2CKPS0 = 1;
  2891  0063DC  80CA               	bsf	4042,0,c	;volatile
  2892                           
  2893                           ;./pwm.h: 57:         T2CKPS1 = 1;
  2894  0063DE  82CA               	bsf	4042,1,c	;volatile
  2895  0063E0                     
  2896                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  2897  0063E0  0E7C               	movlw	124
  2898  0063E2  6ECB               	movwf	203,c	;volatile
  2899                           
  2900                           ;./pwm.h: 63:     switch (channel) {
  2901  0063E4  EFFE  F031         	goto	l7733
  2902  0063E8                     l139:
  2903                           
  2904                           ;./pwm.h: 66:             TRISC2 = 0;
  2905  0063E8  9494               	bcf	3988,2,c	;volatile
  2906                           
  2907                           ;./pwm.h: 67:             CCP1M3 = 1;
  2908  0063EA  86BD               	bsf	4029,3,c	;volatile
  2909                           
  2910                           ;./pwm.h: 68:             CCP1M2 = 1;
  2911  0063EC  84BD               	bsf	4029,2,c	;volatile
  2912                           
  2913                           ;./pwm.h: 71:             break;
  2914  0063EE  EF13  F032         	goto	l140
  2915  0063F2                     l141:
  2916                           
  2917                           ;./pwm.h: 74:             TRISC1 = 0;
  2918  0063F2  9294               	bcf	3988,1,c	;volatile
  2919                           
  2920                           ;./pwm.h: 75:             CCP2M3 = 1;
  2921  0063F4  86BA               	bsf	4026,3,c	;volatile
  2922                           
  2923                           ;./pwm.h: 76:             CCP2M2 = 1;
  2924  0063F6  84BA               	bsf	4026,2,c	;volatile
  2925                           
  2926                           ;./pwm.h: 77:             break;
  2927  0063F8  EF13  F032         	goto	l140
  2928  0063FC                     l7733:
  2929  0063FC  5008               	movf	configPwm@channel^0,w,c
  2930  0063FE  6E06               	movwf	??_configPwm^0,c
  2931  006400  6A07               	clrf	(??_configPwm+1)^0,c
  2932                           
  2933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2934                           ; Switch size 1, requested type "simple"
  2935                           ; Number of cases is 1, Range of values is 0 to 0
  2936                           ; switch strategies available:
  2937                           ; Name         Instructions Cycles
  2938                           ; simple_byte            4     3 (average)
  2939                           ;	Chosen strategy is simple_byte
  2940  006402  5007               	movf	(??_configPwm+1)^0,w,c
  2941  006404  0A00               	xorlw	0	; case 0
  2942  006406  B4D8               	btfsc	status,2,c
  2943  006408  EF08  F032         	goto	l11145
  2944  00640C  EF13  F032         	goto	l140
  2945  006410                     l11145:
  2946                           
  2947                           ; Switch size 1, requested type "simple"
  2948                           ; Number of cases is 2, Range of values is 1 to 2
  2949                           ; switch strategies available:
  2950                           ; Name         Instructions Cycles
  2951                           ; simple_byte            7     4 (average)
  2952                           ;	Chosen strategy is simple_byte
  2953  006410  5006               	movf	??_configPwm^0,w,c
  2954  006412  0A01               	xorlw	1	; case 1
  2955  006414  B4D8               	btfsc	status,2,c
  2956  006416  EFF4  F031         	goto	l139
  2957  00641A  0A03               	xorlw	3	; case 2
  2958  00641C  B4D8               	btfsc	status,2,c
  2959  00641E  EFF9  F031         	goto	l141
  2960  006422  EF13  F032         	goto	l140
  2961  006426                     l140:
  2962                           
  2963                           ;./pwm.h: 81:     TMR2ON = 1;
  2964  006426  84CA               	bsf	4042,2,c	;volatile
  2965  006428  0012               	return		;funcret
  2966  00642A                     __end_of_configPwm:
  2967                           	opt callstack 0
  2968                           
  2969 ;; *************** function _comportamientoBasico *****************
  2970 ;; Defined at:
  2971 ;;		line 250 in file "main.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  direccionEle    1  159[BANK0 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0
  2986 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2987 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2988 ;;      Totals:         0       1       2       0       0       0       0       0       0
  2989 ;;Total ram usage:        3 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:   11
  2992 ;; This function calls:
  2993 ;;		_PID
  2994 ;;		_UART_printf
  2995 ;;		_decidirDireccion
  2996 ;;		_forzarParoAuto
  2997 ;;		_leerSensores
  2998 ;;		_limpiarMovimientos
  2999 ;;		_moverCarrito
  3000 ;;		_probarMapeoDireccionCruces
  3001 ;;		_regresarAlCruce
  3002 ;;		_velocidadBaja
  3003 ;;		_velocidadEstandar
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text5
  3010  002F3C                     __ptext5:
  3011                           	opt callstack 0
  3012  002F3C                     _comportamientoBasico:
  3013                           	opt callstack 19
  3014  002F3C                     
  3015                           ;main.c: 252:     static T_UBYTE espejearCarroY = 0;;main.c: 253:     static T_UBYTE car
      +                          roEspejeado = 0;;main.c: 254:     static T_UBYTE movimientosRealizados[200];;main.c: 255
      +                          :     static T_UBYTE caminoFinal[20];;main.c: 256:     static T_UINT numMovimientos = 0;
      +                          ;main.c: 257:     static T_UBYTE mapear = 0;;main.c: 258:     static T_UBYTE cruceDetect
      +                          ado = 0;;main.c: 259:     static T_UBYTE caminosRecorrer[3];;main.c: 260:     static T_U
      +                          BYTE investigandoCruce = 0;;main.c: 261:     static T_UBYTE posicionInvCruce = 0;
  3016  002F3C  0E00               	movlw	0
  3017  002F3E  0100               	movlb	0	; () banked
  3018  002F40  6FFF               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  3019  002F42                     
  3020                           ; BSR set to: 0
  3021                           ;main.c: 269:     moverCarrito(espejearCarroY, &carroEspejeado, &avanceRectoLargo);
  3022  002F42  0ED9               	movlw	low comportamientoBasico@carroEspejeado
  3023  002F44  6F79               	movwf	moverCarrito@carroEspejeado& (0+255),b
  3024  002F46  0E01               	movlw	high comportamientoBasico@carroEspejeado
  3025  002F48  6F7A               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  3026  002F4A  0ED1               	movlw	low comportamientoBasico@avanceRectoLargo
  3027  002F4C  6F7B               	movwf	moverCarrito@avanceRectoLargo& (0+255),b
  3028  002F4E  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  3029  002F50  6F7C               	movwf	(moverCarrito@avanceRectoLargo+1)& (0+255),b
  3030  002F52  0101               	movlb	1	; () banked
  3031  002F54  513E               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3032  002F56  ECB9  F027         	call	_moverCarrito
  3033  002F5A                     
  3034                           ;main.c: 271:     if (!llegoDestino) {
  3035  002F5A  5059               	movf	_llegoDestino^0,w,c
  3036  002F5C  A4D8               	btfss	status,2,c
  3037  002F5E  EFB3  F017         	goto	u11111
  3038  002F62  EFB5  F017         	goto	u11110
  3039  002F66                     u11111:
  3040  002F66  EF64  F019         	goto	l10643
  3041  002F6A                     u11110:
  3042  002F6A                     
  3043                           ;main.c: 273:         if (!caminoEncontrado) {
  3044  002F6A  0101               	movlb	1	; () banked
  3045  002F6C  5147               	movf	_caminoEncontrado& (0+255),w,b
  3046  002F6E  A4D8               	btfss	status,2,c
  3047  002F70  EFBC  F017         	goto	u11121
  3048  002F74  EFBE  F017         	goto	u11120
  3049  002F78                     u11121:
  3050  002F78  EFE8  F017         	goto	l10533
  3051  002F7C                     u11120:
  3052  002F7C                     
  3053                           ; BSR set to: 1
  3054                           ;main.c: 277:             if (mapear)
  3055  002F7C  51D8               	movf	comportamientoBasico@mapear& (0+255),w,b
  3056  002F7E  B4D8               	btfsc	status,2,c
  3057  002F80  EFC4  F017         	goto	u11131
  3058  002F84  EFC6  F017         	goto	u11130
  3059  002F88                     u11131:
  3060  002F88  EFE8  F017         	goto	l10533
  3061  002F8C                     u11130:
  3062  002F8C                     
  3063                           ; BSR set to: 1
  3064                           ;main.c: 278:             {;main.c: 279:                 if (numMovimientos < 200)
  3065  002F8C  51D0               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  3066  002F8E  E107               	bnz	u11141
  3067  002F90  0EC8               	movlw	200
  3068  002F92  5DCF               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  3069  002F94  B0D8               	btfsc	status,0,c
  3070  002F96  EFCF  F017         	goto	u11141
  3071  002F9A  EFD1  F017         	goto	u11140
  3072  002F9E                     u11141:
  3073  002F9E  EFDD  F017         	goto	l10527
  3074  002FA2                     u11140:
  3075  002FA2                     
  3076                           ; BSR set to: 1
  3077                           ;main.c: 280:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  3078  002FA2  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3079  002FA4  25CF               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  3080  002FA6  6ED9               	movwf	fsr2l,c
  3081  002FA8  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3082  002FAA  21D0               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  3083  002FAC  6EDA               	movwf	fsr2h,c
  3084  002FAE  C134  FFDF         	movff	_mouse,indf2
  3085  002FB2                     
  3086                           ; BSR set to: 1
  3087  002FB2  4BCF               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  3088  002FB4  2BD0               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  3089  002FB6  EFE8  F017         	goto	l10533
  3090  002FBA                     l10527:
  3091                           
  3092                           ; BSR set to: 1
  3093                           ;main.c: 282:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  3094  002FBA  0E7B               	movlw	low STR_12
  3095  002FBC  6E07               	movwf	UART_printf@cadena^0,c
  3096  002FBE  0E7D               	movlw	high STR_12
  3097  002FC0  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3098  002FC2  EC3F  F030         	call	_UART_printf	;wreg free
  3099  002FC6                     
  3100                           ;main.c: 283:                     forzarParoAuto();
  3101  002FC6  ECE7  F033         	call	_forzarParoAuto	;wreg free
  3102  002FCA                     
  3103                           ;main.c: 284:                     pausa = 1;
  3104  002FCA  0E01               	movlw	1
  3105  002FCC  0101               	movlb	1	; () banked
  3106  002FCE  6FF4               	movwf	_pausa& (0+255),b
  3107  002FD0                     l10533:
  3108                           
  3109                           ; BSR set to: 1
  3110                           ;main.c: 312:         leerSensores();
  3111  002FD0  EC3C  F01E         	call	_leerSensores	;wreg free
  3112  002FD4                     
  3113                           ;main.c: 314:         direccionElegida = decidirDireccion(caminosRecorrer, &investigando
      +                          Cruce,
  3114  002FD4  0ECC               	movlw	low comportamientoBasico@caminosRecorrer
  3115  002FD6  0101               	movlb	1	; () banked
  3116  002FD8  6FDA               	movwf	decidirDireccion@caminosRecorrer& (0+255),b
  3117  002FDA  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  3118  002FDC  6FDB               	movwf	(decidirDireccion@caminosRecorrer+1)& (0+255),b
  3119  002FDE  0ED6               	movlw	low comportamientoBasico@investigandoCruce
  3120  002FE0  6FDC               	movwf	decidirDireccion@investigandoCruce& (0+255),b
  3121  002FE2  0E01               	movlw	high comportamientoBasico@investigandoCruce
  3122  002FE4  6FDD               	movwf	(decidirDireccion@investigandoCruce+1)& (0+255),b
  3123  002FE6  0ED5               	movlw	low comportamientoBasico@posicionInvCruce
  3124  002FE8  6FDE               	movwf	decidirDireccion@posicionInvCruce& (0+255),b
  3125  002FEA  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  3126  002FEC  6FDF               	movwf	(decidirDireccion@posicionInvCruce+1)& (0+255),b
  3127  002FEE  0ED4               	movlw	low comportamientoBasico@contCaminosRecorridos
  3128  002FF0  6FE0               	movwf	decidirDireccion@contCaminosRecorridos& (0+255),b
  3129  002FF2  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  3130  002FF4  6FE1               	movwf	(decidirDireccion@contCaminosRecorridos+1)& (0+255),b
  3131  002FF6  0ED3               	movlw	low comportamientoBasico@caminoActual
  3132  002FF8  6FE2               	movwf	decidirDireccion@caminoActual& (0+255),b
  3133  002FFA  0E01               	movlw	high comportamientoBasico@caminoActual
  3134  002FFC  6FE3               	movwf	(decidirDireccion@caminoActual+1)& (0+255),b
  3135  002FFE  0ED2               	movlw	low comportamientoBasico@cambioOrientacionCarro
  3136  003000  6FE4               	movwf	decidirDireccion@cambioOrientacionCarro& (0+255),b
  3137  003002  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  3138  003004  6FE5               	movwf	(decidirDireccion@cambioOrientacionCarro+1)& (0+255),b
  3139  003006  0ED8               	movlw	low comportamientoBasico@mapear
  3140  003008  6FE6               	movwf	decidirDireccion@mapear& (0+255),b
  3141  00300A  0E01               	movlw	high comportamientoBasico@mapear
  3142  00300C  6FE7               	movwf	(decidirDireccion@mapear+1)& (0+255),b
  3143  00300E  0ED7               	movlw	low comportamientoBasico@cruceDetectado
  3144  003010  6FE8               	movwf	decidirDireccion@cruceDetectado& (0+255),b
  3145  003012  0E01               	movlw	high comportamientoBasico@cruceDetectado
  3146  003014  6FE9               	movwf	(decidirDireccion@cruceDetectado+1)& (0+255),b
  3147  003016  0ED1               	movlw	low comportamientoBasico@avanceRectoLargo
  3148  003018  6FEA               	movwf	decidirDireccion@avanceRectoLargo& (0+255),b
  3149  00301A  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  3150  00301C  6FEB               	movwf	(decidirDireccion@avanceRectoLargo+1)& (0+255),b
  3151  00301E  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3152  003020  6FEC               	movwf	decidirDireccion@caminoFinal& (0+255),b
  3153  003022  0E02               	movlw	high comportamientoBasico@caminoFinal
  3154  003024  6FED               	movwf	(decidirDireccion@caminoFinal+1)& (0+255),b
  3155  003026  ECEE  F005         	call	_decidirDireccion	;wreg free
  3156  00302A  0100               	movlb	0	; () banked
  3157  00302C  6FFF               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  3158  00302E  EF64  F019         	goto	l10643
  3159  003032                     l10537:
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;main.c: 328:                     mapear = 0;
  3163  003032  0E00               	movlw	0
  3164  003034  6FD8               	movwf	comportamientoBasico@mapear& (0+255),b
  3165                           
  3166                           ;main.c: 329:                     espejearCarroY = 1;
  3167  003036  0E01               	movlw	1
  3168  003038  6F3E               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3169                           
  3170                           ;main.c: 330:                     mouse.Next_state = IZQUIERDA;
  3171  00303A  0E02               	movlw	2
  3172  00303C  6F35               	movwf	(_mouse+1)& (0+255),b
  3173                           
  3174                           ;main.c: 331:                     break;
  3175  00303E  EF82  F019         	goto	l376
  3176  003042                     l10539:
  3177                           
  3178                           ; BSR set to: 1
  3179                           ;main.c: 335:                     if (!paredEnfrente && !investigandoCruce)
  3180  003042  5141               	movf	_paredEnfrente& (0+255),w,b
  3181  003044  A4D8               	btfss	status,2,c
  3182  003046  EF27  F018         	goto	u11151
  3183  00304A  EF29  F018         	goto	u11150
  3184  00304E                     u11151:
  3185  00304E  EF35  F018         	goto	l10545
  3186  003052                     u11150:
  3187  003052                     
  3188                           ; BSR set to: 1
  3189  003052  51D6               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  3190  003054  A4D8               	btfss	status,2,c
  3191  003056  EF2F  F018         	goto	u11161
  3192  00305A  EF31  F018         	goto	u11160
  3193  00305E                     u11161:
  3194  00305E  EF35  F018         	goto	l10545
  3195  003062                     u11160:
  3196  003062                     
  3197                           ; BSR set to: 1
  3198                           ;main.c: 336:                         velocidadBaja();
  3199  003062  EC7F  F033         	call	_velocidadBaja	;wreg free
  3200  003066  EF37  F018         	goto	l10547
  3201  00306A                     l10545:
  3202                           
  3203                           ; BSR set to: 1
  3204                           ;main.c: 338:                         PID();
  3205  00306A  EC52  F01B         	call	_PID	;wreg free
  3206  00306E                     l10547:
  3207                           
  3208                           ;main.c: 340:                     mouse.Next_state = ENFRENTE;
  3209  00306E  0E01               	movlw	1
  3210  003070  0101               	movlb	1	; () banked
  3211  003072  6F35               	movwf	(_mouse+1)& (0+255),b
  3212                           
  3213                           ;main.c: 341:                     break;
  3214  003074  EF82  F019         	goto	l376
  3215  003078                     l10549:
  3216                           
  3217                           ; BSR set to: 1
  3218                           ;main.c: 344:                     velocidadEstandar();
  3219  003078  EC6C  F033         	call	_velocidadEstandar	;wreg free
  3220  00307C                     l10551:
  3221                           
  3222                           ;main.c: 345:                     mouse.Next_state = IZQUIERDA;
  3223  00307C  0E02               	movlw	2
  3224  00307E  0101               	movlb	1	; () banked
  3225  003080  6F35               	movwf	(_mouse+1)& (0+255),b
  3226                           
  3227                           ;main.c: 346:                     break;
  3228  003082  EF82  F019         	goto	l376
  3229  003086                     l10553:
  3230                           
  3231                           ; BSR set to: 1
  3232                           ;main.c: 349:                     velocidadEstandar();
  3233  003086  EC6C  F033         	call	_velocidadEstandar	;wreg free
  3234  00308A                     
  3235                           ;main.c: 350:                     mouse.Next_state = DERECHA;
  3236  00308A  0E03               	movlw	3
  3237  00308C  0101               	movlb	1	; () banked
  3238  00308E  6F35               	movwf	(_mouse+1)& (0+255),b
  3239                           
  3240                           ;main.c: 351:                     break;
  3241  003090  EF82  F019         	goto	l376
  3242  003094                     l10557:
  3243                           
  3244                           ; BSR set to: 1
  3245                           ;main.c: 355:                     mouse.Next_state = ALTO;
  3246  003094  0E04               	movlw	4
  3247  003096  6F35               	movwf	(_mouse+1)& (0+255),b
  3248                           
  3249                           ;main.c: 356:                     break;
  3250  003098  EF82  F019         	goto	l376
  3251  00309C                     l10561:
  3252                           
  3253                           ; BSR set to: 1
  3254  00309C  0100               	movlb	0	; () banked
  3255  00309E  51FF               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  3256  0030A0  0101               	movlb	1	; () banked
  3257  0030A2  6FEE               	movwf	??_comportamientoBasico& (0+255),b
  3258  0030A4  6BEF               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3259                           
  3260                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3261                           ; Switch size 1, requested type "simple"
  3262                           ; Number of cases is 1, Range of values is 0 to 0
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte            4     3 (average)
  3266                           ;	Chosen strategy is simple_byte
  3267  0030A6  51EF               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3268  0030A8  0A00               	xorlw	0	; case 0
  3269  0030AA  B4D8               	btfsc	status,2,c
  3270  0030AC  EF5A  F018         	goto	l11147
  3271  0030B0  EF82  F019         	goto	l376
  3272  0030B4                     l11147:
  3273                           
  3274                           ; BSR set to: 1
  3275                           ; Switch size 1, requested type "simple"
  3276                           ; Number of cases is 5, Range of values is 0 to 4
  3277                           ; switch strategies available:
  3278                           ; Name         Instructions Cycles
  3279                           ; simple_byte           16     9 (average)
  3280                           ;	Chosen strategy is simple_byte
  3281  0030B4  51EE               	movf	??_comportamientoBasico& (0+255),w,b
  3282  0030B6  0A00               	xorlw	0	; case 0
  3283  0030B8  B4D8               	btfsc	status,2,c
  3284  0030BA  EF19  F018         	goto	l10537
  3285  0030BE  0A01               	xorlw	1	; case 1
  3286  0030C0  B4D8               	btfsc	status,2,c
  3287  0030C2  EF21  F018         	goto	l10539
  3288  0030C6  0A03               	xorlw	3	; case 2
  3289  0030C8  B4D8               	btfsc	status,2,c
  3290  0030CA  EF3C  F018         	goto	l10549
  3291  0030CE  0A01               	xorlw	1	; case 3
  3292  0030D0  B4D8               	btfsc	status,2,c
  3293  0030D2  EF43  F018         	goto	l10553
  3294  0030D6  0A07               	xorlw	7	; case 4
  3295  0030D8  B4D8               	btfsc	status,2,c
  3296  0030DA  EF4A  F018         	goto	l10557
  3297  0030DE  EF82  F019         	goto	l376
  3298  0030E2                     l10563:
  3299                           
  3300                           ; BSR set to: 1
  3301                           ;main.c: 364:             if (carroEspejeado && espejearCarroY && !llegoDestino) {
  3302  0030E2  51D9               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3303  0030E4  B4D8               	btfsc	status,2,c
  3304  0030E6  EF77  F018         	goto	u11171
  3305  0030EA  EF79  F018         	goto	u11170
  3306  0030EE                     u11171:
  3307  0030EE  EFAC  F018         	goto	l10583
  3308  0030F2                     u11170:
  3309  0030F2                     
  3310                           ; BSR set to: 1
  3311  0030F2  513E               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3312  0030F4  B4D8               	btfsc	status,2,c
  3313  0030F6  EF7F  F018         	goto	u11181
  3314  0030FA  EF81  F018         	goto	u11180
  3315  0030FE                     u11181:
  3316  0030FE  EFAC  F018         	goto	l10583
  3317  003102                     u11180:
  3318  003102                     
  3319                           ; BSR set to: 1
  3320  003102  5059               	movf	_llegoDestino^0,w,c
  3321  003104  A4D8               	btfss	status,2,c
  3322  003106  EF87  F018         	goto	u11191
  3323  00310A  EF89  F018         	goto	u11190
  3324  00310E                     u11191:
  3325  00310E  EFAC  F018         	goto	l10583
  3326  003112                     u11190:
  3327  003112                     
  3328                           ; BSR set to: 1
  3329                           ;main.c: 366:                 reiniciarPID = 1;
  3330  003112  0E01               	movlw	1
  3331  003114  6F49               	movwf	_reiniciarPID& (0+255),b
  3332                           
  3333                           ;main.c: 367:                 espejearCarroY = 0;
  3334  003116  0E00               	movlw	0
  3335  003118  6F3E               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3336                           
  3337                           ;main.c: 368:                 carroEspejeado = 0;
  3338  00311A  0E00               	movlw	0
  3339  00311C  6FD9               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3340  00311E                     
  3341                           ; BSR set to: 1
  3342                           ;main.c: 370:                 regresarAlCruce(movimientosRealizados, numMovimientos);
  3343  00311E  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3344  003120  0100               	movlb	0	; () banked
  3345  003122  6F86               	movwf	regresarAlCruce@movimientos& (0+255),b
  3346  003124  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3347  003126  6F87               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  3348  003128  C1CF  F088         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  3349  00312C  C1D0  F089         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  3350  003130  ECB0  F02C         	call	_regresarAlCruce	;wreg free
  3351  003134                     
  3352                           ;main.c: 371:                 limpiarMovimientos(movimientosRealizados, &numMovimientos)
      +                          ;
  3353  003134  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3354  003136  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  3355  003138  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3356  00313A  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  3357  00313C  0ECF               	movlw	low comportamientoBasico@numMovimientos
  3358  00313E  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  3359  003140  0E01               	movlw	high comportamientoBasico@numMovimientos
  3360  003142  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  3361  003144  EC15  F032         	call	_limpiarMovimientos	;wreg free
  3362  003148                     
  3363                           ;main.c: 373:                 cruceDetectado = 0;
  3364  003148  0E00               	movlw	0
  3365  00314A  0101               	movlb	1	; () banked
  3366  00314C  6FD7               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  3367  00314E                     
  3368                           ; BSR set to: 1
  3369                           ;main.c: 374:                 posicionInvCruce = 1;
  3370  00314E  0E01               	movlw	1
  3371  003150  6FD5               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  3372  003152                     
  3373                           ; BSR set to: 1
  3374                           ;main.c: 375:                 contCaminosRecorridos++;
  3375  003152  2BD4               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  3376  003154  EF4A  F018         	goto	l10557
  3377  003158                     l10583:
  3378                           
  3379                           ; BSR set to: 1
  3380  003158  513E               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3381  00315A  B4D8               	btfsc	status,2,c
  3382  00315C  EFB2  F018         	goto	u11201
  3383  003160  EFB4  F018         	goto	u11200
  3384  003164                     u11201:
  3385  003164  EF37  F018         	goto	l10547
  3386  003168                     u11200:
  3387  003168                     
  3388                           ; BSR set to: 1
  3389  003168  51D9               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3390  00316A  B4D8               	btfsc	status,2,c
  3391  00316C  EFBA  F018         	goto	u11211
  3392  003170  EFBC  F018         	goto	u11210
  3393  003174                     u11211:
  3394  003174  EF37  F018         	goto	l10547
  3395  003178                     u11210:
  3396  003178                     
  3397                           ; BSR set to: 1
  3398  003178  5059               	movf	_llegoDestino^0,w,c
  3399  00317A  B4D8               	btfsc	status,2,c
  3400  00317C  EFC2  F018         	goto	u11221
  3401  003180  EFC4  F018         	goto	u11220
  3402  003184                     u11221:
  3403  003184  EF37  F018         	goto	l10547
  3404  003188                     u11220:
  3405  003188                     
  3406                           ; BSR set to: 1
  3407                           ;main.c: 378:                 reiniciarPID = 1;
  3408  003188  0E01               	movlw	1
  3409  00318A  6F49               	movwf	_reiniciarPID& (0+255),b
  3410                           
  3411                           ;main.c: 379:                 espejearCarroY = 0;
  3412  00318C  0E00               	movlw	0
  3413  00318E  6F3E               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3414                           
  3415                           ;main.c: 380:                 mouse.Next_state = ALTO;
  3416  003190  0E04               	movlw	4
  3417  003192  6F35               	movwf	(_mouse+1)& (0+255),b
  3418                           
  3419                           ;main.c: 382:             } else {
  3420  003194  EF82  F019         	goto	l376
  3421  003198                     l10595:
  3422                           
  3423                           ; BSR set to: 1
  3424                           ;main.c: 394:             if (llegoDestino && carroEspejeado) {
  3425  003198  5059               	movf	_llegoDestino^0,w,c
  3426  00319A  B4D8               	btfsc	status,2,c
  3427  00319C  EFD2  F018         	goto	u11231
  3428  0031A0  EFD4  F018         	goto	u11230
  3429  0031A4                     u11231:
  3430  0031A4  EF02  F019         	goto	l10619
  3431  0031A8                     u11230:
  3432  0031A8                     
  3433                           ; BSR set to: 1
  3434  0031A8  51D9               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3435  0031AA  B4D8               	btfsc	status,2,c
  3436  0031AC  EFDA  F018         	goto	u11241
  3437  0031B0  EFDC  F018         	goto	u11240
  3438  0031B4                     u11241:
  3439  0031B4  EF02  F019         	goto	l10619
  3440  0031B8                     u11240:
  3441  0031B8                     
  3442                           ; BSR set to: 1
  3443                           ;main.c: 396:                 carroEspejeado = 0;
  3444  0031B8  0E00               	movlw	0
  3445  0031BA  6FD9               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3446                           
  3447                           ;main.c: 397:                 llegoDestino = 0;
  3448  0031BC  0E00               	movlw	0
  3449  0031BE  6E59               	movwf	_llegoDestino^0,c
  3450                           
  3451                           ;main.c: 398:                 caminoEncontrado = 1;
  3452  0031C0  0E01               	movlw	1
  3453  0031C2  6F47               	movwf	_caminoEncontrado& (0+255),b
  3454  0031C4                     
  3455                           ; BSR set to: 1
  3456                           ;main.c: 400:                 forzarParoAuto();
  3457  0031C4  ECE7  F033         	call	_forzarParoAuto	;wreg free
  3458  0031C8                     
  3459                           ;main.c: 401:                 pausa = 1;
  3460  0031C8  0E01               	movlw	1
  3461  0031CA  0101               	movlb	1	; () banked
  3462  0031CC  6FF4               	movwf	_pausa& (0+255),b
  3463  0031CE                     
  3464                           ; BSR set to: 1
  3465                           ;main.c: 403:                 if (ida) {
  3466  0031CE  51F3               	movf	_ida& (0+255),w,b
  3467  0031D0  B4D8               	btfsc	status,2,c
  3468  0031D2  EFED  F018         	goto	u11251
  3469  0031D6  EFEF  F018         	goto	u11250
  3470  0031DA                     u11251:
  3471  0031DA  EFF5  F018         	goto	l10611
  3472  0031DE                     u11250:
  3473  0031DE                     
  3474                           ; BSR set to: 1
  3475                           ;main.c: 404:                     crucesRecorridos = numMovimientosTotales;
  3476  0031DE  C148  F146         	movff	_numMovimientosTotales,_crucesRecorridos
  3477  0031E2                     
  3478                           ; BSR set to: 1
  3479                           ;main.c: 405:                     ida = 0;
  3480  0031E2  0E00               	movlw	0
  3481  0031E4  6FF3               	movwf	_ida& (0+255),b
  3482                           
  3483                           ;main.c: 406:                 } else {
  3484  0031E6  EF37  F018         	goto	l10547
  3485  0031EA                     l10611:
  3486                           
  3487                           ; BSR set to: 1
  3488                           ;main.c: 407:                     crucesRecorridos = 1;
  3489  0031EA  0E01               	movlw	1
  3490  0031EC  6F46               	movwf	_crucesRecorridos& (0+255),b
  3491  0031EE                     
  3492                           ; BSR set to: 1
  3493                           ;main.c: 408:                     UART_printf("\rSe regreso al punto de partida\r\n");
  3494  0031EE  0E65               	movlw	low STR_13
  3495  0031F0  6E07               	movwf	UART_printf@cadena^0,c
  3496  0031F2  0E7E               	movlw	high STR_13
  3497  0031F4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3498  0031F6  EC3F  F030         	call	_UART_printf	;wreg free
  3499  0031FA                     
  3500                           ;main.c: 409:                     ida = 1;
  3501  0031FA  0E01               	movlw	1
  3502  0031FC  0101               	movlb	1	; () banked
  3503  0031FE  6FF3               	movwf	_ida& (0+255),b
  3504  003200  EF37  F018         	goto	l10547
  3505  003204                     l10619:
  3506                           
  3507                           ; BSR set to: 1
  3508  003204  5059               	movf	_llegoDestino^0,w,c
  3509  003206  B4D8               	btfsc	status,2,c
  3510  003208  EF08  F019         	goto	u11261
  3511  00320C  EF0A  F019         	goto	u11260
  3512  003210                     u11261:
  3513  003210  EF4B  F019         	goto	l10633
  3514  003214                     u11260:
  3515  003214                     
  3516                           ; BSR set to: 1
  3517  003214  51D9               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3518  003216  A4D8               	btfss	status,2,c
  3519  003218  EF10  F019         	goto	u11271
  3520  00321C  EF12  F019         	goto	u11270
  3521  003220                     u11271:
  3522  003220  EF4B  F019         	goto	l10633
  3523  003224                     u11270:
  3524  003224                     
  3525                           ; BSR set to: 1
  3526                           ;main.c: 416:                 probarMapeoDireccionCruces(caminoFinal, caminoActual, &inv
      +                          estigandoCruce,
  3527  003224  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3528  003226  0100               	movlb	0	; () banked
  3529  003228  6FEE               	movwf	probarMapeoDireccionCruces@caminoFinal& (0+255),b
  3530  00322A  0E02               	movlw	high comportamientoBasico@caminoFinal
  3531  00322C  6FEF               	movwf	(probarMapeoDireccionCruces@caminoFinal+1)& (0+255),b
  3532  00322E  C1D3  F0F0         	movff	comportamientoBasico@caminoActual,probarMapeoDireccionCruces@caminoActual
  3533  003232  0ED6               	movlw	low comportamientoBasico@investigandoCruce
  3534  003234  6FF1               	movwf	probarMapeoDireccionCruces@investigandoCruce& (0+255),b
  3535  003236  0E01               	movlw	high comportamientoBasico@investigandoCruce
  3536  003238  6FF2               	movwf	(probarMapeoDireccionCruces@investigandoCruce+1)& (0+255),b
  3537  00323A  0ED5               	movlw	low comportamientoBasico@posicionInvCruce
  3538  00323C  6FF3               	movwf	probarMapeoDireccionCruces@posicionInvCruce& (0+255),b
  3539  00323E  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  3540  003240  6FF4               	movwf	(probarMapeoDireccionCruces@posicionInvCruce+1)& (0+255),b
  3541  003242  0ED8               	movlw	low comportamientoBasico@mapear
  3542  003244  6FF5               	movwf	probarMapeoDireccionCruces@mapear& (0+255),b
  3543  003246  0E01               	movlw	high comportamientoBasico@mapear
  3544  003248  6FF6               	movwf	(probarMapeoDireccionCruces@mapear+1)& (0+255),b
  3545  00324A  0ED7               	movlw	low comportamientoBasico@cruceDetectado
  3546  00324C  6FF7               	movwf	probarMapeoDireccionCruces@cruceDetectado& (0+255),b
  3547  00324E  0E01               	movlw	high comportamientoBasico@cruceDetectado
  3548  003250  6FF8               	movwf	(probarMapeoDireccionCruces@cruceDetectado+1)& (0+255),b
  3549  003252  0ED4               	movlw	low comportamientoBasico@contCaminosRecorridos
  3550  003254  6FF9               	movwf	probarMapeoDireccionCruces@contCaminosRecorridos& (0+255),b
  3551  003256  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  3552  003258  6FFA               	movwf	(probarMapeoDireccionCruces@contCaminosRecorridos+1)& (0+255),b
  3553  00325A  0ED2               	movlw	low comportamientoBasico@cambioOrientacionCarro
  3554  00325C  6FFB               	movwf	probarMapeoDireccionCruces@cambioOrientacionCarro& (0+255),b
  3555  00325E  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  3556  003260  6FFC               	movwf	(probarMapeoDireccionCruces@cambioOrientacionCarro+1)& (0+255),b
  3557  003262  EC45  F029         	call	_probarMapeoDireccionCruces	;wreg free
  3558  003266                     
  3559                           ;main.c: 420:                 espejearCarroY = 1;
  3560  003266  0E01               	movlw	1
  3561  003268  0101               	movlb	1	; () banked
  3562  00326A  6F3E               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3563  00326C                     
  3564                           ; BSR set to: 1
  3565                           ;main.c: 421:                 UART_printf("\rSe llego Al destino\r\n");
  3566  00326C  0E7A               	movlw	low STR_14
  3567  00326E  6E07               	movwf	UART_printf@cadena^0,c
  3568  003270  0E7F               	movlw	high STR_14
  3569  003272  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3570  003274  EC3F  F030         	call	_UART_printf	;wreg free
  3571  003278                     
  3572                           ;main.c: 422:                 _delay((unsigned long)((3000)*(4000000/4000.0)));
  3573  003278  0E10               	movlw	16
  3574  00327A  0101               	movlb	1	; () banked
  3575  00327C  6FEF               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3576  00327E  0E39               	movlw	57
  3577  003280  6FEE               	movwf	??_comportamientoBasico& (0+255),b
  3578  003282  0E0D               	movlw	13
  3579  003284                     u11427:
  3580  003284  2EE8               	decfsz	wreg,f,c
  3581  003286  D7FE               	bra	u11427
  3582  003288  2FEE               	decfsz	??_comportamientoBasico& (0+255),f,b
  3583  00328A  D7FC               	bra	u11427
  3584  00328C  2FEF               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3585  00328E  D7FA               	bra	u11427
  3586  003290  D000               	nop2	
  3587  003292  EF3E  F018         	goto	l10551
  3588  003296                     l10633:
  3589                           
  3590                           ; BSR set to: 1
  3591                           ;main.c: 426:                 if (direccionElegida == IZQUIERDA || direccionElegida == D
      +                          ERECHA)
  3592  003296  0E02               	movlw	2
  3593  003298  0100               	movlb	0	; () banked
  3594  00329A  19FF               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3595  00329C  B4D8               	btfsc	status,2,c
  3596  00329E  EF53  F019         	goto	u11281
  3597  0032A2  EF55  F019         	goto	u11280
  3598  0032A6                     u11281:
  3599  0032A6  EF5E  F019         	goto	l10637
  3600  0032AA                     u11280:
  3601  0032AA                     
  3602                           ; BSR set to: 0
  3603  0032AA  0E03               	movlw	3
  3604  0032AC  19FF               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3605  0032AE  A4D8               	btfss	status,2,c
  3606  0032B0  EF5C  F019         	goto	u11291
  3607  0032B4  EF5E  F019         	goto	u11290
  3608  0032B8                     u11291:
  3609  0032B8  EF60  F019         	goto	l10639
  3610  0032BC                     u11290:
  3611  0032BC                     l10637:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;main.c: 427:                     velocidadEstandar();
  3615  0032BC  EC6C  F033         	call	_velocidadEstandar	;wreg free
  3616  0032C0                     l10639:
  3617                           
  3618                           ;main.c: 429:                 mouse.Next_state = direccionElegida;
  3619  0032C0  C0FF  F135         	movff	comportamientoBasico@direccionElegida,_mouse+1
  3620  0032C4  EF82  F019         	goto	l376
  3621  0032C8                     l10643:
  3622  0032C8  0101               	movlb	1	; () banked
  3623  0032CA  5134               	movf	_mouse& (0+255),w,b
  3624  0032CC  6FEE               	movwf	??_comportamientoBasico& (0+255),b
  3625  0032CE  6BEF               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3626                           
  3627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3628                           ; Switch size 1, requested type "simple"
  3629                           ; Number of cases is 1, Range of values is 0 to 0
  3630                           ; switch strategies available:
  3631                           ; Name         Instructions Cycles
  3632                           ; simple_byte            4     3 (average)
  3633                           ;	Chosen strategy is simple_byte
  3634  0032D0  51EF               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3635  0032D2  0A00               	xorlw	0	; case 0
  3636  0032D4  B4D8               	btfsc	status,2,c
  3637  0032D6  EF6F  F019         	goto	l11149
  3638  0032DA  EF82  F019         	goto	l376
  3639  0032DE                     l11149:
  3640                           
  3641                           ; BSR set to: 1
  3642                           ; Switch size 1, requested type "simple"
  3643                           ; Number of cases is 4, Range of values is 1 to 4
  3644                           ; switch strategies available:
  3645                           ; Name         Instructions Cycles
  3646                           ; simple_byte           13     7 (average)
  3647                           ;	Chosen strategy is simple_byte
  3648  0032DE  51EE               	movf	??_comportamientoBasico& (0+255),w,b
  3649  0032E0  0A01               	xorlw	1	; case 1
  3650  0032E2  B4D8               	btfsc	status,2,c
  3651  0032E4  EF4E  F018         	goto	l10561
  3652  0032E8  0A03               	xorlw	3	; case 2
  3653  0032EA  B4D8               	btfsc	status,2,c
  3654  0032EC  EF71  F018         	goto	l10563
  3655  0032F0  0A01               	xorlw	1	; case 3
  3656  0032F2  B4D8               	btfsc	status,2,c
  3657  0032F4  EF37  F018         	goto	l10547
  3658  0032F8  0A07               	xorlw	7	; case 4
  3659  0032FA  B4D8               	btfsc	status,2,c
  3660  0032FC  EFCC  F018         	goto	l10595
  3661  003300  EF82  F019         	goto	l376
  3662  003304                     l376:
  3663                           
  3664                           ;main.c: 435:     mouse.curr_state = mouse.Next_state;
  3665  003304  C135  F134         	movff	_mouse+1,_mouse
  3666  003308  0012               	return		;funcret
  3667  00330A                     __end_of_comportamientoBasico:
  3668                           	opt callstack 0
  3669                           
  3670 ;; *************** function _regresarAlCruce *****************
  3671 ;; Defined at:
  3672 ;;		line 651 in file "main.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  movimientos     2   38[BANK0 ] PTR unsigned char 
  3675 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  3676 ;;  numMovimient    2   40[BANK0 ] unsigned int 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  i               2   43[BANK0 ] int 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3688 ;;      Params:         0       4       0       0       0       0       0       0       0
  3689 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3690 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3691 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3692 ;;Total ram usage:        7 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    6
  3695 ;; This function calls:
  3696 ;;		_PID
  3697 ;;		_mover
  3698 ;;		_velocidadEstandar
  3699 ;; This function is called by:
  3700 ;;		_comportamientoBasico
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text6
  3705  005960                     __ptext6:
  3706                           	opt callstack 0
  3707  005960                     _regresarAlCruce:
  3708                           	opt callstack 23
  3709  005960                     
  3710                           ;main.c: 653:     movimientos[1] = ENFRENTE;
  3711  005960  0100               	movlb	0	; () banked
  3712  005962  EE20 F001          	lfsr	2,1
  3713  005966  5186               	movf	regresarAlCruce@movimientos& (0+255),w,b
  3714  005968  26D9               	addwf	fsr2l,f,c
  3715  00596A  5187               	movf	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3716  00596C  22DA               	addwfc	fsr2h,f,c
  3717  00596E  0E01               	movlw	1
  3718  005970  6EDF               	movwf	indf2,c
  3719  005972                     
  3720                           ; BSR set to: 0
  3721                           ;main.c: 655:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  3722  005972  0EFF               	movlw	255
  3723  005974  2588               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  3724  005976  6F8B               	movwf	regresarAlCruce@i& (0+255),b
  3725  005978  0EFF               	movlw	255
  3726  00597A  2189               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  3727  00597C  6F8C               	movwf	(regresarAlCruce@i+1)& (0+255),b
  3728  00597E                     l10423:
  3729                           
  3730                           ; BSR set to: 0
  3731  00597E  BF8C               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3732  005980  EFC6  F02C         	goto	u11070
  3733  005984  EFC4  F02C         	goto	u11071
  3734  005988                     u11071:
  3735  005988  EFC8  F02C         	goto	l10427
  3736  00598C                     u11070:
  3737  00598C  EF08  F02D         	goto	l456
  3738  005990                     l10427:
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;main.c: 659:         if (movimientos[i] == IZQUIERDA) {
  3742  005990  518B               	movf	regresarAlCruce@i& (0+255),w,b
  3743  005992  2586               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3744  005994  6ED9               	movwf	fsr2l,c
  3745  005996  518C               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3746  005998  2187               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3747  00599A  6EDA               	movwf	fsr2h,c
  3748  00599C  0E02               	movlw	2
  3749  00599E  18DE               	xorwf	postinc2,w,c
  3750  0059A0  A4D8               	btfss	status,2,c
  3751  0059A2  EFD5  F02C         	goto	u11081
  3752  0059A6  EFD7  F02C         	goto	u11080
  3753  0059AA                     u11081:
  3754  0059AA  EFDE  F02C         	goto	l10433
  3755  0059AE                     u11080:
  3756  0059AE                     
  3757                           ; BSR set to: 0
  3758                           ;main.c: 660:             velocidadEstandar();
  3759  0059AE  EC6C  F033         	call	_velocidadEstandar	;wreg free
  3760  0059B2                     
  3761                           ;main.c: 661:             mouse.curr_state = DERECHA;
  3762  0059B2  0E03               	movlw	3
  3763  0059B4  0101               	movlb	1	; () banked
  3764  0059B6  6F34               	movwf	_mouse& (0+255),b
  3765                           
  3766                           ;main.c: 662:         } else if (movimientos[i] == DERECHA) {
  3767  0059B8  EF00  F02D         	goto	l10443
  3768  0059BC                     l10433:
  3769                           
  3770                           ; BSR set to: 0
  3771  0059BC  518B               	movf	regresarAlCruce@i& (0+255),w,b
  3772  0059BE  2586               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3773  0059C0  6ED9               	movwf	fsr2l,c
  3774  0059C2  518C               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3775  0059C4  2187               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3776  0059C6  6EDA               	movwf	fsr2h,c
  3777  0059C8  0E03               	movlw	3
  3778  0059CA  18DE               	xorwf	postinc2,w,c
  3779  0059CC  A4D8               	btfss	status,2,c
  3780  0059CE  EFEB  F02C         	goto	u11091
  3781  0059D2  EFED  F02C         	goto	u11090
  3782  0059D6                     u11091:
  3783  0059D6  EFF4  F02C         	goto	l10439
  3784  0059DA                     u11090:
  3785  0059DA                     
  3786                           ; BSR set to: 0
  3787                           ;main.c: 663:             velocidadEstandar();
  3788  0059DA  EC6C  F033         	call	_velocidadEstandar	;wreg free
  3789  0059DE                     
  3790                           ;main.c: 664:             mouse.curr_state = IZQUIERDA;
  3791  0059DE  0E02               	movlw	2
  3792  0059E0  0101               	movlb	1	; () banked
  3793  0059E2  6F34               	movwf	_mouse& (0+255),b
  3794                           
  3795                           ;main.c: 665:         } else {
  3796  0059E4  EF00  F02D         	goto	l10443
  3797  0059E8                     l10439:
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;main.c: 667:             PID();
  3801  0059E8  EC52  F01B         	call	_PID	;wreg free
  3802  0059EC                     
  3803                           ;main.c: 668:             mouse.curr_state = movimientos[i];
  3804  0059EC  0100               	movlb	0	; () banked
  3805  0059EE  518B               	movf	regresarAlCruce@i& (0+255),w,b
  3806  0059F0  2586               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3807  0059F2  6ED9               	movwf	fsr2l,c
  3808  0059F4  518C               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3809  0059F6  2187               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3810  0059F8  6EDA               	movwf	fsr2h,c
  3811  0059FA  50DF               	movf	indf2,w,c
  3812  0059FC  0101               	movlb	1	; () banked
  3813  0059FE  6F34               	movwf	_mouse& (0+255),b
  3814  005A00                     l10443:
  3815                           
  3816                           ; BSR set to: 1
  3817                           ;main.c: 671:         mover();
  3818  005A00  EC5D  F02E         	call	_mover	;wreg free
  3819  005A04                     
  3820                           ;main.c: 672:     }
  3821  005A04  0100               	movlb	0	; () banked
  3822  005A06  078B               	decf	regresarAlCruce@i& (0+255),f,b
  3823  005A08  A0D8               	btfss	status,0,c
  3824  005A0A  078C               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  3825  005A0C  EFBF  F02C         	goto	l10423
  3826  005A10                     l456:
  3827                           
  3828                           ; BSR set to: 0
  3829  005A10  0012               	return		;funcret
  3830  005A12                     __end_of_regresarAlCruce:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function _mover *****************
  3834 ;; Defined at:
  3835 ;;		line 596 in file "main.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3851 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3852 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3853 ;;Total ram usage:        2 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    3
  3856 ;; This function calls:
  3857 ;;		_forzarAvanceRecto
  3858 ;; This function is called by:
  3859 ;;		_regresarAlCruce
  3860 ;;		_probarGirosAuto
  3861 ;;		_probarCruceT
  3862 ;;		_probarPID
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text7
  3867  005CBA                     __ptext7:
  3868                           	opt callstack 0
  3869  005CBA                     _mover:
  3870                           	opt callstack 25
  3871  005CBA                     
  3872                           ;main.c: 598:     switch (mouse.curr_state) {
  3873  005CBA  EF8C  F02E         	goto	l7113
  3874  005CBE                     l441:
  3875                           
  3876                           ; BSR set to: 1
  3877                           ;main.c: 602:             LATB4 = 1;
  3878  005CBE  888A               	bsf	3978,4,c	;volatile
  3879                           
  3880                           ;main.c: 603:             LATB5 = 0;
  3881  005CC0  9A8A               	bcf	3978,5,c	;volatile
  3882                           
  3883                           ;main.c: 604:             LATB6 = 1;
  3884  005CC2  8C8A               	bsf	3978,6,c	;volatile
  3885                           
  3886                           ;main.c: 607:             if (!0)
  3887  005CC4  9E8A               	bcf	3978,7,c	;volatile
  3888  005CC6                     
  3889                           ; BSR set to: 1
  3890                           ;main.c: 608:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  3891  005CC6  0E48               	movlw	72
  3892  005CC8  6E08               	movwf	??_mover^0,c
  3893  005CCA  0E6C               	movlw	108
  3894  005CCC                     u11437:
  3895  005CCC  2EE8               	decfsz	wreg,f,c
  3896  005CCE  D7FE               	bra	u11437
  3897  005CD0  2E08               	decfsz	??_mover^0,f,c
  3898  005CD2  D7FC               	bra	u11437
  3899  005CD4  D000               	nop2	
  3900  005CD6  EFAA  F02E         	goto	l447
  3901  005CDA                     l444:
  3902                           
  3903                           ; BSR set to: 1
  3904                           ;main.c: 614:             LATB4 = 0;
  3905  005CDA  988A               	bcf	3978,4,c	;volatile
  3906                           
  3907                           ;main.c: 615:             LATB5 = 0;
  3908  005CDC  9A8A               	bcf	3978,5,c	;volatile
  3909                           
  3910                           ;main.c: 616:             LATB6 = 1;
  3911  005CDE  8C8A               	bsf	3978,6,c	;volatile
  3912                           
  3913                           ;main.c: 617:             LATB7 = 0;
  3914  005CE0  9E8A               	bcf	3978,7,c	;volatile
  3915  005CE2                     l7103:
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;main.c: 619:             _delay((unsigned long)((410)*(4000000/4000.0)));
  3919  005CE2  0E03               	movlw	3
  3920  005CE4  6E09               	movwf	(??_mover+1)^0,c
  3921  005CE6  0E15               	movlw	21
  3922  005CE8  6E08               	movwf	??_mover^0,c
  3923  005CEA  0E74               	movlw	116
  3924  005CEC                     u11447:
  3925  005CEC  2EE8               	decfsz	wreg,f,c
  3926  005CEE  D7FE               	bra	u11447
  3927  005CF0  2E08               	decfsz	??_mover^0,f,c
  3928  005CF2  D7FC               	bra	u11447
  3929  005CF4  2E09               	decfsz	(??_mover+1)^0,f,c
  3930  005CF6  D7FA               	bra	u11447
  3931  005CF8                     
  3932                           ;main.c: 621:             forzarAvanceRecto();
  3933  005CF8  ECB6  F033         	call	_forzarAvanceRecto	;wreg free
  3934                           
  3935                           ;main.c: 623:             break;
  3936  005CFC  EFAA  F02E         	goto	l447
  3937  005D00                     l445:
  3938                           
  3939                           ; BSR set to: 1
  3940                           ;main.c: 627:             LATB4 = 1;
  3941  005D00  888A               	bsf	3978,4,c	;volatile
  3942                           
  3943                           ;main.c: 628:             LATB5 = 0;
  3944  005D02  9A8A               	bcf	3978,5,c	;volatile
  3945                           
  3946                           ;main.c: 629:             LATB6 = 0;
  3947  005D04  9C8A               	bcf	3978,6,c	;volatile
  3948                           
  3949                           ;main.c: 630:             LATB7 = 0;
  3950  005D06  9E8A               	bcf	3978,7,c	;volatile
  3951  005D08  EF71  F02E         	goto	l7103
  3952  005D0C                     l446:
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;main.c: 640:             LATB4 = 0;
  3956  005D0C  988A               	bcf	3978,4,c	;volatile
  3957                           
  3958                           ;main.c: 641:             LATB5 = 0;
  3959  005D0E  9A8A               	bcf	3978,5,c	;volatile
  3960                           
  3961                           ;main.c: 642:             LATB6 = 0;
  3962  005D10  9C8A               	bcf	3978,6,c	;volatile
  3963                           
  3964                           ;main.c: 643:             LATB7 = 0;
  3965  005D12  9E8A               	bcf	3978,7,c	;volatile
  3966                           
  3967                           ;main.c: 645:             break;
  3968  005D14  EFAA  F02E         	goto	l447
  3969  005D18                     l7113:
  3970  005D18  0101               	movlb	1	; () banked
  3971  005D1A  5134               	movf	_mouse& (0+255),w,b
  3972  005D1C  6E08               	movwf	??_mover^0,c
  3973  005D1E  6A09               	clrf	(??_mover+1)^0,c
  3974                           
  3975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3976                           ; Switch size 1, requested type "simple"
  3977                           ; Number of cases is 1, Range of values is 0 to 0
  3978                           ; switch strategies available:
  3979                           ; Name         Instructions Cycles
  3980                           ; simple_byte            4     3 (average)
  3981                           ;	Chosen strategy is simple_byte
  3982  005D20  5009               	movf	(??_mover+1)^0,w,c
  3983  005D22  0A00               	xorlw	0	; case 0
  3984  005D24  B4D8               	btfsc	status,2,c
  3985  005D26  EF97  F02E         	goto	l11151
  3986  005D2A  EFAA  F02E         	goto	l447
  3987  005D2E                     l11151:
  3988                           
  3989                           ; BSR set to: 1
  3990                           ; Switch size 1, requested type "simple"
  3991                           ; Number of cases is 4, Range of values is 1 to 4
  3992                           ; switch strategies available:
  3993                           ; Name         Instructions Cycles
  3994                           ; simple_byte           13     7 (average)
  3995                           ;	Chosen strategy is simple_byte
  3996  005D2E  5008               	movf	??_mover^0,w,c
  3997  005D30  0A01               	xorlw	1	; case 1
  3998  005D32  B4D8               	btfsc	status,2,c
  3999  005D34  EF5F  F02E         	goto	l441
  4000  005D38  0A03               	xorlw	3	; case 2
  4001  005D3A  B4D8               	btfsc	status,2,c
  4002  005D3C  EF6D  F02E         	goto	l444
  4003  005D40  0A01               	xorlw	1	; case 3
  4004  005D42  B4D8               	btfsc	status,2,c
  4005  005D44  EF80  F02E         	goto	l445
  4006  005D48  0A07               	xorlw	7	; case 4
  4007  005D4A  B4D8               	btfsc	status,2,c
  4008  005D4C  EF86  F02E         	goto	l446
  4009  005D50  EFAA  F02E         	goto	l447
  4010  005D54                     l447:
  4011  005D54  0012               	return		;funcret
  4012  005D56                     __end_of_mover:
  4013                           	opt callstack 0
  4014                           
  4015 ;; *************** function _PID *****************
  4016 ;; Defined at:
  4017 ;;		line 19 in file "./control.h"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  velocidadDer    2   30[BANK0 ] int 
  4022 ;;  velocidadIzq    2   26[BANK0 ] int 
  4023 ;;  error           2   36[BANK0 ] int 
  4024 ;;  dif             2   34[BANK0 ] int 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0
  4035 ;;      Locals:         0      12       0       0       0       0       0       0       0
  4036 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4037 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4038 ;;Total ram usage:       14 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    5
  4041 ;; This function calls:
  4042 ;;		___flmul
  4043 ;;		___flsub
  4044 ;;		___fltol
  4045 ;;		___xxtofl
  4046 ;;		_hayCruceRapidoPID
  4047 ;;		_pwmDuty
  4048 ;; This function is called by:
  4049 ;;		_comportamientoBasico
  4050 ;;		_regresarAlCruce
  4051 ;;		_probarCruceT
  4052 ;;		_probarPID
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text8
  4057  0036A4                     __ptext8:
  4058                           	opt callstack 0
  4059  0036A4                     _PID:
  4060                           	opt callstack 23
  4061  0036A4                     
  4062                           ;./control.h: 22:     T_INT error = 0;
  4063  0036A4  0E00               	movlw	0
  4064  0036A6  0100               	movlb	0	; () banked
  4065  0036A8  6F85               	movwf	(PID@error+1)& (0+255),b
  4066  0036AA  0E00               	movlw	0
  4067  0036AC  6F84               	movwf	PID@error& (0+255),b
  4068  0036AE                     
  4069                           ; BSR set to: 0
  4070                           ;./control.h: 23:     static T_INT P, I = 0, D;;./control.h: 24:     static T_INT difAnt
      +                           = 0;;./control.h: 26:     if (!hayCruceRapidoPID()) {
  4071  0036AE  EC4F  F02C         	call	_hayCruceRapidoPID	;wreg free
  4072  0036B2  0900               	iorlw	0
  4073  0036B4  A4D8               	btfss	status,2,c
  4074  0036B6  EF5F  F01B         	goto	u10491
  4075  0036BA  EF61  F01B         	goto	u10490
  4076  0036BE                     u10491:
  4077  0036BE  EFCA  F01C         	goto	l232
  4078  0036C2                     u10490:
  4079  0036C2                     
  4080                           ;./control.h: 28:         if (reiniciarPID) {
  4081  0036C2  0101               	movlb	1	; () banked
  4082  0036C4  5149               	movf	_reiniciarPID& (0+255),w,b
  4083  0036C6  B4D8               	btfsc	status,2,c
  4084  0036C8  EF68  F01B         	goto	u10501
  4085  0036CC  EF6A  F01B         	goto	u10500
  4086  0036D0                     u10501:
  4087  0036D0  EF74  F01B         	goto	l9847
  4088  0036D4                     u10500:
  4089  0036D4                     
  4090                           ; BSR set to: 1
  4091                           ;./control.h: 29:             I = 0;
  4092  0036D4  0E00               	movlw	0
  4093  0036D6  6F3B               	movwf	(PID@I+1)& (0+255),b
  4094  0036D8  0E00               	movlw	0
  4095  0036DA  6F3A               	movwf	PID@I& (0+255),b
  4096                           
  4097                           ;./control.h: 30:             difAnt = 0;
  4098  0036DC  0E00               	movlw	0
  4099  0036DE  6F37               	movwf	(PID@difAnt+1)& (0+255),b
  4100  0036E0  0E00               	movlw	0
  4101  0036E2  6F36               	movwf	PID@difAnt& (0+255),b
  4102                           
  4103                           ;./control.h: 31:             reiniciarPID = 0;
  4104  0036E4  0E00               	movlw	0
  4105  0036E6  6F49               	movwf	_reiniciarPID& (0+255),b
  4106  0036E8                     l9847:
  4107                           
  4108                           ; BSR set to: 1
  4109                           ;./control.h: 35:         dif = sensorDerecha - sensorIzquierda;
  4110  0036E8  C128  F01D         	movff	_sensorIzquierda,___flsub@a
  4111  0036EC  C129  F01E         	movff	_sensorIzquierda+1,___flsub@a+1
  4112  0036F0  C12A  F01F         	movff	_sensorIzquierda+2,___flsub@a+2
  4113  0036F4  C12B  F020         	movff	_sensorIzquierda+3,___flsub@a+3
  4114  0036F8  C055  F019         	movff	_sensorDerecha,___flsub@b
  4115  0036FC  C056  F01A         	movff	_sensorDerecha+1,___flsub@b+1
  4116  003700  C057  F01B         	movff	_sensorDerecha+2,___flsub@b+2
  4117  003704  C058  F01C         	movff	_sensorDerecha+3,___flsub@b+3
  4118  003708  EC3D  F032         	call	___flsub	;wreg free
  4119  00370C  C019  F06D         	movff	?___flsub,___fltol@f1
  4120  003710  C01A  F06E         	movff	?___flsub+1,___fltol@f1+1
  4121  003714  C01B  F06F         	movff	?___flsub+2,___fltol@f1+2
  4122  003718  C01C  F070         	movff	?___flsub+3,___fltol@f1+3
  4123  00371C  EC3E  F028         	call	___fltol	;wreg free
  4124  003720  C06D  F082         	movff	?___fltol,PID@dif
  4125  003724  C06E  F083         	movff	?___fltol+1,PID@dif+1
  4126  003728                     
  4127                           ;./control.h: 38:         P = dif * 0.8;
  4128  003728  0ECD               	movlw	205
  4129  00372A  6E42               	movwf	___flmul@a^0,c
  4130  00372C  0ECC               	movlw	204
  4131  00372E  6E43               	movwf	(___flmul@a+1)^0,c
  4132  003730  0E4C               	movlw	76
  4133  003732  6E44               	movwf	(___flmul@a+2)^0,c
  4134  003734  0E3F               	movlw	63
  4135  003736  6E45               	movwf	(___flmul@a+3)^0,c
  4136  003738  C082  F00B         	movff	PID@dif,___xxtofl@val
  4137  00373C  C083  F00C         	movff	PID@dif+1,___xxtofl@val+1
  4138  003740  0E00               	movlw	0
  4139  003742  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  4140  003744  0EFF               	movlw	-1
  4141  003746  6E0D               	movwf	(___xxtofl@val+2)^0,c
  4142  003748  6E0E               	movwf	(___xxtofl@val+3)^0,c
  4143  00374A  0E01               	movlw	1
  4144  00374C  EC4D  F023         	call	___xxtofl
  4145  003750  C00B  F03E         	movff	?___xxtofl,___flmul@b
  4146  003754  C00C  F03F         	movff	?___xxtofl+1,___flmul@b+1
  4147  003758  C00D  F040         	movff	?___xxtofl+2,___flmul@b+2
  4148  00375C  C00E  F041         	movff	?___xxtofl+3,___flmul@b+3
  4149  003760  EC88  F015         	call	___flmul	;wreg free
  4150  003764  C03E  F06D         	movff	?___flmul,___fltol@f1
  4151  003768  C03F  F06E         	movff	?___flmul+1,___fltol@f1+1
  4152  00376C  C040  F06F         	movff	?___flmul+2,___fltol@f1+2
  4153  003770  C041  F070         	movff	?___flmul+3,___fltol@f1+3
  4154  003774  EC3E  F028         	call	___fltol	;wreg free
  4155  003778  C06D  F13C         	movff	?___fltol,PID@P
  4156  00377C  C06E  F13D         	movff	?___fltol+1,PID@P+1
  4157  003780                     
  4158                           ;./control.h: 39:         I = (I + dif) * 0.1;
  4159  003780  0ECD               	movlw	205
  4160  003782  6E42               	movwf	___flmul@a^0,c
  4161  003784  0ECC               	movlw	204
  4162  003786  6E43               	movwf	(___flmul@a+1)^0,c
  4163  003788  0ECC               	movlw	204
  4164  00378A  6E44               	movwf	(___flmul@a+2)^0,c
  4165  00378C  0E3D               	movlw	61
  4166  00378E  6E45               	movwf	(___flmul@a+3)^0,c
  4167  003790  0100               	movlb	0	; () banked
  4168  003792  5182               	movf	PID@dif& (0+255),w,b
  4169  003794  0101               	movlb	1	; () banked
  4170  003796  253A               	addwf	PID@I& (0+255),w,b
  4171  003798  0100               	movlb	0	; () banked
  4172  00379A  6F78               	movwf	??_PID& (0+255),b
  4173  00379C  5183               	movf	(PID@dif+1)& (0+255),w,b
  4174  00379E  0101               	movlb	1	; () banked
  4175  0037A0  213B               	addwfc	(PID@I+1)& (0+255),w,b
  4176  0037A2  0100               	movlb	0	; () banked
  4177  0037A4  6F79               	movwf	(??_PID+1)& (0+255),b
  4178  0037A6  C078  F00B         	movff	??_PID,___xxtofl@val
  4179  0037AA  C079  F00C         	movff	??_PID+1,___xxtofl@val+1
  4180  0037AE  0E00               	movlw	0
  4181  0037B0  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  4182  0037B2  0EFF               	movlw	-1
  4183  0037B4  6E0D               	movwf	(___xxtofl@val+2)^0,c
  4184  0037B6  6E0E               	movwf	(___xxtofl@val+3)^0,c
  4185  0037B8  0E01               	movlw	1
  4186  0037BA  EC4D  F023         	call	___xxtofl
  4187  0037BE  C00B  F03E         	movff	?___xxtofl,___flmul@b
  4188  0037C2  C00C  F03F         	movff	?___xxtofl+1,___flmul@b+1
  4189  0037C6  C00D  F040         	movff	?___xxtofl+2,___flmul@b+2
  4190  0037CA  C00E  F041         	movff	?___xxtofl+3,___flmul@b+3
  4191  0037CE  EC88  F015         	call	___flmul	;wreg free
  4192  0037D2  C03E  F06D         	movff	?___flmul,___fltol@f1
  4193  0037D6  C03F  F06E         	movff	?___flmul+1,___fltol@f1+1
  4194  0037DA  C040  F06F         	movff	?___flmul+2,___fltol@f1+2
  4195  0037DE  C041  F070         	movff	?___flmul+3,___fltol@f1+3
  4196  0037E2  EC3E  F028         	call	___fltol	;wreg free
  4197  0037E6  C06D  F13A         	movff	?___fltol,PID@I
  4198  0037EA  C06E  F13B         	movff	?___fltol+1,PID@I+1
  4199  0037EE                     
  4200                           ;./control.h: 40:         D = (dif - difAnt) * 1.9;
  4201  0037EE  0E33               	movlw	51
  4202  0037F0  6E42               	movwf	___flmul@a^0,c
  4203  0037F2  0E33               	movlw	51
  4204  0037F4  6E43               	movwf	(___flmul@a+1)^0,c
  4205  0037F6  0EF3               	movlw	243
  4206  0037F8  6E44               	movwf	(___flmul@a+2)^0,c
  4207  0037FA  0E3F               	movlw	63
  4208  0037FC  6E45               	movwf	(___flmul@a+3)^0,c
  4209  0037FE  0101               	movlb	1	; () banked
  4210  003800  5136               	movf	PID@difAnt& (0+255),w,b
  4211  003802  0100               	movlb	0	; () banked
  4212  003804  5D82               	subwf	PID@dif& (0+255),w,b
  4213  003806  6F78               	movwf	??_PID& (0+255),b
  4214  003808  0101               	movlb	1	; () banked
  4215  00380A  5137               	movf	(PID@difAnt+1)& (0+255),w,b
  4216  00380C  0100               	movlb	0	; () banked
  4217  00380E  5983               	subwfb	(PID@dif+1)& (0+255),w,b
  4218  003810  6F79               	movwf	(??_PID+1)& (0+255),b
  4219  003812  C078  F00B         	movff	??_PID,___xxtofl@val
  4220  003816  C079  F00C         	movff	??_PID+1,___xxtofl@val+1
  4221  00381A  0E00               	movlw	0
  4222  00381C  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  4223  00381E  0EFF               	movlw	-1
  4224  003820  6E0D               	movwf	(___xxtofl@val+2)^0,c
  4225  003822  6E0E               	movwf	(___xxtofl@val+3)^0,c
  4226  003824  0E01               	movlw	1
  4227  003826  EC4D  F023         	call	___xxtofl
  4228  00382A  C00B  F03E         	movff	?___xxtofl,___flmul@b
  4229  00382E  C00C  F03F         	movff	?___xxtofl+1,___flmul@b+1
  4230  003832  C00D  F040         	movff	?___xxtofl+2,___flmul@b+2
  4231  003836  C00E  F041         	movff	?___xxtofl+3,___flmul@b+3
  4232  00383A  EC88  F015         	call	___flmul	;wreg free
  4233  00383E  C03E  F06D         	movff	?___flmul,___fltol@f1
  4234  003842  C03F  F06E         	movff	?___flmul+1,___fltol@f1+1
  4235  003846  C040  F06F         	movff	?___flmul+2,___fltol@f1+2
  4236  00384A  C041  F070         	movff	?___flmul+3,___fltol@f1+3
  4237  00384E  EC3E  F028         	call	___fltol	;wreg free
  4238  003852  C06D  F138         	movff	?___fltol,PID@D
  4239  003856  C06E  F139         	movff	?___fltol+1,PID@D+1
  4240  00385A                     
  4241                           ;./control.h: 42:         difAnt = dif;
  4242  00385A  C082  F136         	movff	PID@dif,PID@difAnt
  4243  00385E  C083  F137         	movff	PID@dif+1,PID@difAnt+1
  4244  003862                     
  4245                           ;./control.h: 44:         error = P + I + D;
  4246  003862  0101               	movlb	1	; () banked
  4247  003864  513A               	movf	PID@I& (0+255),w,b
  4248  003866  253C               	addwf	PID@P& (0+255),w,b
  4249  003868  0100               	movlb	0	; () banked
  4250  00386A  6F78               	movwf	??_PID& (0+255),b
  4251  00386C  0101               	movlb	1	; () banked
  4252  00386E  513B               	movf	(PID@I+1)& (0+255),w,b
  4253  003870  213D               	addwfc	(PID@P+1)& (0+255),w,b
  4254  003872  0100               	movlb	0	; () banked
  4255  003874  6F79               	movwf	(??_PID+1)& (0+255),b
  4256  003876  0101               	movlb	1	; () banked
  4257  003878  5138               	movf	PID@D& (0+255),w,b
  4258  00387A  0100               	movlb	0	; () banked
  4259  00387C  2578               	addwf	??_PID& (0+255),w,b
  4260  00387E  6F84               	movwf	PID@error& (0+255),b
  4261  003880  0101               	movlb	1	; () banked
  4262  003882  5139               	movf	(PID@D+1)& (0+255),w,b
  4263  003884  0100               	movlb	0	; () banked
  4264  003886  2179               	addwfc	(??_PID+1)& (0+255),w,b
  4265  003888  6F85               	movwf	(PID@error+1)& (0+255),b
  4266  00388A                     
  4267                           ; BSR set to: 0
  4268                           ;./control.h: 48:         T_INT velocidadIzquierda = ((100 + error)<(0)?(0):((100 + erro
      +                          r)>(100)?(100):(100 + error)));
  4269  00388A  0E64               	movlw	100
  4270  00388C  2584               	addwf	PID@error& (0+255),w,b
  4271  00388E  0E00               	movlw	0
  4272  003890  2185               	addwfc	(PID@error+1)& (0+255),w,b
  4273  003892  0B80               	andlw	128
  4274  003894  A4D8               	btfss	status,2,c
  4275  003896  EF4F  F01C         	goto	u10511
  4276  00389A  EF51  F01C         	goto	u10510
  4277  00389E                     u10511:
  4278  00389E  EF77  F01C         	goto	l9869
  4279  0038A2                     u10510:
  4280  0038A2                     
  4281                           ; BSR set to: 0
  4282  0038A2  0E64               	movlw	100
  4283  0038A4  2584               	addwf	PID@error& (0+255),w,b
  4284  0038A6  6F78               	movwf	??_PID& (0+255),b
  4285  0038A8  0E00               	movlw	0
  4286  0038AA  2185               	addwfc	(PID@error+1)& (0+255),w,b
  4287  0038AC  6F79               	movwf	(??_PID+1)& (0+255),b
  4288  0038AE  BF79               	btfsc	(??_PID+1)& (0+255),7,b
  4289  0038B0  EF65  F01C         	goto	u10520
  4290  0038B4  5179               	movf	(??_PID+1)& (0+255),w,b
  4291  0038B6  E107               	bnz	u10521
  4292  0038B8  0E65               	movlw	101
  4293  0038BA  5D78               	subwf	??_PID& (0+255),w,b
  4294  0038BC  B0D8               	btfsc	status,0,c
  4295  0038BE  EF63  F01C         	goto	u10521
  4296  0038C2  EF65  F01C         	goto	u10520
  4297  0038C6                     u10521:
  4298  0038C6  EF6D  F01C         	goto	l9865
  4299  0038CA                     u10520:
  4300  0038CA                     
  4301                           ; BSR set to: 0
  4302  0038CA  0E64               	movlw	100
  4303  0038CC  2584               	addwf	PID@error& (0+255),w,b
  4304  0038CE  6F7C               	movwf	_PID$599& (0+255),b
  4305  0038D0  0E00               	movlw	0
  4306  0038D2  2185               	addwfc	(PID@error+1)& (0+255),w,b
  4307  0038D4  6F7D               	movwf	(_PID$599+1)& (0+255),b
  4308  0038D6  EF71  F01C         	goto	l9867
  4309  0038DA                     l9865:
  4310                           
  4311                           ; BSR set to: 0
  4312  0038DA  0E00               	movlw	0
  4313  0038DC  6F7D               	movwf	(_PID$599+1)& (0+255),b
  4314  0038DE  0E64               	movlw	100
  4315  0038E0  6F7C               	movwf	_PID$599& (0+255),b
  4316  0038E2                     l9867:
  4317                           
  4318                           ; BSR set to: 0
  4319  0038E2  C07C  F07A         	movff	_PID$599,PID@velocidadIzquierda
  4320  0038E6  C07D  F07B         	movff	_PID$599+1,PID@velocidadIzquierda+1
  4321  0038EA  EF7B  F01C         	goto	l9871
  4322  0038EE                     l9869:
  4323                           
  4324                           ; BSR set to: 0
  4325  0038EE  0E00               	movlw	0
  4326  0038F0  6F7B               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  4327  0038F2  0E00               	movlw	0
  4328  0038F4  6F7A               	movwf	PID@velocidadIzquierda& (0+255),b
  4329  0038F6                     l9871:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;./control.h: 49:         T_INT velocidadDerecha = ((100 - error)<(0)?(0):((100 - error)
      +                          >(100)?(100):(100 - error)));
  4333  0038F6  0E64               	movlw	100
  4334  0038F8  6F78               	movwf	??_PID& (0+255),b
  4335  0038FA  0E00               	movlw	0
  4336  0038FC  6F79               	movwf	(??_PID+1)& (0+255),b
  4337  0038FE  5184               	movf	PID@error& (0+255),w,b
  4338  003900  5D78               	subwf	??_PID& (0+255),w,b
  4339  003902  5185               	movf	(PID@error+1)& (0+255),w,b
  4340  003904  5979               	subwfb	(??_PID+1)& (0+255),w,b
  4341  003906  0B80               	andlw	128
  4342  003908  A4D8               	btfss	status,2,c
  4343  00390A  EF89  F01C         	goto	u10531
  4344  00390E  EF8B  F01C         	goto	u10530
  4345  003912                     u10531:
  4346  003912  EFB5  F01C         	goto	l9881
  4347  003916                     u10530:
  4348  003916                     
  4349                           ; BSR set to: 0
  4350  003916  0E64               	movlw	100
  4351  003918  6F78               	movwf	??_PID& (0+255),b
  4352  00391A  0E00               	movlw	0
  4353  00391C  6F79               	movwf	(??_PID+1)& (0+255),b
  4354  00391E  5184               	movf	PID@error& (0+255),w,b
  4355  003920  5F78               	subwf	??_PID& (0+255),f,b
  4356  003922  5185               	movf	(PID@error+1)& (0+255),w,b
  4357  003924  5B79               	subwfb	(??_PID+1)& (0+255),f,b
  4358  003926  BF79               	btfsc	(??_PID+1)& (0+255),7,b
  4359  003928  EFA1  F01C         	goto	u10540
  4360  00392C  5179               	movf	(??_PID+1)& (0+255),w,b
  4361  00392E  E107               	bnz	u10541
  4362  003930  0E65               	movlw	101
  4363  003932  5D78               	subwf	??_PID& (0+255),w,b
  4364  003934  B0D8               	btfsc	status,0,c
  4365  003936  EF9F  F01C         	goto	u10541
  4366  00393A  EFA1  F01C         	goto	u10540
  4367  00393E                     u10541:
  4368  00393E  EFAB  F01C         	goto	l9877
  4369  003942                     u10540:
  4370  003942                     
  4371                           ; BSR set to: 0
  4372  003942  5184               	movf	PID@error& (0+255),w,b
  4373  003944  0864               	sublw	100
  4374  003946  6F80               	movwf	_PID$601& (0+255),b
  4375  003948  5185               	movf	(PID@error+1)& (0+255),w,b
  4376  00394A  A0D8               	btfss	status,0,c
  4377  00394C  2AE8               	incf	wreg,f,c
  4378  00394E  0800               	sublw	0
  4379  003950  6F81               	movwf	(_PID$601+1)& (0+255),b
  4380  003952  EFAF  F01C         	goto	l9879
  4381  003956                     l9877:
  4382                           
  4383                           ; BSR set to: 0
  4384  003956  0E00               	movlw	0
  4385  003958  6F81               	movwf	(_PID$601+1)& (0+255),b
  4386  00395A  0E64               	movlw	100
  4387  00395C  6F80               	movwf	_PID$601& (0+255),b
  4388  00395E                     l9879:
  4389                           
  4390                           ; BSR set to: 0
  4391  00395E  C080  F07E         	movff	_PID$601,PID@velocidadDerecha
  4392  003962  C081  F07F         	movff	_PID$601+1,PID@velocidadDerecha+1
  4393  003966  EFB9  F01C         	goto	l9883
  4394  00396A                     l9881:
  4395                           
  4396                           ; BSR set to: 0
  4397  00396A  0E00               	movlw	0
  4398  00396C  6F7F               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  4399  00396E  0E00               	movlw	0
  4400  003970  6F7E               	movwf	PID@velocidadDerecha& (0+255),b
  4401  003972                     l9883:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;./control.h: 51:         pwmDuty(velocidadIzquierda, 1);
  4405  003972  C07A  F071         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  4406  003976  C07B  F072         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  4407  00397A  0E01               	movlw	1
  4408  00397C  6F73               	movwf	pwmDuty@channel& (0+255),b
  4409  00397E  EC6F  F022         	call	_pwmDuty	;wreg free
  4410  003982                     
  4411                           ;./control.h: 52:         pwmDuty(velocidadDerecha, 2);
  4412  003982  C07E  F071         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  4413  003986  C07F  F072         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  4414  00398A  0E02               	movlw	2
  4415  00398C  0100               	movlb	0	; () banked
  4416  00398E  6F73               	movwf	pwmDuty@channel& (0+255),b
  4417  003990  EC6F  F022         	call	_pwmDuty	;wreg free
  4418  003994                     l232:
  4419  003994  0012               	return		;funcret
  4420  003996                     __end_of_PID:
  4421                           	opt callstack 0
  4422                           
  4423 ;; *************** function _hayCruceRapidoPID *****************
  4424 ;; Defined at:
  4425 ;;		line 62 in file "./control.h"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;  contCaminos     1   77[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      unsigned char 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0, cstack
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0
  4440 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4442 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4443 ;;Total ram usage:        1 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    3
  4446 ;; This function calls:
  4447 ;;		___flge
  4448 ;; This function is called by:
  4449 ;;		_PID
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text9
  4454  00589E                     __ptext9:
  4455                           	opt callstack 0
  4456  00589E                     _hayCruceRapidoPID:
  4457                           	opt callstack 24
  4458  00589E                     
  4459                           ;./control.h: 64:     T_UBYTE contCaminos = 0;
  4460  00589E  0E00               	movlw	0
  4461  0058A0  6E4E               	movwf	hayCruceRapidoPID@contCaminos^0,c
  4462  0058A2                     
  4463                           ;./control.h: 66:     if (sensorEnfrente > 35)
  4464  0058A2  0E00               	movlw	0
  4465  0058A4  0100               	movlb	0	; () banked
  4466  0058A6  6F6D               	movwf	___flge@ff1& (0+255),b
  4467  0058A8  0E00               	movlw	0
  4468  0058AA  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  4469  0058AC  0E0C               	movlw	12
  4470  0058AE  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  4471  0058B0  0E42               	movlw	66
  4472  0058B2  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  4473  0058B4  C124  F071         	movff	_sensorEnfrente,___flge@ff2
  4474  0058B8  C125  F072         	movff	_sensorEnfrente+1,___flge@ff2+1
  4475  0058BC  C126  F073         	movff	_sensorEnfrente+2,___flge@ff2+2
  4476  0058C0  C127  F074         	movff	_sensorEnfrente+3,___flge@ff2+3
  4477  0058C4  ECC2  F028         	call	___flge	;wreg free
  4478  0058C8  0100               	movlb	0	; () banked
  4479  0058CA  B0D8               	btfsc	status,0,c
  4480  0058CC  EF6A  F02C         	goto	u10441
  4481  0058D0  EF6C  F02C         	goto	u10440
  4482  0058D4                     u10441:
  4483  0058D4  EF6D  F02C         	goto	l9763
  4484  0058D8                     u10440:
  4485  0058D8                     
  4486                           ; BSR set to: 0
  4487                           ;./control.h: 67:         contCaminos++;
  4488  0058D8  2A4E               	incf	hayCruceRapidoPID@contCaminos^0,f,c
  4489  0058DA                     l9763:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;./control.h: 68:     if (sensorIzquierda > 30)
  4493  0058DA  0E00               	movlw	0
  4494  0058DC  6F6D               	movwf	___flge@ff1& (0+255),b
  4495  0058DE  0E00               	movlw	0
  4496  0058E0  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  4497  0058E2  0EF0               	movlw	240
  4498  0058E4  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  4499  0058E6  0E41               	movlw	65
  4500  0058E8  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  4501  0058EA  C128  F071         	movff	_sensorIzquierda,___flge@ff2
  4502  0058EE  C129  F072         	movff	_sensorIzquierda+1,___flge@ff2+1
  4503  0058F2  C12A  F073         	movff	_sensorIzquierda+2,___flge@ff2+2
  4504  0058F6  C12B  F074         	movff	_sensorIzquierda+3,___flge@ff2+3
  4505  0058FA  ECC2  F028         	call	___flge	;wreg free
  4506  0058FE  0100               	movlb	0	; () banked
  4507  005900  B0D8               	btfsc	status,0,c
  4508  005902  EF85  F02C         	goto	u10451
  4509  005906  EF87  F02C         	goto	u10450
  4510  00590A                     u10451:
  4511  00590A  EF88  F02C         	goto	l9767
  4512  00590E                     u10450:
  4513  00590E                     
  4514                           ; BSR set to: 0
  4515                           ;./control.h: 69:         contCaminos++;
  4516  00590E  2A4E               	incf	hayCruceRapidoPID@contCaminos^0,f,c
  4517  005910                     l9767:
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;./control.h: 70:     if (sensorDerecha > 30)
  4521  005910  0E00               	movlw	0
  4522  005912  6F6D               	movwf	___flge@ff1& (0+255),b
  4523  005914  0E00               	movlw	0
  4524  005916  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  4525  005918  0EF0               	movlw	240
  4526  00591A  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  4527  00591C  0E41               	movlw	65
  4528  00591E  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  4529  005920  C055  F071         	movff	_sensorDerecha,___flge@ff2
  4530  005924  C056  F072         	movff	_sensorDerecha+1,___flge@ff2+1
  4531  005928  C057  F073         	movff	_sensorDerecha+2,___flge@ff2+2
  4532  00592C  C058  F074         	movff	_sensorDerecha+3,___flge@ff2+3
  4533  005930  ECC2  F028         	call	___flge	;wreg free
  4534  005934  0100               	movlb	0	; () banked
  4535  005936  B0D8               	btfsc	status,0,c
  4536  005938  EFA0  F02C         	goto	u10461
  4537  00593C  EFA2  F02C         	goto	u10460
  4538  005940                     u10461:
  4539  005940  EFA3  F02C         	goto	l9771
  4540  005944                     u10460:
  4541  005944                     
  4542                           ; BSR set to: 0
  4543                           ;./control.h: 71:         contCaminos++;
  4544  005944  2A4E               	incf	hayCruceRapidoPID@contCaminos^0,f,c
  4545  005946                     l9771:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;./control.h: 73:     if (contCaminos > 1)
  4549  005946  0E01               	movlw	1
  4550  005948  644E               	cpfsgt	hayCruceRapidoPID@contCaminos^0,c
  4551  00594A  EFA9  F02C         	goto	u10471
  4552  00594E  EFAB  F02C         	goto	u10470
  4553  005952                     u10471:
  4554  005952  EFAE  F02C         	goto	l9779
  4555  005956                     u10470:
  4556  005956                     
  4557                           ; BSR set to: 0
  4558                           ;./control.h: 74:         return 1;
  4559  005956  0E01               	movlw	1
  4560  005958  EFAF  F02C         	goto	l239
  4561  00595C                     l9779:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;./control.h: 76:         return 0;
  4565  00595C  0E00               	movlw	0
  4566  00595E                     l239:
  4567                           
  4568                           ; BSR set to: 0
  4569  00595E  0012               	return		;funcret
  4570  005960                     __end_of_hayCruceRapidoPID:
  4571                           	opt callstack 0
  4572                           
  4573 ;; *************** function _probarMapeoDireccionCruces *****************
  4574 ;; Defined at:
  4575 ;;		line 1319 in file "main.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  caminoFinal     2  142[BANK0 ] PTR unsigned char 
  4578 ;;		 -> comportamientoBasico@caminoFinal(20), 
  4579 ;;  caminoActual    1  144[BANK0 ] unsigned char 
  4580 ;;  investigando    2  145[BANK0 ] PTR unsigned char 
  4581 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  4582 ;;  posicionInvC    2  147[BANK0 ] PTR unsigned char 
  4583 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  4584 ;;  mapear          2  149[BANK0 ] PTR unsigned char 
  4585 ;;		 -> comportamientoBasico@mapear(1), 
  4586 ;;  cruceDetecta    2  151[BANK0 ] PTR unsigned char 
  4587 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  4588 ;;  contCaminosR    2  153[BANK0 ] PTR unsigned char 
  4589 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  4590 ;;  cambioOrient    2  155[BANK0 ] PTR unsigned char 
  4591 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4603 ;;      Params:         0      15       0       0       0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4605 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4606 ;;      Totals:         0      17       0       0       0       0       0       0       0
  4607 ;;Total ram usage:       17 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:   10
  4610 ;; This function calls:
  4611 ;;		_UART_printf
  4612 ;;		_sprintf
  4613 ;; This function is called by:
  4614 ;;		_comportamientoBasico
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text10
  4619  00528A                     __ptext10:
  4620                           	opt callstack 0
  4621  00528A                     _probarMapeoDireccionCruces:
  4622                           	opt callstack 19
  4623  00528A                     
  4624                           ;main.c: 1319: void probarMapeoDireccionCruces(T_UBYTE* caminoFinal, T_UBYTE caminoActua
      +                          l, T_UBYTE* investigandoCruce,;main.c: 1320:         T_UBYTE* posicionInvCruce, T_UBYTE*
      +                           mapear, T_UBYTE* cruceDetectado, T_UBYTE* contCaminosRecorridos,;main.c: 1321:         
      +                          T_UBYTE* cambioOrientacionCarro) {;main.c: 1323:     *investigandoCruce = 0;
  4625  00528A  C0F1  FFD9         	movff	probarMapeoDireccionCruces@investigandoCruce,fsr2l
  4626  00528E  C0F2  FFDA         	movff	probarMapeoDireccionCruces@investigandoCruce+1,fsr2h
  4627  005292  0E00               	movlw	0
  4628  005294  6EDF               	movwf	indf2,c
  4629                           
  4630                           ;main.c: 1324:     *posicionInvCruce = 0;
  4631  005296  C0F3  FFD9         	movff	probarMapeoDireccionCruces@posicionInvCruce,fsr2l
  4632  00529A  C0F4  FFDA         	movff	probarMapeoDireccionCruces@posicionInvCruce+1,fsr2h
  4633  00529E  0E00               	movlw	0
  4634  0052A0  6EDF               	movwf	indf2,c
  4635                           
  4636                           ;main.c: 1325:     *mapear = 0;
  4637  0052A2  C0F5  FFD9         	movff	probarMapeoDireccionCruces@mapear,fsr2l
  4638  0052A6  C0F6  FFDA         	movff	probarMapeoDireccionCruces@mapear+1,fsr2h
  4639  0052AA  0E00               	movlw	0
  4640  0052AC  6EDF               	movwf	indf2,c
  4641                           
  4642                           ;main.c: 1326:     *cruceDetectado = 0;
  4643  0052AE  C0F7  FFD9         	movff	probarMapeoDireccionCruces@cruceDetectado,fsr2l
  4644  0052B2  C0F8  FFDA         	movff	probarMapeoDireccionCruces@cruceDetectado+1,fsr2h
  4645  0052B6  0E00               	movlw	0
  4646  0052B8  6EDF               	movwf	indf2,c
  4647                           
  4648                           ;main.c: 1328:     *contCaminosRecorridos = 0;
  4649  0052BA  C0F9  FFD9         	movff	probarMapeoDireccionCruces@contCaminosRecorridos,fsr2l
  4650  0052BE  C0FA  FFDA         	movff	probarMapeoDireccionCruces@contCaminosRecorridos+1,fsr2h
  4651  0052C2  0E00               	movlw	0
  4652  0052C4  6EDF               	movwf	indf2,c
  4653                           
  4654                           ;main.c: 1329:     *cambioOrientacionCarro = 0;
  4655  0052C6  C0FB  FFD9         	movff	probarMapeoDireccionCruces@cambioOrientacionCarro,fsr2l
  4656  0052CA  C0FC  FFDA         	movff	probarMapeoDireccionCruces@cambioOrientacionCarro+1,fsr2h
  4657  0052CE  0E00               	movlw	0
  4658  0052D0  6EDF               	movwf	indf2,c
  4659  0052D2                     
  4660                           ;main.c: 1331:     if (!caminoEncontrado) {
  4661  0052D2  0101               	movlb	1	; () banked
  4662  0052D4  5147               	movf	_caminoEncontrado& (0+255),w,b
  4663  0052D6  A4D8               	btfss	status,2,c
  4664  0052D8  EF70  F029         	goto	u11101
  4665  0052DC  EF72  F029         	goto	u11100
  4666  0052E0                     u11101:
  4667  0052E0  EFC5  F029         	goto	l705
  4668  0052E4                     u11100:
  4669  0052E4                     
  4670                           ; BSR set to: 1
  4671                           ;main.c: 1333:         caminoFinal[numMovimientosTotales++] = caminoActual;
  4672  0052E4  5148               	movf	_numMovimientosTotales& (0+255),w,b
  4673  0052E6  0100               	movlb	0	; () banked
  4674  0052E8  25EE               	addwf	probarMapeoDireccionCruces@caminoFinal& (0+255),w,b
  4675  0052EA  6ED9               	movwf	fsr2l,c
  4676  0052EC  0101               	movlb	1	; () banked
  4677  0052EE  0E00               	movlw	0
  4678  0052F0  0100               	movlb	0	; () banked
  4679  0052F2  21EF               	addwfc	(probarMapeoDireccionCruces@caminoFinal+1)& (0+255),w,b
  4680  0052F4  6EDA               	movwf	fsr2h,c
  4681  0052F6  C0F0  FFDF         	movff	probarMapeoDireccionCruces@caminoActual,indf2
  4682  0052FA                     
  4683                           ; BSR set to: 0
  4684  0052FA  0101               	movlb	1	; () banked
  4685  0052FC  2B48               	incf	_numMovimientosTotales& (0+255),f,b
  4686                           
  4687                           ;main.c: 1335:         switch (caminoActual) {
  4688  0052FE  EFA5  F029         	goto	l10465
  4689  005302                     l10457:
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;main.c: 1337:                 sprintf(buffer, "\r\nEl camino ENFRENTE se acerca mas al 
      +                          destino\r\n");
  4693  005302  0E9A               	movlw	low _buffer
  4694  005304  6FDA               	movwf	sprintf@s& (0+255),b
  4695  005306  0E01               	movlw	high _buffer
  4696  005308  6FDB               	movwf	(sprintf@s+1)& (0+255),b
  4697  00530A  0EE4               	movlw	low STR_20
  4698  00530C  6FDC               	movwf	sprintf@fmt& (0+255),b
  4699  00530E  0E7D               	movlw	high STR_20
  4700  005310  6FDD               	movwf	(sprintf@fmt+1)& (0+255),b
  4701  005312  EC73  F031         	call	_sprintf	;wreg free
  4702                           
  4703                           ;main.c: 1338:                 break;
  4704  005316  EFBF  F029         	goto	l10467
  4705  00531A                     l10459:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;main.c: 1341:                 sprintf(buffer, "\r\nEl camino IZQUIERDA se acerca mas al
      +                           destino\r\n");
  4709  00531A  0E9A               	movlw	low _buffer
  4710  00531C  6FDA               	movwf	sprintf@s& (0+255),b
  4711  00531E  0E01               	movlw	high _buffer
  4712  005320  6FDB               	movwf	(sprintf@s+1)& (0+255),b
  4713  005322  0EB3               	movlw	low STR_21
  4714  005324  6FDC               	movwf	sprintf@fmt& (0+255),b
  4715  005326  0E7D               	movlw	high STR_21
  4716  005328  6FDD               	movwf	(sprintf@fmt+1)& (0+255),b
  4717  00532A  EC73  F031         	call	_sprintf	;wreg free
  4718                           
  4719                           ;main.c: 1342:                 break;
  4720  00532E  EFBF  F029         	goto	l10467
  4721  005332                     l10461:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;main.c: 1345:                 sprintf(buffer, "\r\nEl camino DERECHA se acerca mas al d
      +                          estino\r\n");
  4725  005332  0E9A               	movlw	low _buffer
  4726  005334  6FDA               	movwf	sprintf@s& (0+255),b
  4727  005336  0E01               	movlw	high _buffer
  4728  005338  6FDB               	movwf	(sprintf@s+1)& (0+255),b
  4729  00533A  0E14               	movlw	low STR_22
  4730  00533C  6FDC               	movwf	sprintf@fmt& (0+255),b
  4731  00533E  0E7E               	movlw	high STR_22
  4732  005340  6FDD               	movwf	(sprintf@fmt+1)& (0+255),b
  4733  005342  EC73  F031         	call	_sprintf	;wreg free
  4734                           
  4735                           ;main.c: 1346:                 break;
  4736  005346  EFBF  F029         	goto	l10467
  4737  00534A                     l10465:
  4738                           
  4739                           ; BSR set to: 1
  4740  00534A  0100               	movlb	0	; () banked
  4741  00534C  51F0               	movf	probarMapeoDireccionCruces@caminoActual& (0+255),w,b
  4742  00534E  6FFD               	movwf	??_probarMapeoDireccionCruces& (0+255),b
  4743  005350  6BFE               	clrf	(??_probarMapeoDireccionCruces+1)& (0+255),b
  4744                           
  4745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4746                           ; Switch size 1, requested type "simple"
  4747                           ; Number of cases is 1, Range of values is 0 to 0
  4748                           ; switch strategies available:
  4749                           ; Name         Instructions Cycles
  4750                           ; simple_byte            4     3 (average)
  4751                           ;	Chosen strategy is simple_byte
  4752  005352  51FE               	movf	(??_probarMapeoDireccionCruces+1)& (0+255),w,b
  4753  005354  0A00               	xorlw	0	; case 0
  4754  005356  B4D8               	btfsc	status,2,c
  4755  005358  EFB0  F029         	goto	l11153
  4756  00535C  EFBF  F029         	goto	l10467
  4757  005360                     l11153:
  4758                           
  4759                           ; BSR set to: 0
  4760                           ; Switch size 1, requested type "simple"
  4761                           ; Number of cases is 3, Range of values is 1 to 3
  4762                           ; switch strategies available:
  4763                           ; Name         Instructions Cycles
  4764                           ; simple_byte           10     6 (average)
  4765                           ;	Chosen strategy is simple_byte
  4766  005360  51FD               	movf	??_probarMapeoDireccionCruces& (0+255),w,b
  4767  005362  0A01               	xorlw	1	; case 1
  4768  005364  B4D8               	btfsc	status,2,c
  4769  005366  EF81  F029         	goto	l10457
  4770  00536A  0A03               	xorlw	3	; case 2
  4771  00536C  B4D8               	btfsc	status,2,c
  4772  00536E  EF8D  F029         	goto	l10459
  4773  005372  0A01               	xorlw	1	; case 3
  4774  005374  B4D8               	btfsc	status,2,c
  4775  005376  EF99  F029         	goto	l10461
  4776  00537A  EFBF  F029         	goto	l10467
  4777  00537E                     l10467:
  4778                           
  4779                           ;main.c: 1349:         UART_printf(buffer);
  4780  00537E  0E9A               	movlw	low _buffer
  4781  005380  6E07               	movwf	UART_printf@cadena^0,c
  4782  005382  0E01               	movlw	high _buffer
  4783  005384  6E08               	movwf	(UART_printf@cadena+1)^0,c
  4784  005386  EC3F  F030         	call	_UART_printf	;wreg free
  4785  00538A                     l705:
  4786  00538A  0012               	return		;funcret
  4787  00538C                     __end_of_probarMapeoDireccionCruces:
  4788                           	opt callstack 0
  4789                           
  4790 ;; *************** function _moverCarrito *****************
  4791 ;; Defined at:
  4792 ;;		line 533 in file "main.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  espejearCarr    1    wreg     unsigned char 
  4795 ;;  carroEspejea    2   25[BANK0 ] PTR unsigned char 
  4796 ;;		 -> comportamientoBasico@carroEspejeado(1), 
  4797 ;;  avanceRectoL    2   27[BANK0 ] PTR unsigned char 
  4798 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  espejearCarr    1   31[BANK0 ] unsigned char 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      void 
  4803 ;; Registers used:
  4804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4810 ;;      Params:         0       4       0       0       0       0       0       0       0
  4811 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4812 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4813 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4814 ;;Total ram usage:        7 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    8
  4817 ;; This function calls:
  4818 ;;		_forzarAvanceRecto
  4819 ;;		_forzarEspejeo
  4820 ;; This function is called by:
  4821 ;;		_comportamientoBasico
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text11
  4826  004F72                     __ptext11:
  4827                           	opt callstack 0
  4828  004F72                     _moverCarrito:
  4829                           	opt callstack 21
  4830                           
  4831                           ;incstack = 0
  4832                           ;moverCarrito@espejearCarroY stored from wreg
  4833  004F72  0100               	movlb	0	; () banked
  4834  004F74  6F7F               	movwf	moverCarrito@espejearCarroY& (0+255),b
  4835  004F76                     
  4836                           ;main.c: 535:     switch (mouse.curr_state) {
  4837  004F76  EF1E  F028         	goto	l10061
  4838  004F7A                     l428:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;main.c: 539:             LATB4 = 1;
  4842  004F7A  888A               	bsf	3978,4,c	;volatile
  4843                           
  4844                           ;main.c: 540:             LATB5 = 0;
  4845  004F7C  9A8A               	bcf	3978,5,c	;volatile
  4846                           
  4847                           ;main.c: 541:             LATB6 = 1;
  4848  004F7E  8C8A               	bsf	3978,6,c	;volatile
  4849                           
  4850                           ;main.c: 542:             LATB7 = 0;
  4851  004F80  9E8A               	bcf	3978,7,c	;volatile
  4852  004F82                     
  4853                           ; BSR set to: 0
  4854                           ;main.c: 544:             if (*avanceRectoLargo) {
  4855  004F82  C07B  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4856  004F86  C07C  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4857  004F8A  50DF               	movf	indf2,w,c
  4858  004F8C  B4D8               	btfsc	status,2,c
  4859  004F8E  EFCB  F027         	goto	u10661
  4860  004F92  EFCD  F027         	goto	u10660
  4861  004F96                     u10661:
  4862  004F96  EFE0  F027         	goto	l10043
  4863  004F9A                     u10660:
  4864  004F9A                     
  4865                           ; BSR set to: 0
  4866                           ;main.c: 545:                 *avanceRectoLargo = 0;
  4867  004F9A  C07B  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4868  004F9E  C07C  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4869  004FA2  0E00               	movlw	0
  4870  004FA4  6EDF               	movwf	indf2,c
  4871  004FA6                     
  4872                           ; BSR set to: 0
  4873                           ;main.c: 546:                 _delay((unsigned long)((410 * 2)*(4000000/4000.0)));
  4874  004FA6  0E05               	movlw	5
  4875  004FA8  0100               	movlb	0	; () banked
  4876  004FAA  6F7E               	movwf	(??_moverCarrito+1)& (0+255),b
  4877  004FAC  0E29               	movlw	41
  4878  004FAE  6F7D               	movwf	??_moverCarrito& (0+255),b
  4879  004FB0  0EEA               	movlw	234
  4880  004FB2                     u11457:
  4881  004FB2  2EE8               	decfsz	wreg,f,c
  4882  004FB4  D7FE               	bra	u11457
  4883  004FB6  2F7D               	decfsz	??_moverCarrito& (0+255),f,b
  4884  004FB8  D7FC               	bra	u11457
  4885  004FBA  2F7E               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4886  004FBC  D7FA               	bra	u11457
  4887  004FBE  F000               	nop	
  4888  004FC0                     l10043:
  4889                           
  4890                           ;main.c: 550:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  4891  004FC0  0E48               	movlw	72
  4892  004FC2  0100               	movlb	0	; () banked
  4893  004FC4  6F7D               	movwf	??_moverCarrito& (0+255),b
  4894  004FC6  0E6C               	movlw	108
  4895  004FC8                     u11467:
  4896  004FC8  2EE8               	decfsz	wreg,f,c
  4897  004FCA  D7FE               	bra	u11467
  4898  004FCC  2F7D               	decfsz	??_moverCarrito& (0+255),f,b
  4899  004FCE  D7FC               	bra	u11467
  4900  004FD0  F000               	nop	
  4901  004FD2  EF3D  F028         	goto	l437
  4902  004FD6                     l10045:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;main.c: 556:             if (espejearCarroY) {
  4906  004FD6  517F               	movf	moverCarrito@espejearCarroY& (0+255),w,b
  4907  004FD8  B4D8               	btfsc	status,2,c
  4908  004FDA  EFF1  F027         	goto	u10671
  4909  004FDE  EFF3  F027         	goto	u10670
  4910  004FE2                     u10671:
  4911  004FE2  EFFD  F027         	goto	l433
  4912  004FE6                     u10670:
  4913  004FE6                     
  4914                           ; BSR set to: 0
  4915                           ;main.c: 557:                 forzarEspejeo();
  4916  004FE6  ECA5  F032         	call	_forzarEspejeo	;wreg free
  4917  004FEA                     
  4918                           ;main.c: 558:                 *carroEspejeado = 1;
  4919  004FEA  C079  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
  4920  004FEE  C07A  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
  4921  004FF2  0E01               	movlw	1
  4922  004FF4  6EDF               	movwf	indf2,c
  4923                           
  4924                           ;main.c: 559:             } else {
  4925  004FF6  EF3D  F028         	goto	l437
  4926  004FFA                     l433:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;main.c: 560:                 LATB4 = 0;
  4930  004FFA  988A               	bcf	3978,4,c	;volatile
  4931                           
  4932                           ;main.c: 561:                 LATB5 = 0;
  4933  004FFC  9A8A               	bcf	3978,5,c	;volatile
  4934                           
  4935                           ;main.c: 562:                 LATB6 = 1;
  4936  004FFE  8C8A               	bsf	3978,6,c	;volatile
  4937                           
  4938                           ;main.c: 563:                 LATB7 = 0;
  4939  005000  9E8A               	bcf	3978,7,c	;volatile
  4940  005002                     l10051:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;main.c: 564:                 _delay((unsigned long)((410)*(4000000/4000.0)));
  4944  005002  0E03               	movlw	3
  4945  005004  0100               	movlb	0	; () banked
  4946  005006  6F7E               	movwf	(??_moverCarrito+1)& (0+255),b
  4947  005008  0E15               	movlw	21
  4948  00500A  6F7D               	movwf	??_moverCarrito& (0+255),b
  4949  00500C  0E73               	movlw	115
  4950  00500E                     u11477:
  4951  00500E  2EE8               	decfsz	wreg,f,c
  4952  005010  D7FE               	bra	u11477
  4953  005012  2F7D               	decfsz	??_moverCarrito& (0+255),f,b
  4954  005014  D7FC               	bra	u11477
  4955  005016  2F7E               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4956  005018  D7FA               	bra	u11477
  4957  00501A  D000               	nop2	
  4958  00501C                     
  4959                           ;main.c: 565:                 forzarAvanceRecto();
  4960  00501C  ECB6  F033         	call	_forzarAvanceRecto	;wreg free
  4961  005020  EF3D  F028         	goto	l437
  4962  005024                     l435:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;main.c: 573:             LATB4 = 1;
  4966  005024  888A               	bsf	3978,4,c	;volatile
  4967                           
  4968                           ;main.c: 574:             LATB5 = 0;
  4969  005026  9A8A               	bcf	3978,5,c	;volatile
  4970                           
  4971                           ;main.c: 575:             LATB6 = 0;
  4972  005028  9C8A               	bcf	3978,6,c	;volatile
  4973                           
  4974                           ;main.c: 576:             LATB7 = 0;
  4975  00502A  9E8A               	bcf	3978,7,c	;volatile
  4976  00502C  EF01  F028         	goto	l10051
  4977  005030                     l436:
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;main.c: 585:             LATB4 = 0;
  4981  005030  988A               	bcf	3978,4,c	;volatile
  4982                           
  4983                           ;main.c: 586:             LATB5 = 0;
  4984  005032  9A8A               	bcf	3978,5,c	;volatile
  4985                           
  4986                           ;main.c: 587:             LATB6 = 0;
  4987  005034  9C8A               	bcf	3978,6,c	;volatile
  4988                           
  4989                           ;main.c: 588:             LATB7 = 0;
  4990  005036  9E8A               	bcf	3978,7,c	;volatile
  4991                           
  4992                           ;main.c: 590:             break;
  4993  005038  EF3D  F028         	goto	l437
  4994  00503C                     l10061:
  4995  00503C  0101               	movlb	1	; () banked
  4996  00503E  5134               	movf	_mouse& (0+255),w,b
  4997  005040  0100               	movlb	0	; () banked
  4998  005042  6F7D               	movwf	??_moverCarrito& (0+255),b
  4999  005044  6B7E               	clrf	(??_moverCarrito+1)& (0+255),b
  5000                           
  5001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5002                           ; Switch size 1, requested type "simple"
  5003                           ; Number of cases is 1, Range of values is 0 to 0
  5004                           ; switch strategies available:
  5005                           ; Name         Instructions Cycles
  5006                           ; simple_byte            4     3 (average)
  5007                           ;	Chosen strategy is simple_byte
  5008  005046  517E               	movf	(??_moverCarrito+1)& (0+255),w,b
  5009  005048  0A00               	xorlw	0	; case 0
  5010  00504A  B4D8               	btfsc	status,2,c
  5011  00504C  EF2A  F028         	goto	l11155
  5012  005050  EF3D  F028         	goto	l437
  5013  005054                     l11155:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ; Switch size 1, requested type "simple"
  5017                           ; Number of cases is 4, Range of values is 1 to 4
  5018                           ; switch strategies available:
  5019                           ; Name         Instructions Cycles
  5020                           ; simple_byte           13     7 (average)
  5021                           ;	Chosen strategy is simple_byte
  5022  005054  517D               	movf	??_moverCarrito& (0+255),w,b
  5023  005056  0A01               	xorlw	1	; case 1
  5024  005058  B4D8               	btfsc	status,2,c
  5025  00505A  EFBD  F027         	goto	l428
  5026  00505E  0A03               	xorlw	3	; case 2
  5027  005060  B4D8               	btfsc	status,2,c
  5028  005062  EFEB  F027         	goto	l10045
  5029  005066  0A01               	xorlw	1	; case 3
  5030  005068  B4D8               	btfsc	status,2,c
  5031  00506A  EF12  F028         	goto	l435
  5032  00506E  0A07               	xorlw	7	; case 4
  5033  005070  B4D8               	btfsc	status,2,c
  5034  005072  EF18  F028         	goto	l436
  5035  005076  EF3D  F028         	goto	l437
  5036  00507A                     l437:
  5037  00507A  0012               	return		;funcret
  5038  00507C                     __end_of_moverCarrito:
  5039                           	opt callstack 0
  5040                           
  5041 ;; *************** function _forzarEspejeo *****************
  5042 ;; Defined at:
  5043 ;;		line 525 in file "main.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;		None
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  1    wreg      void 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0
  5058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5061 ;;Total ram usage:        0 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:    7
  5064 ;; This function calls:
  5065 ;;		___flge
  5066 ;;		_forzarEspejeoDerecha
  5067 ;;		_forzarEspejeoIzquierda
  5068 ;; This function is called by:
  5069 ;;		_moverCarrito
  5070 ;;		_finalizarRecorrido
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text12
  5075  00654A                     __ptext12:
  5076                           	opt callstack 0
  5077  00654A                     _forzarEspejeo:
  5078                           	opt callstack 21
  5079  00654A                     
  5080                           ;main.c: 527:     if (sensorIzquierda > sensorDerecha)
  5081  00654A  C055  F06D         	movff	_sensorDerecha,___flge@ff1
  5082  00654E  C056  F06E         	movff	_sensorDerecha+1,___flge@ff1+1
  5083  006552  C057  F06F         	movff	_sensorDerecha+2,___flge@ff1+2
  5084  006556  C058  F070         	movff	_sensorDerecha+3,___flge@ff1+3
  5085  00655A  C128  F071         	movff	_sensorIzquierda,___flge@ff2
  5086  00655E  C129  F072         	movff	_sensorIzquierda+1,___flge@ff2+1
  5087  006562  C12A  F073         	movff	_sensorIzquierda+2,___flge@ff2+2
  5088  006566  C12B  F074         	movff	_sensorIzquierda+3,___flge@ff2+3
  5089  00656A  ECC2  F028         	call	___flge	;wreg free
  5090  00656E  0100               	movlb	0	; () banked
  5091  006570  B0D8               	btfsc	status,0,c
  5092  006572  EFBD  F032         	goto	u10551
  5093  006576  EFBF  F032         	goto	u10550
  5094  00657A                     u10551:
  5095  00657A  EFC3  F032         	goto	l9905
  5096  00657E                     u10550:
  5097  00657E                     
  5098                           ; BSR set to: 0
  5099                           ;main.c: 528:         forzarEspejeoIzquierda();
  5100  00657E  ECF5  F030         	call	_forzarEspejeoIzquierda	;wreg free
  5101  006582  EFC5  F032         	goto	l424
  5102  006586                     l9905:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;main.c: 530:         forzarEspejeoDerecha();
  5106  006586  EC1F  F031         	call	_forzarEspejeoDerecha	;wreg free
  5107  00658A                     l424:
  5108  00658A  0012               	return		;funcret
  5109  00658C                     __end_of_forzarEspejeo:
  5110                           	opt callstack 0
  5111                           
  5112 ;; *************** function _forzarEspejeoIzquierda *****************
  5113 ;; Defined at:
  5114 ;;		line 497 in file "main.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      void 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5128 ;;      Params:         0       0       0       0       0       0       0       0       0
  5129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5130 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5131 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5132 ;;Total ram usage:        1 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    6
  5135 ;; This function calls:
  5136 ;;		_forzarGiroIzquierda
  5137 ;;		_forzarParoAuto
  5138 ;;		_forzarReversa
  5139 ;;		_velocidadEstandar
  5140 ;; This function is called by:
  5141 ;;		_forzarEspejeo
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text13
  5146  0061EA                     __ptext13:
  5147                           	opt callstack 0
  5148  0061EA                     _forzarEspejeoIzquierda:
  5149                           	opt callstack 21
  5150  0061EA                     
  5151                           ;main.c: 499:     forzarParoAuto();
  5152  0061EA  ECE7  F033         	call	_forzarParoAuto	;wreg free
  5153  0061EE                     
  5154                           ;main.c: 500:     velocidadEstandar();
  5155  0061EE  EC6C  F033         	call	_velocidadEstandar	;wreg free
  5156  0061F2                     
  5157                           ;main.c: 501:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5158  0061F2  0E82               	movlw	130
  5159  0061F4  0100               	movlb	0	; () banked
  5160  0061F6  6F78               	movwf	??_forzarEspejeoIzquierda& (0+255),b
  5161  0061F8  0EDD               	movlw	221
  5162  0061FA                     u11487:
  5163  0061FA  2EE8               	decfsz	wreg,f,c
  5164  0061FC  D7FE               	bra	u11487
  5165  0061FE  2F78               	decfsz	??_forzarEspejeoIzquierda& (0+255),f,b
  5166  006200  D7FC               	bra	u11487
  5167  006202  D000               	nop2	
  5168  006204                     
  5169                           ;main.c: 502:     forzarGiroIzquierda();
  5170  006204  ECC7  F033         	call	_forzarGiroIzquierda	;wreg free
  5171  006208                     
  5172                           ;main.c: 503:     forzarParoAuto();
  5173  006208  ECE7  F033         	call	_forzarParoAuto	;wreg free
  5174  00620C                     
  5175                           ;main.c: 504:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5176  00620C  0E82               	movlw	130
  5177  00620E  0100               	movlb	0	; () banked
  5178  006210  6F78               	movwf	??_forzarEspejeoIzquierda& (0+255),b
  5179  006212  0EDD               	movlw	221
  5180  006214                     u11497:
  5181  006214  2EE8               	decfsz	wreg,f,c
  5182  006216  D7FE               	bra	u11497
  5183  006218  2F78               	decfsz	??_forzarEspejeoIzquierda& (0+255),f,b
  5184  00621A  D7FC               	bra	u11497
  5185  00621C  D000               	nop2	
  5186  00621E                     
  5187                           ;main.c: 505:     forzarReversa();
  5188  00621E  ECA5  F033         	call	_forzarReversa	;wreg free
  5189  006222                     
  5190                           ;main.c: 506:     forzarParoAuto();
  5191  006222  ECE7  F033         	call	_forzarParoAuto	;wreg free
  5192  006226                     
  5193                           ;main.c: 507:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5194  006226  0E82               	movlw	130
  5195  006228  0100               	movlb	0	; () banked
  5196  00622A  6F78               	movwf	??_forzarEspejeoIzquierda& (0+255),b
  5197  00622C  0EDD               	movlw	221
  5198  00622E                     u11507:
  5199  00622E  2EE8               	decfsz	wreg,f,c
  5200  006230  D7FE               	bra	u11507
  5201  006232  2F78               	decfsz	??_forzarEspejeoIzquierda& (0+255),f,b
  5202  006234  D7FC               	bra	u11507
  5203  006236  D000               	nop2	
  5204  006238                     
  5205                           ;main.c: 508:     forzarGiroIzquierda();
  5206  006238  ECC7  F033         	call	_forzarGiroIzquierda	;wreg free
  5207  00623C  0012               	return		;funcret
  5208  00623E                     __end_of_forzarEspejeoIzquierda:
  5209                           	opt callstack 0
  5210                           
  5211 ;; *************** function _forzarGiroIzquierda *****************
  5212 ;; Defined at:
  5213 ;;		line 479 in file "main.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5227 ;;      Params:         0       0       0       0       0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5229 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5230 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5231 ;;Total ram usage:        2 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    2
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_forzarEspejeoIzquierda
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text14
  5242  00678E                     __ptext14:
  5243                           	opt callstack 0
  5244  00678E                     _forzarGiroIzquierda:
  5245                           	opt callstack 24
  5246  00678E                     
  5247                           ;main.c: 480:     LATB4 = 0;
  5248  00678E  988A               	bcf	3978,4,c	;volatile
  5249                           
  5250                           ;main.c: 481:     LATB5 = 0;
  5251  006790  9A8A               	bcf	3978,5,c	;volatile
  5252                           
  5253                           ;main.c: 482:     LATB6 = 1;
  5254  006792  8C8A               	bsf	3978,6,c	;volatile
  5255                           
  5256                           ;main.c: 483:     LATB7 = 0;
  5257  006794  9E8A               	bcf	3978,7,c	;volatile
  5258  006796                     
  5259                           ;main.c: 484:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5260  006796  0E03               	movlw	3
  5261  006798  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
  5262  00679A  0E15               	movlw	21
  5263  00679C  6E06               	movwf	??_forzarGiroIzquierda^0,c
  5264  00679E  0E74               	movlw	116
  5265  0067A0                     u11517:
  5266  0067A0  2EE8               	decfsz	wreg,f,c
  5267  0067A2  D7FE               	bra	u11517
  5268  0067A4  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
  5269  0067A6  D7FC               	bra	u11517
  5270  0067A8  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
  5271  0067AA  D7FA               	bra	u11517
  5272  0067AC  0012               	return		;funcret
  5273  0067AE                     __end_of_forzarGiroIzquierda:
  5274                           	opt callstack 0
  5275                           
  5276 ;; *************** function _forzarEspejeoDerecha *****************
  5277 ;; Defined at:
  5278 ;;		line 511 in file "main.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5292 ;;      Params:         0       0       0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5294 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5295 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5296 ;;Total ram usage:        1 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    6
  5299 ;; This function calls:
  5300 ;;		_forzarGiroDerecha
  5301 ;;		_forzarParoAuto
  5302 ;;		_forzarReversa
  5303 ;;		_velocidadEstandar
  5304 ;; This function is called by:
  5305 ;;		_forzarEspejeo
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text15
  5310  00623E                     __ptext15:
  5311                           	opt callstack 0
  5312  00623E                     _forzarEspejeoDerecha:
  5313                           	opt callstack 21
  5314  00623E                     
  5315                           ;main.c: 513:     forzarParoAuto();
  5316  00623E  ECE7  F033         	call	_forzarParoAuto	;wreg free
  5317  006242                     
  5318                           ;main.c: 514:     velocidadEstandar();
  5319  006242  EC6C  F033         	call	_velocidadEstandar	;wreg free
  5320  006246                     
  5321                           ;main.c: 515:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5322  006246  0E82               	movlw	130
  5323  006248  0100               	movlb	0	; () banked
  5324  00624A  6F78               	movwf	??_forzarEspejeoDerecha& (0+255),b
  5325  00624C  0EDD               	movlw	221
  5326  00624E                     u11527:
  5327  00624E  2EE8               	decfsz	wreg,f,c
  5328  006250  D7FE               	bra	u11527
  5329  006252  2F78               	decfsz	??_forzarEspejeoDerecha& (0+255),f,b
  5330  006254  D7FC               	bra	u11527
  5331  006256  D000               	nop2	
  5332  006258                     
  5333                           ;main.c: 516:     forzarGiroDerecha();
  5334  006258  ECD7  F033         	call	_forzarGiroDerecha	;wreg free
  5335  00625C                     
  5336                           ;main.c: 517:     forzarParoAuto();
  5337  00625C  ECE7  F033         	call	_forzarParoAuto	;wreg free
  5338  006260                     
  5339                           ;main.c: 518:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5340  006260  0E82               	movlw	130
  5341  006262  0100               	movlb	0	; () banked
  5342  006264  6F78               	movwf	??_forzarEspejeoDerecha& (0+255),b
  5343  006266  0EDD               	movlw	221
  5344  006268                     u11537:
  5345  006268  2EE8               	decfsz	wreg,f,c
  5346  00626A  D7FE               	bra	u11537
  5347  00626C  2F78               	decfsz	??_forzarEspejeoDerecha& (0+255),f,b
  5348  00626E  D7FC               	bra	u11537
  5349  006270  D000               	nop2	
  5350  006272                     
  5351                           ;main.c: 519:     forzarReversa();
  5352  006272  ECA5  F033         	call	_forzarReversa	;wreg free
  5353  006276                     
  5354                           ;main.c: 520:     forzarParoAuto();
  5355  006276  ECE7  F033         	call	_forzarParoAuto	;wreg free
  5356  00627A                     
  5357                           ;main.c: 521:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5358  00627A  0E82               	movlw	130
  5359  00627C  0100               	movlb	0	; () banked
  5360  00627E  6F78               	movwf	??_forzarEspejeoDerecha& (0+255),b
  5361  006280  0EDD               	movlw	221
  5362  006282                     u11547:
  5363  006282  2EE8               	decfsz	wreg,f,c
  5364  006284  D7FE               	bra	u11547
  5365  006286  2F78               	decfsz	??_forzarEspejeoDerecha& (0+255),f,b
  5366  006288  D7FC               	bra	u11547
  5367  00628A  D000               	nop2	
  5368  00628C                     
  5369                           ;main.c: 522:     forzarGiroDerecha();
  5370  00628C  ECD7  F033         	call	_forzarGiroDerecha	;wreg free
  5371  006290  0012               	return		;funcret
  5372  006292                     __end_of_forzarEspejeoDerecha:
  5373                           	opt callstack 0
  5374                           
  5375 ;; *************** function _velocidadEstandar *****************
  5376 ;; Defined at:
  5377 ;;		line 1292 in file "main.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  1    wreg      void 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5394 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5395 ;;Total ram usage:        0 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    5
  5398 ;; This function calls:
  5399 ;;		_pwmDuty
  5400 ;; This function is called by:
  5401 ;;		_inicializarComportamientoBasico
  5402 ;;		_comportamientoBasico
  5403 ;;		_forzarEspejeoIzquierda
  5404 ;;		_forzarEspejeoDerecha
  5405 ;;		_regresarAlCruce
  5406 ;;		_probarCruceT
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text16
  5411  0066D8                     __ptext16:
  5412                           	opt callstack 0
  5413  0066D8                     _velocidadEstandar:
  5414                           	opt callstack 24
  5415  0066D8                     
  5416                           ;main.c: 1294:     pwmDuty(100, 1);
  5417  0066D8  0E00               	movlw	0
  5418  0066DA  0100               	movlb	0	; () banked
  5419  0066DC  6F72               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5420  0066DE  0E64               	movlw	100
  5421  0066E0  6F71               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5422  0066E2  0E01               	movlw	1
  5423  0066E4  6F73               	movwf	pwmDuty@channel& (0+255),b
  5424  0066E6  EC6F  F022         	call	_pwmDuty	;wreg free
  5425                           
  5426                           ;main.c: 1295:     pwmDuty(100, 2);
  5427  0066EA  0E00               	movlw	0
  5428  0066EC  0100               	movlb	0	; () banked
  5429  0066EE  6F72               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5430  0066F0  0E64               	movlw	100
  5431  0066F2  6F71               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5432  0066F4  0E02               	movlw	2
  5433  0066F6  6F73               	movwf	pwmDuty@channel& (0+255),b
  5434  0066F8  EC6F  F022         	call	_pwmDuty	;wreg free
  5435  0066FC  0012               	return		;funcret
  5436  0066FE                     __end_of_velocidadEstandar:
  5437                           	opt callstack 0
  5438                           
  5439 ;; *************** function _forzarReversa *****************
  5440 ;; Defined at:
  5441 ;;		line 459 in file "main.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      void 
  5448 ;; Registers used:
  5449 ;;		wreg
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5455 ;;      Params:         0       0       0       0       0       0       0       0       0
  5456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5457 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5458 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5459 ;;Total ram usage:        2 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    2
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_forzarEspejeoIzquierda
  5466 ;;		_forzarEspejeoDerecha
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text17
  5471  00674A                     __ptext17:
  5472                           	opt callstack 0
  5473  00674A                     _forzarReversa:
  5474                           	opt callstack 24
  5475  00674A                     
  5476                           ;main.c: 460:     LATB4 = 0;
  5477  00674A  988A               	bcf	3978,4,c	;volatile
  5478                           
  5479                           ;main.c: 461:     LATB5 = 1;
  5480  00674C  8A8A               	bsf	3978,5,c	;volatile
  5481                           
  5482                           ;main.c: 462:     LATB6 = 0;
  5483  00674E  9C8A               	bcf	3978,6,c	;volatile
  5484                           
  5485                           ;main.c: 463:     LATB7 = 1;
  5486  006750  8E8A               	bsf	3978,7,c	;volatile
  5487  006752                     
  5488                           ;main.c: 465:     _delay((unsigned long)((400)*(4000000/4000.0)));
  5489  006752  0E03               	movlw	3
  5490  006754  6E07               	movwf	(??_forzarReversa+1)^0,c
  5491  006756  0E08               	movlw	8
  5492  006758  6E06               	movwf	??_forzarReversa^0,c
  5493  00675A  0E77               	movlw	119
  5494  00675C                     u11557:
  5495  00675C  2EE8               	decfsz	wreg,f,c
  5496  00675E  D7FE               	bra	u11557
  5497  006760  2E06               	decfsz	??_forzarReversa^0,f,c
  5498  006762  D7FC               	bra	u11557
  5499  006764  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  5500  006766  D7FA               	bra	u11557
  5501  006768  F000               	nop	
  5502  00676A  0012               	return		;funcret
  5503  00676C                     __end_of_forzarReversa:
  5504                           	opt callstack 0
  5505                           
  5506 ;; *************** function _forzarParoAuto *****************
  5507 ;; Defined at:
  5508 ;;		line 446 in file "main.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5522 ;;      Params:         0       0       0       0       0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5524 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5525 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5526 ;;Total ram usage:        1 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    2
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_comportamientoBasico
  5533 ;;		_forzarEspejeoIzquierda
  5534 ;;		_forzarEspejeoDerecha
  5535 ;;		_main
  5536 ;;		_finalizarRecorrido
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text18
  5541  0067CE                     __ptext18:
  5542                           	opt callstack 0
  5543  0067CE                     _forzarParoAuto:
  5544                           	opt callstack 28
  5545  0067CE                     
  5546                           ;main.c: 448:     LATB4 = 0;
  5547  0067CE  988A               	bcf	3978,4,c	;volatile
  5548                           
  5549                           ;main.c: 449:     LATB5 = 0;
  5550  0067D0  9A8A               	bcf	3978,5,c	;volatile
  5551                           
  5552                           ;main.c: 450:     LATB6 = 0;
  5553  0067D2  9C8A               	bcf	3978,6,c	;volatile
  5554                           
  5555                           ;main.c: 453:     if (!0)
  5556  0067D4  9E8A               	bcf	3978,7,c	;volatile
  5557  0067D6                     
  5558                           ;main.c: 454:         _delay((unsigned long)((30)*(4000000/4000.0)));
  5559  0067D6  0E27               	movlw	39
  5560  0067D8  6E06               	movwf	??_forzarParoAuto^0,c
  5561  0067DA  0EF5               	movlw	245
  5562  0067DC                     u11567:
  5563  0067DC  2EE8               	decfsz	wreg,f,c
  5564  0067DE  D7FE               	bra	u11567
  5565  0067E0  2E06               	decfsz	??_forzarParoAuto^0,f,c
  5566  0067E2  D7FC               	bra	u11567
  5567  0067E4  F000               	nop	
  5568  0067E6  0012               	return		;funcret
  5569  0067E8                     __end_of_forzarParoAuto:
  5570                           	opt callstack 0
  5571                           
  5572 ;; *************** function _forzarGiroDerecha *****************
  5573 ;; Defined at:
  5574 ;;		line 488 in file "main.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;		None
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;		None
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5588 ;;      Params:         0       0       0       0       0       0       0       0       0
  5589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5590 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5591 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5592 ;;Total ram usage:        2 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; Hardware stack levels required when called:    2
  5595 ;; This function calls:
  5596 ;;		Nothing
  5597 ;; This function is called by:
  5598 ;;		_forzarEspejeoDerecha
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text19
  5603  0067AE                     __ptext19:
  5604                           	opt callstack 0
  5605  0067AE                     _forzarGiroDerecha:
  5606                           	opt callstack 24
  5607  0067AE                     
  5608                           ;main.c: 489:     LATB4 = 1;
  5609  0067AE  888A               	bsf	3978,4,c	;volatile
  5610                           
  5611                           ;main.c: 490:     LATB5 = 0;
  5612  0067B0  9A8A               	bcf	3978,5,c	;volatile
  5613                           
  5614                           ;main.c: 491:     LATB6 = 0;
  5615  0067B2  9C8A               	bcf	3978,6,c	;volatile
  5616                           
  5617                           ;main.c: 492:     LATB7 = 0;
  5618  0067B4  9E8A               	bcf	3978,7,c	;volatile
  5619  0067B6                     
  5620                           ;main.c: 493:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5621  0067B6  0E03               	movlw	3
  5622  0067B8  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
  5623  0067BA  0E15               	movlw	21
  5624  0067BC  6E06               	movwf	??_forzarGiroDerecha^0,c
  5625  0067BE  0E74               	movlw	116
  5626  0067C0                     u11577:
  5627  0067C0  2EE8               	decfsz	wreg,f,c
  5628  0067C2  D7FE               	bra	u11577
  5629  0067C4  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
  5630  0067C6  D7FC               	bra	u11577
  5631  0067C8  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
  5632  0067CA  D7FA               	bra	u11577
  5633  0067CC  0012               	return		;funcret
  5634  0067CE                     __end_of_forzarGiroDerecha:
  5635                           	opt callstack 0
  5636                           
  5637 ;; *************** function _forzarAvanceRecto *****************
  5638 ;; Defined at:
  5639 ;;		line 469 in file "main.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;		None
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;		None
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5653 ;;      Params:         0       0       0       0       0       0       0       0       0
  5654 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5655 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5656 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5657 ;;Total ram usage:        2 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    2
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_moverCarrito
  5664 ;;		_mover
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text20
  5669  00676C                     __ptext20:
  5670                           	opt callstack 0
  5671  00676C                     _forzarAvanceRecto:
  5672                           	opt callstack 25
  5673  00676C                     
  5674                           ;main.c: 470:     LATB4 = 1;
  5675  00676C  888A               	bsf	3978,4,c	;volatile
  5676                           
  5677                           ;main.c: 471:     LATB5 = 0;
  5678  00676E  9A8A               	bcf	3978,5,c	;volatile
  5679                           
  5680                           ;main.c: 472:     LATB6 = 1;
  5681  006770  8C8A               	bsf	3978,6,c	;volatile
  5682                           
  5683                           ;main.c: 473:     LATB7 = 0;
  5684  006772  9E8A               	bcf	3978,7,c	;volatile
  5685  006774                     
  5686                           ;main.c: 475:     _delay((unsigned long)((550)*(4000000/4000.0)));
  5687  006774  0E03               	movlw	3
  5688  006776  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
  5689  006778  0ECB               	movlw	203
  5690  00677A  6E06               	movwf	??_forzarAvanceRecto^0,c
  5691  00677C  0E45               	movlw	69
  5692  00677E                     u11587:
  5693  00677E  2EE8               	decfsz	wreg,f,c
  5694  006780  D7FE               	bra	u11587
  5695  006782  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
  5696  006784  D7FC               	bra	u11587
  5697  006786  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
  5698  006788  D7FA               	bra	u11587
  5699  00678A  F000               	nop	
  5700  00678C  0012               	return		;funcret
  5701  00678E                     __end_of_forzarAvanceRecto:
  5702                           	opt callstack 0
  5703                           
  5704 ;; *************** function _limpiarMovimientos *****************
  5705 ;; Defined at:
  5706 ;;		line 803 in file "main.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
  5709 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  5710 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
  5711 ;;		 -> comportamientoBasico@numMovimientos(2), 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;  i               2   11[COMRAM] int 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5723 ;;      Params:         4       0       0       0       0       0       0       0       0
  5724 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5725 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5726 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5727 ;;Total ram usage:        8 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    2
  5730 ;; This function calls:
  5731 ;;		Nothing
  5732 ;; This function is called by:
  5733 ;;		_comportamientoBasico
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text21
  5738  00642A                     __ptext21:
  5739                           	opt callstack 0
  5740  00642A                     _limpiarMovimientos:
  5741                           	opt callstack 27
  5742  00642A                     
  5743                           ;main.c: 805:     for (T_INT i = 0; i < *numMovimientos; i++)
  5744  00642A  0E00               	movlw	0
  5745  00642C  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
  5746  00642E  0E00               	movlw	0
  5747  006430  6E0C               	movwf	limpiarMovimientos@i^0,c
  5748  006432  EF25  F032         	goto	l7695
  5749  006436                     l7691:
  5750                           
  5751                           ;main.c: 806:         movimientos[i] = 0;
  5752  006436  500C               	movf	limpiarMovimientos@i^0,w,c
  5753  006438  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
  5754  00643A  6ED9               	movwf	fsr2l,c
  5755  00643C  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
  5756  00643E  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
  5757  006440  6EDA               	movwf	fsr2h,c
  5758  006442  0E00               	movlw	0
  5759  006444  6EDF               	movwf	indf2,c
  5760  006446  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
  5761  006448  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
  5762  00644A                     l7695:
  5763  00644A  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
  5764  00644E  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
  5765  006452  50DE               	movf	postinc2,w,c
  5766  006454  5C0C               	subwf	limpiarMovimientos@i^0,w,c
  5767  006456  50DE               	movf	postinc2,w,c
  5768  006458  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
  5769  00645A  A0D8               	btfss	status,0,c
  5770  00645C  EF32  F032         	goto	u7991
  5771  006460  EF34  F032         	goto	u7990
  5772  006464                     u7991:
  5773  006464  EF1B  F032         	goto	l7691
  5774  006468                     u7990:
  5775  006468                     
  5776                           ;main.c: 808:     *numMovimientos = 0;
  5777  006468  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
  5778  00646C  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
  5779  006470  0E00               	movlw	0
  5780  006472  6EDE               	movwf	postinc2,c
  5781  006474  0E00               	movlw	0
  5782  006476  6EDD               	movwf	postdec2,c
  5783  006478  0012               	return		;funcret
  5784  00647A                     __end_of_limpiarMovimientos:
  5785                           	opt callstack 0
  5786                           
  5787 ;; *************** function _leerSensores *****************
  5788 ;; Defined at:
  5789 ;;		line 1209 in file "main.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0
  5804 ;;      Locals:         0       0       4       0       0       0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5806 ;;      Totals:         0       0       4       0       0       0       0       0       0
  5807 ;;Total ram usage:        4 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; Hardware stack levels required when called:    7
  5810 ;; This function calls:
  5811 ;;		___fladd
  5812 ;;		___fldiv
  5813 ;;		___flsub
  5814 ;;		_dameDistancia
  5815 ;; This function is called by:
  5816 ;;		_comportamientoBasico
  5817 ;;		_probarSensores
  5818 ;;		_probarCruceT
  5819 ;;		_probarPID
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text22
  5824  003C78                     __ptext22:
  5825                           	opt callstack 0
  5826  003C78                     _leerSensores:
  5827                           	opt callstack 22
  5828  003C78                     
  5829                           ;main.c: 1211:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  5830  003C78  0E03               	movlw	3
  5831  003C7A  EC0D  F02E         	call	_dameDistancia
  5832  003C7E  C0F9  F1E3         	movff	?_dameDistancia,_leerSensores$1890
  5833  003C82  C0FA  F1E4         	movff	?_dameDistancia+1,_leerSensores$1890+1
  5834  003C86  C0FB  F1E5         	movff	?_dameDistancia+2,_leerSensores$1890+2
  5835  003C8A  C0FC  F1E6         	movff	?_dameDistancia+3,_leerSensores$1890+3
  5836  003C8E                     
  5837                           ;main.c: 1211:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  5838  003C8E  C120  F00A         	movff	_oldSensorDerecha,___fladd@a
  5839  003C92  C121  F00B         	movff	_oldSensorDerecha+1,___fladd@a+1
  5840  003C96  C122  F00C         	movff	_oldSensorDerecha+2,___fladd@a+2
  5841  003C9A  C123  F00D         	movff	_oldSensorDerecha+3,___fladd@a+3
  5842  003C9E  C1E3  F006         	movff	_leerSensores$1890,___fladd@b
  5843  003CA2  C1E4  F007         	movff	_leerSensores$1890+1,___fladd@b+1
  5844  003CA6  C1E5  F008         	movff	_leerSensores$1890+2,___fladd@b+2
  5845  003CAA  C1E6  F009         	movff	_leerSensores$1890+3,___fladd@b+3
  5846  003CAE  EC28  F013         	call	___fladd	;wreg free
  5847  003CB2  C006  F021         	movff	?___fladd,___fldiv@b
  5848  003CB6  C007  F022         	movff	?___fladd+1,___fldiv@b+1
  5849  003CBA  C008  F023         	movff	?___fladd+2,___fldiv@b+2
  5850  003CBE  C009  F024         	movff	?___fladd+3,___fldiv@b+3
  5851  003CC2  0E00               	movlw	0
  5852  003CC4  6E25               	movwf	___fldiv@a^0,c
  5853  003CC6  0E00               	movlw	0
  5854  003CC8  6E26               	movwf	(___fldiv@a+1)^0,c
  5855  003CCA  0E00               	movlw	0
  5856  003CCC  6E27               	movwf	(___fldiv@a+2)^0,c
  5857  003CCE  0E40               	movlw	64
  5858  003CD0  6E28               	movwf	(___fldiv@a+3)^0,c
  5859  003CD2  EC85  F019         	call	___fldiv	;wreg free
  5860  003CD6  C021  F055         	movff	?___fldiv,_sensorDerecha
  5861  003CDA  C022  F056         	movff	?___fldiv+1,_sensorDerecha+1
  5862  003CDE  C023  F057         	movff	?___fldiv+2,_sensorDerecha+2
  5863  003CE2  C024  F058         	movff	?___fldiv+3,_sensorDerecha+3
  5864  003CE6                     
  5865                           ;main.c: 1212:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  5866  003CE6  0E02               	movlw	2
  5867  003CE8  EC0D  F02E         	call	_dameDistancia
  5868  003CEC  C0F9  F1E3         	movff	?_dameDistancia,_leerSensores$1890
  5869  003CF0  C0FA  F1E4         	movff	?_dameDistancia+1,_leerSensores$1890+1
  5870  003CF4  C0FB  F1E5         	movff	?_dameDistancia+2,_leerSensores$1890+2
  5871  003CF8  C0FC  F1E6         	movff	?_dameDistancia+3,_leerSensores$1890+3
  5872                           
  5873                           ;main.c: 1212:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  5874  003CFC  C11C  F00A         	movff	_oldSensorIzquierda,___fladd@a
  5875  003D00  C11D  F00B         	movff	_oldSensorIzquierda+1,___fladd@a+1
  5876  003D04  C11E  F00C         	movff	_oldSensorIzquierda+2,___fladd@a+2
  5877  003D08  C11F  F00D         	movff	_oldSensorIzquierda+3,___fladd@a+3
  5878  003D0C  C1E3  F006         	movff	_leerSensores$1890,___fladd@b
  5879  003D10  C1E4  F007         	movff	_leerSensores$1890+1,___fladd@b+1
  5880  003D14  C1E5  F008         	movff	_leerSensores$1890+2,___fladd@b+2
  5881  003D18  C1E6  F009         	movff	_leerSensores$1890+3,___fladd@b+3
  5882  003D1C  EC28  F013         	call	___fladd	;wreg free
  5883  003D20  C006  F021         	movff	?___fladd,___fldiv@b
  5884  003D24  C007  F022         	movff	?___fladd+1,___fldiv@b+1
  5885  003D28  C008  F023         	movff	?___fladd+2,___fldiv@b+2
  5886  003D2C  C009  F024         	movff	?___fladd+3,___fldiv@b+3
  5887  003D30  0E00               	movlw	0
  5888  003D32  6E25               	movwf	___fldiv@a^0,c
  5889  003D34  0E00               	movlw	0
  5890  003D36  6E26               	movwf	(___fldiv@a+1)^0,c
  5891  003D38  0E00               	movlw	0
  5892  003D3A  6E27               	movwf	(___fldiv@a+2)^0,c
  5893  003D3C  0E40               	movlw	64
  5894  003D3E  6E28               	movwf	(___fldiv@a+3)^0,c
  5895  003D40  EC85  F019         	call	___fldiv	;wreg free
  5896  003D44  C021  F128         	movff	?___fldiv,_sensorIzquierda
  5897  003D48  C022  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  5898  003D4C  C023  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  5899  003D50  C024  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  5900  003D54                     
  5901                           ;main.c: 1213:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  5902  003D54  0E01               	movlw	1
  5903  003D56  EC0D  F02E         	call	_dameDistancia
  5904  003D5A  C0F9  F1E3         	movff	?_dameDistancia,_leerSensores$1890
  5905  003D5E  C0FA  F1E4         	movff	?_dameDistancia+1,_leerSensores$1890+1
  5906  003D62  C0FB  F1E5         	movff	?_dameDistancia+2,_leerSensores$1890+2
  5907  003D66  C0FC  F1E6         	movff	?_dameDistancia+3,_leerSensores$1890+3
  5908  003D6A                     
  5909                           ;main.c: 1213:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  5910  003D6A  C118  F00A         	movff	_oldSensorEnfrente,___fladd@a
  5911  003D6E  C119  F00B         	movff	_oldSensorEnfrente+1,___fladd@a+1
  5912  003D72  C11A  F00C         	movff	_oldSensorEnfrente+2,___fladd@a+2
  5913  003D76  C11B  F00D         	movff	_oldSensorEnfrente+3,___fladd@a+3
  5914  003D7A  C1E3  F006         	movff	_leerSensores$1890,___fladd@b
  5915  003D7E  C1E4  F007         	movff	_leerSensores$1890+1,___fladd@b+1
  5916  003D82  C1E5  F008         	movff	_leerSensores$1890+2,___fladd@b+2
  5917  003D86  C1E6  F009         	movff	_leerSensores$1890+3,___fladd@b+3
  5918  003D8A  EC28  F013         	call	___fladd	;wreg free
  5919  003D8E  C006  F021         	movff	?___fladd,___fldiv@b
  5920  003D92  C007  F022         	movff	?___fladd+1,___fldiv@b+1
  5921  003D96  C008  F023         	movff	?___fladd+2,___fldiv@b+2
  5922  003D9A  C009  F024         	movff	?___fladd+3,___fldiv@b+3
  5923  003D9E  0E00               	movlw	0
  5924  003DA0  6E25               	movwf	___fldiv@a^0,c
  5925  003DA2  0E00               	movlw	0
  5926  003DA4  6E26               	movwf	(___fldiv@a+1)^0,c
  5927  003DA6  0E00               	movlw	0
  5928  003DA8  6E27               	movwf	(___fldiv@a+2)^0,c
  5929  003DAA  0E40               	movlw	64
  5930  003DAC  6E28               	movwf	(___fldiv@a+3)^0,c
  5931  003DAE  EC85  F019         	call	___fldiv	;wreg free
  5932  003DB2  C021  F124         	movff	?___fldiv,_sensorEnfrente
  5933  003DB6  C022  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  5934  003DBA  C023  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  5935  003DBE  C024  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  5936  003DC2                     
  5937                           ;main.c: 1215:     sensorDerecha -= 1.7;
  5938  003DC2  C055  F019         	movff	_sensorDerecha,___flsub@b
  5939  003DC6  C056  F01A         	movff	_sensorDerecha+1,___flsub@b+1
  5940  003DCA  C057  F01B         	movff	_sensorDerecha+2,___flsub@b+2
  5941  003DCE  C058  F01C         	movff	_sensorDerecha+3,___flsub@b+3
  5942  003DD2  0E9A               	movlw	154
  5943  003DD4  6E1D               	movwf	___flsub@a^0,c
  5944  003DD6  0E99               	movlw	153
  5945  003DD8  6E1E               	movwf	(___flsub@a+1)^0,c
  5946  003DDA  0ED9               	movlw	217
  5947  003DDC  6E1F               	movwf	(___flsub@a+2)^0,c
  5948  003DDE  0E3F               	movlw	63
  5949  003DE0  6E20               	movwf	(___flsub@a+3)^0,c
  5950  003DE2  EC3D  F032         	call	___flsub	;wreg free
  5951  003DE6  C019  F055         	movff	?___flsub,_sensorDerecha
  5952  003DEA  C01A  F056         	movff	?___flsub+1,_sensorDerecha+1
  5953  003DEE  C01B  F057         	movff	?___flsub+2,_sensorDerecha+2
  5954  003DF2  C01C  F058         	movff	?___flsub+3,_sensorDerecha+3
  5955  003DF6                     
  5956                           ;main.c: 1216:     sensorIzquierda -= 1.7;
  5957  003DF6  C128  F019         	movff	_sensorIzquierda,___flsub@b
  5958  003DFA  C129  F01A         	movff	_sensorIzquierda+1,___flsub@b+1
  5959  003DFE  C12A  F01B         	movff	_sensorIzquierda+2,___flsub@b+2
  5960  003E02  C12B  F01C         	movff	_sensorIzquierda+3,___flsub@b+3
  5961  003E06  0E9A               	movlw	154
  5962  003E08  6E1D               	movwf	___flsub@a^0,c
  5963  003E0A  0E99               	movlw	153
  5964  003E0C  6E1E               	movwf	(___flsub@a+1)^0,c
  5965  003E0E  0ED9               	movlw	217
  5966  003E10  6E1F               	movwf	(___flsub@a+2)^0,c
  5967  003E12  0E3F               	movlw	63
  5968  003E14  6E20               	movwf	(___flsub@a+3)^0,c
  5969  003E16  EC3D  F032         	call	___flsub	;wreg free
  5970  003E1A  C019  F128         	movff	?___flsub,_sensorIzquierda
  5971  003E1E  C01A  F129         	movff	?___flsub+1,_sensorIzquierda+1
  5972  003E22  C01B  F12A         	movff	?___flsub+2,_sensorIzquierda+2
  5973  003E26  C01C  F12B         	movff	?___flsub+3,_sensorIzquierda+3
  5974  003E2A                     
  5975                           ;main.c: 1217:     sensorEnfrente -= 1.7;
  5976  003E2A  C124  F019         	movff	_sensorEnfrente,___flsub@b
  5977  003E2E  C125  F01A         	movff	_sensorEnfrente+1,___flsub@b+1
  5978  003E32  C126  F01B         	movff	_sensorEnfrente+2,___flsub@b+2
  5979  003E36  C127  F01C         	movff	_sensorEnfrente+3,___flsub@b+3
  5980  003E3A  0E9A               	movlw	154
  5981  003E3C  6E1D               	movwf	___flsub@a^0,c
  5982  003E3E  0E99               	movlw	153
  5983  003E40  6E1E               	movwf	(___flsub@a+1)^0,c
  5984  003E42  0ED9               	movlw	217
  5985  003E44  6E1F               	movwf	(___flsub@a+2)^0,c
  5986  003E46  0E3F               	movlw	63
  5987  003E48  6E20               	movwf	(___flsub@a+3)^0,c
  5988  003E4A  EC3D  F032         	call	___flsub	;wreg free
  5989  003E4E  C019  F124         	movff	?___flsub,_sensorEnfrente
  5990  003E52  C01A  F125         	movff	?___flsub+1,_sensorEnfrente+1
  5991  003E56  C01B  F126         	movff	?___flsub+2,_sensorEnfrente+2
  5992  003E5A  C01C  F127         	movff	?___flsub+3,_sensorEnfrente+3
  5993  003E5E                     
  5994                           ;main.c: 1219:     oldSensorDerecha = sensorDerecha;
  5995  003E5E  C055  F120         	movff	_sensorDerecha,_oldSensorDerecha
  5996  003E62  C056  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  5997  003E66  C057  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  5998  003E6A  C058  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  5999  003E6E                     
  6000                           ;main.c: 1220:     oldSensorIzquierda = sensorIzquierda;
  6001  003E6E  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  6002  003E72  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  6003  003E76  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  6004  003E7A  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  6005  003E7E                     
  6006                           ;main.c: 1221:     oldSensorEnfrente = sensorEnfrente;
  6007  003E7E  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  6008  003E82  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  6009  003E86  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  6010  003E8A  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  6011  003E8E                     
  6012                           ;main.c: 1226:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  6013  003E8E  C055  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  6014  003E92  C056  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  6015  003E96  C057  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  6016  003E9A  C058  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  6017  003E9E                     
  6018                           ;main.c: 1235:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  6019  003E9E  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  6020  003EA2  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  6021  003EA6  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  6022  003EAA  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  6023  003EAE                     
  6024                           ;main.c: 1238:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  6025  003EAE  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  6026  003EB2  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  6027  003EB6  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  6028  003EBA  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  6029  003EBE  0012               	return		;funcret
  6030  003EC0                     __end_of_leerSensores:
  6031                           	opt callstack 0
  6032                           
  6033 ;; *************** function _dameDistancia *****************
  6034 ;; Defined at:
  6035 ;;		line 28 in file "./sensorInfrarrojoIr.h"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  numeroSensor    1    wreg     unsigned char 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  numeroSensor    1    8[BANK1 ] unsigned char 
  6040 ;;  distancia       4    0[BANK1 ] float 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  4  153[BANK0 ] float 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6050 ;;      Params:         0       4       0       0       0       0       0       0       0
  6051 ;;      Locals:         0       0       9       0       0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6053 ;;      Totals:         0       4       9       0       0       0       0       0       0
  6054 ;;Total ram usage:       13 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    6
  6057 ;; This function calls:
  6058 ;;		___fldiv
  6059 ;;		___xxtofl
  6060 ;;		_dameLecturaAdc
  6061 ;;		_myPow
  6062 ;; This function is called by:
  6063 ;;		_inicializarComportamientoBasico
  6064 ;;		_leerSensores
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text23
  6069  005C1A                     __ptext23:
  6070                           	opt callstack 0
  6071  005C1A                     _dameDistancia:
  6072                           	opt callstack 23
  6073                           
  6074                           ;incstack = 0
  6075                           ;dameDistancia@numeroSensor stored from wreg
  6076  005C1A  0101               	movlb	1	; () banked
  6077  005C1C  6FE2               	movwf	dameDistancia@numeroSensor& (0+255),b
  6078  005C1E                     
  6079                           ;./sensorInfrarrojoIr.h: 30:     T_FLOAT distancia;;./sensorInfrarrojoIr.h: 31:     dist
      +                          ancia = myPow(3027.4 / dameLecturaAdc(numeroSensor), 1.2134);
  6080  005C1E  0E66               	movlw	102
  6081  005C20  6E21               	movwf	___fldiv@b^0,c
  6082  005C22  0E36               	movlw	54
  6083  005C24  6E22               	movwf	(___fldiv@b+1)^0,c
  6084  005C26  0E3D               	movlw	61
  6085  005C28  6E23               	movwf	(___fldiv@b+2)^0,c
  6086  005C2A  0E45               	movlw	69
  6087  005C2C  6E24               	movwf	(___fldiv@b+3)^0,c
  6088  005C2E  0101               	movlb	1	; () banked
  6089  005C30  51E2               	movf	dameDistancia@numeroSensor& (0+255),w,b
  6090  005C32  EC60  F032         	call	_dameLecturaAdc
  6091  005C36  C006  F00B         	movff	?_dameLecturaAdc,___xxtofl@val
  6092  005C3A  C007  F00C         	movff	?_dameLecturaAdc+1,___xxtofl@val+1
  6093  005C3E  0E00               	movlw	0
  6094  005C40  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  6095  005C42  0EFF               	movlw	-1
  6096  005C44  6E0D               	movwf	(___xxtofl@val+2)^0,c
  6097  005C46  6E0E               	movwf	(___xxtofl@val+3)^0,c
  6098  005C48  0E01               	movlw	1
  6099  005C4A  EC4D  F023         	call	___xxtofl
  6100  005C4E  C00B  F025         	movff	?___xxtofl,___fldiv@a
  6101  005C52  C00C  F026         	movff	?___xxtofl+1,___fldiv@a+1
  6102  005C56  C00D  F027         	movff	?___xxtofl+2,___fldiv@a+2
  6103  005C5A  C00E  F028         	movff	?___xxtofl+3,___fldiv@a+3
  6104  005C5E  EC85  F019         	call	___fldiv	;wreg free
  6105  005C62  C021  F1DE         	movff	?___fldiv,_dameDistancia$1889
  6106  005C66  C022  F1DF         	movff	?___fldiv+1,_dameDistancia$1889+1
  6107  005C6A  C023  F1E0         	movff	?___fldiv+2,_dameDistancia$1889+2
  6108  005C6E  C024  F1E1         	movff	?___fldiv+3,_dameDistancia$1889+3
  6109  005C72                     
  6110                           ;./sensorInfrarrojoIr.h: 30:     T_FLOAT distancia;;./sensorInfrarrojoIr.h: 31:     dist
      +                          ancia = myPow(3027.4 / dameLecturaAdc(numeroSensor), 1.2134);
  6111  005C72  C1DE  F0E9         	movff	_dameDistancia$1889,myPow@x
  6112  005C76  C1DF  F0EA         	movff	_dameDistancia$1889+1,myPow@x+1
  6113  005C7A  C1E0  F0EB         	movff	_dameDistancia$1889+2,myPow@x+2
  6114  005C7E  C1E1  F0EC         	movff	_dameDistancia$1889+3,myPow@x+3
  6115  005C82  0EB1               	movlw	177
  6116  005C84  0100               	movlb	0	; () banked
  6117  005C86  6FED               	movwf	myPow@y& (0+255),b
  6118  005C88  0E50               	movlw	80
  6119  005C8A  6FEE               	movwf	(myPow@y+1)& (0+255),b
  6120  005C8C  0E9B               	movlw	155
  6121  005C8E  6FEF               	movwf	(myPow@y+2)& (0+255),b
  6122  005C90  0E3F               	movlw	63
  6123  005C92  6FF0               	movwf	(myPow@y+3)& (0+255),b
  6124  005C94  EC88  F021         	call	_myPow	;wreg free
  6125  005C98  C0E9  F1DA         	movff	?_myPow,dameDistancia@distancia
  6126  005C9C  C0EA  F1DB         	movff	?_myPow+1,dameDistancia@distancia+1
  6127  005CA0  C0EB  F1DC         	movff	?_myPow+2,dameDistancia@distancia+2
  6128  005CA4  C0EC  F1DD         	movff	?_myPow+3,dameDistancia@distancia+3
  6129  005CA8                     
  6130                           ;./sensorInfrarrojoIr.h: 33:     return distancia;
  6131  005CA8  C1DA  F0F9         	movff	dameDistancia@distancia,?_dameDistancia
  6132  005CAC  C1DB  F0FA         	movff	dameDistancia@distancia+1,?_dameDistancia+1
  6133  005CB0  C1DC  F0FB         	movff	dameDistancia@distancia+2,?_dameDistancia+2
  6134  005CB4  C1DD  F0FC         	movff	dameDistancia@distancia+3,?_dameDistancia+3
  6135  005CB8  0012               	return		;funcret
  6136  005CBA                     __end_of_dameDistancia:
  6137                           	opt callstack 0
  6138                           
  6139 ;; *************** function _myPow *****************
  6140 ;; Defined at:
  6141 ;;		line 17 in file "./sensorInfrarrojoIr.h"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  x               4  137[BANK0 ] float 
  6144 ;;  y               4  141[BANK0 ] float 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  4  137[BANK0 ] float 
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6156 ;;      Params:         0       8       0       0       0       0       0       0       0
  6157 ;;      Locals:         0       8       0       0       0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6159 ;;      Totals:         0      16       0       0       0       0       0       0       0
  6160 ;;Total ram usage:       16 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    5
  6163 ;; This function calls:
  6164 ;;		___flmul
  6165 ;;		___flneg
  6166 ;;		___fltol
  6167 ;;		_expf
  6168 ;;		_logf
  6169 ;; This function is called by:
  6170 ;;		_dameDistancia
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text24
  6175  004310                     __ptext24:
  6176                           	opt callstack 0
  6177  004310                     _myPow:
  6178                           	opt callstack 23
  6179  004310                     
  6180                           ;./sensorInfrarrojoIr.h: 18:     if (x >= 0)
  6181  004310  0100               	movlb	0	; () banked
  6182  004312  BFEC               	btfsc	(myPow@x+3)& (0+255),7,b
  6183  004314  EF8E  F021         	goto	u10421
  6184  004318  EF90  F021         	goto	u10420
  6185  00431C                     u10421:
  6186  00431C  EFD0  F021         	goto	l9741
  6187  004320                     u10420:
  6188  004320                     
  6189                           ; BSR set to: 0
  6190                           ;./sensorInfrarrojoIr.h: 19:         return ( expf(y * logf(x)));
  6191  004320  C0E9  F06D         	movff	myPow@x,logf@x
  6192  004324  C0EA  F06E         	movff	myPow@x+1,logf@x+1
  6193  004328  C0EB  F06F         	movff	myPow@x+2,logf@x+2
  6194  00432C  C0EC  F070         	movff	myPow@x+3,logf@x+3
  6195  004330  ECA3  F009         	call	_logf	;wreg free
  6196  004334  C06D  F0F1         	movff	?_logf,_myPow$1887
  6197  004338  C06E  F0F2         	movff	?_logf+1,_myPow$1887+1
  6198  00433C  C06F  F0F3         	movff	?_logf+2,_myPow$1887+2
  6199  004340  C070  F0F4         	movff	?_logf+3,_myPow$1887+3
  6200                           
  6201                           ;./sensorInfrarrojoIr.h: 19:         return ( expf(y * logf(x)));
  6202  004344  C0F1  F03E         	movff	_myPow$1887,___flmul@b
  6203  004348  C0F2  F03F         	movff	_myPow$1887+1,___flmul@b+1
  6204  00434C  C0F3  F040         	movff	_myPow$1887+2,___flmul@b+2
  6205  004350  C0F4  F041         	movff	_myPow$1887+3,___flmul@b+3
  6206  004354  C0ED  F042         	movff	myPow@y,___flmul@a
  6207  004358  C0EE  F043         	movff	myPow@y+1,___flmul@a+1
  6208  00435C  C0EF  F044         	movff	myPow@y+2,___flmul@a+2
  6209  004360  C0F0  F045         	movff	myPow@y+3,___flmul@a+3
  6210  004364  EC88  F015         	call	___flmul	;wreg free
  6211  004368  C03E  F0F5         	movff	?___flmul,_myPow$1888
  6212  00436C  C03F  F0F6         	movff	?___flmul+1,_myPow$1888+1
  6213  004370  C040  F0F7         	movff	?___flmul+2,_myPow$1888+2
  6214  004374  C041  F0F8         	movff	?___flmul+3,_myPow$1888+3
  6215  004378                     l9735:
  6216                           
  6217                           ;./sensorInfrarrojoIr.h: 19:         return ( expf(y * logf(x)));
  6218  004378  C0F5  F0B3         	movff	_myPow$1888,expf@x
  6219  00437C  C0F6  F0B4         	movff	_myPow$1888+1,expf@x+1
  6220  004380  C0F7  F0B5         	movff	_myPow$1888+2,expf@x+2
  6221  004384  C0F8  F0B6         	movff	_myPow$1888+3,expf@x+3
  6222  004388  EC45  F00D         	call	_expf	;wreg free
  6223  00438C  C0B3  F0E9         	movff	?_expf,?_myPow
  6224  004390  C0B4  F0EA         	movff	?_expf+1,?_myPow+1
  6225  004394  C0B5  F0EB         	movff	?_expf+2,?_myPow+2
  6226  004398  C0B6  F0EC         	movff	?_expf+3,?_myPow+3
  6227  00439C  EF6E  F022         	goto	l188
  6228  0043A0                     l9741:
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;./sensorInfrarrojoIr.h: 21:         if ((int) y % 2) {
  6232  0043A0  C0ED  F06D         	movff	myPow@y,___fltol@f1
  6233  0043A4  C0EE  F06E         	movff	myPow@y+1,___fltol@f1+1
  6234  0043A8  C0EF  F06F         	movff	myPow@y+2,___fltol@f1+2
  6235  0043AC  C0F0  F070         	movff	myPow@y+3,___fltol@f1+3
  6236  0043B0  EC3E  F028         	call	___fltol	;wreg free
  6237  0043B4  0100               	movlb	0	; () banked
  6238  0043B6  A16D               	btfss	?___fltol& (0+255),0,b
  6239  0043B8  EFE0  F021         	goto	u10431
  6240  0043BC  EFE2  F021         	goto	u10430
  6241  0043C0                     u10431:
  6242  0043C0  EF36  F022         	goto	l9751
  6243  0043C4                     u10430:
  6244  0043C4                     
  6245                           ; BSR set to: 0
  6246                           ;./sensorInfrarrojoIr.h: 22:         return ( -expf(y * logf(-x)));
  6247  0043C4  C0E9  F03A         	movff	myPow@x,___flneg@f1
  6248  0043C8  C0EA  F03B         	movff	myPow@x+1,___flneg@f1+1
  6249  0043CC  C0EB  F03C         	movff	myPow@x+2,___flneg@f1+2
  6250  0043D0  C0EC  F03D         	movff	myPow@x+3,___flneg@f1+3
  6251  0043D4  EC02  F033         	call	___flneg	;wreg free
  6252  0043D8  C03A  F06D         	movff	?___flneg,logf@x
  6253  0043DC  C03B  F06E         	movff	?___flneg+1,logf@x+1
  6254  0043E0  C03C  F06F         	movff	?___flneg+2,logf@x+2
  6255  0043E4  C03D  F070         	movff	?___flneg+3,logf@x+3
  6256  0043E8  ECA3  F009         	call	_logf	;wreg free
  6257  0043EC  C06D  F0F1         	movff	?_logf,_myPow$1887
  6258  0043F0  C06E  F0F2         	movff	?_logf+1,_myPow$1887+1
  6259  0043F4  C06F  F0F3         	movff	?_logf+2,_myPow$1887+2
  6260  0043F8  C070  F0F4         	movff	?_logf+3,_myPow$1887+3
  6261                           
  6262                           ;./sensorInfrarrojoIr.h: 22:         return ( -expf(y * logf(-x)));
  6263  0043FC  C0ED  F042         	movff	myPow@y,___flmul@a
  6264  004400  C0EE  F043         	movff	myPow@y+1,___flmul@a+1
  6265  004404  C0EF  F044         	movff	myPow@y+2,___flmul@a+2
  6266  004408  C0F0  F045         	movff	myPow@y+3,___flmul@a+3
  6267  00440C  C0F1  F03E         	movff	_myPow$1887,___flmul@b
  6268  004410  C0F2  F03F         	movff	_myPow$1887+1,___flmul@b+1
  6269  004414  C0F3  F040         	movff	_myPow$1887+2,___flmul@b+2
  6270  004418  C0F4  F041         	movff	_myPow$1887+3,___flmul@b+3
  6271  00441C  EC88  F015         	call	___flmul	;wreg free
  6272  004420  C03E  F0F5         	movff	?___flmul,_myPow$1888
  6273  004424  C03F  F0F6         	movff	?___flmul+1,_myPow$1888+1
  6274  004428  C040  F0F7         	movff	?___flmul+2,_myPow$1888+2
  6275  00442C  C041  F0F8         	movff	?___flmul+3,_myPow$1888+3
  6276  004430                     
  6277                           ;./sensorInfrarrojoIr.h: 22:         return ( -expf(y * logf(-x)));
  6278  004430  C0F5  F0B3         	movff	_myPow$1888,expf@x
  6279  004434  C0F6  F0B4         	movff	_myPow$1888+1,expf@x+1
  6280  004438  C0F7  F0B5         	movff	_myPow$1888+2,expf@x+2
  6281  00443C  C0F8  F0B6         	movff	_myPow$1888+3,expf@x+3
  6282  004440  EC45  F00D         	call	_expf	;wreg free
  6283  004444  C0B3  F03A         	movff	?_expf,___flneg@f1
  6284  004448  C0B4  F03B         	movff	?_expf+1,___flneg@f1+1
  6285  00444C  C0B5  F03C         	movff	?_expf+2,___flneg@f1+2
  6286  004450  C0B6  F03D         	movff	?_expf+3,___flneg@f1+3
  6287  004454  EC02  F033         	call	___flneg	;wreg free
  6288  004458  C03A  F0E9         	movff	?___flneg,?_myPow
  6289  00445C  C03B  F0EA         	movff	?___flneg+1,?_myPow+1
  6290  004460  C03C  F0EB         	movff	?___flneg+2,?_myPow+2
  6291  004464  C03D  F0EC         	movff	?___flneg+3,?_myPow+3
  6292  004468  EF6E  F022         	goto	l188
  6293  00446C                     l9751:
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;./sensorInfrarrojoIr.h: 24:         return ( expf(y * logf(-x)));
  6297  00446C  C0E9  F03A         	movff	myPow@x,___flneg@f1
  6298  004470  C0EA  F03B         	movff	myPow@x+1,___flneg@f1+1
  6299  004474  C0EB  F03C         	movff	myPow@x+2,___flneg@f1+2
  6300  004478  C0EC  F03D         	movff	myPow@x+3,___flneg@f1+3
  6301  00447C  EC02  F033         	call	___flneg	;wreg free
  6302  004480  C03A  F06D         	movff	?___flneg,logf@x
  6303  004484  C03B  F06E         	movff	?___flneg+1,logf@x+1
  6304  004488  C03C  F06F         	movff	?___flneg+2,logf@x+2
  6305  00448C  C03D  F070         	movff	?___flneg+3,logf@x+3
  6306  004490  ECA3  F009         	call	_logf	;wreg free
  6307  004494  C06D  F0F1         	movff	?_logf,_myPow$1887
  6308  004498  C06E  F0F2         	movff	?_logf+1,_myPow$1887+1
  6309  00449C  C06F  F0F3         	movff	?_logf+2,_myPow$1887+2
  6310  0044A0  C070  F0F4         	movff	?_logf+3,_myPow$1887+3
  6311                           
  6312                           ;./sensorInfrarrojoIr.h: 24:         return ( expf(y * logf(-x)));
  6313  0044A4  C0F1  F03E         	movff	_myPow$1887,___flmul@b
  6314  0044A8  C0F2  F03F         	movff	_myPow$1887+1,___flmul@b+1
  6315  0044AC  C0F3  F040         	movff	_myPow$1887+2,___flmul@b+2
  6316  0044B0  C0F4  F041         	movff	_myPow$1887+3,___flmul@b+3
  6317  0044B4  C0ED  F042         	movff	myPow@y,___flmul@a
  6318  0044B8  C0EE  F043         	movff	myPow@y+1,___flmul@a+1
  6319  0044BC  C0EF  F044         	movff	myPow@y+2,___flmul@a+2
  6320  0044C0  C0F0  F045         	movff	myPow@y+3,___flmul@a+3
  6321  0044C4  EC88  F015         	call	___flmul	;wreg free
  6322  0044C8  C03E  F0F5         	movff	?___flmul,_myPow$1888
  6323  0044CC  C03F  F0F6         	movff	?___flmul+1,_myPow$1888+1
  6324  0044D0  C040  F0F7         	movff	?___flmul+2,_myPow$1888+2
  6325  0044D4  C041  F0F8         	movff	?___flmul+3,_myPow$1888+3
  6326  0044D8  EFBC  F021         	goto	l9735
  6327  0044DC                     l188:
  6328  0044DC  0012               	return		;funcret
  6329  0044DE                     __end_of_myPow:
  6330                           	opt callstack 0
  6331                           
  6332 ;; *************** function _logf *****************
  6333 ;; Defined at:
  6334 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\logf.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  x               4   13[BANK0 ] float 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  ix              4   79[BANK0 ] unsigned long 
  6339 ;;  f               4   75[BANK0 ] float 
  6340 ;;  u               4   71[BANK0 ] struct .
  6341 ;;  w               4   63[BANK0 ] float 
  6342 ;;  z               4   59[BANK0 ] float 
  6343 ;;  s               4   55[BANK0 ] float 
  6344 ;;  dk              4   51[BANK0 ] float 
  6345 ;;  hfsq            4   47[BANK0 ] float 
  6346 ;;  t2              4   25[BANK0 ] float 
  6347 ;;  t1              4   21[BANK0 ] float 
  6348 ;;  R               4   17[BANK0 ] float 
  6349 ;;  k               2   45[BANK0 ] int 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  4   13[BANK0 ] float 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6359 ;;      Params:         0       4       0       0       0       0       0       0       0
  6360 ;;      Locals:         0      66       0       0       0       0       0       0       0
  6361 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6362 ;;      Totals:         6      70       0       0       0       0       0       0       0
  6363 ;;Total ram usage:       76 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    4
  6366 ;; This function calls:
  6367 ;;		___fladd
  6368 ;;		___fldiv
  6369 ;;		___flmul
  6370 ;;		___flsub
  6371 ;;		___xxtofl
  6372 ;; This function is called by:
  6373 ;;		_myPow
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text25
  6378  001346                     __ptext25:
  6379                           	opt callstack 0
  6380  001346                     _logf:
  6381                           	opt callstack 23
  6382  001346  C100  F0A7         	movff	logf@F469,logf@u
  6383  00134A  C101  F0A8         	movff	logf@F469+1,logf@u+1
  6384  00134E  C102  F0A9         	movff	logf@F469+2,logf@u+2
  6385  001352  C103  F0AA         	movff	logf@F469+3,logf@u+3
  6386  001356  C06D  F0A7         	movff	logf@x,logf@u
  6387  00135A  C06E  F0A8         	movff	logf@x+1,logf@u+1
  6388  00135E  C06F  F0A9         	movff	logf@x+2,logf@u+2
  6389  001362  C070  F0AA         	movff	logf@x+3,logf@u+3
  6390  001366  C0A7  F0AF         	movff	logf@u,logf@ix
  6391  00136A  C0A8  F0B0         	movff	logf@u+1,logf@ix+1
  6392  00136E  C0A9  F0B1         	movff	logf@u+2,logf@ix+2
  6393  001372  C0AA  F0B2         	movff	logf@u+3,logf@ix+3
  6394  001376  0E00               	movlw	0
  6395  001378  0100               	movlb	0	; () banked
  6396  00137A  6F8E               	movwf	(logf@k+1)& (0+255),b
  6397  00137C  0E00               	movlw	0
  6398  00137E  6F8D               	movwf	logf@k& (0+255),b
  6399  001380                     
  6400                           ; BSR set to: 0
  6401  001380  51B2               	movf	(logf@ix+3)& (0+255),w,b
  6402  001382  E109               	bnz	u10040
  6403  001384  0E80               	movlw	128
  6404  001386  5DB1               	subwf	(logf@ix+2)& (0+255),w,b
  6405  001388  A0D8               	btfss	status,0,c
  6406  00138A  EFC9  F009         	goto	u10041
  6407  00138E  EFCB  F009         	goto	u10040
  6408  001392                     u10041:
  6409  001392  EFE9  F009         	goto	l9465
  6410  001396                     u10040:
  6411  001396                     
  6412                           ; BSR set to: 0
  6413  001396  C0AF  F04A         	movff	logf@ix,??_logf
  6414  00139A  C0B0  F04B         	movff	logf@ix+1,??_logf+1
  6415  00139E  C0B1  F04C         	movff	logf@ix+2,??_logf+2
  6416  0013A2  C0B2  F04D         	movff	logf@ix+3,??_logf+3
  6417  0013A6  0E20               	movlw	32
  6418  0013A8  EFDB  F009         	goto	u10050
  6419  0013AC                     u10055:
  6420  0013AC  90D8               	bcf	status,0,c
  6421  0013AE  324D               	rrcf	(??_logf+3)^0,f,c
  6422  0013B0  324C               	rrcf	(??_logf+2)^0,f,c
  6423  0013B2  324B               	rrcf	(??_logf+1)^0,f,c
  6424  0013B4  324A               	rrcf	??_logf^0,f,c
  6425  0013B6                     u10050:
  6426  0013B6  2EE8               	decfsz	wreg,f,c
  6427  0013B8  EFD6  F009         	goto	u10055
  6428  0013BC  504A               	movf	??_logf^0,w,c
  6429  0013BE  104B               	iorwf	(??_logf+1)^0,w,c
  6430  0013C0  104C               	iorwf	(??_logf+2)^0,w,c
  6431  0013C2  104D               	iorwf	(??_logf+3)^0,w,c
  6432  0013C4  B4D8               	btfsc	status,2,c
  6433  0013C6  EFE7  F009         	goto	u10061
  6434  0013CA  EFE9  F009         	goto	u10060
  6435  0013CE                     u10061:
  6436  0013CE  EFA7  F00A         	goto	l9485
  6437  0013D2                     u10060:
  6438  0013D2                     l9465:
  6439                           
  6440                           ; BSR set to: 0
  6441  0013D2  90D8               	bcf	status,0,c
  6442  0013D4  35AF               	rlcf	logf@ix& (0+255),w,b
  6443  0013D6  6E4A               	movwf	??_logf^0,c
  6444  0013D8  35B0               	rlcf	(logf@ix+1)& (0+255),w,b
  6445  0013DA  6E4B               	movwf	(??_logf+1)^0,c
  6446  0013DC  35B1               	rlcf	(logf@ix+2)& (0+255),w,b
  6447  0013DE  6E4C               	movwf	(??_logf+2)^0,c
  6448  0013E0  35B2               	rlcf	(logf@ix+3)& (0+255),w,b
  6449  0013E2  6E4D               	movwf	(??_logf+3)^0,c
  6450  0013E4  504A               	movf	??_logf^0,w,c
  6451  0013E6  104B               	iorwf	(??_logf+1)^0,w,c
  6452  0013E8  104C               	iorwf	(??_logf+2)^0,w,c
  6453  0013EA  104D               	iorwf	(??_logf+3)^0,w,c
  6454  0013EC  A4D8               	btfss	status,2,c
  6455  0013EE  EFFB  F009         	goto	u10071
  6456  0013F2  EFFD  F009         	goto	u10070
  6457  0013F6                     u10071:
  6458  0013F6  EF2B  F00A         	goto	l9471
  6459  0013FA                     u10070:
  6460  0013FA                     
  6461                           ; BSR set to: 0
  6462  0013FA  0E00               	movlw	0
  6463  0013FC  6E21               	movwf	___fldiv@b^0,c
  6464  0013FE  0E00               	movlw	0
  6465  001400  6E22               	movwf	(___fldiv@b+1)^0,c
  6466  001402  0E80               	movlw	128
  6467  001404  6E23               	movwf	(___fldiv@b+2)^0,c
  6468  001406  0EBF               	movlw	191
  6469  001408  6E24               	movwf	(___fldiv@b+3)^0,c
  6470  00140A  C06D  F042         	movff	logf@x,___flmul@a
  6471  00140E  C06E  F043         	movff	logf@x+1,___flmul@a+1
  6472  001412  C06F  F044         	movff	logf@x+2,___flmul@a+2
  6473  001416  C070  F045         	movff	logf@x+3,___flmul@a+3
  6474  00141A  C06D  F03E         	movff	logf@x,___flmul@b
  6475  00141E  C06E  F03F         	movff	logf@x+1,___flmul@b+1
  6476  001422  C06F  F040         	movff	logf@x+2,___flmul@b+2
  6477  001426  C070  F041         	movff	logf@x+3,___flmul@b+3
  6478  00142A  EC88  F015         	call	___flmul	;wreg free
  6479  00142E  C03E  F025         	movff	?___flmul,___fldiv@a
  6480  001432  C03F  F026         	movff	?___flmul+1,___fldiv@a+1
  6481  001436  C040  F027         	movff	?___flmul+2,___fldiv@a+2
  6482  00143A  C041  F028         	movff	?___flmul+3,___fldiv@a+3
  6483  00143E  EC85  F019         	call	___fldiv	;wreg free
  6484  001442  C021  F06D         	movff	?___fldiv,?_logf
  6485  001446  C022  F06E         	movff	?___fldiv+1,?_logf+1
  6486  00144A  C023  F06F         	movff	?___fldiv+2,?_logf+2
  6487  00144E  C024  F070         	movff	?___fldiv+3,?_logf+3
  6488  001452  EF44  F00D         	goto	l1732
  6489  001456                     l9471:
  6490                           
  6491                           ; BSR set to: 0
  6492  001456  C0AF  F04A         	movff	logf@ix,??_logf
  6493  00145A  C0B0  F04B         	movff	logf@ix+1,??_logf+1
  6494  00145E  C0B1  F04C         	movff	logf@ix+2,??_logf+2
  6495  001462  C0B2  F04D         	movff	logf@ix+3,??_logf+3
  6496  001466  0E20               	movlw	32
  6497  001468  EF3B  F00A         	goto	u10080
  6498  00146C                     u10085:
  6499  00146C  90D8               	bcf	status,0,c
  6500  00146E  324D               	rrcf	(??_logf+3)^0,f,c
  6501  001470  324C               	rrcf	(??_logf+2)^0,f,c
  6502  001472  324B               	rrcf	(??_logf+1)^0,f,c
  6503  001474  324A               	rrcf	??_logf^0,f,c
  6504  001476                     u10080:
  6505  001476  2EE8               	decfsz	wreg,f,c
  6506  001478  EF36  F00A         	goto	u10085
  6507  00147C  504A               	movf	??_logf^0,w,c
  6508  00147E  104B               	iorwf	(??_logf+1)^0,w,c
  6509  001480  104C               	iorwf	(??_logf+2)^0,w,c
  6510  001482  104D               	iorwf	(??_logf+3)^0,w,c
  6511  001484  B4D8               	btfsc	status,2,c
  6512  001486  EF47  F00A         	goto	u10091
  6513  00148A  EF49  F00A         	goto	u10090
  6514  00148E                     u10091:
  6515  00148E  EF77  F00A         	goto	l9477
  6516  001492                     u10090:
  6517  001492                     
  6518                           ; BSR set to: 0
  6519  001492  C06D  F01D         	movff	logf@x,___flsub@a
  6520  001496  C06E  F01E         	movff	logf@x+1,___flsub@a+1
  6521  00149A  C06F  F01F         	movff	logf@x+2,___flsub@a+2
  6522  00149E  C070  F020         	movff	logf@x+3,___flsub@a+3
  6523  0014A2  C06D  F019         	movff	logf@x,___flsub@b
  6524  0014A6  C06E  F01A         	movff	logf@x+1,___flsub@b+1
  6525  0014AA  C06F  F01B         	movff	logf@x+2,___flsub@b+2
  6526  0014AE  C070  F01C         	movff	logf@x+3,___flsub@b+3
  6527  0014B2  EC3D  F032         	call	___flsub	;wreg free
  6528  0014B6  C019  F021         	movff	?___flsub,___fldiv@b
  6529  0014BA  C01A  F022         	movff	?___flsub+1,___fldiv@b+1
  6530  0014BE  C01B  F023         	movff	?___flsub+2,___fldiv@b+2
  6531  0014C2  C01C  F024         	movff	?___flsub+3,___fldiv@b+3
  6532  0014C6  0E00               	movlw	0
  6533  0014C8  6E25               	movwf	___fldiv@a^0,c
  6534  0014CA  0E00               	movlw	0
  6535  0014CC  6E26               	movwf	(___fldiv@a+1)^0,c
  6536  0014CE  0E00               	movlw	0
  6537  0014D0  6E27               	movwf	(___fldiv@a+2)^0,c
  6538  0014D2  0E00               	movlw	0
  6539  0014D4  6E28               	movwf	(___fldiv@a+3)^0,c
  6540  0014D6  EC85  F019         	call	___fldiv	;wreg free
  6541  0014DA  C021  F06D         	movff	?___fldiv,?_logf
  6542  0014DE  C022  F06E         	movff	?___fldiv+1,?_logf+1
  6543  0014E2  C023  F06F         	movff	?___fldiv+2,?_logf+2
  6544  0014E6  C024  F070         	movff	?___fldiv+3,?_logf+3
  6545  0014EA  EF44  F00D         	goto	l1732
  6546  0014EE                     l9477:
  6547                           
  6548                           ; BSR set to: 0
  6549  0014EE  0EE7               	movlw	231
  6550  0014F0  278D               	addwf	logf@k& (0+255),f,b
  6551  0014F2  0EFF               	movlw	255
  6552  0014F4  238E               	addwfc	(logf@k+1)& (0+255),f,b
  6553  0014F6                     
  6554                           ; BSR set to: 0
  6555  0014F6  C06D  F03E         	movff	logf@x,___flmul@b
  6556  0014FA  C06E  F03F         	movff	logf@x+1,___flmul@b+1
  6557  0014FE  C06F  F040         	movff	logf@x+2,___flmul@b+2
  6558  001502  C070  F041         	movff	logf@x+3,___flmul@b+3
  6559  001506  0E00               	movlw	0
  6560  001508  6E42               	movwf	___flmul@a^0,c
  6561  00150A  0E00               	movlw	0
  6562  00150C  6E43               	movwf	(___flmul@a+1)^0,c
  6563  00150E  0E00               	movlw	0
  6564  001510  6E44               	movwf	(___flmul@a+2)^0,c
  6565  001512  0E4C               	movlw	76
  6566  001514  6E45               	movwf	(___flmul@a+3)^0,c
  6567  001516  EC88  F015         	call	___flmul	;wreg free
  6568  00151A  C03E  F06D         	movff	?___flmul,logf@x
  6569  00151E  C03F  F06E         	movff	?___flmul+1,logf@x+1
  6570  001522  C040  F06F         	movff	?___flmul+2,logf@x+2
  6571  001526  C041  F070         	movff	?___flmul+3,logf@x+3
  6572  00152A  C06D  F0A7         	movff	logf@x,logf@u
  6573  00152E  C06E  F0A8         	movff	logf@x+1,logf@u+1
  6574  001532  C06F  F0A9         	movff	logf@x+2,logf@u+2
  6575  001536  C070  F0AA         	movff	logf@x+3,logf@u+3
  6576  00153A  C0A7  F0AF         	movff	logf@u,logf@ix
  6577  00153E  C0A8  F0B0         	movff	logf@u+1,logf@ix+1
  6578  001542  C0A9  F0B1         	movff	logf@u+2,logf@ix+2
  6579  001546  C0AA  F0B2         	movff	logf@u+3,logf@ix+3
  6580  00154A  EFD4  F00A         	goto	l9497
  6581  00154E                     l9485:
  6582                           
  6583                           ; BSR set to: 0
  6584  00154E  0E80               	movlw	128
  6585  001550  5DB1               	subwf	(logf@ix+2)& (0+255),w,b
  6586  001552  0E7F               	movlw	127
  6587  001554  59B2               	subwfb	(logf@ix+3)& (0+255),w,b
  6588  001556  A0D8               	btfss	status,0,c
  6589  001558  EFB0  F00A         	goto	u10101
  6590  00155C  EFB2  F00A         	goto	u10100
  6591  001560                     u10101:
  6592  001560  EFBC  F00A         	goto	l9491
  6593  001564                     u10100:
  6594  001564                     
  6595                           ; BSR set to: 0
  6596  001564  C06D  F06D         	movff	logf@x,?_logf
  6597  001568  C06E  F06E         	movff	logf@x+1,?_logf+1
  6598  00156C  C06F  F06F         	movff	logf@x+2,?_logf+2
  6599  001570  C070  F070         	movff	logf@x+3,?_logf+3
  6600  001574  EF44  F00D         	goto	l1732
  6601  001578                     l9491:
  6602                           
  6603                           ; BSR set to: 0
  6604  001578  0E80               	movlw	128
  6605  00157A  19B1               	xorwf	(logf@ix+2)& (0+255),w,b
  6606  00157C  E109               	bnz	u10111
  6607  00157E  0E3F               	movlw	63
  6608  001580  19B2               	xorwf	(logf@ix+3)& (0+255),w,b
  6609  001582  11AF               	iorwf	logf@ix& (0+255),w,b
  6610  001584  11B0               	iorwf	(logf@ix+1)& (0+255),w,b
  6611  001586  A4D8               	btfss	status,2,c
  6612  001588  EFC8  F00A         	goto	u10111
  6613  00158C  EFCA  F00A         	goto	u10110
  6614  001590                     u10111:
  6615  001590  EFD4  F00A         	goto	l9497
  6616  001594                     u10110:
  6617  001594                     
  6618                           ; BSR set to: 0
  6619  001594  0E00               	movlw	0
  6620  001596  6F6D               	movwf	?_logf& (0+255),b
  6621  001598  0E00               	movlw	0
  6622  00159A  6F6E               	movwf	(?_logf+1)& (0+255),b
  6623  00159C  0E00               	movlw	0
  6624  00159E  6F6F               	movwf	(?_logf+2)& (0+255),b
  6625  0015A0  0E00               	movlw	0
  6626  0015A2  6F70               	movwf	(?_logf+3)& (0+255),b
  6627  0015A4  EF44  F00D         	goto	l1732
  6628  0015A8                     l9497:
  6629  0015A8  0E0D               	movlw	13
  6630  0015AA  0100               	movlb	0	; () banked
  6631  0015AC  27AF               	addwf	logf@ix& (0+255),f,b
  6632  0015AE  0EFB               	movlw	251
  6633  0015B0  23B0               	addwfc	(logf@ix+1)& (0+255),f,b
  6634  0015B2  0E4A               	movlw	74
  6635  0015B4  23B1               	addwfc	(logf@ix+2)& (0+255),f,b
  6636  0015B6  0E00               	movlw	0
  6637  0015B8  23B2               	addwfc	(logf@ix+3)& (0+255),f,b
  6638  0015BA  0E81               	movlw	129
  6639  0015BC  6E4A               	movwf	??_logf^0,c
  6640  0015BE  0EFF               	movlw	255
  6641  0015C0  6E4B               	movwf	(??_logf+1)^0,c
  6642  0015C2  C0AF  F04C         	movff	logf@ix,??_logf+2
  6643  0015C6  C0B0  F04D         	movff	logf@ix+1,??_logf+3
  6644  0015CA  C0B1  F04E         	movff	logf@ix+2,??_logf+4
  6645  0015CE  C0B2  F04F         	movff	logf@ix+3,??_logf+5
  6646  0015D2  0E18               	movlw	24
  6647  0015D4  EFF1  F00A         	goto	u10120
  6648  0015D8                     u10125:
  6649  0015D8  90D8               	bcf	status,0,c
  6650  0015DA  324F               	rrcf	(??_logf+5)^0,f,c
  6651  0015DC  324E               	rrcf	(??_logf+4)^0,f,c
  6652  0015DE  324D               	rrcf	(??_logf+3)^0,f,c
  6653  0015E0  324C               	rrcf	(??_logf+2)^0,f,c
  6654  0015E2                     u10120:
  6655  0015E2  2EE8               	decfsz	wreg,f,c
  6656  0015E4  EFEC  F00A         	goto	u10125
  6657  0015E8  504A               	movf	??_logf^0,w,c
  6658  0015EA  264C               	addwf	(??_logf+2)^0,f,c
  6659  0015EC  504B               	movf	(??_logf+1)^0,w,c
  6660  0015EE  224D               	addwfc	(??_logf+3)^0,f,c
  6661  0015F0  504C               	movf	(??_logf+2)^0,w,c
  6662  0015F2  278D               	addwf	logf@k& (0+255),f,b
  6663  0015F4  504D               	movf	(??_logf+3)^0,w,c
  6664  0015F6  238E               	addwfc	(logf@k+1)& (0+255),f,b
  6665  0015F8  0EFF               	movlw	255
  6666  0015FA  15AF               	andwf	logf@ix& (0+255),w,b
  6667  0015FC  6E4A               	movwf	??_logf^0,c
  6668  0015FE  0EFF               	movlw	255
  6669  001600  15B0               	andwf	(logf@ix+1)& (0+255),w,b
  6670  001602  6E4B               	movwf	(??_logf+1)^0,c
  6671  001604  0E7F               	movlw	127
  6672  001606  15B1               	andwf	(logf@ix+2)& (0+255),w,b
  6673  001608  6E4C               	movwf	(??_logf+2)^0,c
  6674  00160A  0E00               	movlw	0
  6675  00160C  15B2               	andwf	(logf@ix+3)& (0+255),w,b
  6676  00160E  6E4D               	movwf	(??_logf+3)^0,c
  6677  001610  0EF3               	movlw	243
  6678  001612  244A               	addwf	??_logf^0,w,c
  6679  001614  6FAF               	movwf	logf@ix& (0+255),b
  6680  001616  0E04               	movlw	4
  6681  001618  204B               	addwfc	(??_logf+1)^0,w,c
  6682  00161A  6FB0               	movwf	(logf@ix+1)& (0+255),b
  6683  00161C  0E35               	movlw	53
  6684  00161E  204C               	addwfc	(??_logf+2)^0,w,c
  6685  001620  6FB1               	movwf	(logf@ix+2)& (0+255),b
  6686  001622  0E3F               	movlw	63
  6687  001624  204D               	addwfc	(??_logf+3)^0,w,c
  6688  001626  6FB2               	movwf	(logf@ix+3)& (0+255),b
  6689  001628                     
  6690                           ; BSR set to: 0
  6691  001628  C0AF  F0A7         	movff	logf@ix,logf@u
  6692  00162C  C0B0  F0A8         	movff	logf@ix+1,logf@u+1
  6693  001630  C0B1  F0A9         	movff	logf@ix+2,logf@u+2
  6694  001634  C0B2  F0AA         	movff	logf@ix+3,logf@u+3
  6695  001638                     
  6696                           ; BSR set to: 0
  6697  001638  C0A7  F06D         	movff	logf@u,logf@x
  6698  00163C  C0A8  F06E         	movff	logf@u+1,logf@x+1
  6699  001640  C0A9  F06F         	movff	logf@u+2,logf@x+2
  6700  001644  C0AA  F070         	movff	logf@u+3,logf@x+3
  6701  001648                     
  6702                           ; BSR set to: 0
  6703  001648  C06D  F006         	movff	logf@x,___fladd@b
  6704  00164C  C06E  F007         	movff	logf@x+1,___fladd@b+1
  6705  001650  C06F  F008         	movff	logf@x+2,___fladd@b+2
  6706  001654  C070  F009         	movff	logf@x+3,___fladd@b+3
  6707  001658  0E00               	movlw	0
  6708  00165A  6E0A               	movwf	___fladd@a^0,c
  6709  00165C  0E00               	movlw	0
  6710  00165E  6E0B               	movwf	(___fladd@a+1)^0,c
  6711  001660  0E80               	movlw	128
  6712  001662  6E0C               	movwf	(___fladd@a+2)^0,c
  6713  001664  0EBF               	movlw	191
  6714  001666  6E0D               	movwf	(___fladd@a+3)^0,c
  6715  001668  EC28  F013         	call	___fladd	;wreg free
  6716  00166C  C006  F0AB         	movff	?___fladd,logf@f
  6717  001670  C007  F0AC         	movff	?___fladd+1,logf@f+1
  6718  001674  C008  F0AD         	movff	?___fladd+2,logf@f+2
  6719  001678  C009  F0AE         	movff	?___fladd+3,logf@f+3
  6720  00167C  C0AB  F021         	movff	logf@f,___fldiv@b
  6721  001680  C0AC  F022         	movff	logf@f+1,___fldiv@b+1
  6722  001684  C0AD  F023         	movff	logf@f+2,___fldiv@b+2
  6723  001688  C0AE  F024         	movff	logf@f+3,___fldiv@b+3
  6724  00168C  0E00               	movlw	0
  6725  00168E  6E0A               	movwf	___fladd@a^0,c
  6726  001690  0E00               	movlw	0
  6727  001692  6E0B               	movwf	(___fladd@a+1)^0,c
  6728  001694  0E00               	movlw	0
  6729  001696  6E0C               	movwf	(___fladd@a+2)^0,c
  6730  001698  0E40               	movlw	64
  6731  00169A  6E0D               	movwf	(___fladd@a+3)^0,c
  6732  00169C  C0AB  F006         	movff	logf@f,___fladd@b
  6733  0016A0  C0AC  F007         	movff	logf@f+1,___fladd@b+1
  6734  0016A4  C0AD  F008         	movff	logf@f+2,___fladd@b+2
  6735  0016A8  C0AE  F009         	movff	logf@f+3,___fladd@b+3
  6736  0016AC  EC28  F013         	call	___fladd	;wreg free
  6737  0016B0  C006  F025         	movff	?___fladd,___fldiv@a
  6738  0016B4  C007  F026         	movff	?___fladd+1,___fldiv@a+1
  6739  0016B8  C008  F027         	movff	?___fladd+2,___fldiv@a+2
  6740  0016BC  C009  F028         	movff	?___fladd+3,___fldiv@a+3
  6741  0016C0  EC85  F019         	call	___fldiv	;wreg free
  6742  0016C4  C021  F097         	movff	?___fldiv,logf@s
  6743  0016C8  C022  F098         	movff	?___fldiv+1,logf@s+1
  6744  0016CC  C023  F099         	movff	?___fldiv+2,logf@s+2
  6745  0016D0  C024  F09A         	movff	?___fldiv+3,logf@s+3
  6746  0016D4  C097  F03E         	movff	logf@s,___flmul@b
  6747  0016D8  C098  F03F         	movff	logf@s+1,___flmul@b+1
  6748  0016DC  C099  F040         	movff	logf@s+2,___flmul@b+2
  6749  0016E0  C09A  F041         	movff	logf@s+3,___flmul@b+3
  6750  0016E4  C097  F042         	movff	logf@s,___flmul@a
  6751  0016E8  C098  F043         	movff	logf@s+1,___flmul@a+1
  6752  0016EC  C099  F044         	movff	logf@s+2,___flmul@a+2
  6753  0016F0  C09A  F045         	movff	logf@s+3,___flmul@a+3
  6754  0016F4  EC88  F015         	call	___flmul	;wreg free
  6755  0016F8  C03E  F09B         	movff	?___flmul,logf@z
  6756  0016FC  C03F  F09C         	movff	?___flmul+1,logf@z+1
  6757  001700  C040  F09D         	movff	?___flmul+2,logf@z+2
  6758  001704  C041  F09E         	movff	?___flmul+3,logf@z+3
  6759  001708  C09B  F03E         	movff	logf@z,___flmul@b
  6760  00170C  C09C  F03F         	movff	logf@z+1,___flmul@b+1
  6761  001710  C09D  F040         	movff	logf@z+2,___flmul@b+2
  6762  001714  C09E  F041         	movff	logf@z+3,___flmul@b+3
  6763  001718  C09B  F042         	movff	logf@z,___flmul@a
  6764  00171C  C09C  F043         	movff	logf@z+1,___flmul@a+1
  6765  001720  C09D  F044         	movff	logf@z+2,___flmul@a+2
  6766  001724  C09E  F045         	movff	logf@z+3,___flmul@a+3
  6767  001728  EC88  F015         	call	___flmul	;wreg free
  6768  00172C  C03E  F09F         	movff	?___flmul,logf@w
  6769  001730  C03F  F0A0         	movff	?___flmul+1,logf@w+1
  6770  001734  C040  F0A1         	movff	?___flmul+2,logf@w+2
  6771  001738  C041  F0A2         	movff	?___flmul+3,logf@w+3
  6772  00173C  0E13               	movlw	19
  6773  00173E  6E0A               	movwf	___fladd@a^0,c
  6774  001740  0ECE               	movlw	206
  6775  001742  6E0B               	movwf	(___fladd@a+1)^0,c
  6776  001744  0ECC               	movlw	204
  6777  001746  6E0C               	movwf	(___fladd@a+2)^0,c
  6778  001748  0E3E               	movlw	62
  6779  00174A  6E0D               	movwf	(___fladd@a+3)^0,c
  6780  00174C  0E26               	movlw	38
  6781  00174E  6E42               	movwf	___flmul@a^0,c
  6782  001750  0E9E               	movlw	158
  6783  001752  6E43               	movwf	(___flmul@a+1)^0,c
  6784  001754  0E78               	movlw	120
  6785  001756  6E44               	movwf	(___flmul@a+2)^0,c
  6786  001758  0E3E               	movlw	62
  6787  00175A  6E45               	movwf	(___flmul@a+3)^0,c
  6788  00175C  C09F  F03E         	movff	logf@w,___flmul@b
  6789  001760  C0A0  F03F         	movff	logf@w+1,___flmul@b+1
  6790  001764  C0A1  F040         	movff	logf@w+2,___flmul@b+2
  6791  001768  C0A2  F041         	movff	logf@w+3,___flmul@b+3
  6792  00176C  EC88  F015         	call	___flmul	;wreg free
  6793  001770  C03E  F006         	movff	?___flmul,___fladd@b
  6794  001774  C03F  F007         	movff	?___flmul+1,___fladd@b+1
  6795  001778  C040  F008         	movff	?___flmul+2,___fladd@b+2
  6796  00177C  C041  F009         	movff	?___flmul+3,___fladd@b+3
  6797  001780  EC28  F013         	call	___fladd	;wreg free
  6798  001784  C006  F0A3         	movff	?___fladd,_logf$1895
  6799  001788  C007  F0A4         	movff	?___fladd+1,_logf$1895+1
  6800  00178C  C008  F0A5         	movff	?___fladd+2,_logf$1895+2
  6801  001790  C009  F0A6         	movff	?___fladd+3,_logf$1895+3
  6802  001794  C0A3  F03E         	movff	_logf$1895,___flmul@b
  6803  001798  C0A4  F03F         	movff	_logf$1895+1,___flmul@b+1
  6804  00179C  C0A5  F040         	movff	_logf$1895+2,___flmul@b+2
  6805  0017A0  C0A6  F041         	movff	_logf$1895+3,___flmul@b+3
  6806  0017A4  C09F  F042         	movff	logf@w,___flmul@a
  6807  0017A8  C0A0  F043         	movff	logf@w+1,___flmul@a+1
  6808  0017AC  C0A1  F044         	movff	logf@w+2,___flmul@a+2
  6809  0017B0  C0A2  F045         	movff	logf@w+3,___flmul@a+3
  6810  0017B4  EC88  F015         	call	___flmul	;wreg free
  6811  0017B8  C03E  F075         	movff	?___flmul,logf@t1
  6812  0017BC  C03F  F076         	movff	?___flmul+1,logf@t1+1
  6813  0017C0  C040  F077         	movff	?___flmul+2,logf@t1+2
  6814  0017C4  C041  F078         	movff	?___flmul+3,logf@t1+3
  6815  0017C8  0EAA               	movlw	170
  6816  0017CA  6E0A               	movwf	___fladd@a^0,c
  6817  0017CC  0EAA               	movlw	170
  6818  0017CE  6E0B               	movwf	(___fladd@a+1)^0,c
  6819  0017D0  0E2A               	movlw	42
  6820  0017D2  6E0C               	movwf	(___fladd@a+2)^0,c
  6821  0017D4  0E3F               	movlw	63
  6822  0017D6  6E0D               	movwf	(___fladd@a+3)^0,c
  6823  0017D8  0EEE               	movlw	238
  6824  0017DA  6E42               	movwf	___flmul@a^0,c
  6825  0017DC  0EE9               	movlw	233
  6826  0017DE  6E43               	movwf	(___flmul@a+1)^0,c
  6827  0017E0  0E91               	movlw	145
  6828  0017E2  6E44               	movwf	(___flmul@a+2)^0,c
  6829  0017E4  0E3E               	movlw	62
  6830  0017E6  6E45               	movwf	(___flmul@a+3)^0,c
  6831  0017E8  C09F  F03E         	movff	logf@w,___flmul@b
  6832  0017EC  C0A0  F03F         	movff	logf@w+1,___flmul@b+1
  6833  0017F0  C0A1  F040         	movff	logf@w+2,___flmul@b+2
  6834  0017F4  C0A2  F041         	movff	logf@w+3,___flmul@b+3
  6835  0017F8  EC88  F015         	call	___flmul	;wreg free
  6836  0017FC  C03E  F006         	movff	?___flmul,___fladd@b
  6837  001800  C03F  F007         	movff	?___flmul+1,___fladd@b+1
  6838  001804  C040  F008         	movff	?___flmul+2,___fladd@b+2
  6839  001808  C041  F009         	movff	?___flmul+3,___fladd@b+3
  6840  00180C  EC28  F013         	call	___fladd	;wreg free
  6841  001810  C006  F0A3         	movff	?___fladd,_logf$1895
  6842  001814  C007  F0A4         	movff	?___fladd+1,_logf$1895+1
  6843  001818  C008  F0A5         	movff	?___fladd+2,_logf$1895+2
  6844  00181C  C009  F0A6         	movff	?___fladd+3,_logf$1895+3
  6845  001820  C0A3  F03E         	movff	_logf$1895,___flmul@b
  6846  001824  C0A4  F03F         	movff	_logf$1895+1,___flmul@b+1
  6847  001828  C0A5  F040         	movff	_logf$1895+2,___flmul@b+2
  6848  00182C  C0A6  F041         	movff	_logf$1895+3,___flmul@b+3
  6849  001830  C09B  F042         	movff	logf@z,___flmul@a
  6850  001834  C09C  F043         	movff	logf@z+1,___flmul@a+1
  6851  001838  C09D  F044         	movff	logf@z+2,___flmul@a+2
  6852  00183C  C09E  F045         	movff	logf@z+3,___flmul@a+3
  6853  001840  EC88  F015         	call	___flmul	;wreg free
  6854  001844  C03E  F079         	movff	?___flmul,logf@t2
  6855  001848  C03F  F07A         	movff	?___flmul+1,logf@t2+1
  6856  00184C  C040  F07B         	movff	?___flmul+2,logf@t2+2
  6857  001850  C041  F07C         	movff	?___flmul+3,logf@t2+3
  6858  001854  C079  F006         	movff	logf@t2,___fladd@b
  6859  001858  C07A  F007         	movff	logf@t2+1,___fladd@b+1
  6860  00185C  C07B  F008         	movff	logf@t2+2,___fladd@b+2
  6861  001860  C07C  F009         	movff	logf@t2+3,___fladd@b+3
  6862  001864  C075  F00A         	movff	logf@t1,___fladd@a
  6863  001868  C076  F00B         	movff	logf@t1+1,___fladd@a+1
  6864  00186C  C077  F00C         	movff	logf@t1+2,___fladd@a+2
  6865  001870  C078  F00D         	movff	logf@t1+3,___fladd@a+3
  6866  001874  EC28  F013         	call	___fladd	;wreg free
  6867  001878  C006  F071         	movff	?___fladd,logf@R
  6868  00187C  C007  F072         	movff	?___fladd+1,logf@R+1
  6869  001880  C008  F073         	movff	?___fladd+2,logf@R+2
  6870  001884  C009  F074         	movff	?___fladd+3,logf@R+3
  6871  001888  0E00               	movlw	0
  6872  00188A  6E42               	movwf	___flmul@a^0,c
  6873  00188C  0E00               	movlw	0
  6874  00188E  6E43               	movwf	(___flmul@a+1)^0,c
  6875  001890  0E00               	movlw	0
  6876  001892  6E44               	movwf	(___flmul@a+2)^0,c
  6877  001894  0E3F               	movlw	63
  6878  001896  6E45               	movwf	(___flmul@a+3)^0,c
  6879  001898  C0AB  F03E         	movff	logf@f,___flmul@b
  6880  00189C  C0AC  F03F         	movff	logf@f+1,___flmul@b+1
  6881  0018A0  C0AD  F040         	movff	logf@f+2,___flmul@b+2
  6882  0018A4  C0AE  F041         	movff	logf@f+3,___flmul@b+3
  6883  0018A8  EC88  F015         	call	___flmul	;wreg free
  6884  0018AC  C03E  F0A3         	movff	?___flmul,_logf$1895
  6885  0018B0  C03F  F0A4         	movff	?___flmul+1,_logf$1895+1
  6886  0018B4  C040  F0A5         	movff	?___flmul+2,_logf$1895+2
  6887  0018B8  C041  F0A6         	movff	?___flmul+3,_logf$1895+3
  6888  0018BC  C0A3  F03E         	movff	_logf$1895,___flmul@b
  6889  0018C0  C0A4  F03F         	movff	_logf$1895+1,___flmul@b+1
  6890  0018C4  C0A5  F040         	movff	_logf$1895+2,___flmul@b+2
  6891  0018C8  C0A6  F041         	movff	_logf$1895+3,___flmul@b+3
  6892  0018CC  C0AB  F042         	movff	logf@f,___flmul@a
  6893  0018D0  C0AC  F043         	movff	logf@f+1,___flmul@a+1
  6894  0018D4  C0AD  F044         	movff	logf@f+2,___flmul@a+2
  6895  0018D8  C0AE  F045         	movff	logf@f+3,___flmul@a+3
  6896  0018DC  EC88  F015         	call	___flmul	;wreg free
  6897  0018E0  C03E  F08F         	movff	?___flmul,logf@hfsq
  6898  0018E4  C03F  F090         	movff	?___flmul+1,logf@hfsq+1
  6899  0018E8  C040  F091         	movff	?___flmul+2,logf@hfsq+2
  6900  0018EC  C041  F092         	movff	?___flmul+3,logf@hfsq+3
  6901  0018F0  C08D  F00B         	movff	logf@k,___xxtofl@val
  6902  0018F4  C08E  F00C         	movff	logf@k+1,___xxtofl@val+1
  6903  0018F8  0E00               	movlw	0
  6904  0018FA  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  6905  0018FC  0EFF               	movlw	-1
  6906  0018FE  6E0D               	movwf	(___xxtofl@val+2)^0,c
  6907  001900  6E0E               	movwf	(___xxtofl@val+3)^0,c
  6908  001902  0E01               	movlw	1
  6909  001904  EC4D  F023         	call	___xxtofl
  6910  001908  C00B  F093         	movff	?___xxtofl,logf@dk
  6911  00190C  C00C  F094         	movff	?___xxtofl+1,logf@dk+1
  6912  001910  C00D  F095         	movff	?___xxtofl+2,logf@dk+2
  6913  001914  C00E  F096         	movff	?___xxtofl+3,logf@dk+3
  6914  001918  C097  F042         	movff	logf@s,___flmul@a
  6915  00191C  C098  F043         	movff	logf@s+1,___flmul@a+1
  6916  001920  C099  F044         	movff	logf@s+2,___flmul@a+2
  6917  001924  C09A  F045         	movff	logf@s+3,___flmul@a+3
  6918  001928  C071  F00A         	movff	logf@R,___fladd@a
  6919  00192C  C072  F00B         	movff	logf@R+1,___fladd@a+1
  6920  001930  C073  F00C         	movff	logf@R+2,___fladd@a+2
  6921  001934  C074  F00D         	movff	logf@R+3,___fladd@a+3
  6922  001938  C08F  F006         	movff	logf@hfsq,___fladd@b
  6923  00193C  C090  F007         	movff	logf@hfsq+1,___fladd@b+1
  6924  001940  C091  F008         	movff	logf@hfsq+2,___fladd@b+2
  6925  001944  C092  F009         	movff	logf@hfsq+3,___fladd@b+3
  6926  001948  EC28  F013         	call	___fladd	;wreg free
  6927  00194C  C006  F03E         	movff	?___fladd,___flmul@b
  6928  001950  C007  F03F         	movff	?___fladd+1,___flmul@b+1
  6929  001954  C008  F040         	movff	?___fladd+2,___flmul@b+2
  6930  001958  C009  F041         	movff	?___fladd+3,___flmul@b+3
  6931  00195C  EC88  F015         	call	___flmul	;wreg free
  6932  001960  C03E  F07D         	movff	?___flmul,_logf$1896
  6933  001964  C03F  F07E         	movff	?___flmul+1,_logf$1896+1
  6934  001968  C040  F07F         	movff	?___flmul+2,_logf$1896+2
  6935  00196C  C041  F080         	movff	?___flmul+3,_logf$1896+3
  6936  001970  0ED1               	movlw	209
  6937  001972  6E42               	movwf	___flmul@a^0,c
  6938  001974  0EF7               	movlw	247
  6939  001976  6E43               	movwf	(___flmul@a+1)^0,c
  6940  001978  0E17               	movlw	23
  6941  00197A  6E44               	movwf	(___flmul@a+2)^0,c
  6942  00197C  0E37               	movlw	55
  6943  00197E  6E45               	movwf	(___flmul@a+3)^0,c
  6944  001980  C093  F03E         	movff	logf@dk,___flmul@b
  6945  001984  C094  F03F         	movff	logf@dk+1,___flmul@b+1
  6946  001988  C095  F040         	movff	logf@dk+2,___flmul@b+2
  6947  00198C  C096  F041         	movff	logf@dk+3,___flmul@b+3
  6948  001990  EC88  F015         	call	___flmul	;wreg free
  6949  001994  C03E  F00A         	movff	?___flmul,___fladd@a
  6950  001998  C03F  F00B         	movff	?___flmul+1,___fladd@a+1
  6951  00199C  C040  F00C         	movff	?___flmul+2,___fladd@a+2
  6952  0019A0  C041  F00D         	movff	?___flmul+3,___fladd@a+3
  6953  0019A4  C07D  F006         	movff	_logf$1896,___fladd@b
  6954  0019A8  C07E  F007         	movff	_logf$1896+1,___fladd@b+1
  6955  0019AC  C07F  F008         	movff	_logf$1896+2,___fladd@b+2
  6956  0019B0  C080  F009         	movff	_logf$1896+3,___fladd@b+3
  6957  0019B4  EC28  F013         	call	___fladd	;wreg free
  6958  0019B8  C006  F081         	movff	?___fladd,_logf$1897
  6959  0019BC  C007  F082         	movff	?___fladd+1,_logf$1897+1
  6960  0019C0  C008  F083         	movff	?___fladd+2,_logf$1897+2
  6961  0019C4  C009  F084         	movff	?___fladd+3,_logf$1897+3
  6962  0019C8  C08F  F01D         	movff	logf@hfsq,___flsub@a
  6963  0019CC  C090  F01E         	movff	logf@hfsq+1,___flsub@a+1
  6964  0019D0  C091  F01F         	movff	logf@hfsq+2,___flsub@a+2
  6965  0019D4  C092  F020         	movff	logf@hfsq+3,___flsub@a+3
  6966  0019D8  C081  F019         	movff	_logf$1897,___flsub@b
  6967  0019DC  C082  F01A         	movff	_logf$1897+1,___flsub@b+1
  6968  0019E0  C083  F01B         	movff	_logf$1897+2,___flsub@b+2
  6969  0019E4  C084  F01C         	movff	_logf$1897+3,___flsub@b+3
  6970  0019E8  EC3D  F032         	call	___flsub	;wreg free
  6971  0019EC  C019  F085         	movff	?___flsub,_logf$1898
  6972  0019F0  C01A  F086         	movff	?___flsub+1,_logf$1898+1
  6973  0019F4  C01B  F087         	movff	?___flsub+2,_logf$1898+2
  6974  0019F8  C01C  F088         	movff	?___flsub+3,_logf$1898+3
  6975  0019FC  C0AB  F00A         	movff	logf@f,___fladd@a
  6976  001A00  C0AC  F00B         	movff	logf@f+1,___fladd@a+1
  6977  001A04  C0AD  F00C         	movff	logf@f+2,___fladd@a+2
  6978  001A08  C0AE  F00D         	movff	logf@f+3,___fladd@a+3
  6979  001A0C  C085  F006         	movff	_logf$1898,___fladd@b
  6980  001A10  C086  F007         	movff	_logf$1898+1,___fladd@b+1
  6981  001A14  C087  F008         	movff	_logf$1898+2,___fladd@b+2
  6982  001A18  C088  F009         	movff	_logf$1898+3,___fladd@b+3
  6983  001A1C  EC28  F013         	call	___fladd	;wreg free
  6984  001A20  C006  F089         	movff	?___fladd,_logf$1899
  6985  001A24  C007  F08A         	movff	?___fladd+1,_logf$1899+1
  6986  001A28  C008  F08B         	movff	?___fladd+2,_logf$1899+2
  6987  001A2C  C009  F08C         	movff	?___fladd+3,_logf$1899+3
  6988  001A30  C089  F006         	movff	_logf$1899,___fladd@b
  6989  001A34  C08A  F007         	movff	_logf$1899+1,___fladd@b+1
  6990  001A38  C08B  F008         	movff	_logf$1899+2,___fladd@b+2
  6991  001A3C  C08C  F009         	movff	_logf$1899+3,___fladd@b+3
  6992  001A40  0E80               	movlw	128
  6993  001A42  6E42               	movwf	___flmul@a^0,c
  6994  001A44  0E71               	movlw	113
  6995  001A46  6E43               	movwf	(___flmul@a+1)^0,c
  6996  001A48  0E31               	movlw	49
  6997  001A4A  6E44               	movwf	(___flmul@a+2)^0,c
  6998  001A4C  0E3F               	movlw	63
  6999  001A4E  6E45               	movwf	(___flmul@a+3)^0,c
  7000  001A50  C093  F03E         	movff	logf@dk,___flmul@b
  7001  001A54  C094  F03F         	movff	logf@dk+1,___flmul@b+1
  7002  001A58  C095  F040         	movff	logf@dk+2,___flmul@b+2
  7003  001A5C  C096  F041         	movff	logf@dk+3,___flmul@b+3
  7004  001A60  EC88  F015         	call	___flmul	;wreg free
  7005  001A64  C03E  F00A         	movff	?___flmul,___fladd@a
  7006  001A68  C03F  F00B         	movff	?___flmul+1,___fladd@a+1
  7007  001A6C  C040  F00C         	movff	?___flmul+2,___fladd@a+2
  7008  001A70  C041  F00D         	movff	?___flmul+3,___fladd@a+3
  7009  001A74  EC28  F013         	call	___fladd	;wreg free
  7010  001A78  C006  F06D         	movff	?___fladd,?_logf
  7011  001A7C  C007  F06E         	movff	?___fladd+1,?_logf+1
  7012  001A80  C008  F06F         	movff	?___fladd+2,?_logf+2
  7013  001A84  C009  F070         	movff	?___fladd+3,?_logf+3
  7014  001A88                     l1732:
  7015  001A88  0012               	return		;funcret
  7016  001A8A                     __end_of_logf:
  7017                           	opt callstack 0
  7018                           
  7019 ;; *************** function _expf *****************
  7020 ;; Defined at:
  7021 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\expf.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  x               4   83[BANK0 ] float 
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;  hx              4  133[BANK0 ] unsigned long 
  7026 ;;  k               4  129[BANK0 ] long 
  7027 ;;  lo              4  123[BANK0 ] float 
  7028 ;;  hi              4  119[BANK0 ] float 
  7029 ;;  y               4  115[BANK0 ] float 
  7030 ;;  xx              4  111[BANK0 ] float 
  7031 ;;  c               4  107[BANK0 ] float 
  7032 ;;  __xc8_float_    4   87[BANK0 ] struct .
  7033 ;;  sign            2  127[BANK0 ] int 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  4   83[BANK0 ] float 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7043 ;;      Params:         0       4       0       0       0       0       0       0       0
  7044 ;;      Locals:         0      50       0       0       0       0       0       0       0
  7045 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7046 ;;      Totals:         4      54       0       0       0       0       0       0       0
  7047 ;;Total ram usage:       58 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    4
  7050 ;; This function calls:
  7051 ;;		___fladd
  7052 ;;		___fldiv
  7053 ;;		___flmul
  7054 ;;		___flsub
  7055 ;;		___fltol
  7056 ;;		___xxtofl
  7057 ;;		_scalbnf
  7058 ;; This function is called by:
  7059 ;;		_myPow
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text26
  7064  001A8A                     __ptext26:
  7065                           	opt callstack 0
  7066  001A8A                     _expf:
  7067                           	opt callstack 23
  7068  001A8A  C0B3  F0B7         	movff	expf@x,expf@__xc8_float_word
  7069  001A8E  C0B4  F0B8         	movff	expf@x+1,expf@__xc8_float_word+1
  7070  001A92  C0B5  F0B9         	movff	expf@x+2,expf@__xc8_float_word+2
  7071  001A96  C0B6  F0BA         	movff	expf@x+3,expf@__xc8_float_word+3
  7072  001A9A  C0B7  F0E5         	movff	expf@__xc8_float_word,expf@hx
  7073  001A9E  C0B8  F0E6         	movff	expf@__xc8_float_word+1,expf@hx+1
  7074  001AA2  C0B9  F0E7         	movff	expf@__xc8_float_word+2,expf@hx+2
  7075  001AA6  C0BA  F0E8         	movff	expf@__xc8_float_word+3,expf@hx+3
  7076  001AAA  C0E5  F050         	movff	expf@hx,??_expf
  7077  001AAE  C0E6  F051         	movff	expf@hx+1,??_expf+1
  7078  001AB2  C0E7  F052         	movff	expf@hx+2,??_expf+2
  7079  001AB6  C0E8  F053         	movff	expf@hx+3,??_expf+3
  7080  001ABA  0E20               	movlw	32
  7081  001ABC  EF65  F00D         	goto	u10130
  7082  001AC0                     u10135:
  7083  001AC0  90D8               	bcf	status,0,c
  7084  001AC2  3253               	rrcf	(??_expf+3)^0,f,c
  7085  001AC4  3252               	rrcf	(??_expf+2)^0,f,c
  7086  001AC6  3251               	rrcf	(??_expf+1)^0,f,c
  7087  001AC8  3250               	rrcf	??_expf^0,f,c
  7088  001ACA                     u10130:
  7089  001ACA  2EE8               	decfsz	wreg,f,c
  7090  001ACC  EF60  F00D         	goto	u10135
  7091  001AD0  C050  F0DF         	movff	??_expf,expf@sign
  7092  001AD4  C051  F0E0         	movff	??_expf+1,expf@sign+1
  7093  001AD8  0100               	movlb	0	; () banked
  7094  001ADA  9FE8               	bcf	(expf@hx+3)& (0+255),7,b
  7095  001ADC                     
  7096                           ; BSR set to: 0
  7097  001ADC  0E50               	movlw	80
  7098  001ADE  5DE5               	subwf	expf@hx& (0+255),w,b
  7099  001AE0  0EAC               	movlw	172
  7100  001AE2  59E6               	subwfb	(expf@hx+1)& (0+255),w,b
  7101  001AE4  0EAE               	movlw	174
  7102  001AE6  59E7               	subwfb	(expf@hx+2)& (0+255),w,b
  7103  001AE8  0E42               	movlw	66
  7104  001AEA  59E8               	subwfb	(expf@hx+3)& (0+255),w,b
  7105  001AEC  A0D8               	btfss	status,0,c
  7106  001AEE  EF7B  F00D         	goto	u10141
  7107  001AF2  EF7D  F00D         	goto	u10140
  7108  001AF6                     u10141:
  7109  001AF6  EFEB  F00D         	goto	l9567
  7110  001AFA                     u10140:
  7111  001AFA                     
  7112                           ; BSR set to: 0
  7113  001AFA  05E5               	decf	expf@hx& (0+255),w,b
  7114  001AFC  0E00               	movlw	0
  7115  001AFE  59E6               	subwfb	(expf@hx+1)& (0+255),w,b
  7116  001B00  0E80               	movlw	128
  7117  001B02  59E7               	subwfb	(expf@hx+2)& (0+255),w,b
  7118  001B04  0E7F               	movlw	127
  7119  001B06  59E8               	subwfb	(expf@hx+3)& (0+255),w,b
  7120  001B08  A0D8               	btfss	status,0,c
  7121  001B0A  EF89  F00D         	goto	u10151
  7122  001B0E  EF8B  F00D         	goto	u10150
  7123  001B12                     u10151:
  7124  001B12  EF95  F00D         	goto	l9549
  7125  001B16                     u10150:
  7126  001B16                     l9547:
  7127  001B16  C0B3  F0B3         	movff	expf@x,?_expf
  7128  001B1A  C0B4  F0B4         	movff	expf@x+1,?_expf+1
  7129  001B1E  C0B5  F0B5         	movff	expf@x+2,?_expf+2
  7130  001B22  C0B6  F0B6         	movff	expf@x+3,?_expf+3
  7131  001B26  EF53  F010         	goto	l1668
  7132  001B2A                     l9549:
  7133                           
  7134                           ; BSR set to: 0
  7135  001B2A  0E18               	movlw	24
  7136  001B2C  5DE5               	subwf	expf@hx& (0+255),w,b
  7137  001B2E  0E72               	movlw	114
  7138  001B30  59E6               	subwfb	(expf@hx+1)& (0+255),w,b
  7139  001B32  0EB1               	movlw	177
  7140  001B34  59E7               	subwfb	(expf@hx+2)& (0+255),w,b
  7141  001B36  0E42               	movlw	66
  7142  001B38  59E8               	subwfb	(expf@hx+3)& (0+255),w,b
  7143  001B3A  A0D8               	btfss	status,0,c
  7144  001B3C  EFA2  F00D         	goto	u10161
  7145  001B40  EFA4  F00D         	goto	u10160
  7146  001B44                     u10161:
  7147  001B44  EFC9  F00D         	goto	l9559
  7148  001B48                     u10160:
  7149  001B48                     
  7150                           ; BSR set to: 0
  7151  001B48  51DF               	movf	expf@sign& (0+255),w,b
  7152  001B4A  11E0               	iorwf	(expf@sign+1)& (0+255),w,b
  7153  001B4C  A4D8               	btfss	status,2,c
  7154  001B4E  EFAB  F00D         	goto	u10171
  7155  001B52  EFAD  F00D         	goto	u10170
  7156  001B56                     u10171:
  7157  001B56  EFC9  F00D         	goto	l9559
  7158  001B5A                     u10170:
  7159  001B5A                     
  7160                           ; BSR set to: 0
  7161  001B5A  C0B3  F03E         	movff	expf@x,___flmul@b
  7162  001B5E  C0B4  F03F         	movff	expf@x+1,___flmul@b+1
  7163  001B62  C0B5  F040         	movff	expf@x+2,___flmul@b+2
  7164  001B66  C0B6  F041         	movff	expf@x+3,___flmul@b+3
  7165  001B6A  0E00               	movlw	0
  7166  001B6C  6E42               	movwf	___flmul@a^0,c
  7167  001B6E  0E00               	movlw	0
  7168  001B70  6E43               	movwf	(___flmul@a+1)^0,c
  7169  001B72  0E00               	movlw	0
  7170  001B74  6E44               	movwf	(___flmul@a+2)^0,c
  7171  001B76  0E7F               	movlw	127
  7172  001B78  6E45               	movwf	(___flmul@a+3)^0,c
  7173  001B7A  EC88  F015         	call	___flmul	;wreg free
  7174  001B7E  C03E  F0B3         	movff	?___flmul,expf@x
  7175  001B82  C03F  F0B4         	movff	?___flmul+1,expf@x+1
  7176  001B86  C040  F0B5         	movff	?___flmul+2,expf@x+2
  7177  001B8A  C041  F0B6         	movff	?___flmul+3,expf@x+3
  7178  001B8E  EF8B  F00D         	goto	l9547
  7179  001B92                     l9559:
  7180                           
  7181                           ; BSR set to: 0
  7182  001B92  51DF               	movf	expf@sign& (0+255),w,b
  7183  001B94  11E0               	iorwf	(expf@sign+1)& (0+255),w,b
  7184  001B96  B4D8               	btfsc	status,2,c
  7185  001B98  EFD0  F00D         	goto	u10181
  7186  001B9C  EFD2  F00D         	goto	u10180
  7187  001BA0                     u10181:
  7188  001BA0  EFEB  F00D         	goto	l9567
  7189  001BA4                     u10180:
  7190  001BA4                     
  7191                           ; BSR set to: 0
  7192  001BA4  0EB5               	movlw	181
  7193  001BA6  5DE5               	subwf	expf@hx& (0+255),w,b
  7194  001BA8  0EF1               	movlw	241
  7195  001BAA  59E6               	subwfb	(expf@hx+1)& (0+255),w,b
  7196  001BAC  0ECF               	movlw	207
  7197  001BAE  59E7               	subwfb	(expf@hx+2)& (0+255),w,b
  7198  001BB0  0E42               	movlw	66
  7199  001BB2  59E8               	subwfb	(expf@hx+3)& (0+255),w,b
  7200  001BB4  A0D8               	btfss	status,0,c
  7201  001BB6  EFDF  F00D         	goto	u10191
  7202  001BBA  EFE1  F00D         	goto	u10190
  7203  001BBE                     u10191:
  7204  001BBE  EFEB  F00D         	goto	l9567
  7205  001BC2                     u10190:
  7206  001BC2                     
  7207                           ; BSR set to: 0
  7208  001BC2  0E00               	movlw	0
  7209  001BC4  6FB3               	movwf	?_expf& (0+255),b
  7210  001BC6  0E00               	movlw	0
  7211  001BC8  6FB4               	movwf	(?_expf+1)& (0+255),b
  7212  001BCA  0E00               	movlw	0
  7213  001BCC  6FB5               	movwf	(?_expf+2)& (0+255),b
  7214  001BCE  0E00               	movlw	0
  7215  001BD0  6FB6               	movwf	(?_expf+3)& (0+255),b
  7216  001BD2  EF53  F010         	goto	l1668
  7217  001BD6                     l9567:
  7218                           
  7219                           ; BSR set to: 0
  7220  001BD6  0E19               	movlw	25
  7221  001BD8  5DE5               	subwf	expf@hx& (0+255),w,b
  7222  001BDA  0E72               	movlw	114
  7223  001BDC  59E6               	subwfb	(expf@hx+1)& (0+255),w,b
  7224  001BDE  0EB1               	movlw	177
  7225  001BE0  59E7               	subwfb	(expf@hx+2)& (0+255),w,b
  7226  001BE2  0E3E               	movlw	62
  7227  001BE4  59E8               	subwfb	(expf@hx+3)& (0+255),w,b
  7228  001BE6  A0D8               	btfss	status,0,c
  7229  001BE8  EFF8  F00D         	goto	u10201
  7230  001BEC  EFFA  F00D         	goto	u10200
  7231  001BF0                     u10201:
  7232  001BF0  EFE5  F00E         	goto	l9581
  7233  001BF4                     u10200:
  7234  001BF4                     
  7235                           ; BSR set to: 0
  7236  001BF4  0E93               	movlw	147
  7237  001BF6  5DE5               	subwf	expf@hx& (0+255),w,b
  7238  001BF8  0E15               	movlw	21
  7239  001BFA  59E6               	subwfb	(expf@hx+1)& (0+255),w,b
  7240  001BFC  0E85               	movlw	133
  7241  001BFE  59E7               	subwfb	(expf@hx+2)& (0+255),w,b
  7242  001C00  0E3F               	movlw	63
  7243  001C02  59E8               	subwfb	(expf@hx+3)& (0+255),w,b
  7244  001C04  A0D8               	btfss	status,0,c
  7245  001C06  EF07  F00E         	goto	u10211
  7246  001C0A  EF09  F00E         	goto	u10210
  7247  001C0E                     u10211:
  7248  001C0E  EF55  F00E         	goto	l9573
  7249  001C12                     u10210:
  7250  001C12                     
  7251                           ; BSR set to: 0
  7252  001C12  C0DF  F050         	movff	expf@sign,??_expf
  7253  001C16  C0E0  F051         	movff	expf@sign+1,??_expf+1
  7254  001C1A  90D8               	bcf	status,0,c
  7255  001C1C  3650               	rlcf	??_expf^0,f,c
  7256  001C1E  3651               	rlcf	(??_expf+1)^0,f,c
  7257  001C20  90D8               	bcf	status,0,c
  7258  001C22  3650               	rlcf	??_expf^0,f,c
  7259  001C24  3651               	rlcf	(??_expf+1)^0,f,c
  7260  001C26  0E47               	movlw	low _half
  7261  001C28  2450               	addwf	??_expf^0,w,c
  7262  001C2A  6EF6               	movwf	tblptrl,c
  7263  001C2C  0E7D               	movlw	high _half
  7264  001C2E  2051               	addwfc	(??_expf+1)^0,w,c
  7265  001C30  6EF7               	movwf	tblptrh,c
  7266  001C32                     	if	0	;There are less than 3 active tblptr bytes
  7267  001C32                     	endif
  7268  001C32  0009               	tblrd		*+
  7269  001C34  CFF5 F00A          	movff	tablat,___fladd@a
  7270  001C38  0009               	tblrd		*+
  7271  001C3A  CFF5 F00B          	movff	tablat,___fladd@a+1
  7272  001C3E  0009               	tblrd		*+
  7273  001C40  CFF5 F00C          	movff	tablat,___fladd@a+2
  7274  001C44  000A               	tblrd		*-
  7275  001C46  CFF5 F00D          	movff	tablat,___fladd@a+3
  7276  001C4A  0E3B               	movlw	59
  7277  001C4C  6E42               	movwf	___flmul@a^0,c
  7278  001C4E  0EAA               	movlw	170
  7279  001C50  6E43               	movwf	(___flmul@a+1)^0,c
  7280  001C52  0EB8               	movlw	184
  7281  001C54  6E44               	movwf	(___flmul@a+2)^0,c
  7282  001C56  0E3F               	movlw	63
  7283  001C58  6E45               	movwf	(___flmul@a+3)^0,c
  7284  001C5A  C0B3  F03E         	movff	expf@x,___flmul@b
  7285  001C5E  C0B4  F03F         	movff	expf@x+1,___flmul@b+1
  7286  001C62  C0B5  F040         	movff	expf@x+2,___flmul@b+2
  7287  001C66  C0B6  F041         	movff	expf@x+3,___flmul@b+3
  7288  001C6A  EC88  F015         	call	___flmul	;wreg free
  7289  001C6E  C03E  F006         	movff	?___flmul,___fladd@b
  7290  001C72  C03F  F007         	movff	?___flmul+1,___fladd@b+1
  7291  001C76  C040  F008         	movff	?___flmul+2,___fladd@b+2
  7292  001C7A  C041  F009         	movff	?___flmul+3,___fladd@b+3
  7293  001C7E  EC28  F013         	call	___fladd	;wreg free
  7294  001C82  C006  F06D         	movff	?___fladd,___fltol@f1
  7295  001C86  C007  F06E         	movff	?___fladd+1,___fltol@f1+1
  7296  001C8A  C008  F06F         	movff	?___fladd+2,___fltol@f1+2
  7297  001C8E  C009  F070         	movff	?___fladd+3,___fltol@f1+3
  7298  001C92  EC3E  F028         	call	___fltol	;wreg free
  7299  001C96  C06D  F0E1         	movff	?___fltol,expf@k
  7300  001C9A  C06E  F0E2         	movff	?___fltol+1,expf@k+1
  7301  001C9E  C06F  F0E3         	movff	?___fltol+2,expf@k+2
  7302  001CA2  C070  F0E4         	movff	?___fltol+3,expf@k+3
  7303  001CA6  EF6D  F00E         	goto	l9575
  7304  001CAA                     l9573:
  7305                           
  7306                           ; BSR set to: 0
  7307  001CAA  C0DF  F050         	movff	expf@sign,??_expf
  7308  001CAE  C0E0  F051         	movff	expf@sign+1,??_expf+1
  7309  001CB2  90D8               	bcf	status,0,c
  7310  001CB4  3650               	rlcf	??_expf^0,f,c
  7311  001CB6  3651               	rlcf	(??_expf+1)^0,f,c
  7312  001CB8  0E01               	movlw	1
  7313  001CBA  6E52               	movwf	(??_expf+2)^0,c
  7314  001CBC  0E00               	movlw	0
  7315  001CBE  6E53               	movwf	(??_expf+3)^0,c
  7316  001CC0  5050               	movf	??_expf^0,w,c
  7317  001CC2  5E52               	subwf	(??_expf+2)^0,f,c
  7318  001CC4  5051               	movf	(??_expf+1)^0,w,c
  7319  001CC6  5A53               	subwfb	(??_expf+3)^0,f,c
  7320  001CC8  C052  F0E1         	movff	??_expf+2,expf@k
  7321  001CCC  C053  F0E2         	movff	??_expf+3,expf@k+1
  7322  001CD0  0E00               	movlw	0
  7323  001CD2  BFE2               	btfsc	(expf@k+1)& (0+255),7,b
  7324  001CD4  0EFF               	movlw	-1
  7325  001CD6  6FE3               	movwf	(expf@k+2)& (0+255),b
  7326  001CD8  6FE4               	movwf	(expf@k+3)& (0+255),b
  7327  001CDA                     l9575:
  7328  001CDA  C0B3  F019         	movff	expf@x,___flsub@b
  7329  001CDE  C0B4  F01A         	movff	expf@x+1,___flsub@b+1
  7330  001CE2  C0B5  F01B         	movff	expf@x+2,___flsub@b+2
  7331  001CE6  C0B6  F01C         	movff	expf@x+3,___flsub@b+3
  7332  001CEA  0E00               	movlw	0
  7333  001CEC  6E42               	movwf	___flmul@a^0,c
  7334  001CEE  0E72               	movlw	114
  7335  001CF0  6E43               	movwf	(___flmul@a+1)^0,c
  7336  001CF2  0E31               	movlw	49
  7337  001CF4  6E44               	movwf	(___flmul@a+2)^0,c
  7338  001CF6  0E3F               	movlw	63
  7339  001CF8  6E45               	movwf	(___flmul@a+3)^0,c
  7340  001CFA  C0E1  F00B         	movff	expf@k,___xxtofl@val
  7341  001CFE  C0E2  F00C         	movff	expf@k+1,___xxtofl@val+1
  7342  001D02  C0E3  F00D         	movff	expf@k+2,___xxtofl@val+2
  7343  001D06  C0E4  F00E         	movff	expf@k+3,___xxtofl@val+3
  7344  001D0A  0E01               	movlw	1
  7345  001D0C  EC4D  F023         	call	___xxtofl
  7346  001D10  C00B  F03E         	movff	?___xxtofl,___flmul@b
  7347  001D14  C00C  F03F         	movff	?___xxtofl+1,___flmul@b+1
  7348  001D18  C00D  F040         	movff	?___xxtofl+2,___flmul@b+2
  7349  001D1C  C00E  F041         	movff	?___xxtofl+3,___flmul@b+3
  7350  001D20  EC88  F015         	call	___flmul	;wreg free
  7351  001D24  C03E  F01D         	movff	?___flmul,___flsub@a
  7352  001D28  C03F  F01E         	movff	?___flmul+1,___flsub@a+1
  7353  001D2C  C040  F01F         	movff	?___flmul+2,___flsub@a+2
  7354  001D30  C041  F020         	movff	?___flmul+3,___flsub@a+3
  7355  001D34  EC3D  F032         	call	___flsub	;wreg free
  7356  001D38  C019  F0D7         	movff	?___flsub,expf@hi
  7357  001D3C  C01A  F0D8         	movff	?___flsub+1,expf@hi+1
  7358  001D40  C01B  F0D9         	movff	?___flsub+2,expf@hi+2
  7359  001D44  C01C  F0DA         	movff	?___flsub+3,expf@hi+3
  7360  001D48  C0E1  F00B         	movff	expf@k,___xxtofl@val
  7361  001D4C  C0E2  F00C         	movff	expf@k+1,___xxtofl@val+1
  7362  001D50  C0E3  F00D         	movff	expf@k+2,___xxtofl@val+2
  7363  001D54  C0E4  F00E         	movff	expf@k+3,___xxtofl@val+3
  7364  001D58  0E01               	movlw	1
  7365  001D5A  EC4D  F023         	call	___xxtofl
  7366  001D5E  C00B  F03E         	movff	?___xxtofl,___flmul@b
  7367  001D62  C00C  F03F         	movff	?___xxtofl+1,___flmul@b+1
  7368  001D66  C00D  F040         	movff	?___xxtofl+2,___flmul@b+2
  7369  001D6A  C00E  F041         	movff	?___xxtofl+3,___flmul@b+3
  7370  001D6E  0E8E               	movlw	142
  7371  001D70  6E42               	movwf	___flmul@a^0,c
  7372  001D72  0EBE               	movlw	190
  7373  001D74  6E43               	movwf	(___flmul@a+1)^0,c
  7374  001D76  0EBF               	movlw	191
  7375  001D78  6E44               	movwf	(___flmul@a+2)^0,c
  7376  001D7A  0E35               	movlw	53
  7377  001D7C  6E45               	movwf	(___flmul@a+3)^0,c
  7378  001D7E  EC88  F015         	call	___flmul	;wreg free
  7379  001D82  C03E  F0DB         	movff	?___flmul,expf@lo
  7380  001D86  C03F  F0DC         	movff	?___flmul+1,expf@lo+1
  7381  001D8A  C040  F0DD         	movff	?___flmul+2,expf@lo+2
  7382  001D8E  C041  F0DE         	movff	?___flmul+3,expf@lo+3
  7383  001D92  C0D7  F019         	movff	expf@hi,___flsub@b
  7384  001D96  C0D8  F01A         	movff	expf@hi+1,___flsub@b+1
  7385  001D9A  C0D9  F01B         	movff	expf@hi+2,___flsub@b+2
  7386  001D9E  C0DA  F01C         	movff	expf@hi+3,___flsub@b+3
  7387  001DA2  C0DB  F01D         	movff	expf@lo,___flsub@a
  7388  001DA6  C0DC  F01E         	movff	expf@lo+1,___flsub@a+1
  7389  001DAA  C0DD  F01F         	movff	expf@lo+2,___flsub@a+2
  7390  001DAE  C0DE  F020         	movff	expf@lo+3,___flsub@a+3
  7391  001DB2  EC3D  F032         	call	___flsub	;wreg free
  7392  001DB6  C019  F0B3         	movff	?___flsub,expf@x
  7393  001DBA  C01A  F0B4         	movff	?___flsub+1,expf@x+1
  7394  001DBE  C01B  F0B5         	movff	?___flsub+2,expf@x+2
  7395  001DC2  C01C  F0B6         	movff	?___flsub+3,expf@x+3
  7396  001DC6  EF29  F00F         	goto	l9591
  7397  001DCA                     l9581:
  7398                           
  7399                           ; BSR set to: 0
  7400  001DCA  05E5               	decf	expf@hx& (0+255),w,b
  7401  001DCC  0E00               	movlw	0
  7402  001DCE  59E6               	subwfb	(expf@hx+1)& (0+255),w,b
  7403  001DD0  0E00               	movlw	0
  7404  001DD2  59E7               	subwfb	(expf@hx+2)& (0+255),w,b
  7405  001DD4  0E39               	movlw	57
  7406  001DD6  59E8               	subwfb	(expf@hx+3)& (0+255),w,b
  7407  001DD8  A0D8               	btfss	status,0,c
  7408  001DDA  EFF1  F00E         	goto	u10221
  7409  001DDE  EFF3  F00E         	goto	u10220
  7410  001DE2                     u10221:
  7411  001DE2  EF0D  F00F         	goto	l9587
  7412  001DE6                     u10220:
  7413  001DE6                     
  7414                           ; BSR set to: 0
  7415  001DE6  0E00               	movlw	0
  7416  001DE8  6FE1               	movwf	expf@k& (0+255),b
  7417  001DEA  0E00               	movlw	0
  7418  001DEC  6FE2               	movwf	(expf@k+1)& (0+255),b
  7419  001DEE  0E00               	movlw	0
  7420  001DF0  6FE3               	movwf	(expf@k+2)& (0+255),b
  7421  001DF2  0E00               	movlw	0
  7422  001DF4  6FE4               	movwf	(expf@k+3)& (0+255),b
  7423  001DF6                     
  7424                           ; BSR set to: 0
  7425  001DF6  C0B3  F0D7         	movff	expf@x,expf@hi
  7426  001DFA  C0B4  F0D8         	movff	expf@x+1,expf@hi+1
  7427  001DFE  C0B5  F0D9         	movff	expf@x+2,expf@hi+2
  7428  001E02  C0B6  F0DA         	movff	expf@x+3,expf@hi+3
  7429  001E06  0E00               	movlw	0
  7430  001E08  6FDB               	movwf	expf@lo& (0+255),b
  7431  001E0A  0E00               	movlw	0
  7432  001E0C  6FDC               	movwf	(expf@lo+1)& (0+255),b
  7433  001E0E  0E00               	movlw	0
  7434  001E10  6FDD               	movwf	(expf@lo+2)& (0+255),b
  7435  001E12  0E00               	movlw	0
  7436  001E14  6FDE               	movwf	(expf@lo+3)& (0+255),b
  7437  001E16  EF29  F00F         	goto	l9591
  7438  001E1A                     l9587:
  7439                           
  7440                           ; BSR set to: 0
  7441  001E1A  C0B3  F006         	movff	expf@x,___fladd@b
  7442  001E1E  C0B4  F007         	movff	expf@x+1,___fladd@b+1
  7443  001E22  C0B5  F008         	movff	expf@x+2,___fladd@b+2
  7444  001E26  C0B6  F009         	movff	expf@x+3,___fladd@b+3
  7445  001E2A  0E00               	movlw	0
  7446  001E2C  6E0A               	movwf	___fladd@a^0,c
  7447  001E2E  0E00               	movlw	0
  7448  001E30  6E0B               	movwf	(___fladd@a+1)^0,c
  7449  001E32  0E80               	movlw	128
  7450  001E34  6E0C               	movwf	(___fladd@a+2)^0,c
  7451  001E36  0E3F               	movlw	63
  7452  001E38  6E0D               	movwf	(___fladd@a+3)^0,c
  7453  001E3A  EC28  F013         	call	___fladd	;wreg free
  7454  001E3E  C006  F0B3         	movff	?___fladd,?_expf
  7455  001E42  C007  F0B4         	movff	?___fladd+1,?_expf+1
  7456  001E46  C008  F0B5         	movff	?___fladd+2,?_expf+2
  7457  001E4A  C009  F0B6         	movff	?___fladd+3,?_expf+3
  7458  001E4E  EF53  F010         	goto	l1668
  7459  001E52                     l9591:
  7460  001E52  C0B3  F03E         	movff	expf@x,___flmul@b
  7461  001E56  C0B4  F03F         	movff	expf@x+1,___flmul@b+1
  7462  001E5A  C0B5  F040         	movff	expf@x+2,___flmul@b+2
  7463  001E5E  C0B6  F041         	movff	expf@x+3,___flmul@b+3
  7464  001E62  C0B3  F042         	movff	expf@x,___flmul@a
  7465  001E66  C0B4  F043         	movff	expf@x+1,___flmul@a+1
  7466  001E6A  C0B5  F044         	movff	expf@x+2,___flmul@a+2
  7467  001E6E  C0B6  F045         	movff	expf@x+3,___flmul@a+3
  7468  001E72  EC88  F015         	call	___flmul	;wreg free
  7469  001E76  C03E  F0CF         	movff	?___flmul,expf@xx
  7470  001E7A  C03F  F0D0         	movff	?___flmul+1,expf@xx+1
  7471  001E7E  C040  F0D1         	movff	?___flmul+2,expf@xx+2
  7472  001E82  C041  F0D2         	movff	?___flmul+3,expf@xx+3
  7473  001E86  0E8F               	movlw	143
  7474  001E88  6E0A               	movwf	___fladd@a^0,c
  7475  001E8A  0EAA               	movlw	170
  7476  001E8C  6E0B               	movwf	(___fladd@a+1)^0,c
  7477  001E8E  0E2A               	movlw	42
  7478  001E90  6E0C               	movwf	(___fladd@a+2)^0,c
  7479  001E92  0E3E               	movlw	62
  7480  001E94  6E0D               	movwf	(___fladd@a+3)^0,c
  7481  001E96  0E15               	movlw	21
  7482  001E98  6E42               	movwf	___flmul@a^0,c
  7483  001E9A  0E52               	movlw	82
  7484  001E9C  6E43               	movwf	(___flmul@a+1)^0,c
  7485  001E9E  0E35               	movlw	53
  7486  001EA0  6E44               	movwf	(___flmul@a+2)^0,c
  7487  001EA2  0EBB               	movlw	187
  7488  001EA4  6E45               	movwf	(___flmul@a+3)^0,c
  7489  001EA6  C0CF  F03E         	movff	expf@xx,___flmul@b
  7490  001EAA  C0D0  F03F         	movff	expf@xx+1,___flmul@b+1
  7491  001EAE  C0D1  F040         	movff	expf@xx+2,___flmul@b+2
  7492  001EB2  C0D2  F041         	movff	expf@xx+3,___flmul@b+3
  7493  001EB6  EC88  F015         	call	___flmul	;wreg free
  7494  001EBA  C03E  F006         	movff	?___flmul,___fladd@b
  7495  001EBE  C03F  F007         	movff	?___flmul+1,___fladd@b+1
  7496  001EC2  C040  F008         	movff	?___flmul+2,___fladd@b+2
  7497  001EC6  C041  F009         	movff	?___flmul+3,___fladd@b+3
  7498  001ECA  EC28  F013         	call	___fladd	;wreg free
  7499  001ECE  C006  F0BB         	movff	?___fladd,_expf$1891
  7500  001ED2  C007  F0BC         	movff	?___fladd+1,_expf$1891+1
  7501  001ED6  C008  F0BD         	movff	?___fladd+2,_expf$1891+2
  7502  001EDA  C009  F0BE         	movff	?___fladd+3,_expf$1891+3
  7503  001EDE  C0B3  F019         	movff	expf@x,___flsub@b
  7504  001EE2  C0B4  F01A         	movff	expf@x+1,___flsub@b+1
  7505  001EE6  C0B5  F01B         	movff	expf@x+2,___flsub@b+2
  7506  001EEA  C0B6  F01C         	movff	expf@x+3,___flsub@b+3
  7507  001EEE  C0CF  F042         	movff	expf@xx,___flmul@a
  7508  001EF2  C0D0  F043         	movff	expf@xx+1,___flmul@a+1
  7509  001EF6  C0D1  F044         	movff	expf@xx+2,___flmul@a+2
  7510  001EFA  C0D2  F045         	movff	expf@xx+3,___flmul@a+3
  7511  001EFE  C0BB  F03E         	movff	_expf$1891,___flmul@b
  7512  001F02  C0BC  F03F         	movff	_expf$1891+1,___flmul@b+1
  7513  001F06  C0BD  F040         	movff	_expf$1891+2,___flmul@b+2
  7514  001F0A  C0BE  F041         	movff	_expf$1891+3,___flmul@b+3
  7515  001F0E  EC88  F015         	call	___flmul	;wreg free
  7516  001F12  C03E  F01D         	movff	?___flmul,___flsub@a
  7517  001F16  C03F  F01E         	movff	?___flmul+1,___flsub@a+1
  7518  001F1A  C040  F01F         	movff	?___flmul+2,___flsub@a+2
  7519  001F1E  C041  F020         	movff	?___flmul+3,___flsub@a+3
  7520  001F22  EC3D  F032         	call	___flsub	;wreg free
  7521  001F26  C019  F0CB         	movff	?___flsub,expf@c
  7522  001F2A  C01A  F0CC         	movff	?___flsub+1,expf@c+1
  7523  001F2E  C01B  F0CD         	movff	?___flsub+2,expf@c+2
  7524  001F32  C01C  F0CE         	movff	?___flsub+3,expf@c+3
  7525  001F36  C0CB  F01D         	movff	expf@c,___flsub@a
  7526  001F3A  C0CC  F01E         	movff	expf@c+1,___flsub@a+1
  7527  001F3E  C0CD  F01F         	movff	expf@c+2,___flsub@a+2
  7528  001F42  C0CE  F020         	movff	expf@c+3,___flsub@a+3
  7529  001F46  0E00               	movlw	0
  7530  001F48  6E19               	movwf	___flsub@b^0,c
  7531  001F4A  0E00               	movlw	0
  7532  001F4C  6E1A               	movwf	(___flsub@b+1)^0,c
  7533  001F4E  0E00               	movlw	0
  7534  001F50  6E1B               	movwf	(___flsub@b+2)^0,c
  7535  001F52  0E40               	movlw	64
  7536  001F54  6E1C               	movwf	(___flsub@b+3)^0,c
  7537  001F56  EC3D  F032         	call	___flsub	;wreg free
  7538  001F5A  C019  F025         	movff	?___flsub,___fldiv@a
  7539  001F5E  C01A  F026         	movff	?___flsub+1,___fldiv@a+1
  7540  001F62  C01B  F027         	movff	?___flsub+2,___fldiv@a+2
  7541  001F66  C01C  F028         	movff	?___flsub+3,___fldiv@a+3
  7542  001F6A  C0CB  F042         	movff	expf@c,___flmul@a
  7543  001F6E  C0CC  F043         	movff	expf@c+1,___flmul@a+1
  7544  001F72  C0CD  F044         	movff	expf@c+2,___flmul@a+2
  7545  001F76  C0CE  F045         	movff	expf@c+3,___flmul@a+3
  7546  001F7A  C0B3  F03E         	movff	expf@x,___flmul@b
  7547  001F7E  C0B4  F03F         	movff	expf@x+1,___flmul@b+1
  7548  001F82  C0B5  F040         	movff	expf@x+2,___flmul@b+2
  7549  001F86  C0B6  F041         	movff	expf@x+3,___flmul@b+3
  7550  001F8A  EC88  F015         	call	___flmul	;wreg free
  7551  001F8E  C03E  F021         	movff	?___flmul,___fldiv@b
  7552  001F92  C03F  F022         	movff	?___flmul+1,___fldiv@b+1
  7553  001F96  C040  F023         	movff	?___flmul+2,___fldiv@b+2
  7554  001F9A  C041  F024         	movff	?___flmul+3,___fldiv@b+3
  7555  001F9E  EC85  F019         	call	___fldiv	;wreg free
  7556  001FA2  C021  F0BF         	movff	?___fldiv,_expf$1892
  7557  001FA6  C022  F0C0         	movff	?___fldiv+1,_expf$1892+1
  7558  001FAA  C023  F0C1         	movff	?___fldiv+2,_expf$1892+2
  7559  001FAE  C024  F0C2         	movff	?___fldiv+3,_expf$1892+3
  7560  001FB2  C0DB  F01D         	movff	expf@lo,___flsub@a
  7561  001FB6  C0DC  F01E         	movff	expf@lo+1,___flsub@a+1
  7562  001FBA  C0DD  F01F         	movff	expf@lo+2,___flsub@a+2
  7563  001FBE  C0DE  F020         	movff	expf@lo+3,___flsub@a+3
  7564  001FC2  C0BF  F019         	movff	_expf$1892,___flsub@b
  7565  001FC6  C0C0  F01A         	movff	_expf$1892+1,___flsub@b+1
  7566  001FCA  C0C1  F01B         	movff	_expf$1892+2,___flsub@b+2
  7567  001FCE  C0C2  F01C         	movff	_expf$1892+3,___flsub@b+3
  7568  001FD2  EC3D  F032         	call	___flsub	;wreg free
  7569  001FD6  C019  F0C3         	movff	?___flsub,_expf$1893
  7570  001FDA  C01A  F0C4         	movff	?___flsub+1,_expf$1893+1
  7571  001FDE  C01B  F0C5         	movff	?___flsub+2,_expf$1893+2
  7572  001FE2  C01C  F0C6         	movff	?___flsub+3,_expf$1893+3
  7573  001FE6  C0D7  F00A         	movff	expf@hi,___fladd@a
  7574  001FEA  C0D8  F00B         	movff	expf@hi+1,___fladd@a+1
  7575  001FEE  C0D9  F00C         	movff	expf@hi+2,___fladd@a+2
  7576  001FF2  C0DA  F00D         	movff	expf@hi+3,___fladd@a+3
  7577  001FF6  C0C3  F006         	movff	_expf$1893,___fladd@b
  7578  001FFA  C0C4  F007         	movff	_expf$1893+1,___fladd@b+1
  7579  001FFE  C0C5  F008         	movff	_expf$1893+2,___fladd@b+2
  7580  002002  C0C6  F009         	movff	_expf$1893+3,___fladd@b+3
  7581  002006  EC28  F013         	call	___fladd	;wreg free
  7582  00200A  C006  F0C7         	movff	?___fladd,_expf$1894
  7583  00200E  C007  F0C8         	movff	?___fladd+1,_expf$1894+1
  7584  002012  C008  F0C9         	movff	?___fladd+2,_expf$1894+2
  7585  002016  C009  F0CA         	movff	?___fladd+3,_expf$1894+3
  7586  00201A  C0C7  F006         	movff	_expf$1894,___fladd@b
  7587  00201E  C0C8  F007         	movff	_expf$1894+1,___fladd@b+1
  7588  002022  C0C9  F008         	movff	_expf$1894+2,___fladd@b+2
  7589  002026  C0CA  F009         	movff	_expf$1894+3,___fladd@b+3
  7590  00202A  0E00               	movlw	0
  7591  00202C  6E0A               	movwf	___fladd@a^0,c
  7592  00202E  0E00               	movlw	0
  7593  002030  6E0B               	movwf	(___fladd@a+1)^0,c
  7594  002032  0E80               	movlw	128
  7595  002034  6E0C               	movwf	(___fladd@a+2)^0,c
  7596  002036  0E3F               	movlw	63
  7597  002038  6E0D               	movwf	(___fladd@a+3)^0,c
  7598  00203A  EC28  F013         	call	___fladd	;wreg free
  7599  00203E  C006  F0D3         	movff	?___fladd,expf@y
  7600  002042  C007  F0D4         	movff	?___fladd+1,expf@y+1
  7601  002046  C008  F0D5         	movff	?___fladd+2,expf@y+2
  7602  00204A  C009  F0D6         	movff	?___fladd+3,expf@y+3
  7603  00204E  0100               	movlb	0	; () banked
  7604  002050  51E1               	movf	expf@k& (0+255),w,b
  7605  002052  11E2               	iorwf	(expf@k+1)& (0+255),w,b
  7606  002054  11E3               	iorwf	(expf@k+2)& (0+255),w,b
  7607  002056  11E4               	iorwf	(expf@k+3)& (0+255),w,b
  7608  002058  A4D8               	btfss	status,2,c
  7609  00205A  EF31  F010         	goto	u10231
  7610  00205E  EF33  F010         	goto	u10230
  7611  002062                     u10231:
  7612  002062  EF3D  F010         	goto	l9603
  7613  002066                     u10230:
  7614  002066                     
  7615                           ; BSR set to: 0
  7616  002066  C0D3  F0B3         	movff	expf@y,?_expf
  7617  00206A  C0D4  F0B4         	movff	expf@y+1,?_expf+1
  7618  00206E  C0D5  F0B5         	movff	expf@y+2,?_expf+2
  7619  002072  C0D6  F0B6         	movff	expf@y+3,?_expf+3
  7620  002076  EF53  F010         	goto	l1668
  7621  00207A                     l9603:
  7622                           
  7623                           ; BSR set to: 0
  7624  00207A  C0D3  F06D         	movff	expf@y,scalbnf@x
  7625  00207E  C0D4  F06E         	movff	expf@y+1,scalbnf@x+1
  7626  002082  C0D5  F06F         	movff	expf@y+2,scalbnf@x+2
  7627  002086  C0D6  F070         	movff	expf@y+3,scalbnf@x+3
  7628  00208A  C0E1  F071         	movff	expf@k,scalbnf@n
  7629  00208E  C0E2  F072         	movff	expf@k+1,scalbnf@n+1
  7630  002092  EC60  F01F         	call	_scalbnf	;wreg free
  7631  002096  C06D  F0B3         	movff	?_scalbnf,?_expf
  7632  00209A  C06E  F0B4         	movff	?_scalbnf+1,?_expf+1
  7633  00209E  C06F  F0B5         	movff	?_scalbnf+2,?_expf+2
  7634  0020A2  C070  F0B6         	movff	?_scalbnf+3,?_expf+3
  7635  0020A6                     l1668:
  7636  0020A6  0012               	return		;funcret
  7637  0020A8                     __end_of_expf:
  7638                           	opt callstack 0
  7639                           
  7640 ;; *************** function _scalbnf *****************
  7641 ;; Defined at:
  7642 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\scalbnf.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  x               4   13[BANK0 ] float 
  7645 ;;  n               2   17[BANK0 ] int 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  y               4   23[BANK0 ] float 
  7648 ;;  u               4   19[BANK0 ] struct .
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  4   13[BANK0 ] float 
  7651 ;; Registers used:
  7652 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7658 ;;      Params:         0       6       0       0       0       0       0       0       0
  7659 ;;      Locals:         0       8       0       0       0       0       0       0       0
  7660 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7661 ;;      Totals:         4      14       0       0       0       0       0       0       0
  7662 ;;Total ram usage:       18 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    3
  7665 ;; This function calls:
  7666 ;;		___flmul
  7667 ;; This function is called by:
  7668 ;;		_expf
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text27
  7673  003EC0                     __ptext27:
  7674                           	opt callstack 0
  7675  003EC0                     _scalbnf:
  7676                           	opt callstack 23
  7677  003EC0  C06D  F077         	movff	scalbnf@x,scalbnf@y
  7678  003EC4  C06E  F078         	movff	scalbnf@x+1,scalbnf@y+1
  7679  003EC8  C06F  F079         	movff	scalbnf@x+2,scalbnf@y+2
  7680  003ECC  C070  F07A         	movff	scalbnf@x+3,scalbnf@y+3
  7681  003ED0  0100               	movlb	0	; () banked
  7682  003ED2  BF72               	btfsc	(scalbnf@n+1)& (0+255),7,b
  7683  003ED4  EF75  F01F         	goto	u9971
  7684  003ED8  5172               	movf	(scalbnf@n+1)& (0+255),w,b
  7685  003EDA  E109               	bnz	u9970
  7686  003EDC  0E80               	movlw	128
  7687  003EDE  5D71               	subwf	scalbnf@n& (0+255),w,b
  7688  003EE0  A0D8               	btfss	status,0,c
  7689  003EE2  EF75  F01F         	goto	u9971
  7690  003EE6  EF77  F01F         	goto	u9970
  7691  003EEA                     u9971:
  7692  003EEA  EFD7  F01F         	goto	l9433
  7693  003EEE                     u9970:
  7694  003EEE                     
  7695                           ; BSR set to: 0
  7696  003EEE  C077  F03E         	movff	scalbnf@y,___flmul@b
  7697  003EF2  C078  F03F         	movff	scalbnf@y+1,___flmul@b+1
  7698  003EF6  C079  F040         	movff	scalbnf@y+2,___flmul@b+2
  7699  003EFA  C07A  F041         	movff	scalbnf@y+3,___flmul@b+3
  7700  003EFE  0E00               	movlw	0
  7701  003F00  6E42               	movwf	___flmul@a^0,c
  7702  003F02  0E00               	movlw	0
  7703  003F04  6E43               	movwf	(___flmul@a+1)^0,c
  7704  003F06  0E00               	movlw	0
  7705  003F08  6E44               	movwf	(___flmul@a+2)^0,c
  7706  003F0A  0E7F               	movlw	127
  7707  003F0C  6E45               	movwf	(___flmul@a+3)^0,c
  7708  003F0E  EC88  F015         	call	___flmul	;wreg free
  7709  003F12  C03E  F077         	movff	?___flmul,scalbnf@y
  7710  003F16  C03F  F078         	movff	?___flmul+1,scalbnf@y+1
  7711  003F1A  C040  F079         	movff	?___flmul+2,scalbnf@y+2
  7712  003F1E  C041  F07A         	movff	?___flmul+3,scalbnf@y+3
  7713  003F22  0100               	movlb	0	; () banked
  7714  003F24  0E81               	movlw	129
  7715  003F26  2771               	addwf	scalbnf@n& (0+255),f,b
  7716  003F28  0EFF               	movlw	255
  7717  003F2A  2372               	addwfc	(scalbnf@n+1)& (0+255),f,b
  7718  003F2C                     
  7719                           ; BSR set to: 0
  7720  003F2C  BF72               	btfsc	(scalbnf@n+1)& (0+255),7,b
  7721  003F2E  EFA2  F01F         	goto	u9981
  7722  003F32  5172               	movf	(scalbnf@n+1)& (0+255),w,b
  7723  003F34  E109               	bnz	u9980
  7724  003F36  0E80               	movlw	128
  7725  003F38  5D71               	subwf	scalbnf@n& (0+255),w,b
  7726  003F3A  A0D8               	btfss	status,0,c
  7727  003F3C  EFA2  F01F         	goto	u9981
  7728  003F40  EFA4  F01F         	goto	u9980
  7729  003F44                     u9981:
  7730  003F44  EF43  F020         	goto	l9449
  7731  003F48                     u9980:
  7732  003F48                     
  7733                           ; BSR set to: 0
  7734  003F48  C077  F03E         	movff	scalbnf@y,___flmul@b
  7735  003F4C  C078  F03F         	movff	scalbnf@y+1,___flmul@b+1
  7736  003F50  C079  F040         	movff	scalbnf@y+2,___flmul@b+2
  7737  003F54  C07A  F041         	movff	scalbnf@y+3,___flmul@b+3
  7738  003F58  0E00               	movlw	0
  7739  003F5A  6E42               	movwf	___flmul@a^0,c
  7740  003F5C  0E00               	movlw	0
  7741  003F5E  6E43               	movwf	(___flmul@a+1)^0,c
  7742  003F60  0E00               	movlw	0
  7743  003F62  6E44               	movwf	(___flmul@a+2)^0,c
  7744  003F64  0E7F               	movlw	127
  7745  003F66  6E45               	movwf	(___flmul@a+3)^0,c
  7746  003F68  EC88  F015         	call	___flmul	;wreg free
  7747  003F6C  C03E  F077         	movff	?___flmul,scalbnf@y
  7748  003F70  C03F  F078         	movff	?___flmul+1,scalbnf@y+1
  7749  003F74  C040  F079         	movff	?___flmul+2,scalbnf@y+2
  7750  003F78  C041  F07A         	movff	?___flmul+3,scalbnf@y+3
  7751  003F7C  0100               	movlb	0	; () banked
  7752  003F7E  0E81               	movlw	129
  7753  003F80  2771               	addwf	scalbnf@n& (0+255),f,b
  7754  003F82  0EFF               	movlw	255
  7755  003F84  2372               	addwfc	(scalbnf@n+1)& (0+255),f,b
  7756  003F86                     
  7757                           ; BSR set to: 0
  7758  003F86  BF72               	btfsc	(scalbnf@n+1)& (0+255),7,b
  7759  003F88  EFCF  F01F         	goto	u9991
  7760  003F8C  5172               	movf	(scalbnf@n+1)& (0+255),w,b
  7761  003F8E  E109               	bnz	u9990
  7762  003F90  0E80               	movlw	128
  7763  003F92  5D71               	subwf	scalbnf@n& (0+255),w,b
  7764  003F94  A0D8               	btfss	status,0,c
  7765  003F96  EFCF  F01F         	goto	u9991
  7766  003F9A  EFD1  F01F         	goto	u9990
  7767  003F9E                     u9991:
  7768  003F9E  EF43  F020         	goto	l9449
  7769  003FA2                     u9990:
  7770  003FA2                     
  7771                           ; BSR set to: 0
  7772  003FA2  0E00               	movlw	0
  7773  003FA4  6F72               	movwf	(scalbnf@n+1)& (0+255),b
  7774  003FA6  0E7F               	movlw	127
  7775  003FA8  6F71               	movwf	scalbnf@n& (0+255),b
  7776  003FAA  EF43  F020         	goto	l9449
  7777  003FAE                     l9433:
  7778                           
  7779                           ; BSR set to: 0
  7780  003FAE  AF72               	btfss	(scalbnf@n+1)& (0+255),7,b
  7781  003FB0  EFE3  F01F         	goto	u10001
  7782  003FB4  0E82               	movlw	130
  7783  003FB6  5D71               	subwf	scalbnf@n& (0+255),w,b
  7784  003FB8  0EFF               	movlw	255
  7785  003FBA  5972               	subwfb	(scalbnf@n+1)& (0+255),w,b
  7786  003FBC  B0D8               	btfsc	status,0,c
  7787  003FBE  EFE3  F01F         	goto	u10001
  7788  003FC2  EFE5  F01F         	goto	u10000
  7789  003FC6                     u10001:
  7790  003FC6  EF43  F020         	goto	l9449
  7791  003FCA                     u10000:
  7792  003FCA                     
  7793                           ; BSR set to: 0
  7794  003FCA  C077  F03E         	movff	scalbnf@y,___flmul@b
  7795  003FCE  C078  F03F         	movff	scalbnf@y+1,___flmul@b+1
  7796  003FD2  C079  F040         	movff	scalbnf@y+2,___flmul@b+2
  7797  003FD6  C07A  F041         	movff	scalbnf@y+3,___flmul@b+3
  7798  003FDA  0E00               	movlw	0
  7799  003FDC  6E42               	movwf	___flmul@a^0,c
  7800  003FDE  0E00               	movlw	0
  7801  003FE0  6E43               	movwf	(___flmul@a+1)^0,c
  7802  003FE2  0E80               	movlw	128
  7803  003FE4  6E44               	movwf	(___flmul@a+2)^0,c
  7804  003FE6  0E0C               	movlw	12
  7805  003FE8  6E45               	movwf	(___flmul@a+3)^0,c
  7806  003FEA  EC88  F015         	call	___flmul	;wreg free
  7807  003FEE  C03E  F077         	movff	?___flmul,scalbnf@y
  7808  003FF2  C03F  F078         	movff	?___flmul+1,scalbnf@y+1
  7809  003FF6  C040  F079         	movff	?___flmul+2,scalbnf@y+2
  7810  003FFA  C041  F07A         	movff	?___flmul+3,scalbnf@y+3
  7811  003FFE  0E66               	movlw	102
  7812  004000  0100               	movlb	0	; () banked
  7813  004002  2771               	addwf	scalbnf@n& (0+255),f,b
  7814  004004  0E00               	movlw	0
  7815  004006  2372               	addwfc	(scalbnf@n+1)& (0+255),f,b
  7816  004008                     
  7817                           ; BSR set to: 0
  7818  004008  AF72               	btfss	(scalbnf@n+1)& (0+255),7,b
  7819  00400A  EF10  F020         	goto	u10011
  7820  00400E  0E82               	movlw	130
  7821  004010  5D71               	subwf	scalbnf@n& (0+255),w,b
  7822  004012  0EFF               	movlw	255
  7823  004014  5972               	subwfb	(scalbnf@n+1)& (0+255),w,b
  7824  004016  B0D8               	btfsc	status,0,c
  7825  004018  EF10  F020         	goto	u10011
  7826  00401C  EF12  F020         	goto	u10010
  7827  004020                     u10011:
  7828  004020  EF43  F020         	goto	l9449
  7829  004024                     u10010:
  7830  004024                     
  7831                           ; BSR set to: 0
  7832  004024  C077  F03E         	movff	scalbnf@y,___flmul@b
  7833  004028  C078  F03F         	movff	scalbnf@y+1,___flmul@b+1
  7834  00402C  C079  F040         	movff	scalbnf@y+2,___flmul@b+2
  7835  004030  C07A  F041         	movff	scalbnf@y+3,___flmul@b+3
  7836  004034  0E00               	movlw	0
  7837  004036  6E42               	movwf	___flmul@a^0,c
  7838  004038  0E00               	movlw	0
  7839  00403A  6E43               	movwf	(___flmul@a+1)^0,c
  7840  00403C  0E80               	movlw	128
  7841  00403E  6E44               	movwf	(___flmul@a+2)^0,c
  7842  004040  0E0C               	movlw	12
  7843  004042  6E45               	movwf	(___flmul@a+3)^0,c
  7844  004044  EC88  F015         	call	___flmul	;wreg free
  7845  004048  C03E  F077         	movff	?___flmul,scalbnf@y
  7846  00404C  C03F  F078         	movff	?___flmul+1,scalbnf@y+1
  7847  004050  C040  F079         	movff	?___flmul+2,scalbnf@y+2
  7848  004054  C041  F07A         	movff	?___flmul+3,scalbnf@y+3
  7849  004058  0E66               	movlw	102
  7850  00405A  0100               	movlb	0	; () banked
  7851  00405C  2771               	addwf	scalbnf@n& (0+255),f,b
  7852  00405E  0E00               	movlw	0
  7853  004060  2372               	addwfc	(scalbnf@n+1)& (0+255),f,b
  7854  004062                     
  7855                           ; BSR set to: 0
  7856  004062  AF72               	btfss	(scalbnf@n+1)& (0+255),7,b
  7857  004064  EF3D  F020         	goto	u10021
  7858  004068  0E82               	movlw	130
  7859  00406A  5D71               	subwf	scalbnf@n& (0+255),w,b
  7860  00406C  0EFF               	movlw	255
  7861  00406E  5972               	subwfb	(scalbnf@n+1)& (0+255),w,b
  7862  004070  B0D8               	btfsc	status,0,c
  7863  004072  EF3D  F020         	goto	u10021
  7864  004076  EF3F  F020         	goto	u10020
  7865  00407A                     u10021:
  7866  00407A  EF43  F020         	goto	l9449
  7867  00407E                     u10020:
  7868  00407E                     
  7869                           ; BSR set to: 0
  7870  00407E  0EFF               	movlw	255
  7871  004080  6F72               	movwf	(scalbnf@n+1)& (0+255),b
  7872  004082  0E82               	movlw	130
  7873  004084  6F71               	movwf	scalbnf@n& (0+255),b
  7874  004086                     l9449:
  7875                           
  7876                           ; BSR set to: 0
  7877  004086  0E7F               	movlw	127
  7878  004088  2571               	addwf	scalbnf@n& (0+255),w,b
  7879  00408A  6E4A               	movwf	??_scalbnf^0,c
  7880  00408C  0E00               	movlw	0
  7881  00408E  2172               	addwfc	(scalbnf@n+1)& (0+255),w,b
  7882  004090  6E4B               	movwf	(??_scalbnf+1)^0,c
  7883  004092  6A4C               	clrf	(??_scalbnf+2)^0,c
  7884  004094  6A4D               	clrf	(??_scalbnf+3)^0,c
  7885  004096  0E17               	movlw	23
  7886  004098                     u10035:
  7887  004098  90D8               	bcf	status,0,c
  7888  00409A  364A               	rlcf	??_scalbnf^0,f,c
  7889  00409C  364B               	rlcf	(??_scalbnf+1)^0,f,c
  7890  00409E  364C               	rlcf	(??_scalbnf+2)^0,f,c
  7891  0040A0  364D               	rlcf	(??_scalbnf+3)^0,f,c
  7892  0040A2  2EE8               	decfsz	wreg,f,c
  7893  0040A4  EF4C  F020         	goto	u10035
  7894  0040A8  C04A  F073         	movff	??_scalbnf,scalbnf@u
  7895  0040AC  C04B  F074         	movff	??_scalbnf+1,scalbnf@u+1
  7896  0040B0  C04C  F075         	movff	??_scalbnf+2,scalbnf@u+2
  7897  0040B4  C04D  F076         	movff	??_scalbnf+3,scalbnf@u+3
  7898  0040B8                     
  7899                           ; BSR set to: 0
  7900  0040B8  C073  F03E         	movff	scalbnf@u,___flmul@b
  7901  0040BC  C074  F03F         	movff	scalbnf@u+1,___flmul@b+1
  7902  0040C0  C075  F040         	movff	scalbnf@u+2,___flmul@b+2
  7903  0040C4  C076  F041         	movff	scalbnf@u+3,___flmul@b+3
  7904  0040C8  C077  F042         	movff	scalbnf@y,___flmul@a
  7905  0040CC  C078  F043         	movff	scalbnf@y+1,___flmul@a+1
  7906  0040D0  C079  F044         	movff	scalbnf@y+2,___flmul@a+2
  7907  0040D4  C07A  F045         	movff	scalbnf@y+3,___flmul@a+3
  7908  0040D8  EC88  F015         	call	___flmul	;wreg free
  7909  0040DC  C03E  F06D         	movff	?___flmul,scalbnf@x
  7910  0040E0  C03F  F06E         	movff	?___flmul+1,scalbnf@x+1
  7911  0040E4  C040  F06F         	movff	?___flmul+2,scalbnf@x+2
  7912  0040E8  C041  F070         	movff	?___flmul+3,scalbnf@x+3
  7913  0040EC  C06D  F06D         	movff	scalbnf@x,?_scalbnf
  7914  0040F0  C06E  F06E         	movff	scalbnf@x+1,?_scalbnf+1
  7915  0040F4  C06F  F06F         	movff	scalbnf@x+2,?_scalbnf+2
  7916  0040F8  C070  F070         	movff	scalbnf@x+3,?_scalbnf+3
  7917  0040FC  0012               	return		;funcret
  7918  0040FE                     __end_of_scalbnf:
  7919                           	opt callstack 0
  7920                           
  7921 ;; *************** function _decidirDireccion *****************
  7922 ;; Defined at:
  7923 ;;		line 848 in file "main.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  caminosRecor    2    0[BANK1 ] PTR unsigned char 
  7926 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
  7927 ;;  investigando    2    2[BANK1 ] PTR unsigned char 
  7928 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  7929 ;;  posicionInvC    2    4[BANK1 ] PTR unsigned char 
  7930 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  7931 ;;  contCaminosR    2    6[BANK1 ] PTR unsigned char 
  7932 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  7933 ;;  caminoActual    2    8[BANK1 ] PTR unsigned char 
  7934 ;;		 -> comportamientoBasico@caminoActual(1), 
  7935 ;;  cambioOrient    2   10[BANK1 ] PTR unsigned char 
  7936 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  7937 ;;  mapear          2   12[BANK1 ] PTR unsigned char 
  7938 ;;		 -> comportamientoBasico@mapear(1), 
  7939 ;;  cruceDetecta    2   14[BANK1 ] PTR unsigned char 
  7940 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  7941 ;;  avanceRectoL    2   16[BANK1 ] PTR unsigned char 
  7942 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  7943 ;;  caminoFinal     2   18[BANK1 ] PTR unsigned char 
  7944 ;;		 -> comportamientoBasico@caminoFinal(20), 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  direccionEle    1  145[BANK0 ] unsigned char 
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      unsigned char 
  7949 ;; Registers used:
  7950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7956 ;;      Params:         0       0      20       0       0       0       0       0       0
  7957 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7958 ;;      Temps:          0       3       0       0       0       0       0       0       0
  7959 ;;      Totals:         0       4      20       0       0       0       0       0       0
  7960 ;;Total ram usage:       24 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; Hardware stack levels required when called:   10
  7963 ;; This function calls:
  7964 ;;		_UART_printf
  7965 ;;		___flge
  7966 ;;		_hayCruce
  7967 ;;		_mostrarDireccionElegida
  7968 ;;		_seLlegoAlDestino
  7969 ;;		_sprintf
  7970 ;;		_velocidadBaja
  7971 ;; This function is called by:
  7972 ;;		_comportamientoBasico
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text28
  7977  000BDC                     __ptext28:
  7978                           	opt callstack 0
  7979  000BDC                     _decidirDireccion:
  7980                           	opt callstack 19
  7981  000BDC                     
  7982                           ;main.c: 848: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 849:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro,;main.c: 850:         T_UBYTE* mapear
      +                          , T_UBYTE* cruceDetectado, T_BOOL* avanceRectoLargo, T_UBYTE* caminoFinal) {;main.c: 852
      +                          :     T_UBYTE direccionElegida;;main.c: 853:     llegoDestino = seLlegoAlDestino();
  7983  000BDC  EC55  F033         	call	_seLlegoAlDestino	;wreg free
  7984  000BE0  6E59               	movwf	_llegoDestino^0,c
  7985  000BE2                     
  7986                           ;main.c: 856:     if (*posicionInvCruce && *investigandoCruce && !caminoEncontrado) {
  7987  000BE2  C1DE  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  7988  000BE6  C1DF  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  7989  000BEA  50DF               	movf	indf2,w,c
  7990  000BEC  B4D8               	btfsc	status,2,c
  7991  000BEE  EFFB  F005         	goto	u10681
  7992  000BF2  EFFD  F005         	goto	u10680
  7993  000BF6                     u10681:
  7994  000BF6  EFE3  F007         	goto	l10327
  7995  000BFA                     u10680:
  7996  000BFA  C1DC  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7997  000BFE  C1DD  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7998  000C02  50DF               	movf	indf2,w,c
  7999  000C04  B4D8               	btfsc	status,2,c
  8000  000C06  EF07  F006         	goto	u10691
  8001  000C0A  EF09  F006         	goto	u10690
  8002  000C0E                     u10691:
  8003  000C0E  EFE3  F007         	goto	l10327
  8004  000C12                     u10690:
  8005  000C12  0101               	movlb	1	; () banked
  8006  000C14  5147               	movf	_caminoEncontrado& (0+255),w,b
  8007  000C16  A4D8               	btfss	status,2,c
  8008  000C18  EF10  F006         	goto	u10701
  8009  000C1C  EF12  F006         	goto	u10700
  8010  000C20                     u10701:
  8011  000C20  EFE3  F007         	goto	l10327
  8012  000C24                     u10700:
  8013  000C24                     
  8014                           ; BSR set to: 1
  8015                           ;main.c: 858:         if (*posicionInvCruce)
  8016  000C24  C1DE  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  8017  000C28  C1DF  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  8018  000C2C  50DF               	movf	indf2,w,c
  8019  000C2E  B4D8               	btfsc	status,2,c
  8020  000C30  EF1C  F006         	goto	u10711
  8021  000C34  EF1E  F006         	goto	u10710
  8022  000C38                     u10711:
  8023  000C38  EF24  F006         	goto	l10081
  8024  000C3C                     u10710:
  8025  000C3C                     
  8026                           ; BSR set to: 1
  8027                           ;main.c: 859:             *posicionInvCruce = 0;
  8028  000C3C  C1DE  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  8029  000C40  C1DF  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  8030  000C44  0E00               	movlw	0
  8031  000C46  6EDF               	movwf	indf2,c
  8032  000C48                     l10081:
  8033                           
  8034                           ; BSR set to: 1
  8035                           ;main.c: 861:         if (llegoDestino) {
  8036  000C48  5059               	movf	_llegoDestino^0,w,c
  8037  000C4A  B4D8               	btfsc	status,2,c
  8038  000C4C  EF2A  F006         	goto	u10721
  8039  000C50  EF2C  F006         	goto	u10720
  8040  000C54                     u10721:
  8041  000C54  EF8E  F006         	goto	l10105
  8042  000C58                     u10720:
  8043  000C58                     
  8044                           ; BSR set to: 1
  8045                           ;main.c: 862:             direccionElegida = ALTO;
  8046  000C58  0E04               	movlw	4
  8047  000C5A  0100               	movlb	0	; () banked
  8048  000C5C  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8049                           
  8050                           ;main.c: 864:         } else {
  8051  000C5E  EFAC  F006         	goto	l10107
  8052  000C62                     l10085:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;main.c: 868:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1'
      +                          )
  8056  000C62  C1DA  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  8057  000C66  C1DB  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  8058  000C6A  0E31               	movlw	49
  8059  000C6C  18DE               	xorwf	postinc2,w,c
  8060  000C6E  A4D8               	btfss	status,2,c
  8061  000C70  EF3C  F006         	goto	u10731
  8062  000C74  EF3E  F006         	goto	u10730
  8063  000C78                     u10731:
  8064  000C78  EF46  F006         	goto	l10089
  8065  000C7C                     u10730:
  8066  000C7C                     
  8067                           ; BSR set to: 0
  8068                           ;main.c: 869:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
  8069  000C7C  C1DA  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  8070  000C80  C1DB  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  8071  000C84  0E58               	movlw	88
  8072  000C86  6EDF               	movwf	indf2,c
  8073  000C88  EFAC  F006         	goto	l10107
  8074  000C8C                     l10089:
  8075                           
  8076                           ; BSR set to: 0
  8077  000C8C  0101               	movlb	1	; () banked
  8078  000C8E  EE20 F001          	lfsr	2,1
  8079  000C92  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8080  000C94  26D9               	addwf	fsr2l,f,c
  8081  000C96  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8082  000C98  22DA               	addwfc	fsr2h,f,c
  8083  000C9A  0E31               	movlw	49
  8084  000C9C  18DE               	xorwf	postinc2,w,c
  8085  000C9E  A4D8               	btfss	status,2,c
  8086  000CA0  EF54  F006         	goto	u10741
  8087  000CA4  EF56  F006         	goto	u10740
  8088  000CA8                     u10741:
  8089  000CA8  EFAC  F006         	goto	l537
  8090  000CAC                     u10740:
  8091  000CAC                     l10091:
  8092                           
  8093                           ; BSR set to: 1
  8094  000CAC  EE20 F001          	lfsr	2,1
  8095  000CB0  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8096  000CB2  26D9               	addwf	fsr2l,f,c
  8097  000CB4  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8098  000CB6  22DA               	addwfc	fsr2h,f,c
  8099  000CB8  0E58               	movlw	88
  8100  000CBA  6EDF               	movwf	indf2,c
  8101  000CBC  EFAC  F006         	goto	l10107
  8102  000CC0                     l10093:
  8103                           
  8104                           ; BSR set to: 0
  8105  000CC0  0101               	movlb	1	; () banked
  8106  000CC2  EE20 F001          	lfsr	2,1
  8107  000CC6  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8108  000CC8  26D9               	addwf	fsr2l,f,c
  8109  000CCA  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8110  000CCC  22DA               	addwfc	fsr2h,f,c
  8111  000CCE  0E31               	movlw	49
  8112  000CD0  18DE               	xorwf	postinc2,w,c
  8113  000CD2  A4D8               	btfss	status,2,c
  8114  000CD4  EF6E  F006         	goto	u10751
  8115  000CD8  EF70  F006         	goto	u10750
  8116  000CDC                     u10751:
  8117  000CDC  EF72  F006         	goto	l10097
  8118  000CE0                     u10750:
  8119  000CE0  EF56  F006         	goto	l10091
  8120  000CE4                     l10097:
  8121                           
  8122                           ; BSR set to: 1
  8123  000CE4  EE20 F002          	lfsr	2,2
  8124  000CE8  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8125  000CEA  26D9               	addwf	fsr2l,f,c
  8126  000CEC  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8127  000CEE  22DA               	addwfc	fsr2h,f,c
  8128  000CF0  0E58               	movlw	88
  8129  000CF2  6EDF               	movwf	indf2,c
  8130  000CF4  EFAC  F006         	goto	l10107
  8131  000CF8                     l10099:
  8132                           
  8133                           ; BSR set to: 0
  8134  000CF8  0101               	movlb	1	; () banked
  8135  000CFA  EE20 F002          	lfsr	2,2
  8136  000CFE  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8137  000D00  26D9               	addwf	fsr2l,f,c
  8138  000D02  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8139  000D04  22DA               	addwfc	fsr2h,f,c
  8140  000D06  0E31               	movlw	49
  8141  000D08  18DE               	xorwf	postinc2,w,c
  8142  000D0A  A4D8               	btfss	status,2,c
  8143  000D0C  EF8A  F006         	goto	u10761
  8144  000D10  EF8C  F006         	goto	u10760
  8145  000D14                     u10761:
  8146  000D14  EFAC  F006         	goto	l10107
  8147  000D18                     u10760:
  8148  000D18  EF72  F006         	goto	l10097
  8149  000D1C                     l10105:
  8150                           
  8151                           ; BSR set to: 1
  8152  000D1C  C1E0  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  8153  000D20  C1E1  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  8154  000D24  50DF               	movf	indf2,w,c
  8155  000D26  0100               	movlb	0	; () banked
  8156  000D28  6FEE               	movwf	??_decidirDireccion& (0+255),b
  8157  000D2A  6BEF               	clrf	(??_decidirDireccion+1)& (0+255),b
  8158                           
  8159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8160                           ; Switch size 1, requested type "simple"
  8161                           ; Number of cases is 1, Range of values is 0 to 0
  8162                           ; switch strategies available:
  8163                           ; Name         Instructions Cycles
  8164                           ; simple_byte            4     3 (average)
  8165                           ;	Chosen strategy is simple_byte
  8166  000D2C  51EF               	movf	(??_decidirDireccion+1)& (0+255),w,b
  8167  000D2E  0A00               	xorlw	0	; case 0
  8168  000D30  B4D8               	btfsc	status,2,c
  8169  000D32  EF9D  F006         	goto	l11157
  8170  000D36  EFAC  F006         	goto	l10107
  8171  000D3A                     l11157:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ; Switch size 1, requested type "simple"
  8175                           ; Number of cases is 3, Range of values is 1 to 3
  8176                           ; switch strategies available:
  8177                           ; Name         Instructions Cycles
  8178                           ; simple_byte           10     6 (average)
  8179                           ;	Chosen strategy is simple_byte
  8180  000D3A  51EE               	movf	??_decidirDireccion& (0+255),w,b
  8181  000D3C  0A01               	xorlw	1	; case 1
  8182  000D3E  B4D8               	btfsc	status,2,c
  8183  000D40  EF31  F006         	goto	l10085
  8184  000D44  0A03               	xorlw	3	; case 2
  8185  000D46  B4D8               	btfsc	status,2,c
  8186  000D48  EF60  F006         	goto	l10093
  8187  000D4C  0A01               	xorlw	1	; case 3
  8188  000D4E  B4D8               	btfsc	status,2,c
  8189  000D50  EF7C  F006         	goto	l10099
  8190  000D54  EFAC  F006         	goto	l10107
  8191  000D58                     l537:
  8192  000D58                     l10107:
  8193                           
  8194                           ;main.c: 897:         if (!(*cambioOrientacionCarro)) {
  8195  000D58  C1E4  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  8196  000D5C  C1E5  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  8197  000D60  50DF               	movf	indf2,w,c
  8198  000D62  A4D8               	btfss	status,2,c
  8199  000D64  EFB6  F006         	goto	u10771
  8200  000D68  EFB8  F006         	goto	u10770
  8201  000D6C                     u10771:
  8202  000D6C  EFAE  F007         	goto	l10317
  8203  000D70                     u10770:
  8204  000D70                     
  8205                           ;main.c: 899:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1')
  8206  000D70  C1DA  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  8207  000D74  C1DB  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  8208  000D78  0E31               	movlw	49
  8209  000D7A  18DE               	xorwf	postinc2,w,c
  8210  000D7C  A4D8               	btfss	status,2,c
  8211  000D7E  EFC3  F006         	goto	u10781
  8212  000D82  EFC5  F006         	goto	u10780
  8213  000D86                     u10781:
  8214  000D86  EFCA  F006         	goto	l10113
  8215  000D8A                     u10780:
  8216  000D8A  0E01               	movlw	1
  8217  000D8C  0100               	movlb	0	; () banked
  8218  000D8E  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8219  000D90  EFF1  F006         	goto	l10121
  8220  000D94                     l10113:
  8221  000D94  0101               	movlb	1	; () banked
  8222  000D96  EE20 F001          	lfsr	2,1
  8223  000D9A  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8224  000D9C  26D9               	addwf	fsr2l,f,c
  8225  000D9E  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8226  000DA0  22DA               	addwfc	fsr2h,f,c
  8227  000DA2  0E31               	movlw	49
  8228  000DA4  18DE               	xorwf	postinc2,w,c
  8229  000DA6  A4D8               	btfss	status,2,c
  8230  000DA8  EFD8  F006         	goto	u10791
  8231  000DAC  EFDA  F006         	goto	u10790
  8232  000DB0                     u10791:
  8233  000DB0  EFDF  F006         	goto	l10117
  8234  000DB4                     u10790:
  8235  000DB4                     
  8236                           ; BSR set to: 1
  8237  000DB4  0E02               	movlw	2
  8238  000DB6  0100               	movlb	0	; () banked
  8239  000DB8  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8240  000DBA  EFF1  F006         	goto	l10121
  8241  000DBE                     l10117:
  8242                           
  8243                           ; BSR set to: 1
  8244  000DBE  EE20 F002          	lfsr	2,2
  8245  000DC2  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8246  000DC4  26D9               	addwf	fsr2l,f,c
  8247  000DC6  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8248  000DC8  22DA               	addwfc	fsr2h,f,c
  8249  000DCA  0E31               	movlw	49
  8250  000DCC  18DE               	xorwf	postinc2,w,c
  8251  000DCE  A4D8               	btfss	status,2,c
  8252  000DD0  EFEC  F006         	goto	u10801
  8253  000DD4  EFEE  F006         	goto	u10800
  8254  000DD8                     u10801:
  8255  000DD8  EFF1  F006         	goto	l10121
  8256  000DDC                     u10800:
  8257  000DDC                     
  8258                           ; BSR set to: 1
  8259  000DDC  0E03               	movlw	3
  8260  000DDE  0100               	movlb	0	; () banked
  8261  000DE0  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8262  000DE2                     l10121:
  8263                           
  8264                           ;main.c: 907:             *caminoActual = direccionElegida;
  8265  000DE2  C1E2  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  8266  000DE6  C1E3  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  8267  000DEA  C0F1  FFDF         	movff	decidirDireccion@direccionElegida,indf2
  8268  000DEE                     
  8269                           ;main.c: 908:             *cambioOrientacionCarro = 1;
  8270  000DEE  C1E4  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  8271  000DF2  C1E5  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  8272  000DF6  0E01               	movlw	1
  8273  000DF8  6EDF               	movwf	indf2,c
  8274                           
  8275                           ;main.c: 910:         } else {
  8276  000DFA  EFCC  F007         	goto	l10319
  8277  000DFE                     l567:
  8278                           
  8279                           ; BSR set to: 1
  8280  000DFE  EF45  F007         	goto	l10221
  8281  000E02                     l10179:
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;main.c: 964:                         if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] ==
      +                           'X') {
  8285  000E02  C1DA  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  8286  000E06  C1DB  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  8287  000E0A  0E58               	movlw	88
  8288  000E0C  18DE               	xorwf	postinc2,w,c
  8289  000E0E  A4D8               	btfss	status,2,c
  8290  000E10  EF0C  F007         	goto	u10811
  8291  000E14  EF0E  F007         	goto	u10810
  8292  000E18                     u10811:
  8293  000E18  EF45  F007         	goto	l10221
  8294  000E1C                     u10810:
  8295  000E1C                     
  8296                           ; BSR set to: 0
  8297  000E1C  0101               	movlb	1	; () banked
  8298  000E1E  EE20 F001          	lfsr	2,1
  8299  000E22  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8300  000E24  26D9               	addwf	fsr2l,f,c
  8301  000E26  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8302  000E28  22DA               	addwfc	fsr2h,f,c
  8303  000E2A  0E31               	movlw	49
  8304  000E2C  18DE               	xorwf	postinc2,w,c
  8305  000E2E  A4D8               	btfss	status,2,c
  8306  000E30  EF1C  F007         	goto	u10821
  8307  000E34  EF1E  F007         	goto	u10820
  8308  000E38                     u10821:
  8309  000E38  EF29  F007         	goto	l10199
  8310  000E3C                     u10820:
  8311  000E3C                     
  8312                           ; BSR set to: 1
  8313                           ;main.c: 967:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA
      +                           - 1] == '1') {;main.c: 968:                                 *caminoActual = IZQUIERDA;
  8314  000E3C  C1E2  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  8315  000E40  C1E3  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  8316  000E44  0E02               	movlw	2
  8317  000E46  6EDF               	movwf	indf2,c
  8318  000E48                     
  8319                           ; BSR set to: 1
  8320                           ;main.c: 969:                                 direccionElegida = DERECHA;
  8321  000E48  0E03               	movlw	3
  8322  000E4A  0100               	movlb	0	; () banked
  8323  000E4C  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8324                           
  8325                           ;main.c: 970:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA &
      +                          &
  8326  000E4E  EF45  F007         	goto	l10221
  8327  000E52                     l10199:
  8328                           
  8329                           ; BSR set to: 1
  8330  000E52  EE20 F002          	lfsr	2,2
  8331  000E56  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8332  000E58  26D9               	addwf	fsr2l,f,c
  8333  000E5A  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8334  000E5C  22DA               	addwfc	fsr2h,f,c
  8335  000E5E  0E31               	movlw	49
  8336  000E60  18DE               	xorwf	postinc2,w,c
  8337  000E62  A4D8               	btfss	status,2,c
  8338  000E64  EF36  F007         	goto	u10831
  8339  000E68  EF38  F007         	goto	u10830
  8340  000E6C                     u10831:
  8341  000E6C  EFFF  F006         	goto	l567
  8342  000E70                     u10830:
  8343  000E70                     
  8344                           ; BSR set to: 1
  8345                           ;main.c: 979:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA 
      +                          - 1] == '1') {;main.c: 980:                                 *caminoActual = DERECHA;
  8346  000E70  C1E2  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  8347  000E74  C1E3  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  8348  000E78  0E03               	movlw	3
  8349  000E7A  6EDF               	movwf	indf2,c
  8350  000E7C                     
  8351                           ; BSR set to: 1
  8352                           ;main.c: 981:                                 direccionElegida = IZQUIERDA;
  8353  000E7C  0E02               	movlw	2
  8354  000E7E  0100               	movlb	0	; () banked
  8355  000E80  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8356  000E82  EF45  F007         	goto	l10221
  8357  000E86                     l584:
  8358                           
  8359                           ; BSR set to: 1
  8360  000E86  EFCC  F007         	goto	l10319
  8361  000E8A                     l10221:
  8362  000E8A  0101               	movlb	1	; () banked
  8363  000E8C  EE20 F001          	lfsr	2,1
  8364  000E90  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8365  000E92  26D9               	addwf	fsr2l,f,c
  8366  000E94  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8367  000E96  22DA               	addwfc	fsr2h,f,c
  8368  000E98  0E58               	movlw	88
  8369  000E9A  18DE               	xorwf	postinc2,w,c
  8370  000E9C  A4D8               	btfss	status,2,c
  8371  000E9E  EF53  F007         	goto	u10841
  8372  000EA2  EF55  F007         	goto	u10840
  8373  000EA6                     u10841:
  8374  000EA6  EFCC  F007         	goto	l10319
  8375  000EAA                     u10840:
  8376  000EAA                     
  8377                           ; BSR set to: 1
  8378  000EAA  EE20 F002          	lfsr	2,2
  8379  000EAE  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8380  000EB0  26D9               	addwf	fsr2l,f,c
  8381  000EB2  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8382  000EB4  22DA               	addwfc	fsr2h,f,c
  8383  000EB6  0E31               	movlw	49
  8384  000EB8  18DE               	xorwf	postinc2,w,c
  8385  000EBA  A4D8               	btfss	status,2,c
  8386  000EBC  EF62  F007         	goto	u10851
  8387  000EC0  EF64  F007         	goto	u10850
  8388  000EC4                     u10851:
  8389  000EC4  EF43  F007         	goto	l584
  8390  000EC8                     u10850:
  8391  000EC8                     l10225:
  8392                           
  8393                           ; BSR set to: 1
  8394                           ;main.c: 1009:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1010:                                 *caminoActual = DERECHA;
  8395  000EC8  C1E2  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  8396  000ECC  C1E3  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  8397  000ED0  0E03               	movlw	3
  8398  000ED2  6EDF               	movwf	indf2,c
  8399  000ED4                     
  8400                           ; BSR set to: 1
  8401                           ;main.c: 1011:                                 direccionElegida = ENFRENTE;
  8402  000ED4  0E01               	movlw	1
  8403  000ED6  0100               	movlb	0	; () banked
  8404  000ED8  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8405                           
  8406                           ;main.c: 1012:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
  8407  000EDA  EFCC  F007         	goto	l10319
  8408  000EDE                     l10267:
  8409                           
  8410                           ; BSR set to: 0
  8411  000EDE  0101               	movlb	1	; () banked
  8412  000EE0  EE20 F001          	lfsr	2,1
  8413  000EE4  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8414  000EE6  26D9               	addwf	fsr2l,f,c
  8415  000EE8  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8416  000EEA  22DA               	addwfc	fsr2h,f,c
  8417  000EEC  0E58               	movlw	88
  8418  000EEE  18DE               	xorwf	postinc2,w,c
  8419  000EF0  A4D8               	btfss	status,2,c
  8420  000EF2  EF7D  F007         	goto	u10861
  8421  000EF6  EF7F  F007         	goto	u10860
  8422  000EFA                     u10861:
  8423  000EFA  EFCC  F007         	goto	l10319
  8424  000EFE                     u10860:
  8425  000EFE                     
  8426                           ; BSR set to: 1
  8427  000EFE  EE20 F002          	lfsr	2,2
  8428  000F02  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8429  000F04  26D9               	addwf	fsr2l,f,c
  8430  000F06  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8431  000F08  22DA               	addwfc	fsr2h,f,c
  8432  000F0A  0E31               	movlw	49
  8433  000F0C  18DE               	xorwf	postinc2,w,c
  8434  000F0E  A4D8               	btfss	status,2,c
  8435  000F10  EF8C  F007         	goto	u10871
  8436  000F14  EF8E  F007         	goto	u10870
  8437  000F18                     u10871:
  8438  000F18  EF90  F007         	goto	l10281
  8439  000F1C                     u10870:
  8440  000F1C  EF64  F007         	goto	l10225
  8441  000F20                     l10281:
  8442                           
  8443                           ; BSR set to: 1
  8444                           ;main.c: 1072:                                 *contCaminosRecorridos = 3;
  8445  000F20  C1E0  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  8446  000F24  C1E1  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  8447  000F28  0E03               	movlw	3
  8448  000F2A  6EDF               	movwf	indf2,c
  8449  000F2C  EFCC  F007         	goto	l10319
  8450  000F30                     l10311:
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;main.c: 1111:                     *cambioOrientacionCarro = 0;
  8454  000F30  C1E4  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  8455  000F34  C1E5  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  8456  000F38  0E00               	movlw	0
  8457  000F3A  6EDF               	movwf	indf2,c
  8458                           
  8459                           ;main.c: 1112:                     *contCaminosRecorridos = 0;
  8460  000F3C  C1E0  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  8461  000F40  C1E1  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  8462  000F44  0E00               	movlw	0
  8463  000F46  6EDF               	movwf	indf2,c
  8464                           
  8465                           ;main.c: 1113:                     *investigandoCruce = 0;
  8466  000F48  C1DC  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  8467  000F4C  C1DD  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  8468  000F50  0E00               	movlw	0
  8469  000F52  6EDF               	movwf	indf2,c
  8470  000F54                     
  8471                           ; BSR set to: 0
  8472                           ;main.c: 1114:                     direccionElegida = ALTO;
  8473  000F54  0E04               	movlw	4
  8474  000F56  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8475                           
  8476                           ;main.c: 1116:                     break;
  8477  000F58  EFCC  F007         	goto	l10319
  8478  000F5C                     l10317:
  8479  000F5C  C1E0  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  8480  000F60  C1E1  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  8481  000F64  50DF               	movf	indf2,w,c
  8482  000F66  0100               	movlb	0	; () banked
  8483  000F68  6FEE               	movwf	??_decidirDireccion& (0+255),b
  8484  000F6A  6BEF               	clrf	(??_decidirDireccion+1)& (0+255),b
  8485                           
  8486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8487                           ; Switch size 1, requested type "simple"
  8488                           ; Number of cases is 1, Range of values is 0 to 0
  8489                           ; switch strategies available:
  8490                           ; Name         Instructions Cycles
  8491                           ; simple_byte            4     3 (average)
  8492                           ;	Chosen strategy is simple_byte
  8493  000F6C  51EF               	movf	(??_decidirDireccion+1)& (0+255),w,b
  8494  000F6E  0A00               	xorlw	0	; case 0
  8495  000F70  B4D8               	btfsc	status,2,c
  8496  000F72  EFBD  F007         	goto	l11159
  8497  000F76  EFCC  F007         	goto	l10319
  8498  000F7A                     l11159:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ; Switch size 1, requested type "simple"
  8502                           ; Number of cases is 3, Range of values is 1 to 3
  8503                           ; switch strategies available:
  8504                           ; Name         Instructions Cycles
  8505                           ; simple_byte           10     6 (average)
  8506                           ;	Chosen strategy is simple_byte
  8507  000F7A  51EE               	movf	??_decidirDireccion& (0+255),w,b
  8508  000F7C  0A01               	xorlw	1	; case 1
  8509  000F7E  B4D8               	btfsc	status,2,c
  8510  000F80  EF01  F007         	goto	l10179
  8511  000F84  0A03               	xorlw	3	; case 2
  8512  000F86  B4D8               	btfsc	status,2,c
  8513  000F88  EF6F  F007         	goto	l10267
  8514  000F8C  0A01               	xorlw	1	; case 3
  8515  000F8E  B4D8               	btfsc	status,2,c
  8516  000F90  EF98  F007         	goto	l10311
  8517  000F94  EFCC  F007         	goto	l10319
  8518  000F98                     l10319:
  8519                           
  8520                           ;main.c: 1120:         if (direccionElegida == ENFRENTE) {
  8521  000F98  0100               	movlb	0	; () banked
  8522  000F9A  05F1               	decf	decidirDireccion@direccionElegida& (0+255),w,b
  8523  000F9C  A4D8               	btfss	status,2,c
  8524  000F9E  EFD3  F007         	goto	u10881
  8525  000FA2  EFD5  F007         	goto	u10880
  8526  000FA6                     u10881:
  8527  000FA6  EFDD  F007         	goto	l10325
  8528  000FAA                     u10880:
  8529  000FAA                     
  8530                           ; BSR set to: 0
  8531                           ;main.c: 1121:             *avanceRectoLargo = 1;
  8532  000FAA  C1EA  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  8533  000FAE  C1EB  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  8534  000FB2  0E01               	movlw	1
  8535  000FB4  6EDF               	movwf	indf2,c
  8536  000FB6                     
  8537                           ; BSR set to: 0
  8538                           ;main.c: 1122:             velocidadBaja();
  8539  000FB6  EC7F  F033         	call	_velocidadBaja	;wreg free
  8540  000FBA                     l10325:
  8541                           
  8542                           ;main.c: 1125:         mostrarDireccionElegida(direccionElegida);
  8543  000FBA  0100               	movlb	0	; () banked
  8544  000FBC  51F1               	movf	decidirDireccion@direccionElegida& (0+255),w,b
  8545  000FBE  ECEF  F02E         	call	_mostrarDireccionElegida
  8546                           
  8547                           ;main.c: 1127:     } else if (*posicionInvCruce && *investigandoCruce && caminoEncontrad
      +                          o) {
  8548  000FC2  EFA0  F009         	goto	l631
  8549  000FC6                     l10327:
  8550  000FC6  C1DE  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  8551  000FCA  C1DF  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  8552  000FCE  50DF               	movf	indf2,w,c
  8553  000FD0  B4D8               	btfsc	status,2,c
  8554  000FD2  EFED  F007         	goto	u10891
  8555  000FD6  EFEF  F007         	goto	u10890
  8556  000FDA                     u10891:
  8557  000FDA  EF97  F008         	goto	l10363
  8558  000FDE                     u10890:
  8559  000FDE  C1DC  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  8560  000FE2  C1DD  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  8561  000FE6  50DF               	movf	indf2,w,c
  8562  000FE8  B4D8               	btfsc	status,2,c
  8563  000FEA  EFF9  F007         	goto	u10901
  8564  000FEE  EFFB  F007         	goto	u10900
  8565  000FF2                     u10901:
  8566  000FF2  EF97  F008         	goto	l10363
  8567  000FF6                     u10900:
  8568  000FF6  0101               	movlb	1	; () banked
  8569  000FF8  5147               	movf	_caminoEncontrado& (0+255),w,b
  8570  000FFA  B4D8               	btfsc	status,2,c
  8571  000FFC  EF02  F008         	goto	u10911
  8572  001000  EF04  F008         	goto	u10910
  8573  001004                     u10911:
  8574  001004  EF97  F008         	goto	l10363
  8575  001008                     u10910:
  8576  001008                     
  8577                           ; BSR set to: 1
  8578                           ;main.c: 1129:         if (*posicionInvCruce)
  8579  001008  C1DE  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  8580  00100C  C1DF  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  8581  001010  50DF               	movf	indf2,w,c
  8582  001012  B4D8               	btfsc	status,2,c
  8583  001014  EF0E  F008         	goto	u10921
  8584  001018  EF10  F008         	goto	u10920
  8585  00101C                     u10921:
  8586  00101C  EF16  F008         	goto	l10337
  8587  001020                     u10920:
  8588  001020                     
  8589                           ; BSR set to: 1
  8590                           ;main.c: 1130:             *posicionInvCruce = 0;
  8591  001020  C1DE  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  8592  001024  C1DF  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  8593  001028  0E00               	movlw	0
  8594  00102A  6EDF               	movwf	indf2,c
  8595  00102C                     l10337:
  8596                           
  8597                           ; BSR set to: 1
  8598                           ;main.c: 1132:         if (ida) {
  8599  00102C  51F3               	movf	_ida& (0+255),w,b
  8600  00102E  B4D8               	btfsc	status,2,c
  8601  001030  EF1C  F008         	goto	u10931
  8602  001034  EF1E  F008         	goto	u10930
  8603  001038                     u10931:
  8604  001038  EF33  F008         	goto	l10343
  8605  00103C                     u10930:
  8606  00103C                     
  8607                           ; BSR set to: 1
  8608                           ;main.c: 1133:             direccionElegida = caminoFinal[crucesRecorridos - 1];
  8609  00103C  5146               	movf	_crucesRecorridos& (0+255),w,b
  8610  00103E  25EC               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  8611  001040  0100               	movlb	0	; () banked
  8612  001042  6FEE               	movwf	??_decidirDireccion& (0+255),b
  8613  001044  0E00               	movlw	0
  8614  001046  0101               	movlb	1	; () banked
  8615  001048  21ED               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  8616  00104A  0100               	movlb	0	; () banked
  8617  00104C  6FEF               	movwf	(??_decidirDireccion+1)& (0+255),b
  8618  00104E  0EFF               	movlw	255
  8619  001050  25EE               	addwf	??_decidirDireccion& (0+255),w,b
  8620  001052  6ED9               	movwf	fsr2l,c
  8621  001054  0EFF               	movlw	255
  8622  001056  21EF               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  8623  001058  6EDA               	movwf	fsr2h,c
  8624  00105A  50DF               	movf	indf2,w,c
  8625  00105C  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8626  00105E                     
  8627                           ; BSR set to: 0
  8628                           ;main.c: 1134:             crucesRecorridos++;
  8629  00105E  0101               	movlb	1	; () banked
  8630  001060  2B46               	incf	_crucesRecorridos& (0+255),f,b
  8631                           
  8632                           ;main.c: 1135:         } else {
  8633  001062  EF91  F008         	goto	l10361
  8634  001066                     l10343:
  8635                           
  8636                           ; BSR set to: 1
  8637                           ;main.c: 1137:             if (caminoFinal[crucesRecorridos - 1] == IZQUIERDA)
  8638  001066  5146               	movf	_crucesRecorridos& (0+255),w,b
  8639  001068  25EC               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  8640  00106A  0100               	movlb	0	; () banked
  8641  00106C  6FEE               	movwf	??_decidirDireccion& (0+255),b
  8642  00106E  0E00               	movlw	0
  8643  001070  0101               	movlb	1	; () banked
  8644  001072  21ED               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  8645  001074  0100               	movlb	0	; () banked
  8646  001076  6FEF               	movwf	(??_decidirDireccion+1)& (0+255),b
  8647  001078  0EFF               	movlw	255
  8648  00107A  25EE               	addwf	??_decidirDireccion& (0+255),w,b
  8649  00107C  6ED9               	movwf	fsr2l,c
  8650  00107E  0EFF               	movlw	255
  8651  001080  21EF               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  8652  001082  6EDA               	movwf	fsr2h,c
  8653  001084  0E02               	movlw	2
  8654  001086  18DE               	xorwf	postinc2,w,c
  8655  001088  A4D8               	btfss	status,2,c
  8656  00108A  EF49  F008         	goto	u10941
  8657  00108E  EF4B  F008         	goto	u10940
  8658  001092                     u10941:
  8659  001092  EF4F  F008         	goto	l10347
  8660  001096                     u10940:
  8661  001096                     
  8662                           ; BSR set to: 0
  8663                           ;main.c: 1138:                 direccionElegida = DERECHA;
  8664  001096  0E03               	movlw	3
  8665  001098  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8666  00109A  EF7E  F008         	goto	l10353
  8667  00109E                     l10347:
  8668                           
  8669                           ; BSR set to: 0
  8670  00109E  0101               	movlb	1	; () banked
  8671  0010A0  5146               	movf	_crucesRecorridos& (0+255),w,b
  8672  0010A2  25EC               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  8673  0010A4  0100               	movlb	0	; () banked
  8674  0010A6  6FEE               	movwf	??_decidirDireccion& (0+255),b
  8675  0010A8  0E00               	movlw	0
  8676  0010AA  0101               	movlb	1	; () banked
  8677  0010AC  21ED               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  8678  0010AE  0100               	movlb	0	; () banked
  8679  0010B0  6FEF               	movwf	(??_decidirDireccion+1)& (0+255),b
  8680  0010B2  0EFF               	movlw	255
  8681  0010B4  25EE               	addwf	??_decidirDireccion& (0+255),w,b
  8682  0010B6  6ED9               	movwf	fsr2l,c
  8683  0010B8  0EFF               	movlw	255
  8684  0010BA  21EF               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  8685  0010BC  6EDA               	movwf	fsr2h,c
  8686  0010BE  0E03               	movlw	3
  8687  0010C0  18DE               	xorwf	postinc2,w,c
  8688  0010C2  A4D8               	btfss	status,2,c
  8689  0010C4  EF66  F008         	goto	u10951
  8690  0010C8  EF68  F008         	goto	u10950
  8691  0010CC                     u10951:
  8692  0010CC  EF6C  F008         	goto	l10351
  8693  0010D0                     u10950:
  8694  0010D0                     
  8695                           ; BSR set to: 0
  8696                           ;main.c: 1140:                 direccionElegida = IZQUIERDA;
  8697  0010D0  0E02               	movlw	2
  8698  0010D2  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8699  0010D4  EF7E  F008         	goto	l10353
  8700  0010D8                     l10351:
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;main.c: 1142:                 direccionElegida = caminoFinal[crucesRecorridos - 1];
  8704  0010D8  0101               	movlb	1	; () banked
  8705  0010DA  5146               	movf	_crucesRecorridos& (0+255),w,b
  8706  0010DC  25EC               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  8707  0010DE  0100               	movlb	0	; () banked
  8708  0010E0  6FEE               	movwf	??_decidirDireccion& (0+255),b
  8709  0010E2  0E00               	movlw	0
  8710  0010E4  0101               	movlb	1	; () banked
  8711  0010E6  21ED               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  8712  0010E8  0100               	movlb	0	; () banked
  8713  0010EA  6FEF               	movwf	(??_decidirDireccion+1)& (0+255),b
  8714  0010EC  0EFF               	movlw	255
  8715  0010EE  25EE               	addwf	??_decidirDireccion& (0+255),w,b
  8716  0010F0  6ED9               	movwf	fsr2l,c
  8717  0010F2  0EFF               	movlw	255
  8718  0010F4  21EF               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  8719  0010F6  6EDA               	movwf	fsr2h,c
  8720  0010F8  50DF               	movf	indf2,w,c
  8721  0010FA  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8722  0010FC                     l10353:
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;main.c: 1144:             crucesRecorridos--;
  8726  0010FC  0101               	movlb	1	; () banked
  8727  0010FE  0746               	decf	_crucesRecorridos& (0+255),f,b
  8728  001100                     
  8729                           ; BSR set to: 1
  8730                           ;main.c: 1146:             if (direccionElegida == ENFRENTE) {
  8731  001100  0100               	movlb	0	; () banked
  8732  001102  05F1               	decf	decidirDireccion@direccionElegida& (0+255),w,b
  8733  001104  A4D8               	btfss	status,2,c
  8734  001106  EF87  F008         	goto	u10961
  8735  00110A  EF89  F008         	goto	u10960
  8736  00110E                     u10961:
  8737  00110E  EF91  F008         	goto	l10361
  8738  001112                     u10960:
  8739  001112                     
  8740                           ; BSR set to: 0
  8741                           ;main.c: 1147:                 *avanceRectoLargo = 1;
  8742  001112  C1EA  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  8743  001116  C1EB  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  8744  00111A  0E01               	movlw	1
  8745  00111C  6EDF               	movwf	indf2,c
  8746  00111E                     
  8747                           ; BSR set to: 0
  8748                           ;main.c: 1148:                 velocidadBaja();
  8749  00111E  EC7F  F033         	call	_velocidadBaja	;wreg free
  8750  001122                     l10361:
  8751                           
  8752                           ;main.c: 1152:         mostrarDireccionElegida(direccionElegida);
  8753  001122  0100               	movlb	0	; () banked
  8754  001124  51F1               	movf	decidirDireccion@direccionElegida& (0+255),w,b
  8755  001126  ECEF  F02E         	call	_mostrarDireccionElegida
  8756                           
  8757                           ;main.c: 1155:     } else {
  8758  00112A  EFA0  F009         	goto	l631
  8759  00112E                     l10363:
  8760                           
  8761                           ;main.c: 1157:         if (llegoDestino) {
  8762  00112E  5059               	movf	_llegoDestino^0,w,c
  8763  001130  B4D8               	btfsc	status,2,c
  8764  001132  EF9D  F008         	goto	u10971
  8765  001136  EF9F  F008         	goto	u10970
  8766  00113A                     u10971:
  8767  00113A  EFA4  F008         	goto	l10367
  8768  00113E                     u10970:
  8769  00113E                     
  8770                           ;main.c: 1158:             direccionElegida = ALTO;
  8771  00113E  0E04               	movlw	4
  8772  001140  0100               	movlb	0	; () banked
  8773  001142  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8774                           
  8775                           ;main.c: 1160:         } else {
  8776  001144  EFA0  F009         	goto	l631
  8777  001148                     l10367:
  8778                           
  8779                           ;main.c: 1162:             if (hayCruce(caminosRecorrer, *investigandoCruce)) {
  8780  001148  C1DA  F04E         	movff	decidirDireccion@caminosRecorrer,hayCruce@caminosRecorrer
  8781  00114C  C1DB  F04F         	movff	decidirDireccion@caminosRecorrer+1,hayCruce@caminosRecorrer+1
  8782  001150  C1DC  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  8783  001154  C1DD  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  8784  001158  50DF               	movf	indf2,w,c
  8785  00115A  6E50               	movwf	hayCruce@investigandoCruce^0,c
  8786  00115C  EC27  F024         	call	_hayCruce	;wreg free
  8787  001160  0900               	iorlw	0
  8788  001162  B4D8               	btfsc	status,2,c
  8789  001164  EFB6  F008         	goto	u10981
  8790  001168  EFB8  F008         	goto	u10980
  8791  00116C                     u10981:
  8792  00116C  EF22  F009         	goto	l10383
  8793  001170                     u10980:
  8794  001170                     
  8795                           ;main.c: 1164:                 velocidadBaja();
  8796  001170  EC7F  F033         	call	_velocidadBaja	;wreg free
  8797  001174                     
  8798                           ;main.c: 1166:                 if (!(*cruceDetectado)) {
  8799  001174  C1E8  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  8800  001178  C1E9  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  8801  00117C  50DF               	movf	indf2,w,c
  8802  00117E  A4D8               	btfss	status,2,c
  8803  001180  EFC4  F008         	goto	u10991
  8804  001184  EFC6  F008         	goto	u10990
  8805  001188                     u10991:
  8806  001188  EFA0  F009         	goto	l631
  8807  00118C                     u10990:
  8808  00118C                     
  8809                           ;main.c: 1168:                     if (!(*investigandoCruce))
  8810  00118C  C1DC  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  8811  001190  C1DD  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  8812  001194  50DF               	movf	indf2,w,c
  8813  001196  A4D8               	btfss	status,2,c
  8814  001198  EFD0  F008         	goto	u11001
  8815  00119C  EFD2  F008         	goto	u11000
  8816  0011A0                     u11001:
  8817  0011A0  EFD8  F008         	goto	l646
  8818  0011A4                     u11000:
  8819  0011A4                     
  8820                           ;main.c: 1169:                         *posicionInvCruce = 1;
  8821  0011A4  C1DE  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  8822  0011A8  C1DF  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  8823  0011AC  0E01               	movlw	1
  8824  0011AE  6EDF               	movwf	indf2,c
  8825  0011B0                     l646:
  8826                           
  8827                           ;main.c: 1172:                     *mapear = 1;
  8828  0011B0  C1E6  FFD9         	movff	decidirDireccion@mapear,fsr2l
  8829  0011B4  C1E7  FFDA         	movff	decidirDireccion@mapear+1,fsr2h
  8830  0011B8  0E01               	movlw	1
  8831  0011BA  6EDF               	movwf	indf2,c
  8832                           
  8833                           ;main.c: 1173:                     *cruceDetectado = 1;
  8834  0011BC  C1E8  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  8835  0011C0  C1E9  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  8836  0011C4  0E01               	movlw	1
  8837  0011C6  6EDF               	movwf	indf2,c
  8838                           
  8839                           ;main.c: 1174:                     *investigandoCruce = 1;
  8840  0011C8  C1DC  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  8841  0011CC  C1DD  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  8842  0011D0  0E01               	movlw	1
  8843  0011D2  6EDF               	movwf	indf2,c
  8844  0011D4                     
  8845                           ;main.c: 1175:                     direccionElegida = ALTO;
  8846  0011D4  0E04               	movlw	4
  8847  0011D6  0100               	movlb	0	; () banked
  8848  0011D8  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8849  0011DA                     
  8850                           ; BSR set to: 0
  8851                           ;main.c: 1177:                     sprintf(buffer, "Investigando Cruce: %c | %c | %c\n",
  8852  0011DA  0E9A               	movlw	low _buffer
  8853  0011DC  6FDA               	movwf	sprintf@s& (0+255),b
  8854  0011DE  0E01               	movlw	high _buffer
  8855  0011E0  6FDB               	movwf	(sprintf@s+1)& (0+255),b
  8856  0011E2  0E87               	movlw	low STR_19
  8857  0011E4  6FDC               	movwf	sprintf@fmt& (0+255),b
  8858  0011E6  0E7E               	movlw	high STR_19
  8859  0011E8  6FDD               	movwf	(sprintf@fmt+1)& (0+255),b
  8860  0011EA  C1DA  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  8861  0011EE  C1DB  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  8862  0011F2  50DF               	movf	indf2,w,c
  8863  0011F4  6FEE               	movwf	??_decidirDireccion& (0+255),b
  8864  0011F6  51EE               	movf	??_decidirDireccion& (0+255),w,b
  8865  0011F8  6FDE               	movwf	(?_sprintf+4)& (0+255),b
  8866  0011FA  6BDF               	clrf	(?_sprintf+5)& (0+255),b
  8867  0011FC  0101               	movlb	1	; () banked
  8868  0011FE  EE20 F001          	lfsr	2,1
  8869  001202  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8870  001204  26D9               	addwf	fsr2l,f,c
  8871  001206  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8872  001208  22DA               	addwfc	fsr2h,f,c
  8873  00120A  50DF               	movf	indf2,w,c
  8874  00120C  0100               	movlb	0	; () banked
  8875  00120E  6FEF               	movwf	(??_decidirDireccion+1)& (0+255),b
  8876  001210  51EF               	movf	(??_decidirDireccion+1)& (0+255),w,b
  8877  001212  6FE0               	movwf	(?_sprintf+6)& (0+255),b
  8878  001214  6BE1               	clrf	(?_sprintf+7)& (0+255),b
  8879  001216  0101               	movlb	1	; () banked
  8880  001218  EE20 F002          	lfsr	2,2
  8881  00121C  51DA               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  8882  00121E  26D9               	addwf	fsr2l,f,c
  8883  001220  51DB               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  8884  001222  22DA               	addwfc	fsr2h,f,c
  8885  001224  50DF               	movf	indf2,w,c
  8886  001226  0100               	movlb	0	; () banked
  8887  001228  6FF0               	movwf	(??_decidirDireccion+2)& (0+255),b
  8888  00122A  51F0               	movf	(??_decidirDireccion+2)& (0+255),w,b
  8889  00122C  6FE2               	movwf	(?_sprintf+8)& (0+255),b
  8890  00122E  6BE3               	clrf	(?_sprintf+9)& (0+255),b
  8891  001230  EC73  F031         	call	_sprintf	;wreg free
  8892  001234                     
  8893                           ;main.c: 1179:                     UART_printf(buffer);
  8894  001234  0E9A               	movlw	low _buffer
  8895  001236  6E07               	movwf	UART_printf@cadena^0,c
  8896  001238  0E01               	movlw	high _buffer
  8897  00123A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  8898  00123C  EC3F  F030         	call	_UART_printf	;wreg free
  8899  001240  EFA0  F009         	goto	l631
  8900  001244                     l10383:
  8901                           
  8902                           ;main.c: 1185:                 if (DISTANCIA_PRIORIDAD_ALTA > 14)
  8903  001244  0E00               	movlw	0
  8904  001246  0100               	movlb	0	; () banked
  8905  001248  6F6D               	movwf	___flge@ff1& (0+255),b
  8906  00124A  0E00               	movlw	0
  8907  00124C  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  8908  00124E  0E60               	movlw	96
  8909  001250  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  8910  001252  0E41               	movlw	65
  8911  001254  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  8912  001256  C114  F071         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
  8913  00125A  C115  F072         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
  8914  00125E  C116  F073         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
  8915  001262  C117  F074         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
  8916  001266  ECC2  F028         	call	___flge	;wreg free
  8917  00126A  0100               	movlb	0	; () banked
  8918  00126C  B0D8               	btfsc	status,0,c
  8919  00126E  EF3B  F009         	goto	u11011
  8920  001272  EF3D  F009         	goto	u11010
  8921  001276                     u11011:
  8922  001276  EF41  F009         	goto	l10387
  8923  00127A                     u11010:
  8924  00127A                     
  8925                           ; BSR set to: 0
  8926  00127A  0E01               	movlw	1
  8927  00127C  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8928  00127E  EFA0  F009         	goto	l631
  8929  001282                     l10387:
  8930                           
  8931                           ; BSR set to: 0
  8932  001282  0E00               	movlw	0
  8933  001284  6F6D               	movwf	___flge@ff1& (0+255),b
  8934  001286  0E00               	movlw	0
  8935  001288  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  8936  00128A  0EF0               	movlw	240
  8937  00128C  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  8938  00128E  0E41               	movlw	65
  8939  001290  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  8940  001292  C110  F071         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
  8941  001296  C111  F072         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
  8942  00129A  C112  F073         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
  8943  00129E  C113  F074         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
  8944  0012A2  ECC2  F028         	call	___flge	;wreg free
  8945  0012A6  0100               	movlb	0	; () banked
  8946  0012A8  B0D8               	btfsc	status,0,c
  8947  0012AA  EF59  F009         	goto	u11021
  8948  0012AE  EF5B  F009         	goto	u11020
  8949  0012B2                     u11021:
  8950  0012B2  EF5F  F009         	goto	l10391
  8951  0012B6                     u11020:
  8952  0012B6                     
  8953                           ; BSR set to: 0
  8954  0012B6  0E02               	movlw	2
  8955  0012B8  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8956  0012BA  EFA0  F009         	goto	l631
  8957  0012BE                     l10391:
  8958                           
  8959                           ; BSR set to: 0
  8960  0012BE  0E00               	movlw	0
  8961  0012C0  6F6D               	movwf	___flge@ff1& (0+255),b
  8962  0012C2  0E00               	movlw	0
  8963  0012C4  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  8964  0012C6  0EF0               	movlw	240
  8965  0012C8  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  8966  0012CA  0E41               	movlw	65
  8967  0012CC  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  8968  0012CE  C10C  F071         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
  8969  0012D2  C10D  F072         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
  8970  0012D6  C10E  F073         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
  8971  0012DA  C10F  F074         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
  8972  0012DE  ECC2  F028         	call	___flge	;wreg free
  8973  0012E2  0100               	movlb	0	; () banked
  8974  0012E4  B0D8               	btfsc	status,0,c
  8975  0012E6  EF77  F009         	goto	u11031
  8976  0012EA  EF79  F009         	goto	u11030
  8977  0012EE                     u11031:
  8978  0012EE  EF7D  F009         	goto	l10395
  8979  0012F2                     u11030:
  8980  0012F2                     
  8981                           ; BSR set to: 0
  8982  0012F2  0E03               	movlw	3
  8983  0012F4  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  8984  0012F6  EFA0  F009         	goto	l631
  8985  0012FA                     l10395:
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;main.c: 1192:                     if (!crucesRecorridos && caminoEncontrado && !ida) {
  8989  0012FA  0101               	movlb	1	; () banked
  8990  0012FC  5146               	movf	_crucesRecorridos& (0+255),w,b
  8991  0012FE  A4D8               	btfss	status,2,c
  8992  001300  EF84  F009         	goto	u11041
  8993  001304  EF86  F009         	goto	u11040
  8994  001308                     u11041:
  8995  001308  EF9D  F009         	goto	l10403
  8996  00130C                     u11040:
  8997  00130C                     
  8998                           ; BSR set to: 1
  8999  00130C  5147               	movf	_caminoEncontrado& (0+255),w,b
  9000  00130E  B4D8               	btfsc	status,2,c
  9001  001310  EF8C  F009         	goto	u11051
  9002  001314  EF8E  F009         	goto	u11050
  9003  001318                     u11051:
  9004  001318  EF9D  F009         	goto	l10403
  9005  00131C                     u11050:
  9006  00131C                     
  9007                           ; BSR set to: 1
  9008  00131C  51F3               	movf	_ida& (0+255),w,b
  9009  00131E  A4D8               	btfss	status,2,c
  9010  001320  EF94  F009         	goto	u11061
  9011  001324  EF96  F009         	goto	u11060
  9012  001328                     u11061:
  9013  001328  EF9D  F009         	goto	l10403
  9014  00132C                     u11060:
  9015  00132C                     
  9016                           ; BSR set to: 1
  9017                           ;main.c: 1193:                         llegoDestino = 1;
  9018  00132C  0E01               	movlw	1
  9019  00132E  6E59               	movwf	_llegoDestino^0,c
  9020                           
  9021                           ;main.c: 1194:                         direccionElegida = ALTO;
  9022  001330  0E04               	movlw	4
  9023  001332  0100               	movlb	0	; () banked
  9024  001334  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  9025                           
  9026                           ;main.c: 1195:                     } else
  9027  001336  EFA0  F009         	goto	l631
  9028  00133A                     l10403:
  9029                           
  9030                           ; BSR set to: 1
  9031                           ;main.c: 1196:                         direccionElegida = 0;
  9032  00133A  0E00               	movlw	0
  9033  00133C  0100               	movlb	0	; () banked
  9034  00133E  6FF1               	movwf	decidirDireccion@direccionElegida& (0+255),b
  9035  001340                     l631:
  9036                           
  9037                           ;main.c: 1206:     return direccionElegida;
  9038  001340  0100               	movlb	0	; () banked
  9039  001342  51F1               	movf	decidirDireccion@direccionElegida& (0+255),w,b
  9040  001344                     
  9041                           ; BSR set to: 0
  9042  001344  0012               	return		;funcret
  9043  001346                     __end_of_decidirDireccion:
  9044                           	opt callstack 0
  9045                           
  9046 ;; *************** function _velocidadBaja *****************
  9047 ;; Defined at:
  9048 ;;		line 1299 in file "main.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;		None
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      void 
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9062 ;;      Params:         0       0       0       0       0       0       0       0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9065 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9066 ;;Total ram usage:        0 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    5
  9069 ;; This function calls:
  9070 ;;		_pwmDuty
  9071 ;; This function is called by:
  9072 ;;		_comportamientoBasico
  9073 ;;		_decidirDireccion
  9074 ;;		_probarCruceT
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text29
  9079  0066FE                     __ptext29:
  9080                           	opt callstack 0
  9081  0066FE                     _velocidadBaja:
  9082                           	opt callstack 24
  9083  0066FE                     
  9084                           ;main.c: 1301:     pwmDuty(70, 1);
  9085  0066FE  0E00               	movlw	0
  9086  006700  0100               	movlb	0	; () banked
  9087  006702  6F72               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  9088  006704  0E46               	movlw	70
  9089  006706  6F71               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  9090  006708  0E01               	movlw	1
  9091  00670A  6F73               	movwf	pwmDuty@channel& (0+255),b
  9092  00670C  EC6F  F022         	call	_pwmDuty	;wreg free
  9093                           
  9094                           ;main.c: 1302:     pwmDuty(70, 2);
  9095  006710  0E00               	movlw	0
  9096  006712  0100               	movlb	0	; () banked
  9097  006714  6F72               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  9098  006716  0E46               	movlw	70
  9099  006718  6F71               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  9100  00671A  0E02               	movlw	2
  9101  00671C  6F73               	movwf	pwmDuty@channel& (0+255),b
  9102  00671E  EC6F  F022         	call	_pwmDuty	;wreg free
  9103  006722  0012               	return		;funcret
  9104  006724                     __end_of_velocidadBaja:
  9105                           	opt callstack 0
  9106                           
  9107 ;; *************** function _pwmDuty *****************
  9108 ;; Defined at:
  9109 ;;		line 20 in file "./pwm.h"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  cicloTrabajo    2   17[BANK0 ] unsigned int 
  9112 ;;  channel         1   19[BANK0 ] unsigned char 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;  duty            4   20[BANK0 ] long 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  1    wreg      void 
  9117 ;; Registers used:
  9118 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9124 ;;      Params:         0       3       0       0       0       0       0       0       0
  9125 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9126 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9127 ;;      Totals:         5       7       0       0       0       0       0       0       0
  9128 ;;Total ram usage:       12 bytes
  9129 ;; Hardware stack levels used:    1
  9130 ;; Hardware stack levels required when called:    4
  9131 ;; This function calls:
  9132 ;;		___fldiv
  9133 ;;		___flmul
  9134 ;;		___fltol
  9135 ;;		___xxtofl
  9136 ;;		_map
  9137 ;; This function is called by:
  9138 ;;		_PID
  9139 ;;		_velocidadEstandar
  9140 ;;		_velocidadBaja
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text30
  9145  0044DE                     __ptext30:
  9146                           	opt callstack 0
  9147  0044DE                     _pwmDuty:
  9148                           	opt callstack 24
  9149  0044DE                     
  9150                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  9151  0044DE  C071  F020         	movff	pwmDuty@cicloTrabajo,map@x
  9152  0044E2  C072  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  9153  0044E6  6A22               	clrf	(map@x+2)^0,c
  9154  0044E8  6A23               	clrf	(map@x+3)^0,c
  9155  0044EA  0E00               	movlw	0
  9156  0044EC  6E24               	movwf	map@in_min^0,c
  9157  0044EE  0E00               	movlw	0
  9158  0044F0  6E25               	movwf	(map@in_min+1)^0,c
  9159  0044F2  0E00               	movlw	0
  9160  0044F4  6E26               	movwf	(map@in_min+2)^0,c
  9161  0044F6  0E00               	movlw	0
  9162  0044F8  6E27               	movwf	(map@in_min+3)^0,c
  9163  0044FA  0E64               	movlw	100
  9164  0044FC  6E28               	movwf	map@in_max^0,c
  9165  0044FE  0E00               	movlw	0
  9166  004500  6E29               	movwf	(map@in_max+1)^0,c
  9167  004502  0E00               	movlw	0
  9168  004504  6E2A               	movwf	(map@in_max+2)^0,c
  9169  004506  0E00               	movlw	0
  9170  004508  6E2B               	movwf	(map@in_max+3)^0,c
  9171  00450A  0E00               	movlw	0
  9172  00450C  6E2C               	movwf	map@out_min^0,c
  9173  00450E  0E00               	movlw	0
  9174  004510  6E2D               	movwf	(map@out_min+1)^0,c
  9175  004512  0E00               	movlw	0
  9176  004514  6E2E               	movwf	(map@out_min+2)^0,c
  9177  004516  0E00               	movlw	0
  9178  004518  6E2F               	movwf	(map@out_min+3)^0,c
  9179  00451A  0EFF               	movlw	255
  9180  00451C  6E30               	movwf	map@out_max^0,c
  9181  00451E  0E03               	movlw	3
  9182  004520  6E31               	movwf	(map@out_max+1)^0,c
  9183  004522  0E00               	movlw	0
  9184  004524  6E32               	movwf	(map@out_max+2)^0,c
  9185  004526  0E00               	movlw	0
  9186  004528  6E33               	movwf	(map@out_max+3)^0,c
  9187  00452A  EC30  F02F         	call	_map	;wreg free
  9188  00452E  C020  F074         	movff	?_map,pwmDuty@duty
  9189  004532  C021  F075         	movff	?_map+1,pwmDuty@duty+1
  9190  004536  C022  F076         	movff	?_map+2,pwmDuty@duty+2
  9191  00453A  C023  F077         	movff	?_map+3,pwmDuty@duty+3
  9192  00453E                     
  9193                           ;./pwm.h: 24:     if (duty < 1024) {
  9194  00453E  0100               	movlb	0	; () banked
  9195  004540  BF77               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  9196  004542  EFAF  F022         	goto	u9420
  9197  004546  5177               	movf	(pwmDuty@duty+3)& (0+255),w,b
  9198  004548  1176               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  9199  00454A  E107               	bnz	u9421
  9200  00454C  0E04               	movlw	4
  9201  00454E  5D75               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  9202  004550  B0D8               	btfsc	status,0,c
  9203  004552  EFAD  F022         	goto	u9421
  9204  004556  EFAF  F022         	goto	u9420
  9205  00455A                     u9421:
  9206  00455A  EF4C  F023         	goto	l131
  9207  00455E                     u9420:
  9208  00455E                     
  9209                           ; BSR set to: 0
  9210                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  9211  00455E  0E00               	movlw	0
  9212  004560  6E42               	movwf	___flmul@a^0,c
  9213  004562  0E00               	movlw	0
  9214  004564  6E43               	movwf	(___flmul@a+1)^0,c
  9215  004566  0EFA               	movlw	250
  9216  004568  6E44               	movwf	(___flmul@a+2)^0,c
  9217  00456A  0E43               	movlw	67
  9218  00456C  6E45               	movwf	(___flmul@a+3)^0,c
  9219  00456E  0E00               	movlw	0
  9220  004570  6E25               	movwf	___fldiv@a^0,c
  9221  004572  0EC0               	movlw	192
  9222  004574  6E26               	movwf	(___fldiv@a+1)^0,c
  9223  004576  0E7F               	movlw	127
  9224  004578  6E27               	movwf	(___fldiv@a+2)^0,c
  9225  00457A  0E44               	movlw	68
  9226  00457C  6E28               	movwf	(___fldiv@a+3)^0,c
  9227  00457E  C074  F00B         	movff	pwmDuty@duty,___xxtofl@val
  9228  004582  C075  F00C         	movff	pwmDuty@duty+1,___xxtofl@val+1
  9229  004586  C076  F00D         	movff	pwmDuty@duty+2,___xxtofl@val+2
  9230  00458A  C077  F00E         	movff	pwmDuty@duty+3,___xxtofl@val+3
  9231  00458E  0E01               	movlw	1
  9232  004590  EC4D  F023         	call	___xxtofl
  9233  004594  C00B  F021         	movff	?___xxtofl,___fldiv@b
  9234  004598  C00C  F022         	movff	?___xxtofl+1,___fldiv@b+1
  9235  00459C  C00D  F023         	movff	?___xxtofl+2,___fldiv@b+2
  9236  0045A0  C00E  F024         	movff	?___xxtofl+3,___fldiv@b+3
  9237  0045A4  EC85  F019         	call	___fldiv	;wreg free
  9238  0045A8  C021  F03E         	movff	?___fldiv,___flmul@b
  9239  0045AC  C022  F03F         	movff	?___fldiv+1,___flmul@b+1
  9240  0045B0  C023  F040         	movff	?___fldiv+2,___flmul@b+2
  9241  0045B4  C024  F041         	movff	?___fldiv+3,___flmul@b+3
  9242  0045B8  EC88  F015         	call	___flmul	;wreg free
  9243  0045BC  C03E  F06D         	movff	?___flmul,___fltol@f1
  9244  0045C0  C03F  F06E         	movff	?___flmul+1,___fltol@f1+1
  9245  0045C4  C040  F06F         	movff	?___flmul+2,___fltol@f1+2
  9246  0045C8  C041  F070         	movff	?___flmul+3,___fltol@f1+3
  9247  0045CC  EC3E  F028         	call	___fltol	;wreg free
  9248  0045D0  C06D  F074         	movff	?___fltol,pwmDuty@duty
  9249  0045D4  C06E  F075         	movff	?___fltol+1,pwmDuty@duty+1
  9250  0045D8  C06F  F076         	movff	?___fltol+2,pwmDuty@duty+2
  9251  0045DC  C070  F077         	movff	?___fltol+3,pwmDuty@duty+3
  9252                           
  9253                           ;./pwm.h: 28:         switch (channel) {
  9254  0045E0  EF36  F023         	goto	l9111
  9255  0045E4                     l9105:
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  9259  0045E4  0E02               	movlw	2
  9260  0045E6  6E50               	movwf	??_pwmDuty^0,c
  9261  0045E8  C074  F051         	movff	pwmDuty@duty,??_pwmDuty+1
  9262  0045EC  C075  F052         	movff	pwmDuty@duty+1,??_pwmDuty+2
  9263  0045F0  C076  F053         	movff	pwmDuty@duty+2,??_pwmDuty+3
  9264  0045F4  C077  F054         	movff	pwmDuty@duty+3,??_pwmDuty+4
  9265  0045F8                     u9435:
  9266  0045F8  6650               	tstfsz	??_pwmDuty^0,c
  9267  0045FA  EF01  F023         	goto	u9436
  9268  0045FE  EF09  F023         	goto	u9437
  9269  004602                     u9436:
  9270  004602  3454               	rlcf	(??_pwmDuty+4)^0,w,c
  9271  004604  3254               	rrcf	(??_pwmDuty+4)^0,f,c
  9272  004606  3253               	rrcf	(??_pwmDuty+3)^0,f,c
  9273  004608  3252               	rrcf	(??_pwmDuty+2)^0,f,c
  9274  00460A  3251               	rrcf	(??_pwmDuty+1)^0,f,c
  9275  00460C  2E50               	decfsz	??_pwmDuty^0,f,c
  9276  00460E  EFFC  F022         	goto	u9435
  9277  004612                     u9437:
  9278  004612  5051               	movf	(??_pwmDuty+1)^0,w,c
  9279  004614  6EBE               	movwf	190,c	;volatile
  9280                           
  9281                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  9282  004616  0ECF               	movlw	207
  9283  004618  16BD               	andwf	189,f,c	;volatile
  9284                           
  9285                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  9286  00461A  0100               	movlb	0	; () banked
  9287  00461C  3974               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  9288  00461E  0BF0               	andlw	240
  9289  004620  0B30               	andlw	48
  9290  004622  12BD               	iorwf	189,f,c	;volatile
  9291                           
  9292                           ;./pwm.h: 34:                 break;
  9293  004624  EF4C  F023         	goto	l131
  9294  004628                     l9107:
  9295                           
  9296                           ; BSR set to: 0
  9297                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  9298  004628  0E02               	movlw	2
  9299  00462A  6E50               	movwf	??_pwmDuty^0,c
  9300  00462C  C074  F051         	movff	pwmDuty@duty,??_pwmDuty+1
  9301  004630  C075  F052         	movff	pwmDuty@duty+1,??_pwmDuty+2
  9302  004634  C076  F053         	movff	pwmDuty@duty+2,??_pwmDuty+3
  9303  004638  C077  F054         	movff	pwmDuty@duty+3,??_pwmDuty+4
  9304  00463C                     u9445:
  9305  00463C  6650               	tstfsz	??_pwmDuty^0,c
  9306  00463E  EF23  F023         	goto	u9446
  9307  004642  EF2B  F023         	goto	u9447
  9308  004646                     u9446:
  9309  004646  3454               	rlcf	(??_pwmDuty+4)^0,w,c
  9310  004648  3254               	rrcf	(??_pwmDuty+4)^0,f,c
  9311  00464A  3253               	rrcf	(??_pwmDuty+3)^0,f,c
  9312  00464C  3252               	rrcf	(??_pwmDuty+2)^0,f,c
  9313  00464E  3251               	rrcf	(??_pwmDuty+1)^0,f,c
  9314  004650  2E50               	decfsz	??_pwmDuty^0,f,c
  9315  004652  EF1E  F023         	goto	u9445
  9316  004656                     u9447:
  9317  004656  5051               	movf	(??_pwmDuty+1)^0,w,c
  9318  004658  6EBB               	movwf	187,c	;volatile
  9319                           
  9320                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  9321  00465A  0ECF               	movlw	207
  9322  00465C  16BA               	andwf	186,f,c	;volatile
  9323                           
  9324                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  9325  00465E  0100               	movlb	0	; () banked
  9326  004660  3974               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  9327  004662  0BF0               	andlw	240
  9328  004664  0B30               	andlw	48
  9329  004666  12BA               	iorwf	186,f,c	;volatile
  9330                           
  9331                           ;./pwm.h: 40:                 break;
  9332  004668  EF4C  F023         	goto	l131
  9333  00466C                     l9111:
  9334  00466C  0100               	movlb	0	; () banked
  9335  00466E  5173               	movf	pwmDuty@channel& (0+255),w,b
  9336  004670  6E50               	movwf	??_pwmDuty^0,c
  9337  004672  6A51               	clrf	(??_pwmDuty+1)^0,c
  9338                           
  9339                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9340                           ; Switch size 1, requested type "simple"
  9341                           ; Number of cases is 1, Range of values is 0 to 0
  9342                           ; switch strategies available:
  9343                           ; Name         Instructions Cycles
  9344                           ; simple_byte            4     3 (average)
  9345                           ;	Chosen strategy is simple_byte
  9346  004674  5051               	movf	(??_pwmDuty+1)^0,w,c
  9347  004676  0A00               	xorlw	0	; case 0
  9348  004678  B4D8               	btfsc	status,2,c
  9349  00467A  EF41  F023         	goto	l11161
  9350  00467E  EF4C  F023         	goto	l131
  9351  004682                     l11161:
  9352                           
  9353                           ; BSR set to: 0
  9354                           ; Switch size 1, requested type "simple"
  9355                           ; Number of cases is 2, Range of values is 1 to 2
  9356                           ; switch strategies available:
  9357                           ; Name         Instructions Cycles
  9358                           ; simple_byte            7     4 (average)
  9359                           ;	Chosen strategy is simple_byte
  9360  004682  5050               	movf	??_pwmDuty^0,w,c
  9361  004684  0A01               	xorlw	1	; case 1
  9362  004686  B4D8               	btfsc	status,2,c
  9363  004688  EFF2  F022         	goto	l9105
  9364  00468C  0A03               	xorlw	3	; case 2
  9365  00468E  B4D8               	btfsc	status,2,c
  9366  004690  EF14  F023         	goto	l9107
  9367  004694  EF4C  F023         	goto	l131
  9368  004698                     l131:
  9369                           
  9370                           ; BSR set to: 0
  9371  004698  0012               	return		;funcret
  9372  00469A                     __end_of_pwmDuty:
  9373                           	opt callstack 0
  9374                           
  9375 ;; *************** function _map *****************
  9376 ;; Defined at:
  9377 ;;		line 16 in file "./pwm.h"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;  x               4   31[COMRAM] long 
  9380 ;;  in_min          4   35[COMRAM] long 
  9381 ;;  in_max          4   39[COMRAM] long 
  9382 ;;  out_min         4   43[COMRAM] long 
  9383 ;;  out_max         4   47[COMRAM] long 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  4   31[COMRAM] long 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2, status,0, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9395 ;;      Params:        20       0       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9398 ;;      Totals:        20       0       0       0       0       0       0       0       0
  9399 ;;Total ram usage:       20 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    3
  9402 ;; This function calls:
  9403 ;;		___aldiv
  9404 ;;		___lmul
  9405 ;; This function is called by:
  9406 ;;		_pwmDuty
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text31
  9411  005E60                     __ptext31:
  9412                           	opt callstack 0
  9413  005E60                     _map:
  9414                           	opt callstack 24
  9415  005E60                     
  9416                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  9417  005E60  5024               	movf	map@in_min^0,w,c
  9418  005E62  5C20               	subwf	map@x^0,w,c
  9419  005E64  6E06               	movwf	___lmul@multiplier^0,c
  9420  005E66  5025               	movf	(map@in_min+1)^0,w,c
  9421  005E68  5821               	subwfb	(map@x+1)^0,w,c
  9422  005E6A  6E07               	movwf	(___lmul@multiplier+1)^0,c
  9423  005E6C  5026               	movf	(map@in_min+2)^0,w,c
  9424  005E6E  5822               	subwfb	(map@x+2)^0,w,c
  9425  005E70  6E08               	movwf	(___lmul@multiplier+2)^0,c
  9426  005E72  5027               	movf	(map@in_min+3)^0,w,c
  9427  005E74  5823               	subwfb	(map@x+3)^0,w,c
  9428  005E76  6E09               	movwf	(___lmul@multiplier+3)^0,c
  9429  005E78  502C               	movf	map@out_min^0,w,c
  9430  005E7A  5C30               	subwf	map@out_max^0,w,c
  9431  005E7C  6E0A               	movwf	___lmul@multiplicand^0,c
  9432  005E7E  502D               	movf	(map@out_min+1)^0,w,c
  9433  005E80  5831               	subwfb	(map@out_max+1)^0,w,c
  9434  005E82  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  9435  005E84  502E               	movf	(map@out_min+2)^0,w,c
  9436  005E86  5832               	subwfb	(map@out_max+2)^0,w,c
  9437  005E88  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  9438  005E8A  502F               	movf	(map@out_min+3)^0,w,c
  9439  005E8C  5833               	subwfb	(map@out_max+3)^0,w,c
  9440  005E8E  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  9441  005E90  ECA5  F02F         	call	___lmul	;wreg free
  9442  005E94  C006  F012         	movff	?___lmul,___aldiv@dividend
  9443  005E98  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  9444  005E9C  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  9445  005EA0  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  9446  005EA4  5024               	movf	map@in_min^0,w,c
  9447  005EA6  5C28               	subwf	map@in_max^0,w,c
  9448  005EA8  6E16               	movwf	___aldiv@divisor^0,c
  9449  005EAA  5025               	movf	(map@in_min+1)^0,w,c
  9450  005EAC  5829               	subwfb	(map@in_max+1)^0,w,c
  9451  005EAE  6E17               	movwf	(___aldiv@divisor+1)^0,c
  9452  005EB0  5026               	movf	(map@in_min+2)^0,w,c
  9453  005EB2  582A               	subwfb	(map@in_max+2)^0,w,c
  9454  005EB4  6E18               	movwf	(___aldiv@divisor+2)^0,c
  9455  005EB6  5027               	movf	(map@in_min+3)^0,w,c
  9456  005EB8  582B               	subwfb	(map@in_max+3)^0,w,c
  9457  005EBA  6E19               	movwf	(___aldiv@divisor+3)^0,c
  9458  005EBC  EC33  F027         	call	___aldiv	;wreg free
  9459  005EC0  502C               	movf	map@out_min^0,w,c
  9460  005EC2  2412               	addwf	?___aldiv^0,w,c
  9461  005EC4  6E20               	movwf	?_map^0,c
  9462  005EC6  502D               	movf	(map@out_min+1)^0,w,c
  9463  005EC8  2013               	addwfc	(?___aldiv+1)^0,w,c
  9464  005ECA  6E21               	movwf	(?_map+1)^0,c
  9465  005ECC  502E               	movf	(map@out_min+2)^0,w,c
  9466  005ECE  2014               	addwfc	(?___aldiv+2)^0,w,c
  9467  005ED0  6E22               	movwf	(?_map+2)^0,c
  9468  005ED2  502F               	movf	(map@out_min+3)^0,w,c
  9469  005ED4  2015               	addwfc	(?___aldiv+3)^0,w,c
  9470  005ED6  6E23               	movwf	(?_map+3)^0,c
  9471  005ED8  0012               	return		;funcret
  9472  005EDA                     __end_of_map:
  9473                           	opt callstack 0
  9474                           
  9475 ;; *************** function ___lmul *****************
  9476 ;; Defined at:
  9477 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  9478 ;; Parameters:    Size  Location     Type
  9479 ;;  multiplier      4    5[COMRAM] unsigned long 
  9480 ;;  multiplicand    4    9[COMRAM] unsigned long 
  9481 ;; Auto vars:     Size  Location     Type
  9482 ;;  product         4   13[COMRAM] unsigned long 
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  4    5[COMRAM] unsigned long 
  9485 ;; Registers used:
  9486 ;;		wreg, status,2, status,0
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/0
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9492 ;;      Params:         8       0       0       0       0       0       0       0       0
  9493 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9495 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9496 ;;Total ram usage:       12 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; Hardware stack levels required when called:    2
  9499 ;; This function calls:
  9500 ;;		Nothing
  9501 ;; This function is called by:
  9502 ;;		_map
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text32
  9507  005F4A                     __ptext32:
  9508                           	opt callstack 0
  9509  005F4A                     ___lmul:
  9510                           	opt callstack 24
  9511  005F4A  0E00               	movlw	0
  9512  005F4C  6E0E               	movwf	___lmul@product^0,c
  9513  005F4E  0E00               	movlw	0
  9514  005F50  6E0F               	movwf	(___lmul@product+1)^0,c
  9515  005F52  0E00               	movlw	0
  9516  005F54  6E10               	movwf	(___lmul@product+2)^0,c
  9517  005F56  0E00               	movlw	0
  9518  005F58  6E11               	movwf	(___lmul@product+3)^0,c
  9519  005F5A                     l5189:
  9520  005F5A  A006               	btfss	___lmul@multiplier^0,0,c
  9521  005F5C  EFB2  F02F         	goto	u4281
  9522  005F60  EFB4  F02F         	goto	u4280
  9523  005F64                     u4281:
  9524  005F64  EFBC  F02F         	goto	l5193
  9525  005F68                     u4280:
  9526  005F68  500A               	movf	___lmul@multiplicand^0,w,c
  9527  005F6A  260E               	addwf	___lmul@product^0,f,c
  9528  005F6C  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  9529  005F6E  220F               	addwfc	(___lmul@product+1)^0,f,c
  9530  005F70  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  9531  005F72  2210               	addwfc	(___lmul@product+2)^0,f,c
  9532  005F74  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  9533  005F76  2211               	addwfc	(___lmul@product+3)^0,f,c
  9534  005F78                     l5193:
  9535  005F78  90D8               	bcf	status,0,c
  9536  005F7A  360A               	rlcf	___lmul@multiplicand^0,f,c
  9537  005F7C  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9538  005F7E  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9539  005F80  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9540  005F82  90D8               	bcf	status,0,c
  9541  005F84  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  9542  005F86  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  9543  005F88  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  9544  005F8A  3206               	rrcf	___lmul@multiplier^0,f,c
  9545  005F8C  5006               	movf	___lmul@multiplier^0,w,c
  9546  005F8E  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  9547  005F90  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  9548  005F92  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  9549  005F94  A4D8               	btfss	status,2,c
  9550  005F96  EFCF  F02F         	goto	u4291
  9551  005F9A  EFD1  F02F         	goto	u4290
  9552  005F9E                     u4291:
  9553  005F9E  EFAD  F02F         	goto	l5189
  9554  005FA2                     u4290:
  9555  005FA2  C00E  F006         	movff	___lmul@product,?___lmul
  9556  005FA6  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  9557  005FAA  C010  F008         	movff	___lmul@product+2,?___lmul+2
  9558  005FAE  C011  F009         	movff	___lmul@product+3,?___lmul+3
  9559  005FB2  0012               	return		;funcret
  9560  005FB4                     __end_of___lmul:
  9561                           	opt callstack 0
  9562                           
  9563 ;; *************** function ___xxtofl *****************
  9564 ;; Defined at:
  9565 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  sign            1    wreg     unsigned char 
  9568 ;;  val             4   10[COMRAM] long 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;  sign            1   18[COMRAM] unsigned char 
  9571 ;;  arg             4   20[COMRAM] unsigned long 
  9572 ;;  exp             1   19[COMRAM] unsigned char 
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  4   10[COMRAM] unsigned char 
  9575 ;; Registers used:
  9576 ;;		wreg, status,2, status,0
  9577 ;; Tracked objects:
  9578 ;;		On entry : 0/0
  9579 ;;		On exit  : 0/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9582 ;;      Params:         4       0       0       0       0       0       0       0       0
  9583 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9584 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9585 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9586 ;;Total ram usage:       14 bytes
  9587 ;; Hardware stack levels used:    1
  9588 ;; Hardware stack levels required when called:    2
  9589 ;; This function calls:
  9590 ;;		Nothing
  9591 ;; This function is called by:
  9592 ;;		_pwmDuty
  9593 ;;		_dameDistancia
  9594 ;;		_PID
  9595 ;;		_expf
  9596 ;;		_logf
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           	psect	text33
  9601  00469A                     __ptext33:
  9602                           	opt callstack 0
  9603  00469A                     ___xxtofl:
  9604                           	opt callstack 25
  9605                           
  9606                           ;incstack = 0
  9607                           ;___xxtofl@sign stored from wreg
  9608  00469A  6E13               	movwf	___xxtofl@sign^0,c
  9609  00469C  5013               	movf	___xxtofl@sign^0,w,c
  9610  00469E  B4D8               	btfsc	status,2,c
  9611  0046A0  EF54  F023         	goto	u9321
  9612  0046A4  EF56  F023         	goto	u9320
  9613  0046A8                     u9321:
  9614  0046A8  EF78  F023         	goto	l1582
  9615  0046AC                     u9320:
  9616  0046AC  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  9617  0046AE  EF5D  F023         	goto	u9330
  9618  0046B2  EF5B  F023         	goto	u9331
  9619  0046B6                     u9331:
  9620  0046B6  EF78  F023         	goto	l1582
  9621  0046BA                     u9330:
  9622  0046BA  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
  9623  0046BE  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
  9624  0046C2  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
  9625  0046C6  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
  9626  0046CA  1E0F               	comf	??___xxtofl^0,f,c
  9627  0046CC  1E10               	comf	(??___xxtofl+1)^0,f,c
  9628  0046CE  1E11               	comf	(??___xxtofl+2)^0,f,c
  9629  0046D0  1E12               	comf	(??___xxtofl+3)^0,f,c
  9630  0046D2  2A0F               	incf	??___xxtofl^0,f,c
  9631  0046D4  0E00               	movlw	0
  9632  0046D6  2210               	addwfc	(??___xxtofl+1)^0,f,c
  9633  0046D8  2211               	addwfc	(??___xxtofl+2)^0,f,c
  9634  0046DA  2212               	addwfc	(??___xxtofl+3)^0,f,c
  9635  0046DC  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
  9636  0046E0  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
  9637  0046E4  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
  9638  0046E8  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
  9639  0046EC  EF80  F023         	goto	l9059
  9640  0046F0                     l1582:
  9641  0046F0  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
  9642  0046F4  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9643  0046F8  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9644  0046FC  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9645  004700                     l9059:
  9646  004700  500B               	movf	___xxtofl@val^0,w,c
  9647  004702  100C               	iorwf	(___xxtofl@val+1)^0,w,c
  9648  004704  100D               	iorwf	(___xxtofl@val+2)^0,w,c
  9649  004706  100E               	iorwf	(___xxtofl@val+3)^0,w,c
  9650  004708  A4D8               	btfss	status,2,c
  9651  00470A  EF89  F023         	goto	u9341
  9652  00470E  EF8B  F023         	goto	u9340
  9653  004712                     u9341:
  9654  004712  EF95  F023         	goto	l9065
  9655  004716                     u9340:
  9656  004716  0E00               	movlw	0
  9657  004718  6E0B               	movwf	?___xxtofl^0,c
  9658  00471A  0E00               	movlw	0
  9659  00471C  6E0C               	movwf	(?___xxtofl+1)^0,c
  9660  00471E  0E00               	movlw	0
  9661  004720  6E0D               	movwf	(?___xxtofl+2)^0,c
  9662  004722  0E00               	movlw	0
  9663  004724  6E0E               	movwf	(?___xxtofl+3)^0,c
  9664  004726  EF26  F024         	goto	l1585
  9665  00472A                     l9065:
  9666  00472A  0E96               	movlw	150
  9667  00472C  6E14               	movwf	___xxtofl@exp^0,c
  9668  00472E  EF9F  F023         	goto	l9069
  9669  004732                     l9067:
  9670  004732  2A14               	incf	___xxtofl@exp^0,f,c
  9671  004734  90D8               	bcf	status,0,c
  9672  004736  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  9673  004738  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  9674  00473A  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  9675  00473C  3215               	rrcf	___xxtofl@arg^0,f,c
  9676  00473E                     l9069:
  9677  00473E  0E00               	movlw	0
  9678  004740  1415               	andwf	___xxtofl@arg^0,w,c
  9679  004742  6E0F               	movwf	??___xxtofl^0,c
  9680  004744  0E00               	movlw	0
  9681  004746  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  9682  004748  6E10               	movwf	(??___xxtofl+1)^0,c
  9683  00474A  0E00               	movlw	0
  9684  00474C  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  9685  00474E  6E11               	movwf	(??___xxtofl+2)^0,c
  9686  004750  0EFE               	movlw	254
  9687  004752  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  9688  004754  6E12               	movwf	(??___xxtofl+3)^0,c
  9689  004756  500F               	movf	??___xxtofl^0,w,c
  9690  004758  1010               	iorwf	(??___xxtofl+1)^0,w,c
  9691  00475A  1011               	iorwf	(??___xxtofl+2)^0,w,c
  9692  00475C  1012               	iorwf	(??___xxtofl+3)^0,w,c
  9693  00475E  A4D8               	btfss	status,2,c
  9694  004760  EFB4  F023         	goto	u9351
  9695  004764  EFB6  F023         	goto	u9350
  9696  004768                     u9351:
  9697  004768  EF99  F023         	goto	l9067
  9698  00476C                     u9350:
  9699  00476C  EFC4  F023         	goto	l1589
  9700  004770                     l9071:
  9701  004770  2A14               	incf	___xxtofl@exp^0,f,c
  9702  004772  0E01               	movlw	1
  9703  004774  2615               	addwf	___xxtofl@arg^0,f,c
  9704  004776  0E00               	movlw	0
  9705  004778  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
  9706  00477A  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
  9707  00477C  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
  9708  00477E  90D8               	bcf	status,0,c
  9709  004780  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
  9710  004782  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
  9711  004784  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
  9712  004786  3215               	rrcf	___xxtofl@arg^0,f,c
  9713  004788                     l1589:
  9714  004788  0E00               	movlw	0
  9715  00478A  1415               	andwf	___xxtofl@arg^0,w,c
  9716  00478C  6E0F               	movwf	??___xxtofl^0,c
  9717  00478E  0E00               	movlw	0
  9718  004790  1416               	andwf	(___xxtofl@arg+1)^0,w,c
  9719  004792  6E10               	movwf	(??___xxtofl+1)^0,c
  9720  004794  0E00               	movlw	0
  9721  004796  1417               	andwf	(___xxtofl@arg+2)^0,w,c
  9722  004798  6E11               	movwf	(??___xxtofl+2)^0,c
  9723  00479A  0EFF               	movlw	255
  9724  00479C  1418               	andwf	(___xxtofl@arg+3)^0,w,c
  9725  00479E  6E12               	movwf	(??___xxtofl+3)^0,c
  9726  0047A0  500F               	movf	??___xxtofl^0,w,c
  9727  0047A2  1010               	iorwf	(??___xxtofl+1)^0,w,c
  9728  0047A4  1011               	iorwf	(??___xxtofl+2)^0,w,c
  9729  0047A6  1012               	iorwf	(??___xxtofl+3)^0,w,c
  9730  0047A8  A4D8               	btfss	status,2,c
  9731  0047AA  EFD9  F023         	goto	u9361
  9732  0047AE  EFDB  F023         	goto	u9360
  9733  0047B2                     u9361:
  9734  0047B2  EFB8  F023         	goto	l9071
  9735  0047B6                     u9360:
  9736  0047B6  EFE3  F023         	goto	l9079
  9737  0047BA                     l9077:
  9738  0047BA  0614               	decf	___xxtofl@exp^0,f,c
  9739  0047BC  90D8               	bcf	status,0,c
  9740  0047BE  3615               	rlcf	___xxtofl@arg^0,f,c
  9741  0047C0  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
  9742  0047C2  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
  9743  0047C4  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
  9744  0047C6                     l9079:
  9745  0047C6  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
  9746  0047C8  EFE8  F023         	goto	u9371
  9747  0047CC  EFEA  F023         	goto	u9370
  9748  0047D0                     u9371:
  9749  0047D0  EFF2  F023         	goto	l1596
  9750  0047D4                     u9370:
  9751  0047D4  0E02               	movlw	2
  9752  0047D6  6014               	cpfslt	___xxtofl@exp^0,c
  9753  0047D8  EFF0  F023         	goto	u9381
  9754  0047DC  EFF2  F023         	goto	u9380
  9755  0047E0                     u9381:
  9756  0047E0  EFDD  F023         	goto	l9077
  9757  0047E4                     u9380:
  9758  0047E4                     l1596:
  9759  0047E4  B014               	btfsc	___xxtofl@exp^0,0,c
  9760  0047E6  EFF7  F023         	goto	u9391
  9761  0047EA  EFF9  F023         	goto	u9390
  9762  0047EE                     u9391:
  9763  0047EE  EFFA  F023         	goto	l9085
  9764  0047F2                     u9390:
  9765  0047F2  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
  9766  0047F4                     l9085:
  9767  0047F4  90D8               	bcf	status,0,c
  9768  0047F6  3214               	rrcf	___xxtofl@exp^0,f,c
  9769  0047F8  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
  9770  0047FC  6A10               	clrf	(??___xxtofl+1)^0,c
  9771  0047FE  6A11               	clrf	(??___xxtofl+2)^0,c
  9772  004800  6A12               	clrf	(??___xxtofl+3)^0,c
  9773  004802  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
  9774  004806  6A11               	clrf	(??___xxtofl+2)^0,c
  9775  004808  6A10               	clrf	(??___xxtofl+1)^0,c
  9776  00480A  6A0F               	clrf	??___xxtofl^0,c
  9777  00480C  500F               	movf	??___xxtofl^0,w,c
  9778  00480E  1215               	iorwf	___xxtofl@arg^0,f,c
  9779  004810  5010               	movf	(??___xxtofl+1)^0,w,c
  9780  004812  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
  9781  004814  5011               	movf	(??___xxtofl+2)^0,w,c
  9782  004816  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
  9783  004818  5012               	movf	(??___xxtofl+3)^0,w,c
  9784  00481A  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
  9785  00481C  5013               	movf	___xxtofl@sign^0,w,c
  9786  00481E  B4D8               	btfsc	status,2,c
  9787  004820  EF14  F024         	goto	u9401
  9788  004824  EF16  F024         	goto	u9400
  9789  004828                     u9401:
  9790  004828  EF1E  F024         	goto	l9095
  9791  00482C                     u9400:
  9792  00482C  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
  9793  00482E  EF1D  F024         	goto	u9410
  9794  004832  EF1B  F024         	goto	u9411
  9795  004836                     u9411:
  9796  004836  EF1E  F024         	goto	l9095
  9797  00483A                     u9410:
  9798  00483A  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
  9799  00483C                     l9095:
  9800  00483C  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
  9801  004840  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
  9802  004844  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
  9803  004848  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
  9804  00484C                     l1585:
  9805  00484C  0012               	return		;funcret
  9806  00484E                     __end_of___xxtofl:
  9807                           	opt callstack 0
  9808                           
  9809 ;; *************** function _sprintf *****************
  9810 ;; Defined at:
  9811 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  s               2  122[BANK0 ] PTR unsigned char 
  9814 ;;		 -> buffer(50), 
  9815 ;;  fmt             2  124[BANK0 ] PTR const unsigned char 
  9816 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  9817 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  9818 ;;		 -> STR_3(34), 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  f               6  136[BANK0 ] struct _IO_FILE
  9821 ;;  ap              2  134[BANK0 ] PTR void [1]
  9822 ;;		 -> ?_sprintf(2), 
  9823 ;;  ret             2    0        int 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  2  122[BANK0 ] int 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9833 ;;      Params:         0      10       0       0       0       0       0       0       0
  9834 ;;      Locals:         0      10       0       0       0       0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9836 ;;      Totals:         0      20       0       0       0       0       0       0       0
  9837 ;;Total ram usage:       20 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:    9
  9840 ;; This function calls:
  9841 ;;		_vfprintf
  9842 ;; This function is called by:
  9843 ;;		_visualizarPasosRealizados
  9844 ;;		_decidirDireccion
  9845 ;;		_probarMapeoDireccionCruces
  9846 ;;		_probarSensores
  9847 ;;		_probarMedirDistancia
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text34
  9852  0062E6                     __ptext34:
  9853                           	opt callstack 0
  9854  0062E6                     _sprintf:
  9855                           	opt callstack 20
  9856  0062E6  0EDE               	movlw	low (?_sprintf+4)
  9857  0062E8  0100               	movlb	0	; () banked
  9858  0062EA  6FE6               	movwf	sprintf@ap& (0+255),b
  9859  0062EC  0E00               	movlw	high (?_sprintf+4)
  9860  0062EE  6FE7               	movwf	(sprintf@ap+1)& (0+255),b
  9861  0062F0  C0DA  F0E8         	movff	sprintf@s,sprintf@f
  9862  0062F4  C0DB  F0E9         	movff	sprintf@s+1,sprintf@f+1
  9863  0062F8                     
  9864                           ; BSR set to: 0
  9865  0062F8  0E00               	movlw	0
  9866  0062FA  6FEB               	movwf	(sprintf@f+3)& (0+255),b
  9867  0062FC  0E00               	movlw	0
  9868  0062FE  6FEA               	movwf	(sprintf@f+2)& (0+255),b
  9869  006300                     
  9870                           ; BSR set to: 0
  9871  006300  0E00               	movlw	0
  9872  006302  6FED               	movwf	(sprintf@f+5)& (0+255),b
  9873  006304  0E00               	movlw	0
  9874  006306  6FEC               	movwf	(sprintf@f+4)& (0+255),b
  9875  006308                     
  9876                           ; BSR set to: 0
  9877  006308  0EE8               	movlw	low sprintf@f
  9878  00630A  6FD2               	movwf	vfprintf@fp& (0+255),b
  9879  00630C  0E00               	movlw	high sprintf@f
  9880  00630E  6FD3               	movwf	(vfprintf@fp+1)& (0+255),b
  9881  006310  C0DC  F0D4         	movff	sprintf@fmt,vfprintf@fmt
  9882  006314  C0DD  F0D5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9883  006318  0EE6               	movlw	low sprintf@ap
  9884  00631A  6FD6               	movwf	vfprintf@ap& (0+255),b
  9885  00631C  0E00               	movlw	high sprintf@ap
  9886  00631E  6FD7               	movwf	(vfprintf@ap+1)& (0+255),b
  9887  006320  ECDA  F02F         	call	_vfprintf	;wreg free
  9888  006324  0100               	movlb	0	; () banked
  9889  006326  51EA               	movf	(sprintf@f+2)& (0+255),w,b
  9890  006328  25DA               	addwf	sprintf@s& (0+255),w,b
  9891  00632A  6ED9               	movwf	fsr2l,c
  9892  00632C  51EB               	movf	(sprintf@f+3)& (0+255),w,b
  9893  00632E  21DB               	addwfc	(sprintf@s+1)& (0+255),w,b
  9894  006330  6EDA               	movwf	fsr2h,c
  9895  006332  0E00               	movlw	0
  9896  006334  6EDF               	movwf	indf2,c
  9897  006336                     
  9898                           ; BSR set to: 0
  9899  006336  0012               	return		;funcret
  9900  006338                     __end_of_sprintf:
  9901                           	opt callstack 0
  9902                           
  9903 ;; *************** function _vfprintf *****************
  9904 ;; Defined at:
  9905 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  fp              2  114[BANK0 ] PTR struct _IO_FILE
  9908 ;;		 -> sprintf@f(6), 
  9909 ;;  fmt             2  116[BANK0 ] PTR const unsigned char 
  9910 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  9911 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  9912 ;;		 -> STR_3(34), 
  9913 ;;  ap              2  118[BANK0 ] PTR PTR void 
  9914 ;;		 -> sprintf@ap(2), 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  cfmt            2  120[BANK0 ] PTR unsigned char 
  9917 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  9918 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  9919 ;;		 -> STR_3(34), 
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  2  114[BANK0 ] int 
  9922 ;; Registers used:
  9923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9924 ;; Tracked objects:
  9925 ;;		On entry : 0/0
  9926 ;;		On exit  : 0/0
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9929 ;;      Params:         0       6       0       0       0       0       0       0       0
  9930 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9932 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9933 ;;Total ram usage:        8 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:    8
  9936 ;; This function calls:
  9937 ;;		_vfpfcnvrt
  9938 ;; This function is called by:
  9939 ;;		_sprintf
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text35
  9944  005FB4                     __ptext35:
  9945                           	opt callstack 0
  9946  005FB4                     _vfprintf:
  9947                           	opt callstack 20
  9948  005FB4                     
  9949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9950  005FB4  C0D4  F0D8         	movff	vfprintf@fmt,vfprintf@cfmt
  9951  005FB8  C0D5  F0D9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9952  005FBC                     
  9953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  9954  005FBC  0E00               	movlw	0
  9955  005FBE  0101               	movlb	1	; () banked
  9956  005FC0  6F2D               	movwf	(_nout+1)& (0+255),b
  9957  005FC2  0E00               	movlw	0
  9958  005FC4  6F2C               	movwf	_nout& (0+255),b
  9959                           
  9960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9961  005FC6  EFFC  F02F         	goto	l9829
  9962  005FCA                     l9827:
  9963                           
  9964                           ; BSR set to: 1
  9965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  9966  005FCA  C0D2  F0B4         	movff	vfprintf@fp,vfpfcnvrt@fp
  9967  005FCE  C0D3  F0B5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9968  005FD2  0ED8               	movlw	low vfprintf@cfmt
  9969  005FD4  0100               	movlb	0	; () banked
  9970  005FD6  6FB6               	movwf	vfpfcnvrt@fmt& (0+255),b
  9971  005FD8  0E00               	movlw	high vfprintf@cfmt
  9972  005FDA  6FB7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9973  005FDC  C0D6  F0B8         	movff	vfprintf@ap,vfpfcnvrt@ap
  9974  005FE0  C0D7  F0B9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9975  005FE4  EC54  F010         	call	_vfpfcnvrt	;wreg free
  9976  005FE8  0100               	movlb	0	; () banked
  9977  005FEA  51B4               	movf	?_vfpfcnvrt& (0+255),w,b
  9978  005FEC  0101               	movlb	1	; () banked
  9979  005FEE  272C               	addwf	_nout& (0+255),f,b
  9980  005FF0  0100               	movlb	0	; () banked
  9981  005FF2  51B5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  9982  005FF4  0101               	movlb	1	; () banked
  9983  005FF6  232D               	addwfc	(_nout+1)& (0+255),f,b
  9984  005FF8                     l9829:
  9985                           
  9986                           ; BSR set to: 1
  9987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  9988  005FF8  C0D8  FFF6         	movff	vfprintf@cfmt,tblptrl
  9989  005FFC  C0D9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9990  006000                     	if	0	;tblptru may be non-zero
  9991  006000                     	endif
  9992  006000                     	if	0	;tblptru may be non-zero
  9993  006000                     	endif
  9994  006000  0008               	tblrd		*
  9995  006002  50F5               	movf	tablat,w,c
  9996  006004  0900               	iorlw	0
  9997  006006  A4D8               	btfss	status,2,c
  9998  006008  EF08  F030         	goto	u10481
  9999  00600C  EF0A  F030         	goto	u10480
 10000  006010                     u10481:
 10001  006010  EFE5  F02F         	goto	l9827
 10002  006014                     u10480:
 10003  006014                     
 10004                           ; BSR set to: 1
 10005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10006  006014  C12C  F0D2         	movff	_nout,?_vfprintf
 10007  006018  C12D  F0D3         	movff	_nout+1,?_vfprintf+1
 10008  00601C                     
 10009                           ; BSR set to: 1
 10010  00601C  0012               	return		;funcret
 10011  00601E                     __end_of_vfprintf:
 10012                           	opt callstack 0
 10013                           
 10014 ;; *************** function _vfpfcnvrt *****************
 10015 ;; Defined at:
 10016 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10017 ;; Parameters:    Size  Location     Type
 10018 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
 10019 ;;		 -> sprintf@f(6), 
 10020 ;;  fmt             2   86[BANK0 ] PTR PTR unsigned char 
 10021 ;;		 -> vfprintf@cfmt(2), 
 10022 ;;  ap              2   88[BANK0 ] PTR PTR void 
 10023 ;;		 -> sprintf@ap(2), 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  ll              8   94[BANK0 ] long long 
 10026 ;;  llu             8    0        unsigned long long 
 10027 ;;  f               4  109[BANK0 ] unsigned long long 
 10028 ;;  ct              3  106[BANK0 ] unsigned char [3]
 10029 ;;  vp              3    0        PTR void 
 10030 ;;  cp              3    0        PTR unsigned char 
 10031 ;;  i               2    0        int 
 10032 ;;  done            2    0        int 
 10033 ;;  c               1  113[BANK0 ] unsigned char 
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  2   84[BANK0 ] int 
 10036 ;; Registers used:
 10037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10043 ;;      Params:         0       6       0       0       0       0       0       0       0
 10044 ;;      Locals:         0      20       0       0       0       0       0       0       0
 10045 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10046 ;;      Totals:         0      30       0       0       0       0       0       0       0
 10047 ;;Total ram usage:       30 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:    7
 10050 ;; This function calls:
 10051 ;;		_atoi
 10052 ;;		_ctoa
 10053 ;;		_dtoa
 10054 ;;		_efgtoa
 10055 ;;		_fputc
 10056 ;;		_isdigit
 10057 ;;		_isupper
 10058 ;;		_strncmp
 10059 ;;		_tolower
 10060 ;; This function is called by:
 10061 ;;		_vfprintf
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text36
 10066  0020A8                     __ptext36:
 10067                           	opt callstack 0
 10068  0020A8                     _vfpfcnvrt:
 10069                           	opt callstack 20
 10070  0020A8                     
 10071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10072  0020A8  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10073  0020AC  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10074  0020B0  CFDE FFF6          	movff	postinc2,tblptrl
 10075  0020B4  CFDD FFF7          	movff	postdec2,tblptrh
 10076  0020B8                     	if	0	;tblptru may be non-zero
 10077  0020B8                     	endif
 10078  0020B8                     	if	0	;tblptru may be non-zero
 10079  0020B8                     	endif
 10080  0020B8  0008               	tblrd		*
 10081  0020BA  50F5               	movf	tablat,w,c
 10082  0020BC  0A25               	xorlw	37
 10083  0020BE  A4D8               	btfss	status,2,c
 10084  0020C0  EF64  F010         	goto	u10241
 10085  0020C4  EF66  F010         	goto	u10240
 10086  0020C8                     u10241:
 10087  0020C8  EF0C  F013         	goto	l9709
 10088  0020CC                     u10240:
 10089  0020CC                     
 10090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10091  0020CC  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10092  0020D0  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10093  0020D4  2ADE               	incf	postinc2,f,c
 10094  0020D6  0E00               	movlw	0
 10095  0020D8  22DD               	addwfc	postdec2,f,c
 10096  0020DA                     
 10097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10098  0020DA  0E00               	movlw	0
 10099  0020DC  0101               	movlb	1	; () banked
 10100  0020DE  6F2F               	movwf	(_width+1)& (0+255),b
 10101  0020E0  0E00               	movlw	0
 10102  0020E2  6F2E               	movwf	_width& (0+255),b
 10103  0020E4  C12E  F132         	movff	_width,_flags
 10104  0020E8  C12F  F133         	movff	_width+1,_flags+1
 10105  0020EC                     
 10106                           ; BSR set to: 1
 10107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10108  0020EC  6930               	setf	_prec& (0+255),b
 10109  0020EE  6931               	setf	(_prec+1)& (0+255),b
 10110  0020F0                     
 10111                           ; BSR set to: 1
 10112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
 10113  0020F0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10114  0020F4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10115  0020F8  CFDE FFF6          	movff	postinc2,tblptrl
 10116  0020FC  CFDD FFF7          	movff	postdec2,tblptrh
 10117  002100                     	if	0	;tblptru may be non-zero
 10118  002100                     	endif
 10119  002100                     	if	0	;tblptru may be non-zero
 10120  002100                     	endif
 10121  002100  0008               	tblrd		*
 10122  002102  50F5               	movf	tablat,w,c
 10123  002104  0A2E               	xorlw	46
 10124  002106  A4D8               	btfss	status,2,c
 10125  002108  EF88  F010         	goto	u10251
 10126  00210C  EF8A  F010         	goto	u10250
 10127  002110                     u10251:
 10128  002110  EF08  F011         	goto	l9637
 10129  002114                     u10250:
 10130  002114                     
 10131                           ; BSR set to: 1
 10132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
 10133  002114  0E00               	movlw	0
 10134  002116  6F31               	movwf	(_prec+1)& (0+255),b
 10135  002118  0E00               	movlw	0
 10136  00211A  6F30               	movwf	_prec& (0+255),b
 10137  00211C                     
 10138                           ; BSR set to: 1
 10139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
 10140  00211C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10141  002120  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10142  002124  2ADE               	incf	postinc2,f,c
 10143  002126  0E00               	movlw	0
 10144  002128  22DD               	addwfc	postdec2,f,c
 10145  00212A                     
 10146                           ; BSR set to: 1
 10147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
 10148  00212A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10149  00212E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10150  002132  CFDE FFF6          	movff	postinc2,tblptrl
 10151  002136  CFDD FFF7          	movff	postdec2,tblptrh
 10152  00213A                     	if	0	;tblptru may be non-zero
 10153  00213A                     	endif
 10154  00213A                     	if	0	;tblptru may be non-zero
 10155  00213A                     	endif
 10156  00213A  0008               	tblrd		*
 10157  00213C  50F5               	movf	tablat,w,c
 10158  00213E  0A2A               	xorlw	42
 10159  002140  A4D8               	btfss	status,2,c
 10160  002142  EFA5  F010         	goto	u10261
 10161  002146  EFA7  F010         	goto	u10260
 10162  00214A                     u10261:
 10163  00214A  EFC4  F010         	goto	l9627
 10164  00214E                     u10260:
 10165  00214E                     
 10166                           ; BSR set to: 1
 10167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
 10168  00214E  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10169  002152  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10170  002156  2ADE               	incf	postinc2,f,c
 10171  002158  0E00               	movlw	0
 10172  00215A  22DD               	addwfc	postdec2,f,c
 10173                           
 10174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 10175  00215C  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10176  002160  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10177  002164  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
 10178  002168  0E02               	movlw	2
 10179  00216A  26DE               	addwf	postinc2,f,c
 10180  00216C  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
 10181  002170  0E00               	movlw	0
 10182  002172  22DD               	addwfc	postdec2,f,c
 10183  002174  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10184  002178  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10185  00217C  CFDE F130          	movff	postinc2,_prec
 10186  002180  CFDD F131          	movff	postdec2,_prec+1
 10187                           
 10188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
 10189  002184  EF08  F011         	goto	l9637
 10190  002188                     l9627:
 10191                           
 10192                           ; BSR set to: 1
 10193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
 10194  002188  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10195  00218C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10196  002190  CFDE F00D          	movff	postinc2,atoi@s
 10197  002194  CFDD F00E          	movff	postdec2,atoi@s+1
 10198  002198  ECF5  F024         	call	_atoi	;wreg free
 10199  00219C  C00D  F130         	movff	?_atoi,_prec
 10200  0021A0  C00E  F131         	movff	?_atoi+1,_prec+1
 10201                           
 10202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10203  0021A4  EFDB  F010         	goto	l9631
 10204  0021A8                     l9629:
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
 10208  0021A8  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10209  0021AC  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10210  0021B0  2ADE               	incf	postinc2,f,c
 10211  0021B2  0E00               	movlw	0
 10212  0021B4  22DD               	addwfc	postdec2,f,c
 10213  0021B6                     l9631:
 10214  0021B6  0ED0               	movlw	208
 10215  0021B8  0100               	movlb	0	; () banked
 10216  0021BA  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
 10217  0021BC  0EFF               	movlw	255
 10218  0021BE  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10219  0021C0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10220  0021C4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10221  0021C8  CFDE FFF6          	movff	postinc2,tblptrl
 10222  0021CC  CFDD FFF7          	movff	postdec2,tblptrh
 10223  0021D0                     	if	0	;tblptru may be non-zero
 10224  0021D0                     	endif
 10225  0021D0                     	if	0	;tblptru may be non-zero
 10226  0021D0                     	endif
 10227  0021D0  0008               	tblrd		*
 10228  0021D2  50F5               	movf	tablat,w,c
 10229  0021D4  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10230  0021D6  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10231  0021D8  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
 10232  0021DA  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10233  0021DC  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10234  0021DE  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10235  0021E0  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10236  0021E2  E10A               	bnz	u10270
 10237  0021E4  0E0A               	movlw	10
 10238  0021E6  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10239  0021E8  A0D8               	btfss	status,0,c
 10240  0021EA  EFF9  F010         	goto	u10271
 10241  0021EE  EFFC  F010         	goto	u10270
 10242  0021F2                     u10271:
 10243  0021F2  0E01               	movlw	1
 10244  0021F4  EFFD  F010         	goto	u10280
 10245  0021F8                     u10270:
 10246  0021F8  0E00               	movlw	0
 10247  0021FA                     u10280:
 10248  0021FA  6FC6               	movwf	_vfpfcnvrt$953& (0+255),b
 10249  0021FC  6BC7               	clrf	(_vfpfcnvrt$953+1)& (0+255),b
 10250  0021FE                     
 10251                           ; BSR set to: 0
 10252  0021FE  51C6               	movf	_vfpfcnvrt$953& (0+255),w,b
 10253  002200  11C7               	iorwf	(_vfpfcnvrt$953+1)& (0+255),w,b
 10254  002202  A4D8               	btfss	status,2,c
 10255  002204  EF06  F011         	goto	u10291
 10256  002208  EF08  F011         	goto	u10290
 10257  00220C                     u10291:
 10258  00220C  EFD4  F010         	goto	l9629
 10259  002210                     u10290:
 10260  002210                     l9637:
 10261                           
 10262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
 10263  002210  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10264  002214  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10265  002218  CFDE FFF6          	movff	postinc2,tblptrl
 10266  00221C  CFDD FFF7          	movff	postdec2,tblptrh
 10267  002220                     	if	0	;tblptru may be non-zero
 10268  002220                     	endif
 10269  002220                     	if	0	;tblptru may be non-zero
 10270  002220                     	endif
 10271  002220  0008               	tblrd		*
 10272  002222  50F5               	movf	tablat,w,c
 10273  002224  6E0C               	movwf	tolower@c^0,c
 10274  002226  6A0D               	clrf	(tolower@c+1)^0,c
 10275  002228  EC0F  F030         	call	_tolower	;wreg free
 10276  00222C  500C               	movf	?_tolower^0,w,c
 10277  00222E  0100               	movlb	0	; () banked
 10278  002230  6FCA               	movwf	vfpfcnvrt@ct& (0+255),b
 10279  002232                     
 10280                           ; BSR set to: 0
 10281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
 10282  002232  51CA               	movf	vfpfcnvrt@ct& (0+255),w,b
 10283  002234  B4D8               	btfsc	status,2,c
 10284  002236  EF1F  F011         	goto	u10301
 10285  00223A  EF21  F011         	goto	u10300
 10286  00223E                     u10301:
 10287  00223E  EF5B  F011         	goto	l9647
 10288  002242                     u10300:
 10289  002242                     
 10290                           ; BSR set to: 0
 10291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
 10292  002242  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10293  002246  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10294  00224A  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
 10295  00224E  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
 10296  002252  0E01               	movlw	1
 10297  002254  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
 10298  002256  0E00               	movlw	0
 10299  002258  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10300  00225A  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10301  00225E  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10302  002262                     	if	0	;tblptru may be non-zero
 10303  002262                     	endif
 10304  002262                     	if	0	;tblptru may be non-zero
 10305  002262                     	endif
 10306  002262  0008               	tblrd		*
 10307  002264  50F5               	movf	tablat,w,c
 10308  002266  6E0C               	movwf	tolower@c^0,c
 10309  002268  6A0D               	clrf	(tolower@c+1)^0,c
 10310  00226A  EC0F  F030         	call	_tolower	;wreg free
 10311  00226E  500C               	movf	?_tolower^0,w,c
 10312  002270  0100               	movlb	0	; () banked
 10313  002272  6FCB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
 10314  002274                     
 10315                           ; BSR set to: 0
 10316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
 10317  002274  51CB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
 10318  002276  B4D8               	btfsc	status,2,c
 10319  002278  EF40  F011         	goto	u10311
 10320  00227C  EF42  F011         	goto	u10310
 10321  002280                     u10311:
 10322  002280  EF5B  F011         	goto	l9647
 10323  002284                     u10310:
 10324  002284                     
 10325                           ; BSR set to: 0
 10326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
 10327  002284  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10328  002288  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10329  00228C  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
 10330  002290  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
 10331  002294  0E02               	movlw	2
 10332  002296  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
 10333  002298  0E00               	movlw	0
 10334  00229A  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10335  00229C  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10336  0022A0  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10337  0022A4                     	if	0	;tblptru may be non-zero
 10338  0022A4                     	endif
 10339  0022A4                     	if	0	;tblptru may be non-zero
 10340  0022A4                     	endif
 10341  0022A4  0008               	tblrd		*
 10342  0022A6  50F5               	movf	tablat,w,c
 10343  0022A8  6E0C               	movwf	tolower@c^0,c
 10344  0022AA  6A0D               	clrf	(tolower@c+1)^0,c
 10345  0022AC  EC0F  F030         	call	_tolower	;wreg free
 10346  0022B0  500C               	movf	?_tolower^0,w,c
 10347  0022B2  0100               	movlb	0	; () banked
 10348  0022B4  6FCC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
 10349  0022B6                     l9647:
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
 10353  0022B6  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10354  0022BA  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10355  0022BE  CFDE FFF6          	movff	postinc2,tblptrl
 10356  0022C2  CFDD FFF7          	movff	postdec2,tblptrh
 10357  0022C6                     	if	0	;tblptru may be non-zero
 10358  0022C6                     	endif
 10359  0022C6                     	if	0	;tblptru may be non-zero
 10360  0022C6                     	endif
 10361  0022C6  0008               	tblrd		*
 10362  0022C8  50F5               	movf	tablat,w,c
 10363  0022CA  0A63               	xorlw	99
 10364  0022CC  A4D8               	btfss	status,2,c
 10365  0022CE  EF6B  F011         	goto	u10321
 10366  0022D2  EF6D  F011         	goto	u10320
 10367  0022D6                     u10321:
 10368  0022D6  EF94  F011         	goto	l9655
 10369  0022DA                     u10320:
 10370  0022DA                     
 10371                           ; BSR set to: 0
 10372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
 10373  0022DA  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10374  0022DE  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10375  0022E2  2ADE               	incf	postinc2,f,c
 10376  0022E4  0E00               	movlw	0
 10377  0022E6  22DD               	addwfc	postdec2,f,c
 10378                           
 10379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10380  0022E8  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10381  0022EC  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10382  0022F0  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
 10383  0022F4  0E02               	movlw	2
 10384  0022F6  26DE               	addwf	postinc2,f,c
 10385  0022F8  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
 10386  0022FC  0E00               	movlw	0
 10387  0022FE  22DD               	addwfc	postdec2,f,c
 10388  002300  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10389  002304  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10390  002308  50DF               	movf	indf2,w,c
 10391  00230A  6FD1               	movwf	vfpfcnvrt@c& (0+255),b
 10392  00230C                     
 10393                           ; BSR set to: 0
 10394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
 10395  00230C  C0B4  F021         	movff	vfpfcnvrt@fp,ctoa@fp
 10396  002310  C0B5  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10397  002314  C0D1  F023         	movff	vfpfcnvrt@c,ctoa@c
 10398  002318  EC9C  F030         	call	_ctoa	;wreg free
 10399  00231C  C021  F0B4         	movff	?_ctoa,?_vfpfcnvrt
 10400  002320  C022  F0B5         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10401  002324  EF27  F013         	goto	l906
 10402  002328                     l9655:
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10406  002328  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10407  00232C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10408  002330  CFDE FFF6          	movff	postinc2,tblptrl
 10409  002334  CFDD FFF7          	movff	postdec2,tblptrh
 10410  002338                     	if	0	;tblptru may be non-zero
 10411  002338                     	endif
 10412  002338                     	if	0	;tblptru may be non-zero
 10413  002338                     	endif
 10414  002338  0008               	tblrd		*
 10415  00233A  50F5               	movf	tablat,w,c
 10416  00233C  0A64               	xorlw	100
 10417  00233E  B4D8               	btfsc	status,2,c
 10418  002340  EFA4  F011         	goto	u10331
 10419  002344  EFA6  F011         	goto	u10330
 10420  002348                     u10331:
 10421  002348  EFB8  F011         	goto	l9659
 10422  00234C                     u10330:
 10423  00234C                     
 10424                           ; BSR set to: 0
 10425  00234C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10426  002350  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10427  002354  CFDE FFF6          	movff	postinc2,tblptrl
 10428  002358  CFDD FFF7          	movff	postdec2,tblptrh
 10429  00235C                     	if	0	;tblptru may be non-zero
 10430  00235C                     	endif
 10431  00235C                     	if	0	;tblptru may be non-zero
 10432  00235C                     	endif
 10433  00235C  0008               	tblrd		*
 10434  00235E  50F5               	movf	tablat,w,c
 10435  002360  0A69               	xorlw	105
 10436  002362  A4D8               	btfss	status,2,c
 10437  002364  EFB6  F011         	goto	u10341
 10438  002368  EFB8  F011         	goto	u10340
 10439  00236C                     u10341:
 10440  00236C  EFF8  F011         	goto	l9665
 10441  002370                     u10340:
 10442  002370                     l9659:
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 10446  002370  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10447  002374  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10448  002378  2ADE               	incf	postinc2,f,c
 10449  00237A  0E00               	movlw	0
 10450  00237C  22DD               	addwfc	postdec2,f,c
 10451                           
 10452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10453  00237E  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10454  002382  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10455  002386  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
 10456  00238A  0E02               	movlw	2
 10457  00238C  26DE               	addwf	postinc2,f,c
 10458  00238E  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
 10459  002392  0E00               	movlw	0
 10460  002394  22DD               	addwfc	postdec2,f,c
 10461  002396  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10462  00239A  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10463  00239E  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
 10464  0023A2  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
 10465  0023A6  0E00               	movlw	0
 10466  0023A8  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10467  0023AA  0EFF               	movlw	-1
 10468  0023AC  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10469  0023AE  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10470  0023B0  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10471  0023B2  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10472  0023B4  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10473  0023B6  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10474  0023B8                     
 10475                           ; BSR set to: 0
 10476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 10477  0023B8  C0B4  F021         	movff	vfpfcnvrt@fp,dtoa@fp
 10478  0023BC  C0B5  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10479  0023C0  C0BE  F023         	movff	vfpfcnvrt@ll,dtoa@d
 10480  0023C4  C0BF  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10481  0023C8  C0C0  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10482  0023CC  C0C1  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10483  0023D0  C0C2  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10484  0023D4  C0C3  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10485  0023D8  C0C4  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10486  0023DC  C0C5  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10487  0023E0  ECCB  F01C         	call	_dtoa	;wreg free
 10488  0023E4  C021  F0B4         	movff	?_dtoa,?_vfpfcnvrt
 10489  0023E8  C022  F0B5         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10490  0023EC  EF27  F013         	goto	l906
 10491  0023F0                     l9665:
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 10495  0023F0  0E66               	movlw	102
 10496  0023F2  19CA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
 10497  0023F4  A4D8               	btfss	status,2,c
 10498  0023F6  EFFF  F011         	goto	u10351
 10499  0023FA  EF01  F012         	goto	u10350
 10500  0023FE                     u10351:
 10501  0023FE  EF41  F012         	goto	l9677
 10502  002402                     u10350:
 10503  002402                     
 10504                           ; BSR set to: 0
 10505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 10506  002402  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10507  002406  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10508  00240A  CFDE FFF6          	movff	postinc2,tblptrl
 10509  00240E  CFDD FFF7          	movff	postdec2,tblptrh
 10510  002412                     	if	0	;tblptru may be non-zero
 10511  002412                     	endif
 10512  002412                     	if	0	;tblptru may be non-zero
 10513  002412                     	endif
 10514  002412  0008               	tblrd		*
 10515  002414  CFF5 F0D1          	movff	tablat,vfpfcnvrt@c
 10516  002418                     
 10517                           ; BSR set to: 0
 10518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 10519  002418  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10520  00241C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10521  002420  2ADE               	incf	postinc2,f,c
 10522  002422  0E00               	movlw	0
 10523  002424  22DD               	addwfc	postdec2,f,c
 10524  002426                     
 10525                           ; BSR set to: 0
 10526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10527  002426  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10528  00242A  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10529  00242E  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
 10530  002432  0E04               	movlw	4
 10531  002434  26DE               	addwf	postinc2,f,c
 10532  002436  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
 10533  00243A  0E00               	movlw	0
 10534  00243C  22DD               	addwfc	postdec2,f,c
 10535  00243E  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10536  002442  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10537  002446  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f
 10538  00244A  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+1
 10539  00244E  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+2
 10540  002452  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+3
 10541  002456                     l9673:
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 10545  002456  C0B4  F075         	movff	vfpfcnvrt@fp,efgtoa@fp
 10546  00245A  C0B5  F076         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 10547  00245E  C0CD  F077         	movff	vfpfcnvrt@f,efgtoa@f
 10548  002462  C0CE  F078         	movff	vfpfcnvrt@f+1,efgtoa@f+1
 10549  002466  C0CF  F079         	movff	vfpfcnvrt@f+2,efgtoa@f+2
 10550  00246A  C0D0  F07A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
 10551  00246E  C0D1  F07B         	movff	vfpfcnvrt@c,efgtoa@c
 10552  002472  EC09  F000         	call	_efgtoa	;wreg free
 10553  002476  C075  F0B4         	movff	?_efgtoa,?_vfpfcnvrt
 10554  00247A  C076  F0B5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
 10555  00247E  EF27  F013         	goto	l906
 10556  002482                     l9677:
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 10560  002482  0ECA               	movlw	low vfpfcnvrt@ct
 10561  002484  6E06               	movwf	strncmp@_l^0,c
 10562  002486  0E00               	movlw	high vfpfcnvrt@ct
 10563  002488  6E07               	movwf	(strncmp@_l+1)^0,c
 10564  00248A  0EFB               	movlw	low STR_31
 10565  00248C  6E08               	movwf	strncmp@_r^0,c
 10566  00248E  0E7F               	movlw	high STR_31
 10567  002490  6E09               	movwf	(strncmp@_r+1)^0,c
 10568  002492  0E00               	movlw	0
 10569  002494  6E0B               	movwf	(strncmp@n+1)^0,c
 10570  002496  0E02               	movlw	2
 10571  002498  6E0A               	movwf	strncmp@n^0,c
 10572  00249A  ECBA  F02A         	call	_strncmp	;wreg free
 10573  00249E  5006               	movf	?_strncmp^0,w,c
 10574  0024A0  1007               	iorwf	(?_strncmp+1)^0,w,c
 10575  0024A2  A4D8               	btfss	status,2,c
 10576  0024A4  EF56  F012         	goto	u10361
 10577  0024A8  EF58  F012         	goto	u10360
 10578  0024AC                     u10361:
 10579  0024AC  EFD4  F012         	goto	l9693
 10580  0024B0                     u10360:
 10581  0024B0                     
 10582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 10583  0024B0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10584  0024B4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10585  0024B8  CFDE F0BA          	movff	postinc2,??_vfpfcnvrt
 10586  0024BC  CFDD F0BB          	movff	postdec2,??_vfpfcnvrt+1
 10587  0024C0  0E01               	movlw	1
 10588  0024C2  0100               	movlb	0	; () banked
 10589  0024C4  27BA               	addwf	??_vfpfcnvrt& (0+255),f,b
 10590  0024C6  0E00               	movlw	0
 10591  0024C8  23BB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
 10592  0024CA  C0BA  FFF6         	movff	??_vfpfcnvrt,tblptrl
 10593  0024CE  C0BB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 10594  0024D2                     	if	0	;tblptru may be non-zero
 10595  0024D2                     	endif
 10596  0024D2                     	if	0	;tblptru may be non-zero
 10597  0024D2                     	endif
 10598  0024D2  0008               	tblrd		*
 10599  0024D4  CFF5 F0D1          	movff	tablat,vfpfcnvrt@c
 10600  0024D8  0EBF               	movlw	191
 10601  0024DA  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
 10602  0024DC  0EFF               	movlw	255
 10603  0024DE  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10604  0024E0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10605  0024E4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10606  0024E8  CFDE FFF6          	movff	postinc2,tblptrl
 10607  0024EC  CFDD FFF7          	movff	postdec2,tblptrh
 10608  0024F0                     	if	0	;tblptru may be non-zero
 10609  0024F0                     	endif
 10610  0024F0                     	if	0	;tblptru may be non-zero
 10611  0024F0                     	endif
 10612  0024F0  0008               	tblrd		*
 10613  0024F2  50F5               	movf	tablat,w,c
 10614  0024F4  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10615  0024F6  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10616  0024F8  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
 10617  0024FA  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10618  0024FC  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10619  0024FE  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10620  002500  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10621  002502  E10A               	bnz	u10370
 10622  002504  0E1A               	movlw	26
 10623  002506  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10624  002508  A0D8               	btfss	status,0,c
 10625  00250A  EF89  F012         	goto	u10371
 10626  00250E  EF8C  F012         	goto	u10370
 10627  002512                     u10371:
 10628  002512  0E01               	movlw	1
 10629  002514  EF8D  F012         	goto	u10380
 10630  002518                     u10370:
 10631  002518  0E00               	movlw	0
 10632  00251A                     u10380:
 10633  00251A  6FC8               	movwf	_vfpfcnvrt$959& (0+255),b
 10634  00251C  6BC9               	clrf	(_vfpfcnvrt$959+1)& (0+255),b
 10635  00251E                     
 10636                           ; BSR set to: 0
 10637  00251E  51C8               	movf	_vfpfcnvrt$959& (0+255),w,b
 10638  002520  11C9               	iorwf	(_vfpfcnvrt$959+1)& (0+255),w,b
 10639  002522  B4D8               	btfsc	status,2,c
 10640  002524  EF96  F012         	goto	u10391
 10641  002528  EF98  F012         	goto	u10390
 10642  00252C                     u10391:
 10643  00252C  EFB2  F012         	goto	l9687
 10644  002530                     u10390:
 10645  002530                     
 10646                           ; BSR set to: 0
 10647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 10648  002530  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10649  002534  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10650  002538  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
 10651  00253C  0E04               	movlw	4
 10652  00253E  26DE               	addwf	postinc2,f,c
 10653  002540  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
 10654  002544  0E00               	movlw	0
 10655  002546  22DD               	addwfc	postdec2,f,c
 10656  002548  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10657  00254C  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10658  002550  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f
 10659  002554  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+1
 10660  002558  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+2
 10661  00255C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+3
 10662                           
 10663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 10664  002560  EFCA  F012         	goto	l917
 10665  002564                     l9687:
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 10669  002564  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10670  002568  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10671  00256C  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
 10672  002570  0E04               	movlw	4
 10673  002572  26DE               	addwf	postinc2,f,c
 10674  002574  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
 10675  002578  0E00               	movlw	0
 10676  00257A  22DD               	addwfc	postdec2,f,c
 10677  00257C  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10678  002580  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10679  002584  CFDE F0CD          	movff	postinc2,vfpfcnvrt@f
 10680  002588  CFDE F0CE          	movff	postinc2,vfpfcnvrt@f+1
 10681  00258C  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f+2
 10682  002590  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+3
 10683  002594                     l917:
 10684                           
 10685                           ; BSR set to: 0
 10686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 10687  002594  0E02               	movlw	2
 10688  002596  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10689  00259A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10690  00259E  26DE               	addwf	postinc2,f,c
 10691  0025A0  0E00               	movlw	0
 10692  0025A2  22DD               	addwfc	postdec2,f,c
 10693  0025A4  EF2B  F012         	goto	l9673
 10694  0025A8                     l9693:
 10695                           
 10696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 10697  0025A8  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10698  0025AC  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10699  0025B0  CFDE FFF6          	movff	postinc2,tblptrl
 10700  0025B4  CFDD FFF7          	movff	postdec2,tblptrh
 10701  0025B8                     	if	0	;tblptru may be non-zero
 10702  0025B8                     	endif
 10703  0025B8                     	if	0	;tblptru may be non-zero
 10704  0025B8                     	endif
 10705  0025B8  0008               	tblrd		*
 10706  0025BA  50F5               	movf	tablat,w,c
 10707  0025BC  0A25               	xorlw	37
 10708  0025BE  A4D8               	btfss	status,2,c
 10709  0025C0  EFE4  F012         	goto	u10401
 10710  0025C4  EFE6  F012         	goto	u10400
 10711  0025C8                     u10401:
 10712  0025C8  EFFE  F012         	goto	l9703
 10713  0025CC                     u10400:
 10714  0025CC                     
 10715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 10716  0025CC  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10717  0025D0  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10718  0025D4  2ADE               	incf	postinc2,f,c
 10719  0025D6  0E00               	movlw	0
 10720  0025D8  22DD               	addwfc	postdec2,f,c
 10721  0025DA                     
 10722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 10723  0025DA  0E00               	movlw	0
 10724  0025DC  6E07               	movwf	(fputc@c+1)^0,c
 10725  0025DE  0E25               	movlw	37
 10726  0025E0  6E06               	movwf	fputc@c^0,c
 10727  0025E2  C0B4  F008         	movff	vfpfcnvrt@fp,fputc@fp
 10728  0025E6  C0B5  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10729  0025EA  EC25  F02B         	call	_fputc	;wreg free
 10730  0025EE                     l9699:
 10731                           
 10732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 10733  0025EE  0E00               	movlw	0
 10734  0025F0  0100               	movlb	0	; () banked
 10735  0025F2  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10736  0025F4  0E01               	movlw	1
 10737  0025F6  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
 10738  0025F8  EF27  F013         	goto	l906
 10739  0025FC                     l9703:
 10740                           
 10741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 10742  0025FC  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10743  002600  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10744  002604  2ADE               	incf	postinc2,f,c
 10745  002606  0E00               	movlw	0
 10746  002608  22DD               	addwfc	postdec2,f,c
 10747  00260A                     
 10748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 10749  00260A  0E00               	movlw	0
 10750  00260C  0100               	movlb	0	; () banked
 10751  00260E  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10752  002610  0E00               	movlw	0
 10753  002612  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
 10754  002614  EF27  F013         	goto	l906
 10755  002618                     l9709:
 10756                           
 10757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 10758  002618  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10759  00261C  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10760  002620  CFDE FFF6          	movff	postinc2,tblptrl
 10761  002624  CFDD FFF7          	movff	postdec2,tblptrh
 10762  002628                     	if	0	;tblptru may be non-zero
 10763  002628                     	endif
 10764  002628                     	if	0	;tblptru may be non-zero
 10765  002628                     	endif
 10766  002628  0008               	tblrd		*
 10767  00262A  50F5               	movf	tablat,w,c
 10768  00262C  6E06               	movwf	fputc@c^0,c
 10769  00262E  6A07               	clrf	(fputc@c+1)^0,c
 10770  002630  C0B4  F008         	movff	vfpfcnvrt@fp,fputc@fp
 10771  002634  C0B5  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10772  002638  EC25  F02B         	call	_fputc	;wreg free
 10773  00263C                     
 10774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 10775  00263C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10776  002640  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10777  002644  2ADE               	incf	postinc2,f,c
 10778  002646  0E00               	movlw	0
 10779  002648  22DD               	addwfc	postdec2,f,c
 10780  00264A  EFF7  F012         	goto	l9699
 10781  00264E                     l906:
 10782  00264E  0012               	return		;funcret
 10783  002650                     __end_of_vfpfcnvrt:
 10784                           	opt callstack 0
 10785                           
 10786 ;; *************** function _strncmp *****************
 10787 ;; Defined at:
 10788 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 10789 ;; Parameters:    Size  Location     Type
 10790 ;;  _l              2    5[COMRAM] PTR const unsigned char 
 10791 ;;		 -> vfpfcnvrt@ct(3), 
 10792 ;;  _r              2    7[COMRAM] PTR const unsigned char 
 10793 ;;		 -> STR_33(3), 
 10794 ;;  n               2    9[COMRAM] unsigned int 
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;  r               2   14[COMRAM] PTR const unsigned char 
 10797 ;;		 -> STR_33(3), 
 10798 ;;  l               2   12[COMRAM] PTR const unsigned char 
 10799 ;;		 -> vfpfcnvrt@ct(3), 
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  2    5[COMRAM] int 
 10802 ;; Registers used:
 10803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10809 ;;      Params:         6       0       0       0       0       0       0       0       0
 10810 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10811 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10812 ;;      Totals:        11       0       0       0       0       0       0       0       0
 10813 ;;Total ram usage:       11 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    2
 10816 ;; This function calls:
 10817 ;;		Nothing
 10818 ;; This function is called by:
 10819 ;;		_vfpfcnvrt
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           	psect	text37
 10824  005574                     __ptext37:
 10825                           	opt callstack 0
 10826  005574                     _strncmp:
 10827                           	opt callstack 24
 10828  005574  C006  F00D         	movff	strncmp@_l,strncmp@l
 10829  005578  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
 10830  00557C  C008  F00F         	movff	strncmp@_r,strncmp@r
 10831  005580  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
 10832  005584  060A               	decf	strncmp@n^0,f,c
 10833  005586  A0D8               	btfss	status,0,c
 10834  005588  060B               	decf	(strncmp@n+1)^0,f,c
 10835  00558A  280A               	incf	strncmp@n^0,w,c
 10836  00558C  E106               	bnz	u6771
 10837  00558E  280B               	incf	(strncmp@n+1)^0,w,c
 10838  005590  A4D8               	btfss	status,2,c
 10839  005592  EFCD  F02A         	goto	u6771
 10840  005596  EFCF  F02A         	goto	u6770
 10841  00559A                     u6771:
 10842  00559A  EFDC  F02A         	goto	l6571
 10843  00559E                     u6770:
 10844  00559E  0E00               	movlw	0
 10845  0055A0  6E07               	movwf	(?_strncmp+1)^0,c
 10846  0055A2  0E00               	movlw	0
 10847  0055A4  6E06               	movwf	?_strncmp^0,c
 10848  0055A6  EF24  F02B         	goto	l1793
 10849  0055AA                     l6569:
 10850  0055AA  4A0D               	infsnz	strncmp@l^0,f,c
 10851  0055AC  2A0E               	incf	(strncmp@l+1)^0,f,c
 10852  0055AE  4A0F               	infsnz	strncmp@r^0,f,c
 10853  0055B0  2A10               	incf	(strncmp@r+1)^0,f,c
 10854  0055B2  060A               	decf	strncmp@n^0,f,c
 10855  0055B4  A0D8               	btfss	status,0,c
 10856  0055B6  060B               	decf	(strncmp@n+1)^0,f,c
 10857  0055B8                     l6571:
 10858  0055B8  C00D  FFD9         	movff	strncmp@l,fsr2l
 10859  0055BC  C00E  FFDA         	movff	strncmp@l+1,fsr2h
 10860  0055C0  50DF               	movf	indf2,w,c
 10861  0055C2  B4D8               	btfsc	status,2,c
 10862  0055C4  EFE6  F02A         	goto	u6781
 10863  0055C8  EFE8  F02A         	goto	u6780
 10864  0055CC                     u6781:
 10865  0055CC  EF13  F02B         	goto	l6579
 10866  0055D0                     u6780:
 10867  0055D0  C00F  FFF6         	movff	strncmp@r,tblptrl
 10868  0055D4  C010  FFF7         	movff	strncmp@r+1,tblptrh
 10869  0055D8                     	if	0	;tblptru may be non-zero
 10870  0055D8                     	endif
 10871  0055D8                     	if	0	;tblptru may be non-zero
 10872  0055D8                     	endif
 10873  0055D8  0008               	tblrd		*
 10874  0055DA  50F5               	movf	tablat,w,c
 10875  0055DC  0900               	iorlw	0
 10876  0055DE  B4D8               	btfsc	status,2,c
 10877  0055E0  EFF4  F02A         	goto	u6791
 10878  0055E4  EFF6  F02A         	goto	u6790
 10879  0055E8                     u6791:
 10880  0055E8  EF13  F02B         	goto	l6579
 10881  0055EC                     u6790:
 10882  0055EC  500A               	movf	strncmp@n^0,w,c
 10883  0055EE  100B               	iorwf	(strncmp@n+1)^0,w,c
 10884  0055F0  B4D8               	btfsc	status,2,c
 10885  0055F2  EFFD  F02A         	goto	u6801
 10886  0055F6  EFFF  F02A         	goto	u6800
 10887  0055FA                     u6801:
 10888  0055FA  EF13  F02B         	goto	l6579
 10889  0055FE                     u6800:
 10890  0055FE  C00D  FFD9         	movff	strncmp@l,fsr2l
 10891  005602  C00E  FFDA         	movff	strncmp@l+1,fsr2h
 10892  005606  50DF               	movf	indf2,w,c
 10893  005608  6E0C               	movwf	??_strncmp^0,c
 10894  00560A  C00F  FFF6         	movff	strncmp@r,tblptrl
 10895  00560E  C010  FFF7         	movff	strncmp@r+1,tblptrh
 10896  005612                     	if	0	;tblptru may be non-zero
 10897  005612                     	endif
 10898  005612                     	if	0	;tblptru may be non-zero
 10899  005612                     	endif
 10900  005612  0008               	tblrd		*
 10901  005614  50F5               	movf	tablat,w,c
 10902  005616  180C               	xorwf	??_strncmp^0,w,c
 10903  005618  B4D8               	btfsc	status,2,c
 10904  00561A  EF11  F02B         	goto	u6811
 10905  00561E  EF13  F02B         	goto	u6810
 10906  005622                     u6811:
 10907  005622  EFD5  F02A         	goto	l6569
 10908  005626                     u6810:
 10909  005626                     l6579:
 10910  005626  C00D  FFD9         	movff	strncmp@l,fsr2l
 10911  00562A  C00E  FFDA         	movff	strncmp@l+1,fsr2h
 10912  00562E  50DF               	movf	indf2,w,c
 10913  005630  6E0C               	movwf	??_strncmp^0,c
 10914  005632  C00F  FFF6         	movff	strncmp@r,tblptrl
 10915  005636  C010  FFF7         	movff	strncmp@r+1,tblptrh
 10916  00563A                     	if	0	;tblptru may be non-zero
 10917  00563A                     	endif
 10918  00563A                     	if	0	;tblptru may be non-zero
 10919  00563A                     	endif
 10920  00563A  0008               	tblrd		*
 10921  00563C  50F5               	movf	tablat,w,c
 10922  00563E  5C0C               	subwf	??_strncmp^0,w,c
 10923  005640  6E06               	movwf	?_strncmp^0,c
 10924  005642  6A07               	clrf	(?_strncmp+1)^0,c
 10925  005644  A0D8               	btfss	status,0,c
 10926  005646  0607               	decf	(?_strncmp+1)^0,f,c
 10927  005648                     l1793:
 10928  005648  0012               	return		;funcret
 10929  00564A                     __end_of_strncmp:
 10930                           	opt callstack 0
 10931                           
 10932 ;; *************** function _efgtoa *****************
 10933 ;; Defined at:
 10934 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10935 ;; Parameters:    Size  Location     Type
 10936 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
 10937 ;;		 -> sprintf@f(6), 
 10938 ;;  f               4   23[BANK0 ] PTR struct _IO_FILE
 10939 ;;  c               1   27[BANK0 ] unsigned char 
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;  u               4   80[BANK0 ] unsigned char 
 10942 ;;  g               4   72[BANK0 ] unsigned char 
 10943 ;;  l               4   66[BANK0 ] unsigned char 
 10944 ;;  h               4   62[BANK0 ] unsigned char 
 10945 ;;  ou              4   28[BANK0 ] unsigned char 
 10946 ;;  n               2   78[BANK0 ] int 
 10947 ;;  e               2   76[BANK0 ] int 
 10948 ;;  i               2   70[BANK0 ] int 
 10949 ;;  w               2   59[BANK0 ] int 
 10950 ;;  p               2   56[BANK0 ] int 
 10951 ;;  sign            2   54[BANK0 ] int 
 10952 ;;  d               2   52[BANK0 ] int 
 10953 ;;  ne              2   50[BANK0 ] int 
 10954 ;;  m               2   48[BANK0 ] int 
 10955 ;;  pp              2   46[BANK0 ] int 
 10956 ;;  t               2   44[BANK0 ] int 
 10957 ;;  mode            1   61[BANK0 ] unsigned char 
 10958 ;;  nmode           1   58[BANK0 ] unsigned char 
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  2   21[BANK0 ] int 
 10961 ;; Registers used:
 10962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10968 ;;      Params:         0       7       0       0       0       0       0       0       0
 10969 ;;      Locals:         0      56       0       0       0       0       0       0       0
 10970 ;;      Temps:          5       0       0       0       0       0       0       0       0
 10971 ;;      Totals:         5      63       0       0       0       0       0       0       0
 10972 ;;Total ram usage:       68 bytes
 10973 ;; Hardware stack levels used:    1
 10974 ;; Hardware stack levels required when called:    6
 10975 ;; This function calls:
 10976 ;;		___awdiv
 10977 ;;		___awmod
 10978 ;;		___fladd
 10979 ;;		___fldiv
 10980 ;;		___fleq
 10981 ;;		___flge
 10982 ;;		___flmul
 10983 ;;		___flneg
 10984 ;;		___flsub
 10985 ;;		___fltol
 10986 ;;		___fpclassifyf
 10987 ;;		_floorf
 10988 ;;		_isupper
 10989 ;;		_pad
 10990 ;;		_strcpy
 10991 ;;		_tolower
 10992 ;; This function is called by:
 10993 ;;		_vfpfcnvrt
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text38
 10998  000012                     __ptext38:
 10999                           	opt callstack 0
 11000  000012                     _efgtoa:
 11001                           	opt callstack 20
 11002  000012                     
 11003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
 11004  000012  0E00               	movlw	0
 11005  000014  0100               	movlb	0	; () banked
 11006  000016  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
 11007  000018  0E00               	movlw	0
 11008  00001A  6F96               	movwf	efgtoa@sign& (0+255),b
 11009  00001C                     
 11010                           ; BSR set to: 0
 11011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
 11012  00001C  C077  F0A8         	movff	efgtoa@f,efgtoa@g
 11013  000020  C078  F0A9         	movff	efgtoa@f+1,efgtoa@g+1
 11014  000024  C079  F0AA         	movff	efgtoa@f+2,efgtoa@g+2
 11015  000028  C07A  F0AB         	movff	efgtoa@f+3,efgtoa@g+3
 11016  00002C                     
 11017                           ; BSR set to: 0
 11018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
 11019  00002C  BFAB               	btfsc	(efgtoa@g+3)& (0+255),7,b
 11020  00002E  EF1D  F000         	goto	u9450
 11021  000032  EF1B  F000         	goto	u9451
 11022  000036                     u9451:
 11023  000036  EF33  F000         	goto	l9127
 11024  00003A                     u9450:
 11025  00003A                     
 11026                           ; BSR set to: 0
 11027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
 11028  00003A  0E00               	movlw	0
 11029  00003C  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
 11030  00003E  0E01               	movlw	1
 11031  000040  6F96               	movwf	efgtoa@sign& (0+255),b
 11032  000042                     
 11033                           ; BSR set to: 0
 11034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
 11035  000042  C0A8  F03A         	movff	efgtoa@g,___flneg@f1
 11036  000046  C0A9  F03B         	movff	efgtoa@g+1,___flneg@f1+1
 11037  00004A  C0AA  F03C         	movff	efgtoa@g+2,___flneg@f1+2
 11038  00004E  C0AB  F03D         	movff	efgtoa@g+3,___flneg@f1+3
 11039  000052  EC02  F033         	call	___flneg	;wreg free
 11040  000056  C03A  F0A8         	movff	?___flneg,efgtoa@g
 11041  00005A  C03B  F0A9         	movff	?___flneg+1,efgtoa@g+1
 11042  00005E  C03C  F0AA         	movff	?___flneg+2,efgtoa@g+2
 11043  000062  C03D  F0AB         	movff	?___flneg+3,efgtoa@g+3
 11044  000066                     l9127:
 11045                           
 11046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
 11047  000066  0E00               	movlw	0
 11048  000068  0100               	movlb	0	; () banked
 11049  00006A  6FAF               	movwf	(efgtoa@n+1)& (0+255),b
 11050  00006C  0E00               	movlw	0
 11051  00006E  6FAE               	movwf	efgtoa@n& (0+255),b
 11052  000070                     
 11053                           ; BSR set to: 0
 11054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
 11055  000070  C12E  F09B         	movff	_width,efgtoa@w
 11056  000074  C12F  F09C         	movff	_width+1,efgtoa@w+1
 11057  000078                     
 11058                           ; BSR set to: 0
 11059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
 11060  000078  5196               	movf	efgtoa@sign& (0+255),w,b
 11061  00007A  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 11062  00007C  A4D8               	btfss	status,2,c
 11063  00007E  EF43  F000         	goto	u9461
 11064  000082  EF45  F000         	goto	u9460
 11065  000086                     u9461:
 11066  000086  EF4D  F000         	goto	l9135
 11067  00008A                     u9460:
 11068  00008A                     
 11069                           ; BSR set to: 0
 11070  00008A  0101               	movlb	1	; () banked
 11071  00008C  A532               	btfss	_flags& (0+255),2,b
 11072  00008E  EF4B  F000         	goto	u9471
 11073  000092  EF4D  F000         	goto	u9470
 11074  000096                     u9471:
 11075  000096  EF68  F000         	goto	l9147
 11076  00009A                     u9470:
 11077  00009A                     l9135:
 11078                           
 11079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
 11080  00009A  0100               	movlb	0	; () banked
 11081  00009C  5196               	movf	efgtoa@sign& (0+255),w,b
 11082  00009E  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 11083  0000A0  A4D8               	btfss	status,2,c
 11084  0000A2  EF55  F000         	goto	u9481
 11085  0000A6  EF57  F000         	goto	u9480
 11086  0000AA                     u9481:
 11087  0000AA  EF5D  F000         	goto	l9139
 11088  0000AE                     u9480:
 11089  0000AE                     
 11090                           ; BSR set to: 0
 11091  0000AE  0E00               	movlw	0
 11092  0000B0  6F81               	movwf	(_efgtoa$928+1)& (0+255),b
 11093  0000B2  0E2B               	movlw	43
 11094  0000B4  6F80               	movwf	_efgtoa$928& (0+255),b
 11095  0000B6  EF61  F000         	goto	l9141
 11096  0000BA                     l9139:
 11097                           
 11098                           ; BSR set to: 0
 11099  0000BA  0E00               	movlw	0
 11100  0000BC  6F81               	movwf	(_efgtoa$928+1)& (0+255),b
 11101  0000BE  0E2D               	movlw	45
 11102  0000C0  6F80               	movwf	_efgtoa$928& (0+255),b
 11103  0000C2                     l9141:
 11104                           
 11105                           ; BSR set to: 0
 11106  0000C2  C080  F14A         	movff	_efgtoa$928,_dbuf
 11107  0000C6                     
 11108                           ; BSR set to: 0
 11109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
 11110  0000C6  4BAE               	infsnz	efgtoa@n& (0+255),f,b
 11111  0000C8  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
 11112  0000CA                     
 11113                           ; BSR set to: 0
 11114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
 11115  0000CA  079B               	decf	efgtoa@w& (0+255),f,b
 11116  0000CC  A0D8               	btfss	status,0,c
 11117  0000CE  079C               	decf	(efgtoa@w+1)& (0+255),f,b
 11118  0000D0                     l9147:
 11119                           
 11120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11121  0000D0  C0A8  F006         	movff	efgtoa@g,___fpclassifyf@x
 11122  0000D4  C0A9  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11123  0000D8  C0AA  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11124  0000DC  C0AB  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11125  0000E0  ECC6  F029         	call	___fpclassifyf	;wreg free
 11126  0000E4  0406               	decf	?___fpclassifyf^0,w,c
 11127  0000E6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
 11128  0000E8  A4D8               	btfss	status,2,c
 11129  0000EA  EF79  F000         	goto	u9491
 11130  0000EE  EF7B  F000         	goto	u9490
 11131  0000F2                     u9491:
 11132  0000F2  EFD2  F000         	goto	l9165
 11133  0000F6                     u9490:
 11134  0000F6  0EBF               	movlw	191
 11135  0000F8  6E50               	movwf	??_efgtoa^0,c
 11136  0000FA  0EFF               	movlw	255
 11137  0000FC  6E51               	movwf	(??_efgtoa+1)^0,c
 11138  0000FE  0100               	movlb	0	; () banked
 11139  000100  517B               	movf	efgtoa@c& (0+255),w,b
 11140  000102  6E52               	movwf	(??_efgtoa+2)^0,c
 11141  000104  6A53               	clrf	(??_efgtoa+3)^0,c
 11142  000106  5050               	movf	??_efgtoa^0,w,c
 11143  000108  2652               	addwf	(??_efgtoa+2)^0,f,c
 11144  00010A  5051               	movf	(??_efgtoa+1)^0,w,c
 11145  00010C  2253               	addwfc	(??_efgtoa+3)^0,f,c
 11146  00010E  5053               	movf	(??_efgtoa+3)^0,w,c
 11147  000110  E10A               	bnz	u9500
 11148  000112  0E1A               	movlw	26
 11149  000114  5C52               	subwf	(??_efgtoa+2)^0,w,c
 11150  000116  A0D8               	btfss	status,0,c
 11151  000118  EF90  F000         	goto	u9501
 11152  00011C  EF93  F000         	goto	u9500
 11153  000120                     u9501:
 11154  000120  0E01               	movlw	1
 11155  000122  EF94  F000         	goto	u9510
 11156  000126                     u9500:
 11157  000126  0E00               	movlw	0
 11158  000128                     u9510:
 11159  000128  6F82               	movwf	_efgtoa$929& (0+255),b
 11160  00012A  6B83               	clrf	(_efgtoa$929+1)& (0+255),b
 11161  00012C                     
 11162                           ; BSR set to: 0
 11163  00012C  5182               	movf	_efgtoa$929& (0+255),w,b
 11164  00012E  1183               	iorwf	(_efgtoa$929+1)& (0+255),w,b
 11165  000130  B4D8               	btfsc	status,2,c
 11166  000132  EF9D  F000         	goto	u9521
 11167  000136  EF9F  F000         	goto	u9520
 11168  00013A                     u9521:
 11169  00013A  EFAD  F000         	goto	l9157
 11170  00013E                     u9520:
 11171  00013E                     
 11172                           ; BSR set to: 0
 11173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
 11174  00013E  0E4A               	movlw	low _dbuf
 11175  000140  25AE               	addwf	efgtoa@n& (0+255),w,b
 11176  000142  6E06               	movwf	strcpy@dest^0,c
 11177  000144  0E01               	movlw	high _dbuf
 11178  000146  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11179  000148  6E07               	movwf	(strcpy@dest+1)^0,c
 11180  00014A  0EEB               	movlw	low STR_23
 11181  00014C  6E08               	movwf	strcpy@src^0,c
 11182  00014E  0E7F               	movlw	high STR_23
 11183  000150  6E09               	movwf	(strcpy@src+1)^0,c
 11184  000152  EC6E  F030         	call	_strcpy	;wreg free
 11185                           
 11186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
 11187  000156  EFB9  F000         	goto	l9159
 11188  00015A                     l9157:
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
 11192  00015A  0E4A               	movlw	low _dbuf
 11193  00015C  25AE               	addwf	efgtoa@n& (0+255),w,b
 11194  00015E  6E06               	movwf	strcpy@dest^0,c
 11195  000160  0E01               	movlw	high _dbuf
 11196  000162  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11197  000164  6E07               	movwf	(strcpy@dest+1)^0,c
 11198  000166  0EF3               	movlw	low STR_24
 11199  000168  6E08               	movwf	strcpy@src^0,c
 11200  00016A  0E7F               	movlw	high STR_24
 11201  00016C  6E09               	movwf	(strcpy@src+1)^0,c
 11202  00016E  EC6E  F030         	call	_strcpy	;wreg free
 11203  000172                     l9159:
 11204                           
 11205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 11206  000172  0100               	movlb	0	; () banked
 11207  000174  0EFD               	movlw	253
 11208  000176  279B               	addwf	efgtoa@w& (0+255),f,b
 11209  000178  0EFF               	movlw	255
 11210  00017A  239C               	addwfc	(efgtoa@w+1)& (0+255),f,b
 11211  00017C                     l9161:
 11212                           
 11213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
 11214  00017C  C075  F016         	movff	efgtoa@fp,pad@fp
 11215  000180  C076  F017         	movff	efgtoa@fp+1,pad@fp+1
 11216  000184  0E4A               	movlw	low _dbuf
 11217  000186  6E18               	movwf	pad@buf^0,c
 11218  000188  0E01               	movlw	high _dbuf
 11219  00018A  6E19               	movwf	(pad@buf+1)^0,c
 11220  00018C  C09B  F01A         	movff	efgtoa@w,pad@p
 11221  000190  C09C  F01B         	movff	efgtoa@w+1,pad@p+1
 11222  000194  EC8A  F02B         	call	_pad	;wreg free
 11223  000198  C016  F075         	movff	?_pad,?_efgtoa
 11224  00019C  C017  F076         	movff	?_pad+1,?_efgtoa+1
 11225  0001A0  EFED  F005         	goto	l816
 11226  0001A4                     l9165:
 11227                           
 11228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11229  0001A4  C0A8  F006         	movff	efgtoa@g,___fpclassifyf@x
 11230  0001A8  C0A9  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11231  0001AC  C0AA  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11232  0001B0  C0AB  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11233  0001B4  ECC6  F029         	call	___fpclassifyf	;wreg free
 11234  0001B8  5006               	movf	?___fpclassifyf^0,w,c
 11235  0001BA  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
 11236  0001BC  A4D8               	btfss	status,2,c
 11237  0001BE  EFE3  F000         	goto	u9531
 11238  0001C2  EFE5  F000         	goto	u9530
 11239  0001C6                     u9531:
 11240  0001C6  EF25  F001         	goto	l9183
 11241  0001CA                     u9530:
 11242  0001CA  0EBF               	movlw	191
 11243  0001CC  6E50               	movwf	??_efgtoa^0,c
 11244  0001CE  0EFF               	movlw	255
 11245  0001D0  6E51               	movwf	(??_efgtoa+1)^0,c
 11246  0001D2  0100               	movlb	0	; () banked
 11247  0001D4  517B               	movf	efgtoa@c& (0+255),w,b
 11248  0001D6  6E52               	movwf	(??_efgtoa+2)^0,c
 11249  0001D8  6A53               	clrf	(??_efgtoa+3)^0,c
 11250  0001DA  5050               	movf	??_efgtoa^0,w,c
 11251  0001DC  2652               	addwf	(??_efgtoa+2)^0,f,c
 11252  0001DE  5051               	movf	(??_efgtoa+1)^0,w,c
 11253  0001E0  2253               	addwfc	(??_efgtoa+3)^0,f,c
 11254  0001E2  5053               	movf	(??_efgtoa+3)^0,w,c
 11255  0001E4  E10A               	bnz	u9540
 11256  0001E6  0E1A               	movlw	26
 11257  0001E8  5C52               	subwf	(??_efgtoa+2)^0,w,c
 11258  0001EA  A0D8               	btfss	status,0,c
 11259  0001EC  EFFA  F000         	goto	u9541
 11260  0001F0  EFFD  F000         	goto	u9540
 11261  0001F4                     u9541:
 11262  0001F4  0E01               	movlw	1
 11263  0001F6  EFFE  F000         	goto	u9550
 11264  0001FA                     u9540:
 11265  0001FA  0E00               	movlw	0
 11266  0001FC                     u9550:
 11267  0001FC  6F84               	movwf	_efgtoa$933& (0+255),b
 11268  0001FE  6B85               	clrf	(_efgtoa$933+1)& (0+255),b
 11269  000200                     
 11270                           ; BSR set to: 0
 11271  000200  5184               	movf	_efgtoa$933& (0+255),w,b
 11272  000202  1185               	iorwf	(_efgtoa$933+1)& (0+255),w,b
 11273  000204  B4D8               	btfsc	status,2,c
 11274  000206  EF07  F001         	goto	u9561
 11275  00020A  EF09  F001         	goto	u9560
 11276  00020E                     u9561:
 11277  00020E  EF17  F001         	goto	l9175
 11278  000212                     u9560:
 11279  000212                     
 11280                           ; BSR set to: 0
 11281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
 11282  000212  0E4A               	movlw	low _dbuf
 11283  000214  25AE               	addwf	efgtoa@n& (0+255),w,b
 11284  000216  6E06               	movwf	strcpy@dest^0,c
 11285  000218  0E01               	movlw	high _dbuf
 11286  00021A  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11287  00021C  6E07               	movwf	(strcpy@dest+1)^0,c
 11288  00021E  0EEF               	movlw	low STR_27
 11289  000220  6E08               	movwf	strcpy@src^0,c
 11290  000222  0E7F               	movlw	high STR_27
 11291  000224  6E09               	movwf	(strcpy@src+1)^0,c
 11292  000226  EC6E  F030         	call	_strcpy	;wreg free
 11293                           
 11294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
 11295  00022A  EFB9  F000         	goto	l9159
 11296  00022E                     l9175:
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
 11300  00022E  0E4A               	movlw	low _dbuf
 11301  000230  25AE               	addwf	efgtoa@n& (0+255),w,b
 11302  000232  6E06               	movwf	strcpy@dest^0,c
 11303  000234  0E01               	movlw	high _dbuf
 11304  000236  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11305  000238  6E07               	movwf	(strcpy@dest+1)^0,c
 11306  00023A  0EF7               	movlw	low STR_28
 11307  00023C  6E08               	movwf	strcpy@src^0,c
 11308  00023E  0E7F               	movlw	high STR_28
 11309  000240  6E09               	movwf	(strcpy@src+1)^0,c
 11310  000242  EC6E  F030         	call	_strcpy	;wreg free
 11311  000246  EFB9  F000         	goto	l9159
 11312  00024A                     l9183:
 11313                           
 11314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
 11315  00024A  0E00               	movlw	0
 11316  00024C  0100               	movlb	0	; () banked
 11317  00024E  6FB0               	movwf	efgtoa@u& (0+255),b
 11318  000250  0E00               	movlw	0
 11319  000252  6FB1               	movwf	(efgtoa@u+1)& (0+255),b
 11320  000254  0E80               	movlw	128
 11321  000256  6FB2               	movwf	(efgtoa@u+2)& (0+255),b
 11322  000258  0E3F               	movlw	63
 11323  00025A  6FB3               	movwf	(efgtoa@u+3)& (0+255),b
 11324                           
 11325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
 11326  00025C  0E00               	movlw	0
 11327  00025E  6FAD               	movwf	(efgtoa@e+1)& (0+255),b
 11328  000260  0E00               	movlw	0
 11329  000262  6FAC               	movwf	efgtoa@e& (0+255),b
 11330  000264                     
 11331                           ; BSR set to: 0
 11332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
 11333  000264  C0A8  F006         	movff	efgtoa@g,___fleq@ff1
 11334  000268  C0A9  F007         	movff	efgtoa@g+1,___fleq@ff1+1
 11335  00026C  C0AA  F008         	movff	efgtoa@g+2,___fleq@ff1+2
 11336  000270  C0AB  F009         	movff	efgtoa@g+3,___fleq@ff1+3
 11337  000274  0E00               	movlw	0
 11338  000276  6E0A               	movwf	___fleq@ff2^0,c
 11339  000278  0E00               	movlw	0
 11340  00027A  6E0B               	movwf	(___fleq@ff2+1)^0,c
 11341  00027C  0E00               	movlw	0
 11342  00027E  6E0C               	movwf	(___fleq@ff2+2)^0,c
 11343  000280  0E00               	movlw	0
 11344  000282  6E0D               	movwf	(___fleq@ff2+3)^0,c
 11345  000284  ECB8  F02D         	call	___fleq	;wreg free
 11346  000288  B0D8               	btfsc	status,0,c
 11347  00028A  EF49  F001         	goto	u9571
 11348  00028E  EF4B  F001         	goto	u9570
 11349  000292                     u9571:
 11350  000292  EFD0  F001         	goto	l9201
 11351  000296                     u9570:
 11352  000296  EF6A  F001         	goto	l9193
 11353  00029A                     l9189:
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
 11357  00029A  C0B0  F03E         	movff	efgtoa@u,___flmul@b
 11358  00029E  C0B1  F03F         	movff	efgtoa@u+1,___flmul@b+1
 11359  0002A2  C0B2  F040         	movff	efgtoa@u+2,___flmul@b+2
 11360  0002A6  C0B3  F041         	movff	efgtoa@u+3,___flmul@b+3
 11361  0002AA  0E00               	movlw	0
 11362  0002AC  6E42               	movwf	___flmul@a^0,c
 11363  0002AE  0E00               	movlw	0
 11364  0002B0  6E43               	movwf	(___flmul@a+1)^0,c
 11365  0002B2  0E20               	movlw	32
 11366  0002B4  6E44               	movwf	(___flmul@a+2)^0,c
 11367  0002B6  0E41               	movlw	65
 11368  0002B8  6E45               	movwf	(___flmul@a+3)^0,c
 11369  0002BA  EC88  F015         	call	___flmul	;wreg free
 11370  0002BE  C03E  F0B0         	movff	?___flmul,efgtoa@u
 11371  0002C2  C03F  F0B1         	movff	?___flmul+1,efgtoa@u+1
 11372  0002C6  C040  F0B2         	movff	?___flmul+2,efgtoa@u+2
 11373  0002CA  C041  F0B3         	movff	?___flmul+3,efgtoa@u+3
 11374  0002CE                     
 11375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
 11376  0002CE  0100               	movlb	0	; () banked
 11377  0002D0  4BAC               	infsnz	efgtoa@e& (0+255),f,b
 11378  0002D2  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
 11379  0002D4                     l9193:
 11380                           
 11381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
 11382  0002D4  C0A8  F06D         	movff	efgtoa@g,___flge@ff1
 11383  0002D8  C0A9  F06E         	movff	efgtoa@g+1,___flge@ff1+1
 11384  0002DC  C0AA  F06F         	movff	efgtoa@g+2,___flge@ff1+2
 11385  0002E0  C0AB  F070         	movff	efgtoa@g+3,___flge@ff1+3
 11386  0002E4  0E00               	movlw	0
 11387  0002E6  6E42               	movwf	___flmul@a^0,c
 11388  0002E8  0E00               	movlw	0
 11389  0002EA  6E43               	movwf	(___flmul@a+1)^0,c
 11390  0002EC  0E20               	movlw	32
 11391  0002EE  6E44               	movwf	(___flmul@a+2)^0,c
 11392  0002F0  0E41               	movlw	65
 11393  0002F2  6E45               	movwf	(___flmul@a+3)^0,c
 11394  0002F4  C0B0  F03E         	movff	efgtoa@u,___flmul@b
 11395  0002F8  C0B1  F03F         	movff	efgtoa@u+1,___flmul@b+1
 11396  0002FC  C0B2  F040         	movff	efgtoa@u+2,___flmul@b+2
 11397  000300  C0B3  F041         	movff	efgtoa@u+3,___flmul@b+3
 11398  000304  EC88  F015         	call	___flmul	;wreg free
 11399  000308  C03E  F071         	movff	?___flmul,___flge@ff2
 11400  00030C  C03F  F072         	movff	?___flmul+1,___flge@ff2+1
 11401  000310  C040  F073         	movff	?___flmul+2,___flge@ff2+2
 11402  000314  C041  F074         	movff	?___flmul+3,___flge@ff2+3
 11403  000318  ECC2  F028         	call	___flge	;wreg free
 11404  00031C  0100               	movlb	0	; () banked
 11405  00031E  B0D8               	btfsc	status,0,c
 11406  000320  EF94  F001         	goto	u9581
 11407  000324  EF96  F001         	goto	u9580
 11408  000328                     u9581:
 11409  000328  EF4D  F001         	goto	l9189
 11410  00032C                     u9580:
 11411  00032C  EFB6  F001         	goto	l9199
 11412  000330                     l9195:
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 11416  000330  C0B0  F021         	movff	efgtoa@u,___fldiv@b
 11417  000334  C0B1  F022         	movff	efgtoa@u+1,___fldiv@b+1
 11418  000338  C0B2  F023         	movff	efgtoa@u+2,___fldiv@b+2
 11419  00033C  C0B3  F024         	movff	efgtoa@u+3,___fldiv@b+3
 11420  000340  0E00               	movlw	0
 11421  000342  6E25               	movwf	___fldiv@a^0,c
 11422  000344  0E00               	movlw	0
 11423  000346  6E26               	movwf	(___fldiv@a+1)^0,c
 11424  000348  0E20               	movlw	32
 11425  00034A  6E27               	movwf	(___fldiv@a+2)^0,c
 11426  00034C  0E41               	movlw	65
 11427  00034E  6E28               	movwf	(___fldiv@a+3)^0,c
 11428  000350  EC85  F019         	call	___fldiv	;wreg free
 11429  000354  C021  F0B0         	movff	?___fldiv,efgtoa@u
 11430  000358  C022  F0B1         	movff	?___fldiv+1,efgtoa@u+1
 11431  00035C  C023  F0B2         	movff	?___fldiv+2,efgtoa@u+2
 11432  000360  C024  F0B3         	movff	?___fldiv+3,efgtoa@u+3
 11433  000364                     
 11434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 11435  000364  0100               	movlb	0	; () banked
 11436  000366  07AC               	decf	efgtoa@e& (0+255),f,b
 11437  000368  A0D8               	btfss	status,0,c
 11438  00036A  07AD               	decf	(efgtoa@e+1)& (0+255),f,b
 11439  00036C                     l9199:
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 11443  00036C  C0A8  F06D         	movff	efgtoa@g,___flge@ff1
 11444  000370  C0A9  F06E         	movff	efgtoa@g+1,___flge@ff1+1
 11445  000374  C0AA  F06F         	movff	efgtoa@g+2,___flge@ff1+2
 11446  000378  C0AB  F070         	movff	efgtoa@g+3,___flge@ff1+3
 11447  00037C  C0B0  F071         	movff	efgtoa@u,___flge@ff2
 11448  000380  C0B1  F072         	movff	efgtoa@u+1,___flge@ff2+1
 11449  000384  C0B2  F073         	movff	efgtoa@u+2,___flge@ff2+2
 11450  000388  C0B3  F074         	movff	efgtoa@u+3,___flge@ff2+3
 11451  00038C  ECC2  F028         	call	___flge	;wreg free
 11452  000390  0100               	movlb	0	; () banked
 11453  000392  A0D8               	btfss	status,0,c
 11454  000394  EFCE  F001         	goto	u9591
 11455  000398  EFD0  F001         	goto	u9590
 11456  00039C                     u9591:
 11457  00039C  EF98  F001         	goto	l9195
 11458  0003A0                     u9590:
 11459  0003A0                     l9201:
 11460                           
 11461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 11462  0003A0  C07B  F00C         	movff	efgtoa@c,tolower@c
 11463  0003A4  6A0D               	clrf	(tolower@c+1)^0,c
 11464  0003A6  EC0F  F030         	call	_tolower	;wreg free
 11465  0003AA  500C               	movf	?_tolower^0,w,c
 11466  0003AC  0100               	movlb	0	; () banked
 11467  0003AE  6F9D               	movwf	efgtoa@mode& (0+255),b
 11468  0003B0                     
 11469                           ; BSR set to: 0
 11470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 11471  0003B0  C09D  F09A         	movff	efgtoa@mode,efgtoa@nmode
 11472  0003B4                     
 11473                           ; BSR set to: 0
 11474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 11475  0003B4  0E67               	movlw	103
 11476  0003B6  199D               	xorwf	efgtoa@mode& (0+255),w,b
 11477  0003B8  A4D8               	btfss	status,2,c
 11478  0003BA  EFE1  F001         	goto	u9601
 11479  0003BE  EFE3  F001         	goto	u9600
 11480  0003C2                     u9601:
 11481  0003C2  EF0B  F002         	goto	l9215
 11482  0003C6                     u9600:
 11483  0003C6                     
 11484                           ; BSR set to: 0
 11485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 11486  0003C6  0101               	movlb	1	; () banked
 11487  0003C8  5130               	movf	_prec& (0+255),w,b
 11488  0003CA  1131               	iorwf	(_prec+1)& (0+255),w,b
 11489  0003CC  A4D8               	btfss	status,2,c
 11490  0003CE  EFEB  F001         	goto	u9611
 11491  0003D2  EFED  F001         	goto	u9610
 11492  0003D6                     u9611:
 11493  0003D6  EFF1  F001         	goto	l9211
 11494  0003DA                     u9610:
 11495  0003DA                     
 11496                           ; BSR set to: 1
 11497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 11498  0003DA  0E00               	movlw	0
 11499  0003DC  6F31               	movwf	(_prec+1)& (0+255),b
 11500  0003DE  0E01               	movlw	1
 11501  0003E0  6F30               	movwf	_prec& (0+255),b
 11502  0003E2                     l9211:
 11503                           
 11504                           ; BSR set to: 1
 11505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 11506  0003E2  BF31               	btfsc	(_prec+1)& (0+255),7,b
 11507  0003E4  EFFE  F001         	goto	u9620
 11508  0003E8  5131               	movf	(_prec+1)& (0+255),w,b
 11509  0003EA  E106               	bnz	u9621
 11510  0003EC  0530               	decf	_prec& (0+255),w,b
 11511  0003EE  B0D8               	btfsc	status,0,c
 11512  0003F0  EFFC  F001         	goto	u9621
 11513  0003F4  EFFE  F001         	goto	u9620
 11514  0003F8                     u9621:
 11515  0003F8  EF05  F002         	goto	l834
 11516  0003FC                     u9620:
 11517  0003FC                     l9213:
 11518                           
 11519                           ; BSR set to: 1
 11520  0003FC  0E00               	movlw	0
 11521  0003FE  0100               	movlb	0	; () banked
 11522  000400  6F99               	movwf	(efgtoa@p+1)& (0+255),b
 11523  000402  0E06               	movlw	6
 11524  000404  6F98               	movwf	efgtoa@p& (0+255),b
 11525  000406  EF15  F002         	goto	l9221
 11526  00040A                     l834:
 11527                           
 11528                           ; BSR set to: 1
 11529  00040A  C130  F098         	movff	_prec,efgtoa@p
 11530  00040E  C131  F099         	movff	_prec+1,efgtoa@p+1
 11531  000412  EF15  F002         	goto	l9221
 11532  000416                     l9215:
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 11536  000416  0101               	movlb	1	; () banked
 11537  000418  BF31               	btfsc	(_prec+1)& (0+255),7,b
 11538  00041A  EF11  F002         	goto	u9631
 11539  00041E  EF13  F002         	goto	u9630
 11540  000422                     u9631:
 11541  000422  EFFE  F001         	goto	l9213
 11542  000426                     u9630:
 11543  000426  EF05  F002         	goto	l834
 11544  00042A                     l9221:
 11545                           
 11546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 11547  00042A  0E67               	movlw	103
 11548  00042C  0100               	movlb	0	; () banked
 11549  00042E  199D               	xorwf	efgtoa@mode& (0+255),w,b
 11550  000430  A4D8               	btfss	status,2,c
 11551  000432  EF1D  F002         	goto	u9641
 11552  000436  EF1F  F002         	goto	u9640
 11553  00043A                     u9641:
 11554  00043A  EF4E  F002         	goto	l9231
 11555  00043E                     u9640:
 11556  00043E                     
 11557                           ; BSR set to: 0
 11558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 11559  00043E  AFAD               	btfss	(efgtoa@e+1)& (0+255),7,b
 11560  000440  EF2D  F002         	goto	u9650
 11561  000444  0EFC               	movlw	252
 11562  000446  5DAC               	subwf	efgtoa@e& (0+255),w,b
 11563  000448  0EFF               	movlw	255
 11564  00044A  59AD               	subwfb	(efgtoa@e+1)& (0+255),w,b
 11565  00044C  A0D8               	btfss	status,0,c
 11566  00044E  EF2B  F002         	goto	u9651
 11567  000452  EF2D  F002         	goto	u9650
 11568  000456                     u9651:
 11569  000456  EF4C  F002         	goto	l9229
 11570  00045A                     u9650:
 11571  00045A                     
 11572                           ; BSR set to: 0
 11573  00045A  0EFF               	movlw	255
 11574  00045C  6E50               	movwf	??_efgtoa^0,c
 11575  00045E  0EFF               	movlw	255
 11576  000460  6E51               	movwf	(??_efgtoa+1)^0,c
 11577  000462  C098  F052         	movff	efgtoa@p,??_efgtoa+2
 11578  000466  C099  F053         	movff	efgtoa@p+1,??_efgtoa+3
 11579  00046A  5050               	movf	??_efgtoa^0,w,c
 11580  00046C  2652               	addwf	(??_efgtoa+2)^0,f,c
 11581  00046E  5051               	movf	(??_efgtoa+1)^0,w,c
 11582  000470  2253               	addwfc	(??_efgtoa+3)^0,f,c
 11583  000472  51AC               	movf	efgtoa@e& (0+255),w,b
 11584  000474  5C52               	subwf	(??_efgtoa+2)^0,w,c
 11585  000476  5053               	movf	(??_efgtoa+3)^0,w,c
 11586  000478  0A80               	xorlw	128
 11587  00047A  6E54               	movwf	(??_efgtoa+4)^0,c
 11588  00047C  51AD               	movf	(efgtoa@e+1)& (0+255),w,b
 11589  00047E  0A80               	xorlw	128
 11590  000480  5854               	subwfb	(??_efgtoa+4)^0,w,c
 11591  000482  A0D8               	btfss	status,0,c
 11592  000484  EF46  F002         	goto	u9661
 11593  000488  EF48  F002         	goto	u9660
 11594  00048C                     u9661:
 11595  00048C  EF4C  F002         	goto	l9229
 11596  000490                     u9660:
 11597  000490                     
 11598                           ; BSR set to: 0
 11599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 11600  000490  0E66               	movlw	102
 11601  000492  6F9A               	movwf	efgtoa@nmode& (0+255),b
 11602                           
 11603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
 11604  000494  EF4E  F002         	goto	l9231
 11605  000498                     l9229:
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 11609  000498  0E65               	movlw	101
 11610  00049A  6F9A               	movwf	efgtoa@nmode& (0+255),b
 11611  00049C                     l9231:
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 11615  00049C  C098  F090         	movff	efgtoa@p,efgtoa@m
 11616  0004A0  C099  F091         	movff	efgtoa@p+1,efgtoa@m+1
 11617  0004A4                     
 11618                           ; BSR set to: 0
 11619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 11620  0004A4  0E67               	movlw	103
 11621  0004A6  199D               	xorwf	efgtoa@mode& (0+255),w,b
 11622  0004A8  A4D8               	btfss	status,2,c
 11623  0004AA  EF59  F002         	goto	u9671
 11624  0004AE  EF5B  F002         	goto	u9670
 11625  0004B2                     u9671:
 11626  0004B2  EF6B  F002         	goto	l9239
 11627  0004B6                     u9670:
 11628  0004B6                     
 11629                           ; BSR set to: 0
 11630  0004B6  0E66               	movlw	102
 11631  0004B8  199A               	xorwf	efgtoa@nmode& (0+255),w,b
 11632  0004BA  A4D8               	btfss	status,2,c
 11633  0004BC  EF62  F002         	goto	u9681
 11634  0004C0  EF64  F002         	goto	u9680
 11635  0004C4                     u9681:
 11636  0004C4  EF6D  F002         	goto	l9241
 11637  0004C8                     u9680:
 11638  0004C8                     
 11639                           ; BSR set to: 0
 11640  0004C8  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
 11641  0004CA  EF6B  F002         	goto	u9690
 11642  0004CE  EF69  F002         	goto	u9691
 11643  0004D2                     u9691:
 11644  0004D2  EF6D  F002         	goto	l9241
 11645  0004D6                     u9690:
 11646  0004D6                     l9239:
 11647                           
 11648                           ; BSR set to: 0
 11649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 11650  0004D6  4B90               	infsnz	efgtoa@m& (0+255),f,b
 11651  0004D8  2B91               	incf	(efgtoa@m+1)& (0+255),f,b
 11652  0004DA                     l9241:
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 11656  0004DA  0E66               	movlw	102
 11657  0004DC  199A               	xorwf	efgtoa@nmode& (0+255),w,b
 11658  0004DE  A4D8               	btfss	status,2,c
 11659  0004E0  EF74  F002         	goto	u9701
 11660  0004E4  EF76  F002         	goto	u9700
 11661  0004E8                     u9701:
 11662  0004E8  EF96  F002         	goto	l9251
 11663  0004EC                     u9700:
 11664  0004EC                     
 11665                           ; BSR set to: 0
 11666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 11667  0004EC  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
 11668  0004EE  EF7D  F002         	goto	u9710
 11669  0004F2  EF7B  F002         	goto	u9711
 11670  0004F6                     u9711:
 11671  0004F6  EF89  F002         	goto	l9247
 11672  0004FA                     u9710:
 11673  0004FA                     
 11674                           ; BSR set to: 0
 11675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 11676  0004FA  0E00               	movlw	0
 11677  0004FC  6FB0               	movwf	efgtoa@u& (0+255),b
 11678  0004FE  0E00               	movlw	0
 11679  000500  6FB1               	movwf	(efgtoa@u+1)& (0+255),b
 11680  000502  0E80               	movlw	128
 11681  000504  6FB2               	movwf	(efgtoa@u+2)& (0+255),b
 11682  000506  0E3F               	movlw	63
 11683  000508  6FB3               	movwf	(efgtoa@u+3)& (0+255),b
 11684                           
 11685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 11686  00050A  0E00               	movlw	0
 11687  00050C  6FAD               	movwf	(efgtoa@e+1)& (0+255),b
 11688  00050E  0E00               	movlw	0
 11689  000510  6FAC               	movwf	efgtoa@e& (0+255),b
 11690  000512                     l9247:
 11691                           
 11692                           ; BSR set to: 0
 11693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 11694  000512  0E67               	movlw	103
 11695  000514  199D               	xorwf	efgtoa@mode& (0+255),w,b
 11696  000516  B4D8               	btfsc	status,2,c
 11697  000518  EF90  F002         	goto	u9721
 11698  00051C  EF92  F002         	goto	u9720
 11699  000520                     u9721:
 11700  000520  EF96  F002         	goto	l9251
 11701  000524                     u9720:
 11702  000524                     
 11703                           ; BSR set to: 0
 11704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 11705  000524  51AC               	movf	efgtoa@e& (0+255),w,b
 11706  000526  2790               	addwf	efgtoa@m& (0+255),f,b
 11707  000528  51AD               	movf	(efgtoa@e+1)& (0+255),w,b
 11708  00052A  2391               	addwfc	(efgtoa@m+1)& (0+255),f,b
 11709  00052C                     l9251:
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 11713  00052C  0E00               	movlw	0
 11714  00052E  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
 11715  000530  0E00               	movlw	0
 11716  000532  6FA6               	movwf	efgtoa@i& (0+255),b
 11717  000534                     
 11718                           ; BSR set to: 0
 11719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 11720  000534  C0A8  F09E         	movff	efgtoa@g,efgtoa@h
 11721  000538  C0A9  F09F         	movff	efgtoa@g+1,efgtoa@h+1
 11722  00053C  C0AA  F0A0         	movff	efgtoa@g+2,efgtoa@h+2
 11723  000540  C0AB  F0A1         	movff	efgtoa@g+3,efgtoa@h+3
 11724  000544                     
 11725                           ; BSR set to: 0
 11726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 11727  000544  C0B0  F07C         	movff	efgtoa@u,efgtoa@ou
 11728  000548  C0B1  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
 11729  00054C  C0B2  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
 11730  000550  C0B3  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
 11731                           
 11732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 11733  000554  EF27  F003         	goto	l9265
 11734  000558                     l9257:
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 11738  000558  C09E  F021         	movff	efgtoa@h,___fldiv@b
 11739  00055C  C09F  F022         	movff	efgtoa@h+1,___fldiv@b+1
 11740  000560  C0A0  F023         	movff	efgtoa@h+2,___fldiv@b+2
 11741  000564  C0A1  F024         	movff	efgtoa@h+3,___fldiv@b+3
 11742  000568  C0B0  F025         	movff	efgtoa@u,___fldiv@a
 11743  00056C  C0B1  F026         	movff	efgtoa@u+1,___fldiv@a+1
 11744  000570  C0B2  F027         	movff	efgtoa@u+2,___fldiv@a+2
 11745  000574  C0B3  F028         	movff	efgtoa@u+3,___fldiv@a+3
 11746  000578  EC85  F019         	call	___fldiv	;wreg free
 11747  00057C  C021  F03A         	movff	?___fldiv,floorf@x
 11748  000580  C022  F03B         	movff	?___fldiv+1,floorf@x+1
 11749  000584  C023  F03C         	movff	?___fldiv+2,floorf@x+2
 11750  000588  C024  F03D         	movff	?___fldiv+3,floorf@x+3
 11751  00058C  EC7F  F020         	call	_floorf	;wreg free
 11752  000590  C03A  F0A2         	movff	?_floorf,efgtoa@l
 11753  000594  C03B  F0A3         	movff	?_floorf+1,efgtoa@l+1
 11754  000598  C03C  F0A4         	movff	?_floorf+2,efgtoa@l+2
 11755  00059C  C03D  F0A5         	movff	?_floorf+3,efgtoa@l+3
 11756                           
 11757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 11758  0005A0  C0A2  F06D         	movff	efgtoa@l,___fltol@f1
 11759  0005A4  C0A3  F06E         	movff	efgtoa@l+1,___fltol@f1+1
 11760  0005A8  C0A4  F06F         	movff	efgtoa@l+2,___fltol@f1+2
 11761  0005AC  C0A5  F070         	movff	efgtoa@l+3,___fltol@f1+3
 11762  0005B0  EC3E  F028         	call	___fltol	;wreg free
 11763  0005B4  C06D  F094         	movff	?___fltol,efgtoa@d
 11764  0005B8  C06E  F095         	movff	?___fltol+1,efgtoa@d+1
 11765  0005BC                     
 11766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 11767  0005BC  C09E  F019         	movff	efgtoa@h,___flsub@b
 11768  0005C0  C09F  F01A         	movff	efgtoa@h+1,___flsub@b+1
 11769  0005C4  C0A0  F01B         	movff	efgtoa@h+2,___flsub@b+2
 11770  0005C8  C0A1  F01C         	movff	efgtoa@h+3,___flsub@b+3
 11771  0005CC  C0B0  F042         	movff	efgtoa@u,___flmul@a
 11772  0005D0  C0B1  F043         	movff	efgtoa@u+1,___flmul@a+1
 11773  0005D4  C0B2  F044         	movff	efgtoa@u+2,___flmul@a+2
 11774  0005D8  C0B3  F045         	movff	efgtoa@u+3,___flmul@a+3
 11775  0005DC  C0A2  F03E         	movff	efgtoa@l,___flmul@b
 11776  0005E0  C0A3  F03F         	movff	efgtoa@l+1,___flmul@b+1
 11777  0005E4  C0A4  F040         	movff	efgtoa@l+2,___flmul@b+2
 11778  0005E8  C0A5  F041         	movff	efgtoa@l+3,___flmul@b+3
 11779  0005EC  EC88  F015         	call	___flmul	;wreg free
 11780  0005F0  C03E  F01D         	movff	?___flmul,___flsub@a
 11781  0005F4  C03F  F01E         	movff	?___flmul+1,___flsub@a+1
 11782  0005F8  C040  F01F         	movff	?___flmul+2,___flsub@a+2
 11783  0005FC  C041  F020         	movff	?___flmul+3,___flsub@a+3
 11784  000600  EC3D  F032         	call	___flsub	;wreg free
 11785  000604  C019  F09E         	movff	?___flsub,efgtoa@h
 11786  000608  C01A  F09F         	movff	?___flsub+1,efgtoa@h+1
 11787  00060C  C01B  F0A0         	movff	?___flsub+2,efgtoa@h+2
 11788  000610  C01C  F0A1         	movff	?___flsub+3,efgtoa@h+3
 11789  000614                     
 11790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 11791  000614  C0B0  F021         	movff	efgtoa@u,___fldiv@b
 11792  000618  C0B1  F022         	movff	efgtoa@u+1,___fldiv@b+1
 11793  00061C  C0B2  F023         	movff	efgtoa@u+2,___fldiv@b+2
 11794  000620  C0B3  F024         	movff	efgtoa@u+3,___fldiv@b+3
 11795  000624  0E00               	movlw	0
 11796  000626  6E25               	movwf	___fldiv@a^0,c
 11797  000628  0E00               	movlw	0
 11798  00062A  6E26               	movwf	(___fldiv@a+1)^0,c
 11799  00062C  0E20               	movlw	32
 11800  00062E  6E27               	movwf	(___fldiv@a+2)^0,c
 11801  000630  0E41               	movlw	65
 11802  000632  6E28               	movwf	(___fldiv@a+3)^0,c
 11803  000634  EC85  F019         	call	___fldiv	;wreg free
 11804  000638  C021  F0B0         	movff	?___fldiv,efgtoa@u
 11805  00063C  C022  F0B1         	movff	?___fldiv+1,efgtoa@u+1
 11806  000640  C023  F0B2         	movff	?___fldiv+2,efgtoa@u+2
 11807  000644  C024  F0B3         	movff	?___fldiv+3,efgtoa@u+3
 11808  000648                     
 11809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 11810  000648  0100               	movlb	0	; () banked
 11811  00064A  4BA6               	infsnz	efgtoa@i& (0+255),f,b
 11812  00064C  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
 11813  00064E                     l9265:
 11814                           
 11815                           ; BSR set to: 0
 11816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 11817  00064E  5190               	movf	efgtoa@m& (0+255),w,b
 11818  000650  5DA6               	subwf	efgtoa@i& (0+255),w,b
 11819  000652  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
 11820  000654  0A80               	xorlw	128
 11821  000656  6E50               	movwf	??_efgtoa^0,c
 11822  000658  5191               	movf	(efgtoa@m+1)& (0+255),w,b
 11823  00065A  0A80               	xorlw	128
 11824  00065C  5850               	subwfb	??_efgtoa^0,w,c
 11825  00065E  A0D8               	btfss	status,0,c
 11826  000660  EF34  F003         	goto	u9731
 11827  000664  EF36  F003         	goto	u9730
 11828  000668                     u9731:
 11829  000668  EFAC  F002         	goto	l9257
 11830  00066C                     u9730:
 11831  00066C                     
 11832                           ; BSR set to: 0
 11833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 11834  00066C  C0B0  F03E         	movff	efgtoa@u,___flmul@b
 11835  000670  C0B1  F03F         	movff	efgtoa@u+1,___flmul@b+1
 11836  000674  C0B2  F040         	movff	efgtoa@u+2,___flmul@b+2
 11837  000678  C0B3  F041         	movff	efgtoa@u+3,___flmul@b+3
 11838  00067C  0E00               	movlw	0
 11839  00067E  6E42               	movwf	___flmul@a^0,c
 11840  000680  0E00               	movlw	0
 11841  000682  6E43               	movwf	(___flmul@a+1)^0,c
 11842  000684  0EA0               	movlw	160
 11843  000686  6E44               	movwf	(___flmul@a+2)^0,c
 11844  000688  0E40               	movlw	64
 11845  00068A  6E45               	movwf	(___flmul@a+3)^0,c
 11846  00068C  EC88  F015         	call	___flmul	;wreg free
 11847  000690  C03E  F0A2         	movff	?___flmul,efgtoa@l
 11848  000694  C03F  F0A3         	movff	?___flmul+1,efgtoa@l+1
 11849  000698  C040  F0A4         	movff	?___flmul+2,efgtoa@l+2
 11850  00069C  C041  F0A5         	movff	?___flmul+3,efgtoa@l+3
 11851  0006A0                     
 11852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 11853  0006A0  C09E  F06D         	movff	efgtoa@h,___flge@ff1
 11854  0006A4  C09F  F06E         	movff	efgtoa@h+1,___flge@ff1+1
 11855  0006A8  C0A0  F06F         	movff	efgtoa@h+2,___flge@ff1+2
 11856  0006AC  C0A1  F070         	movff	efgtoa@h+3,___flge@ff1+3
 11857  0006B0  C0A2  F071         	movff	efgtoa@l,___flge@ff2
 11858  0006B4  C0A3  F072         	movff	efgtoa@l+1,___flge@ff2+1
 11859  0006B8  C0A4  F073         	movff	efgtoa@l+2,___flge@ff2+2
 11860  0006BC  C0A5  F074         	movff	efgtoa@l+3,___flge@ff2+3
 11861  0006C0  ECC2  F028         	call	___flge	;wreg free
 11862  0006C4  0100               	movlb	0	; () banked
 11863  0006C6  B0D8               	btfsc	status,0,c
 11864  0006C8  EF68  F003         	goto	u9741
 11865  0006CC  EF6A  F003         	goto	u9740
 11866  0006D0                     u9741:
 11867  0006D0  EF74  F003         	goto	l9273
 11868  0006D4                     u9740:
 11869  0006D4                     
 11870                           ; BSR set to: 0
 11871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 11872  0006D4  0E00               	movlw	0
 11873  0006D6  6FA2               	movwf	efgtoa@l& (0+255),b
 11874  0006D8  0E00               	movlw	0
 11875  0006DA  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
 11876  0006DC  0E00               	movlw	0
 11877  0006DE  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
 11878  0006E0  0E00               	movlw	0
 11879  0006E2  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
 11880                           
 11881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 11882  0006E4  EF9D  F003         	goto	l9279
 11883  0006E8                     l9273:
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 11887  0006E8  C09E  F006         	movff	efgtoa@h,___fleq@ff1
 11888  0006EC  C09F  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 11889  0006F0  C0A0  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 11890  0006F4  C0A1  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 11891  0006F8  C0A2  F00A         	movff	efgtoa@l,___fleq@ff2
 11892  0006FC  C0A3  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 11893  000700  C0A4  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 11894  000704  C0A5  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 11895  000708  ECB8  F02D         	call	___fleq	;wreg free
 11896  00070C  A0D8               	btfss	status,0,c
 11897  00070E  EF8B  F003         	goto	u9751
 11898  000712  EF8D  F003         	goto	u9750
 11899  000716                     u9751:
 11900  000716  EF9D  F003         	goto	l9279
 11901  00071A                     u9750:
 11902  00071A  0100               	movlb	0	; () banked
 11903  00071C  B194               	btfsc	efgtoa@d& (0+255),0,b
 11904  00071E  EF93  F003         	goto	u9761
 11905  000722  EF95  F003         	goto	u9760
 11906  000726                     u9761:
 11907  000726  EF9D  F003         	goto	l9279
 11908  00072A                     u9760:
 11909  00072A                     
 11910                           ; BSR set to: 0
 11911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 11912  00072A  0E00               	movlw	0
 11913  00072C  6FA2               	movwf	efgtoa@l& (0+255),b
 11914  00072E  0E00               	movlw	0
 11915  000730  6FA3               	movwf	(efgtoa@l+1)& (0+255),b
 11916  000732  0E00               	movlw	0
 11917  000734  6FA4               	movwf	(efgtoa@l+2)& (0+255),b
 11918  000736  0E00               	movlw	0
 11919  000738  6FA5               	movwf	(efgtoa@l+3)& (0+255),b
 11920  00073A                     l9279:
 11921                           
 11922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 11923  00073A  C0A8  F006         	movff	efgtoa@g,___fladd@b
 11924  00073E  C0A9  F007         	movff	efgtoa@g+1,___fladd@b+1
 11925  000742  C0AA  F008         	movff	efgtoa@g+2,___fladd@b+2
 11926  000746  C0AB  F009         	movff	efgtoa@g+3,___fladd@b+3
 11927  00074A  C0A2  F00A         	movff	efgtoa@l,___fladd@a
 11928  00074E  C0A3  F00B         	movff	efgtoa@l+1,___fladd@a+1
 11929  000752  C0A4  F00C         	movff	efgtoa@l+2,___fladd@a+2
 11930  000756  C0A5  F00D         	movff	efgtoa@l+3,___fladd@a+3
 11931  00075A  EC28  F013         	call	___fladd	;wreg free
 11932  00075E  C006  F09E         	movff	?___fladd,efgtoa@h
 11933  000762  C007  F09F         	movff	?___fladd+1,efgtoa@h+1
 11934  000766  C008  F0A0         	movff	?___fladd+2,efgtoa@h+2
 11935  00076A  C009  F0A1         	movff	?___fladd+3,efgtoa@h+3
 11936  00076E                     
 11937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 11938  00076E  C07C  F0B0         	movff	efgtoa@ou,efgtoa@u
 11939  000772  C07D  F0B1         	movff	efgtoa@ou+1,efgtoa@u+1
 11940  000776  C07E  F0B2         	movff	efgtoa@ou+2,efgtoa@u+2
 11941  00077A  C07F  F0B3         	movff	efgtoa@ou+3,efgtoa@u+3
 11942  00077E                     
 11943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 11944  00077E  0E65               	movlw	101
 11945  000780  0100               	movlb	0	; () banked
 11946  000782  199A               	xorwf	efgtoa@nmode& (0+255),w,b
 11947  000784  B4D8               	btfsc	status,2,c
 11948  000786  EFC7  F003         	goto	u9771
 11949  00078A  EFC9  F003         	goto	u9770
 11950  00078E                     u9771:
 11951  00078E  EFCF  F003         	goto	l9287
 11952  000792                     u9770:
 11953  000792                     
 11954                           ; BSR set to: 0
 11955  000792  C0AC  F092         	movff	efgtoa@e,efgtoa@ne
 11956  000796  C0AD  F093         	movff	efgtoa@e+1,efgtoa@ne+1
 11957  00079A  EFD3  F003         	goto	l860
 11958  00079E                     l9287:
 11959                           
 11960                           ; BSR set to: 0
 11961  00079E  0E00               	movlw	0
 11962  0007A0  6F93               	movwf	(efgtoa@ne+1)& (0+255),b
 11963  0007A2  0E00               	movlw	0
 11964  0007A4  6F92               	movwf	efgtoa@ne& (0+255),b
 11965  0007A6                     l860:
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 11969  0007A6  0E00               	movlw	0
 11970  0007A8  6F8F               	movwf	(efgtoa@pp+1)& (0+255),b
 11971  0007AA  0E00               	movlw	0
 11972  0007AC  6F8E               	movwf	efgtoa@pp& (0+255),b
 11973                           
 11974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 11975  0007AE  0E00               	movlw	0
 11976  0007B0  6F8D               	movwf	(efgtoa@t+1)& (0+255),b
 11977  0007B2  0E00               	movlw	0
 11978  0007B4  6F8C               	movwf	efgtoa@t& (0+255),b
 11979                           
 11980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 11981  0007B6  0E00               	movlw	0
 11982  0007B8  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
 11983  0007BA  0E00               	movlw	0
 11984  0007BC  6FA6               	movwf	efgtoa@i& (0+255),b
 11985                           
 11986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11987  0007BE  EFD0  F004         	goto	l9337
 11988  0007C2                     l9289:
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 11992  0007C2  C09E  F021         	movff	efgtoa@h,___fldiv@b
 11993  0007C6  C09F  F022         	movff	efgtoa@h+1,___fldiv@b+1
 11994  0007CA  C0A0  F023         	movff	efgtoa@h+2,___fldiv@b+2
 11995  0007CE  C0A1  F024         	movff	efgtoa@h+3,___fldiv@b+3
 11996  0007D2  C0B0  F025         	movff	efgtoa@u,___fldiv@a
 11997  0007D6  C0B1  F026         	movff	efgtoa@u+1,___fldiv@a+1
 11998  0007DA  C0B2  F027         	movff	efgtoa@u+2,___fldiv@a+2
 11999  0007DE  C0B3  F028         	movff	efgtoa@u+3,___fldiv@a+3
 12000  0007E2  EC85  F019         	call	___fldiv	;wreg free
 12001  0007E6  C021  F03A         	movff	?___fldiv,floorf@x
 12002  0007EA  C022  F03B         	movff	?___fldiv+1,floorf@x+1
 12003  0007EE  C023  F03C         	movff	?___fldiv+2,floorf@x+2
 12004  0007F2  C024  F03D         	movff	?___fldiv+3,floorf@x+3
 12005  0007F6  EC7F  F020         	call	_floorf	;wreg free
 12006  0007FA  C03A  F0A2         	movff	?_floorf,efgtoa@l
 12007  0007FE  C03B  F0A3         	movff	?_floorf+1,efgtoa@l+1
 12008  000802  C03C  F0A4         	movff	?_floorf+2,efgtoa@l+2
 12009  000806  C03D  F0A5         	movff	?_floorf+3,efgtoa@l+3
 12010                           
 12011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 12012  00080A  C0A2  F06D         	movff	efgtoa@l,___fltol@f1
 12013  00080E  C0A3  F06E         	movff	efgtoa@l+1,___fltol@f1+1
 12014  000812  C0A4  F06F         	movff	efgtoa@l+2,___fltol@f1+2
 12015  000816  C0A5  F070         	movff	efgtoa@l+3,___fltol@f1+3
 12016  00081A  EC3E  F028         	call	___fltol	;wreg free
 12017  00081E  C06D  F094         	movff	?___fltol,efgtoa@d
 12018  000822  C06E  F095         	movff	?___fltol+1,efgtoa@d+1
 12019  000826                     
 12020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12021  000826  0101               	movlb	1	; () banked
 12022  000828  B932               	btfsc	_flags& (0+255),4,b
 12023  00082A  EF19  F004         	goto	u9781
 12024  00082E  EF1B  F004         	goto	u9780
 12025  000832                     u9781:
 12026  000832  EF39  F004         	goto	l9301
 12027  000836                     u9780:
 12028  000836                     
 12029                           ; BSR set to: 1
 12030  000836  0100               	movlb	0	; () banked
 12031  000838  5194               	movf	efgtoa@d& (0+255),w,b
 12032  00083A  1195               	iorwf	(efgtoa@d+1)& (0+255),w,b
 12033  00083C  A4D8               	btfss	status,2,c
 12034  00083E  EF23  F004         	goto	u9791
 12035  000842  EF25  F004         	goto	u9790
 12036  000846                     u9791:
 12037  000846  EF39  F004         	goto	l9301
 12038  00084A                     u9790:
 12039  00084A                     
 12040                           ; BSR set to: 0
 12041  00084A  0E67               	movlw	103
 12042  00084C  199D               	xorwf	efgtoa@mode& (0+255),w,b
 12043  00084E  A4D8               	btfss	status,2,c
 12044  000850  EF2C  F004         	goto	u9801
 12045  000854  EF2E  F004         	goto	u9800
 12046  000858                     u9801:
 12047  000858  EF39  F004         	goto	l9301
 12048  00085C                     u9800:
 12049  00085C                     
 12050                           ; BSR set to: 0
 12051  00085C  BF93               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12052  00085E  EF35  F004         	goto	u9810
 12053  000862  EF33  F004         	goto	u9811
 12054  000866                     u9811:
 12055  000866  EF39  F004         	goto	l9301
 12056  00086A                     u9810:
 12057  00086A                     
 12058                           ; BSR set to: 0
 12059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 12060  00086A  4B8C               	infsnz	efgtoa@t& (0+255),f,b
 12061  00086C  2B8D               	incf	(efgtoa@t+1)& (0+255),f,b
 12062                           
 12063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 12064  00086E  EF84  F004         	goto	l9329
 12065  000872                     l9301:
 12066                           
 12067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 12068  000872  0100               	movlb	0	; () banked
 12069  000874  518E               	movf	efgtoa@pp& (0+255),w,b
 12070  000876  118F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 12071  000878  A4D8               	btfss	status,2,c
 12072  00087A  EF41  F004         	goto	u9821
 12073  00087E  EF43  F004         	goto	u9820
 12074  000882                     u9821:
 12075  000882  EF6D  F004         	goto	l9321
 12076  000886                     u9820:
 12077  000886                     
 12078                           ; BSR set to: 0
 12079  000886  BF93               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12080  000888  EF4A  F004         	goto	u9830
 12081  00088C  EF48  F004         	goto	u9831
 12082  000890                     u9831:
 12083  000890  EF6D  F004         	goto	l9321
 12084  000894                     u9830:
 12085  000894                     
 12086                           ; BSR set to: 0
 12087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 12088  000894  0E4A               	movlw	low _dbuf
 12089  000896  25AE               	addwf	efgtoa@n& (0+255),w,b
 12090  000898  6ED9               	movwf	fsr2l,c
 12091  00089A  0E01               	movlw	high _dbuf
 12092  00089C  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12093  00089E  6EDA               	movwf	fsr2h,c
 12094  0008A0  0E2E               	movlw	46
 12095  0008A2  6EDF               	movwf	indf2,c
 12096  0008A4                     
 12097                           ; BSR set to: 0
 12098  0008A4  4BAE               	infsnz	efgtoa@n& (0+255),f,b
 12099  0008A6  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
 12100  0008A8                     
 12101                           ; BSR set to: 0
 12102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 12103  0008A8  079B               	decf	efgtoa@w& (0+255),f,b
 12104  0008AA  A0D8               	btfss	status,0,c
 12105  0008AC  079C               	decf	(efgtoa@w+1)& (0+255),f,b
 12106  0008AE                     
 12107                           ; BSR set to: 0
 12108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 12109  0008AE  0E00               	movlw	0
 12110  0008B0  6F8F               	movwf	(efgtoa@pp+1)& (0+255),b
 12111  0008B2  0E01               	movlw	1
 12112  0008B4  6F8E               	movwf	efgtoa@pp& (0+255),b
 12113  0008B6  EF6D  F004         	goto	l9321
 12114  0008BA                     l9313:
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 12118  0008BA  0E4A               	movlw	low _dbuf
 12119  0008BC  25AE               	addwf	efgtoa@n& (0+255),w,b
 12120  0008BE  6ED9               	movwf	fsr2l,c
 12121  0008C0  0E01               	movlw	high _dbuf
 12122  0008C2  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12123  0008C4  6EDA               	movwf	fsr2h,c
 12124  0008C6  0E30               	movlw	48
 12125  0008C8  6EDF               	movwf	indf2,c
 12126  0008CA                     
 12127                           ; BSR set to: 0
 12128  0008CA  4BAE               	infsnz	efgtoa@n& (0+255),f,b
 12129  0008CC  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
 12130  0008CE                     
 12131                           ; BSR set to: 0
 12132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 12133  0008CE  079B               	decf	efgtoa@w& (0+255),f,b
 12134  0008D0  A0D8               	btfss	status,0,c
 12135  0008D2  079C               	decf	(efgtoa@w+1)& (0+255),f,b
 12136  0008D4                     
 12137                           ; BSR set to: 0
 12138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 12139  0008D4  078C               	decf	efgtoa@t& (0+255),f,b
 12140  0008D6  A0D8               	btfss	status,0,c
 12141  0008D8  078D               	decf	(efgtoa@t+1)& (0+255),f,b
 12142  0008DA                     l9321:
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 12146  0008DA  518C               	movf	efgtoa@t& (0+255),w,b
 12147  0008DC  118D               	iorwf	(efgtoa@t+1)& (0+255),w,b
 12148  0008DE  A4D8               	btfss	status,2,c
 12149  0008E0  EF74  F004         	goto	u9841
 12150  0008E4  EF76  F004         	goto	u9840
 12151  0008E8                     u9841:
 12152  0008E8  EF5D  F004         	goto	l9313
 12153  0008EC                     u9840:
 12154  0008EC                     
 12155                           ; BSR set to: 0
 12156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 12157  0008EC  0E4A               	movlw	low _dbuf
 12158  0008EE  25AE               	addwf	efgtoa@n& (0+255),w,b
 12159  0008F0  6ED9               	movwf	fsr2l,c
 12160  0008F2  0E01               	movlw	high _dbuf
 12161  0008F4  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12162  0008F6  6EDA               	movwf	fsr2h,c
 12163  0008F8  5194               	movf	efgtoa@d& (0+255),w,b
 12164  0008FA  0F30               	addlw	48
 12165  0008FC  6EDF               	movwf	indf2,c
 12166  0008FE                     
 12167                           ; BSR set to: 0
 12168  0008FE  4BAE               	infsnz	efgtoa@n& (0+255),f,b
 12169  000900  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
 12170  000902                     
 12171                           ; BSR set to: 0
 12172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 12173  000902  079B               	decf	efgtoa@w& (0+255),f,b
 12174  000904  A0D8               	btfss	status,0,c
 12175  000906  079C               	decf	(efgtoa@w+1)& (0+255),f,b
 12176  000908                     l9329:
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 12180  000908  C09E  F019         	movff	efgtoa@h,___flsub@b
 12181  00090C  C09F  F01A         	movff	efgtoa@h+1,___flsub@b+1
 12182  000910  C0A0  F01B         	movff	efgtoa@h+2,___flsub@b+2
 12183  000914  C0A1  F01C         	movff	efgtoa@h+3,___flsub@b+3
 12184  000918  C0B0  F042         	movff	efgtoa@u,___flmul@a
 12185  00091C  C0B1  F043         	movff	efgtoa@u+1,___flmul@a+1
 12186  000920  C0B2  F044         	movff	efgtoa@u+2,___flmul@a+2
 12187  000924  C0B3  F045         	movff	efgtoa@u+3,___flmul@a+3
 12188  000928  C0A2  F03E         	movff	efgtoa@l,___flmul@b
 12189  00092C  C0A3  F03F         	movff	efgtoa@l+1,___flmul@b+1
 12190  000930  C0A4  F040         	movff	efgtoa@l+2,___flmul@b+2
 12191  000934  C0A5  F041         	movff	efgtoa@l+3,___flmul@b+3
 12192  000938  EC88  F015         	call	___flmul	;wreg free
 12193  00093C  C03E  F01D         	movff	?___flmul,___flsub@a
 12194  000940  C03F  F01E         	movff	?___flmul+1,___flsub@a+1
 12195  000944  C040  F01F         	movff	?___flmul+2,___flsub@a+2
 12196  000948  C041  F020         	movff	?___flmul+3,___flsub@a+3
 12197  00094C  EC3D  F032         	call	___flsub	;wreg free
 12198  000950  C019  F09E         	movff	?___flsub,efgtoa@h
 12199  000954  C01A  F09F         	movff	?___flsub+1,efgtoa@h+1
 12200  000958  C01B  F0A0         	movff	?___flsub+2,efgtoa@h+2
 12201  00095C  C01C  F0A1         	movff	?___flsub+3,efgtoa@h+3
 12202  000960                     
 12203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 12204  000960  C0B0  F021         	movff	efgtoa@u,___fldiv@b
 12205  000964  C0B1  F022         	movff	efgtoa@u+1,___fldiv@b+1
 12206  000968  C0B2  F023         	movff	efgtoa@u+2,___fldiv@b+2
 12207  00096C  C0B3  F024         	movff	efgtoa@u+3,___fldiv@b+3
 12208  000970  0E00               	movlw	0
 12209  000972  6E25               	movwf	___fldiv@a^0,c
 12210  000974  0E00               	movlw	0
 12211  000976  6E26               	movwf	(___fldiv@a+1)^0,c
 12212  000978  0E20               	movlw	32
 12213  00097A  6E27               	movwf	(___fldiv@a+2)^0,c
 12214  00097C  0E41               	movlw	65
 12215  00097E  6E28               	movwf	(___fldiv@a+3)^0,c
 12216  000980  EC85  F019         	call	___fldiv	;wreg free
 12217  000984  C021  F0B0         	movff	?___fldiv,efgtoa@u
 12218  000988  C022  F0B1         	movff	?___fldiv+1,efgtoa@u+1
 12219  00098C  C023  F0B2         	movff	?___fldiv+2,efgtoa@u+2
 12220  000990  C024  F0B3         	movff	?___fldiv+3,efgtoa@u+3
 12221  000994                     
 12222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 12223  000994  0100               	movlb	0	; () banked
 12224  000996  0792               	decf	efgtoa@ne& (0+255),f,b
 12225  000998  A0D8               	btfss	status,0,c
 12226  00099A  0793               	decf	(efgtoa@ne+1)& (0+255),f,b
 12227  00099C                     
 12228                           ; BSR set to: 0
 12229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 12230  00099C  4BA6               	infsnz	efgtoa@i& (0+255),f,b
 12231  00099E  2BA7               	incf	(efgtoa@i+1)& (0+255),f,b
 12232  0009A0                     l9337:
 12233                           
 12234                           ; BSR set to: 0
 12235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 12236  0009A0  5190               	movf	efgtoa@m& (0+255),w,b
 12237  0009A2  5DA6               	subwf	efgtoa@i& (0+255),w,b
 12238  0009A4  51A7               	movf	(efgtoa@i+1)& (0+255),w,b
 12239  0009A6  0A80               	xorlw	128
 12240  0009A8  6E50               	movwf	??_efgtoa^0,c
 12241  0009AA  5191               	movf	(efgtoa@m+1)& (0+255),w,b
 12242  0009AC  0A80               	xorlw	128
 12243  0009AE  5850               	subwfb	??_efgtoa^0,w,c
 12244  0009B0  B0D8               	btfsc	status,0,c
 12245  0009B2  EFDD  F004         	goto	u9851
 12246  0009B6  EFDF  F004         	goto	u9850
 12247  0009BA                     u9851:
 12248  0009BA  EFED  F004         	goto	l9341
 12249  0009BE                     u9850:
 12250  0009BE                     
 12251                           ; BSR set to: 0
 12252  0009BE  BFAF               	btfsc	(efgtoa@n+1)& (0+255),7,b
 12253  0009C0  EFEB  F004         	goto	u9861
 12254  0009C4  51AF               	movf	(efgtoa@n+1)& (0+255),w,b
 12255  0009C6  E109               	bnz	u9860
 12256  0009C8  0E4B               	movlw	75
 12257  0009CA  5DAE               	subwf	efgtoa@n& (0+255),w,b
 12258  0009CC  A0D8               	btfss	status,0,c
 12259  0009CE  EFEB  F004         	goto	u9861
 12260  0009D2  EFED  F004         	goto	u9860
 12261  0009D6                     u9861:
 12262  0009D6  EFE1  F003         	goto	l9289
 12263  0009DA                     u9860:
 12264  0009DA                     l9341:
 12265                           
 12266                           ; BSR set to: 0
 12267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 12268  0009DA  518E               	movf	efgtoa@pp& (0+255),w,b
 12269  0009DC  118F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 12270  0009DE  A4D8               	btfss	status,2,c
 12271  0009E0  EFF4  F004         	goto	u9871
 12272  0009E4  EFF6  F004         	goto	u9870
 12273  0009E8                     u9871:
 12274  0009E8  EF09  F005         	goto	l9349
 12275  0009EC                     u9870:
 12276  0009EC                     
 12277                           ; BSR set to: 0
 12278  0009EC  0101               	movlb	1	; () banked
 12279  0009EE  A932               	btfss	_flags& (0+255),4,b
 12280  0009F0  EFFC  F004         	goto	u9881
 12281  0009F4  EFFE  F004         	goto	u9880
 12282  0009F8                     u9881:
 12283  0009F8  EF09  F005         	goto	l9349
 12284  0009FC                     u9880:
 12285  0009FC                     
 12286                           ; BSR set to: 1
 12287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 12288  0009FC  0E4A               	movlw	low _dbuf
 12289  0009FE  0100               	movlb	0	; () banked
 12290  000A00  25AE               	addwf	efgtoa@n& (0+255),w,b
 12291  000A02  6ED9               	movwf	fsr2l,c
 12292  000A04  0E01               	movlw	high _dbuf
 12293  000A06  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12294  000A08  6EDA               	movwf	fsr2h,c
 12295  000A0A  0E2E               	movlw	46
 12296  000A0C  6EDF               	movwf	indf2,c
 12297  000A0E                     
 12298                           ; BSR set to: 0
 12299  000A0E  4BAE               	infsnz	efgtoa@n& (0+255),f,b
 12300  000A10  2BAF               	incf	(efgtoa@n+1)& (0+255),f,b
 12301  000A12                     l9349:
 12302                           
 12303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 12304  000A12  0E4A               	movlw	low _dbuf
 12305  000A14  0100               	movlb	0	; () banked
 12306  000A16  25AE               	addwf	efgtoa@n& (0+255),w,b
 12307  000A18  6ED9               	movwf	fsr2l,c
 12308  000A1A  0E01               	movlw	high _dbuf
 12309  000A1C  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12310  000A1E  6EDA               	movwf	fsr2h,c
 12311  000A20  0E00               	movlw	0
 12312  000A22  6EDF               	movwf	indf2,c
 12313  000A24                     
 12314                           ; BSR set to: 0
 12315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 12316  000A24  0E65               	movlw	101
 12317  000A26  199A               	xorwf	efgtoa@nmode& (0+255),w,b
 12318  000A28  A4D8               	btfss	status,2,c
 12319  000A2A  EF19  F005         	goto	u9891
 12320  000A2E  EF1B  F005         	goto	u9890
 12321  000A32                     u9891:
 12322  000A32  EFBE  F000         	goto	l9161
 12323  000A36                     u9890:
 12324  000A36                     
 12325                           ; BSR set to: 0
 12326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 12327  000A36  0E00               	movlw	0
 12328  000A38  6FA7               	movwf	(efgtoa@i+1)& (0+255),b
 12329  000A3A  0E4F               	movlw	79
 12330  000A3C  6FA6               	movwf	efgtoa@i& (0+255),b
 12331  000A3E                     
 12332                           ; BSR set to: 0
 12333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 12334  000A3E  0E4A               	movlw	low _dbuf
 12335  000A40  25A6               	addwf	efgtoa@i& (0+255),w,b
 12336  000A42  6ED9               	movwf	fsr2l,c
 12337  000A44  0E01               	movlw	high _dbuf
 12338  000A46  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12339  000A48  6EDA               	movwf	fsr2h,c
 12340  000A4A  0E00               	movlw	0
 12341  000A4C  6EDF               	movwf	indf2,c
 12342  000A4E                     
 12343                           ; BSR set to: 0
 12344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 12345  000A4E  0E00               	movlw	0
 12346  000A50  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
 12347  000A52  0E00               	movlw	0
 12348  000A54  6F96               	movwf	efgtoa@sign& (0+255),b
 12349  000A56                     
 12350                           ; BSR set to: 0
 12351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 12352  000A56  BFAD               	btfsc	(efgtoa@e+1)& (0+255),7,b
 12353  000A58  EF32  F005         	goto	u9900
 12354  000A5C  EF30  F005         	goto	u9901
 12355  000A60                     u9901:
 12356  000A60  EF3A  F005         	goto	l9365
 12357  000A64                     u9900:
 12358  000A64                     
 12359                           ; BSR set to: 0
 12360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 12361  000A64  0E00               	movlw	0
 12362  000A66  6F97               	movwf	(efgtoa@sign+1)& (0+255),b
 12363  000A68  0E01               	movlw	1
 12364  000A6A  6F96               	movwf	efgtoa@sign& (0+255),b
 12365  000A6C                     
 12366                           ; BSR set to: 0
 12367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 12368  000A6C  6DAC               	negf	efgtoa@e& (0+255),b
 12369  000A6E  1FAD               	comf	(efgtoa@e+1)& (0+255),f,b
 12370  000A70  B0D8               	btfsc	status,0,c
 12371  000A72  2BAD               	incf	(efgtoa@e+1)& (0+255),f,b
 12372  000A74                     l9365:
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 12376  000A74  0E00               	movlw	0
 12377  000A76  6F99               	movwf	(efgtoa@p+1)& (0+255),b
 12378  000A78  0E02               	movlw	2
 12379  000A7A  6F98               	movwf	efgtoa@p& (0+255),b
 12380                           
 12381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 12382  000A7C  EF6B  F005         	goto	l9377
 12383  000A80                     l9367:
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 12387  000A80  07A6               	decf	efgtoa@i& (0+255),f,b
 12388  000A82  A0D8               	btfss	status,0,c
 12389  000A84  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
 12390  000A86                     
 12391                           ; BSR set to: 0
 12392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 12393  000A86  0E4A               	movlw	low _dbuf
 12394  000A88  25A6               	addwf	efgtoa@i& (0+255),w,b
 12395  000A8A  6ED9               	movwf	fsr2l,c
 12396  000A8C  0E01               	movlw	high _dbuf
 12397  000A8E  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12398  000A90  6EDA               	movwf	fsr2h,c
 12399  000A92  C0AC  F006         	movff	efgtoa@e,___awmod@dividend
 12400  000A96  C0AD  F007         	movff	efgtoa@e+1,___awmod@dividend+1
 12401  000A9A  0E00               	movlw	0
 12402  000A9C  6E09               	movwf	(___awmod@divisor+1)^0,c
 12403  000A9E  0E0A               	movlw	10
 12404  000AA0  6E08               	movwf	___awmod@divisor^0,c
 12405  000AA2  EC09  F02D         	call	___awmod	;wreg free
 12406  000AA6  5006               	movf	?___awmod^0,w,c
 12407  000AA8  0F30               	addlw	48
 12408  000AAA  6EDF               	movwf	indf2,c
 12409  000AAC                     
 12410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 12411  000AAC  C0AC  F006         	movff	efgtoa@e,___awdiv@dividend
 12412  000AB0  C0AD  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
 12413  000AB4  0E00               	movlw	0
 12414  000AB6  6E09               	movwf	(___awdiv@divisor+1)^0,c
 12415  000AB8  0E0A               	movlw	10
 12416  000ABA  6E08               	movwf	___awdiv@divisor^0,c
 12417  000ABC  ECED  F02B         	call	___awdiv	;wreg free
 12418  000AC0  C006  F0AC         	movff	?___awdiv,efgtoa@e
 12419  000AC4  C007  F0AD         	movff	?___awdiv+1,efgtoa@e+1
 12420  000AC8                     
 12421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 12422  000AC8  0100               	movlb	0	; () banked
 12423  000ACA  0798               	decf	efgtoa@p& (0+255),f,b
 12424  000ACC  A0D8               	btfss	status,0,c
 12425  000ACE  0799               	decf	(efgtoa@p+1)& (0+255),f,b
 12426  000AD0                     
 12427                           ; BSR set to: 0
 12428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 12429  000AD0  079B               	decf	efgtoa@w& (0+255),f,b
 12430  000AD2  A0D8               	btfss	status,0,c
 12431  000AD4  079C               	decf	(efgtoa@w+1)& (0+255),f,b
 12432  000AD6                     l9377:
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 12436  000AD6  51AC               	movf	efgtoa@e& (0+255),w,b
 12437  000AD8  11AD               	iorwf	(efgtoa@e+1)& (0+255),w,b
 12438  000ADA  A4D8               	btfss	status,2,c
 12439  000ADC  EF72  F005         	goto	u9911
 12440  000AE0  EF74  F005         	goto	u9910
 12441  000AE4                     u9911:
 12442  000AE4  EF40  F005         	goto	l9367
 12443  000AE8                     u9910:
 12444  000AE8                     
 12445                           ; BSR set to: 0
 12446  000AE8  BF99               	btfsc	(efgtoa@p+1)& (0+255),7,b
 12447  000AEA  EF81  F005         	goto	u9920
 12448  000AEE  5199               	movf	(efgtoa@p+1)& (0+255),w,b
 12449  000AF0  E106               	bnz	u9921
 12450  000AF2  0598               	decf	efgtoa@p& (0+255),w,b
 12451  000AF4  B0D8               	btfsc	status,0,c
 12452  000AF6  EF7F  F005         	goto	u9921
 12453  000AFA  EF81  F005         	goto	u9920
 12454  000AFE                     u9921:
 12455  000AFE  EF40  F005         	goto	l9367
 12456  000B02                     u9920:
 12457  000B02                     
 12458                           ; BSR set to: 0
 12459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 12460  000B02  07A6               	decf	efgtoa@i& (0+255),f,b
 12461  000B04  A0D8               	btfss	status,0,c
 12462  000B06  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
 12463  000B08                     
 12464                           ; BSR set to: 0
 12465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 12466  000B08  5196               	movf	efgtoa@sign& (0+255),w,b
 12467  000B0A  1197               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 12468  000B0C  A4D8               	btfss	status,2,c
 12469  000B0E  EF8B  F005         	goto	u9931
 12470  000B12  EF8D  F005         	goto	u9930
 12471  000B16                     u9931:
 12472  000B16  EF93  F005         	goto	l9387
 12473  000B1A                     u9930:
 12474  000B1A                     
 12475                           ; BSR set to: 0
 12476  000B1A  0E00               	movlw	0
 12477  000B1C  6F87               	movwf	(_efgtoa$937+1)& (0+255),b
 12478  000B1E  0E2B               	movlw	43
 12479  000B20  6F86               	movwf	_efgtoa$937& (0+255),b
 12480  000B22  EF97  F005         	goto	l9389
 12481  000B26                     l9387:
 12482                           
 12483                           ; BSR set to: 0
 12484  000B26  0E00               	movlw	0
 12485  000B28  6F87               	movwf	(_efgtoa$937+1)& (0+255),b
 12486  000B2A  0E2D               	movlw	45
 12487  000B2C  6F86               	movwf	_efgtoa$937& (0+255),b
 12488  000B2E                     l9389:
 12489                           
 12490                           ; BSR set to: 0
 12491  000B2E  0E4A               	movlw	low _dbuf
 12492  000B30  25A6               	addwf	efgtoa@i& (0+255),w,b
 12493  000B32  6ED9               	movwf	fsr2l,c
 12494  000B34  0E01               	movlw	high _dbuf
 12495  000B36  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12496  000B38  6EDA               	movwf	fsr2h,c
 12497  000B3A  C086  FFDF         	movff	_efgtoa$937,indf2
 12498  000B3E                     
 12499                           ; BSR set to: 0
 12500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 12501  000B3E  079B               	decf	efgtoa@w& (0+255),f,b
 12502  000B40  A0D8               	btfss	status,0,c
 12503  000B42  079C               	decf	(efgtoa@w+1)& (0+255),f,b
 12504  000B44                     
 12505                           ; BSR set to: 0
 12506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12507  000B44  07A6               	decf	efgtoa@i& (0+255),f,b
 12508  000B46  A0D8               	btfss	status,0,c
 12509  000B48  07A7               	decf	(efgtoa@i+1)& (0+255),f,b
 12510  000B4A                     
 12511                           ; BSR set to: 0
 12512  000B4A  0EBF               	movlw	191
 12513  000B4C  6E50               	movwf	??_efgtoa^0,c
 12514  000B4E  0EFF               	movlw	255
 12515  000B50  6E51               	movwf	(??_efgtoa+1)^0,c
 12516  000B52  517B               	movf	efgtoa@c& (0+255),w,b
 12517  000B54  6E52               	movwf	(??_efgtoa+2)^0,c
 12518  000B56  6A53               	clrf	(??_efgtoa+3)^0,c
 12519  000B58  5050               	movf	??_efgtoa^0,w,c
 12520  000B5A  2652               	addwf	(??_efgtoa+2)^0,f,c
 12521  000B5C  5051               	movf	(??_efgtoa+1)^0,w,c
 12522  000B5E  2253               	addwfc	(??_efgtoa+3)^0,f,c
 12523  000B60  5053               	movf	(??_efgtoa+3)^0,w,c
 12524  000B62  E10A               	bnz	u9940
 12525  000B64  0E1A               	movlw	26
 12526  000B66  5C52               	subwf	(??_efgtoa+2)^0,w,c
 12527  000B68  A0D8               	btfss	status,0,c
 12528  000B6A  EFB9  F005         	goto	u9941
 12529  000B6E  EFBC  F005         	goto	u9940
 12530  000B72                     u9941:
 12531  000B72  0E01               	movlw	1
 12532  000B74  EFBD  F005         	goto	u9950
 12533  000B78                     u9940:
 12534  000B78  0E00               	movlw	0
 12535  000B7A                     u9950:
 12536  000B7A  6F8A               	movwf	_efgtoa$939& (0+255),b
 12537  000B7C  6B8B               	clrf	(_efgtoa$939+1)& (0+255),b
 12538  000B7E                     
 12539                           ; BSR set to: 0
 12540  000B7E  518A               	movf	_efgtoa$939& (0+255),w,b
 12541  000B80  118B               	iorwf	(_efgtoa$939+1)& (0+255),w,b
 12542  000B82  A4D8               	btfss	status,2,c
 12543  000B84  EFC6  F005         	goto	u9961
 12544  000B88  EFC8  F005         	goto	u9960
 12545  000B8C                     u9961:
 12546  000B8C  EFCE  F005         	goto	l9403
 12547  000B90                     u9960:
 12548  000B90                     
 12549                           ; BSR set to: 0
 12550  000B90  0E00               	movlw	0
 12551  000B92  6F89               	movwf	(_efgtoa$938+1)& (0+255),b
 12552  000B94  0E65               	movlw	101
 12553  000B96  6F88               	movwf	_efgtoa$938& (0+255),b
 12554  000B98  EFD2  F005         	goto	l9405
 12555  000B9C                     l9403:
 12556                           
 12557                           ; BSR set to: 0
 12558  000B9C  0E00               	movlw	0
 12559  000B9E  6F89               	movwf	(_efgtoa$938+1)& (0+255),b
 12560  000BA0  0E45               	movlw	69
 12561  000BA2  6F88               	movwf	_efgtoa$938& (0+255),b
 12562  000BA4                     l9405:
 12563                           
 12564                           ; BSR set to: 0
 12565  000BA4  0E4A               	movlw	low _dbuf
 12566  000BA6  25A6               	addwf	efgtoa@i& (0+255),w,b
 12567  000BA8  6ED9               	movwf	fsr2l,c
 12568  000BAA  0E01               	movlw	high _dbuf
 12569  000BAC  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12570  000BAE  6EDA               	movwf	fsr2h,c
 12571  000BB0  C088  FFDF         	movff	_efgtoa$938,indf2
 12572  000BB4                     
 12573                           ; BSR set to: 0
 12574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 12575  000BB4  079B               	decf	efgtoa@w& (0+255),f,b
 12576  000BB6  A0D8               	btfss	status,0,c
 12577  000BB8  079C               	decf	(efgtoa@w+1)& (0+255),f,b
 12578  000BBA                     
 12579                           ; BSR set to: 0
 12580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 12581  000BBA  0E4A               	movlw	low _dbuf
 12582  000BBC  25AE               	addwf	efgtoa@n& (0+255),w,b
 12583  000BBE  6E06               	movwf	strcpy@dest^0,c
 12584  000BC0  0E01               	movlw	high _dbuf
 12585  000BC2  21AF               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12586  000BC4  6E07               	movwf	(strcpy@dest+1)^0,c
 12587  000BC6  0E4A               	movlw	low _dbuf
 12588  000BC8  25A6               	addwf	efgtoa@i& (0+255),w,b
 12589  000BCA  6E08               	movwf	strcpy@src^0,c
 12590  000BCC  0E01               	movlw	high _dbuf
 12591  000BCE  21A7               	addwfc	(efgtoa@i+1)& (0+255),w,b
 12592  000BD0  6E09               	movwf	(strcpy@src+1)^0,c
 12593  000BD2  EC6E  F030         	call	_strcpy	;wreg free
 12594  000BD6  EFBE  F000         	goto	l9161
 12595  000BDA                     l816:
 12596  000BDA  0012               	return		;funcret
 12597  000BDC                     __end_of_efgtoa:
 12598                           	opt callstack 0
 12599                           
 12600 ;; *************** function _tolower *****************
 12601 ;; Defined at:
 12602 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;  c               2   11[COMRAM] int 
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;		None
 12607 ;; Return value:  Size  Location     Type
 12608 ;;                  2   11[COMRAM] int 
 12609 ;; Registers used:
 12610 ;;		wreg, status,2, status,0
 12611 ;; Tracked objects:
 12612 ;;		On entry : 0/0
 12613 ;;		On exit  : 0/0
 12614 ;;		Unchanged: 0/0
 12615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12616 ;;      Params:         2       0       0       0       0       0       0       0       0
 12617 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12618 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12619 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12620 ;;Total ram usage:        8 bytes
 12621 ;; Hardware stack levels used:    1
 12622 ;; Hardware stack levels required when called:    3
 12623 ;; This function calls:
 12624 ;;		_isupper
 12625 ;; This function is called by:
 12626 ;;		_efgtoa
 12627 ;;		_vfpfcnvrt
 12628 ;; This function uses a non-reentrant model
 12629 ;;
 12630                           
 12631                           	psect	text39
 12632  00601E                     __ptext39:
 12633                           	opt callstack 0
 12634  00601E                     _tolower:
 12635                           	opt callstack 23
 12636  00601E  0EBF               	movlw	191
 12637  006020  6E0E               	movwf	??_tolower^0,c
 12638  006022  0EFF               	movlw	255
 12639  006024  6E0F               	movwf	(??_tolower+1)^0,c
 12640  006026  C00C  F010         	movff	tolower@c,??_tolower+2
 12641  00602A  C00D  F011         	movff	tolower@c+1,??_tolower+3
 12642  00602E  500E               	movf	??_tolower^0,w,c
 12643  006030  2610               	addwf	(??_tolower+2)^0,f,c
 12644  006032  500F               	movf	(??_tolower+1)^0,w,c
 12645  006034  2211               	addwfc	(??_tolower+3)^0,f,c
 12646  006036  5011               	movf	(??_tolower+3)^0,w,c
 12647  006038  E10A               	bnz	u4890
 12648  00603A  0E1A               	movlw	26
 12649  00603C  5C10               	subwf	(??_tolower+2)^0,w,c
 12650  00603E  A0D8               	btfss	status,0,c
 12651  006040  EF24  F030         	goto	u4891
 12652  006044  EF27  F030         	goto	u4890
 12653  006048                     u4891:
 12654  006048  0E01               	movlw	1
 12655  00604A  EF28  F030         	goto	u4900
 12656  00604E                     u4890:
 12657  00604E  0E00               	movlw	0
 12658  006050                     u4900:
 12659  006050  6E12               	movwf	_tolower$1614^0,c
 12660  006052  6A13               	clrf	(_tolower$1614+1)^0,c
 12661  006054  5012               	movf	_tolower$1614^0,w,c
 12662  006056  1013               	iorwf	(_tolower$1614+1)^0,w,c
 12663  006058  B4D8               	btfsc	status,2,c
 12664  00605A  EF31  F030         	goto	u4911
 12665  00605E  EF33  F030         	goto	u4910
 12666  006062                     u4911:
 12667  006062  EF3A  F030         	goto	l1803
 12668  006066                     u4910:
 12669  006066  0E20               	movlw	32
 12670  006068  100C               	iorwf	tolower@c^0,w,c
 12671  00606A  6E0C               	movwf	?_tolower^0,c
 12672  00606C  500D               	movf	(tolower@c+1)^0,w,c
 12673  00606E  6E0D               	movwf	(?_tolower+1)^0,c
 12674  006070  EF3E  F030         	goto	l1808
 12675  006074                     l1803:
 12676  006074  C00C  F00C         	movff	tolower@c,?_tolower
 12677  006078  C00D  F00D         	movff	tolower@c+1,?_tolower+1
 12678  00607C                     l1808:
 12679  00607C  0012               	return		;funcret
 12680  00607E                     __end_of_tolower:
 12681                           	opt callstack 0
 12682                           
 12683 ;; *************** function _isupper *****************
 12684 ;; Defined at:
 12685 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 12686 ;; Parameters:    Size  Location     Type
 12687 ;;  c               2    5[COMRAM] int 
 12688 ;; Auto vars:     Size  Location     Type
 12689 ;;		None
 12690 ;; Return value:  Size  Location     Type
 12691 ;;                  2    5[COMRAM] int 
 12692 ;; Registers used:
 12693 ;;		wreg, status,2, status,0
 12694 ;; Tracked objects:
 12695 ;;		On entry : 0/0
 12696 ;;		On exit  : 0/0
 12697 ;;		Unchanged: 0/0
 12698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12699 ;;      Params:         2       0       0       0       0       0       0       0       0
 12700 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12701 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12702 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12703 ;;Total ram usage:        6 bytes
 12704 ;; Hardware stack levels used:    1
 12705 ;; Hardware stack levels required when called:    2
 12706 ;; This function calls:
 12707 ;;		Nothing
 12708 ;; This function is called by:
 12709 ;;		_efgtoa
 12710 ;;		_vfpfcnvrt
 12711 ;;		_tolower
 12712 ;; This function uses a non-reentrant model
 12713 ;;
 12714                           
 12715                           	psect	text40
 12716  0065CC                     __ptext40:
 12717                           	opt callstack 0
 12718  0065CC                     _isupper:
 12719                           	opt callstack 23
 12720  0065CC  0EBF               	movlw	191
 12721  0065CE  6E08               	movwf	??_isupper^0,c
 12722  0065D0  0EFF               	movlw	255
 12723  0065D2  6E09               	movwf	(??_isupper+1)^0,c
 12724  0065D4  C006  F00A         	movff	isupper@c,??_isupper+2
 12725  0065D8  C007  F00B         	movff	isupper@c+1,??_isupper+3
 12726  0065DC  5008               	movf	??_isupper^0,w,c
 12727  0065DE  260A               	addwf	(??_isupper+2)^0,f,c
 12728  0065E0  5009               	movf	(??_isupper+1)^0,w,c
 12729  0065E2  220B               	addwfc	(??_isupper+3)^0,f,c
 12730  0065E4  500B               	movf	(??_isupper+3)^0,w,c
 12731  0065E6  E10A               	bnz	u4260
 12732  0065E8  0E1A               	movlw	26
 12733  0065EA  5C0A               	subwf	(??_isupper+2)^0,w,c
 12734  0065EC  A0D8               	btfss	status,0,c
 12735  0065EE  EFFB  F032         	goto	u4261
 12736  0065F2  EFFE  F032         	goto	u4260
 12737  0065F6                     u4261:
 12738  0065F6  0E01               	movlw	1
 12739  0065F8  EFFF  F032         	goto	u4270
 12740  0065FC                     u4260:
 12741  0065FC  0E00               	movlw	0
 12742  0065FE                     u4270:
 12743  0065FE  6E06               	movwf	?_isupper^0,c
 12744  006600  6A07               	clrf	(?_isupper+1)^0,c
 12745  006602  0012               	return		;funcret
 12746  006604                     __end_of_isupper:
 12747                           	opt callstack 0
 12748                           
 12749 ;; *************** function _strcpy *****************
 12750 ;; Defined at:
 12751 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;  dest            2    5[COMRAM] PTR unsigned char 
 12754 ;;		 -> dbuf(80), 
 12755 ;;  src             2    7[COMRAM] PTR const unsigned char 
 12756 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
 12757 ;;		 -> dbuf(80), 
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;  d               2   13[COMRAM] PTR unsigned char 
 12760 ;;		 -> dbuf(80), 
 12761 ;;  s               2   11[COMRAM] PTR const unsigned char 
 12762 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
 12763 ;;		 -> dbuf(80), 
 12764 ;; Return value:  Size  Location     Type
 12765 ;;                  2    5[COMRAM] PTR unsigned char 
 12766 ;; Registers used:
 12767 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12768 ;; Tracked objects:
 12769 ;;		On entry : 0/0
 12770 ;;		On exit  : 0/0
 12771 ;;		Unchanged: 0/0
 12772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12773 ;;      Params:         4       0       0       0       0       0       0       0       0
 12774 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12775 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12776 ;;      Totals:        10       0       0       0       0       0       0       0       0
 12777 ;;Total ram usage:       10 bytes
 12778 ;; Hardware stack levels used:    1
 12779 ;; Hardware stack levels required when called:    2
 12780 ;; This function calls:
 12781 ;;		Nothing
 12782 ;; This function is called by:
 12783 ;;		_efgtoa
 12784 ;; This function uses a non-reentrant model
 12785 ;;
 12786                           
 12787                           	psect	text41
 12788  0060DC                     __ptext41:
 12789                           	opt callstack 0
 12790  0060DC                     _strcpy:
 12791                           	opt callstack 23
 12792  0060DC  C008  F00C         	movff	strcpy@src,strcpy@s
 12793  0060E0  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
 12794  0060E4  C006  F00E         	movff	strcpy@dest,strcpy@d
 12795  0060E8  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
 12796  0060EC                     l5497:
 12797  0060EC  500C               	movf	strcpy@s^0,w,c
 12798  0060EE  6E0A               	movwf	??_strcpy^0,c
 12799  0060F0  500D               	movf	(strcpy@s+1)^0,w,c
 12800  0060F2  6E0B               	movwf	(??_strcpy+1)^0,c
 12801  0060F4  4A0C               	infsnz	strcpy@s^0,f,c
 12802  0060F6  2A0D               	incf	(strcpy@s+1)^0,f,c
 12803  0060F8  C00A  FFF6         	movff	??_strcpy,tblptrl
 12804  0060FC  C00B  FFF7         	movff	??_strcpy+1,tblptrh
 12805  006100  6AF8               	clrf	tblptru,c
 12806  006102  C00E  FFD9         	movff	strcpy@d,fsr2l
 12807  006106  C00F  FFDA         	movff	strcpy@d+1,fsr2h
 12808  00610A  4A0E               	infsnz	strcpy@d^0,f,c
 12809  00610C  2A0F               	incf	(strcpy@d+1)^0,f,c
 12810  00610E  0E07               	movlw	(high __ramtop+-1)
 12811  006110  64F7               	cpfsgt	tblptrh,c
 12812  006112  D003               	bra	u4877
 12813  006114  0008               	tblrd		*
 12814  006116  50F5               	movf	tablat,w,c
 12815  006118  D005               	bra	u4870
 12816  00611A                     u4877:
 12817  00611A  CFF6 FFE9          	movff	tblptrl,fsr0l
 12818  00611E  CFF7 FFEA          	movff	tblptrh,fsr0h
 12819  006122  50EF               	movf	indf0,w,c
 12820  006124                     u4870:
 12821  006124  6EDF               	movwf	indf2,c
 12822  006126  50DF               	movf	indf2,w,c
 12823  006128  A4D8               	btfss	status,2,c
 12824  00612A  EF99  F030         	goto	u4881
 12825  00612E  EF9B  F030         	goto	u4880
 12826  006132                     u4881:
 12827  006132  EF76  F030         	goto	l5497
 12828  006136                     u4880:
 12829  006136  0012               	return		;funcret
 12830  006138                     __end_of_strcpy:
 12831                           	opt callstack 0
 12832                           
 12833 ;; *************** function _floorf *****************
 12834 ;; Defined at:
 12835 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;  x               4   57[COMRAM] float 
 12838 ;; Auto vars:     Size  Location     Type
 12839 ;;  u               4   73[COMRAM] struct .
 12840 ;;  m               4   67[COMRAM] unsigned long 
 12841 ;;  e               2   71[COMRAM] int 
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  4   57[COMRAM] float 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12851 ;;      Params:         4       0       0       0       0       0       0       0       0
 12852 ;;      Locals:        10       0       0       0       0       0       0       0       0
 12853 ;;      Temps:          6       0       0       0       0       0       0       0       0
 12854 ;;      Totals:        20       0       0       0       0       0       0       0       0
 12855 ;;Total ram usage:       20 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    2
 12858 ;; This function calls:
 12859 ;;		Nothing
 12860 ;; This function is called by:
 12861 ;;		_efgtoa
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           	psect	text42
 12866  0040FE                     __ptext42:
 12867                           	opt callstack 0
 12868  0040FE                     _floorf:
 12869                           	opt callstack 23
 12870  0040FE  C104  F04A         	movff	floorf@F524,floorf@u
 12871  004102  C105  F04B         	movff	floorf@F524+1,floorf@u+1
 12872  004106  C106  F04C         	movff	floorf@F524+2,floorf@u+2
 12873  00410A  C107  F04D         	movff	floorf@F524+3,floorf@u+3
 12874  00410E  C03A  F04A         	movff	floorf@x,floorf@u
 12875  004112  C03B  F04B         	movff	floorf@x+1,floorf@u+1
 12876  004116  C03C  F04C         	movff	floorf@x+2,floorf@u+2
 12877  00411A  C03D  F04D         	movff	floorf@x+3,floorf@u+3
 12878  00411E  0E81               	movlw	129
 12879  004120  6E3E               	movwf	??_floorf^0,c
 12880  004122  0EFF               	movlw	255
 12881  004124  6E3F               	movwf	(??_floorf+1)^0,c
 12882  004126  C04A  F040         	movff	floorf@u,??_floorf+2
 12883  00412A  C04B  F041         	movff	floorf@u+1,??_floorf+3
 12884  00412E  C04C  F042         	movff	floorf@u+2,??_floorf+4
 12885  004132  C04D  F043         	movff	floorf@u+3,??_floorf+5
 12886  004136  0E18               	movlw	24
 12887  004138  EFA3  F020         	goto	u4920
 12888  00413C                     u4925:
 12889  00413C  90D8               	bcf	status,0,c
 12890  00413E  3243               	rrcf	(??_floorf+5)^0,f,c
 12891  004140  3242               	rrcf	(??_floorf+4)^0,f,c
 12892  004142  3241               	rrcf	(??_floorf+3)^0,f,c
 12893  004144  3240               	rrcf	(??_floorf+2)^0,f,c
 12894  004146                     u4920:
 12895  004146  2EE8               	decfsz	wreg,f,c
 12896  004148  EF9E  F020         	goto	u4925
 12897  00414C  5040               	movf	(??_floorf+2)^0,w,c
 12898  00414E  243E               	addwf	??_floorf^0,w,c
 12899  004150  6E48               	movwf	floorf@e^0,c
 12900  004152  0E00               	movlw	0
 12901  004154  203F               	addwfc	(??_floorf+1)^0,w,c
 12902  004156  6E49               	movwf	(floorf@e+1)^0,c
 12903  004158  BE49               	btfsc	(floorf@e+1)^0,7,c
 12904  00415A  EFB8  F020         	goto	u4931
 12905  00415E  5049               	movf	(floorf@e+1)^0,w,c
 12906  004160  E109               	bnz	u4930
 12907  004162  0E17               	movlw	23
 12908  004164  5C48               	subwf	floorf@e^0,w,c
 12909  004166  A0D8               	btfss	status,0,c
 12910  004168  EFB8  F020         	goto	u4931
 12911  00416C  EFBA  F020         	goto	u4930
 12912  004170                     u4931:
 12913  004170  EFC4  F020         	goto	l5515
 12914  004174                     u4930:
 12915  004174                     l5513:
 12916  004174  C03A  F03A         	movff	floorf@x,?_floorf
 12917  004178  C03B  F03B         	movff	floorf@x+1,?_floorf+1
 12918  00417C  C03C  F03C         	movff	floorf@x+2,?_floorf+2
 12919  004180  C03D  F03D         	movff	floorf@x+3,?_floorf+3
 12920  004184  EF87  F021         	goto	l1684
 12921  004188                     l5515:
 12922  004188  BE49               	btfsc	(floorf@e+1)^0,7,c
 12923  00418A  EFC9  F020         	goto	u4941
 12924  00418E  EFCB  F020         	goto	u4940
 12925  004192                     u4941:
 12926  004192  EF3B  F021         	goto	l5525
 12927  004196                     u4940:
 12928  004196  C048  F03E         	movff	floorf@e,??_floorf
 12929  00419A  0EFF               	movlw	255
 12930  00419C  6E3F               	movwf	(??_floorf+1)^0,c
 12931  00419E  0EFF               	movlw	255
 12932  0041A0  6E40               	movwf	(??_floorf+2)^0,c
 12933  0041A2  0E7F               	movlw	127
 12934  0041A4  6E41               	movwf	(??_floorf+3)^0,c
 12935  0041A6  0E00               	movlw	0
 12936  0041A8  6E42               	movwf	(??_floorf+4)^0,c
 12937  0041AA                     u4955:
 12938  0041AA  663E               	tstfsz	??_floorf^0,c
 12939  0041AC  EFDA  F020         	goto	u4956
 12940  0041B0  EFE2  F020         	goto	u4957
 12941  0041B4                     u4956:
 12942  0041B4  3442               	rlcf	(??_floorf+4)^0,w,c
 12943  0041B6  3242               	rrcf	(??_floorf+4)^0,f,c
 12944  0041B8  3241               	rrcf	(??_floorf+3)^0,f,c
 12945  0041BA  3240               	rrcf	(??_floorf+2)^0,f,c
 12946  0041BC  323F               	rrcf	(??_floorf+1)^0,f,c
 12947  0041BE  2E3E               	decfsz	??_floorf^0,f,c
 12948  0041C0  EFD5  F020         	goto	u4955
 12949  0041C4                     u4957:
 12950  0041C4  C03F  F044         	movff	??_floorf+1,floorf@m
 12951  0041C8  C040  F045         	movff	??_floorf+2,floorf@m+1
 12952  0041CC  C041  F046         	movff	??_floorf+3,floorf@m+2
 12953  0041D0  C042  F047         	movff	??_floorf+4,floorf@m+3
 12954  0041D4  5044               	movf	floorf@m^0,w,c
 12955  0041D6  144A               	andwf	floorf@u^0,w,c
 12956  0041D8  6E3E               	movwf	??_floorf^0,c
 12957  0041DA  5045               	movf	(floorf@m+1)^0,w,c
 12958  0041DC  144B               	andwf	(floorf@u+1)^0,w,c
 12959  0041DE  6E3F               	movwf	(??_floorf+1)^0,c
 12960  0041E0  5046               	movf	(floorf@m+2)^0,w,c
 12961  0041E2  144C               	andwf	(floorf@u+2)^0,w,c
 12962  0041E4  6E40               	movwf	(??_floorf+2)^0,c
 12963  0041E6  5047               	movf	(floorf@m+3)^0,w,c
 12964  0041E8  144D               	andwf	(floorf@u+3)^0,w,c
 12965  0041EA  6E41               	movwf	(??_floorf+3)^0,c
 12966  0041EC  503E               	movf	??_floorf^0,w,c
 12967  0041EE  103F               	iorwf	(??_floorf+1)^0,w,c
 12968  0041F0  1040               	iorwf	(??_floorf+2)^0,w,c
 12969  0041F2  1041               	iorwf	(??_floorf+3)^0,w,c
 12970  0041F4  A4D8               	btfss	status,2,c
 12971  0041F6  EFFF  F020         	goto	u4961
 12972  0041FA  EF01  F021         	goto	u4960
 12973  0041FE                     u4961:
 12974  0041FE  EF03  F021         	goto	l5521
 12975  004202                     u4960:
 12976  004202  EFBA  F020         	goto	l5513
 12977  004206                     l5521:
 12978  004206  C04A  F03E         	movff	floorf@u,??_floorf
 12979  00420A  C04B  F03F         	movff	floorf@u+1,??_floorf+1
 12980  00420E  C04C  F040         	movff	floorf@u+2,??_floorf+2
 12981  004212  C04D  F041         	movff	floorf@u+3,??_floorf+3
 12982  004216  0E20               	movlw	32
 12983  004218  EF13  F021         	goto	u4970
 12984  00421C                     u4975:
 12985  00421C  90D8               	bcf	status,0,c
 12986  00421E  3241               	rrcf	(??_floorf+3)^0,f,c
 12987  004220  3240               	rrcf	(??_floorf+2)^0,f,c
 12988  004222  323F               	rrcf	(??_floorf+1)^0,f,c
 12989  004224  323E               	rrcf	??_floorf^0,f,c
 12990  004226                     u4970:
 12991  004226  2EE8               	decfsz	wreg,f,c
 12992  004228  EF0E  F021         	goto	u4975
 12993  00422C  503E               	movf	??_floorf^0,w,c
 12994  00422E  103F               	iorwf	(??_floorf+1)^0,w,c
 12995  004230  1040               	iorwf	(??_floorf+2)^0,w,c
 12996  004232  1041               	iorwf	(??_floorf+3)^0,w,c
 12997  004234  B4D8               	btfsc	status,2,c
 12998  004236  EF1F  F021         	goto	u4981
 12999  00423A  EF21  F021         	goto	u4980
 13000  00423E                     u4981:
 13001  00423E  EF29  F021         	goto	l1687
 13002  004242                     u4980:
 13003  004242  5044               	movf	floorf@m^0,w,c
 13004  004244  264A               	addwf	floorf@u^0,f,c
 13005  004246  5045               	movf	(floorf@m+1)^0,w,c
 13006  004248  224B               	addwfc	(floorf@u+1)^0,f,c
 13007  00424A  5046               	movf	(floorf@m+2)^0,w,c
 13008  00424C  224C               	addwfc	(floorf@u+2)^0,f,c
 13009  00424E  5047               	movf	(floorf@m+3)^0,w,c
 13010  004250  224D               	addwfc	(floorf@u+3)^0,f,c
 13011  004252                     l1687:
 13012  004252  1C44               	comf	floorf@m^0,w,c
 13013  004254  6E3E               	movwf	??_floorf^0,c
 13014  004256  1C45               	comf	(floorf@m+1)^0,w,c
 13015  004258  6E3F               	movwf	(??_floorf+1)^0,c
 13016  00425A  1C46               	comf	(floorf@m+2)^0,w,c
 13017  00425C  6E40               	movwf	(??_floorf+2)^0,c
 13018  00425E  1C47               	comf	(floorf@m+3)^0,w,c
 13019  004260  6E41               	movwf	(??_floorf+3)^0,c
 13020  004262  503E               	movf	??_floorf^0,w,c
 13021  004264  164A               	andwf	floorf@u^0,f,c
 13022  004266  503F               	movf	(??_floorf+1)^0,w,c
 13023  004268  164B               	andwf	(floorf@u+1)^0,f,c
 13024  00426A  5040               	movf	(??_floorf+2)^0,w,c
 13025  00426C  164C               	andwf	(floorf@u+2)^0,f,c
 13026  00426E  5041               	movf	(??_floorf+3)^0,w,c
 13027  004270  164D               	andwf	(floorf@u+3)^0,f,c
 13028  004272  EF7F  F021         	goto	l5533
 13029  004276                     l5525:
 13030  004276  C04A  F03E         	movff	floorf@u,??_floorf
 13031  00427A  C04B  F03F         	movff	floorf@u+1,??_floorf+1
 13032  00427E  C04C  F040         	movff	floorf@u+2,??_floorf+2
 13033  004282  C04D  F041         	movff	floorf@u+3,??_floorf+3
 13034  004286  0E20               	movlw	32
 13035  004288  EF4B  F021         	goto	u4990
 13036  00428C                     u4995:
 13037  00428C  90D8               	bcf	status,0,c
 13038  00428E  3241               	rrcf	(??_floorf+3)^0,f,c
 13039  004290  3240               	rrcf	(??_floorf+2)^0,f,c
 13040  004292  323F               	rrcf	(??_floorf+1)^0,f,c
 13041  004294  323E               	rrcf	??_floorf^0,f,c
 13042  004296                     u4990:
 13043  004296  2EE8               	decfsz	wreg,f,c
 13044  004298  EF46  F021         	goto	u4995
 13045  00429C  503E               	movf	??_floorf^0,w,c
 13046  00429E  103F               	iorwf	(??_floorf+1)^0,w,c
 13047  0042A0  1040               	iorwf	(??_floorf+2)^0,w,c
 13048  0042A2  1041               	iorwf	(??_floorf+3)^0,w,c
 13049  0042A4  A4D8               	btfss	status,2,c
 13050  0042A6  EF57  F021         	goto	u5001
 13051  0042AA  EF59  F021         	goto	u5000
 13052  0042AE                     u5001:
 13053  0042AE  EF63  F021         	goto	l5529
 13054  0042B2                     u5000:
 13055  0042B2  0E00               	movlw	0
 13056  0042B4  6E4A               	movwf	floorf@u^0,c
 13057  0042B6  0E00               	movlw	0
 13058  0042B8  6E4B               	movwf	(floorf@u+1)^0,c
 13059  0042BA  0E00               	movlw	0
 13060  0042BC  6E4C               	movwf	(floorf@u+2)^0,c
 13061  0042BE  0E00               	movlw	0
 13062  0042C0  6E4D               	movwf	(floorf@u+3)^0,c
 13063  0042C2  EF7F  F021         	goto	l5533
 13064  0042C6                     l5529:
 13065  0042C6  90D8               	bcf	status,0,c
 13066  0042C8  344A               	rlcf	floorf@u^0,w,c
 13067  0042CA  6E3E               	movwf	??_floorf^0,c
 13068  0042CC  344B               	rlcf	(floorf@u+1)^0,w,c
 13069  0042CE  6E3F               	movwf	(??_floorf+1)^0,c
 13070  0042D0  344C               	rlcf	(floorf@u+2)^0,w,c
 13071  0042D2  6E40               	movwf	(??_floorf+2)^0,c
 13072  0042D4  344D               	rlcf	(floorf@u+3)^0,w,c
 13073  0042D6  6E41               	movwf	(??_floorf+3)^0,c
 13074  0042D8  503E               	movf	??_floorf^0,w,c
 13075  0042DA  103F               	iorwf	(??_floorf+1)^0,w,c
 13076  0042DC  1040               	iorwf	(??_floorf+2)^0,w,c
 13077  0042DE  1041               	iorwf	(??_floorf+3)^0,w,c
 13078  0042E0  B4D8               	btfsc	status,2,c
 13079  0042E2  EF75  F021         	goto	u5011
 13080  0042E6  EF77  F021         	goto	u5010
 13081  0042EA                     u5011:
 13082  0042EA  EF7F  F021         	goto	l5533
 13083  0042EE                     u5010:
 13084  0042EE  0E00               	movlw	0
 13085  0042F0  6E4A               	movwf	floorf@u^0,c
 13086  0042F2  0E00               	movlw	0
 13087  0042F4  6E4B               	movwf	(floorf@u+1)^0,c
 13088  0042F6  0E80               	movlw	128
 13089  0042F8  6E4C               	movwf	(floorf@u+2)^0,c
 13090  0042FA  0EBF               	movlw	191
 13091  0042FC  6E4D               	movwf	(floorf@u+3)^0,c
 13092  0042FE                     l5533:
 13093  0042FE  C04A  F03A         	movff	floorf@u,?_floorf
 13094  004302  C04B  F03B         	movff	floorf@u+1,?_floorf+1
 13095  004306  C04C  F03C         	movff	floorf@u+2,?_floorf+2
 13096  00430A  C04D  F03D         	movff	floorf@u+3,?_floorf+3
 13097  00430E                     l1684:
 13098  00430E  0012               	return		;funcret
 13099  004310                     __end_of_floorf:
 13100                           	opt callstack 0
 13101                           
 13102 ;; *************** function ___fpclassifyf *****************
 13103 ;; Defined at:
 13104 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  x               4    5[COMRAM] float 
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;  u               4   15[COMRAM] struct .
 13109 ;;  e               2   13[COMRAM] int 
 13110 ;; Return value:  Size  Location     Type
 13111 ;;                  2    5[COMRAM] int 
 13112 ;; Registers used:
 13113 ;;		wreg, status,2, status,0
 13114 ;; Tracked objects:
 13115 ;;		On entry : 0/0
 13116 ;;		On exit  : 0/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13119 ;;      Params:         4       0       0       0       0       0       0       0       0
 13120 ;;      Locals:         6       0       0       0       0       0       0       0       0
 13121 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13122 ;;      Totals:        14       0       0       0       0       0       0       0       0
 13123 ;;Total ram usage:       14 bytes
 13124 ;; Hardware stack levels used:    1
 13125 ;; Hardware stack levels required when called:    2
 13126 ;; This function calls:
 13127 ;;		Nothing
 13128 ;; This function is called by:
 13129 ;;		_efgtoa
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133                           	psect	text43
 13134  00538C                     __ptext43:
 13135                           	opt callstack 0
 13136  00538C                     ___fpclassifyf:
 13137                           	opt callstack 23
 13138  00538C  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
 13139  005390  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 13140  005394  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 13141  005398  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 13142  00539C  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 13143  0053A0  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 13144  0053A4  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 13145  0053A8  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 13146  0053AC  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 13147  0053B0  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13148  0053B4  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13149  0053B8  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13150  0053BC  0E18               	movlw	24
 13151  0053BE  EFE6  F029         	goto	u4800
 13152  0053C2                     u4805:
 13153  0053C2  90D8               	bcf	status,0,c
 13154  0053C4  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 13155  0053C6  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 13156  0053C8  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 13157  0053CA  320A               	rrcf	??___fpclassifyf^0,f,c
 13158  0053CC                     u4800:
 13159  0053CC  2EE8               	decfsz	wreg,f,c
 13160  0053CE  EFE1  F029         	goto	u4805
 13161  0053D2  500A               	movf	??___fpclassifyf^0,w,c
 13162  0053D4  6E0E               	movwf	___fpclassifyf@e^0,c
 13163  0053D6  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 13164  0053D8  500E               	movf	___fpclassifyf@e^0,w,c
 13165  0053DA  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13166  0053DC  A4D8               	btfss	status,2,c
 13167  0053DE  EFF3  F029         	goto	u4811
 13168  0053E2  EFF5  F029         	goto	u4810
 13169  0053E6                     u4811:
 13170  0053E6  EF15  F02A         	goto	l5485
 13171  0053EA                     u4810:
 13172  0053EA  90D8               	bcf	status,0,c
 13173  0053EC  3410               	rlcf	___fpclassifyf@u^0,w,c
 13174  0053EE  6E0A               	movwf	??___fpclassifyf^0,c
 13175  0053F0  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 13176  0053F2  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 13177  0053F4  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 13178  0053F6  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 13179  0053F8  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 13180  0053FA  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 13181  0053FC  500A               	movf	??___fpclassifyf^0,w,c
 13182  0053FE  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 13183  005400  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 13184  005402  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 13185  005404  A4D8               	btfss	status,2,c
 13186  005406  EF07  F02A         	goto	u4821
 13187  00540A  EF09  F02A         	goto	u4820
 13188  00540E                     u4821:
 13189  00540E  EF0F  F02A         	goto	l5481
 13190  005412                     u4820:
 13191  005412  0E00               	movlw	0
 13192  005414  6E07               	movwf	(?___fpclassifyf+1)^0,c
 13193  005416  0E02               	movlw	2
 13194  005418  6E06               	movwf	?___fpclassifyf^0,c
 13195  00541A  EF44  F02A         	goto	l1608
 13196  00541E                     l5481:
 13197  00541E  0E00               	movlw	0
 13198  005420  6E07               	movwf	(?___fpclassifyf+1)^0,c
 13199  005422  0E03               	movlw	3
 13200  005424  6E06               	movwf	?___fpclassifyf^0,c
 13201  005426  EF44  F02A         	goto	l1608
 13202  00542A                     l5485:
 13203  00542A  280E               	incf	___fpclassifyf@e^0,w,c
 13204  00542C  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 13205  00542E  A4D8               	btfss	status,2,c
 13206  005430  EF1C  F02A         	goto	u4831
 13207  005434  EF1E  F02A         	goto	u4830
 13208  005438                     u4831:
 13209  005438  EF40  F02A         	goto	l5491
 13210  00543C                     u4830:
 13211  00543C  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 13212  005440  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 13213  005444  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 13214  005448  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 13215  00544C  0E09               	movlw	9
 13216  00544E                     u4845:
 13217  00544E  90D8               	bcf	status,0,c
 13218  005450  360A               	rlcf	??___fpclassifyf^0,f,c
 13219  005452  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 13220  005454  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 13221  005456  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 13222  005458  2EE8               	decfsz	wreg,f,c
 13223  00545A  EF27  F02A         	goto	u4845
 13224  00545E  500A               	movf	??___fpclassifyf^0,w,c
 13225  005460  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 13226  005462  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 13227  005464  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 13228  005466  B4D8               	btfsc	status,2,c
 13229  005468  EF38  F02A         	goto	u4851
 13230  00546C  EF3B  F02A         	goto	u4850
 13231  005470                     u4851:
 13232  005470  0E01               	movlw	1
 13233  005472  EF3C  F02A         	goto	u4860
 13234  005476                     u4850:
 13235  005476  0E00               	movlw	0
 13236  005478                     u4860:
 13237  005478  6E06               	movwf	?___fpclassifyf^0,c
 13238  00547A  6A07               	clrf	(?___fpclassifyf+1)^0,c
 13239  00547C  EF44  F02A         	goto	l1608
 13240  005480                     l5491:
 13241  005480  0E00               	movlw	0
 13242  005482  6E07               	movwf	(?___fpclassifyf+1)^0,c
 13243  005484  0E04               	movlw	4
 13244  005486  6E06               	movwf	?___fpclassifyf^0,c
 13245  005488                     l1608:
 13246  005488  0012               	return		;funcret
 13247  00548A                     __end_of___fpclassifyf:
 13248                           	opt callstack 0
 13249                           
 13250 ;; *************** function ___fltol *****************
 13251 ;; Defined at:
 13252 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  f1              4   13[BANK0 ] int 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;  exp1            1   78[COMRAM] unsigned char 
 13257 ;;  sign1           1   77[COMRAM] unsigned char 
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  4   13[BANK0 ] long 
 13260 ;; Registers used:
 13261 ;;		wreg, status,2, status,0
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/0
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13267 ;;      Params:         0       4       0       0       0       0       0       0       0
 13268 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13269 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13270 ;;      Totals:         6       4       0       0       0       0       0       0       0
 13271 ;;Total ram usage:       10 bytes
 13272 ;; Hardware stack levels used:    1
 13273 ;; Hardware stack levels required when called:    2
 13274 ;; This function calls:
 13275 ;;		Nothing
 13276 ;; This function is called by:
 13277 ;;		_pwmDuty
 13278 ;;		_myPow
 13279 ;;		_PID
 13280 ;;		_efgtoa
 13281 ;;		_expf
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text44
 13286  00507C                     __ptext44:
 13287                           	opt callstack 0
 13288  00507C                     ___fltol:
 13289                           	opt callstack 23
 13290  00507C  0100               	movlb	0	; () banked
 13291  00507E  356F               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13292  005080  3570               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13293  005082  6E4F               	movwf	___fltol@exp1^0,c
 13294  005084  504F               	movf	___fltol@exp1^0,w,c
 13295  005086  A4D8               	btfss	status,2,c
 13296  005088  EF48  F028         	goto	u9251
 13297  00508C  EF4A  F028         	goto	u9250
 13298  005090                     u9251:
 13299  005090  EF54  F028         	goto	l9015
 13300  005094                     u9250:
 13301  005094                     l9011:
 13302                           
 13303                           ; BSR set to: 0
 13304  005094  0E00               	movlw	0
 13305  005096  6F6D               	movwf	?___fltol& (0+255),b
 13306  005098  0E00               	movlw	0
 13307  00509A  6F6E               	movwf	(?___fltol+1)& (0+255),b
 13308  00509C  0E00               	movlw	0
 13309  00509E  6F6F               	movwf	(?___fltol+2)& (0+255),b
 13310  0050A0  0E00               	movlw	0
 13311  0050A2  6F70               	movwf	(?___fltol+3)& (0+255),b
 13312  0050A4  EFC1  F028         	goto	l1224
 13313  0050A8                     l9015:
 13314                           
 13315                           ; BSR set to: 0
 13316  0050A8  C06D  F04A         	movff	___fltol@f1,??___fltol
 13317  0050AC  C06E  F04B         	movff	___fltol@f1+1,??___fltol+1
 13318  0050B0  C06F  F04C         	movff	___fltol@f1+2,??___fltol+2
 13319  0050B4  C070  F04D         	movff	___fltol@f1+3,??___fltol+3
 13320  0050B8  0E20               	movlw	32
 13321  0050BA  EF64  F028         	goto	u9260
 13322  0050BE                     u9265:
 13323  0050BE  90D8               	bcf	status,0,c
 13324  0050C0  324D               	rrcf	(??___fltol+3)^0,f,c
 13325  0050C2  324C               	rrcf	(??___fltol+2)^0,f,c
 13326  0050C4  324B               	rrcf	(??___fltol+1)^0,f,c
 13327  0050C6  324A               	rrcf	??___fltol^0,f,c
 13328  0050C8                     u9260:
 13329  0050C8  2EE8               	decfsz	wreg,f,c
 13330  0050CA  EF5F  F028         	goto	u9265
 13331  0050CE  504A               	movf	??___fltol^0,w,c
 13332  0050D0  6E4E               	movwf	___fltol@sign1^0,c
 13333  0050D2                     
 13334                           ; BSR set to: 0
 13335  0050D2  8F6F               	bsf	(___fltol@f1+2)& (0+255),7,b
 13336  0050D4                     
 13337                           ; BSR set to: 0
 13338  0050D4  0EFF               	movlw	255
 13339  0050D6  176D               	andwf	___fltol@f1& (0+255),f,b
 13340  0050D8  0EFF               	movlw	255
 13341  0050DA  176E               	andwf	(___fltol@f1+1)& (0+255),f,b
 13342  0050DC  0EFF               	movlw	255
 13343  0050DE  176F               	andwf	(___fltol@f1+2)& (0+255),f,b
 13344  0050E0  0E00               	movlw	0
 13345  0050E2  1770               	andwf	(___fltol@f1+3)& (0+255),f,b
 13346  0050E4                     
 13347                           ; BSR set to: 0
 13348  0050E4  0E96               	movlw	150
 13349  0050E6  5E4F               	subwf	___fltol@exp1^0,f,c
 13350  0050E8                     
 13351                           ; BSR set to: 0
 13352  0050E8  BE4F               	btfsc	___fltol@exp1^0,7,c
 13353  0050EA  EF7B  F028         	goto	u9270
 13354  0050EE  EF79  F028         	goto	u9271
 13355  0050F2                     u9271:
 13356  0050F2  EF91  F028         	goto	l9035
 13357  0050F6                     u9270:
 13358  0050F6                     
 13359                           ; BSR set to: 0
 13360  0050F6  504F               	movf	___fltol@exp1^0,w,c
 13361  0050F8  0A80               	xorlw	128
 13362  0050FA  0F97               	addlw	151
 13363  0050FC  B0D8               	btfsc	status,0,c
 13364  0050FE  EF83  F028         	goto	u9281
 13365  005102  EF85  F028         	goto	u9280
 13366  005106                     u9281:
 13367  005106  EF87  F028         	goto	l9031
 13368  00510A                     u9280:
 13369  00510A  EF4A  F028         	goto	l9011
 13370  00510E                     l9031:
 13371                           
 13372                           ; BSR set to: 0
 13373  00510E  90D8               	bcf	status,0,c
 13374  005110  3370               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13375  005112  336F               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13376  005114  336E               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13377  005116  336D               	rrcf	___fltol@f1& (0+255),f,b
 13378  005118                     
 13379                           ; BSR set to: 0
 13380  005118  3E4F               	incfsz	___fltol@exp1^0,f,c
 13381  00511A  EF87  F028         	goto	l9031
 13382  00511E  EFA9  F028         	goto	l9045
 13383  005122                     l9035:
 13384                           
 13385                           ; BSR set to: 0
 13386  005122  0E1F               	movlw	31
 13387  005124  644F               	cpfsgt	___fltol@exp1^0,c
 13388  005126  EF97  F028         	goto	u9291
 13389  00512A  EF99  F028         	goto	u9290
 13390  00512E                     u9291:
 13391  00512E  EFA1  F028         	goto	l9043
 13392  005132                     u9290:
 13393  005132  EF4A  F028         	goto	l9011
 13394  005136                     l9041:
 13395                           
 13396                           ; BSR set to: 0
 13397  005136  90D8               	bcf	status,0,c
 13398  005138  376D               	rlcf	___fltol@f1& (0+255),f,b
 13399  00513A  376E               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13400  00513C  376F               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13401  00513E  3770               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13402  005140  064F               	decf	___fltol@exp1^0,f,c
 13403  005142                     l9043:
 13404                           
 13405                           ; BSR set to: 0
 13406  005142  504F               	movf	___fltol@exp1^0,w,c
 13407  005144  A4D8               	btfss	status,2,c
 13408  005146  EFA7  F028         	goto	u9301
 13409  00514A  EFA9  F028         	goto	u9300
 13410  00514E                     u9301:
 13411  00514E  EF9B  F028         	goto	l9041
 13412  005152                     u9300:
 13413  005152                     l9045:
 13414                           
 13415                           ; BSR set to: 0
 13416  005152  504E               	movf	___fltol@sign1^0,w,c
 13417  005154  B4D8               	btfsc	status,2,c
 13418  005156  EFAF  F028         	goto	u9311
 13419  00515A  EFB1  F028         	goto	u9310
 13420  00515E                     u9311:
 13421  00515E  EFB9  F028         	goto	l9049
 13422  005162                     u9310:
 13423  005162                     
 13424                           ; BSR set to: 0
 13425  005162  1F70               	comf	(___fltol@f1+3)& (0+255),f,b
 13426  005164  1F6F               	comf	(___fltol@f1+2)& (0+255),f,b
 13427  005166  1F6E               	comf	(___fltol@f1+1)& (0+255),f,b
 13428  005168  6D6D               	negf	___fltol@f1& (0+255),b
 13429  00516A  0E00               	movlw	0
 13430  00516C  236E               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13431  00516E  236F               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13432  005170  2370               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13433  005172                     l9049:
 13434                           
 13435                           ; BSR set to: 0
 13436  005172  C06D  F06D         	movff	___fltol@f1,?___fltol
 13437  005176  C06E  F06E         	movff	___fltol@f1+1,?___fltol+1
 13438  00517A  C06F  F06F         	movff	___fltol@f1+2,?___fltol+2
 13439  00517E  C070  F070         	movff	___fltol@f1+3,?___fltol+3
 13440  005182                     l1224:
 13441                           
 13442                           ; BSR set to: 0
 13443  005182  0012               	return		;funcret
 13444  005184                     __end_of___fltol:
 13445                           	opt callstack 0
 13446                           
 13447 ;; *************** function ___flsub *****************
 13448 ;; Defined at:
 13449 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 13450 ;; Parameters:    Size  Location     Type
 13451 ;;  b               4   24[COMRAM] long 
 13452 ;;  a               4   28[COMRAM] long 
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  4   24[COMRAM] long 
 13457 ;; Registers used:
 13458 ;;		wreg, status,2, status,0, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13464 ;;      Params:         8       0       0       0       0       0       0       0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13466 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13467 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13468 ;;Total ram usage:        8 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    3
 13471 ;; This function calls:
 13472 ;;		___fladd
 13473 ;; This function is called by:
 13474 ;;		_PID
 13475 ;;		_inicializarComportamientoBasico
 13476 ;;		_leerSensores
 13477 ;;		_efgtoa
 13478 ;;		_expf
 13479 ;;		_logf
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           
 13483                           	psect	text45
 13484  00647A                     __ptext45:
 13485                           	opt callstack 0
 13486  00647A                     ___flsub:
 13487                           	opt callstack 22
 13488  00647A  0E00               	movlw	0
 13489  00647C  1A1D               	xorwf	___flsub@a^0,f,c
 13490  00647E  0E00               	movlw	0
 13491  006480  1A1E               	xorwf	(___flsub@a+1)^0,f,c
 13492  006482  0E00               	movlw	0
 13493  006484  1A1F               	xorwf	(___flsub@a+2)^0,f,c
 13494  006486  0E80               	movlw	128
 13495  006488  1A20               	xorwf	(___flsub@a+3)^0,f,c
 13496  00648A  C019  F006         	movff	___flsub@b,___fladd@b
 13497  00648E  C01A  F007         	movff	___flsub@b+1,___fladd@b+1
 13498  006492  C01B  F008         	movff	___flsub@b+2,___fladd@b+2
 13499  006496  C01C  F009         	movff	___flsub@b+3,___fladd@b+3
 13500  00649A  C01D  F00A         	movff	___flsub@a,___fladd@a
 13501  00649E  C01E  F00B         	movff	___flsub@a+1,___fladd@a+1
 13502  0064A2  C01F  F00C         	movff	___flsub@a+2,___fladd@a+2
 13503  0064A6  C020  F00D         	movff	___flsub@a+3,___fladd@a+3
 13504  0064AA  EC28  F013         	call	___fladd	;wreg free
 13505  0064AE  C006  F019         	movff	?___fladd,?___flsub
 13506  0064B2  C007  F01A         	movff	?___fladd+1,?___flsub+1
 13507  0064B6  C008  F01B         	movff	?___fladd+2,?___flsub+2
 13508  0064BA  C009  F01C         	movff	?___fladd+3,?___flsub+3
 13509  0064BE  0012               	return		;funcret
 13510  0064C0                     __end_of___flsub:
 13511                           	opt callstack 0
 13512                           
 13513 ;; *************** function ___fladd *****************
 13514 ;; Defined at:
 13515 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 13516 ;; Parameters:    Size  Location     Type
 13517 ;;  b               4    5[COMRAM] long 
 13518 ;;  a               4    9[COMRAM] long 
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;  grs             1   20[COMRAM] unsigned char 
 13521 ;;  bexp            1   19[COMRAM] unsigned char 
 13522 ;;  aexp            1   18[COMRAM] unsigned char 
 13523 ;;  signs           1   17[COMRAM] unsigned char 
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  4    5[COMRAM] unsigned char 
 13526 ;; Registers used:
 13527 ;;		wreg, status,2, status,0
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13533 ;;      Params:         8       0       0       0       0       0       0       0       0
 13534 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13535 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13536 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13537 ;;Total ram usage:       16 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; Hardware stack levels required when called:    2
 13540 ;; This function calls:
 13541 ;;		Nothing
 13542 ;; This function is called by:
 13543 ;;		_leerSensores
 13544 ;;		_efgtoa
 13545 ;;		___flsub
 13546 ;;		_expf
 13547 ;;		_logf
 13548 ;; This function uses a non-reentrant model
 13549 ;;
 13550                           
 13551                           	psect	text46
 13552  002650                     __ptext46:
 13553                           	opt callstack 0
 13554  002650                     ___fladd:
 13555                           	opt callstack 22
 13556  002650  5009               	movf	(___fladd@b+3)^0,w,c
 13557  002652  0B80               	andlw	128
 13558  002654  6E12               	movwf	___fladd@signs^0,c
 13559  002656  5009               	movf	(___fladd@b+3)^0,w,c
 13560  002658  2409               	addwf	(___fladd@b+3)^0,w,c
 13561  00265A  6E14               	movwf	___fladd@bexp^0,c
 13562  00265C  AE08               	btfss	(___fladd@b+2)^0,7,c
 13563  00265E  EF33  F013         	goto	u8381
 13564  002662  EF35  F013         	goto	u8380
 13565  002666                     u8381:
 13566  002666  EF36  F013         	goto	l8509
 13567  00266A                     u8380:
 13568  00266A  8014               	bsf	___fladd@bexp^0,0,c
 13569  00266C                     l8509:
 13570  00266C  5014               	movf	___fladd@bexp^0,w,c
 13571  00266E  B4D8               	btfsc	status,2,c
 13572  002670  EF3C  F013         	goto	u8391
 13573  002674  EF3E  F013         	goto	u8390
 13574  002678                     u8391:
 13575  002678  EF53  F013         	goto	l8519
 13576  00267C                     u8390:
 13577  00267C  2814               	incf	___fladd@bexp^0,w,c
 13578  00267E  A4D8               	btfss	status,2,c
 13579  002680  EF44  F013         	goto	u8401
 13580  002684  EF46  F013         	goto	u8400
 13581  002688                     u8401:
 13582  002688  EF4E  F013         	goto	l8515
 13583  00268C                     u8400:
 13584  00268C  0E00               	movlw	0
 13585  00268E  6E06               	movwf	___fladd@b^0,c
 13586  002690  0E00               	movlw	0
 13587  002692  6E07               	movwf	(___fladd@b+1)^0,c
 13588  002694  0E00               	movlw	0
 13589  002696  6E08               	movwf	(___fladd@b+2)^0,c
 13590  002698  0E00               	movlw	0
 13591  00269A  6E09               	movwf	(___fladd@b+3)^0,c
 13592  00269C                     l8515:
 13593  00269C  8E08               	bsf	(___fladd@b+2)^0,7,c
 13594  00269E  0E00               	movlw	0
 13595  0026A0  6E09               	movwf	(___fladd@b+3)^0,c
 13596  0026A2  EF5B  F013         	goto	l8521
 13597  0026A6                     l8519:
 13598  0026A6  0E00               	movlw	0
 13599  0026A8  6E06               	movwf	___fladd@b^0,c
 13600  0026AA  0E00               	movlw	0
 13601  0026AC  6E07               	movwf	(___fladd@b+1)^0,c
 13602  0026AE  0E00               	movlw	0
 13603  0026B0  6E08               	movwf	(___fladd@b+2)^0,c
 13604  0026B2  0E00               	movlw	0
 13605  0026B4  6E09               	movwf	(___fladd@b+3)^0,c
 13606  0026B6                     l8521:
 13607  0026B6  500D               	movf	(___fladd@a+3)^0,w,c
 13608  0026B8  0B80               	andlw	128
 13609  0026BA  6E13               	movwf	___fladd@aexp^0,c
 13610  0026BC  5012               	movf	___fladd@signs^0,w,c
 13611  0026BE  1813               	xorwf	___fladd@aexp^0,w,c
 13612  0026C0  B4D8               	btfsc	status,2,c
 13613  0026C2  EF65  F013         	goto	u8411
 13614  0026C6  EF67  F013         	goto	u8410
 13615  0026CA                     u8411:
 13616  0026CA  EF68  F013         	goto	l8527
 13617  0026CE                     u8410:
 13618  0026CE  8C12               	bsf	___fladd@signs^0,6,c
 13619  0026D0                     l8527:
 13620  0026D0  500D               	movf	(___fladd@a+3)^0,w,c
 13621  0026D2  240D               	addwf	(___fladd@a+3)^0,w,c
 13622  0026D4  6E13               	movwf	___fladd@aexp^0,c
 13623  0026D6  AE0C               	btfss	(___fladd@a+2)^0,7,c
 13624  0026D8  EF70  F013         	goto	u8421
 13625  0026DC  EF72  F013         	goto	u8420
 13626  0026E0                     u8421:
 13627  0026E0  EF73  F013         	goto	l8533
 13628  0026E4                     u8420:
 13629  0026E4  8013               	bsf	___fladd@aexp^0,0,c
 13630  0026E6                     l8533:
 13631  0026E6  5013               	movf	___fladd@aexp^0,w,c
 13632  0026E8  B4D8               	btfsc	status,2,c
 13633  0026EA  EF79  F013         	goto	u8431
 13634  0026EE  EF7B  F013         	goto	u8430
 13635  0026F2                     u8431:
 13636  0026F2  EF90  F013         	goto	l8543
 13637  0026F6                     u8430:
 13638  0026F6  2813               	incf	___fladd@aexp^0,w,c
 13639  0026F8  A4D8               	btfss	status,2,c
 13640  0026FA  EF81  F013         	goto	u8441
 13641  0026FE  EF83  F013         	goto	u8440
 13642  002702                     u8441:
 13643  002702  EF8B  F013         	goto	l8539
 13644  002706                     u8440:
 13645  002706  0E00               	movlw	0
 13646  002708  6E0A               	movwf	___fladd@a^0,c
 13647  00270A  0E00               	movlw	0
 13648  00270C  6E0B               	movwf	(___fladd@a+1)^0,c
 13649  00270E  0E00               	movlw	0
 13650  002710  6E0C               	movwf	(___fladd@a+2)^0,c
 13651  002712  0E00               	movlw	0
 13652  002714  6E0D               	movwf	(___fladd@a+3)^0,c
 13653  002716                     l8539:
 13654  002716  8E0C               	bsf	(___fladd@a+2)^0,7,c
 13655  002718  0E00               	movlw	0
 13656  00271A  6E0D               	movwf	(___fladd@a+3)^0,c
 13657  00271C  EF98  F013         	goto	l8545
 13658  002720                     l8543:
 13659  002720  0E00               	movlw	0
 13660  002722  6E0A               	movwf	___fladd@a^0,c
 13661  002724  0E00               	movlw	0
 13662  002726  6E0B               	movwf	(___fladd@a+1)^0,c
 13663  002728  0E00               	movlw	0
 13664  00272A  6E0C               	movwf	(___fladd@a+2)^0,c
 13665  00272C  0E00               	movlw	0
 13666  00272E  6E0D               	movwf	(___fladd@a+3)^0,c
 13667  002730                     l8545:
 13668  002730  5014               	movf	___fladd@bexp^0,w,c
 13669  002732  5C13               	subwf	___fladd@aexp^0,w,c
 13670  002734  B0D8               	btfsc	status,0,c
 13671  002736  EF9F  F013         	goto	u8451
 13672  00273A  EFA1  F013         	goto	u8450
 13673  00273E                     u8451:
 13674  00273E  EFC8  F013         	goto	l8581
 13675  002742                     u8450:
 13676  002742  AC12               	btfss	___fladd@signs^0,6,c
 13677  002744  EFA6  F013         	goto	u8461
 13678  002748  EFA8  F013         	goto	u8460
 13679  00274C                     u8461:
 13680  00274C  EFAA  F013         	goto	l8551
 13681  002750                     u8460:
 13682  002750  0E80               	movlw	128
 13683  002752  1A12               	xorwf	___fladd@signs^0,f,c
 13684  002754                     l8551:
 13685  002754  C014  F015         	movff	___fladd@bexp,___fladd@grs
 13686  002758  C013  F014         	movff	___fladd@aexp,___fladd@bexp
 13687  00275C  C015  F013         	movff	___fladd@grs,___fladd@aexp
 13688  002760  C006  F015         	movff	___fladd@b,___fladd@grs
 13689  002764  C00A  F006         	movff	___fladd@a,___fladd@b
 13690  002768  C015  F00A         	movff	___fladd@grs,___fladd@a
 13691  00276C  C007  F015         	movff	___fladd@b+1,___fladd@grs
 13692  002770  C00B  F007         	movff	___fladd@a+1,___fladd@b+1
 13693  002774  C015  F00B         	movff	___fladd@grs,___fladd@a+1
 13694  002778  C008  F015         	movff	___fladd@b+2,___fladd@grs
 13695  00277C  C00C  F008         	movff	___fladd@a+2,___fladd@b+2
 13696  002780  C015  F00C         	movff	___fladd@grs,___fladd@a+2
 13697  002784  C009  F015         	movff	___fladd@b+3,___fladd@grs
 13698  002788  C00D  F009         	movff	___fladd@a+3,___fladd@b+3
 13699  00278C  C015  F00D         	movff	___fladd@grs,___fladd@a+3
 13700  002790                     l8581:
 13701  002790  0E00               	movlw	0
 13702  002792  6E15               	movwf	___fladd@grs^0,c
 13703  002794  5014               	movf	___fladd@bexp^0,w,c
 13704  002796  C013  F00E         	movff	___fladd@aexp,??___fladd
 13705  00279A  6A0F               	clrf	(??___fladd+1)^0,c
 13706  00279C  5E0E               	subwf	??___fladd^0,f,c
 13707  00279E  0E00               	movlw	0
 13708  0027A0  5A0F               	subwfb	(??___fladd+1)^0,f,c
 13709  0027A2  BE0F               	btfsc	(??___fladd+1)^0,7,c
 13710  0027A4  EFDD  F013         	goto	u8471
 13711  0027A8  500F               	movf	(??___fladd+1)^0,w,c
 13712  0027AA  E109               	bnz	u8470
 13713  0027AC  0E1A               	movlw	26
 13714  0027AE  5C0E               	subwf	??___fladd^0,w,c
 13715  0027B0  A0D8               	btfss	status,0,c
 13716  0027B2  EFDD  F013         	goto	u8471
 13717  0027B6  EFDF  F013         	goto	u8470
 13718  0027BA                     u8471:
 13719  0027BA  EF16  F014         	goto	l1456
 13720  0027BE                     u8470:
 13721  0027BE  5006               	movf	___fladd@b^0,w,c
 13722  0027C0  1007               	iorwf	(___fladd@b+1)^0,w,c
 13723  0027C2  1008               	iorwf	(___fladd@b+2)^0,w,c
 13724  0027C4  1009               	iorwf	(___fladd@b+3)^0,w,c
 13725  0027C6  A4D8               	btfss	status,2,c
 13726  0027C8  EFE8  F013         	goto	u8481
 13727  0027CC  EFEB  F013         	goto	u8480
 13728  0027D0                     u8481:
 13729  0027D0  0E01               	movlw	1
 13730  0027D2  EFEC  F013         	goto	u8490
 13731  0027D6                     u8480:
 13732  0027D6  0E00               	movlw	0
 13733  0027D8                     u8490:
 13734  0027D8  6E15               	movwf	___fladd@grs^0,c
 13735  0027DA  0E00               	movlw	0
 13736  0027DC  6E06               	movwf	___fladd@b^0,c
 13737  0027DE  0E00               	movlw	0
 13738  0027E0  6E07               	movwf	(___fladd@b+1)^0,c
 13739  0027E2  0E00               	movlw	0
 13740  0027E4  6E08               	movwf	(___fladd@b+2)^0,c
 13741  0027E6  0E00               	movlw	0
 13742  0027E8  6E09               	movwf	(___fladd@b+3)^0,c
 13743  0027EA  C013  F014         	movff	___fladd@aexp,___fladd@bexp
 13744  0027EE  EF1F  F014         	goto	l1455
 13745  0027F2                     l1457:
 13746  0027F2  A015               	btfss	___fladd@grs^0,0,c
 13747  0027F4  EFFE  F013         	goto	u8501
 13748  0027F8  EF00  F014         	goto	u8500
 13749  0027FC                     u8501:
 13750  0027FC  EF06  F014         	goto	l8593
 13751  002800                     u8500:
 13752  002800  90D8               	bcf	status,0,c
 13753  002802  3015               	rrcf	___fladd@grs^0,w,c
 13754  002804  0901               	iorlw	1
 13755  002806  6E15               	movwf	___fladd@grs^0,c
 13756  002808  EF08  F014         	goto	l8595
 13757  00280C                     l8593:
 13758  00280C  90D8               	bcf	status,0,c
 13759  00280E  3215               	rrcf	___fladd@grs^0,f,c
 13760  002810                     l8595:
 13761  002810  A006               	btfss	___fladd@b^0,0,c
 13762  002812  EF0D  F014         	goto	u8511
 13763  002816  EF0F  F014         	goto	u8510
 13764  00281A                     u8511:
 13765  00281A  EF10  F014         	goto	l8599
 13766  00281E                     u8510:
 13767  00281E  8E15               	bsf	___fladd@grs^0,7,c
 13768  002820                     l8599:
 13769  002820  3409               	rlcf	(___fladd@b+3)^0,w,c
 13770  002822  3209               	rrcf	(___fladd@b+3)^0,f,c
 13771  002824  3208               	rrcf	(___fladd@b+2)^0,f,c
 13772  002826  3207               	rrcf	(___fladd@b+1)^0,f,c
 13773  002828  3206               	rrcf	___fladd@b^0,f,c
 13774  00282A  2A14               	incf	___fladd@bexp^0,f,c
 13775  00282C                     l1456:
 13776  00282C  5013               	movf	___fladd@aexp^0,w,c
 13777  00282E  5C14               	subwf	___fladd@bexp^0,w,c
 13778  002830  A0D8               	btfss	status,0,c
 13779  002832  EF1D  F014         	goto	u8521
 13780  002836  EF1F  F014         	goto	u8520
 13781  00283A                     u8521:
 13782  00283A  EFF9  F013         	goto	l1457
 13783  00283E                     u8520:
 13784  00283E                     l1455:
 13785  00283E  BC12               	btfsc	___fladd@signs^0,6,c
 13786  002840  EF24  F014         	goto	u8531
 13787  002844  EF26  F014         	goto	u8530
 13788  002848                     u8531:
 13789  002848  EF66  F014         	goto	l8627
 13790  00284C                     u8530:
 13791  00284C  5014               	movf	___fladd@bexp^0,w,c
 13792  00284E  A4D8               	btfss	status,2,c
 13793  002850  EF2C  F014         	goto	u8541
 13794  002854  EF2E  F014         	goto	u8540
 13795  002858                     u8541:
 13796  002858  EF38  F014         	goto	l8609
 13797  00285C                     u8540:
 13798  00285C  0E00               	movlw	0
 13799  00285E  6E06               	movwf	?___fladd^0,c
 13800  002860  0E00               	movlw	0
 13801  002862  6E07               	movwf	(?___fladd+1)^0,c
 13802  002864  0E00               	movlw	0
 13803  002866  6E08               	movwf	(?___fladd+2)^0,c
 13804  002868  0E00               	movlw	0
 13805  00286A  6E09               	movwf	(?___fladd+3)^0,c
 13806  00286C  EF87  F015         	goto	l1464
 13807  002870                     l8609:
 13808  002870  500A               	movf	___fladd@a^0,w,c
 13809  002872  2606               	addwf	___fladd@b^0,f,c
 13810  002874  500B               	movf	(___fladd@a+1)^0,w,c
 13811  002876  2207               	addwfc	(___fladd@b+1)^0,f,c
 13812  002878  500C               	movf	(___fladd@a+2)^0,w,c
 13813  00287A  2208               	addwfc	(___fladd@b+2)^0,f,c
 13814  00287C  500D               	movf	(___fladd@a+3)^0,w,c
 13815  00287E  2209               	addwfc	(___fladd@b+3)^0,f,c
 13816  002880  A009               	btfss	(___fladd@b+3)^0,0,c
 13817  002882  EF45  F014         	goto	u8551
 13818  002886  EF47  F014         	goto	u8550
 13819  00288A                     u8551:
 13820  00288A  EFF3  F014         	goto	l8663
 13821  00288E                     u8550:
 13822  00288E  A015               	btfss	___fladd@grs^0,0,c
 13823  002890  EF4C  F014         	goto	u8561
 13824  002894  EF4E  F014         	goto	u8560
 13825  002898                     u8561:
 13826  002898  EF54  F014         	goto	l8617
 13827  00289C                     u8560:
 13828  00289C  90D8               	bcf	status,0,c
 13829  00289E  3015               	rrcf	___fladd@grs^0,w,c
 13830  0028A0  0901               	iorlw	1
 13831  0028A2  6E15               	movwf	___fladd@grs^0,c
 13832  0028A4  EF56  F014         	goto	l8619
 13833  0028A8                     l8617:
 13834  0028A8  90D8               	bcf	status,0,c
 13835  0028AA  3215               	rrcf	___fladd@grs^0,f,c
 13836  0028AC                     l8619:
 13837  0028AC  A006               	btfss	___fladd@b^0,0,c
 13838  0028AE  EF5B  F014         	goto	u8571
 13839  0028B2  EF5D  F014         	goto	u8570
 13840  0028B6                     u8571:
 13841  0028B6  EF5E  F014         	goto	l8623
 13842  0028BA                     u8570:
 13843  0028BA  8E15               	bsf	___fladd@grs^0,7,c
 13844  0028BC                     l8623:
 13845  0028BC  3409               	rlcf	(___fladd@b+3)^0,w,c
 13846  0028BE  3209               	rrcf	(___fladd@b+3)^0,f,c
 13847  0028C0  3208               	rrcf	(___fladd@b+2)^0,f,c
 13848  0028C2  3207               	rrcf	(___fladd@b+1)^0,f,c
 13849  0028C4  3206               	rrcf	___fladd@b^0,f,c
 13850  0028C6  2A14               	incf	___fladd@bexp^0,f,c
 13851  0028C8  EFF3  F014         	goto	l8663
 13852  0028CC                     l8627:
 13853  0028CC  500A               	movf	___fladd@a^0,w,c
 13854  0028CE  5C06               	subwf	___fladd@b^0,w,c
 13855  0028D0  500B               	movf	(___fladd@a+1)^0,w,c
 13856  0028D2  5807               	subwfb	(___fladd@b+1)^0,w,c
 13857  0028D4  500C               	movf	(___fladd@a+2)^0,w,c
 13858  0028D6  5808               	subwfb	(___fladd@b+2)^0,w,c
 13859  0028D8  5009               	movf	(___fladd@b+3)^0,w,c
 13860  0028DA  0A80               	xorlw	128
 13861  0028DC  6E0E               	movwf	??___fladd^0,c
 13862  0028DE  500D               	movf	(___fladd@a+3)^0,w,c
 13863  0028E0  0A80               	xorlw	128
 13864  0028E2  580E               	subwfb	??___fladd^0,w,c
 13865  0028E4  B0D8               	btfsc	status,0,c
 13866  0028E6  EF77  F014         	goto	u8581
 13867  0028EA  EF79  F014         	goto	u8580
 13868  0028EE                     u8581:
 13869  0028EE  EFA4  F014         	goto	l8637
 13870  0028F2                     u8580:
 13871  0028F2  5006               	movf	___fladd@b^0,w,c
 13872  0028F4  5C0A               	subwf	___fladd@a^0,w,c
 13873  0028F6  6E0E               	movwf	??___fladd^0,c
 13874  0028F8  5007               	movf	(___fladd@b+1)^0,w,c
 13875  0028FA  580B               	subwfb	(___fladd@a+1)^0,w,c
 13876  0028FC  6E0F               	movwf	(??___fladd+1)^0,c
 13877  0028FE  5008               	movf	(___fladd@b+2)^0,w,c
 13878  002900  580C               	subwfb	(___fladd@a+2)^0,w,c
 13879  002902  6E10               	movwf	(??___fladd+2)^0,c
 13880  002904  5009               	movf	(___fladd@b+3)^0,w,c
 13881  002906  580D               	subwfb	(___fladd@a+3)^0,w,c
 13882  002908  6E11               	movwf	(??___fladd+3)^0,c
 13883  00290A  0EFF               	movlw	255
 13884  00290C  240E               	addwf	??___fladd^0,w,c
 13885  00290E  6E06               	movwf	___fladd@b^0,c
 13886  002910  0EFF               	movlw	255
 13887  002912  200F               	addwfc	(??___fladd+1)^0,w,c
 13888  002914  6E07               	movwf	(___fladd@b+1)^0,c
 13889  002916  0EFF               	movlw	255
 13890  002918  2010               	addwfc	(??___fladd+2)^0,w,c
 13891  00291A  6E08               	movwf	(___fladd@b+2)^0,c
 13892  00291C  0EFF               	movlw	255
 13893  00291E  2011               	addwfc	(??___fladd+3)^0,w,c
 13894  002920  6E09               	movwf	(___fladd@b+3)^0,c
 13895  002922  0E80               	movlw	128
 13896  002924  1A12               	xorwf	___fladd@signs^0,f,c
 13897  002926  6C15               	negf	___fladd@grs^0,c
 13898  002928  5015               	movf	___fladd@grs^0,w,c
 13899  00292A  A4D8               	btfss	status,2,c
 13900  00292C  EF9A  F014         	goto	u8591
 13901  002930  EF9C  F014         	goto	u8590
 13902  002934                     u8591:
 13903  002934  EFAC  F014         	goto	l1472
 13904  002938                     u8590:
 13905  002938  0E01               	movlw	1
 13906  00293A  2606               	addwf	___fladd@b^0,f,c
 13907  00293C  0E00               	movlw	0
 13908  00293E  2207               	addwfc	(___fladd@b+1)^0,f,c
 13909  002940  2208               	addwfc	(___fladd@b+2)^0,f,c
 13910  002942  2209               	addwfc	(___fladd@b+3)^0,f,c
 13911  002944  EFAC  F014         	goto	l1472
 13912  002948                     l8637:
 13913  002948  500A               	movf	___fladd@a^0,w,c
 13914  00294A  5E06               	subwf	___fladd@b^0,f,c
 13915  00294C  500B               	movf	(___fladd@a+1)^0,w,c
 13916  00294E  5A07               	subwfb	(___fladd@b+1)^0,f,c
 13917  002950  500C               	movf	(___fladd@a+2)^0,w,c
 13918  002952  5A08               	subwfb	(___fladd@b+2)^0,f,c
 13919  002954  500D               	movf	(___fladd@a+3)^0,w,c
 13920  002956  5A09               	subwfb	(___fladd@b+3)^0,f,c
 13921  002958                     l1472:
 13922  002958  5006               	movf	___fladd@b^0,w,c
 13923  00295A  1007               	iorwf	(___fladd@b+1)^0,w,c
 13924  00295C  1008               	iorwf	(___fladd@b+2)^0,w,c
 13925  00295E  1009               	iorwf	(___fladd@b+3)^0,w,c
 13926  002960  A4D8               	btfss	status,2,c
 13927  002962  EFB5  F014         	goto	u8601
 13928  002966  EFB7  F014         	goto	u8600
 13929  00296A                     u8601:
 13930  00296A  EFEC  F014         	goto	l8661
 13931  00296E                     u8600:
 13932  00296E  5015               	movf	___fladd@grs^0,w,c
 13933  002970  A4D8               	btfss	status,2,c
 13934  002972  EFBD  F014         	goto	u8611
 13935  002976  EFBF  F014         	goto	u8610
 13936  00297A                     u8611:
 13937  00297A  EFEC  F014         	goto	l8661
 13938  00297E                     u8610:
 13939  00297E  0E00               	movlw	0
 13940  002980  6E06               	movwf	?___fladd^0,c
 13941  002982  0E00               	movlw	0
 13942  002984  6E07               	movwf	(?___fladd+1)^0,c
 13943  002986  0E00               	movlw	0
 13944  002988  6E08               	movwf	(?___fladd+2)^0,c
 13945  00298A  0E00               	movlw	0
 13946  00298C  6E09               	movwf	(?___fladd+3)^0,c
 13947  00298E  EF87  F015         	goto	l1464
 13948  002992                     l8645:
 13949  002992  90D8               	bcf	status,0,c
 13950  002994  3606               	rlcf	___fladd@b^0,f,c
 13951  002996  3607               	rlcf	(___fladd@b+1)^0,f,c
 13952  002998  3608               	rlcf	(___fladd@b+2)^0,f,c
 13953  00299A  3609               	rlcf	(___fladd@b+3)^0,f,c
 13954  00299C  AE15               	btfss	___fladd@grs^0,7,c
 13955  00299E  EFD3  F014         	goto	u8621
 13956  0029A2  EFD5  F014         	goto	u8620
 13957  0029A6                     u8621:
 13958  0029A6  EFD6  F014         	goto	l8651
 13959  0029AA                     u8620:
 13960  0029AA  8006               	bsf	___fladd@b^0,0,c
 13961  0029AC                     l8651:
 13962  0029AC  A015               	btfss	___fladd@grs^0,0,c
 13963  0029AE  EFDB  F014         	goto	u8631
 13964  0029B2  EFDD  F014         	goto	u8630
 13965  0029B6                     u8631:
 13966  0029B6  EFE1  F014         	goto	l8655
 13967  0029BA                     u8630:
 13968  0029BA  80D8               	bsf	status,0,c
 13969  0029BC  3615               	rlcf	___fladd@grs^0,f,c
 13970  0029BE  EFE3  F014         	goto	l8657
 13971  0029C2                     l8655:
 13972  0029C2  90D8               	bcf	status,0,c
 13973  0029C4  3615               	rlcf	___fladd@grs^0,f,c
 13974  0029C6                     l8657:
 13975  0029C6  5014               	movf	___fladd@bexp^0,w,c
 13976  0029C8  B4D8               	btfsc	status,2,c
 13977  0029CA  EFE9  F014         	goto	u8641
 13978  0029CE  EFEB  F014         	goto	u8640
 13979  0029D2                     u8641:
 13980  0029D2  EFEC  F014         	goto	l8661
 13981  0029D6                     u8640:
 13982  0029D6  0614               	decf	___fladd@bexp^0,f,c
 13983  0029D8                     l8661:
 13984  0029D8  AE08               	btfss	(___fladd@b+2)^0,7,c
 13985  0029DA  EFF1  F014         	goto	u8651
 13986  0029DE  EFF3  F014         	goto	u8650
 13987  0029E2                     u8651:
 13988  0029E2  EFC9  F014         	goto	l8645
 13989  0029E6                     u8650:
 13990  0029E6                     l8663:
 13991  0029E6  0E00               	movlw	0
 13992  0029E8  6E13               	movwf	___fladd@aexp^0,c
 13993  0029EA  AE15               	btfss	___fladd@grs^0,7,c
 13994  0029EC  EFFA  F014         	goto	u8661
 13995  0029F0  EFFC  F014         	goto	u8660
 13996  0029F4                     u8661:
 13997  0029F4  EF14  F015         	goto	l1481
 13998  0029F8                     u8660:
 13999  0029F8  C015  F00E         	movff	___fladd@grs,??___fladd
 14000  0029FC  0E7F               	movlw	127
 14001  0029FE  160E               	andwf	??___fladd^0,f,c
 14002  002A00  B4D8               	btfsc	status,2,c
 14003  002A02  EF05  F015         	goto	u8671
 14004  002A06  EF07  F015         	goto	u8670
 14005  002A0A                     u8671:
 14006  002A0A  EF0B  F015         	goto	l1482
 14007  002A0E                     u8670:
 14008  002A0E                     l8669:
 14009  002A0E  0E01               	movlw	1
 14010  002A10  6E13               	movwf	___fladd@aexp^0,c
 14011  002A12  EF14  F015         	goto	l1481
 14012  002A16                     l1482:
 14013  002A16  A006               	btfss	___fladd@b^0,0,c
 14014  002A18  EF10  F015         	goto	u8681
 14015  002A1C  EF12  F015         	goto	u8680
 14016  002A20                     u8681:
 14017  002A20  EF14  F015         	goto	l1481
 14018  002A24                     u8680:
 14019  002A24  EF07  F015         	goto	l8669
 14020  002A28                     l1481:
 14021  002A28  5013               	movf	___fladd@aexp^0,w,c
 14022  002A2A  B4D8               	btfsc	status,2,c
 14023  002A2C  EF1A  F015         	goto	u8691
 14024  002A30  EF1C  F015         	goto	u8690
 14025  002A34                     u8691:
 14026  002A34  EF47  F015         	goto	l8681
 14027  002A38                     u8690:
 14028  002A38  0E01               	movlw	1
 14029  002A3A  2606               	addwf	___fladd@b^0,f,c
 14030  002A3C  0E00               	movlw	0
 14031  002A3E  2207               	addwfc	(___fladd@b+1)^0,f,c
 14032  002A40  2208               	addwfc	(___fladd@b+2)^0,f,c
 14033  002A42  2209               	addwfc	(___fladd@b+3)^0,f,c
 14034  002A44  A009               	btfss	(___fladd@b+3)^0,0,c
 14035  002A46  EF27  F015         	goto	u8701
 14036  002A4A  EF29  F015         	goto	u8700
 14037  002A4E                     u8701:
 14038  002A4E  EF47  F015         	goto	l8681
 14039  002A52                     u8700:
 14040  002A52  C006  F00E         	movff	___fladd@b,??___fladd
 14041  002A56  C007  F00F         	movff	___fladd@b+1,??___fladd+1
 14042  002A5A  C008  F010         	movff	___fladd@b+2,??___fladd+2
 14043  002A5E  C009  F011         	movff	___fladd@b+3,??___fladd+3
 14044  002A62  3411               	rlcf	(??___fladd+3)^0,w,c
 14045  002A64  3211               	rrcf	(??___fladd+3)^0,f,c
 14046  002A66  3210               	rrcf	(??___fladd+2)^0,f,c
 14047  002A68  320F               	rrcf	(??___fladd+1)^0,f,c
 14048  002A6A  320E               	rrcf	??___fladd^0,f,c
 14049  002A6C  C00E  F006         	movff	??___fladd,___fladd@b
 14050  002A70  C00F  F007         	movff	??___fladd+1,___fladd@b+1
 14051  002A74  C010  F008         	movff	??___fladd+2,___fladd@b+2
 14052  002A78  C011  F009         	movff	??___fladd+3,___fladd@b+3
 14053  002A7C  2814               	incf	___fladd@bexp^0,w,c
 14054  002A7E  B4D8               	btfsc	status,2,c
 14055  002A80  EF44  F015         	goto	u8711
 14056  002A84  EF46  F015         	goto	u8710
 14057  002A88                     u8711:
 14058  002A88  EF47  F015         	goto	l8681
 14059  002A8C                     u8710:
 14060  002A8C  2A14               	incf	___fladd@bexp^0,f,c
 14061  002A8E                     l8681:
 14062  002A8E  2814               	incf	___fladd@bexp^0,w,c
 14063  002A90  B4D8               	btfsc	status,2,c
 14064  002A92  EF4D  F015         	goto	u8721
 14065  002A96  EF4F  F015         	goto	u8720
 14066  002A9A                     u8721:
 14067  002A9A  EF57  F015         	goto	l8685
 14068  002A9E                     u8720:
 14069  002A9E  5014               	movf	___fladd@bexp^0,w,c
 14070  002AA0  A4D8               	btfss	status,2,c
 14071  002AA2  EF55  F015         	goto	u8731
 14072  002AA6  EF57  F015         	goto	u8730
 14073  002AAA                     u8731:
 14074  002AAA  EF69  F015         	goto	l8689
 14075  002AAE                     u8730:
 14076  002AAE                     l8685:
 14077  002AAE  0E00               	movlw	0
 14078  002AB0  6E06               	movwf	___fladd@b^0,c
 14079  002AB2  0E00               	movlw	0
 14080  002AB4  6E07               	movwf	(___fladd@b+1)^0,c
 14081  002AB6  0E00               	movlw	0
 14082  002AB8  6E08               	movwf	(___fladd@b+2)^0,c
 14083  002ABA  0E00               	movlw	0
 14084  002ABC  6E09               	movwf	(___fladd@b+3)^0,c
 14085  002ABE  5014               	movf	___fladd@bexp^0,w,c
 14086  002AC0  A4D8               	btfss	status,2,c
 14087  002AC2  EF65  F015         	goto	u8741
 14088  002AC6  EF67  F015         	goto	u8740
 14089  002ACA                     u8741:
 14090  002ACA  EF69  F015         	goto	l8689
 14091  002ACE                     u8740:
 14092  002ACE  0E00               	movlw	0
 14093  002AD0  6E12               	movwf	___fladd@signs^0,c
 14094  002AD2                     l8689:
 14095  002AD2  A014               	btfss	___fladd@bexp^0,0,c
 14096  002AD4  EF6E  F015         	goto	u8751
 14097  002AD8  EF70  F015         	goto	u8750
 14098  002ADC                     u8751:
 14099  002ADC  EF73  F015         	goto	l8693
 14100  002AE0                     u8750:
 14101  002AE0  8E08               	bsf	(___fladd@b+2)^0,7,c
 14102  002AE2  EF74  F015         	goto	l8695
 14103  002AE6                     l8693:
 14104  002AE6  9E08               	bcf	(___fladd@b+2)^0,7,c
 14105  002AE8                     l8695:
 14106  002AE8  90D8               	bcf	status,0,c
 14107  002AEA  3014               	rrcf	___fladd@bexp^0,w,c
 14108  002AEC  6E09               	movwf	(___fladd@b+3)^0,c
 14109  002AEE  AE12               	btfss	___fladd@signs^0,7,c
 14110  002AF0  EF7C  F015         	goto	u8761
 14111  002AF4  EF7E  F015         	goto	u8760
 14112  002AF8                     u8761:
 14113  002AF8  EF7F  F015         	goto	l8701
 14114  002AFC                     u8760:
 14115  002AFC  8E09               	bsf	(___fladd@b+3)^0,7,c
 14116  002AFE                     l8701:
 14117  002AFE  C006  F006         	movff	___fladd@b,?___fladd
 14118  002B02  C007  F007         	movff	___fladd@b+1,?___fladd+1
 14119  002B06  C008  F008         	movff	___fladd@b+2,?___fladd+2
 14120  002B0A  C009  F009         	movff	___fladd@b+3,?___fladd+3
 14121  002B0E                     l1464:
 14122  002B0E  0012               	return		;funcret
 14123  002B10                     __end_of___fladd:
 14124                           	opt callstack 0
 14125                           
 14126 ;; *************** function ___flneg *****************
 14127 ;; Defined at:
 14128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;  f1              4   57[COMRAM] unsigned char 
 14131 ;; Auto vars:     Size  Location     Type
 14132 ;;		None
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  4   57[COMRAM] unsigned char 
 14135 ;; Registers used:
 14136 ;;		wreg, status,2, status,0
 14137 ;; Tracked objects:
 14138 ;;		On entry : 0/0
 14139 ;;		On exit  : 0/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14142 ;;      Params:         4       0       0       0       0       0       0       0       0
 14143 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14145 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14146 ;;Total ram usage:        4 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    2
 14149 ;; This function calls:
 14150 ;;		Nothing
 14151 ;; This function is called by:
 14152 ;;		_myPow
 14153 ;;		_efgtoa
 14154 ;; This function uses a non-reentrant model
 14155 ;;
 14156                           
 14157                           	psect	text47
 14158  006604                     __ptext47:
 14159                           	opt callstack 0
 14160  006604                     ___flneg:
 14161                           	opt callstack 23
 14162  006604  503A               	movf	___flneg@f1^0,w,c
 14163  006606  103B               	iorwf	(___flneg@f1+1)^0,w,c
 14164  006608  103C               	iorwf	(___flneg@f1+2)^0,w,c
 14165  00660A  103D               	iorwf	(___flneg@f1+3)^0,w,c
 14166  00660C  B4D8               	btfsc	status,2,c
 14167  00660E  EF0B  F033         	goto	u9241
 14168  006612  EF0D  F033         	goto	u9240
 14169  006616                     u9241:
 14170  006616  EF15  F033         	goto	l9005
 14171  00661A                     u9240:
 14172  00661A  0E00               	movlw	0
 14173  00661C  1A3A               	xorwf	___flneg@f1^0,f,c
 14174  00661E  0E00               	movlw	0
 14175  006620  1A3B               	xorwf	(___flneg@f1+1)^0,f,c
 14176  006622  0E00               	movlw	0
 14177  006624  1A3C               	xorwf	(___flneg@f1+2)^0,f,c
 14178  006626  0E80               	movlw	128
 14179  006628  1A3D               	xorwf	(___flneg@f1+3)^0,f,c
 14180  00662A                     l9005:
 14181  00662A  C03A  F03A         	movff	___flneg@f1,?___flneg
 14182  00662E  C03B  F03B         	movff	___flneg@f1+1,?___flneg+1
 14183  006632  C03C  F03C         	movff	___flneg@f1+2,?___flneg+2
 14184  006636  C03D  F03D         	movff	___flneg@f1+3,?___flneg+3
 14185  00663A  0012               	return		;funcret
 14186  00663C                     __end_of___flneg:
 14187                           	opt callstack 0
 14188                           
 14189 ;; *************** function ___flmul *****************
 14190 ;; Defined at:
 14191 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  b               4   61[COMRAM] unsigned char 
 14194 ;;  a               4   65[COMRAM] unsigned char 
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;  prod            4    7[BANK0 ] struct .
 14197 ;;  grs             4    2[BANK0 ] unsigned long 
 14198 ;;  temp            2   11[BANK0 ] struct .
 14199 ;;  bexp            1    6[BANK0 ] unsigned char 
 14200 ;;  aexp            1    1[BANK0 ] unsigned char 
 14201 ;;  sign            1    0[BANK0 ] unsigned char 
 14202 ;; Return value:  Size  Location     Type
 14203 ;;                  4   61[COMRAM] unsigned char 
 14204 ;; Registers used:
 14205 ;;		wreg, status,2, status,0, prodl, prodh
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14211 ;;      Params:         8       0       0       0       0       0       0       0       0
 14212 ;;      Locals:         0      13       0       0       0       0       0       0       0
 14213 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14214 ;;      Totals:        12      13       0       0       0       0       0       0       0
 14215 ;;Total ram usage:       25 bytes
 14216 ;; Hardware stack levels used:    1
 14217 ;; Hardware stack levels required when called:    2
 14218 ;; This function calls:
 14219 ;;		Nothing
 14220 ;; This function is called by:
 14221 ;;		_pwmDuty
 14222 ;;		_myPow
 14223 ;;		_PID
 14224 ;;		_efgtoa
 14225 ;;		_expf
 14226 ;;		_logf
 14227 ;;		_scalbnf
 14228 ;; This function uses a non-reentrant model
 14229 ;;
 14230                           
 14231                           	psect	text48
 14232  002B10                     __ptext48:
 14233                           	opt callstack 0
 14234  002B10                     ___flmul:
 14235                           	opt callstack 23
 14236  002B10  5041               	movf	(___flmul@b+3)^0,w,c
 14237  002B12  0B80               	andlw	128
 14238  002B14  0100               	movlb	0	; () banked
 14239  002B16  6F60               	movwf	___flmul@sign& (0+255),b
 14240  002B18  5041               	movf	(___flmul@b+3)^0,w,c
 14241  002B1A  2441               	addwf	(___flmul@b+3)^0,w,c
 14242  002B1C  6F66               	movwf	___flmul@bexp& (0+255),b
 14243  002B1E                     
 14244                           ; BSR set to: 0
 14245  002B1E  AE40               	btfss	(___flmul@b+2)^0,7,c
 14246  002B20  EF94  F015         	goto	u9001
 14247  002B24  EF96  F015         	goto	u9000
 14248  002B28                     u9001:
 14249  002B28  EF97  F015         	goto	l8849
 14250  002B2C                     u9000:
 14251  002B2C                     
 14252                           ; BSR set to: 0
 14253  002B2C  8166               	bsf	___flmul@bexp& (0+255),0,b
 14254  002B2E                     l8849:
 14255                           
 14256                           ; BSR set to: 0
 14257  002B2E  5166               	movf	___flmul@bexp& (0+255),w,b
 14258  002B30  B4D8               	btfsc	status,2,c
 14259  002B32  EF9D  F015         	goto	u9011
 14260  002B36  EF9F  F015         	goto	u9010
 14261  002B3A                     u9011:
 14262  002B3A  EFB2  F015         	goto	l8857
 14263  002B3E                     u9010:
 14264  002B3E                     
 14265                           ; BSR set to: 0
 14266  002B3E  2966               	incf	___flmul@bexp& (0+255),w,b
 14267  002B40  A4D8               	btfss	status,2,c
 14268  002B42  EFA5  F015         	goto	u9021
 14269  002B46  EFA7  F015         	goto	u9020
 14270  002B4A                     u9021:
 14271  002B4A  EFAF  F015         	goto	l8855
 14272  002B4E                     u9020:
 14273  002B4E                     
 14274                           ; BSR set to: 0
 14275  002B4E  0E00               	movlw	0
 14276  002B50  6E3E               	movwf	___flmul@b^0,c
 14277  002B52  0E00               	movlw	0
 14278  002B54  6E3F               	movwf	(___flmul@b+1)^0,c
 14279  002B56  0E00               	movlw	0
 14280  002B58  6E40               	movwf	(___flmul@b+2)^0,c
 14281  002B5A  0E00               	movlw	0
 14282  002B5C  6E41               	movwf	(___flmul@b+3)^0,c
 14283  002B5E                     l8855:
 14284                           
 14285                           ; BSR set to: 0
 14286  002B5E  8E40               	bsf	(___flmul@b+2)^0,7,c
 14287  002B60  EFBA  F015         	goto	l8859
 14288  002B64                     l8857:
 14289                           
 14290                           ; BSR set to: 0
 14291  002B64  0E00               	movlw	0
 14292  002B66  6E3E               	movwf	___flmul@b^0,c
 14293  002B68  0E00               	movlw	0
 14294  002B6A  6E3F               	movwf	(___flmul@b+1)^0,c
 14295  002B6C  0E00               	movlw	0
 14296  002B6E  6E40               	movwf	(___flmul@b+2)^0,c
 14297  002B70  0E00               	movlw	0
 14298  002B72  6E41               	movwf	(___flmul@b+3)^0,c
 14299  002B74                     l8859:
 14300                           
 14301                           ; BSR set to: 0
 14302  002B74  5045               	movf	(___flmul@a+3)^0,w,c
 14303  002B76  0B80               	andlw	128
 14304  002B78  1B60               	xorwf	___flmul@sign& (0+255),f,b
 14305  002B7A                     
 14306                           ; BSR set to: 0
 14307  002B7A  5045               	movf	(___flmul@a+3)^0,w,c
 14308  002B7C  2445               	addwf	(___flmul@a+3)^0,w,c
 14309  002B7E  6F61               	movwf	___flmul@aexp& (0+255),b
 14310  002B80                     
 14311                           ; BSR set to: 0
 14312  002B80  AE44               	btfss	(___flmul@a+2)^0,7,c
 14313  002B82  EFC5  F015         	goto	u9031
 14314  002B86  EFC7  F015         	goto	u9030
 14315  002B8A                     u9031:
 14316  002B8A  EFC8  F015         	goto	l8867
 14317  002B8E                     u9030:
 14318  002B8E                     
 14319                           ; BSR set to: 0
 14320  002B8E  8161               	bsf	___flmul@aexp& (0+255),0,b
 14321  002B90                     l8867:
 14322                           
 14323                           ; BSR set to: 0
 14324  002B90  5161               	movf	___flmul@aexp& (0+255),w,b
 14325  002B92  B4D8               	btfsc	status,2,c
 14326  002B94  EFCE  F015         	goto	u9041
 14327  002B98  EFD0  F015         	goto	u9040
 14328  002B9C                     u9041:
 14329  002B9C  EFE3  F015         	goto	l8875
 14330  002BA0                     u9040:
 14331  002BA0                     
 14332                           ; BSR set to: 0
 14333  002BA0  2961               	incf	___flmul@aexp& (0+255),w,b
 14334  002BA2  A4D8               	btfss	status,2,c
 14335  002BA4  EFD6  F015         	goto	u9051
 14336  002BA8  EFD8  F015         	goto	u9050
 14337  002BAC                     u9051:
 14338  002BAC  EFE0  F015         	goto	l8873
 14339  002BB0                     u9050:
 14340  002BB0                     
 14341                           ; BSR set to: 0
 14342  002BB0  0E00               	movlw	0
 14343  002BB2  6E42               	movwf	___flmul@a^0,c
 14344  002BB4  0E00               	movlw	0
 14345  002BB6  6E43               	movwf	(___flmul@a+1)^0,c
 14346  002BB8  0E00               	movlw	0
 14347  002BBA  6E44               	movwf	(___flmul@a+2)^0,c
 14348  002BBC  0E00               	movlw	0
 14349  002BBE  6E45               	movwf	(___flmul@a+3)^0,c
 14350  002BC0                     l8873:
 14351                           
 14352                           ; BSR set to: 0
 14353  002BC0  8E44               	bsf	(___flmul@a+2)^0,7,c
 14354  002BC2  EFEB  F015         	goto	l1541
 14355  002BC6                     l8875:
 14356                           
 14357                           ; BSR set to: 0
 14358  002BC6  0E00               	movlw	0
 14359  002BC8  6E42               	movwf	___flmul@a^0,c
 14360  002BCA  0E00               	movlw	0
 14361  002BCC  6E43               	movwf	(___flmul@a+1)^0,c
 14362  002BCE  0E00               	movlw	0
 14363  002BD0  6E44               	movwf	(___flmul@a+2)^0,c
 14364  002BD2  0E00               	movlw	0
 14365  002BD4  6E45               	movwf	(___flmul@a+3)^0,c
 14366  002BD6                     l1541:
 14367                           
 14368                           ; BSR set to: 0
 14369  002BD6  5161               	movf	___flmul@aexp& (0+255),w,b
 14370  002BD8  B4D8               	btfsc	status,2,c
 14371  002BDA  EFF1  F015         	goto	u9061
 14372  002BDE  EFF3  F015         	goto	u9060
 14373  002BE2                     u9061:
 14374  002BE2  EFFB  F015         	goto	l8879
 14375  002BE6                     u9060:
 14376  002BE6                     
 14377                           ; BSR set to: 0
 14378  002BE6  5166               	movf	___flmul@bexp& (0+255),w,b
 14379  002BE8  A4D8               	btfss	status,2,c
 14380  002BEA  EFF9  F015         	goto	u9071
 14381  002BEE  EFFB  F015         	goto	u9070
 14382  002BF2                     u9071:
 14383  002BF2  EF05  F016         	goto	l8883
 14384  002BF6                     u9070:
 14385  002BF6                     l8879:
 14386                           
 14387                           ; BSR set to: 0
 14388  002BF6  0E00               	movlw	0
 14389  002BF8  6E3E               	movwf	?___flmul^0,c
 14390  002BFA  0E00               	movlw	0
 14391  002BFC  6E3F               	movwf	(?___flmul+1)^0,c
 14392  002BFE  0E00               	movlw	0
 14393  002C00  6E40               	movwf	(?___flmul+2)^0,c
 14394  002C02  0E00               	movlw	0
 14395  002C04  6E41               	movwf	(?___flmul+3)^0,c
 14396  002C06  EF9D  F017         	goto	l1545
 14397  002C0A                     l8883:
 14398                           
 14399                           ; BSR set to: 0
 14400  002C0A  5044               	movf	(___flmul@a+2)^0,w,c
 14401  002C0C  023E               	mulwf	___flmul@b^0,c
 14402  002C0E  CFF3 F06B          	movff	prodl,___flmul@temp
 14403  002C12  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14404  002C16                     
 14405                           ; BSR set to: 0
 14406  002C16  516B               	movf	___flmul@temp& (0+255),w,b
 14407  002C18  6F62               	movwf	___flmul@grs& (0+255),b
 14408  002C1A  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 14409  002C1C  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 14410  002C1E  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 14411  002C20                     
 14412                           ; BSR set to: 0
 14413  002C20  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14414  002C22  6F67               	movwf	___flmul@prod& (0+255),b
 14415  002C24  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 14416  002C26  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 14417  002C28  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 14418  002C2A  5043               	movf	(___flmul@a+1)^0,w,c
 14419  002C2C  023F               	mulwf	(___flmul@b+1)^0,c
 14420  002C2E  CFF3 F06B          	movff	prodl,___flmul@temp
 14421  002C32  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14422  002C36                     
 14423                           ; BSR set to: 0
 14424  002C36  516B               	movf	___flmul@temp& (0+255),w,b
 14425  002C38  2762               	addwf	___flmul@grs& (0+255),f,b
 14426  002C3A  0E00               	movlw	0
 14427  002C3C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14428  002C3E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14429  002C40  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14430  002C42                     
 14431                           ; BSR set to: 0
 14432  002C42  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14433  002C44  2767               	addwf	___flmul@prod& (0+255),f,b
 14434  002C46  0E00               	movlw	0
 14435  002C48  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14436  002C4A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14437  002C4C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14438  002C4E  5042               	movf	___flmul@a^0,w,c
 14439  002C50  0240               	mulwf	(___flmul@b+2)^0,c
 14440  002C52  CFF3 F06B          	movff	prodl,___flmul@temp
 14441  002C56  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14442  002C5A                     
 14443                           ; BSR set to: 0
 14444  002C5A  516B               	movf	___flmul@temp& (0+255),w,b
 14445  002C5C  2762               	addwf	___flmul@grs& (0+255),f,b
 14446  002C5E  0E00               	movlw	0
 14447  002C60  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14448  002C62  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14449  002C64  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14450  002C66                     
 14451                           ; BSR set to: 0
 14452  002C66  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14453  002C68  2767               	addwf	___flmul@prod& (0+255),f,b
 14454  002C6A  0E00               	movlw	0
 14455  002C6C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14456  002C6E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14457  002C70  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14458  002C72                     
 14459                           ; BSR set to: 0
 14460  002C72  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 14461  002C76  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 14462  002C7A  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 14463  002C7E  6B62               	clrf	___flmul@grs& (0+255),b
 14464  002C80                     
 14465                           ; BSR set to: 0
 14466  002C80  5042               	movf	___flmul@a^0,w,c
 14467  002C82  023F               	mulwf	(___flmul@b+1)^0,c
 14468  002C84  CFF3 F06B          	movff	prodl,___flmul@temp
 14469  002C88  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14470  002C8C                     
 14471                           ; BSR set to: 0
 14472  002C8C  516B               	movf	___flmul@temp& (0+255),w,b
 14473  002C8E  2762               	addwf	___flmul@grs& (0+255),f,b
 14474  002C90  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14475  002C92  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14476  002C94  0E00               	movlw	0
 14477  002C96  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14478  002C98  0E00               	movlw	0
 14479  002C9A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14480  002C9C                     
 14481                           ; BSR set to: 0
 14482  002C9C  5043               	movf	(___flmul@a+1)^0,w,c
 14483  002C9E  023E               	mulwf	___flmul@b^0,c
 14484  002CA0  CFF3 F06B          	movff	prodl,___flmul@temp
 14485  002CA4  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14486  002CA8                     
 14487                           ; BSR set to: 0
 14488  002CA8  516B               	movf	___flmul@temp& (0+255),w,b
 14489  002CAA  2762               	addwf	___flmul@grs& (0+255),f,b
 14490  002CAC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14491  002CAE  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14492  002CB0  0E00               	movlw	0
 14493  002CB2  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14494  002CB4  0E00               	movlw	0
 14495  002CB6  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14496  002CB8                     
 14497                           ; BSR set to: 0
 14498  002CB8  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 14499  002CBC  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 14500  002CC0  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 14501  002CC4  6B62               	clrf	___flmul@grs& (0+255),b
 14502  002CC6  5042               	movf	___flmul@a^0,w,c
 14503  002CC8  023E               	mulwf	___flmul@b^0,c
 14504  002CCA  CFF3 F06B          	movff	prodl,___flmul@temp
 14505  002CCE  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14506  002CD2                     
 14507                           ; BSR set to: 0
 14508  002CD2  516B               	movf	___flmul@temp& (0+255),w,b
 14509  002CD4  2762               	addwf	___flmul@grs& (0+255),f,b
 14510  002CD6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14511  002CD8  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14512  002CDA  0E00               	movlw	0
 14513  002CDC  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14514  002CDE  0E00               	movlw	0
 14515  002CE0  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14516  002CE2                     
 14517                           ; BSR set to: 0
 14518  002CE2  5044               	movf	(___flmul@a+2)^0,w,c
 14519  002CE4  023F               	mulwf	(___flmul@b+1)^0,c
 14520  002CE6  CFF3 F06B          	movff	prodl,___flmul@temp
 14521  002CEA  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14522  002CEE  516B               	movf	___flmul@temp& (0+255),w,b
 14523  002CF0  2767               	addwf	___flmul@prod& (0+255),f,b
 14524  002CF2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14525  002CF4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14526  002CF6  0E00               	movlw	0
 14527  002CF8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14528  002CFA  0E00               	movlw	0
 14529  002CFC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14530  002CFE                     
 14531                           ; BSR set to: 0
 14532  002CFE  5043               	movf	(___flmul@a+1)^0,w,c
 14533  002D00  0240               	mulwf	(___flmul@b+2)^0,c
 14534  002D02  CFF3 F06B          	movff	prodl,___flmul@temp
 14535  002D06  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14536  002D0A                     
 14537                           ; BSR set to: 0
 14538  002D0A  516B               	movf	___flmul@temp& (0+255),w,b
 14539  002D0C  2767               	addwf	___flmul@prod& (0+255),f,b
 14540  002D0E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14541  002D10  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14542  002D12  0E00               	movlw	0
 14543  002D14  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14544  002D16  0E00               	movlw	0
 14545  002D18  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14546  002D1A  5044               	movf	(___flmul@a+2)^0,w,c
 14547  002D1C  0240               	mulwf	(___flmul@b+2)^0,c
 14548  002D1E  CFF3 F06B          	movff	prodl,___flmul@temp
 14549  002D22  CFF4 F06C          	movff	prodh,___flmul@temp+1
 14550  002D26                     
 14551                           ; BSR set to: 0
 14552  002D26  516B               	movf	___flmul@temp& (0+255),w,b
 14553  002D28  6E46               	movwf	??___flmul^0,c
 14554  002D2A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14555  002D2C  6E47               	movwf	(??___flmul+1)^0,c
 14556  002D2E  6A48               	clrf	(??___flmul+2)^0,c
 14557  002D30  6A49               	clrf	(??___flmul+3)^0,c
 14558  002D32  C048  F049         	movff	??___flmul+2,??___flmul+3
 14559  002D36  C047  F048         	movff	??___flmul+1,??___flmul+2
 14560  002D3A  C046  F047         	movff	??___flmul,??___flmul+1
 14561  002D3E  6A46               	clrf	??___flmul^0,c
 14562  002D40  5046               	movf	??___flmul^0,w,c
 14563  002D42  2767               	addwf	___flmul@prod& (0+255),f,b
 14564  002D44  5047               	movf	(??___flmul+1)^0,w,c
 14565  002D46  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14566  002D48  5048               	movf	(??___flmul+2)^0,w,c
 14567  002D4A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14568  002D4C  5049               	movf	(??___flmul+3)^0,w,c
 14569  002D4E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14570  002D50                     
 14571                           ; BSR set to: 0
 14572  002D50  C062  F046         	movff	___flmul@grs,??___flmul
 14573  002D54  C063  F047         	movff	___flmul@grs+1,??___flmul+1
 14574  002D58  C064  F048         	movff	___flmul@grs+2,??___flmul+2
 14575  002D5C  C065  F049         	movff	___flmul@grs+3,??___flmul+3
 14576  002D60  0E19               	movlw	25
 14577  002D62  EFB8  F016         	goto	u9080
 14578  002D66                     u9085:
 14579  002D66  90D8               	bcf	status,0,c
 14580  002D68  3249               	rrcf	(??___flmul+3)^0,f,c
 14581  002D6A  3248               	rrcf	(??___flmul+2)^0,f,c
 14582  002D6C  3247               	rrcf	(??___flmul+1)^0,f,c
 14583  002D6E  3246               	rrcf	??___flmul^0,f,c
 14584  002D70                     u9080:
 14585  002D70  2EE8               	decfsz	wreg,f,c
 14586  002D72  EFB3  F016         	goto	u9085
 14587  002D76  5046               	movf	??___flmul^0,w,c
 14588  002D78  2767               	addwf	___flmul@prod& (0+255),f,b
 14589  002D7A  5047               	movf	(??___flmul+1)^0,w,c
 14590  002D7C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14591  002D7E  5048               	movf	(??___flmul+2)^0,w,c
 14592  002D80  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14593  002D82  5049               	movf	(??___flmul+3)^0,w,c
 14594  002D84  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14595  002D86                     
 14596                           ; BSR set to: 0
 14597  002D86  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 14598  002D8A  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 14599  002D8E  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 14600  002D92  6B62               	clrf	___flmul@grs& (0+255),b
 14601  002D94                     
 14602                           ; BSR set to: 0
 14603  002D94  5161               	movf	___flmul@aexp& (0+255),w,b
 14604  002D96  C066  F046         	movff	___flmul@bexp,??___flmul
 14605  002D9A  6A47               	clrf	(??___flmul+1)^0,c
 14606  002D9C  2646               	addwf	??___flmul^0,f,c
 14607  002D9E  0E00               	movlw	0
 14608  002DA0  2247               	addwfc	(??___flmul+1)^0,f,c
 14609  002DA2  0E82               	movlw	130
 14610  002DA4  2446               	addwf	??___flmul^0,w,c
 14611  002DA6  6F6B               	movwf	___flmul@temp& (0+255),b
 14612  002DA8  0EFF               	movlw	255
 14613  002DAA  2047               	addwfc	(??___flmul+1)^0,w,c
 14614  002DAC  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 14615  002DAE  EFEE  F016         	goto	l8931
 14616  002DB2                     l8925:
 14617                           
 14618                           ; BSR set to: 0
 14619  002DB2  90D8               	bcf	status,0,c
 14620  002DB4  3767               	rlcf	___flmul@prod& (0+255),f,b
 14621  002DB6  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14622  002DB8  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14623  002DBA  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14624  002DBC                     
 14625                           ; BSR set to: 0
 14626  002DBC  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 14627  002DBE  EFE3  F016         	goto	u9091
 14628  002DC2  EFE5  F016         	goto	u9090
 14629  002DC6                     u9091:
 14630  002DC6  EFE6  F016         	goto	l1548
 14631  002DCA                     u9090:
 14632  002DCA                     
 14633                           ; BSR set to: 0
 14634  002DCA  8167               	bsf	___flmul@prod& (0+255),0,b
 14635  002DCC                     l1548:
 14636                           
 14637                           ; BSR set to: 0
 14638  002DCC  90D8               	bcf	status,0,c
 14639  002DCE  3762               	rlcf	___flmul@grs& (0+255),f,b
 14640  002DD0  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14641  002DD2  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14642  002DD4  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14643  002DD6  076B               	decf	___flmul@temp& (0+255),f,b
 14644  002DD8  A0D8               	btfss	status,0,c
 14645  002DDA  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 14646  002DDC                     l8931:
 14647                           
 14648                           ; BSR set to: 0
 14649  002DDC  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 14650  002DDE  EFF3  F016         	goto	u9101
 14651  002DE2  EFF5  F016         	goto	u9100
 14652  002DE6                     u9101:
 14653  002DE6  EFD9  F016         	goto	l8925
 14654  002DEA                     u9100:
 14655  002DEA                     
 14656                           ; BSR set to: 0
 14657  002DEA  0E00               	movlw	0
 14658  002DEC  6F61               	movwf	___flmul@aexp& (0+255),b
 14659  002DEE                     
 14660                           ; BSR set to: 0
 14661  002DEE  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 14662  002DF0  EFFC  F016         	goto	u9111
 14663  002DF4  EFFE  F016         	goto	u9110
 14664  002DF8                     u9111:
 14665  002DF8  EF22  F017         	goto	l1550
 14666  002DFC                     u9110:
 14667  002DFC                     
 14668                           ; BSR set to: 0
 14669  002DFC  0EFF               	movlw	255
 14670  002DFE  1562               	andwf	___flmul@grs& (0+255),w,b
 14671  002E00  6E46               	movwf	??___flmul^0,c
 14672  002E02  0EFF               	movlw	255
 14673  002E04  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 14674  002E06  6E47               	movwf	(??___flmul+1)^0,c
 14675  002E08  0EFF               	movlw	255
 14676  002E0A  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 14677  002E0C  6E48               	movwf	(??___flmul+2)^0,c
 14678  002E0E  0E7F               	movlw	127
 14679  002E10  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 14680  002E12  6E49               	movwf	(??___flmul+3)^0,c
 14681  002E14  5046               	movf	??___flmul^0,w,c
 14682  002E16  1047               	iorwf	(??___flmul+1)^0,w,c
 14683  002E18  1048               	iorwf	(??___flmul+2)^0,w,c
 14684  002E1A  1049               	iorwf	(??___flmul+3)^0,w,c
 14685  002E1C  B4D8               	btfsc	status,2,c
 14686  002E1E  EF13  F017         	goto	u9121
 14687  002E22  EF15  F017         	goto	u9120
 14688  002E26                     u9121:
 14689  002E26  EF19  F017         	goto	l1551
 14690  002E2A                     u9120:
 14691  002E2A                     l8939:
 14692                           
 14693                           ; BSR set to: 0
 14694  002E2A  0E01               	movlw	1
 14695  002E2C  6F61               	movwf	___flmul@aexp& (0+255),b
 14696  002E2E  EF22  F017         	goto	l1550
 14697  002E32                     l1551:
 14698                           
 14699                           ; BSR set to: 0
 14700  002E32  A167               	btfss	___flmul@prod& (0+255),0,b
 14701  002E34  EF1E  F017         	goto	u9131
 14702  002E38  EF20  F017         	goto	u9130
 14703  002E3C                     u9131:
 14704  002E3C  EF22  F017         	goto	l1550
 14705  002E40                     u9130:
 14706  002E40  EF15  F017         	goto	l8939
 14707  002E44                     l1550:
 14708                           
 14709                           ; BSR set to: 0
 14710  002E44  5161               	movf	___flmul@aexp& (0+255),w,b
 14711  002E46  B4D8               	btfsc	status,2,c
 14712  002E48  EF28  F017         	goto	u9141
 14713  002E4C  EF2A  F017         	goto	u9140
 14714  002E50                     u9141:
 14715  002E50  EF4E  F017         	goto	l8951
 14716  002E54                     u9140:
 14717  002E54                     
 14718                           ; BSR set to: 0
 14719  002E54  0E01               	movlw	1
 14720  002E56  2767               	addwf	___flmul@prod& (0+255),f,b
 14721  002E58  0E00               	movlw	0
 14722  002E5A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14723  002E5C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14724  002E5E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14725  002E60                     
 14726                           ; BSR set to: 0
 14727  002E60  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 14728  002E62  EF35  F017         	goto	u9151
 14729  002E66  EF37  F017         	goto	u9150
 14730  002E6A                     u9151:
 14731  002E6A  EF4E  F017         	goto	l8951
 14732  002E6E                     u9150:
 14733  002E6E                     
 14734                           ; BSR set to: 0
 14735  002E6E  C067  F046         	movff	___flmul@prod,??___flmul
 14736  002E72  C068  F047         	movff	___flmul@prod+1,??___flmul+1
 14737  002E76  C069  F048         	movff	___flmul@prod+2,??___flmul+2
 14738  002E7A  C06A  F049         	movff	___flmul@prod+3,??___flmul+3
 14739  002E7E  3449               	rlcf	(??___flmul+3)^0,w,c
 14740  002E80  3249               	rrcf	(??___flmul+3)^0,f,c
 14741  002E82  3248               	rrcf	(??___flmul+2)^0,f,c
 14742  002E84  3247               	rrcf	(??___flmul+1)^0,f,c
 14743  002E86  3246               	rrcf	??___flmul^0,f,c
 14744  002E88  C046  F067         	movff	??___flmul,___flmul@prod
 14745  002E8C  C047  F068         	movff	??___flmul+1,___flmul@prod+1
 14746  002E90  C048  F069         	movff	??___flmul+2,___flmul@prod+2
 14747  002E94  C049  F06A         	movff	??___flmul+3,___flmul@prod+3
 14748  002E98                     
 14749                           ; BSR set to: 0
 14750  002E98  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 14751  002E9A  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 14752  002E9C                     l8951:
 14753                           
 14754                           ; BSR set to: 0
 14755  002E9C  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14756  002E9E  EF59  F017         	goto	u9161
 14757  002EA2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14758  002EA4  E108               	bnz	u9160
 14759  002EA6  296B               	incf	___flmul@temp& (0+255),w,b
 14760  002EA8  A0D8               	btfss	status,0,c
 14761  002EAA  EF59  F017         	goto	u9161
 14762  002EAE  EF5B  F017         	goto	u9160
 14763  002EB2                     u9161:
 14764  002EB2  EF65  F017         	goto	l8955
 14765  002EB6                     u9160:
 14766  002EB6                     
 14767                           ; BSR set to: 0
 14768  002EB6  0E00               	movlw	0
 14769  002EB8  6F67               	movwf	___flmul@prod& (0+255),b
 14770  002EBA  0E00               	movlw	0
 14771  002EBC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 14772  002EBE  0E80               	movlw	128
 14773  002EC0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 14774  002EC2  0E7F               	movlw	127
 14775  002EC4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 14776  002EC6  EF93  F017         	goto	l8967
 14777  002ECA                     l8955:
 14778                           
 14779                           ; BSR set to: 0
 14780  002ECA  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14781  002ECC  EF72  F017         	goto	u9170
 14782  002ED0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 14783  002ED2  E106               	bnz	u9171
 14784  002ED4  056B               	decf	___flmul@temp& (0+255),w,b
 14785  002ED6  B0D8               	btfsc	status,0,c
 14786  002ED8  EF70  F017         	goto	u9171
 14787  002EDC  EF72  F017         	goto	u9170
 14788  002EE0                     u9171:
 14789  002EE0  EF7E  F017         	goto	l1558
 14790  002EE4                     u9170:
 14791  002EE4                     
 14792                           ; BSR set to: 0
 14793  002EE4  0E00               	movlw	0
 14794  002EE6  6F67               	movwf	___flmul@prod& (0+255),b
 14795  002EE8  0E00               	movlw	0
 14796  002EEA  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 14797  002EEC  0E00               	movlw	0
 14798  002EEE  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 14799  002EF0  0E00               	movlw	0
 14800  002EF2  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 14801  002EF4  0E00               	movlw	0
 14802  002EF6  6F60               	movwf	___flmul@sign& (0+255),b
 14803  002EF8  EF93  F017         	goto	l8967
 14804  002EFC                     l1558:
 14805                           
 14806                           ; BSR set to: 0
 14807  002EFC  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 14808  002F00                     
 14809                           ; BSR set to: 0
 14810  002F00  0EFF               	movlw	255
 14811  002F02  1767               	andwf	___flmul@prod& (0+255),f,b
 14812  002F04  0EFF               	movlw	255
 14813  002F06  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 14814  002F08  0E7F               	movlw	127
 14815  002F0A  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 14816  002F0C  0E00               	movlw	0
 14817  002F0E  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 14818  002F10                     
 14819                           ; BSR set to: 0
 14820  002F10  A166               	btfss	___flmul@bexp& (0+255),0,b
 14821  002F12  EF8D  F017         	goto	u9181
 14822  002F16  EF8F  F017         	goto	u9180
 14823  002F1A                     u9181:
 14824  002F1A  EF90  F017         	goto	l8965
 14825  002F1E                     u9180:
 14826  002F1E                     
 14827                           ; BSR set to: 0
 14828  002F1E  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 14829  002F20                     l8965:
 14830                           
 14831                           ; BSR set to: 0
 14832  002F20  90D8               	bcf	status,0,c
 14833  002F22  3166               	rrcf	___flmul@bexp& (0+255),w,b
 14834  002F24  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 14835  002F26                     l8967:
 14836                           
 14837                           ; BSR set to: 0
 14838  002F26  5160               	movf	___flmul@sign& (0+255),w,b
 14839  002F28  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 14840  002F2A                     
 14841                           ; BSR set to: 0
 14842  002F2A  C067  F03E         	movff	___flmul@prod,?___flmul
 14843  002F2E  C068  F03F         	movff	___flmul@prod+1,?___flmul+1
 14844  002F32  C069  F040         	movff	___flmul@prod+2,?___flmul+2
 14845  002F36  C06A  F041         	movff	___flmul@prod+3,?___flmul+3
 14846  002F3A                     l1545:
 14847                           
 14848                           ; BSR set to: 0
 14849  002F3A  0012               	return		;funcret
 14850  002F3C                     __end_of___flmul:
 14851                           	opt callstack 0
 14852                           
 14853 ;; *************** function ___fleq *****************
 14854 ;; Defined at:
 14855 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;  ff1             4    5[COMRAM] unsigned char 
 14858 ;;  ff2             4    9[COMRAM] unsigned char 
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;		None
 14861 ;; Return value:  Size  Location     Type
 14862 ;;		None               void
 14863 ;; Registers used:
 14864 ;;		wreg, status,2, status,0
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/0
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14870 ;;      Params:         8       0       0       0       0       0       0       0       0
 14871 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14872 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14873 ;;      Totals:        12       0       0       0       0       0       0       0       0
 14874 ;;Total ram usage:       12 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:    2
 14877 ;; This function calls:
 14878 ;;		Nothing
 14879 ;; This function is called by:
 14880 ;;		_efgtoa
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           
 14884                           	psect	text49
 14885  005B70                     __ptext49:
 14886                           	opt callstack 0
 14887  005B70                     ___fleq:
 14888                           	opt callstack 23
 14889  005B70  0E00               	movlw	0
 14890  005B72  1406               	andwf	___fleq@ff1^0,w,c
 14891  005B74  6E0E               	movwf	??___fleq^0,c
 14892  005B76  0E00               	movlw	0
 14893  005B78  1407               	andwf	(___fleq@ff1+1)^0,w,c
 14894  005B7A  6E0F               	movwf	(??___fleq+1)^0,c
 14895  005B7C  0E80               	movlw	128
 14896  005B7E  1408               	andwf	(___fleq@ff1+2)^0,w,c
 14897  005B80  6E10               	movwf	(??___fleq+2)^0,c
 14898  005B82  0E7F               	movlw	127
 14899  005B84  1409               	andwf	(___fleq@ff1+3)^0,w,c
 14900  005B86  6E11               	movwf	(??___fleq+3)^0,c
 14901  005B88  500E               	movf	??___fleq^0,w,c
 14902  005B8A  100F               	iorwf	(??___fleq+1)^0,w,c
 14903  005B8C  1010               	iorwf	(??___fleq+2)^0,w,c
 14904  005B8E  1011               	iorwf	(??___fleq+3)^0,w,c
 14905  005B90  A4D8               	btfss	status,2,c
 14906  005B92  EFCD  F02D         	goto	u5711
 14907  005B96  EFCF  F02D         	goto	u5710
 14908  005B9A                     u5711:
 14909  005B9A  EFD7  F02D         	goto	l5985
 14910  005B9E                     u5710:
 14911  005B9E  0E00               	movlw	0
 14912  005BA0  6E06               	movwf	___fleq@ff1^0,c
 14913  005BA2  0E00               	movlw	0
 14914  005BA4  6E07               	movwf	(___fleq@ff1+1)^0,c
 14915  005BA6  0E00               	movlw	0
 14916  005BA8  6E08               	movwf	(___fleq@ff1+2)^0,c
 14917  005BAA  0E00               	movlw	0
 14918  005BAC  6E09               	movwf	(___fleq@ff1+3)^0,c
 14919  005BAE                     l5985:
 14920  005BAE  0E00               	movlw	0
 14921  005BB0  140A               	andwf	___fleq@ff2^0,w,c
 14922  005BB2  6E0E               	movwf	??___fleq^0,c
 14923  005BB4  0E00               	movlw	0
 14924  005BB6  140B               	andwf	(___fleq@ff2+1)^0,w,c
 14925  005BB8  6E0F               	movwf	(??___fleq+1)^0,c
 14926  005BBA  0E80               	movlw	128
 14927  005BBC  140C               	andwf	(___fleq@ff2+2)^0,w,c
 14928  005BBE  6E10               	movwf	(??___fleq+2)^0,c
 14929  005BC0  0E7F               	movlw	127
 14930  005BC2  140D               	andwf	(___fleq@ff2+3)^0,w,c
 14931  005BC4  6E11               	movwf	(??___fleq+3)^0,c
 14932  005BC6  500E               	movf	??___fleq^0,w,c
 14933  005BC8  100F               	iorwf	(??___fleq+1)^0,w,c
 14934  005BCA  1010               	iorwf	(??___fleq+2)^0,w,c
 14935  005BCC  1011               	iorwf	(??___fleq+3)^0,w,c
 14936  005BCE  A4D8               	btfss	status,2,c
 14937  005BD0  EFEC  F02D         	goto	u5721
 14938  005BD4  EFEE  F02D         	goto	u5720
 14939  005BD8                     u5721:
 14940  005BD8  EFF6  F02D         	goto	l5989
 14941  005BDC                     u5720:
 14942  005BDC  0E00               	movlw	0
 14943  005BDE  6E0A               	movwf	___fleq@ff2^0,c
 14944  005BE0  0E00               	movlw	0
 14945  005BE2  6E0B               	movwf	(___fleq@ff2+1)^0,c
 14946  005BE4  0E00               	movlw	0
 14947  005BE6  6E0C               	movwf	(___fleq@ff2+2)^0,c
 14948  005BE8  0E00               	movlw	0
 14949  005BEA  6E0D               	movwf	(___fleq@ff2+3)^0,c
 14950  005BEC                     l5989:
 14951  005BEC  500A               	movf	___fleq@ff2^0,w,c
 14952  005BEE  1806               	xorwf	___fleq@ff1^0,w,c
 14953  005BF0  E10F               	bnz	u5730
 14954  005BF2  500B               	movf	(___fleq@ff2+1)^0,w,c
 14955  005BF4  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 14956  005BF6  E10C               	bnz	u5730
 14957  005BF8  500C               	movf	(___fleq@ff2+2)^0,w,c
 14958  005BFA  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 14959  005BFC  E109               	bnz	u5730
 14960  005BFE  500D               	movf	(___fleq@ff2+3)^0,w,c
 14961  005C00  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 14962  005C02  B4D8               	btfsc	status,2,c
 14963  005C04  EF06  F02E         	goto	u5731
 14964  005C08  EF08  F02E         	goto	u5730
 14965  005C0C                     u5731:
 14966  005C0C  EF0B  F02E         	goto	l5993
 14967  005C10                     u5730:
 14968  005C10  90D8               	bcf	status,0,c
 14969  005C12  EF0C  F02E         	goto	l1186
 14970  005C16                     l5993:
 14971  005C16  80D8               	bsf	status,0,c
 14972  005C18                     l1186:
 14973  005C18  0012               	return		;funcret
 14974  005C1A                     __end_of___fleq:
 14975                           	opt callstack 0
 14976                           
 14977 ;; *************** function ___fldiv *****************
 14978 ;; Defined at:
 14979 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 14980 ;; Parameters:    Size  Location     Type
 14981 ;;  b               4   32[COMRAM] unsigned char 
 14982 ;;  a               4   36[COMRAM] unsigned char 
 14983 ;; Auto vars:     Size  Location     Type
 14984 ;;  grs             4   51[COMRAM] unsigned long 
 14985 ;;  rem             4   44[COMRAM] unsigned long 
 14986 ;;  new_exp         2   49[COMRAM] short 
 14987 ;;  aexp            1   56[COMRAM] unsigned char 
 14988 ;;  bexp            1   55[COMRAM] unsigned char 
 14989 ;;  sign            1   48[COMRAM] unsigned char 
 14990 ;; Return value:  Size  Location     Type
 14991 ;;                  4   32[COMRAM] unsigned char 
 14992 ;; Registers used:
 14993 ;;		wreg, status,2, status,0
 14994 ;; Tracked objects:
 14995 ;;		On entry : 0/0
 14996 ;;		On exit  : 0/0
 14997 ;;		Unchanged: 0/0
 14998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14999 ;;      Params:         8       0       0       0       0       0       0       0       0
 15000 ;;      Locals:        13       0       0       0       0       0       0       0       0
 15001 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15002 ;;      Totals:        25       0       0       0       0       0       0       0       0
 15003 ;;Total ram usage:       25 bytes
 15004 ;; Hardware stack levels used:    1
 15005 ;; Hardware stack levels required when called:    2
 15006 ;; This function calls:
 15007 ;;		Nothing
 15008 ;; This function is called by:
 15009 ;;		_pwmDuty
 15010 ;;		_dameDistancia
 15011 ;;		_leerSensores
 15012 ;;		_efgtoa
 15013 ;;		_expf
 15014 ;;		_logf
 15015 ;; This function uses a non-reentrant model
 15016 ;;
 15017                           
 15018                           	psect	text50
 15019  00330A                     __ptext50:
 15020                           	opt callstack 0
 15021  00330A                     ___fldiv:
 15022                           	opt callstack 23
 15023  00330A  5024               	movf	(___fldiv@b+3)^0,w,c
 15024  00330C  0B80               	andlw	128
 15025  00330E  6E31               	movwf	___fldiv@sign^0,c
 15026  003310  5024               	movf	(___fldiv@b+3)^0,w,c
 15027  003312  2424               	addwf	(___fldiv@b+3)^0,w,c
 15028  003314  6E38               	movwf	___fldiv@bexp^0,c
 15029  003316  AE23               	btfss	(___fldiv@b+2)^0,7,c
 15030  003318  EF90  F019         	goto	u8771
 15031  00331C  EF92  F019         	goto	u8770
 15032  003320                     u8771:
 15033  003320  EF93  F019         	goto	l8711
 15034  003324                     u8770:
 15035  003324  8038               	bsf	___fldiv@bexp^0,0,c
 15036  003326                     l8711:
 15037  003326  5038               	movf	___fldiv@bexp^0,w,c
 15038  003328  B4D8               	btfsc	status,2,c
 15039  00332A  EF99  F019         	goto	u8781
 15040  00332E  EF9B  F019         	goto	u8780
 15041  003332                     u8781:
 15042  003332  EFB0  F019         	goto	l8721
 15043  003336                     u8780:
 15044  003336  2838               	incf	___fldiv@bexp^0,w,c
 15045  003338  A4D8               	btfss	status,2,c
 15046  00333A  EFA1  F019         	goto	u8791
 15047  00333E  EFA3  F019         	goto	u8790
 15048  003342                     u8791:
 15049  003342  EFAB  F019         	goto	l8717
 15050  003346                     u8790:
 15051  003346  0E00               	movlw	0
 15052  003348  6E21               	movwf	___fldiv@b^0,c
 15053  00334A  0E00               	movlw	0
 15054  00334C  6E22               	movwf	(___fldiv@b+1)^0,c
 15055  00334E  0E00               	movlw	0
 15056  003350  6E23               	movwf	(___fldiv@b+2)^0,c
 15057  003352  0E00               	movlw	0
 15058  003354  6E24               	movwf	(___fldiv@b+3)^0,c
 15059  003356                     l8717:
 15060  003356  8E23               	bsf	(___fldiv@b+2)^0,7,c
 15061  003358  0E00               	movlw	0
 15062  00335A  6E24               	movwf	(___fldiv@b+3)^0,c
 15063  00335C  EFB8  F019         	goto	l8723
 15064  003360                     l8721:
 15065  003360  0E00               	movlw	0
 15066  003362  6E21               	movwf	___fldiv@b^0,c
 15067  003364  0E00               	movlw	0
 15068  003366  6E22               	movwf	(___fldiv@b+1)^0,c
 15069  003368  0E00               	movlw	0
 15070  00336A  6E23               	movwf	(___fldiv@b+2)^0,c
 15071  00336C  0E00               	movlw	0
 15072  00336E  6E24               	movwf	(___fldiv@b+3)^0,c
 15073  003370                     l8723:
 15074  003370  5028               	movf	(___fldiv@a+3)^0,w,c
 15075  003372  0B80               	andlw	128
 15076  003374  1A31               	xorwf	___fldiv@sign^0,f,c
 15077  003376  5028               	movf	(___fldiv@a+3)^0,w,c
 15078  003378  2428               	addwf	(___fldiv@a+3)^0,w,c
 15079  00337A  6E39               	movwf	___fldiv@aexp^0,c
 15080  00337C  AE27               	btfss	(___fldiv@a+2)^0,7,c
 15081  00337E  EFC3  F019         	goto	u8801
 15082  003382  EFC5  F019         	goto	u8800
 15083  003386                     u8801:
 15084  003386  EFC6  F019         	goto	l8731
 15085  00338A                     u8800:
 15086  00338A  8039               	bsf	___fldiv@aexp^0,0,c
 15087  00338C                     l8731:
 15088  00338C  5039               	movf	___fldiv@aexp^0,w,c
 15089  00338E  B4D8               	btfsc	status,2,c
 15090  003390  EFCC  F019         	goto	u8811
 15091  003394  EFCE  F019         	goto	u8810
 15092  003398                     u8811:
 15093  003398  EFE3  F019         	goto	l8741
 15094  00339C                     u8810:
 15095  00339C  2839               	incf	___fldiv@aexp^0,w,c
 15096  00339E  A4D8               	btfss	status,2,c
 15097  0033A0  EFD4  F019         	goto	u8821
 15098  0033A4  EFD6  F019         	goto	u8820
 15099  0033A8                     u8821:
 15100  0033A8  EFDE  F019         	goto	l8737
 15101  0033AC                     u8820:
 15102  0033AC  0E00               	movlw	0
 15103  0033AE  6E25               	movwf	___fldiv@a^0,c
 15104  0033B0  0E00               	movlw	0
 15105  0033B2  6E26               	movwf	(___fldiv@a+1)^0,c
 15106  0033B4  0E00               	movlw	0
 15107  0033B6  6E27               	movwf	(___fldiv@a+2)^0,c
 15108  0033B8  0E00               	movlw	0
 15109  0033BA  6E28               	movwf	(___fldiv@a+3)^0,c
 15110  0033BC                     l8737:
 15111  0033BC  8E27               	bsf	(___fldiv@a+2)^0,7,c
 15112  0033BE  0E00               	movlw	0
 15113  0033C0  6E28               	movwf	(___fldiv@a+3)^0,c
 15114  0033C2  EFEB  F019         	goto	l8743
 15115  0033C6                     l8741:
 15116  0033C6  0E00               	movlw	0
 15117  0033C8  6E25               	movwf	___fldiv@a^0,c
 15118  0033CA  0E00               	movlw	0
 15119  0033CC  6E26               	movwf	(___fldiv@a+1)^0,c
 15120  0033CE  0E00               	movlw	0
 15121  0033D0  6E27               	movwf	(___fldiv@a+2)^0,c
 15122  0033D2  0E00               	movlw	0
 15123  0033D4  6E28               	movwf	(___fldiv@a+3)^0,c
 15124  0033D6                     l8743:
 15125  0033D6  5025               	movf	___fldiv@a^0,w,c
 15126  0033D8  1026               	iorwf	(___fldiv@a+1)^0,w,c
 15127  0033DA  1027               	iorwf	(___fldiv@a+2)^0,w,c
 15128  0033DC  1028               	iorwf	(___fldiv@a+3)^0,w,c
 15129  0033DE  A4D8               	btfss	status,2,c
 15130  0033E0  EFF4  F019         	goto	u8831
 15131  0033E4  EFF6  F019         	goto	u8830
 15132  0033E8                     u8831:
 15133  0033E8  EF0E  F01A         	goto	l8755
 15134  0033EC                     u8830:
 15135  0033EC  0E00               	movlw	0
 15136  0033EE  6E21               	movwf	___fldiv@b^0,c
 15137  0033F0  0E00               	movlw	0
 15138  0033F2  6E22               	movwf	(___fldiv@b+1)^0,c
 15139  0033F4  0E00               	movlw	0
 15140  0033F6  6E23               	movwf	(___fldiv@b+2)^0,c
 15141  0033F8  0E00               	movlw	0
 15142  0033FA  6E24               	movwf	(___fldiv@b+3)^0,c
 15143  0033FC  0E80               	movlw	128
 15144  0033FE  1223               	iorwf	(___fldiv@b+2)^0,f,c
 15145  003400  0E7F               	movlw	127
 15146  003402  1224               	iorwf	(___fldiv@b+3)^0,f,c
 15147  003404                     l8749:
 15148  003404  5031               	movf	___fldiv@sign^0,w,c
 15149  003406  1224               	iorwf	(___fldiv@b+3)^0,f,c
 15150  003408  C021  F021         	movff	___fldiv@b,?___fldiv
 15151  00340C  C022  F022         	movff	___fldiv@b+1,?___fldiv+1
 15152  003410  C023  F023         	movff	___fldiv@b+2,?___fldiv+2
 15153  003414  C024  F024         	movff	___fldiv@b+3,?___fldiv+3
 15154  003418  EF51  F01B         	goto	l1509
 15155  00341C                     l8755:
 15156  00341C  5038               	movf	___fldiv@bexp^0,w,c
 15157  00341E  A4D8               	btfss	status,2,c
 15158  003420  EF14  F01A         	goto	u8841
 15159  003424  EF16  F01A         	goto	u8840
 15160  003428                     u8841:
 15161  003428  EF20  F01A         	goto	l8763
 15162  00342C                     u8840:
 15163  00342C  0E00               	movlw	0
 15164  00342E  6E21               	movwf	?___fldiv^0,c
 15165  003430  0E00               	movlw	0
 15166  003432  6E22               	movwf	(?___fldiv+1)^0,c
 15167  003434  0E00               	movlw	0
 15168  003436  6E23               	movwf	(?___fldiv+2)^0,c
 15169  003438  0E00               	movlw	0
 15170  00343A  6E24               	movwf	(?___fldiv+3)^0,c
 15171  00343C  EF51  F01B         	goto	l1509
 15172  003440                     l8763:
 15173  003440  5039               	movf	___fldiv@aexp^0,w,c
 15174  003442  C038  F029         	movff	___fldiv@bexp,??___fldiv
 15175  003446  6A2A               	clrf	(??___fldiv+1)^0,c
 15176  003448  5E29               	subwf	??___fldiv^0,f,c
 15177  00344A  0E00               	movlw	0
 15178  00344C  5A2A               	subwfb	(??___fldiv+1)^0,f,c
 15179  00344E  0E7F               	movlw	127
 15180  003450  2429               	addwf	??___fldiv^0,w,c
 15181  003452  6E32               	movwf	___fldiv@new_exp^0,c
 15182  003454  0E00               	movlw	0
 15183  003456  202A               	addwfc	(??___fldiv+1)^0,w,c
 15184  003458  6E33               	movwf	(___fldiv@new_exp+1)^0,c
 15185  00345A  C021  F02D         	movff	___fldiv@b,___fldiv@rem
 15186  00345E  C022  F02E         	movff	___fldiv@b+1,___fldiv@rem+1
 15187  003462  C023  F02F         	movff	___fldiv@b+2,___fldiv@rem+2
 15188  003466  C024  F030         	movff	___fldiv@b+3,___fldiv@rem+3
 15189  00346A  0E00               	movlw	0
 15190  00346C  6E21               	movwf	___fldiv@b^0,c
 15191  00346E  0E00               	movlw	0
 15192  003470  6E22               	movwf	(___fldiv@b+1)^0,c
 15193  003472  0E00               	movlw	0
 15194  003474  6E23               	movwf	(___fldiv@b+2)^0,c
 15195  003476  0E00               	movlw	0
 15196  003478  6E24               	movwf	(___fldiv@b+3)^0,c
 15197  00347A  0E00               	movlw	0
 15198  00347C  6E34               	movwf	___fldiv@grs^0,c
 15199  00347E  0E00               	movlw	0
 15200  003480  6E35               	movwf	(___fldiv@grs+1)^0,c
 15201  003482  0E00               	movlw	0
 15202  003484  6E36               	movwf	(___fldiv@grs+2)^0,c
 15203  003486  0E00               	movlw	0
 15204  003488  6E37               	movwf	(___fldiv@grs+3)^0,c
 15205  00348A  0E00               	movlw	0
 15206  00348C  6E39               	movwf	___fldiv@aexp^0,c
 15207  00348E  EF81  F01A         	goto	l1511
 15208  003492                     l8773:
 15209  003492  5039               	movf	___fldiv@aexp^0,w,c
 15210  003494  B4D8               	btfsc	status,2,c
 15211  003496  EF4F  F01A         	goto	u8851
 15212  00349A  EF51  F01A         	goto	u8850
 15213  00349E                     u8851:
 15214  00349E  EF68  F01A         	goto	l8781
 15215  0034A2                     u8850:
 15216  0034A2  90D8               	bcf	status,0,c
 15217  0034A4  362D               	rlcf	___fldiv@rem^0,f,c
 15218  0034A6  362E               	rlcf	(___fldiv@rem+1)^0,f,c
 15219  0034A8  362F               	rlcf	(___fldiv@rem+2)^0,f,c
 15220  0034AA  3630               	rlcf	(___fldiv@rem+3)^0,f,c
 15221  0034AC  90D8               	bcf	status,0,c
 15222  0034AE  3621               	rlcf	___fldiv@b^0,f,c
 15223  0034B0  3622               	rlcf	(___fldiv@b+1)^0,f,c
 15224  0034B2  3623               	rlcf	(___fldiv@b+2)^0,f,c
 15225  0034B4  3624               	rlcf	(___fldiv@b+3)^0,f,c
 15226  0034B6  AE37               	btfss	(___fldiv@grs+3)^0,7,c
 15227  0034B8  EF60  F01A         	goto	u8861
 15228  0034BC  EF62  F01A         	goto	u8860
 15229  0034C0                     u8861:
 15230  0034C0  EF63  F01A         	goto	l1514
 15231  0034C4                     u8860:
 15232  0034C4  8021               	bsf	___fldiv@b^0,0,c
 15233  0034C6                     l1514:
 15234  0034C6  90D8               	bcf	status,0,c
 15235  0034C8  3634               	rlcf	___fldiv@grs^0,f,c
 15236  0034CA  3635               	rlcf	(___fldiv@grs+1)^0,f,c
 15237  0034CC  3636               	rlcf	(___fldiv@grs+2)^0,f,c
 15238  0034CE  3637               	rlcf	(___fldiv@grs+3)^0,f,c
 15239  0034D0                     l8781:
 15240  0034D0  5025               	movf	___fldiv@a^0,w,c
 15241  0034D2  5C2D               	subwf	___fldiv@rem^0,w,c
 15242  0034D4  5026               	movf	(___fldiv@a+1)^0,w,c
 15243  0034D6  582E               	subwfb	(___fldiv@rem+1)^0,w,c
 15244  0034D8  5027               	movf	(___fldiv@a+2)^0,w,c
 15245  0034DA  582F               	subwfb	(___fldiv@rem+2)^0,w,c
 15246  0034DC  5028               	movf	(___fldiv@a+3)^0,w,c
 15247  0034DE  5830               	subwfb	(___fldiv@rem+3)^0,w,c
 15248  0034E0  A0D8               	btfss	status,0,c
 15249  0034E2  EF75  F01A         	goto	u8871
 15250  0034E6  EF77  F01A         	goto	u8870
 15251  0034EA                     u8871:
 15252  0034EA  EF80  F01A         	goto	l8787
 15253  0034EE                     u8870:
 15254  0034EE  8C37               	bsf	(___fldiv@grs+3)^0,6,c
 15255  0034F0  5025               	movf	___fldiv@a^0,w,c
 15256  0034F2  5E2D               	subwf	___fldiv@rem^0,f,c
 15257  0034F4  5026               	movf	(___fldiv@a+1)^0,w,c
 15258  0034F6  5A2E               	subwfb	(___fldiv@rem+1)^0,f,c
 15259  0034F8  5027               	movf	(___fldiv@a+2)^0,w,c
 15260  0034FA  5A2F               	subwfb	(___fldiv@rem+2)^0,f,c
 15261  0034FC  5028               	movf	(___fldiv@a+3)^0,w,c
 15262  0034FE  5A30               	subwfb	(___fldiv@rem+3)^0,f,c
 15263  003500                     l8787:
 15264  003500  2A39               	incf	___fldiv@aexp^0,f,c
 15265  003502                     l1511:
 15266  003502  0E19               	movlw	25
 15267  003504  6439               	cpfsgt	___fldiv@aexp^0,c
 15268  003506  EF87  F01A         	goto	u8881
 15269  00350A  EF89  F01A         	goto	u8880
 15270  00350E                     u8881:
 15271  00350E  EF49  F01A         	goto	l8773
 15272  003512                     u8880:
 15273  003512  502D               	movf	___fldiv@rem^0,w,c
 15274  003514  102E               	iorwf	(___fldiv@rem+1)^0,w,c
 15275  003516  102F               	iorwf	(___fldiv@rem+2)^0,w,c
 15276  003518  1030               	iorwf	(___fldiv@rem+3)^0,w,c
 15277  00351A  B4D8               	btfsc	status,2,c
 15278  00351C  EF92  F01A         	goto	u8891
 15279  003520  EF94  F01A         	goto	u8890
 15280  003524                     u8891:
 15281  003524  EFAC  F01A         	goto	l8799
 15282  003528                     u8890:
 15283  003528  8034               	bsf	___fldiv@grs^0,0,c
 15284  00352A  EFAC  F01A         	goto	l8799
 15285  00352E                     l8793:
 15286  00352E  90D8               	bcf	status,0,c
 15287  003530  3621               	rlcf	___fldiv@b^0,f,c
 15288  003532  3622               	rlcf	(___fldiv@b+1)^0,f,c
 15289  003534  3623               	rlcf	(___fldiv@b+2)^0,f,c
 15290  003536  3624               	rlcf	(___fldiv@b+3)^0,f,c
 15291  003538  AE37               	btfss	(___fldiv@grs+3)^0,7,c
 15292  00353A  EFA1  F01A         	goto	u8901
 15293  00353E  EFA3  F01A         	goto	u8900
 15294  003542                     u8901:
 15295  003542  EFA4  F01A         	goto	l1520
 15296  003546                     u8900:
 15297  003546  8021               	bsf	___fldiv@b^0,0,c
 15298  003548                     l1520:
 15299  003548  90D8               	bcf	status,0,c
 15300  00354A  3634               	rlcf	___fldiv@grs^0,f,c
 15301  00354C  3635               	rlcf	(___fldiv@grs+1)^0,f,c
 15302  00354E  3636               	rlcf	(___fldiv@grs+2)^0,f,c
 15303  003550  3637               	rlcf	(___fldiv@grs+3)^0,f,c
 15304  003552  0632               	decf	___fldiv@new_exp^0,f,c
 15305  003554  A0D8               	btfss	status,0,c
 15306  003556  0633               	decf	(___fldiv@new_exp+1)^0,f,c
 15307  003558                     l8799:
 15308  003558  AE23               	btfss	(___fldiv@b+2)^0,7,c
 15309  00355A  EFB1  F01A         	goto	u8911
 15310  00355E  EFB3  F01A         	goto	u8910
 15311  003562                     u8911:
 15312  003562  EF97  F01A         	goto	l8793
 15313  003566                     u8910:
 15314  003566  0E00               	movlw	0
 15315  003568  6E39               	movwf	___fldiv@aexp^0,c
 15316  00356A  AE37               	btfss	(___fldiv@grs+3)^0,7,c
 15317  00356C  EFBA  F01A         	goto	u8921
 15318  003570  EFBC  F01A         	goto	u8920
 15319  003574                     u8921:
 15320  003574  EFE0  F01A         	goto	l1522
 15321  003578                     u8920:
 15322  003578  0EFF               	movlw	255
 15323  00357A  1434               	andwf	___fldiv@grs^0,w,c
 15324  00357C  6E29               	movwf	??___fldiv^0,c
 15325  00357E  0EFF               	movlw	255
 15326  003580  1435               	andwf	(___fldiv@grs+1)^0,w,c
 15327  003582  6E2A               	movwf	(??___fldiv+1)^0,c
 15328  003584  0EFF               	movlw	255
 15329  003586  1436               	andwf	(___fldiv@grs+2)^0,w,c
 15330  003588  6E2B               	movwf	(??___fldiv+2)^0,c
 15331  00358A  0E7F               	movlw	127
 15332  00358C  1437               	andwf	(___fldiv@grs+3)^0,w,c
 15333  00358E  6E2C               	movwf	(??___fldiv+3)^0,c
 15334  003590  5029               	movf	??___fldiv^0,w,c
 15335  003592  102A               	iorwf	(??___fldiv+1)^0,w,c
 15336  003594  102B               	iorwf	(??___fldiv+2)^0,w,c
 15337  003596  102C               	iorwf	(??___fldiv+3)^0,w,c
 15338  003598  B4D8               	btfsc	status,2,c
 15339  00359A  EFD1  F01A         	goto	u8931
 15340  00359E  EFD3  F01A         	goto	u8930
 15341  0035A2                     u8931:
 15342  0035A2  EFD7  F01A         	goto	l1523
 15343  0035A6                     u8930:
 15344  0035A6                     l8807:
 15345  0035A6  0E01               	movlw	1
 15346  0035A8  6E39               	movwf	___fldiv@aexp^0,c
 15347  0035AA  EFE0  F01A         	goto	l1522
 15348  0035AE                     l1523:
 15349  0035AE  A021               	btfss	___fldiv@b^0,0,c
 15350  0035B0  EFDC  F01A         	goto	u8941
 15351  0035B4  EFDE  F01A         	goto	u8940
 15352  0035B8                     u8941:
 15353  0035B8  EFE0  F01A         	goto	l1522
 15354  0035BC                     u8940:
 15355  0035BC  EFD3  F01A         	goto	l8807
 15356  0035C0                     l1522:
 15357  0035C0  5039               	movf	___fldiv@aexp^0,w,c
 15358  0035C2  B4D8               	btfsc	status,2,c
 15359  0035C4  EFE6  F01A         	goto	u8951
 15360  0035C8  EFE8  F01A         	goto	u8950
 15361  0035CC                     u8951:
 15362  0035CC  EF0C  F01B         	goto	l8819
 15363  0035D0                     u8950:
 15364  0035D0  0E01               	movlw	1
 15365  0035D2  2621               	addwf	___fldiv@b^0,f,c
 15366  0035D4  0E00               	movlw	0
 15367  0035D6  2222               	addwfc	(___fldiv@b+1)^0,f,c
 15368  0035D8  2223               	addwfc	(___fldiv@b+2)^0,f,c
 15369  0035DA  2224               	addwfc	(___fldiv@b+3)^0,f,c
 15370  0035DC  A024               	btfss	(___fldiv@b+3)^0,0,c
 15371  0035DE  EFF3  F01A         	goto	u8961
 15372  0035E2  EFF5  F01A         	goto	u8960
 15373  0035E6                     u8961:
 15374  0035E6  EF0C  F01B         	goto	l8819
 15375  0035EA                     u8960:
 15376  0035EA  C021  F029         	movff	___fldiv@b,??___fldiv
 15377  0035EE  C022  F02A         	movff	___fldiv@b+1,??___fldiv+1
 15378  0035F2  C023  F02B         	movff	___fldiv@b+2,??___fldiv+2
 15379  0035F6  C024  F02C         	movff	___fldiv@b+3,??___fldiv+3
 15380  0035FA  342C               	rlcf	(??___fldiv+3)^0,w,c
 15381  0035FC  322C               	rrcf	(??___fldiv+3)^0,f,c
 15382  0035FE  322B               	rrcf	(??___fldiv+2)^0,f,c
 15383  003600  322A               	rrcf	(??___fldiv+1)^0,f,c
 15384  003602  3229               	rrcf	??___fldiv^0,f,c
 15385  003604  C029  F021         	movff	??___fldiv,___fldiv@b
 15386  003608  C02A  F022         	movff	??___fldiv+1,___fldiv@b+1
 15387  00360C  C02B  F023         	movff	??___fldiv+2,___fldiv@b+2
 15388  003610  C02C  F024         	movff	??___fldiv+3,___fldiv@b+3
 15389  003614  4A32               	infsnz	___fldiv@new_exp^0,f,c
 15390  003616  2A33               	incf	(___fldiv@new_exp+1)^0,f,c
 15391  003618                     l8819:
 15392  003618  BE33               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15393  00361A  EF17  F01B         	goto	u8971
 15394  00361E  5033               	movf	(___fldiv@new_exp+1)^0,w,c
 15395  003620  E108               	bnz	u8970
 15396  003622  2832               	incf	___fldiv@new_exp^0,w,c
 15397  003624  A0D8               	btfss	status,0,c
 15398  003626  EF17  F01B         	goto	u8971
 15399  00362A  EF19  F01B         	goto	u8970
 15400  00362E                     u8971:
 15401  00362E  EF24  F01B         	goto	l8823
 15402  003632                     u8970:
 15403  003632  0E00               	movlw	0
 15404  003634  6E33               	movwf	(___fldiv@new_exp+1)^0,c
 15405  003636  6832               	setf	___fldiv@new_exp^0,c
 15406  003638  0E00               	movlw	0
 15407  00363A  6E21               	movwf	___fldiv@b^0,c
 15408  00363C  0E00               	movlw	0
 15409  00363E  6E22               	movwf	(___fldiv@b+1)^0,c
 15410  003640  0E00               	movlw	0
 15411  003642  6E23               	movwf	(___fldiv@b+2)^0,c
 15412  003644  0E00               	movlw	0
 15413  003646  6E24               	movwf	(___fldiv@b+3)^0,c
 15414  003648                     l8823:
 15415  003648  BE33               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15416  00364A  EF31  F01B         	goto	u8980
 15417  00364E  5033               	movf	(___fldiv@new_exp+1)^0,w,c
 15418  003650  E106               	bnz	u8981
 15419  003652  0432               	decf	___fldiv@new_exp^0,w,c
 15420  003654  B0D8               	btfsc	status,0,c
 15421  003656  EF2F  F01B         	goto	u8981
 15422  00365A  EF31  F01B         	goto	u8980
 15423  00365E                     u8981:
 15424  00365E  EF3F  F01B         	goto	l8827
 15425  003662                     u8980:
 15426  003662  0E00               	movlw	0
 15427  003664  6E33               	movwf	(___fldiv@new_exp+1)^0,c
 15428  003666  0E00               	movlw	0
 15429  003668  6E32               	movwf	___fldiv@new_exp^0,c
 15430  00366A  0E00               	movlw	0
 15431  00366C  6E21               	movwf	___fldiv@b^0,c
 15432  00366E  0E00               	movlw	0
 15433  003670  6E22               	movwf	(___fldiv@b+1)^0,c
 15434  003672  0E00               	movlw	0
 15435  003674  6E23               	movwf	(___fldiv@b+2)^0,c
 15436  003676  0E00               	movlw	0
 15437  003678  6E24               	movwf	(___fldiv@b+3)^0,c
 15438  00367A  0E00               	movlw	0
 15439  00367C  6E31               	movwf	___fldiv@sign^0,c
 15440  00367E                     l8827:
 15441  00367E  C032  F038         	movff	___fldiv@new_exp,___fldiv@bexp
 15442  003682  A038               	btfss	___fldiv@bexp^0,0,c
 15443  003684  EF46  F01B         	goto	u8991
 15444  003688  EF48  F01B         	goto	u8990
 15445  00368C                     u8991:
 15446  00368C  EF4B  F01B         	goto	l8833
 15447  003690                     u8990:
 15448  003690  8E23               	bsf	(___fldiv@b+2)^0,7,c
 15449  003692  EF4C  F01B         	goto	l8835
 15450  003696                     l8833:
 15451  003696  9E23               	bcf	(___fldiv@b+2)^0,7,c
 15452  003698                     l8835:
 15453  003698  90D8               	bcf	status,0,c
 15454  00369A  3038               	rrcf	___fldiv@bexp^0,w,c
 15455  00369C  6E24               	movwf	(___fldiv@b+3)^0,c
 15456  00369E  EF02  F01A         	goto	l8749
 15457  0036A2                     l1509:
 15458  0036A2  0012               	return		;funcret
 15459  0036A4                     __end_of___fldiv:
 15460                           	opt callstack 0
 15461                           
 15462 ;; *************** function ___awmod *****************
 15463 ;; Defined at:
 15464 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  dividend        2    5[COMRAM] int 
 15467 ;;  divisor         2    7[COMRAM] int 
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;  sign            1   10[COMRAM] unsigned char 
 15470 ;;  counter         1    9[COMRAM] unsigned char 
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  2    5[COMRAM] int 
 15473 ;; Registers used:
 15474 ;;		wreg, status,2, status,0
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15480 ;;      Params:         4       0       0       0       0       0       0       0       0
 15481 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15482 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15483 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15484 ;;Total ram usage:        6 bytes
 15485 ;; Hardware stack levels used:    1
 15486 ;; Hardware stack levels required when called:    2
 15487 ;; This function calls:
 15488 ;;		Nothing
 15489 ;; This function is called by:
 15490 ;;		_efgtoa
 15491 ;; This function uses a non-reentrant model
 15492 ;;
 15493                           
 15494                           	psect	text51
 15495  005A12                     __ptext51:
 15496                           	opt callstack 0
 15497  005A12                     ___awmod:
 15498                           	opt callstack 23
 15499  005A12  0E00               	movlw	0
 15500  005A14  6E0B               	movwf	___awmod@sign^0,c
 15501  005A16  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 15502  005A18  EF12  F02D         	goto	u5650
 15503  005A1C  EF10  F02D         	goto	u5651
 15504  005A20                     u5651:
 15505  005A20  EF18  F02D         	goto	l5953
 15506  005A24                     u5650:
 15507  005A24  6C06               	negf	___awmod@dividend^0,c
 15508  005A26  1E07               	comf	(___awmod@dividend+1)^0,f,c
 15509  005A28  B0D8               	btfsc	status,0,c
 15510  005A2A  2A07               	incf	(___awmod@dividend+1)^0,f,c
 15511  005A2C  0E01               	movlw	1
 15512  005A2E  6E0B               	movwf	___awmod@sign^0,c
 15513  005A30                     l5953:
 15514  005A30  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 15515  005A32  EF1F  F02D         	goto	u5660
 15516  005A36  EF1D  F02D         	goto	u5661
 15517  005A3A                     u5661:
 15518  005A3A  EF23  F02D         	goto	l5957
 15519  005A3E                     u5660:
 15520  005A3E  6C08               	negf	___awmod@divisor^0,c
 15521  005A40  1E09               	comf	(___awmod@divisor+1)^0,f,c
 15522  005A42  B0D8               	btfsc	status,0,c
 15523  005A44  2A09               	incf	(___awmod@divisor+1)^0,f,c
 15524  005A46                     l5957:
 15525  005A46  5008               	movf	___awmod@divisor^0,w,c
 15526  005A48  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 15527  005A4A  B4D8               	btfsc	status,2,c
 15528  005A4C  EF2A  F02D         	goto	u5671
 15529  005A50  EF2C  F02D         	goto	u5670
 15530  005A54                     u5671:
 15531  005A54  EF50  F02D         	goto	l5973
 15532  005A58                     u5670:
 15533  005A58  0E01               	movlw	1
 15534  005A5A  6E0A               	movwf	___awmod@counter^0,c
 15535  005A5C  EF34  F02D         	goto	l5963
 15536  005A60                     l5961:
 15537  005A60  90D8               	bcf	status,0,c
 15538  005A62  3608               	rlcf	___awmod@divisor^0,f,c
 15539  005A64  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 15540  005A66  2A0A               	incf	___awmod@counter^0,f,c
 15541  005A68                     l5963:
 15542  005A68  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 15543  005A6A  EF39  F02D         	goto	u5681
 15544  005A6E  EF3B  F02D         	goto	u5680
 15545  005A72                     u5681:
 15546  005A72  EF30  F02D         	goto	l5961
 15547  005A76                     u5680:
 15548  005A76                     l5965:
 15549  005A76  5008               	movf	___awmod@divisor^0,w,c
 15550  005A78  5C06               	subwf	___awmod@dividend^0,w,c
 15551  005A7A  5009               	movf	(___awmod@divisor+1)^0,w,c
 15552  005A7C  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 15553  005A7E  A0D8               	btfss	status,0,c
 15554  005A80  EF44  F02D         	goto	u5691
 15555  005A84  EF46  F02D         	goto	u5690
 15556  005A88                     u5691:
 15557  005A88  EF4A  F02D         	goto	l5969
 15558  005A8C                     u5690:
 15559  005A8C  5008               	movf	___awmod@divisor^0,w,c
 15560  005A8E  5E06               	subwf	___awmod@dividend^0,f,c
 15561  005A90  5009               	movf	(___awmod@divisor+1)^0,w,c
 15562  005A92  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 15563  005A94                     l5969:
 15564  005A94  90D8               	bcf	status,0,c
 15565  005A96  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 15566  005A98  3208               	rrcf	___awmod@divisor^0,f,c
 15567  005A9A  2E0A               	decfsz	___awmod@counter^0,f,c
 15568  005A9C  EF3B  F02D         	goto	l5965
 15569  005AA0                     l5973:
 15570  005AA0  500B               	movf	___awmod@sign^0,w,c
 15571  005AA2  B4D8               	btfsc	status,2,c
 15572  005AA4  EF56  F02D         	goto	u5701
 15573  005AA8  EF58  F02D         	goto	u5700
 15574  005AAC                     u5701:
 15575  005AAC  EF5C  F02D         	goto	l5977
 15576  005AB0                     u5700:
 15577  005AB0  6C06               	negf	___awmod@dividend^0,c
 15578  005AB2  1E07               	comf	(___awmod@dividend+1)^0,f,c
 15579  005AB4  B0D8               	btfsc	status,0,c
 15580  005AB6  2A07               	incf	(___awmod@dividend+1)^0,f,c
 15581  005AB8                     l5977:
 15582  005AB8  C006  F006         	movff	___awmod@dividend,?___awmod
 15583  005ABC  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 15584  005AC0  0012               	return		;funcret
 15585  005AC2                     __end_of___awmod:
 15586                           	opt callstack 0
 15587                           
 15588 ;; *************** function ___awdiv *****************
 15589 ;; Defined at:
 15590 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 15591 ;; Parameters:    Size  Location     Type
 15592 ;;  dividend        2    5[COMRAM] int 
 15593 ;;  divisor         2    7[COMRAM] int 
 15594 ;; Auto vars:     Size  Location     Type
 15595 ;;  quotient        2   11[COMRAM] int 
 15596 ;;  sign            1   10[COMRAM] unsigned char 
 15597 ;;  counter         1    9[COMRAM] unsigned char 
 15598 ;; Return value:  Size  Location     Type
 15599 ;;                  2    5[COMRAM] int 
 15600 ;; Registers used:
 15601 ;;		wreg, status,2, status,0
 15602 ;; Tracked objects:
 15603 ;;		On entry : 0/0
 15604 ;;		On exit  : 0/0
 15605 ;;		Unchanged: 0/0
 15606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15607 ;;      Params:         4       0       0       0       0       0       0       0       0
 15608 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15609 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15610 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15611 ;;Total ram usage:        8 bytes
 15612 ;; Hardware stack levels used:    1
 15613 ;; Hardware stack levels required when called:    2
 15614 ;; This function calls:
 15615 ;;		Nothing
 15616 ;; This function is called by:
 15617 ;;		_efgtoa
 15618 ;; This function uses a non-reentrant model
 15619 ;;
 15620                           
 15621                           	psect	text52
 15622  0057DA                     __ptext52:
 15623                           	opt callstack 0
 15624  0057DA                     ___awdiv:
 15625                           	opt callstack 23
 15626  0057DA  0E00               	movlw	0
 15627  0057DC  6E0B               	movwf	___awdiv@sign^0,c
 15628  0057DE  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 15629  0057E0  EFF6  F02B         	goto	u5590
 15630  0057E4  EFF4  F02B         	goto	u5591
 15631  0057E8                     u5591:
 15632  0057E8  EFFC  F02B         	goto	l5909
 15633  0057EC                     u5590:
 15634  0057EC  6C08               	negf	___awdiv@divisor^0,c
 15635  0057EE  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 15636  0057F0  B0D8               	btfsc	status,0,c
 15637  0057F2  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 15638  0057F4  0E01               	movlw	1
 15639  0057F6  6E0B               	movwf	___awdiv@sign^0,c
 15640  0057F8                     l5909:
 15641  0057F8  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 15642  0057FA  EF03  F02C         	goto	u5600
 15643  0057FE  EF01  F02C         	goto	u5601
 15644  005802                     u5601:
 15645  005802  EF09  F02C         	goto	l5915
 15646  005806                     u5600:
 15647  005806  6C06               	negf	___awdiv@dividend^0,c
 15648  005808  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 15649  00580A  B0D8               	btfsc	status,0,c
 15650  00580C  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 15651  00580E  0E01               	movlw	1
 15652  005810  1A0B               	xorwf	___awdiv@sign^0,f,c
 15653  005812                     l5915:
 15654  005812  0E00               	movlw	0
 15655  005814  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 15656  005816  0E00               	movlw	0
 15657  005818  6E0C               	movwf	___awdiv@quotient^0,c
 15658  00581A  5008               	movf	___awdiv@divisor^0,w,c
 15659  00581C  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 15660  00581E  B4D8               	btfsc	status,2,c
 15661  005820  EF14  F02C         	goto	u5611
 15662  005824  EF16  F02C         	goto	u5610
 15663  005828                     u5611:
 15664  005828  EF3E  F02C         	goto	l5937
 15665  00582C                     u5610:
 15666  00582C  0E01               	movlw	1
 15667  00582E  6E0A               	movwf	___awdiv@counter^0,c
 15668  005830  EF1E  F02C         	goto	l5923
 15669  005834                     l5921:
 15670  005834  90D8               	bcf	status,0,c
 15671  005836  3608               	rlcf	___awdiv@divisor^0,f,c
 15672  005838  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 15673  00583A  2A0A               	incf	___awdiv@counter^0,f,c
 15674  00583C                     l5923:
 15675  00583C  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 15676  00583E  EF23  F02C         	goto	u5621
 15677  005842  EF25  F02C         	goto	u5620
 15678  005846                     u5621:
 15679  005846  EF1A  F02C         	goto	l5921
 15680  00584A                     u5620:
 15681  00584A                     l5925:
 15682  00584A  90D8               	bcf	status,0,c
 15683  00584C  360C               	rlcf	___awdiv@quotient^0,f,c
 15684  00584E  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 15685  005850  5008               	movf	___awdiv@divisor^0,w,c
 15686  005852  5C06               	subwf	___awdiv@dividend^0,w,c
 15687  005854  5009               	movf	(___awdiv@divisor+1)^0,w,c
 15688  005856  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 15689  005858  A0D8               	btfss	status,0,c
 15690  00585A  EF31  F02C         	goto	u5631
 15691  00585E  EF33  F02C         	goto	u5630
 15692  005862                     u5631:
 15693  005862  EF38  F02C         	goto	l5933
 15694  005866                     u5630:
 15695  005866  5008               	movf	___awdiv@divisor^0,w,c
 15696  005868  5E06               	subwf	___awdiv@dividend^0,f,c
 15697  00586A  5009               	movf	(___awdiv@divisor+1)^0,w,c
 15698  00586C  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 15699  00586E  800C               	bsf	___awdiv@quotient^0,0,c
 15700  005870                     l5933:
 15701  005870  90D8               	bcf	status,0,c
 15702  005872  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 15703  005874  3208               	rrcf	___awdiv@divisor^0,f,c
 15704  005876  2E0A               	decfsz	___awdiv@counter^0,f,c
 15705  005878  EF25  F02C         	goto	l5925
 15706  00587C                     l5937:
 15707  00587C  500B               	movf	___awdiv@sign^0,w,c
 15708  00587E  B4D8               	btfsc	status,2,c
 15709  005880  EF44  F02C         	goto	u5641
 15710  005884  EF46  F02C         	goto	u5640
 15711  005888                     u5641:
 15712  005888  EF4A  F02C         	goto	l5941
 15713  00588C                     u5640:
 15714  00588C  6C0C               	negf	___awdiv@quotient^0,c
 15715  00588E  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 15716  005890  B0D8               	btfsc	status,0,c
 15717  005892  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 15718  005894                     l5941:
 15719  005894  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 15720  005898  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 15721  00589C  0012               	return		;funcret
 15722  00589E                     __end_of___awdiv:
 15723                           	opt callstack 0
 15724                           
 15725 ;; *************** function _dtoa *****************
 15726 ;; Defined at:
 15727 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 15730 ;;		 -> sprintf@f(6), 
 15731 ;;  d               8   34[COMRAM] long long 
 15732 ;; Auto vars:     Size  Location     Type
 15733 ;;  n               8   58[COMRAM] long long 
 15734 ;;  i               2   66[COMRAM] int 
 15735 ;;  s               2   56[COMRAM] int 
 15736 ;;  w               2   54[COMRAM] int 
 15737 ;;  p               2   52[COMRAM] int 
 15738 ;; Return value:  Size  Location     Type
 15739 ;;                  2   32[COMRAM] int 
 15740 ;; Registers used:
 15741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15742 ;; Tracked objects:
 15743 ;;		On entry : 0/0
 15744 ;;		On exit  : 0/0
 15745 ;;		Unchanged: 0/0
 15746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15747 ;;      Params:        10       0       0       0       0       0       0       0       0
 15748 ;;      Locals:        18       0       0       0       0       0       0       0       0
 15749 ;;      Temps:          8       0       0       0       0       0       0       0       0
 15750 ;;      Totals:        36       0       0       0       0       0       0       0       0
 15751 ;;Total ram usage:       36 bytes
 15752 ;; Hardware stack levels used:    1
 15753 ;; Hardware stack levels required when called:    6
 15754 ;; This function calls:
 15755 ;;		___aodiv
 15756 ;;		___aomod
 15757 ;;		_abs
 15758 ;;		_pad
 15759 ;; This function is called by:
 15760 ;;		_vfpfcnvrt
 15761 ;; This function uses a non-reentrant model
 15762 ;;
 15763                           
 15764                           	psect	text53
 15765  003996                     __ptext53:
 15766                           	opt callstack 0
 15767  003996                     _dtoa:
 15768                           	opt callstack 20
 15769  003996                     
 15770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 15771  003996  C023  F03B         	movff	dtoa@d,dtoa@n
 15772  00399A  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
 15773  00399E  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
 15774  0039A2  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
 15775  0039A6  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
 15776  0039AA  C028  F040         	movff	dtoa@d+5,dtoa@n+5
 15777  0039AE  C029  F041         	movff	dtoa@d+6,dtoa@n+6
 15778  0039B2  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
 15779  0039B6                     
 15780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 15781  0039B6  BE42               	btfsc	(dtoa@n+7)^0,7,c
 15782  0039B8  EFE0  F01C         	goto	u6031
 15783  0039BC  EFE3  F01C         	goto	u6030
 15784  0039C0                     u6031:
 15785  0039C0  0E01               	movlw	1
 15786  0039C2  EFE4  F01C         	goto	u6040
 15787  0039C6                     u6030:
 15788  0039C6  0E00               	movlw	0
 15789  0039C8                     u6040:
 15790  0039C8  6E39               	movwf	dtoa@s^0,c
 15791  0039CA  6A3A               	clrf	(dtoa@s+1)^0,c
 15792                           
 15793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 15794  0039CC  5039               	movf	dtoa@s^0,w,c
 15795  0039CE  103A               	iorwf	(dtoa@s+1)^0,w,c
 15796  0039D0  B4D8               	btfsc	status,2,c
 15797  0039D2  EFED  F01C         	goto	u6051
 15798  0039D6  EFEF  F01C         	goto	u6050
 15799  0039DA                     u6051:
 15800  0039DA  EFFF  F01C         	goto	l6167
 15801  0039DE                     u6050:
 15802  0039DE                     
 15803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 15804  0039DE  1E42               	comf	(dtoa@n+7)^0,f,c
 15805  0039E0  1E41               	comf	(dtoa@n+6)^0,f,c
 15806  0039E2  1E40               	comf	(dtoa@n+5)^0,f,c
 15807  0039E4  1E3F               	comf	(dtoa@n+4)^0,f,c
 15808  0039E6  1E3E               	comf	(dtoa@n+3)^0,f,c
 15809  0039E8  1E3D               	comf	(dtoa@n+2)^0,f,c
 15810  0039EA  1E3C               	comf	(dtoa@n+1)^0,f,c
 15811  0039EC  6C3B               	negf	dtoa@n^0,c
 15812  0039EE  0E00               	movlw	0
 15813  0039F0  223C               	addwfc	(dtoa@n+1)^0,f,c
 15814  0039F2  223D               	addwfc	(dtoa@n+2)^0,f,c
 15815  0039F4  223E               	addwfc	(dtoa@n+3)^0,f,c
 15816  0039F6  223F               	addwfc	(dtoa@n+4)^0,f,c
 15817  0039F8  2240               	addwfc	(dtoa@n+5)^0,f,c
 15818  0039FA  2241               	addwfc	(dtoa@n+6)^0,f,c
 15819  0039FC  2242               	addwfc	(dtoa@n+7)^0,f,c
 15820  0039FE                     l6167:
 15821                           
 15822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 15823  0039FE  0101               	movlb	1	; () banked
 15824  003A00  BF31               	btfsc	(_prec+1)& (0+255),7,b
 15825  003A02  EF05  F01D         	goto	u6061
 15826  003A06  EF07  F01D         	goto	u6060
 15827  003A0A                     u6061:
 15828  003A0A  EF08  F01D         	goto	l6171
 15829  003A0E                     u6060:
 15830  003A0E                     
 15831                           ; BSR set to: 1
 15832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 15833  003A0E  9332               	bcf	_flags& (0+255),1,b
 15834  003A10                     l6171:
 15835                           
 15836                           ; BSR set to: 1
 15837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 15838  003A10  BF31               	btfsc	(_prec+1)& (0+255),7,b
 15839  003A12  EF15  F01D         	goto	u6070
 15840  003A16  5131               	movf	(_prec+1)& (0+255),w,b
 15841  003A18  E106               	bnz	u6071
 15842  003A1A  0530               	decf	_prec& (0+255),w,b
 15843  003A1C  B0D8               	btfsc	status,0,c
 15844  003A1E  EF13  F01D         	goto	u6071
 15845  003A22  EF15  F01D         	goto	u6070
 15846  003A26                     u6071:
 15847  003A26  EF1B  F01D         	goto	l778
 15848  003A2A                     u6070:
 15849  003A2A                     
 15850                           ; BSR set to: 1
 15851  003A2A  0E00               	movlw	0
 15852  003A2C  6E36               	movwf	(dtoa@p+1)^0,c
 15853  003A2E  0E01               	movlw	1
 15854  003A30  6E35               	movwf	dtoa@p^0,c
 15855  003A32  EF1F  F01D         	goto	l780
 15856  003A36                     l778:
 15857                           
 15858                           ; BSR set to: 1
 15859  003A36  C130  F035         	movff	_prec,dtoa@p
 15860  003A3A  C131  F036         	movff	_prec+1,dtoa@p+1
 15861  003A3E                     l780:
 15862                           
 15863                           ; BSR set to: 1
 15864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 15865  003A3E  C12E  F037         	movff	_width,dtoa@w
 15866  003A42  C12F  F038         	movff	_width+1,dtoa@w+1
 15867  003A46                     
 15868                           ; BSR set to: 1
 15869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 15870  003A46  5039               	movf	dtoa@s^0,w,c
 15871  003A48  103A               	iorwf	(dtoa@s+1)^0,w,c
 15872  003A4A  A4D8               	btfss	status,2,c
 15873  003A4C  EF2A  F01D         	goto	u6081
 15874  003A50  EF2C  F01D         	goto	u6080
 15875  003A54                     u6081:
 15876  003A54  EF33  F01D         	goto	l6179
 15877  003A58                     u6080:
 15878  003A58                     
 15879                           ; BSR set to: 1
 15880  003A58  A532               	btfss	_flags& (0+255),2,b
 15881  003A5A  EF31  F01D         	goto	u6091
 15882  003A5E  EF33  F01D         	goto	u6090
 15883  003A62                     u6091:
 15884  003A62  EF36  F01D         	goto	l6181
 15885  003A66                     u6090:
 15886  003A66                     l6179:
 15887                           
 15888                           ; BSR set to: 1
 15889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 15890  003A66  0637               	decf	dtoa@w^0,f,c
 15891  003A68  A0D8               	btfss	status,0,c
 15892  003A6A  0638               	decf	(dtoa@w+1)^0,f,c
 15893  003A6C                     l6181:
 15894                           
 15895                           ; BSR set to: 1
 15896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 15897  003A6C  0E00               	movlw	0
 15898  003A6E  6E44               	movwf	(dtoa@i+1)^0,c
 15899  003A70  0E4F               	movlw	79
 15900  003A72  6E43               	movwf	dtoa@i^0,c
 15901  003A74                     
 15902                           ; BSR set to: 1
 15903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 15904  003A74  0E00               	movlw	0
 15905  003A76  6F99               	movwf	(_dbuf+79)& (0+255),b
 15906                           
 15907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15908  003A78  EFBA  F01D         	goto	l6195
 15909  003A7C                     l6185:
 15910                           
 15911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 15912  003A7C  0643               	decf	dtoa@i^0,f,c
 15913  003A7E  A0D8               	btfss	status,0,c
 15914  003A80  0644               	decf	(dtoa@i+1)^0,f,c
 15915  003A82                     
 15916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 15917  003A82  0E4A               	movlw	low _dbuf
 15918  003A84  2443               	addwf	dtoa@i^0,w,c
 15919  003A86  6ED9               	movwf	fsr2l,c
 15920  003A88  0E01               	movlw	high _dbuf
 15921  003A8A  2044               	addwfc	(dtoa@i+1)^0,w,c
 15922  003A8C  6EDA               	movwf	fsr2h,c
 15923  003A8E  C03B  F006         	movff	dtoa@n,___aomod@dividend
 15924  003A92  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
 15925  003A96  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
 15926  003A9A  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
 15927  003A9E  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 15928  003AA2  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 15929  003AA6  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 15930  003AAA  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 15931  003AAE  0E0A               	movlw	10
 15932  003AB0  6E0E               	movwf	___aomod@divisor^0,c
 15933  003AB2  0E00               	movlw	0
 15934  003AB4  6E0F               	movwf	(___aomod@divisor+1)^0,c
 15935  003AB6  0E00               	movlw	0
 15936  003AB8  6E10               	movwf	(___aomod@divisor+2)^0,c
 15937  003ABA  0E00               	movlw	0
 15938  003ABC  6E11               	movwf	(___aomod@divisor+3)^0,c
 15939  003ABE  0E00               	movlw	0
 15940  003AC0  6E12               	movwf	(___aomod@divisor+4)^0,c
 15941  003AC2  0E00               	movlw	0
 15942  003AC4  6E13               	movwf	(___aomod@divisor+5)^0,c
 15943  003AC6  0E00               	movlw	0
 15944  003AC8  6E14               	movwf	(___aomod@divisor+6)^0,c
 15945  003ACA  0E00               	movlw	0
 15946  003ACC  6E15               	movwf	(___aomod@divisor+7)^0,c
 15947  003ACE  EC81  F026         	call	___aomod	;wreg free
 15948  003AD2  C006  F02B         	movff	?___aomod,??_dtoa
 15949  003AD6  C007  F02C         	movff	?___aomod+1,??_dtoa+1
 15950  003ADA  C008  F02D         	movff	?___aomod+2,??_dtoa+2
 15951  003ADE  C009  F02E         	movff	?___aomod+3,??_dtoa+3
 15952  003AE2  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
 15953  003AE6  C00B  F030         	movff	?___aomod+5,??_dtoa+5
 15954  003AEA  C00C  F031         	movff	?___aomod+6,??_dtoa+6
 15955  003AEE  C00D  F032         	movff	?___aomod+7,??_dtoa+7
 15956  003AF2  C02B  F018         	movff	??_dtoa,abs@a
 15957  003AF6  C02D  F019         	movff	??_dtoa+2,abs@a+1
 15958  003AFA  ECC6  F032         	call	_abs	;wreg free
 15959  003AFE  5018               	movf	?_abs^0,w,c
 15960  003B00  0F30               	addlw	48
 15961  003B02  6EDF               	movwf	indf2,c
 15962  003B04                     
 15963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 15964  003B04  0635               	decf	dtoa@p^0,f,c
 15965  003B06  A0D8               	btfss	status,0,c
 15966  003B08  0636               	decf	(dtoa@p+1)^0,f,c
 15967  003B0A                     
 15968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 15969  003B0A  0637               	decf	dtoa@w^0,f,c
 15970  003B0C  A0D8               	btfss	status,0,c
 15971  003B0E  0638               	decf	(dtoa@w+1)^0,f,c
 15972  003B10                     
 15973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 15974  003B10  C03B  F006         	movff	dtoa@n,___aodiv@dividend
 15975  003B14  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 15976  003B18  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 15977  003B1C  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 15978  003B20  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 15979  003B24  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 15980  003B28  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 15981  003B2C  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 15982  003B30  0E0A               	movlw	10
 15983  003B32  6E0E               	movwf	___aodiv@divisor^0,c
 15984  003B34  0E00               	movlw	0
 15985  003B36  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 15986  003B38  0E00               	movlw	0
 15987  003B3A  6E10               	movwf	(___aodiv@divisor+2)^0,c
 15988  003B3C  0E00               	movlw	0
 15989  003B3E  6E11               	movwf	(___aodiv@divisor+3)^0,c
 15990  003B40  0E00               	movlw	0
 15991  003B42  6E12               	movwf	(___aodiv@divisor+4)^0,c
 15992  003B44  0E00               	movlw	0
 15993  003B46  6E13               	movwf	(___aodiv@divisor+5)^0,c
 15994  003B48  0E00               	movlw	0
 15995  003B4A  6E14               	movwf	(___aodiv@divisor+6)^0,c
 15996  003B4C  0E00               	movlw	0
 15997  003B4E  6E15               	movwf	(___aodiv@divisor+7)^0,c
 15998  003B50  ECBD  F025         	call	___aodiv	;wreg free
 15999  003B54  C006  F03B         	movff	?___aodiv,dtoa@n
 16000  003B58  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
 16001  003B5C  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
 16002  003B60  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
 16003  003B64  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
 16004  003B68  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
 16005  003B6C  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
 16006  003B70  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
 16007  003B74                     l6195:
 16008                           
 16009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16010  003B74  BE44               	btfsc	(dtoa@i+1)^0,7,c
 16011  003B76  EFC5  F01D         	goto	u6101
 16012  003B7A  5044               	movf	(dtoa@i+1)^0,w,c
 16013  003B7C  E108               	bnz	u6100
 16014  003B7E  0443               	decf	dtoa@i^0,w,c
 16015  003B80  A0D8               	btfss	status,0,c
 16016  003B82  EFC5  F01D         	goto	u6101
 16017  003B86  EFC7  F01D         	goto	u6100
 16018  003B8A                     u6101:
 16019  003B8A  EFF8  F01D         	goto	l6205
 16020  003B8E                     u6100:
 16021  003B8E  503B               	movf	dtoa@n^0,w,c
 16022  003B90  103C               	iorwf	(dtoa@n+1)^0,w,c
 16023  003B92  103D               	iorwf	(dtoa@n+2)^0,w,c
 16024  003B94  103E               	iorwf	(dtoa@n+3)^0,w,c
 16025  003B96  103F               	iorwf	(dtoa@n+4)^0,w,c
 16026  003B98  1040               	iorwf	(dtoa@n+5)^0,w,c
 16027  003B9A  1041               	iorwf	(dtoa@n+6)^0,w,c
 16028  003B9C  1042               	iorwf	(dtoa@n+7)^0,w,c
 16029  003B9E  A4D8               	btfss	status,2,c
 16030  003BA0  EFD4  F01D         	goto	u6111
 16031  003BA4  EFD6  F01D         	goto	u6110
 16032  003BA8                     u6111:
 16033  003BA8  EF3E  F01D         	goto	l6185
 16034  003BAC                     u6110:
 16035  003BAC  BE36               	btfsc	(dtoa@p+1)^0,7,c
 16036  003BAE  EFE3  F01D         	goto	u6120
 16037  003BB2  5036               	movf	(dtoa@p+1)^0,w,c
 16038  003BB4  E106               	bnz	u6121
 16039  003BB6  0435               	decf	dtoa@p^0,w,c
 16040  003BB8  B0D8               	btfsc	status,0,c
 16041  003BBA  EFE1  F01D         	goto	u6121
 16042  003BBE  EFE3  F01D         	goto	u6120
 16043  003BC2                     u6121:
 16044  003BC2  EF3E  F01D         	goto	l6185
 16045  003BC6                     u6120:
 16046  003BC6  BE38               	btfsc	(dtoa@w+1)^0,7,c
 16047  003BC8  EFEE  F01D         	goto	u6131
 16048  003BCC  5038               	movf	(dtoa@w+1)^0,w,c
 16049  003BCE  E108               	bnz	u6130
 16050  003BD0  0437               	decf	dtoa@w^0,w,c
 16051  003BD2  A0D8               	btfss	status,0,c
 16052  003BD4  EFEE  F01D         	goto	u6131
 16053  003BD8  EFF0  F01D         	goto	u6130
 16054  003BDC                     u6131:
 16055  003BDC  EFF8  F01D         	goto	l6205
 16056  003BE0                     u6130:
 16057  003BE0  0101               	movlb	1	; () banked
 16058  003BE2  B332               	btfsc	_flags& (0+255),1,b
 16059  003BE4  EFF6  F01D         	goto	u6141
 16060  003BE8  EFF8  F01D         	goto	u6140
 16061  003BEC                     u6141:
 16062  003BEC  EF3E  F01D         	goto	l6185
 16063  003BF0                     u6140:
 16064  003BF0                     l6205:
 16065                           
 16066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 16067  003BF0  5039               	movf	dtoa@s^0,w,c
 16068  003BF2  103A               	iorwf	(dtoa@s+1)^0,w,c
 16069  003BF4  A4D8               	btfss	status,2,c
 16070  003BF6  EFFF  F01D         	goto	u6151
 16071  003BFA  EF01  F01E         	goto	u6150
 16072  003BFE                     u6151:
 16073  003BFE  EF09  F01E         	goto	l6209
 16074  003C02                     u6150:
 16075  003C02  0101               	movlb	1	; () banked
 16076  003C04  A532               	btfss	_flags& (0+255),2,b
 16077  003C06  EF07  F01E         	goto	u6161
 16078  003C0A  EF09  F01E         	goto	u6160
 16079  003C0E                     u6161:
 16080  003C0E  EF27  F01E         	goto	l6219
 16081  003C12                     u6160:
 16082  003C12                     l6209:
 16083                           
 16084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 16085  003C12  0643               	decf	dtoa@i^0,f,c
 16086  003C14  A0D8               	btfss	status,0,c
 16087  003C16  0644               	decf	(dtoa@i+1)^0,f,c
 16088  003C18                     
 16089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 16090  003C18  5039               	movf	dtoa@s^0,w,c
 16091  003C1A  103A               	iorwf	(dtoa@s+1)^0,w,c
 16092  003C1C  A4D8               	btfss	status,2,c
 16093  003C1E  EF13  F01E         	goto	u6171
 16094  003C22  EF15  F01E         	goto	u6170
 16095  003C26                     u6171:
 16096  003C26  EF1B  F01E         	goto	l6215
 16097  003C2A                     u6170:
 16098  003C2A  0E00               	movlw	0
 16099  003C2C  6E34               	movwf	(_dtoa$905+1)^0,c
 16100  003C2E  0E2B               	movlw	43
 16101  003C30  6E33               	movwf	_dtoa$905^0,c
 16102  003C32  EF1F  F01E         	goto	l6217
 16103  003C36                     l6215:
 16104  003C36  0E00               	movlw	0
 16105  003C38  6E34               	movwf	(_dtoa$905+1)^0,c
 16106  003C3A  0E2D               	movlw	45
 16107  003C3C  6E33               	movwf	_dtoa$905^0,c
 16108  003C3E                     l6217:
 16109  003C3E  0E4A               	movlw	low _dbuf
 16110  003C40  2443               	addwf	dtoa@i^0,w,c
 16111  003C42  6ED9               	movwf	fsr2l,c
 16112  003C44  0E01               	movlw	high _dbuf
 16113  003C46  2044               	addwfc	(dtoa@i+1)^0,w,c
 16114  003C48  6EDA               	movwf	fsr2h,c
 16115  003C4A  C033  FFDF         	movff	_dtoa$905,indf2
 16116  003C4E                     l6219:
 16117                           
 16118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 16119  003C4E  C021  F016         	movff	dtoa@fp,pad@fp
 16120  003C52  C022  F017         	movff	dtoa@fp+1,pad@fp+1
 16121  003C56  0E4A               	movlw	low _dbuf
 16122  003C58  2443               	addwf	dtoa@i^0,w,c
 16123  003C5A  6E18               	movwf	pad@buf^0,c
 16124  003C5C  0E01               	movlw	high _dbuf
 16125  003C5E  2044               	addwfc	(dtoa@i+1)^0,w,c
 16126  003C60  6E19               	movwf	(pad@buf+1)^0,c
 16127  003C62  C037  F01A         	movff	dtoa@w,pad@p
 16128  003C66  C038  F01B         	movff	dtoa@w+1,pad@p+1
 16129  003C6A  EC8A  F02B         	call	_pad	;wreg free
 16130  003C6E  C016  F021         	movff	?_pad,?_dtoa
 16131  003C72  C017  F022         	movff	?_pad+1,?_dtoa+1
 16132  003C76  0012               	return		;funcret
 16133  003C78                     __end_of_dtoa:
 16134                           	opt callstack 0
 16135                           
 16136 ;; *************** function _abs *****************
 16137 ;; Defined at:
 16138 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 16139 ;; Parameters:    Size  Location     Type
 16140 ;;  a               2   23[COMRAM] int 
 16141 ;; Auto vars:     Size  Location     Type
 16142 ;;		None
 16143 ;; Return value:  Size  Location     Type
 16144 ;;                  2   23[COMRAM] int 
 16145 ;; Registers used:
 16146 ;;		wreg, status,2, status,0
 16147 ;; Tracked objects:
 16148 ;;		On entry : 0/0
 16149 ;;		On exit  : 0/0
 16150 ;;		Unchanged: 0/0
 16151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16152 ;;      Params:         2       0       0       0       0       0       0       0       0
 16153 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16154 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16155 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16156 ;;Total ram usage:        4 bytes
 16157 ;; Hardware stack levels used:    1
 16158 ;; Hardware stack levels required when called:    2
 16159 ;; This function calls:
 16160 ;;		Nothing
 16161 ;; This function is called by:
 16162 ;;		_dtoa
 16163 ;; This function uses a non-reentrant model
 16164 ;;
 16165                           
 16166                           	psect	text54
 16167  00658C                     __ptext54:
 16168                           	opt callstack 0
 16169  00658C                     _abs:
 16170                           	opt callstack 23
 16171  00658C  BE19               	btfsc	(abs@a+1)^0,7,c
 16172  00658E  EFD3  F032         	goto	u4790
 16173  006592  5019               	movf	(abs@a+1)^0,w,c
 16174  006594  E106               	bnz	u4791
 16175  006596  0418               	decf	abs@a^0,w,c
 16176  006598  B0D8               	btfsc	status,0,c
 16177  00659A  EFD1  F032         	goto	u4791
 16178  00659E  EFD3  F032         	goto	u4790
 16179  0065A2                     u4791:
 16180  0065A2  EFE1  F032         	goto	l1613
 16181  0065A6                     u4790:
 16182  0065A6  C018  F01A         	movff	abs@a,??_abs
 16183  0065AA  C019  F01B         	movff	abs@a+1,??_abs+1
 16184  0065AE  1E1A               	comf	??_abs^0,f,c
 16185  0065B0  1E1B               	comf	(??_abs+1)^0,f,c
 16186  0065B2  4A1A               	infsnz	??_abs^0,f,c
 16187  0065B4  2A1B               	incf	(??_abs+1)^0,f,c
 16188  0065B6  C01A  F018         	movff	??_abs,?_abs
 16189  0065BA  C01B  F019         	movff	??_abs+1,?_abs+1
 16190  0065BE  EFE5  F032         	goto	l1616
 16191  0065C2                     l1613:
 16192  0065C2  C018  F018         	movff	abs@a,?_abs
 16193  0065C6  C019  F019         	movff	abs@a+1,?_abs+1
 16194  0065CA                     l1616:
 16195  0065CA  0012               	return		;funcret
 16196  0065CC                     __end_of_abs:
 16197                           	opt callstack 0
 16198                           
 16199 ;; *************** function ___aomod *****************
 16200 ;; Defined at:
 16201 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;  dividend        8    5[COMRAM] long long 
 16204 ;;  divisor         8   13[COMRAM] long long 
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;  sign            1   22[COMRAM] unsigned char 
 16207 ;;  counter         1   21[COMRAM] unsigned char 
 16208 ;; Return value:  Size  Location     Type
 16209 ;;                  8    5[COMRAM] long long 
 16210 ;; Registers used:
 16211 ;;		wreg, status,2, status,0
 16212 ;; Tracked objects:
 16213 ;;		On entry : 0/0
 16214 ;;		On exit  : 0/0
 16215 ;;		Unchanged: 0/0
 16216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16217 ;;      Params:        16       0       0       0       0       0       0       0       0
 16218 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16219 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16220 ;;      Totals:        18       0       0       0       0       0       0       0       0
 16221 ;;Total ram usage:       18 bytes
 16222 ;; Hardware stack levels used:    1
 16223 ;; Hardware stack levels required when called:    2
 16224 ;; This function calls:
 16225 ;;		Nothing
 16226 ;; This function is called by:
 16227 ;;		_dtoa
 16228 ;; This function uses a non-reentrant model
 16229 ;;
 16230                           
 16231                           	psect	text55
 16232  004D02                     __ptext55:
 16233                           	opt callstack 0
 16234  004D02                     ___aomod:
 16235                           	opt callstack 23
 16236  004D02  0E00               	movlw	0
 16237  004D04  6E17               	movwf	___aomod@sign^0,c
 16238  004D06  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 16239  004D08  EF8A  F026         	goto	u5110
 16240  004D0C  EF88  F026         	goto	u5111
 16241  004D10                     u5111:
 16242  004D10  EF9C  F026         	goto	l5599
 16243  004D14                     u5110:
 16244  004D14  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 16245  004D16  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 16246  004D18  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 16247  004D1A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 16248  004D1C  1E09               	comf	(___aomod@dividend+3)^0,f,c
 16249  004D1E  1E08               	comf	(___aomod@dividend+2)^0,f,c
 16250  004D20  1E07               	comf	(___aomod@dividend+1)^0,f,c
 16251  004D22  6C06               	negf	___aomod@dividend^0,c
 16252  004D24  0E00               	movlw	0
 16253  004D26  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 16254  004D28  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 16255  004D2A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 16256  004D2C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 16257  004D2E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 16258  004D30  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 16259  004D32  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 16260  004D34  0E01               	movlw	1
 16261  004D36  6E17               	movwf	___aomod@sign^0,c
 16262  004D38                     l5599:
 16263  004D38  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 16264  004D3A  EFA3  F026         	goto	u5120
 16265  004D3E  EFA1  F026         	goto	u5121
 16266  004D42                     u5121:
 16267  004D42  EFB3  F026         	goto	l5603
 16268  004D46                     u5120:
 16269  004D46  1E15               	comf	(___aomod@divisor+7)^0,f,c
 16270  004D48  1E14               	comf	(___aomod@divisor+6)^0,f,c
 16271  004D4A  1E13               	comf	(___aomod@divisor+5)^0,f,c
 16272  004D4C  1E12               	comf	(___aomod@divisor+4)^0,f,c
 16273  004D4E  1E11               	comf	(___aomod@divisor+3)^0,f,c
 16274  004D50  1E10               	comf	(___aomod@divisor+2)^0,f,c
 16275  004D52  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 16276  004D54  6C0E               	negf	___aomod@divisor^0,c
 16277  004D56  0E00               	movlw	0
 16278  004D58  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 16279  004D5A  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 16280  004D5C  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 16281  004D5E  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 16282  004D60  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 16283  004D62  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 16284  004D64  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 16285  004D66                     l5603:
 16286  004D66  500E               	movf	___aomod@divisor^0,w,c
 16287  004D68  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 16288  004D6A  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 16289  004D6C  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 16290  004D6E  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 16291  004D70  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 16292  004D72  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 16293  004D74  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 16294  004D76  B4D8               	btfsc	status,2,c
 16295  004D78  EFC0  F026         	goto	u5131
 16296  004D7C  EFC2  F026         	goto	u5130
 16297  004D80                     u5131:
 16298  004D80  EF0A  F027         	goto	l5619
 16299  004D84                     u5130:
 16300  004D84  0E01               	movlw	1
 16301  004D86  6E16               	movwf	___aomod@counter^0,c
 16302  004D88  EFD0  F026         	goto	l5609
 16303  004D8C                     l5607:
 16304  004D8C  90D8               	bcf	status,0,c
 16305  004D8E  360E               	rlcf	___aomod@divisor^0,f,c
 16306  004D90  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 16307  004D92  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 16308  004D94  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 16309  004D96  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 16310  004D98  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 16311  004D9A  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 16312  004D9C  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 16313  004D9E  2A16               	incf	___aomod@counter^0,f,c
 16314  004DA0                     l5609:
 16315  004DA0  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 16316  004DA2  EFD5  F026         	goto	u5141
 16317  004DA6  EFD7  F026         	goto	u5140
 16318  004DAA                     u5141:
 16319  004DAA  EFC6  F026         	goto	l5607
 16320  004DAE                     u5140:
 16321  004DAE                     l5611:
 16322  004DAE  500E               	movf	___aomod@divisor^0,w,c
 16323  004DB0  5C06               	subwf	___aomod@dividend^0,w,c
 16324  004DB2  500F               	movf	(___aomod@divisor+1)^0,w,c
 16325  004DB4  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 16326  004DB6  5010               	movf	(___aomod@divisor+2)^0,w,c
 16327  004DB8  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 16328  004DBA  5011               	movf	(___aomod@divisor+3)^0,w,c
 16329  004DBC  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 16330  004DBE  5012               	movf	(___aomod@divisor+4)^0,w,c
 16331  004DC0  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 16332  004DC2  5013               	movf	(___aomod@divisor+5)^0,w,c
 16333  004DC4  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 16334  004DC6  5014               	movf	(___aomod@divisor+6)^0,w,c
 16335  004DC8  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 16336  004DCA  5015               	movf	(___aomod@divisor+7)^0,w,c
 16337  004DCC  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 16338  004DCE  A0D8               	btfss	status,0,c
 16339  004DD0  EFEC  F026         	goto	u5151
 16340  004DD4  EFEE  F026         	goto	u5150
 16341  004DD8                     u5151:
 16342  004DD8  EFFE  F026         	goto	l5615
 16343  004DDC                     u5150:
 16344  004DDC  500E               	movf	___aomod@divisor^0,w,c
 16345  004DDE  5E06               	subwf	___aomod@dividend^0,f,c
 16346  004DE0  500F               	movf	(___aomod@divisor+1)^0,w,c
 16347  004DE2  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 16348  004DE4  5010               	movf	(___aomod@divisor+2)^0,w,c
 16349  004DE6  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 16350  004DE8  5011               	movf	(___aomod@divisor+3)^0,w,c
 16351  004DEA  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 16352  004DEC  5012               	movf	(___aomod@divisor+4)^0,w,c
 16353  004DEE  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 16354  004DF0  5013               	movf	(___aomod@divisor+5)^0,w,c
 16355  004DF2  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 16356  004DF4  5014               	movf	(___aomod@divisor+6)^0,w,c
 16357  004DF6  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 16358  004DF8  5015               	movf	(___aomod@divisor+7)^0,w,c
 16359  004DFA  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 16360  004DFC                     l5615:
 16361  004DFC  90D8               	bcf	status,0,c
 16362  004DFE  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 16363  004E00  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 16364  004E02  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 16365  004E04  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 16366  004E06  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 16367  004E08  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 16368  004E0A  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 16369  004E0C  320E               	rrcf	___aomod@divisor^0,f,c
 16370  004E0E  2E16               	decfsz	___aomod@counter^0,f,c
 16371  004E10  EFD7  F026         	goto	l5611
 16372  004E14                     l5619:
 16373  004E14  5017               	movf	___aomod@sign^0,w,c
 16374  004E16  B4D8               	btfsc	status,2,c
 16375  004E18  EF10  F027         	goto	u5161
 16376  004E1C  EF12  F027         	goto	u5160
 16377  004E20                     u5161:
 16378  004E20  EF22  F027         	goto	l5623
 16379  004E24                     u5160:
 16380  004E24  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 16381  004E26  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 16382  004E28  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 16383  004E2A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 16384  004E2C  1E09               	comf	(___aomod@dividend+3)^0,f,c
 16385  004E2E  1E08               	comf	(___aomod@dividend+2)^0,f,c
 16386  004E30  1E07               	comf	(___aomod@dividend+1)^0,f,c
 16387  004E32  6C06               	negf	___aomod@dividend^0,c
 16388  004E34  0E00               	movlw	0
 16389  004E36  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 16390  004E38  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 16391  004E3A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 16392  004E3C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 16393  004E3E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 16394  004E40  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 16395  004E42  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 16396  004E44                     l5623:
 16397  004E44  C006  F006         	movff	___aomod@dividend,?___aomod
 16398  004E48  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 16399  004E4C  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 16400  004E50  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 16401  004E54  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 16402  004E58  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 16403  004E5C  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 16404  004E60  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 16405  004E64  0012               	return		;funcret
 16406  004E66                     __end_of___aomod:
 16407                           	opt callstack 0
 16408                           
 16409 ;; *************** function ___aodiv *****************
 16410 ;; Defined at:
 16411 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 16412 ;; Parameters:    Size  Location     Type
 16413 ;;  dividend        8    5[COMRAM] long long 
 16414 ;;  divisor         8   13[COMRAM] long long 
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;  quotient        8   23[COMRAM] long long 
 16417 ;;  sign            1   22[COMRAM] unsigned char 
 16418 ;;  counter         1   21[COMRAM] unsigned char 
 16419 ;; Return value:  Size  Location     Type
 16420 ;;                  8    5[COMRAM] long long 
 16421 ;; Registers used:
 16422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16423 ;; Tracked objects:
 16424 ;;		On entry : 0/0
 16425 ;;		On exit  : 0/0
 16426 ;;		Unchanged: 0/0
 16427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16428 ;;      Params:        16       0       0       0       0       0       0       0       0
 16429 ;;      Locals:        10       0       0       0       0       0       0       0       0
 16430 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16431 ;;      Totals:        26       0       0       0       0       0       0       0       0
 16432 ;;Total ram usage:       26 bytes
 16433 ;; Hardware stack levels used:    1
 16434 ;; Hardware stack levels required when called:    2
 16435 ;; This function calls:
 16436 ;;		Nothing
 16437 ;; This function is called by:
 16438 ;;		_dtoa
 16439 ;; This function uses a non-reentrant model
 16440 ;;
 16441                           
 16442                           	psect	text56
 16443  004B7A                     __ptext56:
 16444                           	opt callstack 0
 16445  004B7A                     ___aodiv:
 16446                           	opt callstack 23
 16447  004B7A  0E00               	movlw	0
 16448  004B7C  6E17               	movwf	___aodiv@sign^0,c
 16449  004B7E  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 16450  004B80  EFC6  F025         	goto	u5040
 16451  004B84  EFC4  F025         	goto	u5041
 16452  004B88                     u5041:
 16453  004B88  EFD8  F025         	goto	l5555
 16454  004B8C                     u5040:
 16455  004B8C  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 16456  004B8E  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 16457  004B90  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 16458  004B92  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 16459  004B94  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 16460  004B96  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 16461  004B98  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 16462  004B9A  6C0E               	negf	___aodiv@divisor^0,c
 16463  004B9C  0E00               	movlw	0
 16464  004B9E  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 16465  004BA0  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 16466  004BA2  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 16467  004BA4  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 16468  004BA6  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 16469  004BA8  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 16470  004BAA  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 16471  004BAC  0E01               	movlw	1
 16472  004BAE  6E17               	movwf	___aodiv@sign^0,c
 16473  004BB0                     l5555:
 16474  004BB0  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 16475  004BB2  EFDF  F025         	goto	u5050
 16476  004BB6  EFDD  F025         	goto	u5051
 16477  004BBA                     u5051:
 16478  004BBA  EFF1  F025         	goto	l5561
 16479  004BBE                     u5050:
 16480  004BBE  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 16481  004BC0  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 16482  004BC2  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 16483  004BC4  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 16484  004BC6  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 16485  004BC8  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 16486  004BCA  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 16487  004BCC  6C06               	negf	___aodiv@dividend^0,c
 16488  004BCE  0E00               	movlw	0
 16489  004BD0  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 16490  004BD2  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 16491  004BD4  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 16492  004BD6  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 16493  004BD8  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 16494  004BDA  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 16495  004BDC  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 16496  004BDE  0E01               	movlw	1
 16497  004BE0  1A17               	xorwf	___aodiv@sign^0,f,c
 16498  004BE2                     l5561:
 16499  004BE2  EE20  F018         	lfsr	2,___aodiv@quotient
 16500  004BE6  0E07               	movlw	7
 16501  004BE8                     u5061:
 16502  004BE8  6ADE               	clrf	postinc2,c
 16503  004BEA  06E8               	decf	wreg,f,c
 16504  004BEC  E2FD               	bc	u5061
 16505  004BEE  500E               	movf	___aodiv@divisor^0,w,c
 16506  004BF0  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 16507  004BF2  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 16508  004BF4  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 16509  004BF6  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 16510  004BF8  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 16511  004BFA  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 16512  004BFC  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 16513  004BFE  B4D8               	btfsc	status,2,c
 16514  004C00  EF04  F026         	goto	u5071
 16515  004C04  EF06  F026         	goto	u5070
 16516  004C08                     u5071:
 16517  004C08  EF58  F026         	goto	l5583
 16518  004C0C                     u5070:
 16519  004C0C  0E01               	movlw	1
 16520  004C0E  6E16               	movwf	___aodiv@counter^0,c
 16521  004C10  EF14  F026         	goto	l5569
 16522  004C14                     l5567:
 16523  004C14  90D8               	bcf	status,0,c
 16524  004C16  360E               	rlcf	___aodiv@divisor^0,f,c
 16525  004C18  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 16526  004C1A  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 16527  004C1C  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 16528  004C1E  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 16529  004C20  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 16530  004C22  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 16531  004C24  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 16532  004C26  2A16               	incf	___aodiv@counter^0,f,c
 16533  004C28                     l5569:
 16534  004C28  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 16535  004C2A  EF19  F026         	goto	u5081
 16536  004C2E  EF1B  F026         	goto	u5080
 16537  004C32                     u5081:
 16538  004C32  EF0A  F026         	goto	l5567
 16539  004C36                     u5080:
 16540  004C36                     l5571:
 16541  004C36  90D8               	bcf	status,0,c
 16542  004C38  3618               	rlcf	___aodiv@quotient^0,f,c
 16543  004C3A  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 16544  004C3C  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 16545  004C3E  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 16546  004C40  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 16547  004C42  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 16548  004C44  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 16549  004C46  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 16550  004C48  500E               	movf	___aodiv@divisor^0,w,c
 16551  004C4A  5C06               	subwf	___aodiv@dividend^0,w,c
 16552  004C4C  500F               	movf	(___aodiv@divisor+1)^0,w,c
 16553  004C4E  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 16554  004C50  5010               	movf	(___aodiv@divisor+2)^0,w,c
 16555  004C52  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 16556  004C54  5011               	movf	(___aodiv@divisor+3)^0,w,c
 16557  004C56  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 16558  004C58  5012               	movf	(___aodiv@divisor+4)^0,w,c
 16559  004C5A  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 16560  004C5C  5013               	movf	(___aodiv@divisor+5)^0,w,c
 16561  004C5E  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 16562  004C60  5014               	movf	(___aodiv@divisor+6)^0,w,c
 16563  004C62  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 16564  004C64  5015               	movf	(___aodiv@divisor+7)^0,w,c
 16565  004C66  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 16566  004C68  A0D8               	btfss	status,0,c
 16567  004C6A  EF39  F026         	goto	u5091
 16568  004C6E  EF3B  F026         	goto	u5090
 16569  004C72                     u5091:
 16570  004C72  EF4C  F026         	goto	l5579
 16571  004C76                     u5090:
 16572  004C76  500E               	movf	___aodiv@divisor^0,w,c
 16573  004C78  5E06               	subwf	___aodiv@dividend^0,f,c
 16574  004C7A  500F               	movf	(___aodiv@divisor+1)^0,w,c
 16575  004C7C  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 16576  004C7E  5010               	movf	(___aodiv@divisor+2)^0,w,c
 16577  004C80  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 16578  004C82  5011               	movf	(___aodiv@divisor+3)^0,w,c
 16579  004C84  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 16580  004C86  5012               	movf	(___aodiv@divisor+4)^0,w,c
 16581  004C88  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 16582  004C8A  5013               	movf	(___aodiv@divisor+5)^0,w,c
 16583  004C8C  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 16584  004C8E  5014               	movf	(___aodiv@divisor+6)^0,w,c
 16585  004C90  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 16586  004C92  5015               	movf	(___aodiv@divisor+7)^0,w,c
 16587  004C94  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 16588  004C96  8018               	bsf	___aodiv@quotient^0,0,c
 16589  004C98                     l5579:
 16590  004C98  90D8               	bcf	status,0,c
 16591  004C9A  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 16592  004C9C  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 16593  004C9E  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 16594  004CA0  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 16595  004CA2  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 16596  004CA4  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 16597  004CA6  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 16598  004CA8  320E               	rrcf	___aodiv@divisor^0,f,c
 16599  004CAA  2E16               	decfsz	___aodiv@counter^0,f,c
 16600  004CAC  EF1B  F026         	goto	l5571
 16601  004CB0                     l5583:
 16602  004CB0  5017               	movf	___aodiv@sign^0,w,c
 16603  004CB2  B4D8               	btfsc	status,2,c
 16604  004CB4  EF5E  F026         	goto	u5101
 16605  004CB8  EF60  F026         	goto	u5100
 16606  004CBC                     u5101:
 16607  004CBC  EF70  F026         	goto	l5587
 16608  004CC0                     u5100:
 16609  004CC0  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 16610  004CC2  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 16611  004CC4  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 16612  004CC6  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 16613  004CC8  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 16614  004CCA  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 16615  004CCC  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 16616  004CCE  6C18               	negf	___aodiv@quotient^0,c
 16617  004CD0  0E00               	movlw	0
 16618  004CD2  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 16619  004CD4  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 16620  004CD6  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 16621  004CD8  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 16622  004CDA  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 16623  004CDC  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 16624  004CDE  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 16625  004CE0                     l5587:
 16626  004CE0  C018  F006         	movff	___aodiv@quotient,?___aodiv
 16627  004CE4  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 16628  004CE8  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 16629  004CEC  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 16630  004CF0  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 16631  004CF4  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 16632  004CF8  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 16633  004CFC  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 16634  004D00  0012               	return		;funcret
 16635  004D02                     __end_of___aodiv:
 16636                           	opt callstack 0
 16637                           
 16638 ;; *************** function _ctoa *****************
 16639 ;; Defined at:
 16640 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 16641 ;; Parameters:    Size  Location     Type
 16642 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 16643 ;;		 -> sprintf@f(6), 
 16644 ;;  c               1   34[COMRAM] unsigned char 
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;  w               2   35[COMRAM] int 
 16647 ;;  l               2    0        int 
 16648 ;; Return value:  Size  Location     Type
 16649 ;;                  2   32[COMRAM] int 
 16650 ;; Registers used:
 16651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16652 ;; Tracked objects:
 16653 ;;		On entry : 0/0
 16654 ;;		On exit  : 0/0
 16655 ;;		Unchanged: 0/0
 16656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16657 ;;      Params:         3       0       0       0       0       0       0       0       0
 16658 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16659 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16660 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16661 ;;Total ram usage:        5 bytes
 16662 ;; Hardware stack levels used:    1
 16663 ;; Hardware stack levels required when called:    6
 16664 ;; This function calls:
 16665 ;;		_pad
 16666 ;; This function is called by:
 16667 ;;		_vfpfcnvrt
 16668 ;; This function uses a non-reentrant model
 16669 ;;
 16670                           
 16671                           	psect	text57
 16672  006138                     __ptext57:
 16673                           	opt callstack 0
 16674  006138                     _ctoa:
 16675                           	opt callstack 20
 16676  006138                     
 16677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 16678  006138  0101               	movlb	1	; () banked
 16679  00613A  512E               	movf	_width& (0+255),w,b
 16680  00613C  112F               	iorwf	(_width+1)& (0+255),w,b
 16681  00613E  A4D8               	btfss	status,2,c
 16682  006140  EFA4  F030         	goto	u6021
 16683  006144  EFA6  F030         	goto	u6020
 16684  006148                     u6021:
 16685  006148  EFAC  F030         	goto	l6151
 16686  00614C                     u6020:
 16687  00614C                     
 16688                           ; BSR set to: 1
 16689  00614C  C12E  F024         	movff	_width,ctoa@w
 16690  006150  C12F  F025         	movff	_width+1,ctoa@w+1
 16691  006154  EFB2  F030         	goto	l6153
 16692  006158                     l6151:
 16693                           
 16694                           ; BSR set to: 1
 16695  006158  0EFF               	movlw	255
 16696  00615A  252E               	addwf	_width& (0+255),w,b
 16697  00615C  6E24               	movwf	ctoa@w^0,c
 16698  00615E  0EFF               	movlw	255
 16699  006160  212F               	addwfc	(_width+1)& (0+255),w,b
 16700  006162  6E25               	movwf	(ctoa@w+1)^0,c
 16701  006164                     l6153:
 16702                           
 16703                           ; BSR set to: 1
 16704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 16705  006164  C023  F14A         	movff	ctoa@c,_dbuf
 16706  006168                     
 16707                           ; BSR set to: 1
 16708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 16709  006168  0E00               	movlw	0
 16710  00616A  6F4B               	movwf	(_dbuf+1)& (0+255),b
 16711  00616C                     
 16712                           ; BSR set to: 1
 16713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 16714  00616C  C021  F016         	movff	ctoa@fp,pad@fp
 16715  006170  C022  F017         	movff	ctoa@fp+1,pad@fp+1
 16716  006174  0E4A               	movlw	low _dbuf
 16717  006176  6E18               	movwf	pad@buf^0,c
 16718  006178  0E01               	movlw	high _dbuf
 16719  00617A  6E19               	movwf	(pad@buf+1)^0,c
 16720  00617C  C024  F01A         	movff	ctoa@w,pad@p
 16721  006180  C025  F01B         	movff	ctoa@w+1,pad@p+1
 16722  006184  EC8A  F02B         	call	_pad	;wreg free
 16723  006188  C016  F021         	movff	?_pad,?_ctoa
 16724  00618C  C017  F022         	movff	?_pad+1,?_ctoa+1
 16725  006190  0012               	return		;funcret
 16726  006192                     __end_of_ctoa:
 16727                           	opt callstack 0
 16728                           
 16729 ;; *************** function _pad *****************
 16730 ;; Defined at:
 16731 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 16734 ;;		 -> sprintf@f(6), 
 16735 ;;  buf             2   23[COMRAM] PTR unsigned char 
 16736 ;;		 -> dbuf(80), 
 16737 ;;  p               2   25[COMRAM] int 
 16738 ;; Auto vars:     Size  Location     Type
 16739 ;;  w               2   30[COMRAM] int 
 16740 ;;  i               2   28[COMRAM] int 
 16741 ;; Return value:  Size  Location     Type
 16742 ;;                  2   21[COMRAM] int 
 16743 ;; Registers used:
 16744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16745 ;; Tracked objects:
 16746 ;;		On entry : 0/0
 16747 ;;		On exit  : 0/0
 16748 ;;		Unchanged: 0/0
 16749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16750 ;;      Params:         6       0       0       0       0       0       0       0       0
 16751 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16752 ;;      Temps:          1       0       0       0       0       0       0       0       0
 16753 ;;      Totals:        11       0       0       0       0       0       0       0       0
 16754 ;;Total ram usage:       11 bytes
 16755 ;; Hardware stack levels used:    1
 16756 ;; Hardware stack levels required when called:    5
 16757 ;; This function calls:
 16758 ;;		_fputc
 16759 ;;		_fputs
 16760 ;;		_strlen
 16761 ;; This function is called by:
 16762 ;;		_ctoa
 16763 ;;		_dtoa
 16764 ;;		_efgtoa
 16765 ;; This function uses a non-reentrant model
 16766 ;;
 16767                           
 16768                           	psect	text58
 16769  005714                     __ptext58:
 16770                           	opt callstack 0
 16771  005714                     _pad:
 16772                           	opt callstack 20
 16773  005714                     
 16774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 16775  005714  0101               	movlb	1	; () banked
 16776  005716  A132               	btfss	_flags& (0+255),0,b
 16777  005718  EF90  F02B         	goto	u4751
 16778  00571C  EF92  F02B         	goto	u4750
 16779  005720                     u4751:
 16780  005720  EF9C  F02B         	goto	l5451
 16781  005724                     u4750:
 16782  005724                     
 16783                           ; BSR set to: 1
 16784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 16785  005724  C018  F00F         	movff	pad@buf,fputs@s
 16786  005728  C019  F010         	movff	pad@buf+1,fputs@s+1
 16787  00572C  C016  F011         	movff	pad@fp,fputs@fp
 16788  005730  C017  F012         	movff	pad@fp+1,fputs@fp+1
 16789  005734  EC83  F032         	call	_fputs	;wreg free
 16790  005738                     l5451:
 16791                           
 16792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 16793  005738  BE1B               	btfsc	(pad@p+1)^0,7,c
 16794  00573A  EFA1  F02B         	goto	u4761
 16795  00573E  EFA3  F02B         	goto	u4760
 16796  005742                     u4761:
 16797  005742  EFA9  F02B         	goto	l5455
 16798  005746                     u4760:
 16799  005746  C01A  F01F         	movff	pad@p,pad@w
 16800  00574A  C01B  F020         	movff	pad@p+1,pad@w+1
 16801  00574E  EFAD  F02B         	goto	l760
 16802  005752                     l5455:
 16803  005752  0E00               	movlw	0
 16804  005754  6E20               	movwf	(pad@w+1)^0,c
 16805  005756  0E00               	movlw	0
 16806  005758  6E1F               	movwf	pad@w^0,c
 16807  00575A                     l760:
 16808                           
 16809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 16810  00575A  0E00               	movlw	0
 16811  00575C  6E1E               	movwf	(pad@i+1)^0,c
 16812  00575E  0E00               	movlw	0
 16813  005760  6E1D               	movwf	pad@i^0,c
 16814                           
 16815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 16816  005762  EFBF  F02B         	goto	l5461
 16817  005766                     l5457:
 16818                           
 16819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 16820  005766  0E00               	movlw	0
 16821  005768  6E07               	movwf	(fputc@c+1)^0,c
 16822  00576A  0E20               	movlw	32
 16823  00576C  6E06               	movwf	fputc@c^0,c
 16824  00576E  C016  F008         	movff	pad@fp,fputc@fp
 16825  005772  C017  F009         	movff	pad@fp+1,fputc@fp+1
 16826  005776  EC25  F02B         	call	_fputc	;wreg free
 16827  00577A                     
 16828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 16829  00577A  4A1D               	infsnz	pad@i^0,f,c
 16830  00577C  2A1E               	incf	(pad@i+1)^0,f,c
 16831  00577E                     l5461:
 16832                           
 16833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 16834  00577E  501F               	movf	pad@w^0,w,c
 16835  005780  5C1D               	subwf	pad@i^0,w,c
 16836  005782  501E               	movf	(pad@i+1)^0,w,c
 16837  005784  0A80               	xorlw	128
 16838  005786  6E1C               	movwf	??_pad^0,c
 16839  005788  5020               	movf	(pad@w+1)^0,w,c
 16840  00578A  0A80               	xorlw	128
 16841  00578C  581C               	subwfb	??_pad^0,w,c
 16842  00578E  A0D8               	btfss	status,0,c
 16843  005790  EFCC  F02B         	goto	u4771
 16844  005794  EFCE  F02B         	goto	u4770
 16845  005798                     u4771:
 16846  005798  EFB3  F02B         	goto	l5457
 16847  00579C                     u4770:
 16848  00579C                     
 16849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 16850  00579C  0101               	movlb	1	; () banked
 16851  00579E  B132               	btfsc	_flags& (0+255),0,b
 16852  0057A0  EFD4  F02B         	goto	u4781
 16853  0057A4  EFD6  F02B         	goto	u4780
 16854  0057A8                     u4781:
 16855  0057A8  EFE0  F02B         	goto	l5465
 16856  0057AC                     u4780:
 16857  0057AC                     
 16858                           ; BSR set to: 1
 16859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 16860  0057AC  C018  F00F         	movff	pad@buf,fputs@s
 16861  0057B0  C019  F010         	movff	pad@buf+1,fputs@s+1
 16862  0057B4  C016  F011         	movff	pad@fp,fputs@fp
 16863  0057B8  C017  F012         	movff	pad@fp+1,fputs@fp+1
 16864  0057BC  EC83  F032         	call	_fputs	;wreg free
 16865  0057C0                     l5465:
 16866                           
 16867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 16868  0057C0  C018  F006         	movff	pad@buf,strlen@s
 16869  0057C4  C019  F007         	movff	pad@buf+1,strlen@s+1
 16870  0057C8  EC3A  F033         	call	_strlen	;wreg free
 16871  0057CC  501F               	movf	pad@w^0,w,c
 16872  0057CE  2406               	addwf	?_strlen^0,w,c
 16873  0057D0  6E16               	movwf	?_pad^0,c
 16874  0057D2  5020               	movf	(pad@w+1)^0,w,c
 16875  0057D4  2007               	addwfc	(?_strlen+1)^0,w,c
 16876  0057D6  6E17               	movwf	(?_pad+1)^0,c
 16877  0057D8  0012               	return		;funcret
 16878  0057DA                     __end_of_pad:
 16879                           	opt callstack 0
 16880                           
 16881 ;; *************** function _strlen *****************
 16882 ;; Defined at:
 16883 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 16884 ;; Parameters:    Size  Location     Type
 16885 ;;  s               2    5[COMRAM] PTR const unsigned char 
 16886 ;;		 -> dbuf(80), 
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;  a               2    7[COMRAM] PTR const unsigned char 
 16889 ;;		 -> dbuf(80), 
 16890 ;; Return value:  Size  Location     Type
 16891 ;;                  2    5[COMRAM] unsigned int 
 16892 ;; Registers used:
 16893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16894 ;; Tracked objects:
 16895 ;;		On entry : 0/0
 16896 ;;		On exit  : 0/0
 16897 ;;		Unchanged: 0/0
 16898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16899 ;;      Params:         2       0       0       0       0       0       0       0       0
 16900 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16901 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16902 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16903 ;;Total ram usage:        4 bytes
 16904 ;; Hardware stack levels used:    1
 16905 ;; Hardware stack levels required when called:    2
 16906 ;; This function calls:
 16907 ;;		Nothing
 16908 ;; This function is called by:
 16909 ;;		_pad
 16910 ;; This function uses a non-reentrant model
 16911 ;;
 16912                           
 16913                           	psect	text59
 16914  006674                     __ptext59:
 16915                           	opt callstack 0
 16916  006674                     _strlen:
 16917                           	opt callstack 22
 16918  006674  C006  F008         	movff	strlen@s,strlen@a
 16919  006678  C007  F009         	movff	strlen@s+1,strlen@a+1
 16920  00667C  EF42  F033         	goto	l5177
 16921  006680                     l5175:
 16922  006680  4A06               	infsnz	strlen@s^0,f,c
 16923  006682  2A07               	incf	(strlen@s+1)^0,f,c
 16924  006684                     l5177:
 16925  006684  C006  FFD9         	movff	strlen@s,fsr2l
 16926  006688  C007  FFDA         	movff	strlen@s+1,fsr2h
 16927  00668C  50DF               	movf	indf2,w,c
 16928  00668E  A4D8               	btfss	status,2,c
 16929  006690  EF4C  F033         	goto	u4251
 16930  006694  EF4E  F033         	goto	u4250
 16931  006698                     u4251:
 16932  006698  EF40  F033         	goto	l5175
 16933  00669C                     u4250:
 16934  00669C  5008               	movf	strlen@a^0,w,c
 16935  00669E  5C06               	subwf	strlen@s^0,w,c
 16936  0066A0  6E06               	movwf	?_strlen^0,c
 16937  0066A2  5009               	movf	(strlen@a+1)^0,w,c
 16938  0066A4  5807               	subwfb	(strlen@s+1)^0,w,c
 16939  0066A6  6E07               	movwf	(?_strlen+1)^0,c
 16940  0066A8  0012               	return		;funcret
 16941  0066AA                     __end_of_strlen:
 16942                           	opt callstack 0
 16943                           
 16944 ;; *************** function _fputs *****************
 16945 ;; Defined at:
 16946 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 16947 ;; Parameters:    Size  Location     Type
 16948 ;;  s               2   14[COMRAM] PTR const unsigned char 
 16949 ;;		 -> dbuf(80), 
 16950 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 16951 ;;		 -> sprintf@f(6), 
 16952 ;; Auto vars:     Size  Location     Type
 16953 ;;  i               2   19[COMRAM] int 
 16954 ;;  c               1   18[COMRAM] unsigned char 
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  2   14[COMRAM] int 
 16957 ;; Registers used:
 16958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16964 ;;      Params:         4       0       0       0       0       0       0       0       0
 16965 ;;      Locals:         3       0       0       0       0       0       0       0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16967 ;;      Totals:         7       0       0       0       0       0       0       0       0
 16968 ;;Total ram usage:        7 bytes
 16969 ;; Hardware stack levels used:    1
 16970 ;; Hardware stack levels required when called:    4
 16971 ;; This function calls:
 16972 ;;		_fputc
 16973 ;; This function is called by:
 16974 ;;		_pad
 16975 ;; This function uses a non-reentrant model
 16976 ;;
 16977                           
 16978                           	psect	text60
 16979  006506                     __ptext60:
 16980                           	opt callstack 0
 16981  006506                     _fputs:
 16982                           	opt callstack 20
 16983  006506  0E00               	movlw	0
 16984  006508  6E15               	movwf	(fputs@i+1)^0,c
 16985  00650A  0E00               	movlw	0
 16986  00650C  6E14               	movwf	fputs@i^0,c
 16987  00650E  EF94  F032         	goto	l5171
 16988  006512                     l5167:
 16989  006512  C013  F006         	movff	fputs@c,fputc@c
 16990  006516  6A07               	clrf	(fputc@c+1)^0,c
 16991  006518  C011  F008         	movff	fputs@fp,fputc@fp
 16992  00651C  C012  F009         	movff	fputs@fp+1,fputc@fp+1
 16993  006520  EC25  F02B         	call	_fputc	;wreg free
 16994  006524  4A14               	infsnz	fputs@i^0,f,c
 16995  006526  2A15               	incf	(fputs@i+1)^0,f,c
 16996  006528                     l5171:
 16997  006528  5014               	movf	fputs@i^0,w,c
 16998  00652A  240F               	addwf	fputs@s^0,w,c
 16999  00652C  6ED9               	movwf	fsr2l,c
 17000  00652E  5015               	movf	(fputs@i+1)^0,w,c
 17001  006530  2010               	addwfc	(fputs@s+1)^0,w,c
 17002  006532  6EDA               	movwf	fsr2h,c
 17003  006534  50DF               	movf	indf2,w,c
 17004  006536  6E13               	movwf	fputs@c^0,c
 17005  006538  5013               	movf	fputs@c^0,w,c
 17006  00653A  A4D8               	btfss	status,2,c
 17007  00653C  EFA2  F032         	goto	u4241
 17008  006540  EFA4  F032         	goto	u4240
 17009  006544                     u4241:
 17010  006544  EF89  F032         	goto	l5167
 17011  006548                     u4240:
 17012  006548  0012               	return		;funcret
 17013  00654A                     __end_of_fputs:
 17014                           	opt callstack 0
 17015                           
 17016 ;; *************** function _fputc *****************
 17017 ;; Defined at:
 17018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;  c               2    5[COMRAM] int 
 17021 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
 17022 ;;		 -> sprintf@f(6), 
 17023 ;; Auto vars:     Size  Location     Type
 17024 ;;		None
 17025 ;; Return value:  Size  Location     Type
 17026 ;;                  2    5[COMRAM] int 
 17027 ;; Registers used:
 17028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17029 ;; Tracked objects:
 17030 ;;		On entry : 0/0
 17031 ;;		On exit  : 0/0
 17032 ;;		Unchanged: 0/0
 17033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17034 ;;      Params:         4       0       0       0       0       0       0       0       0
 17035 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17036 ;;      Temps:          5       0       0       0       0       0       0       0       0
 17037 ;;      Totals:         9       0       0       0       0       0       0       0       0
 17038 ;;Total ram usage:        9 bytes
 17039 ;; Hardware stack levels used:    1
 17040 ;; Hardware stack levels required when called:    3
 17041 ;; This function calls:
 17042 ;;		_putch
 17043 ;; This function is called by:
 17044 ;;		_pad
 17045 ;;		_vfpfcnvrt
 17046 ;;		_fputs
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           	psect	text61
 17051  00564A                     __ptext61:
 17052                           	opt callstack 0
 17053  00564A                     _fputc:
 17054                           	opt callstack 23
 17055  00564A  5008               	movf	fputc@fp^0,w,c
 17056  00564C  1009               	iorwf	(fputc@fp+1)^0,w,c
 17057  00564E  B4D8               	btfsc	status,2,c
 17058  005650  EF2C  F02B         	goto	u4201
 17059  005654  EF2E  F02B         	goto	u4200
 17060  005658                     u4201:
 17061  005658  EF37  F02B         	goto	l5155
 17062  00565C                     u4200:
 17063  00565C  5008               	movf	fputc@fp^0,w,c
 17064  00565E  1009               	iorwf	(fputc@fp+1)^0,w,c
 17065  005660  A4D8               	btfss	status,2,c
 17066  005662  EF35  F02B         	goto	u4211
 17067  005666  EF37  F02B         	goto	u4210
 17068  00566A                     u4211:
 17069  00566A  EF3C  F02B         	goto	l5157
 17070  00566E                     u4210:
 17071  00566E                     l5155:
 17072  00566E  5006               	movf	fputc@c^0,w,c
 17073  005670  EC07  F034         	call	_putch
 17074  005674  EF89  F02B         	goto	l1749
 17075  005678                     l5157:
 17076  005678  EE20 F004          	lfsr	2,4
 17077  00567C  5008               	movf	fputc@fp^0,w,c
 17078  00567E  26D9               	addwf	fsr2l,f,c
 17079  005680  5009               	movf	(fputc@fp+1)^0,w,c
 17080  005682  22DA               	addwfc	fsr2h,f,c
 17081  005684  50DE               	movf	postinc2,w,c
 17082  005686  10DE               	iorwf	postinc2,w,c
 17083  005688  B4D8               	btfsc	status,2,c
 17084  00568A  EF49  F02B         	goto	u4221
 17085  00568E  EF4B  F02B         	goto	u4220
 17086  005692                     u4221:
 17087  005692  EF66  F02B         	goto	l5161
 17088  005696                     u4220:
 17089  005696  EE20 F004          	lfsr	2,4
 17090  00569A  5008               	movf	fputc@fp^0,w,c
 17091  00569C  26D9               	addwf	fsr2l,f,c
 17092  00569E  5009               	movf	(fputc@fp+1)^0,w,c
 17093  0056A0  22DA               	addwfc	fsr2h,f,c
 17094  0056A2  EE10 F002          	lfsr	1,2
 17095  0056A6  5008               	movf	fputc@fp^0,w,c
 17096  0056A8  26E1               	addwf	fsr1l,f,c
 17097  0056AA  5009               	movf	(fputc@fp+1)^0,w,c
 17098  0056AC  22E2               	addwfc	fsr1h,f,c
 17099  0056AE  50DE               	movf	postinc2,w,c
 17100  0056B0  5CE6               	subwf	postinc1,w,c
 17101  0056B2  50E6               	movf	postinc1,w,c
 17102  0056B4  0A80               	xorlw	128
 17103  0056B6  6E0E               	movwf	(??_fputc+4)^0,c
 17104  0056B8  50DE               	movf	postinc2,w,c
 17105  0056BA  0A80               	xorlw	128
 17106  0056BC  580E               	subwfb	(??_fputc+4)^0,w,c
 17107  0056BE  B0D8               	btfsc	status,0,c
 17108  0056C0  EF64  F02B         	goto	u4231
 17109  0056C4  EF66  F02B         	goto	u4230
 17110  0056C8                     u4231:
 17111  0056C8  EF89  F02B         	goto	l1749
 17112  0056CC                     u4230:
 17113  0056CC                     l5161:
 17114  0056CC  EE20 F002          	lfsr	2,2
 17115  0056D0  5008               	movf	fputc@fp^0,w,c
 17116  0056D2  26D9               	addwf	fsr2l,f,c
 17117  0056D4  5009               	movf	(fputc@fp+1)^0,w,c
 17118  0056D6  22DA               	addwfc	fsr2h,f,c
 17119  0056D8  CFDE F00A          	movff	postinc2,??_fputc
 17120  0056DC  CFDD F00B          	movff	postdec2,??_fputc+1
 17121  0056E0  C008  FFD9         	movff	fputc@fp,fsr2l
 17122  0056E4  C009  FFDA         	movff	fputc@fp+1,fsr2h
 17123  0056E8  CFDE F00C          	movff	postinc2,??_fputc+2
 17124  0056EC  CFDD F00D          	movff	postdec2,??_fputc+3
 17125  0056F0  500A               	movf	??_fputc^0,w,c
 17126  0056F2  240C               	addwf	(??_fputc+2)^0,w,c
 17127  0056F4  6ED9               	movwf	fsr2l,c
 17128  0056F6  500B               	movf	(??_fputc+1)^0,w,c
 17129  0056F8  200D               	addwfc	(??_fputc+3)^0,w,c
 17130  0056FA  6EDA               	movwf	fsr2h,c
 17131  0056FC  C006  FFDF         	movff	fputc@c,indf2
 17132  005700  EE20 F002          	lfsr	2,2
 17133  005704  5008               	movf	fputc@fp^0,w,c
 17134  005706  26D9               	addwf	fsr2l,f,c
 17135  005708  5009               	movf	(fputc@fp+1)^0,w,c
 17136  00570A  22DA               	addwfc	fsr2h,f,c
 17137  00570C  2ADE               	incf	postinc2,f,c
 17138  00570E  0E00               	movlw	0
 17139  005710  22DD               	addwfc	postdec2,f,c
 17140  005712                     l1749:
 17141  005712  0012               	return		;funcret
 17142  005714                     __end_of_fputc:
 17143                           	opt callstack 0
 17144                           
 17145 ;; *************** function _putch *****************
 17146 ;; Defined at:
 17147 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 17148 ;; Parameters:    Size  Location     Type
 17149 ;;  c               1    wreg     unsigned char 
 17150 ;; Auto vars:     Size  Location     Type
 17151 ;;  c               1    0[COMRAM] unsigned char 
 17152 ;; Return value:  Size  Location     Type
 17153 ;;                  1    wreg      void 
 17154 ;; Registers used:
 17155 ;;		wreg
 17156 ;; Tracked objects:
 17157 ;;		On entry : 0/0
 17158 ;;		On exit  : 0/0
 17159 ;;		Unchanged: 0/0
 17160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17161 ;;      Params:         0       0       0       0       0       0       0       0       0
 17162 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17163 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17164 ;;      Totals:         0       0       0       0       0       0       0       0       0
 17165 ;;Total ram usage:        0 bytes
 17166 ;; Hardware stack levels used:    1
 17167 ;; Hardware stack levels required when called:    2
 17168 ;; This function calls:
 17169 ;;		Nothing
 17170 ;; This function is called by:
 17171 ;;		_fputc
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           	psect	text62
 17176  00680E                     __ptext62:
 17177                           	opt callstack 0
 17178  00680E                     _putch:
 17179                           	opt callstack 23
 17180  00680E  0012               	return		;funcret
 17181  006810                     __end_of_putch:
 17182                           	opt callstack 0
 17183                           
 17184 ;; *************** function _atoi *****************
 17185 ;; Defined at:
 17186 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;  s               2   12[COMRAM] PTR const unsigned char 
 17189 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
 17190 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
 17191 ;;		 -> STR_3(34), 
 17192 ;; Auto vars:     Size  Location     Type
 17193 ;;  n               2   25[COMRAM] int 
 17194 ;;  neg             2   18[COMRAM] int 
 17195 ;; Return value:  Size  Location     Type
 17196 ;;                  2   12[COMRAM] int 
 17197 ;; Registers used:
 17198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17199 ;; Tracked objects:
 17200 ;;		On entry : 0/0
 17201 ;;		On exit  : 0/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17204 ;;      Params:         2       0       0       0       0       0       0       0       0
 17205 ;;      Locals:         9       0       0       0       0       0       0       0       0
 17206 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17207 ;;      Totals:        15       0       0       0       0       0       0       0       0
 17208 ;;Total ram usage:       15 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; Hardware stack levels required when called:    3
 17211 ;; This function calls:
 17212 ;;		___wmul
 17213 ;;		_isdigit
 17214 ;;		_isspace
 17215 ;; This function is called by:
 17216 ;;		_vfpfcnvrt
 17217 ;; This function uses a non-reentrant model
 17218 ;;
 17219                           
 17220                           	psect	text63
 17221  0049EA                     __ptext63:
 17222                           	opt callstack 0
 17223  0049EA                     _atoi:
 17224                           	opt callstack 23
 17225  0049EA  0E00               	movlw	0
 17226  0049EC  6E1B               	movwf	(atoi@n+1)^0,c
 17227  0049EE  0E00               	movlw	0
 17228  0049F0  6E1A               	movwf	atoi@n^0,c
 17229  0049F2  0E00               	movlw	0
 17230  0049F4  6E14               	movwf	(atoi@neg+1)^0,c
 17231  0049F6  0E00               	movlw	0
 17232  0049F8  6E13               	movwf	atoi@neg^0,c
 17233  0049FA  EF01  F025         	goto	l6525
 17234  0049FE                     l6523:
 17235  0049FE  4A0D               	infsnz	atoi@s^0,f,c
 17236  004A00  2A0E               	incf	(atoi@s+1)^0,f,c
 17237  004A02                     l6525:
 17238  004A02  0E01               	movlw	1
 17239  004A04  6E19               	movwf	_atoi$1433^0,c
 17240  004A06  C00D  FFF6         	movff	atoi@s,tblptrl
 17241  004A0A  C00E  FFF7         	movff	atoi@s+1,tblptrh
 17242  004A0E                     	if	0	;tblptru may be non-zero
 17243  004A0E                     	endif
 17244  004A0E                     	if	0	;tblptru may be non-zero
 17245  004A0E                     	endif
 17246  004A0E  0008               	tblrd		*
 17247  004A10  50F5               	movf	tablat,w,c
 17248  004A12  0A20               	xorlw	32
 17249  004A14  B4D8               	btfsc	status,2,c
 17250  004A16  EF0F  F025         	goto	u6701
 17251  004A1A  EF11  F025         	goto	u6700
 17252  004A1E                     u6701:
 17253  004A1E  EF2E  F025         	goto	l6533
 17254  004A22                     u6700:
 17255  004A22  0EF7               	movlw	247
 17256  004A24  6E0F               	movwf	??_atoi^0,c
 17257  004A26  0EFF               	movlw	255
 17258  004A28  6E10               	movwf	(??_atoi+1)^0,c
 17259  004A2A  C00D  FFF6         	movff	atoi@s,tblptrl
 17260  004A2E  C00E  FFF7         	movff	atoi@s+1,tblptrh
 17261  004A32                     	if	0	;tblptru may be non-zero
 17262  004A32                     	endif
 17263  004A32                     	if	0	;tblptru may be non-zero
 17264  004A32                     	endif
 17265  004A32  0008               	tblrd		*
 17266  004A34  50F5               	movf	tablat,w,c
 17267  004A36  6E11               	movwf	(??_atoi+2)^0,c
 17268  004A38  6A12               	clrf	(??_atoi+3)^0,c
 17269  004A3A  500F               	movf	??_atoi^0,w,c
 17270  004A3C  2611               	addwf	(??_atoi+2)^0,f,c
 17271  004A3E  5010               	movf	(??_atoi+1)^0,w,c
 17272  004A40  2212               	addwfc	(??_atoi+3)^0,f,c
 17273  004A42  5012               	movf	(??_atoi+3)^0,w,c
 17274  004A44  E109               	bnz	u6710
 17275  004A46  0E05               	movlw	5
 17276  004A48  5C11               	subwf	(??_atoi+2)^0,w,c
 17277  004A4A  A0D8               	btfss	status,0,c
 17278  004A4C  EF2A  F025         	goto	u6711
 17279  004A50  EF2C  F025         	goto	u6710
 17280  004A54                     u6711:
 17281  004A54  EF2E  F025         	goto	l6533
 17282  004A58                     u6710:
 17283  004A58  0E00               	movlw	0
 17284  004A5A  6E19               	movwf	_atoi$1433^0,c
 17285  004A5C                     l6533:
 17286  004A5C  C019  F015         	movff	_atoi$1433,_atoi$1432
 17287  004A60  6A16               	clrf	(_atoi$1432+1)^0,c
 17288  004A62  5015               	movf	_atoi$1432^0,w,c
 17289  004A64  1016               	iorwf	(_atoi$1432+1)^0,w,c
 17290  004A66  A4D8               	btfss	status,2,c
 17291  004A68  EF38  F025         	goto	u6721
 17292  004A6C  EF3A  F025         	goto	u6720
 17293  004A70                     u6721:
 17294  004A70  EFFF  F024         	goto	l6523
 17295  004A74                     u6720:
 17296  004A74  EF44  F025         	goto	l6543
 17297  004A78                     l6539:
 17298  004A78  0E00               	movlw	0
 17299  004A7A  6E14               	movwf	(atoi@neg+1)^0,c
 17300  004A7C  0E01               	movlw	1
 17301  004A7E  6E13               	movwf	atoi@neg^0,c
 17302  004A80                     l6541:
 17303  004A80  4A0D               	infsnz	atoi@s^0,f,c
 17304  004A82  2A0E               	incf	(atoi@s+1)^0,f,c
 17305  004A84  EF79  F025         	goto	l6549
 17306  004A88                     l6543:
 17307  004A88  C00D  FFF6         	movff	atoi@s,tblptrl
 17308  004A8C  C00E  FFF7         	movff	atoi@s+1,tblptrh
 17309  004A90                     	if	0	;tblptru may be non-zero
 17310  004A90                     	endif
 17311  004A90                     	if	0	;tblptru may be non-zero
 17312  004A90                     	endif
 17313  004A90  0008               	tblrd		*
 17314  004A92  50F5               	movf	tablat,w,c
 17315  004A94  6E0F               	movwf	??_atoi^0,c
 17316  004A96  6A10               	clrf	(??_atoi+1)^0,c
 17317                           
 17318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17319                           ; Switch size 1, requested type "simple"
 17320                           ; Number of cases is 1, Range of values is 0 to 0
 17321                           ; switch strategies available:
 17322                           ; Name         Instructions Cycles
 17323                           ; simple_byte            4     3 (average)
 17324                           ;	Chosen strategy is simple_byte
 17325  004A98  5010               	movf	(??_atoi+1)^0,w,c
 17326  004A9A  0A00               	xorlw	0	; case 0
 17327  004A9C  B4D8               	btfsc	status,2,c
 17328  004A9E  EF53  F025         	goto	l11163
 17329  004AA2  EF79  F025         	goto	l6549
 17330  004AA6                     l11163:
 17331                           
 17332                           ; Switch size 1, requested type "simple"
 17333                           ; Number of cases is 2, Range of values is 43 to 45
 17334                           ; switch strategies available:
 17335                           ; Name         Instructions Cycles
 17336                           ; simple_byte            7     4 (average)
 17337                           ;	Chosen strategy is simple_byte
 17338  004AA6  500F               	movf	??_atoi^0,w,c
 17339  004AA8  0A2B               	xorlw	43	; case 43
 17340  004AAA  B4D8               	btfsc	status,2,c
 17341  004AAC  EF40  F025         	goto	l6541
 17342  004AB0  0A06               	xorlw	6	; case 45
 17343  004AB2  B4D8               	btfsc	status,2,c
 17344  004AB4  EF3C  F025         	goto	l6539
 17345  004AB8  EF79  F025         	goto	l6549
 17346  004ABC                     l6545:
 17347  004ABC  C01A  F006         	movff	atoi@n,___wmul@multiplier
 17348  004AC0  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 17349  004AC4  0E00               	movlw	0
 17350  004AC6  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 17351  004AC8  0E0A               	movlw	10
 17352  004ACA  6E08               	movwf	___wmul@multiplicand^0,c
 17353  004ACC  EC92  F033         	call	___wmul	;wreg free
 17354  004AD0  C00D  FFF6         	movff	atoi@s,tblptrl
 17355  004AD4  C00E  FFF7         	movff	atoi@s+1,tblptrh
 17356  004AD8                     	if	0	;tblptru may be non-zero
 17357  004AD8                     	endif
 17358  004AD8                     	if	0	;tblptru may be non-zero
 17359  004AD8                     	endif
 17360  004AD8  0008               	tblrd		*
 17361  004ADA  50F5               	movf	tablat,w,c
 17362  004ADC  5E06               	subwf	?___wmul^0,f,c
 17363  004ADE  0E00               	movlw	0
 17364  004AE0  5A07               	subwfb	(?___wmul+1)^0,f,c
 17365  004AE2  0E30               	movlw	48
 17366  004AE4  2406               	addwf	?___wmul^0,w,c
 17367  004AE6  6E1A               	movwf	atoi@n^0,c
 17368  004AE8  0E00               	movlw	0
 17369  004AEA  2007               	addwfc	(?___wmul+1)^0,w,c
 17370  004AEC  6E1B               	movwf	(atoi@n+1)^0,c
 17371  004AEE  EF40  F025         	goto	l6541
 17372  004AF2                     l6549:
 17373  004AF2  0ED0               	movlw	208
 17374  004AF4  6E0F               	movwf	??_atoi^0,c
 17375  004AF6  0EFF               	movlw	255
 17376  004AF8  6E10               	movwf	(??_atoi+1)^0,c
 17377  004AFA  C00D  FFF6         	movff	atoi@s,tblptrl
 17378  004AFE  C00E  FFF7         	movff	atoi@s+1,tblptrh
 17379  004B02                     	if	0	;tblptru may be non-zero
 17380  004B02                     	endif
 17381  004B02                     	if	0	;tblptru may be non-zero
 17382  004B02                     	endif
 17383  004B02  0008               	tblrd		*
 17384  004B04  50F5               	movf	tablat,w,c
 17385  004B06  6E11               	movwf	(??_atoi+2)^0,c
 17386  004B08  6A12               	clrf	(??_atoi+3)^0,c
 17387  004B0A  500F               	movf	??_atoi^0,w,c
 17388  004B0C  2611               	addwf	(??_atoi+2)^0,f,c
 17389  004B0E  5010               	movf	(??_atoi+1)^0,w,c
 17390  004B10  2212               	addwfc	(??_atoi+3)^0,f,c
 17391  004B12  5012               	movf	(??_atoi+3)^0,w,c
 17392  004B14  E10A               	bnz	u6730
 17393  004B16  0E0A               	movlw	10
 17394  004B18  5C11               	subwf	(??_atoi+2)^0,w,c
 17395  004B1A  A0D8               	btfss	status,0,c
 17396  004B1C  EF92  F025         	goto	u6731
 17397  004B20  EF95  F025         	goto	u6730
 17398  004B24                     u6731:
 17399  004B24  0E01               	movlw	1
 17400  004B26  EF96  F025         	goto	u6740
 17401  004B2A                     u6730:
 17402  004B2A  0E00               	movlw	0
 17403  004B2C                     u6740:
 17404  004B2C  6E17               	movwf	_atoi$1434^0,c
 17405  004B2E  6A18               	clrf	(_atoi$1434+1)^0,c
 17406  004B30  5017               	movf	_atoi$1434^0,w,c
 17407  004B32  1018               	iorwf	(_atoi$1434+1)^0,w,c
 17408  004B34  A4D8               	btfss	status,2,c
 17409  004B36  EF9F  F025         	goto	u6751
 17410  004B3A  EFA1  F025         	goto	u6750
 17411  004B3E                     u6751:
 17412  004B3E  EF5E  F025         	goto	l6545
 17413  004B42                     u6750:
 17414  004B42  5013               	movf	atoi@neg^0,w,c
 17415  004B44  1014               	iorwf	(atoi@neg+1)^0,w,c
 17416  004B46  A4D8               	btfss	status,2,c
 17417  004B48  EFA8  F025         	goto	u6761
 17418  004B4C  EFAA  F025         	goto	u6760
 17419  004B50                     u6761:
 17420  004B50  EFB8  F025         	goto	l1644
 17421  004B54                     u6760:
 17422  004B54  C01A  F00F         	movff	atoi@n,??_atoi
 17423  004B58  C01B  F010         	movff	atoi@n+1,??_atoi+1
 17424  004B5C  1E0F               	comf	??_atoi^0,f,c
 17425  004B5E  1E10               	comf	(??_atoi+1)^0,f,c
 17426  004B60  4A0F               	infsnz	??_atoi^0,f,c
 17427  004B62  2A10               	incf	(??_atoi+1)^0,f,c
 17428  004B64  C00F  F00D         	movff	??_atoi,?_atoi
 17429  004B68  C010  F00E         	movff	??_atoi+1,?_atoi+1
 17430  004B6C  EFBC  F025         	goto	l1647
 17431  004B70                     l1644:
 17432  004B70  C01A  F00D         	movff	atoi@n,?_atoi
 17433  004B74  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 17434  004B78                     l1647:
 17435  004B78  0012               	return		;funcret
 17436  004B7A                     __end_of_atoi:
 17437                           	opt callstack 0
 17438                           
 17439 ;; *************** function _isspace *****************
 17440 ;; Defined at:
 17441 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 17442 ;; Parameters:    Size  Location     Type
 17443 ;;  c               2    5[COMRAM] int 
 17444 ;; Auto vars:     Size  Location     Type
 17445 ;;		None
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  2    5[COMRAM] int 
 17448 ;; Registers used:
 17449 ;;		wreg, status,2, status,0
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/0
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17455 ;;      Params:         2       0       0       0       0       0       0       0       0
 17456 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17457 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17458 ;;      Totals:         7       0       0       0       0       0       0       0       0
 17459 ;;Total ram usage:        7 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:    2
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		_atoi
 17466 ;; This function uses a non-reentrant model
 17467 ;;
 17468                           
 17469                           	psect	text64
 17470  006338                     __ptext64:
 17471                           	opt callstack 0
 17472  006338                     _isspace:
 17473                           	opt callstack 23
 17474  006338  0E01               	movlw	1
 17475  00633A  6E0C               	movwf	_isspace$1491^0,c
 17476  00633C  0E20               	movlw	32
 17477  00633E  1806               	xorwf	isspace@c^0,w,c
 17478  006340  1007               	iorwf	(isspace@c+1)^0,w,c
 17479  006342  B4D8               	btfsc	status,2,c
 17480  006344  EFA6  F031         	goto	u5971
 17481  006348  EFA8  F031         	goto	u5970
 17482  00634C                     u5971:
 17483  00634C  EFC1  F031         	goto	l6125
 17484  006350                     u5970:
 17485  006350  0EF7               	movlw	247
 17486  006352  6E08               	movwf	??_isspace^0,c
 17487  006354  0EFF               	movlw	255
 17488  006356  6E09               	movwf	(??_isspace+1)^0,c
 17489  006358  C006  F00A         	movff	isspace@c,??_isspace+2
 17490  00635C  C007  F00B         	movff	isspace@c+1,??_isspace+3
 17491  006360  5008               	movf	??_isspace^0,w,c
 17492  006362  260A               	addwf	(??_isspace+2)^0,f,c
 17493  006364  5009               	movf	(??_isspace+1)^0,w,c
 17494  006366  220B               	addwfc	(??_isspace+3)^0,f,c
 17495  006368  500B               	movf	(??_isspace+3)^0,w,c
 17496  00636A  E109               	bnz	u5980
 17497  00636C  0E05               	movlw	5
 17498  00636E  5C0A               	subwf	(??_isspace+2)^0,w,c
 17499  006370  A0D8               	btfss	status,0,c
 17500  006372  EFBD  F031         	goto	u5981
 17501  006376  EFBF  F031         	goto	u5980
 17502  00637A                     u5981:
 17503  00637A  EFC1  F031         	goto	l6125
 17504  00637E                     u5980:
 17505  00637E  0E00               	movlw	0
 17506  006380  6E0C               	movwf	_isspace$1491^0,c
 17507  006382                     l6125:
 17508  006382  C00C  F006         	movff	_isspace$1491,?_isspace
 17509  006386  6A07               	clrf	(?_isspace+1)^0,c
 17510  006388  0012               	return		;funcret
 17511  00638A                     __end_of_isspace:
 17512                           	opt callstack 0
 17513                           
 17514 ;; *************** function _isdigit *****************
 17515 ;; Defined at:
 17516 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 17517 ;; Parameters:    Size  Location     Type
 17518 ;;  c               2    5[COMRAM] int 
 17519 ;; Auto vars:     Size  Location     Type
 17520 ;;		None
 17521 ;; Return value:  Size  Location     Type
 17522 ;;                  2    5[COMRAM] int 
 17523 ;; Registers used:
 17524 ;;		wreg, status,2, status,0
 17525 ;; Tracked objects:
 17526 ;;		On entry : 0/0
 17527 ;;		On exit  : 0/0
 17528 ;;		Unchanged: 0/0
 17529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17530 ;;      Params:         2       0       0       0       0       0       0       0       0
 17531 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17532 ;;      Temps:          4       0       0       0       0       0       0       0       0
 17533 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17534 ;;Total ram usage:        6 bytes
 17535 ;; Hardware stack levels used:    1
 17536 ;; Hardware stack levels required when called:    2
 17537 ;; This function calls:
 17538 ;;		Nothing
 17539 ;; This function is called by:
 17540 ;;		_vfpfcnvrt
 17541 ;;		_atoi
 17542 ;; This function uses a non-reentrant model
 17543 ;;
 17544                           
 17545                           	psect	text65
 17546  00663C                     __ptext65:
 17547                           	opt callstack 0
 17548  00663C                     _isdigit:
 17549                           	opt callstack 24
 17550  00663C  0ED0               	movlw	208
 17551  00663E  6E08               	movwf	??_isdigit^0,c
 17552  006640  0EFF               	movlw	255
 17553  006642  6E09               	movwf	(??_isdigit+1)^0,c
 17554  006644  C006  F00A         	movff	isdigit@c,??_isdigit+2
 17555  006648  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 17556  00664C  5008               	movf	??_isdigit^0,w,c
 17557  00664E  260A               	addwf	(??_isdigit+2)^0,f,c
 17558  006650  5009               	movf	(??_isdigit+1)^0,w,c
 17559  006652  220B               	addwfc	(??_isdigit+3)^0,f,c
 17560  006654  500B               	movf	(??_isdigit+3)^0,w,c
 17561  006656  E10A               	bnz	u5020
 17562  006658  0E0A               	movlw	10
 17563  00665A  5C0A               	subwf	(??_isdigit+2)^0,w,c
 17564  00665C  A0D8               	btfss	status,0,c
 17565  00665E  EF33  F033         	goto	u5021
 17566  006662  EF36  F033         	goto	u5020
 17567  006666                     u5021:
 17568  006666  0E01               	movlw	1
 17569  006668  EF37  F033         	goto	u5030
 17570  00666C                     u5020:
 17571  00666C  0E00               	movlw	0
 17572  00666E                     u5030:
 17573  00666E  6E06               	movwf	?_isdigit^0,c
 17574  006670  6A07               	clrf	(?_isdigit+1)^0,c
 17575  006672  0012               	return		;funcret
 17576  006674                     __end_of_isdigit:
 17577                           	opt callstack 0
 17578                           
 17579 ;; *************** function ___wmul *****************
 17580 ;; Defined at:
 17581 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;  multiplier      2    5[COMRAM] unsigned int 
 17584 ;;  multiplicand    2    7[COMRAM] unsigned int 
 17585 ;; Auto vars:     Size  Location     Type
 17586 ;;  product         2    9[COMRAM] unsigned int 
 17587 ;; Return value:  Size  Location     Type
 17588 ;;                  2    5[COMRAM] unsigned int 
 17589 ;; Registers used:
 17590 ;;		wreg, status,2, status,0, prodl, prodh
 17591 ;; Tracked objects:
 17592 ;;		On entry : 0/0
 17593 ;;		On exit  : 0/0
 17594 ;;		Unchanged: 0/0
 17595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17596 ;;      Params:         4       0       0       0       0       0       0       0       0
 17597 ;;      Locals:         2       0       0       0       0       0       0       0       0
 17598 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17599 ;;      Totals:         6       0       0       0       0       0       0       0       0
 17600 ;;Total ram usage:        6 bytes
 17601 ;; Hardware stack levels used:    1
 17602 ;; Hardware stack levels required when called:    2
 17603 ;; This function calls:
 17604 ;;		Nothing
 17605 ;; This function is called by:
 17606 ;;		_atoi
 17607 ;; This function uses a non-reentrant model
 17608 ;;
 17609                           
 17610                           	psect	text66
 17611  006724                     __ptext66:
 17612                           	opt callstack 0
 17613  006724                     ___wmul:
 17614                           	opt callstack 23
 17615  006724  5006               	movf	___wmul@multiplier^0,w,c
 17616  006726  0208               	mulwf	___wmul@multiplicand^0,c
 17617  006728  CFF3 F00A          	movff	prodl,___wmul@product
 17618  00672C  CFF4 F00B          	movff	prodh,___wmul@product+1
 17619  006730  5006               	movf	___wmul@multiplier^0,w,c
 17620  006732  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 17621  006734  50F3               	movf	243,w,c
 17622  006736  260B               	addwf	(___wmul@product+1)^0,f,c
 17623  006738  5007               	movf	(___wmul@multiplier+1)^0,w,c
 17624  00673A  0208               	mulwf	___wmul@multiplicand^0,c
 17625  00673C  50F3               	movf	243,w,c
 17626  00673E  260B               	addwf	(___wmul@product+1)^0,f,c
 17627  006740  C00A  F006         	movff	___wmul@product,?___wmul
 17628  006744  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 17629  006748  0012               	return		;funcret
 17630  00674A                     __end_of___wmul:
 17631                           	opt callstack 0
 17632                           
 17633 ;; *************** function _seLlegoAlDestino *****************
 17634 ;; Defined at:
 17635 ;;		line 811 in file "main.c"
 17636 ;; Parameters:    Size  Location     Type
 17637 ;;		None
 17638 ;; Auto vars:     Size  Location     Type
 17639 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 17640 ;; Return value:  Size  Location     Type
 17641 ;;                  1    wreg      unsigned char 
 17642 ;; Registers used:
 17643 ;;		wreg, status,2, status,0, cstack
 17644 ;; Tracked objects:
 17645 ;;		On entry : 0/0
 17646 ;;		On exit  : 0/0
 17647 ;;		Unchanged: 0/0
 17648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17649 ;;      Params:         0       0       0       0       0       0       0       0       0
 17650 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17651 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17652 ;;      Totals:         1       0       0       0       0       0       0       0       0
 17653 ;;Total ram usage:        1 bytes
 17654 ;; Hardware stack levels used:    1
 17655 ;; Hardware stack levels required when called:    3
 17656 ;; This function calls:
 17657 ;;		_dameLecturaAdc
 17658 ;; This function is called by:
 17659 ;;		_decidirDireccion
 17660 ;; This function uses a non-reentrant model
 17661 ;;
 17662                           
 17663                           	psect	text67
 17664  0066AA                     __ptext67:
 17665                           	opt callstack 0
 17666  0066AA                     _seLlegoAlDestino:
 17667                           	opt callstack 25
 17668  0066AA                     
 17669                           ;main.c: 813:     T_BOOL llegoDestino = 0;
 17670  0066AA  0E00               	movlw	0
 17671  0066AC  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 17672  0066AE                     
 17673                           ;main.c: 816:     if (dameLecturaAdc(0) < 20)
 17674  0066AE  0E00               	movlw	0
 17675  0066B0  EC60  F032         	call	_dameLecturaAdc
 17676  0066B4  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 17677  0066B6  EF68  F033         	goto	u10650
 17678  0066BA  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 17679  0066BC  E107               	bnz	u10651
 17680  0066BE  0E14               	movlw	20
 17681  0066C0  5C06               	subwf	?_dameLecturaAdc^0,w,c
 17682  0066C2  B0D8               	btfsc	status,0,c
 17683  0066C4  EF66  F033         	goto	u10651
 17684  0066C8  EF68  F033         	goto	u10650
 17685  0066CC                     u10651:
 17686  0066CC  EF6A  F033         	goto	l514
 17687  0066D0                     u10650:
 17688  0066D0                     
 17689                           ;main.c: 817:         llegoDestino = 1;
 17690  0066D0  0E01               	movlw	1
 17691  0066D2  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 17692  0066D4                     l514:
 17693                           
 17694                           ;main.c: 819:     return llegoDestino;
 17695  0066D4  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 17696  0066D6  0012               	return		;funcret
 17697  0066D8                     __end_of_seLlegoAlDestino:
 17698                           	opt callstack 0
 17699                           
 17700 ;; *************** function _dameLecturaAdc *****************
 17701 ;; Defined at:
 17702 ;;		line 12 in file "./adc.h"
 17703 ;; Parameters:    Size  Location     Type
 17704 ;;  canalLeer       1    wreg     unsigned char 
 17705 ;; Auto vars:     Size  Location     Type
 17706 ;;  canalLeer       1    9[COMRAM] unsigned char 
 17707 ;; Return value:  Size  Location     Type
 17708 ;;                  2    5[COMRAM] short 
 17709 ;; Registers used:
 17710 ;;		wreg, status,2, status,0
 17711 ;; Tracked objects:
 17712 ;;		On entry : 0/0
 17713 ;;		On exit  : 0/0
 17714 ;;		Unchanged: 0/0
 17715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17716 ;;      Params:         2       0       0       0       0       0       0       0       0
 17717 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17718 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17719 ;;      Totals:         5       0       0       0       0       0       0       0       0
 17720 ;;Total ram usage:        5 bytes
 17721 ;; Hardware stack levels used:    1
 17722 ;; Hardware stack levels required when called:    2
 17723 ;; This function calls:
 17724 ;;		Nothing
 17725 ;; This function is called by:
 17726 ;;		_dameDistancia
 17727 ;;		_seLlegoAlDestino
 17728 ;;		_probarSensores
 17729 ;; This function uses a non-reentrant model
 17730 ;;
 17731                           
 17732                           	psect	text68
 17733  0064C0                     __ptext68:
 17734                           	opt callstack 0
 17735  0064C0                     _dameLecturaAdc:
 17736                           	opt callstack 26
 17737                           
 17738                           ;incstack = 0
 17739                           ;dameLecturaAdc@canalLeer stored from wreg
 17740  0064C0  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 17741  0064C2                     
 17742                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 17743  0064C2  0E06               	movlw	6
 17744  0064C4                     u11597:
 17745  0064C4  2EE8               	decfsz	wreg,f,c
 17746  0064C6  D7FE               	bra	u11597
 17747  0064C8  D000               	nop2	
 17748  0064CA                     
 17749                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 17750  0064CA  80C2               	bsf	194,0,c	;volatile
 17751  0064CC                     
 17752                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 17753  0064CC  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 17754  0064D0  4608               	rlncf	??_dameLecturaAdc^0,f,c
 17755  0064D2  4608               	rlncf	??_dameLecturaAdc^0,f,c
 17756  0064D4  50C2               	movf	194,w,c	;volatile
 17757  0064D6  1808               	xorwf	??_dameLecturaAdc^0,w,c
 17758  0064D8  0BC3               	andlw	-61
 17759  0064DA  1808               	xorwf	??_dameLecturaAdc^0,w,c
 17760  0064DC  6EC2               	movwf	194,c	;volatile
 17761  0064DE                     
 17762                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 17763  0064DE  82C2               	bsf	194,1,c	;volatile
 17764  0064E0                     
 17765                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 17766  0064E0  82C2               	bsf	194,1,c	;volatile
 17767  0064E2                     l169:
 17768  0064E2  B2C2               	btfsc	194,1,c	;volatile
 17769  0064E4  EF76  F032         	goto	u10411
 17770  0064E8  EF78  F032         	goto	u10410
 17771  0064EC                     u10411:
 17772  0064EC  EF71  F032         	goto	l169
 17773  0064F0                     u10410:
 17774  0064F0                     
 17775                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 17776  0064F0  90C2               	bcf	194,0,c	;volatile
 17777  0064F2                     
 17778                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 17779  0064F2  50C4               	movf	196,w,c	;volatile
 17780  0064F4  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 17781  0064F6  6A08               	clrf	??_dameLecturaAdc^0,c
 17782  0064F8  50C3               	movf	195,w,c	;volatile
 17783  0064FA  2408               	addwf	??_dameLecturaAdc^0,w,c
 17784  0064FC  6E06               	movwf	?_dameLecturaAdc^0,c
 17785  0064FE  0E00               	movlw	0
 17786  006500  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 17787  006502  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 17788  006504  0012               	return		;funcret
 17789  006506                     __end_of_dameLecturaAdc:
 17790                           	opt callstack 0
 17791                           
 17792 ;; *************** function _mostrarDireccionElegida *****************
 17793 ;; Defined at:
 17794 ;;		line 823 in file "main.c"
 17795 ;; Parameters:    Size  Location     Type
 17796 ;;  direccionEle    1    wreg     unsigned char 
 17797 ;; Auto vars:     Size  Location     Type
 17798 ;;  direccionEle    1   10[COMRAM] unsigned char 
 17799 ;; Return value:  Size  Location     Type
 17800 ;;                  1    wreg      void 
 17801 ;; Registers used:
 17802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17803 ;; Tracked objects:
 17804 ;;		On entry : 0/0
 17805 ;;		On exit  : 0/0
 17806 ;;		Unchanged: 0/0
 17807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17808 ;;      Params:         0       0       0       0       0       0       0       0       0
 17809 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17810 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17811 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17812 ;;Total ram usage:        3 bytes
 17813 ;; Hardware stack levels used:    1
 17814 ;; Hardware stack levels required when called:    4
 17815 ;; This function calls:
 17816 ;;		_UART_printf
 17817 ;; This function is called by:
 17818 ;;		_decidirDireccion
 17819 ;; This function uses a non-reentrant model
 17820 ;;
 17821                           
 17822                           	psect	text69
 17823  005DDE                     __ptext69:
 17824                           	opt callstack 0
 17825  005DDE                     _mostrarDireccionElegida:
 17826                           	opt callstack 24
 17827                           
 17828                           ;incstack = 0
 17829                           ;mostrarDireccionElegida@direccionElegida stored from wreg
 17830  005DDE  6E0B               	movwf	mostrarDireccionElegida@direccionElegida^0,c
 17831  005DE0                     
 17832                           ;main.c: 825:     switch (direccionElegida) {
 17833  005DE0  EF12  F02F         	goto	l7239
 17834  005DE4                     l7229:
 17835                           
 17836                           ;main.c: 827:             UART_printf("\rDireccion Elegida: ENFRENTE\n\n\r");
 17837  005DE4  0EEA               	movlw	low STR_15
 17838  005DE6  6E07               	movwf	UART_printf@cadena^0,c
 17839  005DE8  0E7E               	movlw	high STR_15
 17840  005DEA  6E08               	movwf	(UART_printf@cadena+1)^0,c
 17841  005DEC  EC3F  F030         	call	_UART_printf	;wreg free
 17842                           
 17843                           ;main.c: 828:             break;
 17844  005DF0  EF2F  F02F         	goto	l525
 17845  005DF4                     l7231:
 17846                           
 17847                           ;main.c: 831:             UART_printf("\rDireccion Elegida: IZQUIERDA\n\n\r");
 17848  005DF4  0EA9               	movlw	low STR_16
 17849  005DF6  6E07               	movwf	UART_printf@cadena^0,c
 17850  005DF8  0E7E               	movlw	high STR_16
 17851  005DFA  6E08               	movwf	(UART_printf@cadena+1)^0,c
 17852  005DFC  EC3F  F030         	call	_UART_printf	;wreg free
 17853                           
 17854                           ;main.c: 832:             break;
 17855  005E00  EF2F  F02F         	goto	l525
 17856  005E04                     l7233:
 17857                           
 17858                           ;main.c: 835:             UART_printf("\rDireccion Elegida: DERECHA\n\n\r");
 17859  005E04  0E2A               	movlw	low STR_17
 17860  005E06  6E07               	movwf	UART_printf@cadena^0,c
 17861  005E08  0E7F               	movlw	high STR_17
 17862  005E0A  6E08               	movwf	(UART_printf@cadena+1)^0,c
 17863  005E0C  EC3F  F030         	call	_UART_printf	;wreg free
 17864                           
 17865                           ;main.c: 836:             break;
 17866  005E10  EF2F  F02F         	goto	l525
 17867  005E14                     l7235:
 17868                           
 17869                           ;main.c: 839:             UART_printf("\rDireccion Elegida: CALLEJON\n\n\r");
 17870  005E14  0E0A               	movlw	low STR_18
 17871  005E16  6E07               	movwf	UART_printf@cadena^0,c
 17872  005E18  0E7F               	movlw	high STR_18
 17873  005E1A  6E08               	movwf	(UART_printf@cadena+1)^0,c
 17874  005E1C  EC3F  F030         	call	_UART_printf	;wreg free
 17875                           
 17876                           ;main.c: 840:             break;
 17877  005E20  EF2F  F02F         	goto	l525
 17878  005E24                     l7239:
 17879  005E24  500B               	movf	mostrarDireccionElegida@direccionElegida^0,w,c
 17880  005E26  6E09               	movwf	??_mostrarDireccionElegida^0,c
 17881  005E28  6A0A               	clrf	(??_mostrarDireccionElegida+1)^0,c
 17882                           
 17883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17884                           ; Switch size 1, requested type "simple"
 17885                           ; Number of cases is 1, Range of values is 0 to 0
 17886                           ; switch strategies available:
 17887                           ; Name         Instructions Cycles
 17888                           ; simple_byte            4     3 (average)
 17889                           ;	Chosen strategy is simple_byte
 17890  005E2A  500A               	movf	(??_mostrarDireccionElegida+1)^0,w,c
 17891  005E2C  0A00               	xorlw	0	; case 0
 17892  005E2E  B4D8               	btfsc	status,2,c
 17893  005E30  EF1C  F02F         	goto	l11165
 17894  005E34  EF2F  F02F         	goto	l525
 17895  005E38                     l11165:
 17896                           
 17897                           ; Switch size 1, requested type "simple"
 17898                           ; Number of cases is 4, Range of values is 0 to 3
 17899                           ; switch strategies available:
 17900                           ; Name         Instructions Cycles
 17901                           ; simple_byte           13     7 (average)
 17902                           ;	Chosen strategy is simple_byte
 17903  005E38  5009               	movf	??_mostrarDireccionElegida^0,w,c
 17904  005E3A  0A00               	xorlw	0	; case 0
 17905  005E3C  B4D8               	btfsc	status,2,c
 17906  005E3E  EF0A  F02F         	goto	l7235
 17907  005E42  0A01               	xorlw	1	; case 1
 17908  005E44  B4D8               	btfsc	status,2,c
 17909  005E46  EFF2  F02E         	goto	l7229
 17910  005E4A  0A03               	xorlw	3	; case 2
 17911  005E4C  B4D8               	btfsc	status,2,c
 17912  005E4E  EFFA  F02E         	goto	l7231
 17913  005E52  0A01               	xorlw	1	; case 3
 17914  005E54  B4D8               	btfsc	status,2,c
 17915  005E56  EF02  F02F         	goto	l7233
 17916  005E5A  EF2F  F02F         	goto	l525
 17917  005E5E                     l525:
 17918  005E5E  0012               	return		;funcret
 17919  005E60                     __end_of_mostrarDireccionElegida:
 17920                           	opt callstack 0
 17921                           
 17922 ;; *************** function _UART_printf *****************
 17923 ;; Defined at:
 17924 ;;		line 47 in file "./UART.h"
 17925 ;; Parameters:    Size  Location     Type
 17926 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 17927 ;;		 -> STR_18(32), STR_17(31), STR_16(33), STR_15(32), 
 17928 ;;		 -> STR_14(23), STR_13(34), STR_12(56), STR_10(6), 
 17929 ;;		 -> STR_9(9), STR_8(11), STR_7(10), buffer(50), 
 17930 ;;		 -> STR_2(25), STR_1(24), 
 17931 ;; Auto vars:     Size  Location     Type
 17932 ;;		None
 17933 ;; Return value:  Size  Location     Type
 17934 ;;                  1    wreg      void 
 17935 ;; Registers used:
 17936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17937 ;; Tracked objects:
 17938 ;;		On entry : 0/0
 17939 ;;		On exit  : 0/0
 17940 ;;		Unchanged: 0/0
 17941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17942 ;;      Params:         2       0       0       0       0       0       0       0       0
 17943 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17944 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17945 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17946 ;;Total ram usage:        2 bytes
 17947 ;; Hardware stack levels used:    1
 17948 ;; Hardware stack levels required when called:    3
 17949 ;; This function calls:
 17950 ;;		_UART_write
 17951 ;; This function is called by:
 17952 ;;		_visualizarPasosRealizados
 17953 ;;		_comportamientoBasico
 17954 ;;		_mostrarDireccionElegida
 17955 ;;		_decidirDireccion
 17956 ;;		_probarMapeoDireccionCruces
 17957 ;;		_probarSensores
 17958 ;;		_probarMedirDistancia
 17959 ;; This function uses a non-reentrant model
 17960 ;;
 17961                           
 17962                           	psect	text70
 17963  00607E                     __ptext70:
 17964                           	opt callstack 0
 17965  00607E                     _UART_printf:
 17966                           	opt callstack 26
 17967  00607E                     
 17968                           ;./UART.h: 48:     while (*cadena) {
 17969  00607E  EF55  F030         	goto	l6911
 17970  006082                     l6907:
 17971                           
 17972                           ;./UART.h: 49:         UART_write(*cadena++);
 17973  006082  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 17974  006086  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 17975  00608A  6AF8               	clrf	tblptru,c
 17976  00608C  0E07               	movlw	(high __ramtop+-1)
 17977  00608E  64F7               	cpfsgt	tblptrh,c
 17978  006090  D003               	bra	u7277
 17979  006092  0008               	tblrd		*
 17980  006094  50F5               	movf	tablat,w,c
 17981  006096  D005               	bra	u7270
 17982  006098                     u7277:
 17983  006098  CFF6 FFE9          	movff	tblptrl,fsr0l
 17984  00609C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17985  0060A0  50EF               	movf	indf0,w,c
 17986  0060A2                     u7270:
 17987  0060A2  ECF4  F033         	call	_UART_write
 17988  0060A6  4A07               	infsnz	UART_printf@cadena^0,f,c
 17989  0060A8  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 17990  0060AA                     l6911:
 17991                           
 17992                           ;./UART.h: 48:     while (*cadena) {
 17993  0060AA  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 17994  0060AE  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 17995  0060B2  6AF8               	clrf	tblptru,c
 17996  0060B4  0E07               	movlw	(high __ramtop+-1)
 17997  0060B6  64F7               	cpfsgt	tblptrh,c
 17998  0060B8  D003               	bra	u7287
 17999  0060BA  0008               	tblrd		*
 18000  0060BC  50F5               	movf	tablat,w,c
 18001  0060BE  D005               	bra	u7280
 18002  0060C0                     u7287:
 18003  0060C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18004  0060C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18005  0060C8  50EF               	movf	indf0,w,c
 18006  0060CA                     u7280:
 18007  0060CA  0900               	iorlw	0
 18008  0060CC  A4D8               	btfss	status,2,c
 18009  0060CE  EF6B  F030         	goto	u7291
 18010  0060D2  EF6D  F030         	goto	u7290
 18011  0060D6                     u7291:
 18012  0060D6  EF41  F030         	goto	l6907
 18013  0060DA                     u7290:
 18014  0060DA  0012               	return		;funcret
 18015  0060DC                     __end_of_UART_printf:
 18016                           	opt callstack 0
 18017                           
 18018 ;; *************** function _UART_write *****************
 18019 ;; Defined at:
 18020 ;;		line 42 in file "./UART.h"
 18021 ;; Parameters:    Size  Location     Type
 18022 ;;  dato            1    wreg     unsigned char 
 18023 ;; Auto vars:     Size  Location     Type
 18024 ;;  dato            1    5[COMRAM] unsigned char 
 18025 ;; Return value:  Size  Location     Type
 18026 ;;                  1    wreg      void 
 18027 ;; Registers used:
 18028 ;;		wreg
 18029 ;; Tracked objects:
 18030 ;;		On entry : 0/0
 18031 ;;		On exit  : 0/0
 18032 ;;		Unchanged: 0/0
 18033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18034 ;;      Params:         0       0       0       0       0       0       0       0       0
 18035 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18036 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18037 ;;      Totals:         1       0       0       0       0       0       0       0       0
 18038 ;;Total ram usage:        1 bytes
 18039 ;; Hardware stack levels used:    1
 18040 ;; Hardware stack levels required when called:    2
 18041 ;; This function calls:
 18042 ;;		Nothing
 18043 ;; This function is called by:
 18044 ;;		_UART_printf
 18045 ;; This function uses a non-reentrant model
 18046 ;;
 18047                           
 18048                           	psect	text71
 18049  0067E8                     __ptext71:
 18050                           	opt callstack 0
 18051  0067E8                     _UART_write:
 18052                           	opt callstack 26
 18053                           
 18054                           ;incstack = 0
 18055                           ;UART_write@dato stored from wreg
 18056  0067E8  6E06               	movwf	UART_write@dato^0,c
 18057  0067EA                     
 18058                           ;./UART.h: 43:     TXREG = dato;
 18059  0067EA  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 18060  0067EE                     l154:
 18061  0067EE  A2AC               	btfss	172,1,c	;volatile
 18062  0067F0  EFFC  F033         	goto	u6891
 18063  0067F4  EFFE  F033         	goto	u6890
 18064  0067F8                     u6891:
 18065  0067F8  EFF7  F033         	goto	l154
 18066  0067FC                     u6890:
 18067  0067FC  0012               	return		;funcret
 18068  0067FE                     __end_of_UART_write:
 18069                           	opt callstack 0
 18070                           
 18071 ;; *************** function _hayCruce *****************
 18072 ;; Defined at:
 18073 ;;		line 675 in file "main.c"
 18074 ;; Parameters:    Size  Location     Type
 18075 ;;  caminosRecor    2   77[COMRAM] PTR unsigned char 
 18076 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 18077 ;;  investigando    1   79[COMRAM] unsigned char 
 18078 ;; Auto vars:     Size  Location     Type
 18079 ;;  contCaminos     1   80[COMRAM] unsigned char 
 18080 ;; Return value:  Size  Location     Type
 18081 ;;                  1    wreg      unsigned char 
 18082 ;; Registers used:
 18083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18084 ;; Tracked objects:
 18085 ;;		On entry : 0/0
 18086 ;;		On exit  : 0/0
 18087 ;;		Unchanged: 0/0
 18088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18089 ;;      Params:         3       0       0       0       0       0       0       0       0
 18090 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18091 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18092 ;;      Totals:         4       0       0       0       0       0       0       0       0
 18093 ;;Total ram usage:        4 bytes
 18094 ;; Hardware stack levels used:    1
 18095 ;; Hardware stack levels required when called:    3
 18096 ;; This function calls:
 18097 ;;		___flge
 18098 ;; This function is called by:
 18099 ;;		_decidirDireccion
 18100 ;; This function uses a non-reentrant model
 18101 ;;
 18102                           
 18103                           	psect	text72
 18104  00484E                     __ptext72:
 18105                           	opt callstack 0
 18106  00484E                     _hayCruce:
 18107                           	opt callstack 25
 18108  00484E                     
 18109                           ;main.c: 677:     T_UBYTE contCaminos = 0;
 18110  00484E  0E00               	movlw	0
 18111  004850  6E51               	movwf	hayCruce@contCaminos^0,c
 18112                           
 18113                           ;main.c: 679:     paredEnfrente = 0;
 18114  004852  0E00               	movlw	0
 18115  004854  0101               	movlb	1	; () banked
 18116  004856  6F41               	movwf	_paredEnfrente& (0+255),b
 18117                           
 18118                           ;main.c: 680:     paredDerecha = 0;
 18119  004858  0E00               	movlw	0
 18120  00485A  6F40               	movwf	_paredDerecha& (0+255),b
 18121                           
 18122                           ;main.c: 681:     paredIzquierda = 0;
 18123  00485C  0E00               	movlw	0
 18124  00485E  6F3F               	movwf	_paredIzquierda& (0+255),b
 18125                           
 18126                           ;main.c: 683:     if (!investigandoCruce) {
 18127  004860  5050               	movf	hayCruce@investigandoCruce^0,w,c
 18128  004862  A4D8               	btfss	status,2,c
 18129  004864  EF36  F024         	goto	u10561
 18130  004868  EF38  F024         	goto	u10560
 18131  00486C                     u10561:
 18132  00486C  EFE8  F024         	goto	l9985
 18133  004870                     u10560:
 18134  004870                     
 18135                           ; BSR set to: 1
 18136                           ;main.c: 685:         if (sensorEnfrente > 35) {
 18137  004870  0E00               	movlw	0
 18138  004872  0100               	movlb	0	; () banked
 18139  004874  6F6D               	movwf	___flge@ff1& (0+255),b
 18140  004876  0E00               	movlw	0
 18141  004878  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
 18142  00487A  0E0C               	movlw	12
 18143  00487C  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
 18144  00487E  0E42               	movlw	66
 18145  004880  6F70               	movwf	(___flge@ff1+3)& (0+255),b
 18146  004882  C124  F071         	movff	_sensorEnfrente,___flge@ff2
 18147  004886  C125  F072         	movff	_sensorEnfrente+1,___flge@ff2+1
 18148  00488A  C126  F073         	movff	_sensorEnfrente+2,___flge@ff2+2
 18149  00488E  C127  F074         	movff	_sensorEnfrente+3,___flge@ff2+3
 18150  004892  ECC2  F028         	call	___flge	;wreg free
 18151  004896  0100               	movlb	0	; () banked
 18152  004898  B0D8               	btfsc	status,0,c
 18153  00489A  EF51  F024         	goto	u10571
 18154  00489E  EF53  F024         	goto	u10570
 18155  0048A2                     u10571:
 18156  0048A2  EF57  F024         	goto	l9915
 18157  0048A6                     u10570:
 18158  0048A6                     
 18159                           ; BSR set to: 0
 18160                           ;main.c: 686:             paredEnfrente = 1;
 18161  0048A6  0E01               	movlw	1
 18162  0048A8  0101               	movlb	1	; () banked
 18163  0048AA  6F41               	movwf	_paredEnfrente& (0+255),b
 18164  0048AC                     
 18165                           ; BSR set to: 1
 18166                           ;main.c: 687:             contCaminos++;
 18167  0048AC  2A51               	incf	hayCruce@contCaminos^0,f,c
 18168  0048AE                     l9915:
 18169                           
 18170                           ;main.c: 690:         if (sensorIzquierda > 30) {
 18171  0048AE  0E00               	movlw	0
 18172  0048B0  0100               	movlb	0	; () banked
 18173  0048B2  6F6D               	movwf	___flge@ff1& (0+255),b
 18174  0048B4  0E00               	movlw	0
 18175  0048B6  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
 18176  0048B8  0EF0               	movlw	240
 18177  0048BA  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
 18178  0048BC  0E41               	movlw	65
 18179  0048BE  6F70               	movwf	(___flge@ff1+3)& (0+255),b
 18180  0048C0  C128  F071         	movff	_sensorIzquierda,___flge@ff2
 18181  0048C4  C129  F072         	movff	_sensorIzquierda+1,___flge@ff2+1
 18182  0048C8  C12A  F073         	movff	_sensorIzquierda+2,___flge@ff2+2
 18183  0048CC  C12B  F074         	movff	_sensorIzquierda+3,___flge@ff2+3
 18184  0048D0  ECC2  F028         	call	___flge	;wreg free
 18185  0048D4  0100               	movlb	0	; () banked
 18186  0048D6  B0D8               	btfsc	status,0,c
 18187  0048D8  EF70  F024         	goto	u10581
 18188  0048DC  EF72  F024         	goto	u10580
 18189  0048E0                     u10581:
 18190  0048E0  EF76  F024         	goto	l9921
 18191  0048E4                     u10580:
 18192  0048E4                     
 18193                           ; BSR set to: 0
 18194                           ;main.c: 691:             paredIzquierda = 1;
 18195  0048E4  0E01               	movlw	1
 18196  0048E6  0101               	movlb	1	; () banked
 18197  0048E8  6F3F               	movwf	_paredIzquierda& (0+255),b
 18198  0048EA                     
 18199                           ; BSR set to: 1
 18200                           ;main.c: 692:             contCaminos++;
 18201  0048EA  2A51               	incf	hayCruce@contCaminos^0,f,c
 18202  0048EC                     l9921:
 18203                           
 18204                           ;main.c: 695:         if (sensorDerecha > 30) {
 18205  0048EC  0E00               	movlw	0
 18206  0048EE  0100               	movlb	0	; () banked
 18207  0048F0  6F6D               	movwf	___flge@ff1& (0+255),b
 18208  0048F2  0E00               	movlw	0
 18209  0048F4  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
 18210  0048F6  0EF0               	movlw	240
 18211  0048F8  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
 18212  0048FA  0E41               	movlw	65
 18213  0048FC  6F70               	movwf	(___flge@ff1+3)& (0+255),b
 18214  0048FE  C055  F071         	movff	_sensorDerecha,___flge@ff2
 18215  004902  C056  F072         	movff	_sensorDerecha+1,___flge@ff2+1
 18216  004906  C057  F073         	movff	_sensorDerecha+2,___flge@ff2+2
 18217  00490A  C058  F074         	movff	_sensorDerecha+3,___flge@ff2+3
 18218  00490E  ECC2  F028         	call	___flge	;wreg free
 18219  004912  0100               	movlb	0	; () banked
 18220  004914  B0D8               	btfsc	status,0,c
 18221  004916  EF8F  F024         	goto	u10591
 18222  00491A  EF91  F024         	goto	u10590
 18223  00491E                     u10591:
 18224  00491E  EF95  F024         	goto	l9927
 18225  004922                     u10590:
 18226  004922                     
 18227                           ; BSR set to: 0
 18228                           ;main.c: 696:             paredDerecha = 1;
 18229  004922  0E01               	movlw	1
 18230  004924  0101               	movlb	1	; () banked
 18231  004926  6F40               	movwf	_paredDerecha& (0+255),b
 18232  004928                     
 18233                           ; BSR set to: 1
 18234                           ;main.c: 697:             contCaminos++;
 18235  004928  2A51               	incf	hayCruce@contCaminos^0,f,c
 18236  00492A                     l9927:
 18237                           
 18238                           ;main.c: 701:         if (contCaminos > 1) {
 18239  00492A  0E01               	movlw	1
 18240  00492C  6451               	cpfsgt	hayCruce@contCaminos^0,c
 18241  00492E  EF9B  F024         	goto	u10601
 18242  004932  EF9D  F024         	goto	u10600
 18243  004936                     u10601:
 18244  004936  EFE8  F024         	goto	l9985
 18245  00493A                     u10600:
 18246  00493A                     
 18247                           ;main.c: 712:                 if (paredDerecha)
 18248  00493A  0101               	movlb	1	; () banked
 18249  00493C  5140               	movf	_paredDerecha& (0+255),w,b
 18250  00493E  B4D8               	btfsc	status,2,c
 18251  004940  EFA4  F024         	goto	u10611
 18252  004944  EFA6  F024         	goto	u10610
 18253  004948                     u10611:
 18254  004948  EFB0  F024         	goto	l9941
 18255  00494C                     u10610:
 18256  00494C                     
 18257                           ; BSR set to: 1
 18258  00494C  EE20 F002          	lfsr	2,2
 18259  004950  504E               	movf	hayCruce@caminosRecorrer^0,w,c
 18260  004952  26D9               	addwf	fsr2l,f,c
 18261  004954  504F               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 18262  004956  22DA               	addwfc	fsr2h,f,c
 18263  004958  0E31               	movlw	49
 18264  00495A  6EDF               	movwf	indf2,c
 18265  00495C  EFB8  F024         	goto	l9961
 18266  004960                     l9941:
 18267                           
 18268                           ; BSR set to: 1
 18269  004960  EE20 F002          	lfsr	2,2
 18270  004964  504E               	movf	hayCruce@caminosRecorrer^0,w,c
 18271  004966  26D9               	addwf	fsr2l,f,c
 18272  004968  504F               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 18273  00496A  22DA               	addwfc	fsr2h,f,c
 18274  00496C  0E30               	movlw	48
 18275  00496E  6EDF               	movwf	indf2,c
 18276  004970                     l9961:
 18277                           
 18278                           ; BSR set to: 1
 18279                           ;main.c: 742:                 if (paredIzquierda)
 18280  004970  513F               	movf	_paredIzquierda& (0+255),w,b
 18281  004972  B4D8               	btfsc	status,2,c
 18282  004974  EFBE  F024         	goto	u10621
 18283  004978  EFC0  F024         	goto	u10620
 18284  00497C                     u10621:
 18285  00497C  EFCA  F024         	goto	l9965
 18286  004980                     u10620:
 18287  004980                     
 18288                           ; BSR set to: 1
 18289  004980  EE20 F001          	lfsr	2,1
 18290  004984  504E               	movf	hayCruce@caminosRecorrer^0,w,c
 18291  004986  26D9               	addwf	fsr2l,f,c
 18292  004988  504F               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 18293  00498A  22DA               	addwfc	fsr2h,f,c
 18294  00498C  0E31               	movlw	49
 18295  00498E  6EDF               	movwf	indf2,c
 18296  004990  EFD2  F024         	goto	l9967
 18297  004994                     l9965:
 18298                           
 18299                           ; BSR set to: 1
 18300  004994  EE20 F001          	lfsr	2,1
 18301  004998  504E               	movf	hayCruce@caminosRecorrer^0,w,c
 18302  00499A  26D9               	addwf	fsr2l,f,c
 18303  00499C  504F               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 18304  00499E  22DA               	addwfc	fsr2h,f,c
 18305  0049A0  0E30               	movlw	48
 18306  0049A2  6EDF               	movwf	indf2,c
 18307  0049A4                     l9967:
 18308                           
 18309                           ; BSR set to: 1
 18310                           ;main.c: 751:                 if (paredEnfrente)
 18311  0049A4  5141               	movf	_paredEnfrente& (0+255),w,b
 18312  0049A6  B4D8               	btfsc	status,2,c
 18313  0049A8  EFD8  F024         	goto	u10631
 18314  0049AC  EFDA  F024         	goto	u10630
 18315  0049B0                     u10631:
 18316  0049B0  EFE2  F024         	goto	l9971
 18317  0049B4                     u10630:
 18318  0049B4                     
 18319                           ; BSR set to: 1
 18320                           ;main.c: 752:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '1';
 18321  0049B4  C04E  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 18322  0049B8  C04F  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 18323  0049BC  0E31               	movlw	49
 18324  0049BE  6EDF               	movwf	indf2,c
 18325  0049C0  EFE8  F024         	goto	l9985
 18326  0049C4                     l9971:
 18327                           
 18328                           ; BSR set to: 1
 18329                           ;main.c: 754:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '0';
 18330  0049C4  C04E  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 18331  0049C8  C04F  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 18332  0049CC  0E30               	movlw	48
 18333  0049CE  6EDF               	movwf	indf2,c
 18334  0049D0                     l9985:
 18335                           
 18336                           ;main.c: 779:     if (contCaminos > 1)
 18337  0049D0  0E01               	movlw	1
 18338  0049D2  6451               	cpfsgt	hayCruce@contCaminos^0,c
 18339  0049D4  EFEE  F024         	goto	u10641
 18340  0049D8  EFF0  F024         	goto	u10640
 18341  0049DC                     u10641:
 18342  0049DC  EFF3  F024         	goto	l9993
 18343  0049E0                     u10640:
 18344  0049E0                     
 18345                           ;main.c: 780:         return 1;
 18346  0049E0  0E01               	movlw	1
 18347  0049E2  EFF4  F024         	goto	l495
 18348  0049E6                     l9993:
 18349                           
 18350                           ;main.c: 783:         return 0;
 18351  0049E6  0E00               	movlw	0
 18352  0049E8                     l495:
 18353  0049E8  0012               	return		;funcret
 18354  0049EA                     __end_of_hayCruce:
 18355                           	opt callstack 0
 18356                           
 18357 ;; *************** function ___flge *****************
 18358 ;; Defined at:
 18359 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 18360 ;; Parameters:    Size  Location     Type
 18361 ;;  ff1             4   13[BANK0 ] unsigned char 
 18362 ;;  ff2             4   17[BANK0 ] unsigned char 
 18363 ;; Auto vars:     Size  Location     Type
 18364 ;;		None
 18365 ;; Return value:  Size  Location     Type
 18366 ;;		None               void
 18367 ;; Registers used:
 18368 ;;		wreg, status,2, status,0
 18369 ;; Tracked objects:
 18370 ;;		On entry : 0/0
 18371 ;;		On exit  : 0/0
 18372 ;;		Unchanged: 0/0
 18373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18374 ;;      Params:         0       8       0       0       0       0       0       0       0
 18375 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18376 ;;      Temps:          4       0       0       0       0       0       0       0       0
 18377 ;;      Totals:         4       8       0       0       0       0       0       0       0
 18378 ;;Total ram usage:       12 bytes
 18379 ;; Hardware stack levels used:    1
 18380 ;; Hardware stack levels required when called:    2
 18381 ;; This function calls:
 18382 ;;		Nothing
 18383 ;; This function is called by:
 18384 ;;		_hayCruceRapidoPID
 18385 ;;		_forzarEspejeo
 18386 ;;		_hayCruce
 18387 ;;		_decidirDireccion
 18388 ;;		_efgtoa
 18389 ;;		_probarCruceT
 18390 ;;		_probarPID
 18391 ;; This function uses a non-reentrant model
 18392 ;;
 18393                           
 18394                           	psect	text73
 18395  005184                     __ptext73:
 18396                           	opt callstack 0
 18397  005184                     ___flge:
 18398                           	opt callstack 23
 18399  005184  0E00               	movlw	0
 18400  005186  0100               	movlb	0	; () banked
 18401  005188  156D               	andwf	___flge@ff1& (0+255),w,b
 18402  00518A  6E4A               	movwf	??___flge^0,c
 18403  00518C  0E00               	movlw	0
 18404  00518E  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
 18405  005190  6E4B               	movwf	(??___flge+1)^0,c
 18406  005192  0E80               	movlw	128
 18407  005194  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
 18408  005196  6E4C               	movwf	(??___flge+2)^0,c
 18409  005198  0E7F               	movlw	127
 18410  00519A  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
 18411  00519C  6E4D               	movwf	(??___flge+3)^0,c
 18412  00519E  504A               	movf	??___flge^0,w,c
 18413  0051A0  104B               	iorwf	(??___flge+1)^0,w,c
 18414  0051A2  104C               	iorwf	(??___flge+2)^0,w,c
 18415  0051A4  104D               	iorwf	(??___flge+3)^0,w,c
 18416  0051A6  A4D8               	btfss	status,2,c
 18417  0051A8  EFD8  F028         	goto	u9191
 18418  0051AC  EFDA  F028         	goto	u9190
 18419  0051B0                     u9191:
 18420  0051B0  EFE2  F028         	goto	l8983
 18421  0051B4                     u9190:
 18422  0051B4                     
 18423                           ; BSR set to: 0
 18424  0051B4  0E00               	movlw	0
 18425  0051B6  6F6D               	movwf	___flge@ff1& (0+255),b
 18426  0051B8  0E00               	movlw	0
 18427  0051BA  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
 18428  0051BC  0E00               	movlw	0
 18429  0051BE  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
 18430  0051C0  0E00               	movlw	0
 18431  0051C2  6F70               	movwf	(___flge@ff1+3)& (0+255),b
 18432  0051C4                     l8983:
 18433                           
 18434                           ; BSR set to: 0
 18435  0051C4  0E00               	movlw	0
 18436  0051C6  1571               	andwf	___flge@ff2& (0+255),w,b
 18437  0051C8  6E4A               	movwf	??___flge^0,c
 18438  0051CA  0E00               	movlw	0
 18439  0051CC  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
 18440  0051CE  6E4B               	movwf	(??___flge+1)^0,c
 18441  0051D0  0E80               	movlw	128
 18442  0051D2  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
 18443  0051D4  6E4C               	movwf	(??___flge+2)^0,c
 18444  0051D6  0E7F               	movlw	127
 18445  0051D8  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
 18446  0051DA  6E4D               	movwf	(??___flge+3)^0,c
 18447  0051DC  504A               	movf	??___flge^0,w,c
 18448  0051DE  104B               	iorwf	(??___flge+1)^0,w,c
 18449  0051E0  104C               	iorwf	(??___flge+2)^0,w,c
 18450  0051E2  104D               	iorwf	(??___flge+3)^0,w,c
 18451  0051E4  A4D8               	btfss	status,2,c
 18452  0051E6  EFF7  F028         	goto	u9201
 18453  0051EA  EFF9  F028         	goto	u9200
 18454  0051EE                     u9201:
 18455  0051EE  EF01  F029         	goto	l8987
 18456  0051F2                     u9200:
 18457  0051F2                     
 18458                           ; BSR set to: 0
 18459  0051F2  0E00               	movlw	0
 18460  0051F4  6F71               	movwf	___flge@ff2& (0+255),b
 18461  0051F6  0E00               	movlw	0
 18462  0051F8  6F72               	movwf	(___flge@ff2+1)& (0+255),b
 18463  0051FA  0E00               	movlw	0
 18464  0051FC  6F73               	movwf	(___flge@ff2+2)& (0+255),b
 18465  0051FE  0E00               	movlw	0
 18466  005200  6F74               	movwf	(___flge@ff2+3)& (0+255),b
 18467  005202                     l8987:
 18468                           
 18469                           ; BSR set to: 0
 18470  005202  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
 18471  005204  EF06  F029         	goto	u9211
 18472  005208  EF08  F029         	goto	u9210
 18473  00520C                     u9211:
 18474  00520C  EF11  F029         	goto	l8991
 18475  005210                     u9210:
 18476  005210                     
 18477                           ; BSR set to: 0
 18478  005210  6D6D               	negf	___flge@ff1& (0+255),b
 18479  005212  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
 18480  005214  B0D8               	btfsc	status,0,c
 18481  005216  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
 18482  005218  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
 18483  00521A  B0D8               	btfsc	status,0,c
 18484  00521C  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
 18485  00521E  0E80               	movlw	128
 18486  005220  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
 18487  005222                     l8991:
 18488                           
 18489                           ; BSR set to: 0
 18490  005222  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
 18491  005224  EF16  F029         	goto	u9221
 18492  005228  EF18  F029         	goto	u9220
 18493  00522C                     u9221:
 18494  00522C  EF21  F029         	goto	l1192
 18495  005230                     u9220:
 18496  005230                     
 18497                           ; BSR set to: 0
 18498  005230  6D71               	negf	___flge@ff2& (0+255),b
 18499  005232  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
 18500  005234  B0D8               	btfsc	status,0,c
 18501  005236  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
 18502  005238  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
 18503  00523A  B0D8               	btfsc	status,0,c
 18504  00523C  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
 18505  00523E  0E80               	movlw	128
 18506  005240  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
 18507  005242                     l1192:
 18508                           
 18509                           ; BSR set to: 0
 18510  005242  0E00               	movlw	0
 18511  005244  1B6D               	xorwf	___flge@ff1& (0+255),f,b
 18512  005246  0E00               	movlw	0
 18513  005248  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
 18514  00524A  0E00               	movlw	0
 18515  00524C  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
 18516  00524E  0E80               	movlw	128
 18517  005250  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
 18518  005252  0E00               	movlw	0
 18519  005254  1B71               	xorwf	___flge@ff2& (0+255),f,b
 18520  005256  0E00               	movlw	0
 18521  005258  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
 18522  00525A  0E00               	movlw	0
 18523  00525C  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
 18524  00525E  0E80               	movlw	128
 18525  005260  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
 18526  005262  5171               	movf	___flge@ff2& (0+255),w,b
 18527  005264  5D6D               	subwf	___flge@ff1& (0+255),w,b
 18528  005266  5172               	movf	(___flge@ff2+1)& (0+255),w,b
 18529  005268  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
 18530  00526A  5173               	movf	(___flge@ff2+2)& (0+255),w,b
 18531  00526C  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
 18532  00526E  5174               	movf	(___flge@ff2+3)& (0+255),w,b
 18533  005270  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
 18534  005272  B0D8               	btfsc	status,0,c
 18535  005274  EF3E  F029         	goto	u9231
 18536  005278  EF40  F029         	goto	u9230
 18537  00527C                     u9231:
 18538  00527C  EF43  F029         	goto	l8997
 18539  005280                     u9230:
 18540  005280                     
 18541                           ; BSR set to: 0
 18542  005280  90D8               	bcf	status,0,c
 18543  005282  EF44  F029         	goto	l1197
 18544  005286                     l8997:
 18545                           
 18546                           ; BSR set to: 0
 18547  005286  80D8               	bsf	status,0,c
 18548  005288                     l1197:
 18549                           
 18550                           ; BSR set to: 0
 18551  005288  0012               	return		;funcret
 18552  00528A                     __end_of___flge:
 18553                           	opt callstack 0
 18554                           
 18555 ;; *************** function _UART_init *****************
 18556 ;; Defined at:
 18557 ;;		line 13 in file "./UART.h"
 18558 ;; Parameters:    Size  Location     Type
 18559 ;;  BAUD            4   31[COMRAM] long 
 18560 ;; Auto vars:     Size  Location     Type
 18561 ;;  frecuenciaCr    4    0        long 
 18562 ;; Return value:  Size  Location     Type
 18563 ;;                  1    wreg      void 
 18564 ;; Registers used:
 18565 ;;		wreg, status,2, status,0, cstack
 18566 ;; Tracked objects:
 18567 ;;		On entry : 0/0
 18568 ;;		On exit  : 0/0
 18569 ;;		Unchanged: 0/0
 18570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18571 ;;      Params:         4       0       0       0       0       0       0       0       0
 18572 ;;      Locals:         8       0       0       0       0       0       0       0       0
 18573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18574 ;;      Totals:        12       0       0       0       0       0       0       0       0
 18575 ;;Total ram usage:       12 bytes
 18576 ;; Hardware stack levels used:    1
 18577 ;; Hardware stack levels required when called:    3
 18578 ;; This function calls:
 18579 ;;		___aldiv
 18580 ;; This function is called by:
 18581 ;;		_main
 18582 ;; This function uses a non-reentrant model
 18583 ;;
 18584                           
 18585                           	psect	text74
 18586  005EDA                     __ptext74:
 18587                           	opt callstack 0
 18588  005EDA                     _UART_init:
 18589                           	opt callstack 27
 18590  005EDA                     
 18591                           ;./UART.h: 16:     TRISC6 = 0;
 18592  005EDA  9C94               	bcf	3988,6,c	;volatile
 18593  005EDC                     
 18594                           ;./UART.h: 17:     TRISC7 = 1;
 18595  005EDC  8E94               	bsf	3988,7,c	;volatile
 18596  005EDE                     
 18597                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 18598  005EDE  0E10               	movlw	16
 18599  005EE0  6E16               	movwf	___aldiv@divisor^0,c
 18600  005EE2  0E00               	movlw	0
 18601  005EE4  6E17               	movwf	(___aldiv@divisor+1)^0,c
 18602  005EE6  0E00               	movlw	0
 18603  005EE8  6E18               	movwf	(___aldiv@divisor+2)^0,c
 18604  005EEA  0E00               	movlw	0
 18605  005EEC  6E19               	movwf	(___aldiv@divisor+3)^0,c
 18606  005EEE  0E00               	movlw	0
 18607  005EF0  6E12               	movwf	___aldiv@dividend^0,c
 18608  005EF2  0E09               	movlw	9
 18609  005EF4  6E13               	movwf	(___aldiv@dividend+1)^0,c
 18610  005EF6  0E3D               	movlw	61
 18611  005EF8  6E14               	movwf	(___aldiv@dividend+2)^0,c
 18612  005EFA  0E00               	movlw	0
 18613  005EFC  6E15               	movwf	(___aldiv@dividend+3)^0,c
 18614  005EFE  EC33  F027         	call	___aldiv	;wreg free
 18615  005F02  C012  F028         	movff	?___aldiv,_UART_init$1886
 18616  005F06  C013  F029         	movff	?___aldiv+1,_UART_init$1886+1
 18617  005F0A  C014  F02A         	movff	?___aldiv+2,_UART_init$1886+2
 18618  005F0E  C015  F02B         	movff	?___aldiv+3,_UART_init$1886+3
 18619  005F12                     
 18620                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 18621  005F12  C028  F012         	movff	_UART_init$1886,___aldiv@dividend
 18622  005F16  C029  F013         	movff	_UART_init$1886+1,___aldiv@dividend+1
 18623  005F1A  C02A  F014         	movff	_UART_init$1886+2,___aldiv@dividend+2
 18624  005F1E  C02B  F015         	movff	_UART_init$1886+3,___aldiv@dividend+3
 18625  005F22  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 18626  005F26  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 18627  005F2A  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 18628  005F2E  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 18629  005F32  EC33  F027         	call	___aldiv	;wreg free
 18630  005F36  0412               	decf	?___aldiv^0,w,c
 18631  005F38  6EAF               	movwf	175,c	;volatile
 18632  005F3A                     
 18633                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 18634  005F3A  84AC               	bsf	172,2,c	;volatile
 18635  005F3C                     
 18636                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 18637  005F3C  98AC               	bcf	172,4,c	;volatile
 18638  005F3E                     
 18639                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 18640  005F3E  8EAB               	bsf	171,7,c	;volatile
 18641  005F40                     
 18642                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 18643  005F40  9CAC               	bcf	172,6,c	;volatile
 18644  005F42                     
 18645                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 18646  005F42  8AAC               	bsf	172,5,c	;volatile
 18647  005F44                     
 18648                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 18649  005F44  9CAB               	bcf	171,6,c	;volatile
 18650  005F46                     
 18651                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 18652  005F46  88AB               	bsf	171,4,c	;volatile
 18653  005F48  0012               	return		;funcret
 18654  005F4A                     __end_of_UART_init:
 18655                           	opt callstack 0
 18656                           
 18657 ;; *************** function ___aldiv *****************
 18658 ;; Defined at:
 18659 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;  dividend        4   17[COMRAM] long 
 18662 ;;  divisor         4   21[COMRAM] long 
 18663 ;; Auto vars:     Size  Location     Type
 18664 ;;  quotient        4   27[COMRAM] long 
 18665 ;;  sign            1   26[COMRAM] unsigned char 
 18666 ;;  counter         1   25[COMRAM] unsigned char 
 18667 ;; Return value:  Size  Location     Type
 18668 ;;                  4   17[COMRAM] long 
 18669 ;; Registers used:
 18670 ;;		wreg, status,2, status,0
 18671 ;; Tracked objects:
 18672 ;;		On entry : 0/0
 18673 ;;		On exit  : 0/0
 18674 ;;		Unchanged: 0/0
 18675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18676 ;;      Params:         8       0       0       0       0       0       0       0       0
 18677 ;;      Locals:         6       0       0       0       0       0       0       0       0
 18678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18679 ;;      Totals:        14       0       0       0       0       0       0       0       0
 18680 ;;Total ram usage:       14 bytes
 18681 ;; Hardware stack levels used:    1
 18682 ;; Hardware stack levels required when called:    2
 18683 ;; This function calls:
 18684 ;;		Nothing
 18685 ;; This function is called by:
 18686 ;;		_map
 18687 ;;		_UART_init
 18688 ;; This function uses a non-reentrant model
 18689 ;;
 18690                           
 18691                           	psect	text75
 18692  004E66                     __ptext75:
 18693                           	opt callstack 0
 18694  004E66                     ___aldiv:
 18695                           	opt callstack 24
 18696  004E66  0E00               	movlw	0
 18697  004E68  6E1B               	movwf	___aldiv@sign^0,c
 18698  004E6A  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 18699  004E6C  EF3C  F027         	goto	u4300
 18700  004E70  EF3A  F027         	goto	u4301
 18701  004E74                     u4301:
 18702  004E74  EF46  F027         	goto	l5205
 18703  004E78                     u4300:
 18704  004E78  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 18705  004E7A  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 18706  004E7C  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 18707  004E7E  6C16               	negf	___aldiv@divisor^0,c
 18708  004E80  0E00               	movlw	0
 18709  004E82  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 18710  004E84  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 18711  004E86  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 18712  004E88  0E01               	movlw	1
 18713  004E8A  6E1B               	movwf	___aldiv@sign^0,c
 18714  004E8C                     l5205:
 18715  004E8C  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 18716  004E8E  EF4D  F027         	goto	u4310
 18717  004E92  EF4B  F027         	goto	u4311
 18718  004E96                     u4311:
 18719  004E96  EF57  F027         	goto	l5211
 18720  004E9A                     u4310:
 18721  004E9A  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 18722  004E9C  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 18723  004E9E  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 18724  004EA0  6C12               	negf	___aldiv@dividend^0,c
 18725  004EA2  0E00               	movlw	0
 18726  004EA4  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 18727  004EA6  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 18728  004EA8  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 18729  004EAA  0E01               	movlw	1
 18730  004EAC  1A1B               	xorwf	___aldiv@sign^0,f,c
 18731  004EAE                     l5211:
 18732  004EAE  0E00               	movlw	0
 18733  004EB0  6E1C               	movwf	___aldiv@quotient^0,c
 18734  004EB2  0E00               	movlw	0
 18735  004EB4  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 18736  004EB6  0E00               	movlw	0
 18737  004EB8  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 18738  004EBA  0E00               	movlw	0
 18739  004EBC  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 18740  004EBE  5016               	movf	___aldiv@divisor^0,w,c
 18741  004EC0  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 18742  004EC2  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 18743  004EC4  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 18744  004EC6  B4D8               	btfsc	status,2,c
 18745  004EC8  EF68  F027         	goto	u4321
 18746  004ECC  EF6A  F027         	goto	u4320
 18747  004ED0                     u4321:
 18748  004ED0  EFA0  F027         	goto	l5233
 18749  004ED4                     u4320:
 18750  004ED4  0E01               	movlw	1
 18751  004ED6  6E1A               	movwf	___aldiv@counter^0,c
 18752  004ED8  EF74  F027         	goto	l5219
 18753  004EDC                     l5217:
 18754  004EDC  90D8               	bcf	status,0,c
 18755  004EDE  3616               	rlcf	___aldiv@divisor^0,f,c
 18756  004EE0  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 18757  004EE2  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 18758  004EE4  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 18759  004EE6  2A1A               	incf	___aldiv@counter^0,f,c
 18760  004EE8                     l5219:
 18761  004EE8  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 18762  004EEA  EF79  F027         	goto	u4331
 18763  004EEE  EF7B  F027         	goto	u4330
 18764  004EF2                     u4331:
 18765  004EF2  EF6E  F027         	goto	l5217
 18766  004EF6                     u4330:
 18767  004EF6                     l5221:
 18768  004EF6  90D8               	bcf	status,0,c
 18769  004EF8  361C               	rlcf	___aldiv@quotient^0,f,c
 18770  004EFA  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 18771  004EFC  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 18772  004EFE  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 18773  004F00  5016               	movf	___aldiv@divisor^0,w,c
 18774  004F02  5C12               	subwf	___aldiv@dividend^0,w,c
 18775  004F04  5017               	movf	(___aldiv@divisor+1)^0,w,c
 18776  004F06  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 18777  004F08  5018               	movf	(___aldiv@divisor+2)^0,w,c
 18778  004F0A  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 18779  004F0C  5019               	movf	(___aldiv@divisor+3)^0,w,c
 18780  004F0E  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 18781  004F10  A0D8               	btfss	status,0,c
 18782  004F12  EF8D  F027         	goto	u4341
 18783  004F16  EF8F  F027         	goto	u4340
 18784  004F1A                     u4341:
 18785  004F1A  EF98  F027         	goto	l5229
 18786  004F1E                     u4340:
 18787  004F1E  5016               	movf	___aldiv@divisor^0,w,c
 18788  004F20  5E12               	subwf	___aldiv@dividend^0,f,c
 18789  004F22  5017               	movf	(___aldiv@divisor+1)^0,w,c
 18790  004F24  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 18791  004F26  5018               	movf	(___aldiv@divisor+2)^0,w,c
 18792  004F28  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 18793  004F2A  5019               	movf	(___aldiv@divisor+3)^0,w,c
 18794  004F2C  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 18795  004F2E  801C               	bsf	___aldiv@quotient^0,0,c
 18796  004F30                     l5229:
 18797  004F30  90D8               	bcf	status,0,c
 18798  004F32  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 18799  004F34  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 18800  004F36  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 18801  004F38  3216               	rrcf	___aldiv@divisor^0,f,c
 18802  004F3A  2E1A               	decfsz	___aldiv@counter^0,f,c
 18803  004F3C  EF7B  F027         	goto	l5221
 18804  004F40                     l5233:
 18805  004F40  501B               	movf	___aldiv@sign^0,w,c
 18806  004F42  B4D8               	btfsc	status,2,c
 18807  004F44  EFA6  F027         	goto	u4351
 18808  004F48  EFA8  F027         	goto	u4350
 18809  004F4C                     u4351:
 18810  004F4C  EFB0  F027         	goto	l5237
 18811  004F50                     u4350:
 18812  004F50  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 18813  004F52  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 18814  004F54  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 18815  004F56  6C1C               	negf	___aldiv@quotient^0,c
 18816  004F58  0E00               	movlw	0
 18817  004F5A  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 18818  004F5C  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 18819  004F5E  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 18820  004F60                     l5237:
 18821  004F60  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 18822  004F64  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 18823  004F68  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 18824  004F6C  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 18825  004F70  0012               	return		;funcret
 18826  004F72                     __end_of___aldiv:
 18827                           	opt callstack 0
 18828                           
 18829 ;; *************** function _boton *****************
 18830 ;; Defined at:
 18831 ;;		line 107 in file "main.c"
 18832 ;; Parameters:    Size  Location     Type
 18833 ;;		None
 18834 ;; Auto vars:     Size  Location     Type
 18835 ;;		None
 18836 ;; Return value:  Size  Location     Type
 18837 ;;                  1    wreg      void 
 18838 ;; Registers used:
 18839 ;;		wreg, status,2, status,0, cstack
 18840 ;; Tracked objects:
 18841 ;;		On entry : 0/0
 18842 ;;		On exit  : 0/0
 18843 ;;		Unchanged: 0/0
 18844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18845 ;;      Params:         0       0       0       0       0       0       0       0       0
 18846 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18847 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18848 ;;      Totals:         2       0       0       0       0       0       0       0       0
 18849 ;;Total ram usage:        2 bytes
 18850 ;; Hardware stack levels used:    1
 18851 ;; Hardware stack levels required when called:    1
 18852 ;; This function calls:
 18853 ;;		_antiRebote
 18854 ;; This function is called by:
 18855 ;;		Interrupt level 2
 18856 ;; This function uses a non-reentrant model
 18857 ;;
 18858                           
 18859                           	psect	intcode
 18860  000008                     __pintcode:
 18861                           	opt callstack 0
 18862  000008                     _boton:
 18863                           	opt callstack 19
 18864                           
 18865                           ;incstack = 0
 18866  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 18867  00000A  ED49  F031         	call	int_func,f	;refresh shadow registers
 18868                           
 18869                           	psect	intcode_body
 18870  006292                     __pintcode_body:
 18871                           	opt callstack 19
 18872  006292                     int_func:
 18873                           	opt callstack 19
 18874  006292  0006               	pop		; remove dummy address from shadow register refresh
 18875  006294                     
 18876                           ;main.c: 109:     if (INT0IF)
 18877  006294  A2F2               	btfss	4082,1,c	;volatile
 18878  006296  EF4F  F031         	goto	i2u822_41
 18879  00629A  EF51  F031         	goto	i2u822_40
 18880  00629E                     i2u822_41:
 18881  00629E  EF71  F031         	goto	i2l284
 18882  0062A2                     i2u822_40:
 18883  0062A2                     
 18884                           ;main.c: 110:     {;main.c: 111:         antiRebote(1);
 18885  0062A2  0E01               	movlw	1
 18886  0062A4  ECC9  F030         	call	_antiRebote
 18887  0062A8                     
 18888                           ;main.c: 112:         if (pausa) {
 18889  0062A8  0101               	movlb	1	; () banked
 18890  0062AA  51F4               	movf	_pausa& (0+255),w,b
 18891  0062AC  B4D8               	btfsc	status,2,c
 18892  0062AE  EF5B  F031         	goto	i2u823_41
 18893  0062B2  EF5D  F031         	goto	i2u823_40
 18894  0062B6                     i2u823_41:
 18895  0062B6  EF6D  F031         	goto	i2l282
 18896  0062BA                     i2u823_40:
 18897  0062BA                     
 18898                           ; BSR set to: 1
 18899                           ;main.c: 113:             pausa = 0;
 18900  0062BA  0E00               	movlw	0
 18901  0062BC  6FF4               	movwf	_pausa& (0+255),b
 18902  0062BE                     
 18903                           ; BSR set to: 1
 18904                           ;main.c: 114:             LATD2 = 1;
 18905  0062BE  848C               	bsf	3980,2,c	;volatile
 18906  0062C0                     
 18907                           ; BSR set to: 1
 18908                           ;main.c: 115:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 18909  0062C0  0E10               	movlw	16
 18910  0062C2  6E05               	movwf	(??_boton+1)^0,c
 18911  0062C4  0E39               	movlw	57
 18912  0062C6  6E04               	movwf	??_boton^0,c
 18913  0062C8  0E0E               	movlw	14
 18914  0062CA                     i2u1160_47:
 18915  0062CA  2EE8               	decfsz	wreg,f,c
 18916  0062CC  D7FE               	bra	i2u1160_47
 18917  0062CE  2E04               	decfsz	??_boton^0,f,c
 18918  0062D0  D7FC               	bra	i2u1160_47
 18919  0062D2  2E05               	decfsz	(??_boton+1)^0,f,c
 18920  0062D4  D7FA               	bra	i2u1160_47
 18921                           
 18922                           ;main.c: 116:         } else {
 18923  0062D6  EF70  F031         	goto	i2l7981
 18924  0062DA                     i2l282:
 18925                           
 18926                           ; BSR set to: 1
 18927                           ;main.c: 117:             LATD2 = 0;
 18928  0062DA  948C               	bcf	3980,2,c	;volatile
 18929  0062DC                     
 18930                           ; BSR set to: 1
 18931                           ;main.c: 118:             pausa = 1;
 18932  0062DC  0E01               	movlw	1
 18933  0062DE  6FF4               	movwf	_pausa& (0+255),b
 18934  0062E0                     i2l7981:
 18935                           
 18936                           ;main.c: 121:         INT0IF = 0;
 18937  0062E0  92F2               	bcf	4082,1,c	;volatile
 18938  0062E2                     i2l284:
 18939  0062E2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18940  0062E4  0011               	retfie		f
 18941  0062E6                     __end_of_boton:
 18942                           	opt callstack 0
 18943                           
 18944 ;; *************** function _antiRebote *****************
 18945 ;; Defined at:
 18946 ;;		line 219 in file "main.c"
 18947 ;; Parameters:    Size  Location     Type
 18948 ;;  pin             1    wreg     unsigned char 
 18949 ;; Auto vars:     Size  Location     Type
 18950 ;;  pin             1    2[COMRAM] unsigned char 
 18951 ;; Return value:  Size  Location     Type
 18952 ;;                  1    wreg      void 
 18953 ;; Registers used:
 18954 ;;		wreg, status,2, status,0
 18955 ;; Tracked objects:
 18956 ;;		On entry : 0/0
 18957 ;;		On exit  : 0/0
 18958 ;;		Unchanged: 0/0
 18959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18960 ;;      Params:         0       0       0       0       0       0       0       0       0
 18961 ;;      Locals:         1       0       0       0       0       0       0       0       0
 18962 ;;      Temps:          2       0       0       0       0       0       0       0       0
 18963 ;;      Totals:         3       0       0       0       0       0       0       0       0
 18964 ;;Total ram usage:        3 bytes
 18965 ;; Hardware stack levels used:    1
 18966 ;; This function calls:
 18967 ;;		Nothing
 18968 ;; This function is called by:
 18969 ;;		_boton
 18970 ;; This function uses a non-reentrant model
 18971 ;;
 18972                           
 18973                           	psect	text77
 18974  006192                     __ptext77:
 18975                           	opt callstack 0
 18976  006192                     _antiRebote:
 18977                           	opt callstack 19
 18978                           
 18979                           ;incstack = 0
 18980                           ;antiRebote@pin stored from wreg
 18981  006192  6E03               	movwf	antiRebote@pin^0,c
 18982  006194                     
 18983                           ;main.c: 221:     switch (pin) {
 18984  006194  EFE3  F030         	goto	i2l7771
 18985  006198                     i2l318:
 18986  006198  A081               	btfss	129,0,c	;volatile
 18987  00619A  EFD1  F030         	goto	i2u801_41
 18988  00619E  EFD3  F030         	goto	i2u801_40
 18989  0061A2                     i2u801_41:
 18990  0061A2  EFCC  F030         	goto	i2l318
 18991  0061A6                     i2u801_40:
 18992  0061A6                     i2l321:
 18993  0061A6  B081               	btfsc	129,0,c	;volatile
 18994  0061A8  EFD8  F030         	goto	i2u802_41
 18995  0061AC  EFDA  F030         	goto	i2u802_40
 18996  0061B0                     i2u802_41:
 18997  0061B0  EFD3  F030         	goto	i2l321
 18998  0061B4                     i2u802_40:
 18999  0061B4                     
 19000                           ;main.c: 225:             _delay((unsigned long)((100)*(4000000/4000.0)));
 19001  0061B4  0E82               	movlw	130
 19002  0061B6  6E01               	movwf	??_antiRebote^0,c
 19003  0061B8  0EDE               	movlw	222
 19004  0061BA                     i2u1161_47:
 19005  0061BA  2EE8               	decfsz	wreg,f,c
 19006  0061BC  D7FE               	bra	i2u1161_47
 19007  0061BE  2E01               	decfsz	??_antiRebote^0,f,c
 19008  0061C0  D7FC               	bra	i2u1161_47
 19009                           
 19010                           ;main.c: 226:             break;
 19011  0061C2  EFF4  F030         	goto	i2l326
 19012  0061C6                     i2l7771:
 19013  0061C6  5003               	movf	antiRebote@pin^0,w,c
 19014  0061C8  6E01               	movwf	??_antiRebote^0,c
 19015  0061CA  6A02               	clrf	(??_antiRebote+1)^0,c
 19016                           
 19017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19018                           ; Switch size 1, requested type "simple"
 19019                           ; Number of cases is 1, Range of values is 0 to 0
 19020                           ; switch strategies available:
 19021                           ; Name         Instructions Cycles
 19022                           ; simple_byte            4     3 (average)
 19023                           ;	Chosen strategy is simple_byte
 19024  0061CC  5002               	movf	(??_antiRebote+1)^0,w,c
 19025  0061CE  0A00               	xorlw	0	; case 0
 19026  0061D0  B4D8               	btfsc	status,2,c
 19027  0061D2  EFED  F030         	goto	i2l11167
 19028  0061D6  EFF4  F030         	goto	i2l326
 19029  0061DA                     i2l11167:
 19030                           
 19031                           ; Switch size 1, requested type "simple"
 19032                           ; Number of cases is 1, Range of values is 1 to 1
 19033                           ; switch strategies available:
 19034                           ; Name         Instructions Cycles
 19035                           ; simple_byte            4     3 (average)
 19036                           ;	Chosen strategy is simple_byte
 19037  0061DA  5001               	movf	??_antiRebote^0,w,c
 19038  0061DC  0A01               	xorlw	1	; case 1
 19039  0061DE  B4D8               	btfsc	status,2,c
 19040  0061E0  EFCC  F030         	goto	i2l318
 19041  0061E4  EFF4  F030         	goto	i2l326
 19042  0061E8                     i2l326:
 19043  0061E8  0012               	return		;funcret
 19044  0061EA                     __end_of_antiRebote:
 19045                           	opt callstack 0
 19046                           
 19047                           	psect	rparam
 19048  0000                     
 19049                           	psect	temp
 19050  00005A                     btemp:
 19051                           	opt callstack 0
 19052  00005A                     	ds	1
 19053  0000                     int$flags	set	btemp
 19054  0000                     wtemp8	set	btemp+1
 19055  0000                     ttemp5	set	btemp+1
 19056  0000                     ttemp6	set	btemp+4
 19057  0000                     ttemp7	set	btemp+8
 19058                           tosu	equ	0xFFF
 19059                           tosh	equ	0xFFE
 19060                           tosl	equ	0xFFD
 19061                           stkptr	equ	0xFFC
 19062                           pclatu	equ	0xFFB
 19063                           pclath	equ	0xFFA
 19064                           pcl	equ	0xFF9
 19065                           tblptru	equ	0xFF8
 19066                           tblptrh	equ	0xFF7
 19067                           tblptrl	equ	0xFF6
 19068                           tablat	equ	0xFF5
 19069                           prodh	equ	0xFF4
 19070                           prodl	equ	0xFF3
 19071                           indf0	equ	0xFEF
 19072                           postinc0	equ	0xFEE
 19073                           postdec0	equ	0xFED
 19074                           preinc0	equ	0xFEC
 19075                           plusw0	equ	0xFEB
 19076                           fsr0h	equ	0xFEA
 19077                           fsr0l	equ	0xFE9
 19078                           wreg	equ	0xFE8
 19079                           indf1	equ	0xFE7
 19080                           postinc1	equ	0xFE6
 19081                           postdec1	equ	0xFE5
 19082                           preinc1	equ	0xFE4
 19083                           plusw1	equ	0xFE3
 19084                           fsr1h	equ	0xFE2
 19085                           fsr1l	equ	0xFE1
 19086                           bsr	equ	0xFE0
 19087                           indf2	equ	0xFDF
 19088                           postinc2	equ	0xFDE
 19089                           postdec2	equ	0xFDD
 19090                           preinc2	equ	0xFDC
 19091                           plusw2	equ	0xFDB
 19092                           fsr2h	equ	0xFDA
 19093                           fsr2l	equ	0xFD9
 19094                           status	equ	0xFD8


Data Sizes:
    Strings     643
    Constant    52
    Data        5
    BSS         443
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    160     160
    BANK1           256     25     248
    BANK2           256      0     220
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1532_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    probarMapeoDireccionCruces@caminoFinal	PTR unsigned char  size(2) Largest target is 20
		 -> comportamientoBasico@caminoFinal(BANK2[20]), 

    probarMapeoDireccionCruces@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    probarMapeoDireccionCruces@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    probarMapeoDireccionCruces@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    probarMapeoDireccionCruces@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    probarMapeoDireccionCruces@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    probarMapeoDireccionCruces@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    decidirDireccion@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    decidirDireccion@caminoFinal	PTR unsigned char  size(2) Largest target is 20
		 -> comportamientoBasico@caminoFinal(BANK2[20]), 

    decidirDireccion@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(BANK1[1]), 

    moverCarrito@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 56
		 -> STR_18(CODE[32]), STR_17(CODE[31]), STR_16(CODE[33]), STR_15(CODE[32]), 
		 -> STR_14(CODE[23]), STR_13(CODE[34]), STR_12(CODE[56]), STR_10(CODE[6]), 
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), 
		 -> STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _mover->_forzarAvanceRecto
    _PID->_pwmDuty
    _hayCruceRapidoPID->___flge
    _velocidadEstandar->_pwmDuty
    _myPow->_expf
    _logf->___flmul
    _expf->___fltol
    _expf->_logf
    _scalbnf->___flmul
    _velocidadBaja->_pwmDuty
    _pwmDuty->___fltol
    _map->___aldiv
    ___xxtofl->_dameLecturaAdc
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___flmul
    ___flsub->___xxtofl
    ___flneg->___fldiv
    ___flmul->___flneg
    ___fldiv->___flsub
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _seLlegoAlDestino->_dameLecturaAdc
    _mostrarDireccionElegida->_UART_printf
    _UART_printf->_UART_write
    _hayCruce->___flge
    ___flge->___flmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _main->_comportamientoBasico
    _visualizarPasosRealizados->_sprintf
    _inicializarComportamientoBasico->_dameDistancia
    _comportamientoBasico->_probarMapeoDireccionCruces
    _regresarAlCruce->_PID
    _PID->_pwmDuty
    _hayCruceRapidoPID->___flge
    _probarMapeoDireccionCruces->_sprintf
    _forzarEspejeo->_forzarEspejeoDerecha
    _forzarEspejeo->_forzarEspejeoIzquierda
    _velocidadEstandar->_pwmDuty
    _leerSensores->_dameDistancia
    _dameDistancia->_myPow
    _myPow->_expf
    _logf->___flmul
    _expf->_logf
    _scalbnf->___flmul
    _decidirDireccion->_sprintf
    _velocidadBaja->_pwmDuty
    _pwmDuty->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___fltol->___flmul
    _hayCruce->___flge
    ___flge->___flmul

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_comportamientoBasico
    _inicializarComportamientoBasico->_dameDistancia
    _comportamientoBasico->_decidirDireccion
    _leerSensores->_dameDistancia

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  662422
                                             22 BANK1      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   67106
                                            142 BANK0      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0  121662
                            ___flsub
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      22
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  472655
                                            159 BANK0      1     1      0
                                             20 BANK1      2     2      0
                                _PID
                        _UART_printf
                   _decidirDireccion
                     _forzarParoAuto
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
         _probarMapeoDireccionCruces
                    _regresarAlCruce
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   63864
                                             38 BANK0      7     3      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 14    14      0   44515
                                             24 BANK0     14    14      0
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                  _hayCruceRapidoPID
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (4) _hayCruceRapidoPID                                    1     1      0    4089
                                             77 COMRAM     1     1      0
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _probarMapeoDireccionCruces                          17     2     15   67984
                                            142 BANK0     17     2     15
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         7     3      4   42056
                                             25 BANK0      7     3      4
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   41752
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               1     1      0   18853
                                             24 BANK0      1     1      0
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 1     1      0   18853
                                             24 BANK0      1     1      0
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   18853
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     264
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         4     4      0  113756
                                              9 BANK1      4     4      0
                            ___fladd
                            ___fldiv
                            ___flsub
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4   93222
                                            153 BANK0      4     0      4
                                              0 BANK1      9     9      0
                            ___fldiv
                           ___xxtofl
                     _dameLecturaAdc
                              _myPow
 ---------------------------------------------------------------------------------
 (3) _myPow                                               16     8      8   87553
                                            137 BANK0     16     8      8
                            ___flmul
                            ___flneg
                            ___fltol
                     _dameLecturaAdc (ARG)
                               _expf
                               _logf
 ---------------------------------------------------------------------------------
 (4) _logf                                                76    72      4   32708
                                             73 COMRAM     6     6      0
                                             13 BANK0     70    66      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg (ARG)
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _expf                                                58    54      4   43468
                                             79 COMRAM     4     4      0
                                             83 BANK0     54    50      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg (ARG)
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf (ARG)
                            _scalbnf
 ---------------------------------------------------------------------------------
 (5) _scalbnf                                             18    12      6    9857
                                             73 COMRAM     4     4      0
                                             13 BANK0     14     8      6
                            ___flmul
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    24     4     20  100945
                                            142 BANK0      4     4      0
                                              0 BANK1     20     0     20
                        _UART_printf
                             ___flge
                           _hayCruce
            _mostrarDireccionElegida
                   _seLlegoAlDestino
                            _sprintf
                      _velocidadBaja
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   18853
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   18853
                                             79 COMRAM     5     5      0
                                             17 BANK0      7     4      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    1660
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1196
                                             10 COMRAM    14    10      4
                     _dameLecturaAdc (ARG)
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   65550
                                            122 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   63594
                                            114 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   63046
                                             84 BANK0     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   47677
                                             79 COMRAM     5     5      0
                                             21 BANK0     63    56      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             57 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1147
                                             73 COMRAM     6     6      0
                                             13 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    9587
                                             24 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6502
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     425
                                             57 COMRAM     4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    9173
                                             61 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    4343
                                             32 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    5270
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    3841
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3621
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1290
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     449
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (3) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _mostrarDireccionElegida                              3     3      0    1457
                                              8 COMRAM     3     3      0
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1435
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _hayCruce                                             4     1      3    4889
                                             77 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    4046
                                             73 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     756
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___flmul
         ___fladd (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
           _dameLecturaAdc (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl (ARG)
           _dameLecturaAdc (ARG)
       ___flsub
         ___fladd
         ___xxtofl (ARG)
           _dameLecturaAdc (ARG)
       ___fltol
         ___fladd (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
           _dameLecturaAdc (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl (ARG)
           _dameLecturaAdc (ARG)
       ___xxtofl
         _dameLecturaAdc (ARG)
       _hayCruceRapidoPID
         ___flge
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
           _dameLecturaAdc (ARG)
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl
           _dameLecturaAdc (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _UART_printf
       _UART_write
     _decidirDireccion
       _UART_printf
         _UART_write
       ___flge
         ___flmul (ARG)
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
       _hayCruce
         ___flge
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
       _mostrarDireccionElegida
         _UART_printf
           _UART_write
       _seLlegoAlDestino
         _dameLecturaAdc
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                       ___flsub (ARG)
                         ___fladd
                         ___xxtofl (ARG)
                           _dameLecturaAdc (ARG)
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                       _dameLecturaAdc (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flneg
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___fltol
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                       ___flsub (ARG)
                         ___fladd
                         ___xxtofl (ARG)
                           _dameLecturaAdc (ARG)
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                       _dameLecturaAdc (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _velocidadBaja
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___fltol
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl
             _dameLecturaAdc (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _forzarParoAuto
     _leerSensores
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl (ARG)
           _dameLecturaAdc (ARG)
         _dameLecturaAdc (ARG)
       ___flsub
         ___fladd
         ___xxtofl (ARG)
           _dameLecturaAdc (ARG)
       _dameDistancia
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
           _dameLecturaAdc (ARG)
         ___xxtofl
           _dameLecturaAdc (ARG)
         _dameLecturaAdc
         _myPow
           ___flmul
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___fltol
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           _dameLecturaAdc (ARG)
           _expf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flmul
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _logf (ARG)
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             _scalbnf (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
           _logf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flmul
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___fltol
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                       ___flsub (ARG)
                         ___fladd
                         ___xxtofl (ARG)
                           _dameLecturaAdc (ARG)
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                       _dameLecturaAdc (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl
                 _dameLecturaAdc (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___fltol
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                       ___flsub (ARG)
                         ___fladd
                         ___xxtofl (ARG)
                           _dameLecturaAdc (ARG)
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                       _dameLecturaAdc (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl
                 _dameLecturaAdc (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _probarMapeoDireccionCruces
       _UART_printf
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                       ___flsub (ARG)
                         ___fladd
                         ___xxtofl (ARG)
                           _dameLecturaAdc (ARG)
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                       _dameLecturaAdc (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
               ___flmul
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flneg
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___fltol
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flmul (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                       ___flsub (ARG)
                         ___fladd
                         ___xxtofl (ARG)
                           _dameLecturaAdc (ARG)
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                       _dameLecturaAdc (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _regresarAlCruce
       _PID
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___flsub
           ___fladd
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl
           _dameLecturaAdc (ARG)
         _hayCruceRapidoPID
           ___flge
             ___flmul (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___fltol
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl
             _dameLecturaAdc (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___fltol
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl
             _dameLecturaAdc (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
           _dameLecturaAdc (ARG)
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl
           _dameLecturaAdc (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
           _dameLecturaAdc (ARG)
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl
           _dameLecturaAdc (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     ___flsub
       ___fladd
       ___xxtofl (ARG)
         _dameLecturaAdc (ARG)
     _dameDistancia
       ___fldiv
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl (ARG)
           _dameLecturaAdc (ARG)
         _dameLecturaAdc (ARG)
       ___xxtofl
         _dameLecturaAdc (ARG)
       _dameLecturaAdc
       _myPow
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___flneg
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         _dameLecturaAdc (ARG)
         _expf (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
           _logf (ARG)
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flmul
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           _scalbnf (ARG)
             ___flmul
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
         _logf (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
           _dameLecturaAdc (ARG)
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
             _dameLecturaAdc (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___flsub (ARG)
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _dameLecturaAdc (ARG)
           ___xxtofl (ARG)
             _dameLecturaAdc (ARG)
         ___xxtofl
           _dameLecturaAdc (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
               _dameLecturaAdc (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
             ___flmul
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flneg
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___flsub
               ___fladd
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                     ___flsub (ARG)
                       ___fladd
                       ___xxtofl (ARG)
                         _dameLecturaAdc (ARG)
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                     _dameLecturaAdc (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                   ___flsub (ARG)
                     ___fladd
                     ___xxtofl (ARG)
                       _dameLecturaAdc (ARG)
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                   _dameLecturaAdc (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___flsub (ARG)
                 ___fladd
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
               ___xxtofl (ARG)
                 _dameLecturaAdc (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                 ___flsub (ARG)
                   ___fladd
                   ___xxtofl (ARG)
                     _dameLecturaAdc (ARG)
                 ___xxtofl (ARG)
                   _dameLecturaAdc (ARG)
                 _dameLecturaAdc (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      DC       9       85.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2CD      20        0.0%
DATA                 0      0     2CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 09 14:29:27 2020

                                    ___fldiv@aexp 0039                                      ___fldiv@bexp 0038  
                                    ___fldiv@sign 0031                                                _P1 7D6B  
                                              _P2 7D67                                      ___awdiv@sign 000B  
                                  ?_configurarAdc 0001                               ___wmul@multiplicand 0008  
                                     __CFG_BORV$3 000000               __size_of_probarMapeoDireccionCruces 0102  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                 comportamientoBasico@caminoFinal 02C8                                               l123 5ED8  
                                             l131 4698                                               l140 6426  
                                             l141 63F2                                               l142 6428  
                                             l232 3994                                               l136 63DC  
                                             l145 5F48                                               l401 67E6  
                                             l313 5B6E                                               l154 67EE  
                                             l410 67AC                                               l163 60DA  
                                             l171 64F0                                               l139 63E8  
                                             l172 6504                                               l404 676A  
                                             l157 67FC                                               l413 67CC  
                                             l166 6806                                               l511 6478  
                                             l407 678C                                               l239 595E  
                                             l416 623C                                               l424 658A  
                                             l169 64E2                                               l433 4FFA  
                                             l441 5CBE                                               l329 5572  
                                             l514 66D4                                               l194 5CB8  
                                             l515 66D6                                               l419 6290  
                                             l435 5024                                               l188 44DC  
                                             l436 5030                                               l428 4F7A  
                                             l444 5CDA                                               l525 5E5E  
                                             l437 507A                                               l445 5D00  
                                             l446 5D0C                                               l631 1340  
                                             l447 5D54                                               l456 5A10  
                                             l376 3304                                               l537 0D58  
                                             l705 538A                                               l393 3308  
                                             l646 11B0                                               l495 49E8  
                                             l567 0DFE                                               l671 3EBE  
                                             l760 575A                                               l816 0BDA  
                                             l656 1344                                               l584 0E86  
                                             l664 3EAE                                               l665 3E9E  
                                             l834 040A                                               l906 264E  
                                             l763 579C                                               l923 6014  
                                             l691 6722                                               l659 3E8E  
                                             l772 6190                                               l780 3A3E  
                                             l860 07A6                                               l924 601C  
                                             l765 57D8                                               l917 2594  
                                             l927 6748                                               l688 66FC  
                                             l778 3A36                                               l938 5FA2  
                                             l939 5FB2                                               l798 3C76  
                                    __CFG_CPB$OFF 000000                                               _PR2 000FCB  
                                             _PID 36A4                                      __CFG_CPD$OFF 000000  
                                             _Lg1 7D5B                                               _Lg2 7D57  
                                             _Lg3 7D53                                               _Lg4 7D4F  
                                    __CFG_BOR$OFF 000000                                               _abs 658C  
                                             _ida 01F3                                               _pad 5714  
                                             _map 5E60                                      ___awmod@sign 000B  
                           _numMovimientosTotales 0148                                               wreg 000FE8  
                                    ___flmul@aexp 0061                                      ___flmul@bexp 0066  
                        _DISTANCIA_PRIORIDAD_BAJA 010C                          _DISTANCIA_PRIORIDAD_ALTA 0114  
                                    ___flmul@sign 0060                                      ___flmul@temp 006B  
                                    ___flmul@prod 0067                       __size_of_limpiarMovimientos 0050  
                                    __CFG_LVP$OFF 000000                                              ?_PID 0001  
                                            PID@D 0138                                              PID@I 013A  
                                            PID@P 013C                                      ___fltol@exp1 004F  
                                    __CFG_WDT$OFF 000000                                              l1006 4F70  
                                            l1041 4D00                                              l1201 663A  
                                            ?_abs 0018                                              l1054 4E64  
                                            l1224 5182                                              l1171 5AC0  
                                            l1158 589C                                              l1511 3502  
                                            l1192 5242                                              l1520 3548  
                                            l1522 35C0                                              l1514 34C6  
                                            l1186 5C18                                              l1523 35AE  
                                            l1197 5288                                              l1613 65C2  
                                            l1509 36A2                                              l1541 2BD6  
                                            l1702 6388                                              l1550 2E44  
                                            l1551 2E32                                              l1455 283E  
                                            l1616 65CA                                              l1472 2958  
                                            l1464 2B0E                                              l1456 282C  
                                            l1608 5488                                              l1545 2F3A  
                                            l1481 2A28                                              l1457 27F2  
                                            l1482 2A16                                              l1803 6074  
                                            l1644 4B70                                              l1548 2DCC  
                                            l1708 6602                                              l1732 1A88  
                                            l1558 2EFC                                              l1582 46F0  
                                            l1647 4B78                                              l1808 607C  
                                            l1664 1A8A                                              l5201 4E78  
                                            l1497 64BE                                              l1585 484C  
                                            l5211 4EAE                                              l5203 4E88  
                                            l1684 430E                                              l1764 6336  
                                            l1596 47E4                                              l1668 20A6  
                                            l5221 4EF6                                              l5213 4EBE  
                                            l5205 4E8C                                              l1749 5712  
                                            l1757 6548                                              l1589 4788  
                                            l1694 6672                                              l5231 4F3A  
                                            l5223 4F00                                              l5215 4ED4  
                                            l5207 4E9A                                              l1767 680E  
                                            l5151 564A                                              l1687 4252  
                                            l1783 6136                                              l5225 4F1E  
                                            l5217 4EDC                                              l5233 4F40  
                                            l5209 4EAA                                              l6121 6350  
                                            l5161 56CC                                              l5153 565C  
                                            l6201 3BC6                                              l1793 5648  
                                            l1777 40FC                                              l5235 4F50  
                                            l5227 4F2E                                              l5219 4EE8  
                                            l6123 637E                                              l5155 566E  
                                            l5171 6528                                              l6211 3C18  
                                            l6203 3BE0                                              l5237 4F60  
                                            l5229 4F30                                              l6125 6382  
                                            l6117 6338                                              l5157 5678  
                                            l5165 6506                                              l1789 66A8  
                                            l5173 6674                                              l6213 3C2A  
                                            l6205 3BF0                                              l7101 5CC6  
                                            ?_map 0020                                              ?_pad 0016  
                                            l6119 633C                                              l5159 5696  
                                            l5167 6512                                              l5175 6680  
                                            l6151 6158                                              l6215 3C36  
                                            l6207 3C02                                              l5511 411E  
                                            l5183 65CC                                              l5503 6054  
                                            l5191 5F68                                              l7103 5CE2  
                                            l5169 6524                                              l5177 6684  
                                            l6153 6164                                              l5601 4D46  
                                            l6217 3C3E                                              l6209 3C12  
                                            l6161 3996                                              l5521 4206  
                                            l5513 4174                                              l5505 6066  
                                            l5193 5F78                                              l7105 5CF8  
                                            l7113 5D18                                              l5179 669C  
                                            l5451 5738                                              l6155 6168  
                                            l6147 6138                                              l5611 4DAE  
                                            l5603 4D66                                              l6219 3C4E  
                                            l6171 3A10                                              l6163 39B6  
                                            l5531 42EE                                              l5523 4242  
                                            l5515 4188                                              l5195 5F82  
                                            l5187 5F4A                                              l5443 5E60  
                                            l5197 4E66                                              l5541 6724  
                                            l5461 577E                                              l5453 5746  
                                            l6157 616C                                              l6149 614C  
                                            l5621 4E24                                              l5613 4DDC  
                                            l5605 4D84                                              l6181 3A6C  
                                            l6173 3A2A                                              l6165 39DE  
                                            l5533 42FE                                              l5517 4196  
                                            l5525 4276                                              l5509 40FE  
                                            l5189 5F5A                                              l5199 4E6A  
                                            l7231 5DF4                                              l5543 6740  
                                            l5463 57AC                                              l5455 5752  
                                            l5447 5714                                              l5551 4B8C  
                                            l5623 4E44                                              l5615 4DFC  
                                            l5607 4D8C                                              l5471 65A6  
                                            l6191 3B0A                                              l6183 3A74  
                                            l6175 3A46                                              l6167 39FE  
                                            l5527 42B2                                              l7233 5E04  
                                            l5537 663C                                              l6521 49EA  
                                            l5465 57C0                                              l5457 5766  
                                            l5449 5724                                              l5561 4BE2  
                                            l5553 4BAC                                              l5617 4E0E  
                                            l5609 4DA0                                              l6193 3B10  
                                            l6185 3A7C                                              l6177 3A58  
                                            l6169 3A0E                                              l9001 6604  
                                            l5481 541E                                              l5473 538C  
                                            l5529 42C6                                              l7235 5E14  
                                            l7227 5DE0                                              l6531 4A58  
                                            l6523 49FE                                              l5459 577A  
                                            l5571 4C36                                              l5563 4BEE  
                                            l5555 4BB0                                              l5547 4B7A  
                                            l5619 4E14                                              l6187 3A82  
                                            l6195 3B74                                              l6179 3A66  
                                            l9003 661A                                              l9011 5094  
                                            l5491 5480                                              l5475 53AC  
                                            l7229 5DE4                                              l6541 4A80  
                                            l6533 4A5C                                              l6525 4A02  
                                            l5581 4CAA                                              l5573 4C48  
                                            l5565 4C0C                                              l5557 4BBE  
                                            l5549 4B7E                                              l5469 658C  
                                            l6197 3B8E                                              l6189 3B04  
                                            l5901 57DA                                              l9005 662A  
                                            l9021 50E4                                              l5477 53EA  
                                            l5485 542A                                              l9101 453E  
                                            l7239 5E24                                              l6543 4A88  
                                            l6527 4A06                                              l5575 4C76  
                                            l5567 4C14                                              l5583 4CB0  
                                            l5559 4BDE                                              l5591 4D02  
                                            l6199 3BAC                                              l5911 5806  
                                            l5903 57DE                                              l9031 510E  
                                            l9023 50E8                                              l9015 50A8  
                                            l5487 543C                                              l5479 5412  
                                            l5495 60DC                                              l9111 466C  
                                            l9103 455E                                              l6625 67EA  
                                            l6553 4B30                                              l6545 4ABC  
                                            l6537 4A62                                              l6529 4A22  
                                            l5585 4CC0                                              l5577 4C96  
                                            l5569 4C28                                              l5593 4D06  
                                            l5921 5834                                              l5913 580E  
                                            l5905 57EC                                              l9041 5136  
                                            l9033 5118                                              l9025 50F6  
                                            l9017 50D2                                              l9009 507C  
                                            l5497 60EC                                              l9201 03A0  
                                            l9121 002C                                              l9105 45E4  
                                            l6555 4B42                                              l6539 4A78  
                                            l5587 4CE0                                              l5579 4C98  
                                            l5595 4D14                                              l5931 586E  
                                            l5923 583C                                              l5915 5812  
                                            l5907 57F4                                              l9043 5142  
                                            l9035 5122                                              l9019 50D4  
                                            l5499 601E                                              l9211 03E2  
                                            l9203 03B0                                              l9131 0078  
                                            l9123 003A                                              l6571 55B8  
                                            l6563 5574                                              l9107 4628  
                                            l7099 5CBA                                              l6557 4B54  
                                            l6549 4AF2                                              l5597 4D34  
                                            l5941 5894                                              l5933 5870  
                                            l5925 584A                                              l5917 581A  
                                            l5909 57F8                                              l9045 5152  
                                            l9301 0872                                              l9221 042A  
                                            l9213 03FC                                              l9205 03B4  
                                            l9141 00C2                                              l9133 008A  
                                            l9125 0042                                              l9117 0012  
                                            l6573 55D0                                              l6565 559E  
                                            l9061 4716                                              l9053 469C  
                                            l6911 60AA                                              l5599 4D38  
                                            l5935 5876                                              l5927 5850  
                                            l5919 582C                                              l5951 5A2C  
                                            l8511 267C                                              l8503 2650  
                                            l9047 5162                                              l9311 08AE  
                                            l9303 0886                                              l9223 043E  
                                            l9231 049C                                              l9207 03C6  
                                            l9215 0416                                              l9143 00C6  
                                            l9135 009A                                              l9127 0066  
                                            l9119 001C                                              l6575 55EC  
                                            l9071 4770                                              l9055 46AC  
                                            l6905 607E                                              l5929 5866  
                                            l5937 587C                                              l5961 5A60  
                                            l5953 5A30                                              l5945 5A12  
                                            l8601 282A                                              l8521 26B6  
                                            l8513 268C                                              l8505 265C  
                                            l9049 5172                                              l9401 0B90  
                                            l9313 08BA                                              l9305 0894  
                                            l9321 08DA                                              l9241 04DA  
                                            l9233 04A4                                              l9225 045A  
                                            l9209 03DA                                              l9161 017C  
                                            l9153 012C                                              l9145 00CA  
                                            l9137 00AE                                              l9129 0070  
                                            l6577 55FE                                              l6569 55AA  
                                            l9081 47D4                                              l9073 4772  
                                            l9065 472A                                              l9057 46BA  
                                            l6907 6082                                              l5939 588C  
                                            l5971 5A9A                                              l5963 5A68  
                                            l5955 5A3E                                              l5947 5A16  
                                            l8611 2880                                              l8603 284C  
                                            l8531 26E4                                              l8523 26BC  
                                            l8515 269C                                              l8507 266A  
                                            l9403 0B9C                                              l9331 0960  
                                            l9323 08EC                                              l9315 08CA  
                                            l9307 08A4                                              l9243 04EC  
                                            l9251 052C                                              l9235 04B6  
                                            l9227 0490                                              l9171 0200  
                                            l9155 013E                                              l9139 00BA  
                                            l9147 00D0                                              l6579 5626  
                                            l9091 482C                                              l9083 47F2  
                                            l9075 477E                                              l9067 4732  
                                            l9059 4700                                              l7723 63DC  
                                            l7741 5EDA                                              l6909 60A6  
                                            l5965 5A76                                              l5973 5AA0  
                                            l5957 5A46                                              l5949 5A24  
                                            l5981 5B70                                              l8701 2AFE  
                                            l8621 28BA                                              l8613 288E  
                                            l8605 285C                                              l8541 2718  
                                            l8533 26E6                                              l8525 26CE  
                                            l8517 269E                                              l8509 266C  
                                            l9405 0BA4                                              l9341 09DA  
                                            l9333 0994                                              l9325 08FE  
                                            l9317 08CE                                              l9309 08A8  
                                            l9261 0614                                              l9253 0534  
                                            l9245 04FA                                              l9237 04C8  
                                            l9229 0498                                              l9173 0212  
                                            l9157 015A                                              l9149 00F6  
                                            l9165 01A4                                              l9093 483A  
                                            l9085 47F4                                              l9077 47BA  
                                            l9069 473E                                              l9421 3F22  
                                            l9501 1638                                              l6781 67D6  
                                            l7733 63FC                                              l7751 5F3C  
                                            l7743 5EDC                                              l5975 5AB0  
                                            l5967 5A8C                                              l5959 5A58  
                                            l8711 3326                                              l5991 5C10  
                                            l5983 5B9E                                              l8631 2926  
                                            l8623 28BC                                              l8615 289C  
                                            l8551 2754                                              l8535 26F6  
                                            l8543 2720                                              l8527 26D0  
                                            l8519 26A6                                              l9407 0BB4  
                                            l9351 0A24                                              l9343 09EC  
                                            l9335 099C                                              l9327 0902  
                                            l9319 08D4                                              l9271 06D4  
                                            l9263 0648                                              l9255 0544  
                                            l9247 0512                                              l9239 04D6  
                                            l9191 02CE                                              l9175 022E  
                                            l9167 01CA                                              l9183 024A  
                                            l9159 0172                                              l9095 483C  
                                            l9087 47F8                                              l9079 47C6  
                                            l9431 3FA2                                              l9423 3F2C  
                                            l9415 3EC0                                              l9511 173C  
                                            l9503 1648                                              l6791 6796  
                                            l7761 5F46                                              l7753 5F3E  
                                            l7745 5EDE                                              l5977 5AB8  
                                            l5969 5A94                                              l8801 3566  
                                            l8713 3336                                              l8721 3360  
                                            l8705 330A                                              l5993 5C16  
                                            l5985 5BAE                                              l8641 297E  
                                            l8633 2928                                              l8625 28C6  
                                            l8617 28A8                                              l8609 2870  
                                            l8561 2768                                              l8553 2758  
                                            l8545 2730                                              l8537 2706  
                                            l8529 26D6                                              l9409 0BBA  
                                            l9361 0A64                                              l9353 0A36  
                                            l9345 09FC                                              l9329 0908  
                                            l9337 09A0                                              l9281 076E  
                                            l9273 06E8                                              l9257 0558  
                                            l9265 064E                                              l9249 0524  
                                            l9193 02D4                                              l9185 0264  
                                            l9089 481C                                              l9441 4024  
                                            l9425 3F48                                              l9433 3FAE  
                                            l9417 3ED0                                              l9601 2066  
                                            l9521 1888                                              l9513 1794  
                                            l9505 167C                                              l6793 67AE  
                                            l6785 674A                                              l7729 63E0  
                                            l7755 5F40                                              l7747 5F12  
                                            l7739 5EDA                                              l8811 35D0  
                                            l8803 356A                                              l8731 338C  
                                            l8723 3370                                              l8715 3346  
                                            l8707 3316                                              l5987 5BDC  
                                            l8651 29AC                                              l8635 2938  
                                            l8619 28AC                                              l8627 28CC  
                                            l8571 277C                                              l8563 276C  
                                            l8555 275C                                              l8547 2742  
                                            l8539 2716                                              l9371 0AAC  
                                            l9363 0A6C                                              l9355 0A3E  
                                            l9347 0A0E                                              l9339 09BE  
                                            l9291 0826                                              l9283 077E  
                                            l9275 071A                                              l9267 066C  
                                            l9259 05BC                                              l9195 0330  
                                            l9611 20CC                                              l9099 44DE  
                                            l9451 40B8                                              l9443 4058  
                                            l9435 3FCA                                              l9427 3F7C  
                                            l9419 3EEE                                              l9603 207A  
                                            l9531 19C8                                              l9523 18BC  
                                            l9515 17C8                                              l9507 16D4  
                                            l7691 6436                                              l6795 67B6  
                                            l6779 67CE                                              l6787 6752  
                                            l7763 67FE                                              l7757 5F42  
                                            l7749 5F3A                                              l8821 3632  
                                            l8813 35DC                                              l8805 3578  
                                            l8733 339C                                              l8741 33C6  
                                            l8725 3376                                              l8717 3356  
                                            l8709 3324                                              l5989 5BEC  
                                            l8901 2C8C                                              l8653 29BA  
                                            l8645 2992                                              l8661 29D8  
                                            l8629 28F2                                              l8637 2948  
                                            l8573 2780                                              l8565 2770  
                                            l8557 2760                                              l8549 2750  
                                            l8581 2790                                              l9381 0B02  
                                            l9373 0AC8                                              l9365 0A74  
                                            l9357 0A4E                                              l9349 0A12  
                                            l9293 0836                                              l9285 0792  
                                            l9277 072A                                              l9269 06A0  
                                            l9197 0364                                              l9189 029A  
                                            l9621 211C                                              l9613 20DA  
                                            l9453 40EC                                              l9445 4062  
                                            l9437 3FFE                                              l9429 3F86  
                                            l9541 1AD8                                              l9533 19FC  
                                            l9525 18F0                                              l9517 1820  
                                            l9509 1708                                              l9461 1380  
                                            l7693 6446                                              l6981 6774  
                                            l6789 678E                                              l7759 5F44  
                                            l8831 3690                                              l8823 3648  
                                            l8815 35EA                                              l8807 35A6  
                                            l8751 3408                                              l8743 33D6  
                                            l8735 33AC                                              l8727 337C  
                                            l8719 3358                                              l8911 2CE2  
                                            l8903 2C9C                                              l8655 29C2  
                                            l8647 299C                                              l8639 296E  
                                            l8663 29E6                                              l8591 2800  
                                            l8583 2794                                              l8575 2784  
                                            l8567 2774                                              l8559 2764  
                                            l9391 0B3E                                              l9383 0B08  
                                            l9375 0AD0                                              l9367 0A80  
                                            l9359 0A56                                              l9295 084A  
                                            l9287 079E                                              l9279 073A  
                                            l9199 036C                                              l9711 263C  
                                            l9703 25FC                                              l9631 21B6  
                                            l9623 212A                                              l9615 20EC  
                                            l9447 407E                                              l9439 4008  
                                            l9551 1B48                                              l9543 1ADC  
                                            l9535 1A30                                              l9527 1918  
                                            l9519 1854                                              l9471 1456  
                                            l9463 1396                                              l7695 644A  
                                            l9607 66D8                                              l9721 64CC  
                                            l8833 3696                                              l8825 3662  
                                            l8817 3614                                              l8745 33EC  
                                            l8737 33BC                                              l8729 338A  
                                            l8921 2D86                                              l8913 2CFE  
                                            l8905 2CA8                                              l8673 2A38  
                                            l8681 2A8E                                              l8665 29EA  
                                            l8657 29C6                                              l8649 29AA  
                                            l8593 280C                                              l8585 27BE  
                                            l8577 2788                                              l8569 2778  
                                            l9393 0B44                                              l9385 0B1A  
                                            l9369 0A86                                              l9377 0AD6  
                                            l9297 085C                                              l9289 07C2  
                                            l9705 260A                                              l9641 2242  
                                            l9625 214E                                              l9617 20F0  
                                            l9609 20A8                                              l9449 4086  
                                            l9561 1BA4                                              l9553 1B5A  
                                            l9545 1AFA                                              l9529 1970  
                                            l9481 152A                                              l9473 1492  
                                            l9465 13D2                                              l9457 1346  
                                            l7697 6468                                              l7689 642A  
                                            l9801 6238                                              l9723 64DE  
                                            l8835 3698                                              l8827 367E  
                                            l8819 3618                                              l8771 348A  
                                            l8763 3440                                              l8747 33FC  
                                            l8755 341C                                              l8739 33BE  
                                            l8931 2DDC                                              l8923 2D94  
                                            l8915 2D0A                                              l8907 2CB8  
                                            l8851 2B3E                                              l8843 2B10  
                                            l8691 2AE0                                              l8683 2A9E  
                                            l8675 2A44                                              l8667 29F8  
                                            l8659 29D6                                              l8595 2810  
                                            l8587 27DA                                              l8579 278C  
                                            l9395 0B4A                                              l9387 0B26  
                                            l9379 0AE8                                              l9299 086A  
                                            l9651 230C                                              l9643 2274  
                                            l9635 21FE                                              l9627 2188  
                                            l9619 2114                                              l9571 1C12  
                                            l9563 1BC2                                              l9547 1B16  
                                            l9539 1AAA                                              l9491 1578  
                                            l9483 153A                                              l9467 13FA  
                                            l9459 1376                                              l9731 4310  
                                            l6979 676C                                              l9811 625C  
                                            l9803 623E                                              l9725 64E0  
                                            l9717 64C2                                              l8829 3682  
                                            l8781 34D0                                              l8773 3492  
                                            l8765 345A                                              l8757 342C  
                                            l8749 3404                                              l8933 2DEA  
                                            l8925 2DB2                                              l8917 2D26  
                                            l8909 2CD2                                              l8861 2B7A  
                                            l8853 2B4E                                              l8845 2B1E  
                                            l8693 2AE6                                              l8685 2AAE  
                                            l8677 2A52                                              l8669 2A0E  
                                            l8597 281E                                              l8589 27EA  
                                            l9389 0B2E                                              l9661 23B8  
                                            l9645 2284                                              l9629 21A8  
                                            l9637 2210                                              l9709 2618  
                                            l9573 1CAA                                              l9581 1DCA  
                                            l9549 1B2A                                              l9493 1594  
                                            l9477 14EE                                              l9485 154E  
                                            l9733 4320                                              l9741 43A0  
                                            l9821 628C                                              l9813 6260  
                                            l9805 6242                                              l9901 654A  
                                            l9911 48A6                                              l9727 64F2  
                                            l9719 64CA                                              l8791 3528  
                                            l8783 34EE                                              l8775 34A2  
                                            l8767 346A                                              l8759 342C  
                                            l8943 2E54                                              l8951 2E9C  
                                            l8935 2DEE                                              l8927 2DBC  
                                            l8919 2D50                                              l8871 2BB0  
                                            l8863 2B80                                              l8855 2B5E  
                                            l8847 2B2C                                              l8695 2AE8  
                                            l8687 2ACE                                              l8679 2A8C  
                                            l8599 2820                                              l9399 0B7E  
                                            l9671 2426                                              l9655 2328  
                                            l9647 22B6                                              l9639 2232  
                                            l9823 5FB4                                              l9583 1DE6  
                                            l9591 1E52                                              l9575 1CDA  
                                            l9559 1B92                                              l9567 1BD6  
                                            l9487 1564                                              l9479 14F6  
                                            l9743 43C4                                              l9751 446C  
                                            l9735 4378                                              l9831 5C1E  
                                            l9815 6272                                              l9807 6246  
                                            l9903 657E                                              l9921 48EC  
                                            l9913 48AC                                              l8793 352E  
                                            l8785 34F0                                              l8777 34B6  
                                            l8769 347A                                              l8961 2F10  
                                            l8953 2EB6                                              l8945 2E60  
                                            l8937 2DFC                                              l8929 2DCA  
                                            l8873 2BC0                                              l8865 2B8E  
                                            l8857 2B64                                              l8849 2B2E  
                                            l8697 2AEE                                              l8689 2AD2  
                                            l9673 2456                                              l9665 23F0  
                                            l9657 234C                                              l9649 22DA  
                                            l9825 5FBC                                              l9593 1FB2  
                                            l9585 1DF6                                              l9577 1D48  
                                            l9569 1BF4                                              l9497 15A8  
                                            l9745 4430                                              l9833 5C72  
                                            l9817 6276                                              l9809 6258  
                                            l9905 6586                                              l9761 58D8  
                                            l9841 36AE                                              l9923 4922  
                                            l9915 48AE                                              l9907 484E  
                                            l8795 3538                                              l8787 3500  
                                            l8779 34C4                                              l8963 2F1E  
                                            l8955 2ECA                                              l8947 2E6E  
                                            l8939 2E2A                                              l8891 2C42  
                                            l8883 2C0A                                              l8875 2BC6  
                                            l8867 2B90                                              l8859 2B74  
                                            l8699 2AFC                                              l9683 251E  
                                            l9667 2402                                              l9659 2370  
                                            l9827 5FCA                                              l9595 1FE6  
                                            l9587 1E1A                                              l9579 1D92  
                                            l9499 1628                                              l9835 5CA8  
                                            l9819 627A                                              l9771 5946  
                                            l9763 58DA                                              l9851 3780  
                                            l9843 36C2                                              l8981 51B4  
                                            l9941 4960                                              l9925 4928  
                                            l9917 48E4                                              l9909 4870  
                                            l8797 3546                                              l8789 3512  
                                            l8965 2F20                                              l8957 2EE4  
                                            l8949 2E98                                              l8893 2C5A  
                                            l8885 2C16                                              l8877 2BE6  
                                            l8869 2BA0                                              l8973 647A  
                                            l9685 2530                                              l9693 25A8  
                                            l9669 2418                                              l9677 2482  
                                            l9829 5FF8                                              l9597 201A  
                                            l9773 5956                                              l9765 590E  
                                            l9757 589E                                              l9861 38A2  
                                            l9853 37EE                                              l9845 36D4  
                                            l8991 5222                                              l8983 51C4  
                                            l9927 492A                                              l9919 48EA  
                                            l8799 3558                                              l8959 2F00  
                                            l8967 2F26                                              l8895 2C66  
                                            l8887 2C20                                              l8879 2BF6  
                                            l8975 648A                                              l9695 25CC  
                                            l9687 2564                                              l9679 24B0  
                                            l9599 204E                                              l9791 6208  
                                            l9783 61EA                                              l9767 5910  
                                            l9759 58A2                                              l9871 38F6  
                                            l9863 38CA                                              l9855 385A  
                                            l9847 36E8                                              l9839 36A4  
                                            STR_1 7F62                                              STR_2 7F49  
                                            l8993 5230                                              l8985 51F2  
                                            l9961 4970                                              l9937 493A  
                                            l8969 2F2A                                              l8897 2C72  
                                            l8889 2C36                                              l9697 25DA  
                                            l9793 620C                                              l9785 61EE  
                                            l9769 5944                                              l9873 3916  
                                            l9881 396A                                              l9865 38DA  
                                            l9857 3862                                              l9849 3728  
                                            STR_3 7E43                                              STR_4 7FA4  
                                            l8995 5280                                              l8987 5202  
                                            l8979 5184                                              l9971 49C4  
                                            l9963 4980                                              l9939 494C  
                                            l8899 2C80                                              l9699 25EE  
                                            l9891 6300                                              l9795 621E  
                                            l9787 61F2                                              l9779 595C  
                                            l9883 3972                                              l9875 3942  
                                            l9867 38E2                                              l9859 388A  
                                            STR_5 7F91                                              STR_6 7FB6  
                                            l8997 5286                                              l8989 5210  
                                            l9965 4994                                              l9893 6308  
                                            l9797 6222                                              l9789 6204  
                                            l9885 3982                                              l9877 3956  
                                            l9869 38EE                                              STR_7 7FD2  
                                            STR_8 7FC7                                              l9967 49A4  
                                            l9895 6324                                              l9887 62E6  
                                            l9799 6226                                              l9879 395E  
                                            STR_9 7FDC                                              l9993 49E6  
                                            l9969 49B4                                              l9985 49D0  
                                            l9889 62F8                                              l9987 49E0  
                                            l9899 66FE                                              l9997 66AA  
                                            l9999 66AE                                              u4200 565C  
                                            u5000 42B2                                              u4201 5658  
                                            u5001 42AE                                              u4210 566E  
                                            u5010 42EE                                              u4211 566A  
                                            u5011 42EA                                              u4300 4E78  
                                            u5020 666C                                              u4220 5696  
                                            u5100 4CC0                                              u4301 4E74  
                                            u5021 6666                                              u4221 5692  
                                            u5101 4CBC                                              u4310 4E9A  
                                            u5030 666E                                              u4230 56CC  
                                            u5110 4D14                                              u4311 4E96  
                                            u4231 56C8                                              u5111 4D10  
                                            u4320 4ED4                                              u4240 6548  
                                            u5040 4B8C                                              u5120 4D46  
                                            u4321 4ED0                                              u4241 6544  
                                            u5041 4B88                                              u5121 4D42  
                                            u4330 4EF6                                              u4250 669C  
                                            u5050 4BBE                                              u5130 4D84  
                                            u4331 4EF2                                              u4251 6698  
                                            u5051 4BBA                                              u5131 4D80  
                                            u4340 4F1E                                              u6020 614C  
                                            u5140 4DAE                                              u6100 3B8E  
                                            u4260 65FC                                              u4341 4F1A  
                                            u6021 6148                                              u5061 4BE8  
                                            u5141 4DAA                                              u6101 3B8A  
                                            u4261 65F6                                              u4350 4F50  
                                            u5070 4C0C                                              u5150 4DDC  
                                            u6110 3BAC                                              u6030 39C6  
                                            u4270 65FE                                              u4351 4F4C  
                                            u5071 4C08                                              u5151 4DD8  
                                            u6111 3BA8                                              u6031 39C0  
                                            u5080 4C36                                              u5160 4E24  
                                            u6120 3BC6                                              u6040 39C8  
                                            u4280 5F68                                              u5081 4C32  
                                            u5161 4E20                                              u6121 3BC2  
                                            u4281 5F64                                              u5090 4C76  
                                            u6130 3BE0                                              u6050 39DE  
                                            u4290 5FA2                                              u5091 4C72  
                                            u6131 3BDC                                              u6051 39DA  
                                            u4291 5F9E                                              u6140 3BF0  
                                            u6060 3A0E                                              u6141 3BEC  
                                            u6061 3A0A                                              u6150 3C02  
                                            u6070 3A2A                                              u6151 3BFE  
                                            u6071 3A26                                              u6160 3C12  
                                            u6080 3A58                                              u5600 5806  
                                            u4800 53CC                                              u6161 3C0E  
                                            u6081 3A54                                              u5601 5802  
                                            u6170 3C2A                                              u6090 3A66  
                                            u5610 582C                                              u4810 53EA  
                                            u6171 3C26                                              u6091 3A62  
                                            u5611 5828                                              u4811 53E6  
                                            u5620 584A                                              u5700 5AB0  
                                            u4820 5412                                              u4900 6050  
                                            _RCIF 007CF5                                              u5621 5846  
                                            u5701 5AAC                                              u4821 540E  
                                            u4805 53C2                                              u4750 5724  
                                            u5630 5866                                              u5710 5B9E  
                                            u4830 543C                                              u4910 6066  
                                            u4751 5720                                              u5631 5862  
                                            u5711 5B9A                                              u4831 5438  
                                            u4911 6062                                              u4760 5746  
                                            u5640 588C                                              u5720 5BDC  
                                            u9000 2B2C                                              u4920 4146  
                                            u4761 5742                                              u5641 5888  
                                            u5721 5BD8                                              u9001 2B28  
                                            u4770 579C                                              u5650 5A24  
                                            u5730 5C10                                              u9010 2B3E  
                                            u4850 5476                                              u4930 4174  
                                            u4771 5798                                              u5651 5A20  
                                            u5731 5C0C                                              u9011 2B3A  
                                            u4851 5470                                              u4931 4170  
                                            u6700 4A22                                              u4780 57AC  
                                            u5660 5A3E                                              u9100 2DEA  
                                            u9020 2B4E                                              u4860 5478  
                                            u4940 4196                                              u6701 4A1E  
                                            u4781 57A8                                              u5661 5A3A  
                                            u9101 2DE6                                              u9021 2B4A  
                                            u4845 544E                                              u4941 4192  
                                            u4925 413C                                              u7270 60A2  
                                            u6710 4A58                                              u4790 65A6  
                                            u5590 57EC                                              u5670 5A58  
                                            u9110 2DFC                                              u9030 2B8E  
                                            u4870 6124                                              u6711 4A54  
                                            u4791 65A2                                              u5591 57E8  
                                            u5671 5A54                                              u9111 2DF8  
                                            u9031 2B8A                                              u9200 51F2  
                                            u7280 60CA                                              u6720 4A74  
                                            u5680 5A76                                              u9120 2E2A  
                                            u9040 2BA0                                              u8400 268C  
                                            u4960 4202                                              u4880 6136  
                                            u6800 55FE                                              u9201 51EE  
                                            u6721 4A70                                              u5681 5A72  
                                            u9121 2E26                                              u9041 2B9C  
                                            u8401 2688                                              u4961 41FE  
                                            u4881 6132                                              u6801 55FA  
                                            u9210 5210                                              u7290 60DA  
                                            u6730 4B2A                                              u5690 5A8C  
                                            u9130 2E40                                              u9050 2BB0  
                                            u8410 26CE                                              u4970 4226  
                                            u4890 604E                                              u6810 5626  
                                            u9211 520C                                              u7291 60D6  
                                            u6731 4B24                                              u5691 5A88  
                                            u9131 2E3C                                              u9051 2BAC  
                                            u8411 26CA                                              u4955 41AA  
                                            u4891 6048                                              u6811 5622  
                                            u9220 5230                                              u6740 4B2C  
                                            u9140 2E54                                              u9060 2BE6  
                                            u8500 2800                                              u8420 26E4  
                                            u9300 5152                                              u4980 4242  
                                            u4956 41B4                                              u9221 522C  
                                            u7277 6098                                              u9141 2E50  
                                            u9061 2BE2                                              u8501 27FC  
                                            u8421 26E0                                              u9301 514E  
                                            u4981 423E                                              u4957 41C4  
                                            u4877 611A                                              u9230 5280  
                                            u6750 4B42                                              u9150 2E6E  
                                            u9070 2BF6                                              u8510 281E  
                                            u8430 26F6                                              u9310 5162  
                                            u4990 4296                                              u9231 527C  
                                            u7287 60C0                                              u6751 4B3E  
                                            u9151 2E6A                                              u9071 2BF2  
                                            u8511 281A                                              u8431 26F2  
                                            u9311 515E                                              u4975 421C  
                                            u6760 4B54                                              u9160 2EB6  
                                            u9080 2D70                                              u9240 661A  
                                            u8600 296E                                              u8520 283E  
                                            u8440 2706                                              u9400 482C  
                                            u9320 46AC                                              u6761 4B50  
                                            u9161 2EB2                                              u9241 6616  
                                            u8601 296A                                              u8521 283A  
                                            u8441 2702                                              u9401 4828  
                                            u9321 46A8                                              u5970 6350  
                                            u9170 2EE4                                              u9090 2DCA  
                                            u8610 297E                                              u8530 284C  
                                            u8450 2742                                              u9250 5094  
                                            u6770 559E                                              u9410 483A  
                                            u9330 46BA                                              u5971 634C  
                                            u9171 2EE0                                              u9091 2DC6  
                                            u8611 297A                                              u8531 2848  
                                            u8451 273E                                              u9251 5090  
                                            u4995 428C                                              u6771 559A  
                                            u9411 4836                                              u9331 46B6  
                                            u5980 637E                                              u9180 2F1E  
                                            u8700 2A52                                              u8620 29AA  
                                            u8540 285C                                              u8460 2750  
                                            u8380 266A                                              u9260 50C8  
                                            u9500 0126                                              u6780 55D0  
                                            u9340 4716                                              u9420 455E  
                                            u5981 637A                                              u9181 2F1A  
                                            u9085 2D66                                              u8701 2A4E  
                                            u8621 29A6                                              u8541 2858  
                                            u8461 274C                                              u8381 2666  
                                            u9501 0120                                              u6781 55CC  
                                            u9341 4712                                              u9421 455A  
                                            u9190 51B4                                              u8710 2A8C  
                                            u8630 29BA                                              u8550 288E  
                                            u8470 27BE                                              u8390 267C  
                                            u9270 50F6                                              u9510 0128  
                                            u6790 55EC                                              u9350 476C  
                                            u9191 51B0                                              u8711 2A88  
                                            u8631 29B6                                              u8551 288A  
                                            u8471 27BA                                              u8391 2678  
                                            u9271 50F2                                              u6791 55E8  
                                            u9351 4768                                              u8800 338A  
                                            u8720 2A9E                                              u8640 29D6  
                                            u8560 289C                                              u8480 27D6  
                                            u9280 510A                                              u9600 03C6  
                                            u9520 013E                                              u9360 47B6  
                                            u8801 3386                                              u8721 2A9A  
                                            u8641 29D2                                              u8561 2898  
                                            u8481 27D0                                              u9281 5106  
                                            u9265 50BE                                              u9601 03C2  
                                            u9521 013A                                              u9361 47B2  
                                            u6890 67FC                                              u8810 339C  
                                            u8730 2AAE                                              u8650 29E6  
                                            u8570 28BA                                              u8490 27D8  
                                            u9290 5132                                              u9610 03DA  
                                            u9530 01CA                                              u9450 003A  
                                            u9370 47D4                                              u6891 67F8  
                                            u8811 3398                                              u8731 2AAA  
                                            u8651 29E2                                              u8571 28B6  
                                            u9291 512E                                              u9611 03D6  
                                            u9531 01C6                                              u9451 0036  
                                            u9371 47D0                                              u9435 45F8  
                                            u8900 3546                                              u8820 33AC  
                                            u8740 2ACE                                              u8660 29F8  
                                            u8580 28F2                                              u9700 04EC  
                                            u9620 03FC                                              u9540 01FA  
                                            u9460 008A                                              u9380 47E4  
                                            u9436 4602                                              u8901 3542  
                                            u8821 33A8                                              u8741 2ACA  
                                            u8661 29F4                                              u8581 28EE  
                                            u9701 04E8                                              u9621 03F8  
                                            u9541 01F4                                              u9461 0086  
                                            u9381 47E0                                              u9445 463C  
                                            u9437 4612                                              u8910 3566  
                                            u8830 33EC                                              u8750 2AE0  
                                            u8670 2A0E                                              u8590 2938  
                                            u9710 04FA                                              u9630 0426  
                                            u9550 01FC                                              u9470 009A  
                                            u9390 47F2                                              u9446 4646  
                                            u8911 3562                                              u8831 33E8  
                                            u8751 2ADC                                              u8671 2A0A  
                                            u8591 2934                                              u9711 04F6  
                                            u9631 0422                                              u9471 0096  
                                            u9391 47EE                                              u9447 4656  
                                            u8920 3578                                              u8840 342C  
                                            u8760 2AFC                                              u8680 2A24  
                                            u9800 085C                                              u9720 0524  
                                            u9640 043E                                              u9560 0212  
                                            u9480 00AE                                              u8921 3574  
                                            u8841 3428                                              u8761 2AF8  
                                            u8681 2A20                                              u9801 0858  
                                            u9721 0520                                              u9641 043A  
                                            u9561 020E                                              u9481 00AA  
                                            u8930 35A6                                              u8850 34A2  
                                            u8770 3324                                              u8690 2A38  
                                            u9810 086A                                              u9730 066C  
                                            u9650 045A                                              u9570 0296  
                                            u9490 00F6                                              u8931 35A2  
                                            u8851 349E                                              u8771 3320  
                                            u8691 2A34                                              u9811 0866  
                                            u9731 0668                                              u9651 0456  
                                            u9571 0292                                              u9491 00F2  
                                            u8940 35BC                                              u8860 34C4  
                                            u8780 3336                                              u9900 0A64  
                                            u9820 0886                                              u9740 06D4  
                                            u9660 0490                                              u9580 032C  
                                            u8941 35B8                                              u8861 34C0  
                                            u8781 3332                                              u9901 0A60  
                                            u9821 0882                                              u9741 06D0  
                                            u9661 048C                                              u9581 0328  
                                            u8950 35D0                                              u8870 34EE  
                                            u8790 3346                                              u9910 0AE8  
                                            u9830 0894                                              u9750 071A  
                                            u9670 04B6                                              u9590 03A0  
                                            u7990 6468                                              u8951 35CC  
                                            u8871 34EA                                              u8791 3342  
                                            u9911 0AE4                                              u9831 0890  
                                            u9751 0716                                              u9671 04B2  
                                            u9591 039C                                              u7991 6464  
                                            u8960 35EA                                              u8880 3512  
                                            u9920 0B02                                              u9840 08EC  
                                            u9760 072A                                              u9680 04C8  
                                            u8961 35E6                                              u8881 350E  
                                            u9921 0AFE                                              u9841 08E8  
                                            u9761 0726                                              u9681 04C4  
                                            u8970 3632                                              u8890 3528  
                                            u9930 0B1A                                              u9850 09BE  
                                            u9770 0792                                              u9690 04D6  
                                            u8971 362E                                              u8891 3524  
                                            u9931 0B16                                              u9851 09BA  
                                            u9771 078E                                              u9691 04D2  
                                            u8980 3662                                              u9940 0B78  
                                            u9860 09DA                                              u9780 0836  
                                            u8981 365E                                              u9941 0B72  
                                            u9861 09D6                                              u9781 0832  
                                            u8990 3690                                              u9950 0B7A  
                                            u9870 09EC                                              u9790 084A  
                                            u8991 368C                                              u9871 09E8  
                                            u9791 0846                                              u9960 0B90  
                                            u9880 09FC                                              u9961 0B8C  
                                            u9881 09F8                                              u9890 0A36  
                                            u9970 3EEE                                              u9891 0A32  
                                            u9971 3EEA                                              u9980 3F48  
                                            u9981 3F44                                              u9990 3FA2  
                                            u9991 3F9E                                  ??_forzarParoAuto 0006  
                                            abs@a 0018                                              _dbuf 014A  
                                            _half 7D47                                              _atoi 49EA  
                                            _ctoa 6138                                              _main 5D56  
                                            _dtoa 3996                                              _expf 1A8A  
                                            _logf 1346                                              _prec 0130  
                                            _nout 012C                                              pad@i 001D  
                                            pad@p 001A                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 001F                                              map@x 0020  
                                            fsr2l 000FD9                                              btemp 005A  
                                   ___fpclassifyf 538C                          __end_of_decidirDireccion 1346  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 000E                                     __CFG_IESO$OFF 000000  
                                 ___fldiv@new_exp 0032                                      _tolower$1614 0012  
                                   __CFG_MCLRE$ON 000000                                     ?_leerSensores 0001  
                                    ___param_bank 000000                                             ??_PID 0078  
                                           ??_abs 001A                                             ??_map 0034  
                                           ??_pad 001C                                   ??_velocidadBaja 0055  
                      __size_of_hayCruceRapidoPID 00C2                                     __CFG_PLLDIV$1 000000  
                                  __CFG_CCP2MX$ON 000000                                             l10001 66D0  
                                           l10011 3D54                                             l10021 3E5E  
                                           l10013 3D6A                                             l10005 3C78  
                                           l10111 0D8A                                             l10023 3E6E  
                                           l10015 3DC2                                             l10007 3C8E  
                                           l10201 0E70                                             l10121 0DE2  
                                           l10113 0D94                                             l10105 0D1C  
                                           l10025 3E7E                                             l10017 3DF6  
                                           l10009 3CE6                                             l10041 4FA6  
                                           l10203 0E7C                                             l10123 0DEE  
                                           l10115 0DB4                                             l10107 0D58  
                                           l10019 3E2A                                             l10051 5002  
                                           l10043 4FC0                                             l10035 4F76  
                                           l10221 0E8A                                             l10117 0DBE  
                                           l10109 0D70                                             l10053 501C  
                                           l10045 4FD6                                             l10037 4F82  
                                           l10061 503C                                             l10311 0F30  
                                           l10223 0EAA                                             l10119 0DDC  
                                           l10071 0BE2                                             l10047 4FE6  
                                           l10039 4F9A                                             l10401 132C  
                                           l10321 0FAA                                             l10313 0F54  
                                           l10225 0EC8                                             l10081 0C48  
                                           l10073 0BFA                                             l10049 4FEA  
                                           l10403 133A                                             l10331 0FF6  
                                           l10323 0FB6                                             l10227 0ED4  
                                           l10091 0CAC                                             l10083 0C58  
                                           l10075 0C12                                             l10341 105E  
                                           l10333 1008                                             l10325 0FBA  
                                           l10181 0E1C                                             l10317 0F5C  
                                           l10093 0CC0                                             l10085 0C62  
                                           l10077 0C24                                             l10069 0BDC  
                                           l10421 5972                                             l10501 54BC  
                                           l10351 10D8                                             l10343 1066  
                                           l10335 1020                                             l10183 0E3C  
                                           l10319 0F98                                             l10087 0C7C  
                                           l10079 0C3C                                             l10327 0FC6  
                                           l11151 5D2E                                             l10431 59B2  
                                           l10423 597E                                             l10511 2F3C  
                                           l10503 54D2                                             l11143 5B1E  
                                           l11161 4682                                             l10353 10FC  
                                           l10345 1096                                             l10361 1122  
                                           l10337 102C                                             l10329 0FDE  
                                           l10281 0F20                                             l10185 0E48  
                                           l10097 0CE4                                             l10089 0C8C  
                                           l11153 5360                                             l10441 59EC  
                                           l10433 59BC                                             l10601 31C4  
                                           l10521 2F8C                                             l10513 2F42  
                                           l11145 6410                                             l10505 5506  
                                           l11163 4AA6                                             l10371 1174  
                                           l10355 1100                                             l10347 109E  
                                           l10339 103C                                             l10363 112E  
                                           l10267 0EDE                                             l10179 0E02  
                                           l10099 0CF8                                             l11155 5054  
                                           l10451 52D2                                             l10435 59DA  
                                           l10443 5A00                                             l10427 5990  
                                           l10419 5960                                             l10611 31EA  
                                           l10603 31C8                                             l11147 30B4  
                                           l10531 2FCA                                             l10523 2FA2  
                                           l10515 2F5A                                             l10507 553A  
                                           l11165 5E38                                             l10381 1234  
                                           l10373 118C                                             l10365 113E  
                                           l10357 1112                                             l10349 10D0  
                                           l10269 0EFE                                             l11157 0D3A  
                                           l10461 5332                                             l10453 52E4  
                                           l10445 5A04                                             l10437 59DE  
                                           l10429 59AE                                             l11149 32DE  
                                           l10621 3214                                             l10613 31EE  
                                           l10605 31CE                                             l10541 3052  
                                           l10525 2FB2                                             l10533 2FD0  
                                           l10517 2F6A                                             l10509 556E  
                                           l10391 12BE                                             l10375 11A4  
                                           l10383 1244                                             l10367 1148  
                                           l10359 111E                                             l11159 0F7A  
                                           l10199 0E52                                             l10455 52FA  
                                           l10439 59E8                                             l10623 3224  
                                           l10615 31FA                                             l10607 31DE  
                                           l10551 307C                                             l10543 3062  
                                           l10535 2FD4                                             l10527 2FBA  
                                           l10519 2F7C                                             l10393 12F2  
                                           l10385 127A                                             l10377 11D4  
                                           l10369 1170                                             l10457 5302  
                                           l10465 534A                                             l10449 528A  
                                           l10625 3266                                             l10633 3296  
                                           l10609 31E2                                             l10561 309C  
                                           l10553 3086                                             l10545 306A  
                                           l10537 3032                                             l10529 2FC6  
                                           l10481 5AF6                                             l10473 5AC2  
                                           l10801 5D84                                             l10395 12FA  
                                           l10387 1282                                             l10379 11DA  
                                           l10459 531A                                             l10467 537E  
                                           l10635 32AA                                             l10627 326C  
                                           l10619 3204                                             l10571 311E  
                                           l10563 30E2                                             l10555 308A  
                                           l10547 306E                                             l10539 3042  
                                           l10643 32C8                                             l10475 5AC6  
                                           l10811 5DC2                                             l10803 5D88  
                                           l10397 130C                                             l10389 12B6  
                                           l10637 32BC                                             l10629 3278  
                                           l10573 3134                                             l10565 30F2  
                                           l10557 3094                                             l10549 3078  
                                           l10477 5AD6                                             l10485 5B06  
                                           l10821 5DD2                                             l10805 5D9C  
                                           l10399 131C                                             l10639 32C0  
                                           l10575 3148                                             l10567 3102  
                                           l10583 3158                                             l10495 548A  
                                           l10479 5AE6                                             l10487 5B44  
                                           l10807 5DAE                                             l10585 3168  
                                           l10577 314E                                             l10569 3112  
                                           l10497 5490                                             l10489 5B62  
                                           l10809 5DBE                                             l10817 5DC6  
                                           l10595 3198                                             l10587 3178  
                                           l10579 3152                                             l10499 54A6  
                                           l10819 5DCA                                             l10771 5D5E  
                                           l10597 31A8                                             l10589 3188  
                                           l10781 5D68                                             l10773 5D60  
                                           l10599 31B8                                             l10791 5D72  
                                           l10783 5D6A                                             l10775 5D62  
                                           l10767 5D56                                             l10793 5D74  
                                           l10785 5D6C                                             l10777 5D64  
                                           l10769 5D5C                                             l10795 5D76  
                                           l10787 5D6E                                             l10779 5D66  
                                           l10797 5D78                                             l10789 5D70  
                                           l10799 5D7E                                     ___fltol@sign1 004E  
                                 __end_of___aldiv 4F72                                   __end_of___aodiv 4D02  
                                           ?_atoi 000D                                             ?_ctoa 0021  
                                 __end_of___fladd 2B10                                             ?_main 0001  
                                           ?_dtoa 0021                                   __end_of___aomod 4E66  
                                           ?_expf 00B3                                             ?_logf 006D  
                                 __end_of___fldiv 36A4                                   __end_of___awdiv 589E  
                                 __end_of___flneg 663C                                             STR_10 7FE5  
                                           STR_11 7ECA                                             STR_20 7DE4  
                                           STR_12 7D7B                                             STR_13 7E65  
                                           STR_21 7DB3                                             STR_14 7F7A  
                                           STR_22 7E14                                             STR_31 7FFB  
                                           STR_23 7FEB                                             STR_15 7EEA  
                                           STR_24 7FF3                                             STR_16 7EA9  
                                           STR_33 7FFB                                             STR_17 7F2A  
                                           STR_18 7F0A                                             STR_27 7FEF  
                                           STR_19 7E87                                             STR_28 7FF7  
                                 __end_of___awmod 5AC2                                   __end_of___flmul 2F3C  
                                 __end_of___flsub 64C0                                   __end_of___fltol 5184  
                                           u10000 3FCA                                             u10001 3FC6  
                                           u10010 4024                                             u10011 4020  
                                           u10020 407E                                             u10100 1564  
                                           u10021 407A                                             u10101 1560  
                                           u10110 1594                                             u10111 1590  
                                           u11000 11A4                                             u10200 1BF4  
                                           u10120 15E2                                             u10040 1396  
                                           u11001 11A0                                             u10201 1BF0  
                                           u10041 1392                                             u11010 127A  
                                           u10210 1C12                                             u10130 1ACA  
                                           u10050 13B6                                             u11011 1276  
                                           u10035 4098                                             u10211 1C0E  
                                           u10300 2242                                             u11020 12B6  
                                           u10220 1DE6                                             u10140 1AFA  
                                           u10060 13D2                                             u11100 52E4  
                                           u10301 223E                                             u11021 12B2  
                                           u10221 1DE2                                             u10141 1AF6  
                                           u10125 15D8                                             u10061 13CE  
                                           u11101 52E0                                             u10310 2284  
                                           u11030 12F2                                             u10230 2066  
                                           u10150 1B16                                             u10070 13FA  
                                           u11110 2F6A                                             u10311 2280  
                                           u11031 12EE                                             u10231 2062  
                                           u10151 1B12                                             u10135 1AC0  
                                           u10071 13F6                                             u10055 13AC  
                                           u11111 2F66                                             u10400 25CC  
                                           u10320 22DA                                             u10240 20CC  
                                           u11040 130C                                             u10160 1B48  
                                           u10080 1476                                             u11200 3168  
                                           u11120 2F7C                                             u10401 25C8  
                                           u10321 22D6                                             u10241 20C8  
                                           u11041 1308                                             u10161 1B44  
                                           u11201 3164                                             u11121 2F78  
                                           u10410 64F0                                             u10330 234C  
                                           u10250 2114                                             u11050 131C  
                                           u10170 1B5A                                             u10090 1492  
                                           u11210 3178                                             u11130 2F8C  
                                           u10411 64EC                                             u10331 2348  
                                           u10251 2110                                             u11051 1318  
                                           u10171 1B56                                             u10091 148E  
                                           u11211 3174                                             u11131 2F88  
                                           u10340 2370                                             u10260 214E  
                                           u11060 132C                                             u10180 1BA4  
                                           u10420 4320                                             u10500 36D4  
                                           u11220 3188                                             u11140 2FA2  
                                           u10341 236C                                             u10261 214A  
                                           u11061 1328                                             u10181 1BA0  
                                           u10085 146C                                             u10421 431C  
                                           u10501 36D0                                             u11221 3184  
                                           u11141 2F9E                                             u10350 2402  
                                           u10270 21F8                                             u10190 1BC2  
                                           u10430 43C4                                             u10510 38A2  
                                           u11070 598C                                             u11230 31A8  
                                           u11150 3052                                             u10351 23FE  
                                           u10271 21F2                                             u10191 1BBE  
                                           u10431 43C0                                             u10511 389E  
                                           u11071 5988                                             u11231 31A4  
                                           u11151 304E                                             u10600 493A  
                                           u10360 24B0                                             u10280 21FA  
                                           u10440 58D8                                             u10520 38CA  
                                           u11080 59AE                                             u11240 31B8  
                                           u11160 3062                                             u11400 5DAE  
                                           u10601 4936                                             u10361 24AC  
                                           u10441 58D4                                             u10521 38C6  
                                           u11081 59AA                                             u11241 31B4  
                                           u11161 305E                                             u11401 5DAA  
                                           u10610 494C                                             u10370 2518  
                                           u10290 2210                                             u10450 590E  
                                           u10530 3916                                             u11090 59DA  
                                           u11250 31DE                                             u11170 30F2  
                                           u11410 5DBE                                             u10611 4948  
                                           u10371 2512                                             u10291 220C  
                                           u10451 590A                                             u10531 3912  
                                           u11091 59D6                                             u11251 31DA  
                                           u11171 30EE                                             u11411 5DBA  
                                           u10620 4980                                             u10380 251A  
                                           u10700 0C24                                             u10460 5944  
                                           u10540 3942                                             u11260 3214  
                                           u11180 3102                                   ___awdiv@divisor 0008  
                                           u10621 497C                                             u10701 0C20  
                                           u10461 5940                                             u10541 393E  
                                           u11261 3210                                             u11181 30FE  
                                           u10630 49B4                                             u10390 2530  
                                           u10710 0C3C                                             u10550 657E  
                                           u10470 5956                                             u11270 3224  
                                           u11190 3112                                             u10631 49B0  
                                           u10391 252C                                             u10711 0C38  
                                           u10551 657A                                             u10471 5952  
                                           u11271 3220                                             u11191 310E  
                                           u10640 49E0                                             u10560 4870  
                                           u10480 6014                                             u10800 0DDC  
                                           u10720 0C58                                             u11280 32AA  
                                           u10641 49DC                                             u10561 486C  
                                           u10481 6010                                             u10801 0DD8  
                                           u10721 0C54                                             u11281 32A6  
                                           u10570 48A6                                             u10650 66D0  
                                           u10810 0E1C                                             u10730 0C7C  
                                           u10490 36C2                                             u11290 32BC  
                                           u10571 48A2                                             u10651 66CC  
                                           u10811 0E18                                             u10731 0C78  
                                           u11507 622E                                             u10491 36BE  
                                           u11291 32B8                                             u11427 3284  
                                           u10580 48E4                                             u10900 0FF6  
                                           u10820 0E3C                                             u10740 0CAC  
                                           u10660 4F9A                                             u10581 48E0  
                                           u10901 0FF2                                             u10821 0E38  
                                           u10741 0CA8                                             u11517 67A0  
                                           u10661 4F96                                             u11437 5CCC  
                                           u10590 4922                                             u10910 1008  
                                           u10830 0E70                                             u10750 0CE0  
                                           u10670 4FE6                                             u10591 491E  
                                           u10911 1004                                             u10831 0E6C  
                                           u10751 0CDC                                             u11527 624E  
                                           u10671 4FE2                                             u11447 5CEC  
                                           u10920 1020                                             u10840 0EAA  
                                           u10760 0D18                                             u10680 0BFA  
                                           u10921 101C                                             u10841 0EA6  
                                           u10761 0D14                                             u10681 0BF6  
                                           u11537 6268                                             u11457 4FB2  
                                           u10930 103C                                             u10850 0EC8  
                                           u10770 0D70                                             u10690 0C12  
                                           u10931 1038                                             u10851 0EC4  
                                           u10771 0D6C                                             u10691 0C0E  
                                           u11547 6282                                             u11467 4FC8  
                                           u10940 1096                                             u10860 0EFE  
                                           u10780 0D8A                                             u10941 1092  
                                           u10861 0EFA                                             u10781 0D86  
                                           u11557 675C                                             u11477 500E  
                                           u10950 10D0                                             u10870 0F1C  
                                           u10790 0DB4                                             u10951 10CC  
                                           u10871 0F18                                             u10791 0DB0  
                                           u11567 67DC                                             u11487 61FA  
                                           u10960 1112                                             u10880 0FAA  
                                           _LATB4 007C54                                             u10961 110E  
                                           u10881 0FA6                                             u11577 67C0  
                                           u11497 6214                                             _LATB5 007C55  
                                           u10970 113E                                             u10890 0FDE  
                                           _LATD2 007C62                                             _LATB6 007C56  
                                           u10971 113A                                             u10891 0FDA  
                                           u11587 677E                                             _LATB7 007C57  
                                           u10980 1170                                             u11597 64C4  
                                           u10981 116C                                             u10990 118C  
                                           u10991 1188                                             i2l321 61A6  
                                           i2l326 61E8                                             i2l318 6198  
                                           i2l282 62DA                                             i2l284 62E2  
                                    main@iniciado 01F2                                   ___awdiv@counter 000A  
                                           _RCREG 000FAE                                      vfpfcnvrt@fmt 00B6  
                                           _SPBRG 000FAF                  decidirDireccion@posicionInvCruce 01DE  
                                   __CFG_USBDIV$1 000000                                             _TXREG 000FAD  
                                   __CFG_PWRT$OFF 000000                                     __CFG_WRT0$OFF 000000  
                                   __CFG_WRT1$OFF 000000                                     __CFG_WRT2$OFF 000000  
                             ___lmul@multiplicand 000A                                     __CFG_WRT3$OFF 000000  
                                  __CFG_EBTR0$OFF 000000                                    __CFG_FCMEN$OFF 000000  
                                  __CFG_EBTR1$OFF 000000                                    __CFG_EBTR2$OFF 000000  
                                  __CFG_EBTR3$OFF 000000                         hayCruce@investigandoCruce 0050  
                                   __CFG_WRTB$OFF 000000                                     __CFG_WRTC$OFF 000000  
                                   __CFG_WRTD$OFF 000000                                             _ln2hi 7D73  
                                  __CFG_EBTRB$OFF 000000                                             _ln2lo 7D6F  
                              __size_of_UART_init 0070                                             _flags 0132  
                                           _boton 0008                                             _fputc 564A  
                                           _fputs 6506                                   __end_of_isdigit 6674  
                                           _pausa 01F4                                             _myPow 4310  
                                           _mover 5CBA                                   __end_of_scalbnf 40FE  
                                           _mouse 0134                                       ?_UART_write 0001  
                                           atoi@n 001A                                             pad@fp 0016  
                                           atoi@s 000D                                             _width 012E  
                                           ctoa@c 0023                                             _putch 680E  
                                           ctoa@w 0024                                             dtoa@d 0023  
                                           dtoa@i 0043                                             dtoa@n 003B  
                                           dtoa@p 0035                                             dtoa@s 0039  
                                           dtoa@w 0037                                 ??_regresarAlCruce 008A  
                                 __end_of_isspace 638A                                             logf@R 0071  
                                           expf@c 00CB                                             expf@k 00E1  
                                           logf@f 00AB                                             logf@k 008D  
                                           expf@x 00B3                                             expf@y 00D3  
                                           logf@s 0097                                             logf@u 00A7  
                                           logf@w 009F                                             logf@x 006D  
                                           logf@z 009B                                   __end_of_isupper 6604  
                                           tablat 000FF5                                   __end_of_pwmDuty 469A  
probarMapeoDireccionCruces@cambioOrientacionCarro 00FB                                             ttemp5 005B  
                                           ttemp6 005E                                             ttemp7 0062  
                                           status 000FD8                                             wtemp8 005B  
                                 __end_of_sprintf 6338                                    ?___fpclassifyf 0006  
                                 __end_of_tolower 607E                                   __end_of_strncmp 564A  
                               _leerSensores$1890 01E3                                    __CFG_ICPRT$OFF 000000  
                                  ??_leerSensores 0054                                   __initialization 638A  
                                ??_dameLecturaAdc 0008                                      __end_of_half 7D4F  
                                    __end_of_atoi 4B7A                                      __end_of_ctoa 6192  
                                    __end_of_main 5DDE                                      __end_of_dtoa 3C78  
                                    __end_of_expf 20A8                                      __end_of_logf 1A8A  
                                 ??_configurarAdc 0006                            dameDistancia@distancia 01DA  
                limpiarMovimientos@numMovimientos 0008                                            ??_atoi 000F  
                                          ??_ctoa 0024                                            ??_main 0055  
                                          ??_dtoa 002B                                            ??_expf 0050  
                                          ??_logf 004A               comportamientoBasico@caminosRecorrer 01CC  
                                   __activetblptr 000002                                            PID@dif 0082  
              __end_of_probarMapeoDireccionCruces 538C                        _probarMapeoDireccionCruces 528A  
                                          _ADCON1 000FC1                                            _ADCON2 000FC0  
                                          ?_boton 0001                                            _CCP1M2 007DEA  
                                          _CCP1M3 007DEB                                            _CCP2M2 007DD2  
                                          _CCP2M3 007DD3                                            ?_fputc 0006  
                                          ?_fputs 000F                                            _ADRESH 000FC4  
                                          _ADRESL 000FC3                                            _CCPR1L 000FBE  
                                          _CCPR2L 000FBB                                            ?_myPow 00E9  
                                ___awdiv@dividend 0006                                            ?_mover 0001  
                                          ?_putch 0001                                            _INT0IF 007F91  
                                          i2l7771 61C6                                            i2l7765 6194  
                                          i2l7767 61B4                                            i2l7971 62A8  
                                          i2l7981 62E0                                            i2l7973 62BA  
                                          i2l7975 62BE                                            i2l7967 6294  
                                          i2l7977 62C0                                            i2l7969 62A2  
                                          i2l7979 62DC                           _mostrarDireccionElegida 5DDE  
                                          _TMR2ON 007E52                                            _TRISB0 007C98  
                                          _TRISC1 007CA1                                            _TRISC2 007CA2  
                                          _TRISB4 007C9C                                            _TRISB5 007C9D  
                                          _TRISB6 007C9E                                            _TRISB7 007C9F  
                                          _TRISC6 007CA6                                            _TRISC7 007CA7  
                                __end_of___xxtofl 484E                                  __end_of_hayCruce 49EA  
                                  __CFG_XINST$OFF 000000                          __end_of_seLlegoAlDestino 66D8  
              comportamientoBasico@numMovimientos 01CF                                      vfprintf@cfmt 00D8  
                       dameDistancia@numeroSensor 01E2                                            ___flge 5184  
                                          ___fleq 5B70                                            ___lmul 5F4A  
                                       ??___aldiv 001A                                         ??___aodiv 0016  
                                       ??___fladd 000E                                         ??___aomod 0016  
                                          ___wmul 6724                                 __end_of_UART_init 5F4A  
                                          _ln2_hi 7D63                                         ??___fldiv 0029  
                                       ??___awdiv 000A                                            _ln2_lo 7D5F  
                                       ??___flneg 003E                comportamientoBasico@espejearCarroY 013E  
                                       ??___awmod 000A                                         ??___flmul 0046  
                                       ??___flsub 0021                                         ??___fltol 004A  
                                          _efgtoa 0012                        moverCarrito@espejearCarroY 007F  
                                          _buffer 019A                               _forzarGiroIzquierda 678E  
                                          _floorf 40FE                               __size_of_UART_write 0016  
                                    ?_UART_printf 0007                                            _invln2 7D77  
                                          clear_0 63B0                                            clear_1 63BC  
                                ___awdiv@quotient 000C                                   ___awmod@divisor 0008  
                                 ___awmod@counter 000A                                            pad@buf 0018  
                                          ctoa@fp 0021                                            dtoa@fp 0021  
                                          _strcpy 60DC                       ??_visualizarPasosRealizados 00F0  
                                          _strlen 6674                                            logf@t1 0075  
                                          logf@t2 0079                                 _oldSensorEnfrente 0118  
                                          expf@hi 00D7                                            logf@dk 0093  
                                          expf@lo 00DB                                            expf@hx 00E5  
                                          logf@ix 00AF                                            expf@xx 00CF  
                                          fputc@c 0006                                            fputs@c 0013  
                                          fputs@i 0014                                            fputs@s 000F  
                                       ??_isdigit 0008                             _SENSOR_PRIORIDAD_BAJA 01F5  
                                       ??_scalbnf 004A                             _SENSOR_PRIORIDAD_ALTA 01F7  
                                          myPow@x 00E9                                            myPow@y 00ED  
                                 ___fpclassifyf@e 000E           mostrarDireccionElegida@direccionElegida 000B  
                                 ___fpclassifyf@u 0010                                   ___fpclassifyf@x 0006  
                                    __mediumconst 7D46                                         ??_isspace 0008  
                         ?_forzarEspejeoIzquierda 0001                                            tblptrh 000FF7  
                                       ??_isupper 0008                                            tblptrl 000FF6  
                                          tblptru 000FF8                            __size_of_forzarEspejeo 0042  
                                       ??_pwmDuty 0050                                            putch@c 0001  
                                __end_of_vfprintf 601E                                  _posicionDestinoX 0143  
                                _posicionDestinoY 0142                                         ??_sprintf 0055  
                                       ??_tolower 000E                                         ??_strncmp 000C  
                            ?_forzarGiroIzquierda 0001                                 _forzarAvanceRecto 676C  
                          __size_of_forzarReversa 0022                                        ___flge@ff1 006D  
                               _velocidadEstandar 66D8                                   ??___fpclassifyf 000A  
                                      ___flge@ff2 0071                                      ___xxtofl@arg 0015  
                                    ___xxtofl@exp 0014                                      ___xxtofl@val 000B  
                                      ___fleq@ff1 0006                                        ___fleq@ff2 000A  
                                      __accesstop 0060                           __end_of__initialization 63CC  
     probarMapeoDireccionCruces@investigandoCruce 00F1                                ?_forzarAvanceRecto 0001  
                                 __CFG_PBADEN$OFF 000000                                        ___flneg@f1 003A  
                                 __CFG_FOSC$XT_XT 000000                                ?_velocidadEstandar 0001  
         visualizarPasosRealizados@numMovimientos 00EE                                     ___rparam_used 000001  
                   __size_of_forzarEspejeoDerecha 0054                                        ___fltol@f1 006D  
                             ??_forzarAvanceRecto 0006                            __size_of_dameDistancia 00A0  
                                  __pcstackCOMRAM 0001                               ??_velocidadEstandar 0055  
                                    __pidataBANK1 6808                                   _sensorIzquierda 0128  
                                   __end_of_ln2hi 7D77                                     __end_of_ln2lo 7D73  
                                   __end_of_boton 62E6                                     __end_of_fputc 5714  
                                   __end_of_fputs 654A                                     __end_of_myPow 44DE  
                                   __end_of_mover 5D56                                     __end_of_putch 6810  
                                      __end_of_P1 7D6F                                        __end_of_P2 7D6B  
                               _forzarGiroDerecha 67AE                                ?_forzarGiroDerecha 0001  
                  __end_of_forzarEspejeoIzquierda 623E         comportamientoBasico@movimientosRealizados 0200  
                            __end_of_leerSensores 3EC0                                __size_of_configPwm 0050  
                       __end_of_forzarAvanceRecto 678E                                         PID@difAnt 0136  
                       __end_of_velocidadEstandar 66FE                                           ??_boton 0004  
                       ??_mostrarDireccionElegida 0009                             ??_forzarGiroIzquierda 0006  
                                         ??_fputc 000A                                           ??_fputs 0013  
                                         ??_myPow 0054                               ??_forzarGiroDerecha 0006  
                                         ??_mover 0008                                           ??_putch 0006  
                                      __pbssBANK1 0100                                        __pbssBANK2 0200  
                    moverCarrito@avanceRectoLargo 007B                                     _paredEnfrente 0141  
                   __size_of_comportamientoBasico 03CE                         _visualizarPasosRealizados 5AC2  
                               ?_decidirDireccion 01DA                             PID@velocidadIzquierda 007A  
                                      _efgtoa$933 0084                                        _efgtoa$928 0080  
                                      _efgtoa$937 0086                                        _efgtoa$929 0082  
                                      _efgtoa$938 0088                                        _efgtoa$939 008A  
                                   _forzarEspejeo 654A                                ??_decidirDireccion 00EE  
                                         ?___flge 006D                                           ?___fleq 0006  
                                         ?___lmul 0006                                           ?___wmul 0006  
                       __end_of_forzarGiroDerecha 67CE                                           ?_efgtoa 0075  
                                   _forzarReversa 674A                                           _CCP1CON 000FBD  
                                         _CCP2CON 000FBA                                           ?_floorf 003A  
                   limpiarMovimientos@movimientos 0006                                    ___lmul@product 000E  
          decidirDireccion@cambioOrientacionCarro 01E4                                        _antiRebote 6192  
                                         ?_strcpy 0006                                           ?_strlen 0006  
                                         _T2CKPS0 007E50                                           _T2CKPS1 007E51  
                                         _PID$601 0080                                   _regresarAlCruce 5960  
                                         _PID$599 007C        probarMapeoDireccionCruces@posicionInvCruce 00F3  
                                         i2l11167 61DA                                         ?___xxtofl 000B  
                      __end_of_limpiarMovimientos 647A                                     _dameDistancia 5C1A  
                              __size_of_vfpfcnvrt 05A8                                         ?_hayCruce 004E  
                                    ??_UART_write 0006                                     ?_moverCarrito 0079  
                                 __CFG_VREGEN$OFF 000000         comportamientoBasico@contCaminosRecorridos 01D4  
 probarMapeoDireccionCruces@contCaminosRecorridos 00F9                                           __Hparam 0000  
                                  ?_forzarEspejeo 0001                                           __Lparam 0000  
                               __end_of_configPwm 642A                   __end_of_mostrarDireccionElegida 5E60  
                                         ___aldiv 4E66                                   __size_of___flge 0106  
                                  ?_forzarReversa 0001                                   __size_of___fleq 00AA  
                                         ___aodiv 4B7A                                           ___fladd 2650  
                                         ___aomod 4D02                                           ___fldiv 330A  
                                         ___awdiv 57DA                                           ___flneg 6604  
                                 __size_of___lmul 006A                                           ___awmod 5A12  
                                         ___flmul 2B10                                           ___flsub 647A  
                                         ___fltol 507C                                   __size_of___wmul 0026  
                                       ?_vfprintf 00D2             probarMapeoDireccionCruces@caminoFinal 00EE  
                                 __size_of_efgtoa 0BCA                                   __CFG_STVREN$OFF 000000  
                                 __size_of_floorf 0212                                           __pcinit 638A  
                                      _myPow$1887 00F1                                        _myPow$1888 00F5  
                                         __ramtop 0800                                __end_of_UART_write 67FE  
                           __end_of_velocidadBaja 6724                                           __ptext0 5D56  
                                         __ptext1 5AC2                                           __ptext2 548A  
                                         __ptext3 67FE                                           __ptext4 63DA  
                                         __ptext5 2F3C                                           __ptext6 5960  
                                         __ptext7 5CBA                                           __ptext8 36A4  
                                         __ptext9 589E                                      __size_of_PID 02F2  
                                 __size_of_strcpy 005C                                   __size_of_strlen 0036  
                            __size_of_UART_printf 005E                                      __size_of_abs 0040  
                                    __size_of_pad 00C6                                      __size_of_map 007A  
                                         _isdigit 663C                                        ??___xxtofl 000F  
                                         _scalbnf 3EC0                                  ___awmod@dividend 0006  
                                  ?_dameDistancia 00F9                                  ___aldiv@dividend 0012  
                                         _isspace 6338                       ?_probarMapeoDireccionCruces 00EE  
                                         _isupper 65CC                                           efgtoa@c 007B  
                                         efgtoa@d 0094                                           efgtoa@e 00AC  
                                         efgtoa@f 0077                                           efgtoa@g 00A8  
                                         efgtoa@h 009E                                           efgtoa@i 00A6  
                                         efgtoa@l 00A2                                           efgtoa@m 0090  
                                         efgtoa@n 00AE                                           efgtoa@p 0098  
                                         efgtoa@t 008C                                           efgtoa@u 00B0  
                                         efgtoa@w 009B                        __size_of_forzarAvanceRecto 0022  
                                      ??_hayCruce 0051                                           _pwmDuty 44DE  
                                         atoi@neg 0013                        __size_of_velocidadEstandar 0026  
                                         _sprintf 62E6                                           _tolower 601E  
                                         _strncmp 5574                                    __pintcode_body 6292  
                            end_of_initialization 63CC                                    ??_moverCarrito 007D  
                                         floorf@e 0048                                           floorf@m 0044  
                                         floorf@u 004A                                           floorf@x 003A  
                     decidirDireccion@caminoFinal 01EC                  decidirDireccion@direccionElegida 00F1  
                                         fputc@fp 0008                                     __Lmediumconst 7D46  
                                         int_func 6292                                           fputs@fp 0011  
                                       i2u1160_47 62CA                                         i2u1161_47 61BA  
                          _SENSOR_PRIORIDAD_MEDIA 01F6                                 ?_seLlegoAlDestino 0001  
                               __end_of_vfpfcnvrt 2650                                        efgtoa@mode 009D  
                    hayCruceRapidoPID@contCaminos 004E                                        efgtoa@sign 0096  
                                       _RCSTAbits 000FAB                                  ___aldiv@quotient 001C  
                decidirDireccion@avanceRectoLargo 01EA                                           postdec1 000FE5  
                                         postdec2 000FDD                           __end_of_regresarAlCruce 5A12  
                                         postinc0 000FEE                                           postinc1 000FE6  
                                         postinc2 000FDE                           __size_of_forzarParoAuto 001A  
                      __size_of_forzarGiroDerecha 0020                                ??_seLlegoAlDestino 000B  
                                      ??_vfprintf 0055                             __end_of_configurarAdc 6808  
                                         strcpy@d 000E                                           strlen@a 0008  
                                         strcpy@s 000C                                           strlen@s 0006  
                                     ?_antiRebote 0001                                         _PORTBbits 000F81  
                                       _UART_init 5EDA                             __size_of_leerSensores 0248  
                                     ___fladd@grs 0015                                       pwmDuty@duty 0074  
                                   ___xxtofl@sign 0013                                         _TRISDbits 000F95  
                                     ___fldiv@grs 0034                                _oldSensorIzquierda 011C  
                                     ___fldiv@rem 002D              comportamientoBasico@posicionInvCruce 01D5  
                                      map@out_max 0030                                        map@out_min 002C  
                                     ___flmul@grs 0062                                    _UART_init$1886 0028  
                                       _TXSTAbits 000FAC                                   ??_forzarEspejeo 0055  
                                 ??_forzarReversa 0006                     regresarAlCruce@numMovimientos 0088  
                                    _leerSensores 3C78                __size_of_visualizarPasosRealizados 00AE  
                                  __end_of___flge 528A                                    __end_of___fleq 5C1A  
                                  __end_of___lmul 5FB4                                       vfpfcnvrt@ap 00B8  
                                     vfpfcnvrt@ct 00CA                                       vfpfcnvrt@fp 00B4  
                                     vfpfcnvrt@ll 00BE                                    __end_of___wmul 674A  
                                  __end_of_ln2_hi 7D67                                    __end_of_ln2_lo 7D63  
                                  __end_of_efgtoa 0BDC                                    __end_of_floorf 4310  
                                      ?_UART_init 0020                                        floorf@F524 0104  
                                  __end_of_invln2 7D7B                      __end_of_forzarEspejeoDerecha 6292  
                                 ??_dameDistancia 0054             comportamientoBasico@investigandoCruce 01D6  
                         __size_of_dameLecturaAdc 0046                                    __end_of_strcpy 6138  
                                  __end_of_strlen 66AA                               start_initialization 638A  
                             PID@velocidadDerecha 007E                                       __end_of_PID 3996  
                                     __end_of_Lg1 7D5F                                       __end_of_Lg2 7D5B  
                                     __end_of_Lg3 7D57                                       __end_of_Lg4 7D53  
                                     __end_of_abs 65CC                                       __end_of_pad 57DA  
                                     __end_of_map 5EDA                                  regresarAlCruce@i 008B  
                             __size_of_antiRebote 0058                             __end_of___fpclassifyf 548A  
                             pwmDuty@cicloTrabajo 0071                                       vfprintf@fmt 00D4  
                                        ??___flge 004A                                          ??___fleq 000E  
                                        ??___lmul 000E                                          ??___wmul 000A  
                                ?_regresarAlCruce 0086          probarMapeoDireccionCruces@cruceDetectado 00F7  
                                _oldSensorDerecha 0120                        comportamientoBasico@mapear 01D8  
                                  _sensorEnfrente 0124                                          ??_efgtoa 0050  
                                     __pdataBANK1 01F3                                          ??_floorf 003E  
                                __CFG_LPT1OSC$OFF 000000                      __end_of_comportamientoBasico 330A  
               __end_of_visualizarPasosRealizados 5B70                              __end_of_moverCarrito 507C  
                                        ??_strcpy 000A                                          ??_strlen 0008  
                                       ___fladd@a 000A                                         ___fladd@b 0006  
                       __size_of_decidirDireccion 076A                       __end_of_forzarGiroIzquierda 67AE  
                                       ___fldiv@a 0025                                         ___fldiv@b 0021  
                                    _llegoDestino 0059                                         ___flmul@a 0042  
                                       ___flmul@b 003E                                       __pbssCOMRAM 0055  
                                       ___flsub@a 001D                                         ___flsub@b 0019  
                comportamientoBasico@caminoActual 01D3                                     __pcstackBANK0 0060  
                                   __pcstackBANK1 01DA                                  ___aodiv@dividend 0006  
                               __size_of___xxtofl 01B4                           hayCruce@caminosRecorrer 004E  
                               __size_of_hayCruce 019C                   decidirDireccion@caminosRecorrer 01DA  
                                    _paredDerecha 0140                                _limpiarMovimientos 642A  
                               UART_printf@cadena 0007                                          PID@error 0084  
                                       _atoi$1432 0015                                         _atoi$1433 0019  
                                       _atoi$1434 0017                         _DISTANCIA_PRIORIDAD_MEDIA 0110  
                                       __pintcode 0008                               ?_limpiarMovimientos 0006  
                                   __pmediumconst 7D46                                    _forzarParoAuto 67CE  
                                        ?___aldiv 0012                                          ?___aodiv 0006  
                                        ?___fladd 0006                                          ?___aomod 0006  
                                        ?___fldiv 0021                                          ?___awdiv 0006  
                                        ?___flneg 003A                                  ___aodiv@quotient 0018  
                                        ?___awmod 0006                                          ?___flmul 003E  
                                        ?___flsub 0019                                          ?___fltol 006D  
                                       _expf$1891 00BB                                         _expf$1892 00BF  
                                       _expf$1893 00C3                                         _expf$1894 00C7  
                                       _configPwm 63DA                                         _logf$1895 00A3  
                                       _logf$1896 007D                                         _logf$1897 0081  
                                       _logf$1898 0085                                         _logf$1899 0089  
                                  _paredIzquierda 013F                                       ??_UART_init 0024  
                               __size_of_vfprintf 006A                                          ?_isdigit 0006  
                        ?_mostrarDireccionElegida 0001                                _dameDistancia$1889 01DE  
                                        ?_scalbnf 006D                                          ?_isspace 0006  
                                        ?_isupper 0006        comportamientoBasico@cambioOrientacionCarro 01D2  
                                        ?_pwmDuty 0071                              ??_limpiarMovimientos 000A  
                                  __size_of_boton 62DE                                          ?_sprintf 00DA  
                                        ?_tolower 000C                                    __size_of_fputc 00CA  
                                  __size_of_fputs 0044                                    __size_of_myPow 01CE  
                                        ?_strncmp 0006                                    __size_of_mover 009C  
           decidirDireccion@contCaminosRecorridos 01E0                                    __size_of_putch 0002  
                                 ___aldiv@divisor 0016                                   ___aldiv@counter 001A  
                                  ___wmul@product 000A                 decidirDireccion@investigandoCruce 01DC  
                    seLlegoAlDestino@llegoDestino 000B                              _forzarEspejeoDerecha 623E  
                          __end_of_forzarParoAuto 67E8                                          i2u801_40 61A6  
                                        i2u801_41 61A2                                          i2u802_40 61B4  
                                        i2u802_41 61B0                                          i2u822_40 62A2  
                                        i2u822_41 629E                                          i2u823_40 62BA  
                                        i2u823_41 62B6                                  __CFG_WDTPS$32768 000000  
                        ??_forzarEspejeoIzquierda 0078                                     ??_UART_printf 0009  
                                    ??_antiRebote 0001                                         _vfpfcnvrt 20A8  
                                      ?_configPwm 0001                                         map@in_max 0028  
                                       map@in_min 0024                            decidirDireccion@mapear 01E6  
                                      _ADCON0bits 000FC2                                 ___wmul@multiplier 0006  
                                configPwm@channel 0008                                    _dameLecturaAdc 64C0  
                                  UART_write@dato 0006                         __size_of_seLlegoAlDestino 002E  
                                    _isspace$1491 000C                                        vfpfcnvrt@c 00D1  
                                      vfpfcnvrt@f 00CD                                 ___lmul@multiplier 0006  
                                     _INTCON2bits 000FF1                                         copy_data0 639E  
                            _comportamientoBasico 2F3C                                  _caminoEncontrado 0147  
                           ?_forzarEspejeoDerecha 0001                                      _reiniciarPID 0149  
                          __size_of_velocidadBaja 0026                                __end_of_antiRebote 61EA  
                                        __Hrparam 0000                                   ?_forzarParoAuto 0001  
                                   UART_init@BAUD 0020                                     _sensorDerecha 0055  
                                      vfprintf@ap 00D6                                          __Lrparam 0000  
                                      vfprintf@fp 00D2                             __size_of_moverCarrito 010A  
                                  _posicionCarroX 0145                                    _posicionCarroY 0144  
                                __size_of___aldiv 010C                                  __size_of___aodiv 0188  
                                __size_of___fladd 04C0                                  __size_of___aomod 0164  
                                __size_of___fldiv 039A                                  __size_of___awdiv 00C4  
                                __size_of___flneg 0038                                  __size_of___awmod 00B0  
                                __size_of___flmul 042C                                  __size_of___flsub 0046  
                                __size_of___fltol 0108                                        ?_vfpfcnvrt 00B4  
                          __end_of_dameLecturaAdc 6506                                   ___aodiv@divisor 000E  
          probarMapeoDireccionCruces@caminoActual 00F0                                   ___aodiv@counter 0016  
                              ___fpclassifyf@F463 0108                               hayCruce@contCaminos 0051  
                                _decidirDireccion 0BDC                                        sprintf@fmt 00DC  
                                        ___xxtofl 469A                               __end_of_UART_printf 60DC  
                                __size_of_isdigit 0038                                  __size_of_scalbnf 023E  
                                        _dtoa$905 0033                                          _hayCruce 484E  
                                __size_of_isspace 0052                                          __ptext10 528A  
                                        __ptext11 4F72                                          __ptext20 676C  
                                        __ptext12 654A                                          __ptext21 642A  
                                        __ptext13 61EA                                          __ptext30 44DE  
                                        __ptext22 3C78                                          __ptext14 678E  
                                        __ptext31 5E60                                          __ptext23 5C1A  
                                        __ptext15 623E                                          __ptext40 65CC  
                                        __ptext32 5F4A                                          __ptext24 4310  
                                        __ptext16 66D8                                          __ptext41 60DC  
                                        __ptext33 469A                                          __ptext25 1346  
                                        __ptext17 674A                                          __ptext50 330A  
                                        __ptext42 40FE                                          __ptext34 62E6  
                                        __ptext26 1A8A                                          __ptext18 67CE  
                                        __ptext51 5A12                                          __ptext43 538C  
                                        __ptext35 5FB4                                          __ptext27 3EC0  
                                        __ptext19 67AE                                          __ptext60 6506  
                                        __ptext52 57DA                                          __ptext44 507C  
                                        __ptext36 20A8                                          __ptext28 0BDC  
                                        __ptext61 564A                                          __ptext53 3996  
                                        __ptext45 647A                                          __ptext37 5574  
                                        __ptext29 66FE                                          __ptext70 607E  
                                        __ptext62 680E                                          __ptext54 658C  
                                        __ptext46 2650                                          __ptext38 0012  
                                        __ptext71 67E8                                          __ptext63 49EA  
                                        __ptext55 4D02                                          __ptext47 6604  
                                        __ptext39 601E                                          __ptext72 484E  
                                        __ptext64 6338                                          __ptext56 4B7A  
                                        __ptext48 2B10                                          __ptext73 5184  
                                        __ptext65 663C                                          __ptext57 6138  
                                        __ptext49 5B70                                          __ptext74 5EDA  
                                        __ptext66 6724                                          __ptext58 5714  
                                        __ptext75 4E66                                          __ptext67 66AA  
                                        __ptext59 6674                                          __ptext68 64C0  
                                        __ptext77 6192                                          __ptext69 5DDE  
                                __size_of_isupper 0038                                  __size_of_pwmDuty 01BC  
                probarMapeoDireccionCruces@mapear 00F5           __end_of_inicializarComportamientoBasico 5574  
        __size_of_inicializarComportamientoBasico 00EA                 ??_inicializarComportamientoBasico 0055  
                ?_inicializarComportamientoBasico 0001                   _inicializarComportamientoBasico 548A  
                                __size_of_sprintf 0052                                  __size_of_tolower 0060  
                                   antiRebote@pin 0003                                        strcpy@dest 0006  
                                __size_of_strncmp 00D6                             ?_comportamientoBasico 0001  
              comportamientoBasico@cruceDetectado 01D7                                      _moverCarrito 4F72  
                          __size_of_configurarAdc 000A                                     __size_of_atoi 0190  
                                   __size_of_ctoa 005A                                     __size_of_main 0088  
                                   __size_of_dtoa 02E2                                     __size_of_expf 061E  
                                   __size_of_logf 0744                              expf@__xc8_float_word 00B7  
                           __end_of_forzarEspejeo 658C                                          efgtoa@fp 0075  
                                        efgtoa@ne 0092                                          efgtoa@pp 008E  
                                        efgtoa@ou 007C              comportamientoBasico@direccionElegida 00FF  
                           __end_of_forzarReversa 676C                                          int$flags 005A  
                         dameLecturaAdc@canalLeer 000A                                          _vfprintf 5FB4  
                 __size_of_forzarEspejeoIzquierda 0054                                       ??_configPwm 0006  
                                 ?_dameLecturaAdc 0006                                 _hayCruceRapidoPID 589E  
                                ___aomod@dividend 0006                             __CFG_CPUDIV$OSC1_PLL2 000000  
                                   _velocidadBaja 66FE                                          logf@F469 0100  
            comportamientoBasico@avanceRectoLargo 01D1                      decidirDireccion@caminoActual 01E2  
                  decidirDireccion@cruceDetectado 01E8                                ?_hayCruceRapidoPID 0001  
                                      _INTCONbits 000FF2                             __end_of_dameDistancia 5CBA  
                                        logf@hfsq 008F                                          expf@sign 00DF  
                             limpiarMovimientos@i 000C                                  _crucesRecorridos 0146  
                                        isdigit@c 0006                                          scalbnf@n 0071  
                                        scalbnf@u 0073                                          scalbnf@x 006D  
                                        scalbnf@y 0077                               ??_hayCruceRapidoPID 004E  
                                        intlevel2 0000                                         sprintf@ap 00E6  
                          ??_forzarEspejeoDerecha 0078                                          isspace@c 0006  
                                       strcpy@src 0008                                          isupper@c 0006  
                                       strncmp@_l 0006                                         strncmp@_r 0008  
                                     efgtoa@nmode 009A                         __end_of_hayCruceRapidoPID 5960  
                                 ___aomod@divisor 000E                                       ??_vfpfcnvrt 00BA  
                                 ___aomod@counter 0016                                     _vfpfcnvrt$953 00C6  
                                   _vfpfcnvrt$959 00C8                                       _UART_printf 607E  
                                   _configurarAdc 67FE                                    ?_velocidadBaja 0001  
                      ?_visualizarPasosRealizados 00EE                                    pwmDuty@channel 0073  
                                        sprintf@f 00E8                                          tolower@c 000C  
                                        sprintf@s 00DA                            __size_of___fpclassifyf 00FE  
                        __size_of_regresarAlCruce 00B2                                  _seLlegoAlDestino 66AA  
                                        strncmp@l 000D                                          strncmp@n 000A  
                                        strncmp@r 000F                comportamientoBasico@carroEspejeado 01D9  
                                    ___aldiv@sign 001B                        moverCarrito@carroEspejeado 0079  
                    ??_probarMapeoDireccionCruces 00FD                                     ___fladd@signs 0012  
                          ??_comportamientoBasico 01EE                                        _UART_write 67E8  
                          _forzarEspejeoIzquierda 61EA                      __size_of_forzarGiroIzquierda 0020  
                                    ___aodiv@sign 0017                                      ___fladd@aexp 0013  
                                    ___fladd@bexp 0014                  __size_of_mostrarDireccionElegida 0082  
                      regresarAlCruce@movimientos 0086                                      ___aomod@sign 0017  
