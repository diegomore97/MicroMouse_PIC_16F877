

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 19 14:26:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    99                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   100  0000                     
   101                           ; Version 2.10
   102                           ; Generated 31/07/2019 GMT
   103                           ; 
   104                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F4550 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	idataBANK1
   137  0057B4                     __pidataBANK1:
   138                           	opt callstack 0
   139                           
   140                           ;initializer for _pausa
   141  0057B4  01                 	db	1
   142                           
   143                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   144  0057B5  03                 	db	3
   145                           
   146                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   147  0057B6  02                 	db	2
   148                           
   149                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   150  0057B7  01                 	db	1
   151                           
   152                           	psect	mediumconst
   153  007DC8                     __pmediumconst:
   154                           	opt callstack 0
   155  007DC8  00                 	db	0
   156  007DC9  0000               	dw	0
   157  007DCB  4B00               	dw	19200
   158  007DCD                     __end_of_toint:
   159                           	opt callstack 0
   160  0000                     _T1CON	set	4045
   161  0000                     _TRISDbits	set	3989
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _INTCONbits	set	4082
   164  0000                     _ADRESL	set	4035
   165  0000                     _ADRESH	set	4036
   166  0000                     _ADCON0bits	set	4034
   167  0000                     _ADCON2	set	4032
   168  0000                     _ADCON1	set	4033
   169  0000                     _TXREG	set	4013
   170  0000                     _RCREG	set	4014
   171  0000                     _RCSTAbits	set	4011
   172  0000                     _TXSTAbits	set	4012
   173  0000                     _SPBRG	set	4015
   174  0000                     _PORTBbits	set	3969
   175  0000                     _TMR1L	set	4046
   176  0000                     _TMR1H	set	4047
   177  0000                     _PR2	set	4043
   178  0000                     _CCP2CON	set	4026
   179  0000                     _CCPR2L	set	4027
   180  0000                     _CCP1CON	set	4029
   181  0000                     _CCPR1L	set	4030
   182  0000                     _TRISB0	set	31896
   183  0000                     _TRISB7	set	31903
   184  0000                     _TRISB6	set	31902
   185  0000                     _TRISB5	set	31901
   186  0000                     _TRISB4	set	31900
   187  0000                     _TRISB3	set	31899
   188  0000                     _TRISB2	set	31898
   189  0000                     _TRISB1	set	31897
   190  0000                     _TRISD3	set	31915
   191  0000                     _LATB7	set	31831
   192  0000                     _LATB6	set	31830
   193  0000                     _LATB5	set	31829
   194  0000                     _LATB4	set	31828
   195  0000                     _LATD2	set	31842
   196  0000                     _INT0IF	set	32657
   197  0000                     _RCIF	set	31989
   198  0000                     _TRISC7	set	31911
   199  0000                     _TRISC6	set	31910
   200  0000                     _TMR1IF	set	31984
   201  0000                     _TMR1ON	set	32360
   202  0000                     _LATD3	set	31843
   203  0000                     _TMR2ON	set	32338
   204  0000                     _CCP2M2	set	32210
   205  0000                     _CCP2M3	set	32211
   206  0000                     _TRISC1	set	31905
   207  0000                     _CCP1M2	set	32234
   208  0000                     _CCP1M3	set	32235
   209  0000                     _TRISC2	set	31906
   210  0000                     _T2CKPS1	set	32337
   211  0000                     _T2CKPS0	set	32336
   212  007DCD                     STR_13:
   213  007DCD  0A                 	db	10
   214  007DCE  0A                 	db	10
   215  007DCF  4F                 	db	79	;'O'
   216  007DD0  56                 	db	86	;'V'
   217  007DD1  45                 	db	69	;'E'
   218  007DD2  52                 	db	82	;'R'
   219  007DD3  46                 	db	70	;'F'
   220  007DD4  4C                 	db	76	;'L'
   221  007DD5  4F                 	db	79	;'O'
   222  007DD6  57                 	db	87	;'W'
   223  007DD7  20                 	db	32
   224  007DD8  65                 	db	101	;'e'
   225  007DD9  6E                 	db	110	;'n'
   226  007DDA  20                 	db	32
   227  007DDB  65                 	db	101	;'e'
   228  007DDC  6C                 	db	108	;'l'
   229  007DDD  20                 	db	32
   230  007DDE  6D                 	db	109	;'m'
   231  007DDF  61                 	db	97	;'a'
   232  007DE0  70                 	db	112	;'p'
   233  007DE1  65                 	db	101	;'e'
   234  007DE2  6F                 	db	111	;'o'
   235  007DE3  20                 	db	32
   236  007DE4  64                 	db	100	;'d'
   237  007DE5  65                 	db	101	;'e'
   238  007DE6  20                 	db	32
   239  007DE7  70                 	db	112	;'p'
   240  007DE8  61                 	db	97	;'a'
   241  007DE9  73                 	db	115	;'s'
   242  007DEA  6F                 	db	111	;'o'
   243  007DEB  73                 	db	115	;'s'
   244  007DEC  20                 	db	32
   245  007DED  52                 	db	82	;'R'
   246  007DEE  65                 	db	101	;'e'
   247  007DEF  61                 	db	97	;'a'
   248  007DF0  6C                 	db	108	;'l'
   249  007DF1  69                 	db	105	;'i'
   250  007DF2  7A                 	db	122	;'z'
   251  007DF3  61                 	db	97	;'a'
   252  007DF4  64                 	db	100	;'d'
   253  007DF5  6F                 	db	111	;'o'
   254  007DF6  73                 	db	115	;'s'
   255  007DF7  20                 	db	32
   256  007DF8  70                 	db	112	;'p'
   257  007DF9  61                 	db	97	;'a'
   258  007DFA  72                 	db	114	;'r'
   259  007DFB  61                 	db	97	;'a'
   260  007DFC  20                 	db	32
   261  007DFD  63                 	db	99	;'c'
   262  007DFE  61                 	db	97	;'a'
   263  007DFF  6D                 	db	109	;'m'
   264  007E00  69                 	db	105	;'i'
   265  007E01  6E                 	db	110	;'n'
   266  007E02  6F                 	db	111	;'o'
   267  007E03  20                 	db	32
   268  007E04  54                 	db	84	;'T'
   269  007E05  6F                 	db	111	;'o'
   270  007E06  74                 	db	116	;'t'
   271  007E07  61                 	db	97	;'a'
   272  007E08  6C                 	db	108	;'l'
   273  007E09  0A                 	db	10
   274  007E0A  0A                 	db	10
   275  007E0B  00                 	db	0
   276  007E0C                     STR_12:
   277  007E0C  0A                 	db	10
   278  007E0D  0A                 	db	10
   279  007E0E  4F                 	db	79	;'O'
   280  007E0F  56                 	db	86	;'V'
   281  007E10  45                 	db	69	;'E'
   282  007E11  52                 	db	82	;'R'
   283  007E12  46                 	db	70	;'F'
   284  007E13  4C                 	db	76	;'L'
   285  007E14  4F                 	db	79	;'O'
   286  007E15  57                 	db	87	;'W'
   287  007E16  20                 	db	32
   288  007E17  65                 	db	101	;'e'
   289  007E18  6E                 	db	110	;'n'
   290  007E19  20                 	db	32
   291  007E1A  65                 	db	101	;'e'
   292  007E1B  6C                 	db	108	;'l'
   293  007E1C  20                 	db	32
   294  007E1D  6D                 	db	109	;'m'
   295  007E1E  61                 	db	97	;'a'
   296  007E1F  70                 	db	112	;'p'
   297  007E20  65                 	db	101	;'e'
   298  007E21  6F                 	db	111	;'o'
   299  007E22  20                 	db	32
   300  007E23  64                 	db	100	;'d'
   301  007E24  65                 	db	101	;'e'
   302  007E25  20                 	db	32
   303  007E26  70                 	db	112	;'p'
   304  007E27  61                 	db	97	;'a'
   305  007E28  73                 	db	115	;'s'
   306  007E29  6F                 	db	111	;'o'
   307  007E2A  73                 	db	115	;'s'
   308  007E2B  20                 	db	32
   309  007E2C  52                 	db	82	;'R'
   310  007E2D  65                 	db	101	;'e'
   311  007E2E  61                 	db	97	;'a'
   312  007E2F  6C                 	db	108	;'l'
   313  007E30  69                 	db	105	;'i'
   314  007E31  7A                 	db	122	;'z'
   315  007E32  61                 	db	97	;'a'
   316  007E33  64                 	db	100	;'d'
   317  007E34  6F                 	db	111	;'o'
   318  007E35  73                 	db	115	;'s'
   319  007E36  20                 	db	32
   320  007E37  70                 	db	112	;'p'
   321  007E38  61                 	db	97	;'a'
   322  007E39  72                 	db	114	;'r'
   323  007E3A  61                 	db	97	;'a'
   324  007E3B  20                 	db	32
   325  007E3C  63                 	db	99	;'c'
   326  007E3D  72                 	db	114	;'r'
   327  007E3E  75                 	db	117	;'u'
   328  007E3F  63                 	db	99	;'c'
   329  007E40  65                 	db	101	;'e'
   330  007E41  0A                 	db	10
   331  007E42  0A                 	db	10
   332  007E43  00                 	db	0
   333  007E44  0D                 	db	13
   334  007E45  4C                 	db	76	;'L'
   335  007E46  65                 	db	101	;'e'
   336  007E47  63                 	db	99	;'c'
   337  007E48  74                 	db	116	;'t'
   338  007E49  75                 	db	117	;'u'
   339  007E4A  72                 	db	114	;'r'
   340  007E4B  61                 	db	97	;'a'
   341  007E4C  20                 	db	32
   342  007E4D  64                 	db	100	;'d'
   343  007E4E  65                 	db	101	;'e'
   344  007E4F  20                 	db	32
   345  007E50  73                 	db	115	;'s'
   346  007E51  65                 	db	101	;'e'
   347  007E52  6E                 	db	110	;'n'
   348  007E53  73                 	db	115	;'s'
   349  007E54  6F                 	db	111	;'o'
   350  007E55  72                 	db	114	;'r'
   351  007E56  20                 	db	32
   352  007E57  4F                 	db	79	;'O'
   353  007E58  70                 	db	112	;'p'
   354  007E59  74                 	db	116	;'t'
   355  007E5A  69                 	db	105	;'i'
   356  007E5B  63                 	db	99	;'c'
   357  007E5C  6F                 	db	111	;'o'
   358  007E5D  20                 	db	32
   359  007E5E  3D                 	db	61	;'='
   360  007E5F  20                 	db	32
   361  007E60  25                 	db	37
   362  007E61  64                 	db	100	;'d'
   363  007E62  0D                 	db	13
   364  007E63  0A                 	db	10
   365  007E64  0A                 	db	10
   366  007E65  00                 	db	0
   367  007E66                     STR_14:
   368  007E66  0D                 	db	13
   369  007E67  53                 	db	83	;'S'
   370  007E68  65                 	db	101	;'e'
   371  007E69  20                 	db	32
   372  007E6A  72                 	db	114	;'r'
   373  007E6B  65                 	db	101	;'e'
   374  007E6C  67                 	db	103	;'g'
   375  007E6D  72                 	db	114	;'r'
   376  007E6E  65                 	db	101	;'e'
   377  007E6F  73                 	db	115	;'s'
   378  007E70  6F                 	db	111	;'o'
   379  007E71  20                 	db	32
   380  007E72  61                 	db	97	;'a'
   381  007E73  6C                 	db	108	;'l'
   382  007E74  20                 	db	32
   383  007E75  70                 	db	112	;'p'
   384  007E76  75                 	db	117	;'u'
   385  007E77  6E                 	db	110	;'n'
   386  007E78  74                 	db	116	;'t'
   387  007E79  6F                 	db	111	;'o'
   388  007E7A  20                 	db	32
   389  007E7B  64                 	db	100	;'d'
   390  007E7C  65                 	db	101	;'e'
   391  007E7D  20                 	db	32
   392  007E7E  70                 	db	112	;'p'
   393  007E7F  61                 	db	97	;'a'
   394  007E80  72                 	db	114	;'r'
   395  007E81  74                 	db	116	;'t'
   396  007E82  69                 	db	105	;'i'
   397  007E83  64                 	db	100	;'d'
   398  007E84  61                 	db	97	;'a'
   399  007E85  0D                 	db	13
   400  007E86  0A                 	db	10
   401  007E87  00                 	db	0
   402  007E88                     STR_20:
   403  007E88  49                 	db	73	;'I'
   404  007E89  6E                 	db	110	;'n'
   405  007E8A  76                 	db	118	;'v'
   406  007E8B  65                 	db	101	;'e'
   407  007E8C  73                 	db	115	;'s'
   408  007E8D  74                 	db	116	;'t'
   409  007E8E  69                 	db	105	;'i'
   410  007E8F  67                 	db	103	;'g'
   411  007E90  61                 	db	97	;'a'
   412  007E91  6E                 	db	110	;'n'
   413  007E92  64                 	db	100	;'d'
   414  007E93  6F                 	db	111	;'o'
   415  007E94  20                 	db	32
   416  007E95  43                 	db	67	;'C'
   417  007E96  72                 	db	114	;'r'
   418  007E97  75                 	db	117	;'u'
   419  007E98  63                 	db	99	;'c'
   420  007E99  65                 	db	101	;'e'
   421  007E9A  3A                 	db	58	;':'
   422  007E9B  20                 	db	32
   423  007E9C  25                 	db	37
   424  007E9D  63                 	db	99	;'c'
   425  007E9E  20                 	db	32
   426  007E9F  7C                 	db	124
   427  007EA0  20                 	db	32
   428  007EA1  25                 	db	37
   429  007EA2  63                 	db	99	;'c'
   430  007EA3  20                 	db	32
   431  007EA4  7C                 	db	124
   432  007EA5  20                 	db	32
   433  007EA6  25                 	db	37
   434  007EA7  63                 	db	99	;'c'
   435  007EA8  0A                 	db	10
   436  007EA9  00                 	db	0
   437  007EAA                     STR_17:
   438  007EAA  0D                 	db	13
   439  007EAB  44                 	db	68	;'D'
   440  007EAC  69                 	db	105	;'i'
   441  007EAD  72                 	db	114	;'r'
   442  007EAE  65                 	db	101	;'e'
   443  007EAF  63                 	db	99	;'c'
   444  007EB0  63                 	db	99	;'c'
   445  007EB1  69                 	db	105	;'i'
   446  007EB2  6F                 	db	111	;'o'
   447  007EB3  6E                 	db	110	;'n'
   448  007EB4  20                 	db	32
   449  007EB5  45                 	db	69	;'E'
   450  007EB6  6C                 	db	108	;'l'
   451  007EB7  65                 	db	101	;'e'
   452  007EB8  67                 	db	103	;'g'
   453  007EB9  69                 	db	105	;'i'
   454  007EBA  64                 	db	100	;'d'
   455  007EBB  61                 	db	97	;'a'
   456  007EBC  3A                 	db	58	;':'
   457  007EBD  20                 	db	32
   458  007EBE  49                 	db	73	;'I'
   459  007EBF  5A                 	db	90	;'Z'
   460  007EC0  51                 	db	81	;'Q'
   461  007EC1  55                 	db	85	;'U'
   462  007EC2  49                 	db	73	;'I'
   463  007EC3  45                 	db	69	;'E'
   464  007EC4  52                 	db	82	;'R'
   465  007EC5  44                 	db	68	;'D'
   466  007EC6  41                 	db	65	;'A'
   467  007EC7  0A                 	db	10
   468  007EC8  0A                 	db	10
   469  007EC9  0D                 	db	13
   470  007ECA  00                 	db	0
   471  007ECB                     STR_11:
   472  007ECB  0D                 	db	13
   473  007ECC  4D                 	db	77	;'M'
   474  007ECD  6F                 	db	111	;'o'
   475  007ECE  76                 	db	118	;'v'
   476  007ECF  69                 	db	105	;'i'
   477  007ED0  6D                 	db	109	;'m'
   478  007ED1  69                 	db	105	;'i'
   479  007ED2  65                 	db	101	;'e'
   480  007ED3  6E                 	db	110	;'n'
   481  007ED4  74                 	db	116	;'t'
   482  007ED5  6F                 	db	111	;'o'
   483  007ED6  73                 	db	115	;'s'
   484  007ED7  20                 	db	32
   485  007ED8  52                 	db	82	;'R'
   486  007ED9  65                 	db	101	;'e'
   487  007EDA  61                 	db	97	;'a'
   488  007EDB  6C                 	db	108	;'l'
   489  007EDC  69                 	db	105	;'i'
   490  007EDD  7A                 	db	122	;'z'
   491  007EDE  61                 	db	97	;'a'
   492  007EDF  64                 	db	100	;'d'
   493  007EE0  6F                 	db	111	;'o'
   494  007EE1  73                 	db	115	;'s'
   495  007EE2  20                 	db	32
   496  007EE3  3D                 	db	61	;'='
   497  007EE4  20                 	db	32
   498  007EE5  25                 	db	37
   499  007EE6  64                 	db	100	;'d'
   500  007EE7  0D                 	db	13
   501  007EE8  0A                 	db	10
   502  007EE9  0A                 	db	10
   503  007EEA  00                 	db	0
   504  007EEB                     STR_16:
   505  007EEB  0D                 	db	13
   506  007EEC  44                 	db	68	;'D'
   507  007EED  69                 	db	105	;'i'
   508  007EEE  72                 	db	114	;'r'
   509  007EEF  65                 	db	101	;'e'
   510  007EF0  63                 	db	99	;'c'
   511  007EF1  63                 	db	99	;'c'
   512  007EF2  69                 	db	105	;'i'
   513  007EF3  6F                 	db	111	;'o'
   514  007EF4  6E                 	db	110	;'n'
   515  007EF5  20                 	db	32
   516  007EF6  45                 	db	69	;'E'
   517  007EF7  6C                 	db	108	;'l'
   518  007EF8  65                 	db	101	;'e'
   519  007EF9  67                 	db	103	;'g'
   520  007EFA  69                 	db	105	;'i'
   521  007EFB  64                 	db	100	;'d'
   522  007EFC  61                 	db	97	;'a'
   523  007EFD  3A                 	db	58	;':'
   524  007EFE  20                 	db	32
   525  007EFF  45                 	db	69	;'E'
   526  007F00  4E                 	db	78	;'N'
   527  007F01  46                 	db	70	;'F'
   528  007F02  52                 	db	82	;'R'
   529  007F03  45                 	db	69	;'E'
   530  007F04  4E                 	db	78	;'N'
   531  007F05  54                 	db	84	;'T'
   532  007F06  45                 	db	69	;'E'
   533  007F07  0A                 	db	10
   534  007F08  0A                 	db	10
   535  007F09  0D                 	db	13
   536  007F0A  00                 	db	0
   537  007F0B                     STR_19:
   538  007F0B  0D                 	db	13
   539  007F0C  44                 	db	68	;'D'
   540  007F0D  69                 	db	105	;'i'
   541  007F0E  72                 	db	114	;'r'
   542  007F0F  65                 	db	101	;'e'
   543  007F10  63                 	db	99	;'c'
   544  007F11  63                 	db	99	;'c'
   545  007F12  69                 	db	105	;'i'
   546  007F13  6F                 	db	111	;'o'
   547  007F14  6E                 	db	110	;'n'
   548  007F15  20                 	db	32
   549  007F16  45                 	db	69	;'E'
   550  007F17  6C                 	db	108	;'l'
   551  007F18  65                 	db	101	;'e'
   552  007F19  67                 	db	103	;'g'
   553  007F1A  69                 	db	105	;'i'
   554  007F1B  64                 	db	100	;'d'
   555  007F1C  61                 	db	97	;'a'
   556  007F1D  3A                 	db	58	;':'
   557  007F1E  20                 	db	32
   558  007F1F  43                 	db	67	;'C'
   559  007F20  41                 	db	65	;'A'
   560  007F21  4C                 	db	76	;'L'
   561  007F22  4C                 	db	76	;'L'
   562  007F23  45                 	db	69	;'E'
   563  007F24  4A                 	db	74	;'J'
   564  007F25  4F                 	db	79	;'O'
   565  007F26  4E                 	db	78	;'N'
   566  007F27  0A                 	db	10
   567  007F28  0A                 	db	10
   568  007F29  0D                 	db	13
   569  007F2A  00                 	db	0
   570  007F2B                     STR_18:
   571  007F2B  0D                 	db	13
   572  007F2C  44                 	db	68	;'D'
   573  007F2D  69                 	db	105	;'i'
   574  007F2E  72                 	db	114	;'r'
   575  007F2F  65                 	db	101	;'e'
   576  007F30  63                 	db	99	;'c'
   577  007F31  63                 	db	99	;'c'
   578  007F32  69                 	db	105	;'i'
   579  007F33  6F                 	db	111	;'o'
   580  007F34  6E                 	db	110	;'n'
   581  007F35  20                 	db	32
   582  007F36  45                 	db	69	;'E'
   583  007F37  6C                 	db	108	;'l'
   584  007F38  65                 	db	101	;'e'
   585  007F39  67                 	db	103	;'g'
   586  007F3A  69                 	db	105	;'i'
   587  007F3B  64                 	db	100	;'d'
   588  007F3C  61                 	db	97	;'a'
   589  007F3D  3A                 	db	58	;':'
   590  007F3E  20                 	db	32
   591  007F3F  44                 	db	68	;'D'
   592  007F40  45                 	db	69	;'E'
   593  007F41  52                 	db	82	;'R'
   594  007F42  45                 	db	69	;'E'
   595  007F43  43                 	db	67	;'C'
   596  007F44  48                 	db	72	;'H'
   597  007F45  41                 	db	65	;'A'
   598  007F46  0A                 	db	10
   599  007F47  0A                 	db	10
   600  007F48  0D                 	db	13
   601  007F49  00                 	db	0
   602  007F4A  0D                 	db	13
   603  007F4B  44                 	db	68	;'D'
   604  007F4C  65                 	db	101	;'e'
   605  007F4D  73                 	db	115	;'s'
   606  007F4E  74                 	db	116	;'t'
   607  007F4F  69                 	db	105	;'i'
   608  007F50  6E                 	db	110	;'n'
   609  007F51  6F                 	db	111	;'o'
   610  007F52  20                 	db	32
   611  007F53  6E                 	db	110	;'n'
   612  007F54  6F                 	db	111	;'o'
   613  007F55  20                 	db	32
   614  007F56  64                 	db	100	;'d'
   615  007F57  65                 	db	101	;'e'
   616  007F58  74                 	db	116	;'t'
   617  007F59  65                 	db	101	;'e'
   618  007F5A  63                 	db	99	;'c'
   619  007F5B  74                 	db	116	;'t'
   620  007F5C  61                 	db	97	;'a'
   621  007F5D  64                 	db	100	;'d'
   622  007F5E  6F                 	db	111	;'o'
   623  007F5F  20                 	db	32
   624  007F60  0D                 	db	13
   625  007F61  0A                 	db	10
   626  007F62  00                 	db	0
   627  007F63  0D                 	db	13
   628  007F64  53                 	db	83	;'S'
   629  007F65  65                 	db	101	;'e'
   630  007F66  20                 	db	32
   631  007F67  6C                 	db	108	;'l'
   632  007F68  6C                 	db	108	;'l'
   633  007F69  65                 	db	101	;'e'
   634  007F6A  67                 	db	103	;'g'
   635  007F6B  6F                 	db	111	;'o'
   636  007F6C  20                 	db	32
   637  007F6D  61                 	db	97	;'a'
   638  007F6E  6C                 	db	108	;'l'
   639  007F6F  20                 	db	32
   640  007F70  64                 	db	100	;'d'
   641  007F71  65                 	db	101	;'e'
   642  007F72  73                 	db	115	;'s'
   643  007F73  74                 	db	116	;'t'
   644  007F74  69                 	db	105	;'i'
   645  007F75  6E                 	db	110	;'n'
   646  007F76  6F                 	db	111	;'o'
   647  007F77  20                 	db	32
   648  007F78  0D                 	db	13
   649  007F79  0A                 	db	10
   650  007F7A  00                 	db	0
   651  007F7B                     STR_15:
   652  007F7B  0D                 	db	13
   653  007F7C  53                 	db	83	;'S'
   654  007F7D  65                 	db	101	;'e'
   655  007F7E  20                 	db	32
   656  007F7F  6C                 	db	108	;'l'
   657  007F80  6C                 	db	108	;'l'
   658  007F81  65                 	db	101	;'e'
   659  007F82  67                 	db	103	;'g'
   660  007F83  6F                 	db	111	;'o'
   661  007F84  20                 	db	32
   662  007F85  41                 	db	65	;'A'
   663  007F86  6C                 	db	108	;'l'
   664  007F87  20                 	db	32
   665  007F88  64                 	db	100	;'d'
   666  007F89  65                 	db	101	;'e'
   667  007F8A  73                 	db	115	;'s'
   668  007F8B  74                 	db	116	;'t'
   669  007F8C  69                 	db	105	;'i'
   670  007F8D  6E                 	db	110	;'n'
   671  007F8E  6F                 	db	111	;'o'
   672  007F8F  0D                 	db	13
   673  007F90  0A                 	db	10
   674  007F91  00                 	db	0
   675  007F92  0D                 	db	13
   676  007F93  49                 	db	73	;'I'
   677  007F94  7A                 	db	122	;'z'
   678  007F95  71                 	db	113	;'q'
   679  007F96  75                 	db	117	;'u'
   680  007F97  69                 	db	105	;'i'
   681  007F98  65                 	db	101	;'e'
   682  007F99  72                 	db	114	;'r'
   683  007F9A  64                 	db	100	;'d'
   684  007F9B  61                 	db	97	;'a'
   685  007F9C  3A                 	db	58	;':'
   686  007F9D  20                 	db	32
   687  007F9E  25                 	db	37
   688  007F9F  2E                 	db	46
   689  007FA0  32                 	db	50	;'2'
   690  007FA1  66                 	db	102	;'f'
   691  007FA2  0D                 	db	13
   692  007FA3  0A                 	db	10
   693  007FA4  00                 	db	0
   694  007FA5  0D                 	db	13
   695  007FA6  45                 	db	69	;'E'
   696  007FA7  6E                 	db	110	;'n'
   697  007FA8  66                 	db	102	;'f'
   698  007FA9  72                 	db	114	;'r'
   699  007FAA  65                 	db	101	;'e'
   700  007FAB  6E                 	db	110	;'n'
   701  007FAC  74                 	db	116	;'t'
   702  007FAD  65                 	db	101	;'e'
   703  007FAE  3A                 	db	58	;':'
   704  007FAF  20                 	db	32
   705  007FB0  25                 	db	37
   706  007FB1  2E                 	db	46
   707  007FB2  32                 	db	50	;'2'
   708  007FB3  66                 	db	102	;'f'
   709  007FB4  0D                 	db	13
   710  007FB5  0A                 	db	10
   711  007FB6  00                 	db	0
   712  007FB7  0D                 	db	13
   713  007FB8  44                 	db	68	;'D'
   714  007FB9  65                 	db	101	;'e'
   715  007FBA  72                 	db	114	;'r'
   716  007FBB  65                 	db	101	;'e'
   717  007FBC  63                 	db	99	;'c'
   718  007FBD  68                 	db	104	;'h'
   719  007FBE  61                 	db	97	;'a'
   720  007FBF  3A                 	db	58	;':'
   721  007FC0  20                 	db	32
   722  007FC1  25                 	db	37
   723  007FC2  2E                 	db	46
   724  007FC3  32                 	db	50	;'2'
   725  007FC4  66                 	db	102	;'f'
   726  007FC5  0D                 	db	13
   727  007FC6  0A                 	db	10
   728  007FC7  00                 	db	0
   729  007FC8                     STR_8:
   730  007FC8  49                 	db	73	;'I'
   731  007FC9  7A                 	db	122	;'z'
   732  007FCA  71                 	db	113	;'q'
   733  007FCB  75                 	db	117	;'u'
   734  007FCC  69                 	db	105	;'i'
   735  007FCD  65                 	db	101	;'e'
   736  007FCE  72                 	db	114	;'r'
   737  007FCF  64                 	db	100	;'d'
   738  007FD0  61                 	db	97	;'a'
   739  007FD1  0A                 	db	10
   740  007FD2  00                 	db	0
   741  007FD3                     STR_7:
   742  007FD3  45                 	db	69	;'E'
   743  007FD4  6E                 	db	110	;'n'
   744  007FD5  66                 	db	102	;'f'
   745  007FD6  72                 	db	114	;'r'
   746  007FD7  65                 	db	101	;'e'
   747  007FD8  6E                 	db	110	;'n'
   748  007FD9  74                 	db	116	;'t'
   749  007FDA  65                 	db	101	;'e'
   750  007FDB  0A                 	db	10
   751  007FDC  00                 	db	0
   752  007FDD                     STR_9:
   753  007FDD  44                 	db	68	;'D'
   754  007FDE  65                 	db	101	;'e'
   755  007FDF  72                 	db	114	;'r'
   756  007FE0  65                 	db	101	;'e'
   757  007FE1  63                 	db	99	;'c'
   758  007FE2  68                 	db	104	;'h'
   759  007FE3  61                 	db	97	;'a'
   760  007FE4  0A                 	db	10
   761  007FE5  00                 	db	0
   762  007FE6                     STR_10:
   763  007FE6  41                 	db	65	;'A'
   764  007FE7  6C                 	db	108	;'l'
   765  007FE8  74                 	db	116	;'t'
   766  007FE9  6F                 	db	111	;'o'
   767  007FEA  0A                 	db	10
   768  007FEB  00                 	db	0
   769  007FEC                     STR_21:
   770  007FEC  49                 	db	73	;'I'
   771  007FED  4E                 	db	78	;'N'
   772  007FEE  46                 	db	70	;'F'
   773  007FEF  00                 	db	0
   774  007FF0                     STR_25:
   775  007FF0  4E                 	db	78	;'N'
   776  007FF1  41                 	db	65	;'A'
   777  007FF2  4E                 	db	78	;'N'
   778  007FF3  00                 	db	0
   779  007FF4                     STR_22:
   780  007FF4  69                 	db	105	;'i'
   781  007FF5  6E                 	db	110	;'n'
   782  007FF6  66                 	db	102	;'f'
   783  007FF7  00                 	db	0
   784  007FF8                     STR_26:
   785  007FF8  6E                 	db	110	;'n'
   786  007FF9  61                 	db	97	;'a'
   787  007FFA  6E                 	db	110	;'n'
   788  007FFB  00                 	db	0
   789  007FFC                     STR_29:
   790  007FFC  6C                 	db	108	;'l'
   791  007FFD  66                 	db	102	;'f'
   792  007FFE  00                 	db	0
   793  0000                     
   794                           ; #config settings
   795  007FFF  00                 	db	0	; dummy byte at the end
   796  0000                     
   797                           	psect	cinit
   798  004F24                     __pcinit:
   799                           	opt callstack 0
   800  004F24                     start_initialization:
   801                           	opt callstack 0
   802  004F24                     __initialization:
   803                           	opt callstack 0
   804                           
   805                           ; Initialize objects allocated to BANK1 (4 bytes)
   806                           ; load TBLPTR registers with __pidataBANK1
   807  004F24  0EB4               	movlw	low __pidataBANK1
   808  004F26  6EF6               	movwf	tblptrl,c
   809  004F28  0E57               	movlw	high __pidataBANK1
   810  004F2A  6EF7               	movwf	tblptrh,c
   811  004F2C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   812  004F2E  6EF8               	movwf	tblptru,c
   813  004F30  EE01  F0E9         	lfsr	0,__pdataBANK1
   814  004F34  EE10 F004          	lfsr	1,4
   815  004F38                     copy_data0:
   816  004F38  0009               	tblrd		*+
   817  004F3A  CFF5 FFEE          	movff	tablat,postinc0
   818  004F3E  50E5               	movf	postdec1,w,c
   819  004F40  50E1               	movf	fsr1l,w,c
   820  004F42  E1FA               	bnz	copy_data0
   821                           
   822                           ; Clear objects allocated to BIGRAM (1000 bytes)
   823  004F44  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   824  004F48  EE13 F0E8          	lfsr	1,1000
   825  004F4C                     clear_0:
   826  004F4C  6AEE               	clrf	postinc0,c
   827  004F4E  50E5               	movf	postdec1,w,c
   828  004F50  50E1               	movf	fsr1l,w,c
   829  004F52  E1FC               	bnz	clear_0
   830  004F54  50E2               	movf	fsr1h,w,c
   831  004F56  E1FA               	bnz	clear_0
   832                           
   833                           ; Clear objects allocated to BANK2 (200 bytes)
   834  004F58  EE02  F000         	lfsr	0,__pbssBANK2
   835  004F5C  0EC8               	movlw	200
   836  004F5E                     clear_1:
   837  004F5E  6AEE               	clrf	postinc0,c
   838  004F60  06E8               	decf	wreg,f,c
   839  004F62  E1FD               	bnz	clear_1
   840                           
   841                           ; Clear objects allocated to BANK1 (210 bytes)
   842  004F64  EE01  F000         	lfsr	0,__pbssBANK1
   843  004F68  0ED2               	movlw	210
   844  004F6A                     clear_2:
   845  004F6A  6AEE               	clrf	postinc0,c
   846  004F6C  06E8               	decf	wreg,f,c
   847  004F6E  E1FD               	bnz	clear_2
   848                           
   849                           ; Clear objects allocated to BANK0 (1 bytes)
   850  004F70  0100               	movlb	0
   851  004F72  6BFF               	clrf	__pbssBANK0& (0+255),b
   852                           
   853                           ; Clear objects allocated to COMRAM (5 bytes)
   854  004F74  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   855  004F76  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   856  004F78  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   857  004F7A  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   858  004F7C  6A55               	clrf	__pbssCOMRAM& (0+255),c
   859  004F7E                     end_of_initialization:
   860                           	opt callstack 0
   861  004F7E                     __end_of__initialization:
   862                           	opt callstack 0
   863  004F7E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   864  004F80  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   865  004F82  0E00               	movlw	low (__Lmediumconst shr (0+16))
   866  004F84  6EF8               	movwf	tblptru,c
   867  004F86  0100               	movlb	0
   868  004F88  EFA8  F025         	goto	_main	;jump to C main() function
   869                           
   870                           	psect	bssCOMRAM
   871  000055                     __pbssCOMRAM:
   872                           	opt callstack 0
   873  000055                     _flags:
   874                           	opt callstack 0
   875  000055                     	ds	2
   876  000057                     _mouse:
   877                           	opt callstack 0
   878  000057                     	ds	2
   879  000059                     comportamientoBasico@carroEspejeado:
   880                           	opt callstack 0
   881  000059                     	ds	1
   882                           
   883                           	psect	bssBANK0
   884  0000FF                     __pbssBANK0:
   885                           	opt callstack 0
   886  0000FF                     _llegoDestino:
   887                           	opt callstack 0
   888  0000FF                     	ds	1
   889                           
   890                           	psect	bssBANK1
   891  000100                     __pbssBANK1:
   892                           	opt callstack 0
   893  000100                     roundf@F525:
   894                           	opt callstack 0
   895  000100                     	ds	4
   896  000104                     floorf@F524:
   897                           	opt callstack 0
   898  000104                     	ds	4
   899  000108                     ___fpclassifyf@F463:
   900                           	opt callstack 0
   901  000108                     	ds	4
   902  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   903                           	opt callstack 0
   904  00010C                     	ds	4
   905  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   906                           	opt callstack 0
   907  000110                     	ds	4
   908  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   909                           	opt callstack 0
   910  000114                     	ds	4
   911  000118                     _oldSensorEnfrente:
   912                           	opt callstack 0
   913  000118                     	ds	4
   914  00011C                     _oldSensorIzquierda:
   915                           	opt callstack 0
   916  00011C                     	ds	4
   917  000120                     _oldSensorDerecha:
   918                           	opt callstack 0
   919  000120                     	ds	4
   920  000124                     _sensorEnfrente:
   921                           	opt callstack 0
   922  000124                     	ds	4
   923  000128                     _sensorIzquierda:
   924                           	opt callstack 0
   925  000128                     	ds	4
   926  00012C                     _sensorDerecha:
   927                           	opt callstack 0
   928  00012C                     	ds	4
   929  000130                     _nout:
   930                           	opt callstack 0
   931  000130                     	ds	2
   932  000132                     _width:
   933                           	opt callstack 0
   934  000132                     	ds	2
   935  000134                     _prec:
   936                           	opt callstack 0
   937  000134                     	ds	2
   938  000136                     PID@difAnt:
   939                           	opt callstack 0
   940  000136                     	ds	2
   941  000138                     comportamientoBasico@caminoEncontrado:
   942                           	opt callstack 0
   943  000138                     	ds	1
   944  000139                     comportamientoBasico@espejearCarroY:
   945                           	opt callstack 0
   946  000139                     	ds	1
   947  00013A                     _paredIzquierda:
   948                           	opt callstack 0
   949  00013A                     	ds	1
   950  00013B                     _paredDerecha:
   951                           	opt callstack 0
   952  00013B                     	ds	1
   953  00013C                     _paredEnfrente:
   954                           	opt callstack 0
   955  00013C                     	ds	1
   956  00013D                     _posicionDestinoY:
   957                           	opt callstack 0
   958  00013D                     	ds	1
   959  00013E                     _posicionDestinoX:
   960                           	opt callstack 0
   961  00013E                     	ds	1
   962  00013F                     _posicionCarroY:
   963                           	opt callstack 0
   964  00013F                     	ds	1
   965  000140                     _posicionCarroX:
   966                           	opt callstack 0
   967  000140                     	ds	1
   968  000141                     _dbuf:
   969                           	opt callstack 0
   970  000141                     	ds	80
   971  000191                     _buffer:
   972                           	opt callstack 0
   973  000191                     	ds	50
   974  0001C3                     comportamientoBasico@caminosRecorrer:
   975                           	opt callstack 0
   976  0001C3                     	ds	3
   977  0001C6                     comportamientoBasico@numMovimientosTotales:
   978                           	opt callstack 0
   979  0001C6                     	ds	2
   980  0001C8                     comportamientoBasico@numMovimientos:
   981                           	opt callstack 0
   982  0001C8                     	ds	2
   983  0001CA                     comportamientoBasico@avanceRectoLargo:
   984                           	opt callstack 0
   985  0001CA                     	ds	1
   986  0001CB                     comportamientoBasico@cambioOrientacionCarro:
   987                           	opt callstack 0
   988  0001CB                     	ds	1
   989  0001CC                     comportamientoBasico@caminoActual:
   990                           	opt callstack 0
   991  0001CC                     	ds	1
   992  0001CD                     comportamientoBasico@contCaminosRecorridos:
   993                           	opt callstack 0
   994  0001CD                     	ds	1
   995  0001CE                     comportamientoBasico@posicionInvCruce:
   996                           	opt callstack 0
   997  0001CE                     	ds	1
   998  0001CF                     comportamientoBasico@investigandoCruce:
   999                           	opt callstack 0
  1000  0001CF                     	ds	1
  1001  0001D0                     comportamientoBasico@cruceDetectado:
  1002                           	opt callstack 0
  1003  0001D0                     	ds	1
  1004  0001D1                     comportamientoBasico@mapear:
  1005                           	opt callstack 0
  1006  0001D1                     	ds	1
  1007                           
  1008                           	psect	dataBANK1
  1009  0001E9                     __pdataBANK1:
  1010                           	opt callstack 0
  1011  0001E9                     _pausa:
  1012                           	opt callstack 0
  1013  0001E9                     	ds	1
  1014  0001EA                     _SENSOR_PRIORIDAD_BAJA:
  1015                           	opt callstack 0
  1016  0001EA                     	ds	1
  1017  0001EB                     _SENSOR_PRIORIDAD_MEDIA:
  1018                           	opt callstack 0
  1019  0001EB                     	ds	1
  1020  0001EC                     _SENSOR_PRIORIDAD_ALTA:
  1021                           	opt callstack 0
  1022  0001EC                     	ds	1
  1023                           
  1024                           	psect	bssBANK2
  1025  000200                     __pbssBANK2:
  1026                           	opt callstack 0
  1027  000200                     comportamientoBasico@movimientosRealizados:
  1028                           	opt callstack 0
  1029  000200                     	ds	200
  1030                           
  1031                           	psect	bssBIGRAM
  1032  0002C8                     __pbssBIGRAM:
  1033                           	opt callstack 0
  1034  0002C8                     comportamientoBasico@caminoFinal:
  1035                           	opt callstack 0
  1036  0002C8                     	ds	1000
  1037                           
  1038                           	psect	cstackBANK1
  1039  0001D2                     __pcstackBANK1:
  1040                           	opt callstack 0
  1041  0001D2                     decidirDireccion@caminosRecorrer:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x0
  1045  0001D2                     	ds	2
  1046  0001D4                     decidirDireccion@investigandoCruce:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x2
  1050  0001D4                     	ds	2
  1051  0001D6                     decidirDireccion@posicionInvCruce:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x4
  1055  0001D6                     	ds	2
  1056  0001D8                     decidirDireccion@contCaminosRecorridos:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x6
  1060  0001D8                     	ds	2
  1061  0001DA                     decidirDireccion@caminoActual:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x8
  1065  0001DA                     	ds	2
  1066  0001DC                     decidirDireccion@cambioOrientacionCarro:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0xA
  1070  0001DC                     	ds	2
  1071  0001DE                     decidirDireccion@mapear:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xC
  1075  0001DE                     	ds	2
  1076  0001E0                     decidirDireccion@cruceDetectado:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0xE
  1080  0001E0                     	ds	2
  1081  0001E2                     decidirDireccion@avanceRectoLargo:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x10
  1085  0001E2                     	ds	2
  1086  0001E4                     ??_comportamientoBasico:
  1087                           
  1088                           ; 1 bytes @ 0x12
  1089  0001E4                     	ds	4
  1090  0001E8                     main@iniciado:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x16
  1094  0001E8                     	ds	1
  1095                           
  1096                           	psect	cstackBANK0
  1097  000060                     __pcstackBANK0:
  1098                           	opt callstack 0
  1099  000060                     ___fldiv@rem:
  1100                           	opt callstack 0
  1101  000060                     _roundf$1845:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x0
  1105  000060                     	ds	4
  1106  000064                     ___fldiv@sign:
  1107                           	opt callstack 0
  1108  000064                     roundf@e:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x4
  1112  000064                     	ds	1
  1113  000065                     ___fldiv@new_exp:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x5
  1117  000065                     	ds	1
  1118  000066                     _roundf$1844:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x6
  1122  000066                     	ds	1
  1123  000067                     ___fldiv@grs:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x7
  1127  000067                     	ds	3
  1128  00006A                     roundf@u:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 4 bytes @ 0xA
  1132  00006A                     	ds	1
  1133  00006B                     ___fldiv@bexp:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 1 bytes @ 0xB
  1137  00006B                     	ds	1
  1138  00006C                     ___fldiv@aexp:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 1 bytes @ 0xC
  1142  00006C                     	ds	1
  1143  00006D                     ??_floorf:
  1144                           
  1145                           ; 1 bytes @ 0xD
  1146  00006D                     	ds	1
  1147  00006E                     roundf@y:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 4 bytes @ 0xE
  1151  00006E                     	ds	4
  1152  000072                     ?___fltol:
  1153                           	opt callstack 0
  1154  000072                     ___fltol@f1:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x12
  1158  000072                     	ds	1
  1159  000073                     floorf@m:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x13
  1163  000073                     	ds	3
  1164  000076                     ??___fltol:
  1165                           
  1166                           ; 1 bytes @ 0x16
  1167  000076                     	ds	1
  1168  000077                     floorf@e:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x17
  1172  000077                     	ds	2
  1173  000079                     floorf@u:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x19
  1177  000079                     	ds	1
  1178  00007A                     ___fltol@sign1:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x1A
  1182  00007A                     	ds	1
  1183  00007B                     ___fltol@exp1:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x1B
  1187  00007B                     	ds	1
  1188  00007C                     pwmDuty@cicloTrabajo:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x1C
  1192  00007C                     	ds	1
  1193  00007D                     ?_efgtoa:
  1194                           	opt callstack 0
  1195  00007D                     efgtoa@fp:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x1D
  1199  00007D                     	ds	1
  1200  00007E                     pwmDuty@channel:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x1E
  1204  00007E                     	ds	1
  1205  00007F                     ??_pwmDuty:
  1206  00007F                     efgtoa@f:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x1F
  1210  00007F                     	ds	4
  1211  000083                     efgtoa@c:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x23
  1215  000083                     	ds	1
  1216  000084                     ??_efgtoa:
  1217  000084                     pwmDuty@duty:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x24
  1221  000084                     	ds	4
  1222  000088                     ??_PID:
  1223  000088                     moverCarrito@carroEspejeado:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x28
  1227  000088                     	ds	1
  1228  000089                     efgtoa@ou:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x29
  1232  000089                     	ds	1
  1233  00008A                     moverCarrito@avanceRectoLargo:
  1234                           	opt callstack 0
  1235  00008A                     _PID$1843:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x2A
  1239  00008A                     	ds	2
  1240  00008C                     ??_moverCarrito:
  1241                           
  1242                           ; 1 bytes @ 0x2C
  1243  00008C                     	ds	1
  1244  00008D                     _efgtoa$940:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x2D
  1248  00008D                     	ds	1
  1249  00008E                     PID@velocidadIzquierda:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x2E
  1253  00008E                     	ds	1
  1254  00008F                     _efgtoa$941:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x2F
  1258  00008F                     	ds	1
  1259  000090                     _PID$761:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x30
  1263  000090                     	ds	1
  1264  000091                     _efgtoa$945:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x31
  1268  000091                     	ds	1
  1269  000092                     PID@velocidadDerecha:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x32
  1273  000092                     	ds	1
  1274  000093                     _efgtoa$949:
  1275                           	opt callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x33
  1278  000093                     	ds	1
  1279  000094                     _PID$763:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x34
  1283  000094                     	ds	1
  1284  000095                     _efgtoa$950:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x35
  1288  000095                     	ds	1
  1289  000096                     PID@dif:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x36
  1293  000096                     	ds	1
  1294  000097                     _efgtoa$951:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x37
  1298  000097                     	ds	1
  1299  000098                     PID@error:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x38
  1303  000098                     	ds	1
  1304  000099                     efgtoa@t:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x39
  1308  000099                     	ds	1
  1309  00009A                     regresarPuntoPartida@movimientos:
  1310                           	opt callstack 0
  1311  00009A                     regresarAlCruce@movimientos:
  1312                           	opt callstack 0
  1313  00009A                     recorrerCaminoEncontrado@movimientos:
  1314                           	opt callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x3A
  1317  00009A                     	ds	1
  1318  00009B                     efgtoa@pp:
  1319                           	opt callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x3B
  1322  00009B                     	ds	1
  1323  00009C                     regresarPuntoPartida@numMovimientos:
  1324                           	opt callstack 0
  1325  00009C                     regresarAlCruce@numMovimientos:
  1326                           	opt callstack 0
  1327  00009C                     recorrerCaminoEncontrado@numMovimientos:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x3C
  1331  00009C                     	ds	1
  1332  00009D                     efgtoa@m:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x3D
  1336  00009D                     	ds	1
  1337  00009E                     regresarPuntoPartida@i:
  1338                           	opt callstack 0
  1339  00009E                     regresarAlCruce@i:
  1340                           	opt callstack 0
  1341  00009E                     recorrerCaminoEncontrado@i:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x3E
  1345  00009E                     	ds	1
  1346  00009F                     efgtoa@ne:
  1347                           	opt callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x3F
  1350  00009F                     	ds	2
  1351  0000A1                     efgtoa@d:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x41
  1355  0000A1                     	ds	2
  1356  0000A3                     efgtoa@sign:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x43
  1360  0000A3                     	ds	2
  1361  0000A5                     efgtoa@p:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x45
  1365  0000A5                     	ds	2
  1366  0000A7                     efgtoa@nmode:
  1367                           	opt callstack 0
  1368                           
  1369                           ; 1 bytes @ 0x47
  1370  0000A7                     	ds	1
  1371  0000A8                     efgtoa@w:
  1372                           	opt callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x48
  1375  0000A8                     	ds	2
  1376  0000AA                     efgtoa@mode:
  1377                           	opt callstack 0
  1378                           
  1379                           ; 1 bytes @ 0x4A
  1380  0000AA                     	ds	1
  1381  0000AB                     efgtoa@h:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 4 bytes @ 0x4B
  1385  0000AB                     	ds	4
  1386  0000AF                     efgtoa@l:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x4F
  1390  0000AF                     	ds	4
  1391  0000B3                     efgtoa@i:
  1392                           	opt callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x53
  1395  0000B3                     	ds	2
  1396  0000B5                     efgtoa@g:
  1397                           	opt callstack 0
  1398                           
  1399                           ; 4 bytes @ 0x55
  1400  0000B5                     	ds	4
  1401  0000B9                     efgtoa@e:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x59
  1405  0000B9                     	ds	2
  1406  0000BB                     efgtoa@n:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x5B
  1410  0000BB                     	ds	2
  1411  0000BD                     efgtoa@u:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 4 bytes @ 0x5D
  1415  0000BD                     	ds	4
  1416  0000C1                     ?_vfpfcnvrt:
  1417                           	opt callstack 0
  1418  0000C1                     vfpfcnvrt@fp:
  1419                           	opt callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x61
  1422  0000C1                     	ds	2
  1423  0000C3                     vfpfcnvrt@fmt:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x63
  1427  0000C3                     	ds	2
  1428  0000C5                     vfpfcnvrt@ap:
  1429                           	opt callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x65
  1432  0000C5                     	ds	2
  1433  0000C7                     ??_vfpfcnvrt:
  1434                           
  1435                           ; 1 bytes @ 0x67
  1436  0000C7                     	ds	4
  1437  0000CB                     vfpfcnvrt@ll:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 8 bytes @ 0x6B
  1441  0000CB                     	ds	8
  1442  0000D3                     _vfpfcnvrt$965:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x73
  1446  0000D3                     	ds	2
  1447  0000D5                     _vfpfcnvrt$971:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x75
  1451  0000D5                     	ds	2
  1452  0000D7                     vfpfcnvrt@f:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 4 bytes @ 0x77
  1456  0000D7                     	ds	4
  1457  0000DB                     vfpfcnvrt@ct:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 3 bytes @ 0x7B
  1461  0000DB                     	ds	3
  1462  0000DE                     vfpfcnvrt@c:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 1 bytes @ 0x7E
  1466  0000DE                     	ds	1
  1467  0000DF                     ?_vfprintf:
  1468                           	opt callstack 0
  1469  0000DF                     vfprintf@fp:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 2 bytes @ 0x7F
  1473  0000DF                     	ds	2
  1474  0000E1                     vfprintf@fmt:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x81
  1478  0000E1                     	ds	2
  1479  0000E3                     vfprintf@ap:
  1480                           	opt callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x83
  1483  0000E3                     	ds	2
  1484  0000E5                     vfprintf@cfmt:
  1485                           	opt callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x85
  1488  0000E5                     	ds	2
  1489  0000E7                     ?_sprintf:
  1490                           	opt callstack 0
  1491  0000E7                     sprintf@s:
  1492                           	opt callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x87
  1495  0000E7                     	ds	2
  1496  0000E9                     sprintf@fmt:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x89
  1500  0000E9                     	ds	10
  1501  0000F3                     sprintf@ap:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x93
  1505  0000F3                     	ds	2
  1506  0000F5                     sprintf@f:
  1507                           	opt callstack 0
  1508                           
  1509                           ; 6 bytes @ 0x95
  1510  0000F5                     	ds	6
  1511  0000FB                     ??_decidirDireccion:
  1512  0000FB                     visualizarPasosRealizados@numMovimientos:
  1513                           	opt callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x9B
  1516  0000FB                     	ds	2
  1517  0000FD                     ??_visualizarPasosRealizados:
  1518                           
  1519                           ; 1 bytes @ 0x9D
  1520  0000FD                     	ds	1
  1521  0000FE                     comportamientoBasico@direccionElegida:
  1522                           	opt callstack 0
  1523                           
  1524                           ; 1 bytes @ 0x9E
  1525  0000FE                     	ds	1
  1526                           
  1527                           	psect	cstackCOMRAM
  1528  000001                     __pcstackCOMRAM:
  1529                           	opt callstack 0
  1530  000001                     ??_antiRebote:
  1531  000001                     
  1532                           ; 1 bytes @ 0x0
  1533  000001                     	ds	2
  1534  000003                     antiRebote@pin:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x2
  1538  000003                     	ds	1
  1539  000004                     ??_boton:
  1540                           
  1541                           ; 1 bytes @ 0x3
  1542  000004                     	ds	2
  1543  000006                     ??_forzarParoAuto:
  1544  000006                     ??_configPwm:
  1545  000006                     ??_forzarReversa:
  1546  000006                     ??_forzarAvanceRecto:
  1547  000006                     ??_forzarGiroIzquierda:
  1548  000006                     ??_forzarGiroDerecha:
  1549  000006                     ?_strlen:
  1550                           	opt callstack 0
  1551  000006                     ?___fpclassifyf:
  1552                           	opt callstack 0
  1553  000006                     ?_isupper:
  1554                           	opt callstack 0
  1555  000006                     ?_isdigit:
  1556                           	opt callstack 0
  1557  000006                     ?_strncmp:
  1558                           	opt callstack 0
  1559  000006                     ?_isspace:
  1560                           	opt callstack 0
  1561  000006                     ?_dameLecturaAdc:
  1562                           	opt callstack 0
  1563  000006                     ?___wmul:
  1564                           	opt callstack 0
  1565  000006                     ?___awdiv:
  1566                           	opt callstack 0
  1567  000006                     ?___awmod:
  1568                           	opt callstack 0
  1569  000006                     ?___lwdiv:
  1570                           	opt callstack 0
  1571  000006                     ?___lmul:
  1572                           	opt callstack 0
  1573  000006                     ?___flneg:
  1574                           	opt callstack 0
  1575  000006                     ?___aodiv:
  1576                           	opt callstack 0
  1577  000006                     ?___aomod:
  1578                           	opt callstack 0
  1579  000006                     UART_write@dato:
  1580                           	opt callstack 0
  1581  000006                     limpiarMovimientos@movimientos:
  1582                           	opt callstack 0
  1583  000006                     combinarArreglos@movimientos:
  1584                           	opt callstack 0
  1585  000006                     ___wmul@multiplier:
  1586                           	opt callstack 0
  1587  000006                     ___awdiv@dividend:
  1588                           	opt callstack 0
  1589  000006                     ___awmod@dividend:
  1590                           	opt callstack 0
  1591  000006                     ___lwdiv@dividend:
  1592                           	opt callstack 0
  1593  000006                     isdigit@c:
  1594                           	opt callstack 0
  1595  000006                     isspace@c:
  1596                           	opt callstack 0
  1597  000006                     isupper@c:
  1598                           	opt callstack 0
  1599  000006                     fputc@c:
  1600                           	opt callstack 0
  1601  000006                     strcpy@dest:
  1602                           	opt callstack 0
  1603  000006                     strlen@s:
  1604                           	opt callstack 0
  1605  000006                     strncmp@_l:
  1606                           	opt callstack 0
  1607  000006                     ___lmul@multiplier:
  1608                           	opt callstack 0
  1609  000006                     ___fleq@ff1:
  1610                           	opt callstack 0
  1611  000006                     ___flneg@f1:
  1612                           	opt callstack 0
  1613  000006                     ___fpclassifyf@x:
  1614                           	opt callstack 0
  1615  000006                     ___aodiv@dividend:
  1616                           	opt callstack 0
  1617  000006                     ___aomod@dividend:
  1618                           	opt callstack 0
  1619                           
  1620                           ; 8 bytes @ 0x5
  1621  000006                     	ds	1
  1622  000007                     UART_printf@cadena:
  1623                           	opt callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x6
  1626  000007                     	ds	1
  1627  000008                     ??_mover:
  1628  000008                     ??_isupper:
  1629  000008                     ??_isdigit:
  1630  000008                     ??_isspace:
  1631  000008                     ??_dameLecturaAdc:
  1632  000008                     configPwm@channel:
  1633                           	opt callstack 0
  1634  000008                     limpiarMovimientos@numMovimientos:
  1635                           	opt callstack 0
  1636  000008                     combinarArreglos@caminoFinal:
  1637                           	opt callstack 0
  1638  000008                     ___wmul@multiplicand:
  1639                           	opt callstack 0
  1640  000008                     ___awdiv@divisor:
  1641                           	opt callstack 0
  1642  000008                     ___awmod@divisor:
  1643                           	opt callstack 0
  1644  000008                     ___lwdiv@divisor:
  1645                           	opt callstack 0
  1646  000008                     fputc@fp:
  1647                           	opt callstack 0
  1648  000008                     strcpy@src:
  1649                           	opt callstack 0
  1650  000008                     strlen@a:
  1651                           	opt callstack 0
  1652  000008                     strncmp@_r:
  1653                           	opt callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x7
  1656  000008                     	ds	1
  1657  000009                     ??_mostrarDireccionElegida:
  1658                           
  1659                           ; 1 bytes @ 0x8
  1660  000009                     	ds	1
  1661  00000A                     ??_fputc:
  1662  00000A                     ??___fpclassifyf:
  1663  00000A                     ??_strcpy:
  1664  00000A                     dameLecturaAdc@canalLeer:
  1665                           	opt callstack 0
  1666  00000A                     ___awdiv@counter:
  1667                           	opt callstack 0
  1668  00000A                     ___awmod@counter:
  1669                           	opt callstack 0
  1670  00000A                     ___lwdiv@counter:
  1671                           	opt callstack 0
  1672  00000A                     combinarArreglos@numMovimientos:
  1673                           	opt callstack 0
  1674  00000A                     ___wmul@product:
  1675                           	opt callstack 0
  1676  00000A                     strncmp@n:
  1677                           	opt callstack 0
  1678  00000A                     ___lmul@multiplicand:
  1679                           	opt callstack 0
  1680  00000A                     ___fleq@ff2:
  1681                           	opt callstack 0
  1682                           
  1683                           ; 4 bytes @ 0x9
  1684  00000A                     	ds	1
  1685  00000B                     seLlegoAlDestino@llegoDestino:
  1686                           	opt callstack 0
  1687  00000B                     mostrarDireccionElegida@direccionElegida:
  1688                           	opt callstack 0
  1689  00000B                     ___awdiv@sign:
  1690                           	opt callstack 0
  1691  00000B                     ___awmod@sign:
  1692                           	opt callstack 0
  1693  00000B                     ___lwdiv@quotient:
  1694                           	opt callstack 0
  1695                           
  1696                           ; 2 bytes @ 0xA
  1697  00000B                     	ds	1
  1698  00000C                     ??_strncmp:
  1699  00000C                     ?_tolower:
  1700                           	opt callstack 0
  1701  00000C                     _isspace$1475:
  1702                           	opt callstack 0
  1703  00000C                     limpiarMovimientos@i:
  1704                           	opt callstack 0
  1705  00000C                     combinarArreglos@numMovimientosFinal:
  1706                           	opt callstack 0
  1707  00000C                     ___awdiv@quotient:
  1708                           	opt callstack 0
  1709  00000C                     strcpy@s:
  1710                           	opt callstack 0
  1711  00000C                     tolower@c:
  1712                           	opt callstack 0
  1713                           
  1714                           ; 2 bytes @ 0xB
  1715  00000C                     	ds	1
  1716  00000D                     ?_atoi:
  1717                           	opt callstack 0
  1718  00000D                     ?___xxtofl:
  1719                           	opt callstack 0
  1720  00000D                     atoi@s:
  1721                           	opt callstack 0
  1722  00000D                     strncmp@l:
  1723                           	opt callstack 0
  1724  00000D                     ___xxtofl@val:
  1725                           	opt callstack 0
  1726                           
  1727                           ; 4 bytes @ 0xC
  1728  00000D                     	ds	1
  1729  00000E                     ??_combinarArreglos:
  1730  00000E                     ??_tolower:
  1731  00000E                     ??___fleq:
  1732  00000E                     ___fpclassifyf@e:
  1733                           	opt callstack 0
  1734  00000E                     strcpy@d:
  1735                           	opt callstack 0
  1736  00000E                     ___lmul@product:
  1737                           	opt callstack 0
  1738  00000E                     ___aodiv@divisor:
  1739                           	opt callstack 0
  1740  00000E                     ___aomod@divisor:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 8 bytes @ 0xD
  1744  00000E                     	ds	1
  1745  00000F                     ??_atoi:
  1746  00000F                     fputs@s:
  1747                           	opt callstack 0
  1748  00000F                     strncmp@r:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 2 bytes @ 0xE
  1752  00000F                     	ds	1
  1753  000010                     combinarArreglos@i:
  1754                           	opt callstack 0
  1755  000010                     ___fpclassifyf@u:
  1756                           	opt callstack 0
  1757                           
  1758                           ; 4 bytes @ 0xF
  1759  000010                     	ds	1
  1760  000011                     ??___xxtofl:
  1761  000011                     fputs@fp:
  1762                           	opt callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x10
  1765  000011                     	ds	1
  1766  000012                     ?___aldiv:
  1767                           	opt callstack 0
  1768  000012                     caminoCorrecto@movimientos:
  1769                           	opt callstack 0
  1770  000012                     _tolower$1574:
  1771                           	opt callstack 0
  1772  000012                     ___aldiv@dividend:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 4 bytes @ 0x11
  1776  000012                     	ds	1
  1777  000013                     fputs@c:
  1778                           	opt callstack 0
  1779  000013                     atoi@neg:
  1780                           	opt callstack 0
  1781                           
  1782                           ; 2 bytes @ 0x12
  1783  000013                     	ds	1
  1784  000014                     caminoCorrecto@caminoFinal:
  1785                           	opt callstack 0
  1786  000014                     fputs@i:
  1787                           	opt callstack 0
  1788                           
  1789                           ; 2 bytes @ 0x13
  1790  000014                     	ds	1
  1791  000015                     ___xxtofl@sign:
  1792                           	opt callstack 0
  1793  000015                     _atoi$1444:
  1794                           	opt callstack 0
  1795                           
  1796                           ; 2 bytes @ 0x14
  1797  000015                     	ds	1
  1798  000016                     ?_pad:
  1799                           	opt callstack 0
  1800  000016                     ___aodiv@counter:
  1801                           	opt callstack 0
  1802  000016                     ___aomod@counter:
  1803                           	opt callstack 0
  1804  000016                     ___xxtofl@exp:
  1805                           	opt callstack 0
  1806  000016                     caminoCorrecto@numMovimientos:
  1807                           	opt callstack 0
  1808  000016                     pad@fp:
  1809                           	opt callstack 0
  1810  000016                     ___aldiv@divisor:
  1811                           	opt callstack 0
  1812                           
  1813                           ; 4 bytes @ 0x15
  1814  000016                     	ds	1
  1815  000017                     ___aodiv@sign:
  1816                           	opt callstack 0
  1817  000017                     ___aomod@sign:
  1818                           	opt callstack 0
  1819  000017                     _atoi$1446:
  1820                           	opt callstack 0
  1821  000017                     ___xxtofl@arg:
  1822                           	opt callstack 0
  1823                           
  1824                           ; 4 bytes @ 0x16
  1825  000017                     	ds	1
  1826  000018                     ?_abs:
  1827                           	opt callstack 0
  1828  000018                     caminoCorrecto@numMovimientosFinal:
  1829                           	opt callstack 0
  1830  000018                     pad@buf:
  1831                           	opt callstack 0
  1832  000018                     abs@a:
  1833                           	opt callstack 0
  1834  000018                     ___aodiv@quotient:
  1835                           	opt callstack 0
  1836                           
  1837                           ; 8 bytes @ 0x17
  1838  000018                     	ds	1
  1839  000019                     _atoi$1445:
  1840                           	opt callstack 0
  1841                           
  1842                           ; 1 bytes @ 0x18
  1843  000019                     	ds	1
  1844  00001A                     ??_abs:
  1845  00001A                     caminoCorrecto@caminoActual:
  1846                           	opt callstack 0
  1847  00001A                     ___aldiv@counter:
  1848                           	opt callstack 0
  1849  00001A                     pad@p:
  1850                           	opt callstack 0
  1851  00001A                     atoi@n:
  1852                           	opt callstack 0
  1853                           
  1854                           ; 2 bytes @ 0x19
  1855  00001A                     	ds	1
  1856  00001B                     ?___flmul:
  1857                           	opt callstack 0
  1858  00001B                     ?_dameDistancia:
  1859                           	opt callstack 0
  1860  00001B                     ___aldiv@sign:
  1861                           	opt callstack 0
  1862  00001B                     ___flmul@b:
  1863                           	opt callstack 0
  1864                           
  1865                           ; 4 bytes @ 0x1A
  1866  00001B                     	ds	1
  1867  00001C                     ??_pad:
  1868  00001C                     ___aldiv@quotient:
  1869                           	opt callstack 0
  1870                           
  1871                           ; 4 bytes @ 0x1B
  1872  00001C                     	ds	1
  1873  00001D                     pad@i:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x1C
  1877  00001D                     	ds	2
  1878  00001F                     ??_dameDistancia:
  1879  00001F                     pad@w:
  1880                           	opt callstack 0
  1881  00001F                     ___flmul@a:
  1882                           	opt callstack 0
  1883                           
  1884                           ; 4 bytes @ 0x1E
  1885  00001F                     	ds	1
  1886  000020                     ?_map:
  1887                           	opt callstack 0
  1888  000020                     map@x:
  1889                           	opt callstack 0
  1890  000020                     UART_init@BAUD:
  1891                           	opt callstack 0
  1892                           
  1893                           ; 4 bytes @ 0x1F
  1894  000020                     	ds	1
  1895  000021                     ?_ctoa:
  1896                           	opt callstack 0
  1897  000021                     ?_dtoa:
  1898                           	opt callstack 0
  1899  000021                     dameDistancia@numeroSensor:
  1900                           	opt callstack 0
  1901  000021                     ctoa@fp:
  1902                           	opt callstack 0
  1903  000021                     dtoa@fp:
  1904                           	opt callstack 0
  1905                           
  1906                           ; 2 bytes @ 0x20
  1907  000021                     	ds	1
  1908  000022                     dameDistancia@distancia:
  1909                           	opt callstack 0
  1910                           
  1911                           ; 4 bytes @ 0x21
  1912  000022                     	ds	1
  1913  000023                     ??___flmul:
  1914  000023                     ctoa@c:
  1915                           	opt callstack 0
  1916  000023                     dtoa@d:
  1917                           	opt callstack 0
  1918                           
  1919                           ; 8 bytes @ 0x22
  1920  000023                     	ds	1
  1921  000024                     ctoa@w:
  1922                           	opt callstack 0
  1923  000024                     map@in_min:
  1924                           	opt callstack 0
  1925                           
  1926                           ; 4 bytes @ 0x23
  1927  000024                     	ds	2
  1928  000026                     dameDistancia@conteo:
  1929                           	opt callstack 0
  1930                           
  1931                           ; 2 bytes @ 0x25
  1932  000026                     	ds	1
  1933  000027                     ___flmul@sign:
  1934                           	opt callstack 0
  1935                           
  1936                           ; 1 bytes @ 0x26
  1937  000027                     	ds	1
  1938  000028                     ___flmul@aexp:
  1939                           	opt callstack 0
  1940  000028                     map@in_max:
  1941                           	opt callstack 0
  1942  000028                     _UART_init$1842:
  1943                           	opt callstack 0
  1944                           
  1945                           ; 4 bytes @ 0x27
  1946  000028                     	ds	1
  1947  000029                     ___flmul@grs:
  1948                           	opt callstack 0
  1949                           
  1950                           ; 4 bytes @ 0x28
  1951  000029                     	ds	2
  1952  00002B                     ??_dtoa:
  1953                           
  1954                           ; 1 bytes @ 0x2A
  1955  00002B                     	ds	1
  1956  00002C                     map@out_min:
  1957                           	opt callstack 0
  1958                           
  1959                           ; 4 bytes @ 0x2B
  1960  00002C                     	ds	1
  1961  00002D                     ___flmul@bexp:
  1962                           	opt callstack 0
  1963                           
  1964                           ; 1 bytes @ 0x2C
  1965  00002D                     	ds	1
  1966  00002E                     ___flmul@prod:
  1967                           	opt callstack 0
  1968                           
  1969                           ; 4 bytes @ 0x2D
  1970  00002E                     	ds	2
  1971  000030                     map@out_max:
  1972                           	opt callstack 0
  1973                           
  1974                           ; 4 bytes @ 0x2F
  1975  000030                     	ds	2
  1976  000032                     ___flmul@temp:
  1977                           	opt callstack 0
  1978                           
  1979                           ; 2 bytes @ 0x31
  1980  000032                     	ds	1
  1981  000033                     _dtoa$917:
  1982                           	opt callstack 0
  1983                           
  1984                           ; 2 bytes @ 0x32
  1985  000033                     	ds	1
  1986  000034                     ?___fladd:
  1987                           	opt callstack 0
  1988  000034                     ___flge@ff1:
  1989                           	opt callstack 0
  1990  000034                     ___fladd@b:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 4 bytes @ 0x33
  1994  000034                     	ds	1
  1995  000035                     dtoa@p:
  1996                           	opt callstack 0
  1997                           
  1998                           ; 2 bytes @ 0x34
  1999  000035                     	ds	2
  2000  000037                     dtoa@w:
  2001                           	opt callstack 0
  2002                           
  2003                           ; 2 bytes @ 0x36
  2004  000037                     	ds	1
  2005  000038                     ___flge@ff2:
  2006                           	opt callstack 0
  2007  000038                     ___fladd@a:
  2008                           	opt callstack 0
  2009                           
  2010                           ; 4 bytes @ 0x37
  2011  000038                     	ds	1
  2012  000039                     dtoa@s:
  2013                           	opt callstack 0
  2014                           
  2015                           ; 2 bytes @ 0x38
  2016  000039                     	ds	2
  2017  00003B                     dtoa@n:
  2018                           	opt callstack 0
  2019                           
  2020                           ; 8 bytes @ 0x3A
  2021  00003B                     	ds	1
  2022  00003C                     ??___fladd:
  2023  00003C                     ??___flge:
  2024                           
  2025                           ; 1 bytes @ 0x3B
  2026  00003C                     	ds	4
  2027  000040                     ___fladd@signs:
  2028                           	opt callstack 0
  2029  000040                     hayCruce@caminosRecorrer:
  2030                           	opt callstack 0
  2031                           
  2032                           ; 2 bytes @ 0x3F
  2033  000040                     	ds	1
  2034  000041                     ___fladd@aexp:
  2035                           	opt callstack 0
  2036                           
  2037                           ; 1 bytes @ 0x40
  2038  000041                     	ds	1
  2039  000042                     hayCruce@investigandoCruce:
  2040                           	opt callstack 0
  2041  000042                     ___fladd@bexp:
  2042                           	opt callstack 0
  2043                           
  2044                           ; 1 bytes @ 0x41
  2045  000042                     	ds	1
  2046  000043                     hayCruce@contCaminos:
  2047                           	opt callstack 0
  2048  000043                     ___fladd@grs:
  2049                           	opt callstack 0
  2050  000043                     dtoa@i:
  2051                           	opt callstack 0
  2052                           
  2053                           ; 2 bytes @ 0x42
  2054  000043                     	ds	1
  2055  000044                     ?___fldiv:
  2056                           	opt callstack 0
  2057  000044                     ?___flsub:
  2058                           	opt callstack 0
  2059  000044                     ___flsub@b:
  2060                           	opt callstack 0
  2061  000044                     ___fldiv@b:
  2062                           	opt callstack 0
  2063                           
  2064                           ; 4 bytes @ 0x43
  2065  000044                     	ds	4
  2066  000048                     ___flsub@a:
  2067                           	opt callstack 0
  2068  000048                     ___fldiv@a:
  2069                           	opt callstack 0
  2070                           
  2071                           ; 4 bytes @ 0x47
  2072  000048                     	ds	4
  2073  00004C                     ??___fldiv:
  2074  00004C                     ?_roundf:
  2075                           	opt callstack 0
  2076  00004C                     roundf@x:
  2077                           	opt callstack 0
  2078                           
  2079                           ; 4 bytes @ 0x4B
  2080  00004C                     	ds	4
  2081  000050                     ??_roundf:
  2082  000050                     ?_floorf:
  2083                           	opt callstack 0
  2084  000050                     floorf@x:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 4 bytes @ 0x4F
  2088  000050                     	ds	4
  2089  000054                     moverCarrito@espejearCarroY:
  2090                           	opt callstack 0
  2091  000054                     decidirDireccion@direccionElegida:
  2092                           	opt callstack 0
  2093                           
  2094                           ; 1 bytes @ 0x53
  2095  000054                     	ds	1
  2096  000055                     
  2097                           ; 1 bytes @ 0x54
  2098 ;;
  2099 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2100 ;;
  2101 ;; *************** function _main *****************
  2102 ;; Defined at:
  2103 ;;		line 1335 in file "main.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  numMovimient    2    0        int 
  2108 ;;  iniciado        1   22[BANK1 ] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2118 ;;      Params:         0       0       0       0       0       0       0       0       0
  2119 ;;      Locals:         0       0       3       0       0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2121 ;;      Totals:         0       0       3       0       0       0       0       0       0
  2122 ;;Total ram usage:        3 bytes
  2123 ;; Hardware stack levels required when called:   12
  2124 ;; This function calls:
  2125 ;;		_UART_init
  2126 ;;		_comportamientoBasico
  2127 ;;		_configPwm
  2128 ;;		_configurarAdc
  2129 ;;		_forzarParoAuto
  2130 ;;		_inicializarComportamientoBasico
  2131 ;;		_visualizarPasosRealizados
  2132 ;; This function is called by:
  2133 ;;		Startup code after reset
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text0
  2138  004B50                     __ptext0:
  2139                           	opt callstack 0
  2140  004B50                     _main:
  2141                           	opt callstack 19
  2142  004B50                     
  2143                           ;main.c: 1337:     T_BOOL iniciado = 0;
  2144  004B50  0E00               	movlw	0
  2145  004B52  0101               	movlb	1	; () banked
  2146  004B54  6FE8               	movwf	main@iniciado& (0+255),b
  2147  004B56                     
  2148                           ; BSR set to: 1
  2149                           ;main.c: 1341:     INTCONbits.GIE = 1;
  2150  004B56  8EF2               	bsf	242,7,c	;volatile
  2151  004B58                     
  2152                           ; BSR set to: 1
  2153                           ;main.c: 1342:     INTCONbits.INT0IE = 1;
  2154  004B58  88F2               	bsf	242,4,c	;volatile
  2155  004B5A                     
  2156                           ; BSR set to: 1
  2157                           ;main.c: 1343:     INTCON2bits.INTEDG0 = 1;
  2158  004B5A  8CF1               	bsf	241,6,c	;volatile
  2159  004B5C                     
  2160                           ; BSR set to: 1
  2161                           ;main.c: 1345:     TRISD3 = 0;
  2162  004B5C  9695               	bcf	3989,3,c	;volatile
  2163  004B5E                     
  2164                           ; BSR set to: 1
  2165                           ;main.c: 1346:     TRISB1 = 1;
  2166  004B5E  8293               	bsf	3987,1,c	;volatile
  2167  004B60                     
  2168                           ; BSR set to: 1
  2169                           ;main.c: 1347:     TRISB2 = 1;
  2170  004B60  8493               	bsf	3987,2,c	;volatile
  2171  004B62                     
  2172                           ; BSR set to: 1
  2173                           ;main.c: 1348:     TRISB3 = 1;
  2174  004B62  8693               	bsf	3987,3,c	;volatile
  2175  004B64                     
  2176                           ; BSR set to: 1
  2177                           ;main.c: 1350:     TRISB4 = 0;
  2178  004B64  9893               	bcf	3987,4,c	;volatile
  2179  004B66                     
  2180                           ; BSR set to: 1
  2181                           ;main.c: 1351:     TRISB5 = 0;
  2182  004B66  9A93               	bcf	3987,5,c	;volatile
  2183  004B68                     
  2184                           ; BSR set to: 1
  2185                           ;main.c: 1352:     TRISB6 = 0;
  2186  004B68  9C93               	bcf	3987,6,c	;volatile
  2187  004B6A                     
  2188                           ; BSR set to: 1
  2189                           ;main.c: 1353:     TRISB7 = 0;
  2190  004B6A  9E93               	bcf	3987,7,c	;volatile
  2191  004B6C                     
  2192                           ; BSR set to: 1
  2193                           ;main.c: 1355:     TRISDbits.RD2 = 0;
  2194  004B6C  9495               	bcf	149,2,c	;volatile
  2195  004B6E                     
  2196                           ; BSR set to: 1
  2197                           ;main.c: 1356:     TRISB0 = 1;
  2198  004B6E  8093               	bsf	3987,0,c	;volatile
  2199  004B70                     
  2200                           ; BSR set to: 1
  2201                           ;main.c: 1358:     LATD3 = 0;
  2202  004B70  968C               	bcf	3980,3,c	;volatile
  2203  004B72                     
  2204                           ; BSR set to: 1
  2205                           ;main.c: 1359:     LATB4 = 0;
  2206  004B72  988A               	bcf	3978,4,c	;volatile
  2207  004B74                     
  2208                           ; BSR set to: 1
  2209                           ;main.c: 1360:     LATB5 = 0;
  2210  004B74  9A8A               	bcf	3978,5,c	;volatile
  2211  004B76                     
  2212                           ; BSR set to: 1
  2213                           ;main.c: 1361:     LATB6 = 0;
  2214  004B76  9C8A               	bcf	3978,6,c	;volatile
  2215  004B78                     
  2216                           ; BSR set to: 1
  2217                           ;main.c: 1362:     LATB7 = 0;
  2218  004B78  9E8A               	bcf	3978,7,c	;volatile
  2219  004B7A                     
  2220                           ; BSR set to: 1
  2221                           ;main.c: 1363:     LATD2 = 0;
  2222  004B7A  948C               	bcf	3980,2,c	;volatile
  2223                           
  2224                           ;main.c: 1366:     T1CON = 0b00000000;
  2225  004B7C  0E00               	movlw	0
  2226  004B7E  6ECD               	movwf	205,c	;volatile
  2227  004B80                     
  2228                           ; BSR set to: 1
  2229                           ;main.c: 1368:     configPwm(1);
  2230  004B80  0E01               	movlw	1
  2231  004B82  EC59  F029         	call	_configPwm
  2232  004B86                     
  2233                           ;main.c: 1369:     configPwm(2);
  2234  004B86  0E02               	movlw	2
  2235  004B88  EC59  F029         	call	_configPwm
  2236  004B8C                     
  2237                           ;main.c: 1370:     configurarAdc();
  2238  004B8C  ECD5  F02B         	call	_configurarAdc	;wreg free
  2239  004B90                     
  2240                           ;main.c: 1372:     UART_init(9600);
  2241  004B90  0E80               	movlw	128
  2242  004B92  6E20               	movwf	UART_init@BAUD^0,c
  2243  004B94  0E25               	movlw	37
  2244  004B96  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2245  004B98  0E00               	movlw	0
  2246  004B9A  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2247  004B9C  0E00               	movlw	0
  2248  004B9E  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2249  004BA0  ECF0  F026         	call	_UART_init	;wreg free
  2250  004BA4                     l10839:
  2251                           
  2252                           ;main.c: 1377:         if (!pausa) {
  2253  004BA4  0101               	movlb	1	; () banked
  2254  004BA6  51E9               	movf	_pausa& (0+255),w,b
  2255  004BA8  A4D8               	btfss	status,2,c
  2256  004BAA  EFD9  F025         	goto	u11991
  2257  004BAE  EFDB  F025         	goto	u11990
  2258  004BB2                     u11991:
  2259  004BB2  EFED  F025         	goto	l10855
  2260  004BB6                     u11990:
  2261  004BB6                     
  2262                           ; BSR set to: 1
  2263                           ;main.c: 1379:             if (!iniciado) {
  2264  004BB6  51E8               	movf	main@iniciado& (0+255),w,b
  2265  004BB8  A4D8               	btfss	status,2,c
  2266  004BBA  EFE1  F025         	goto	u12001
  2267  004BBE  EFE3  F025         	goto	u12000
  2268  004BC2                     u12001:
  2269  004BC2  EFE7  F025         	goto	l10851
  2270  004BC6                     u12000:
  2271  004BC6                     
  2272                           ; BSR set to: 1
  2273                           ;main.c: 1380:                 iniciado = 1;
  2274  004BC6  0E01               	movlw	1
  2275  004BC8  6FE8               	movwf	main@iniciado& (0+255),b
  2276  004BCA                     
  2277                           ; BSR set to: 1
  2278                           ;main.c: 1381:                 inicializarComportamientoBasico();
  2279  004BCA  ECA9  F029         	call	_inicializarComportamientoBasico	;wreg free
  2280  004BCE                     l10851:
  2281                           
  2282                           ;main.c: 1392:             comportamientoBasico();
  2283  004BCE  ECE0  F00D         	call	_comportamientoBasico	;wreg free
  2284  004BD2                     
  2285                           ;main.c: 1393:             forzarParoAuto();
  2286  004BD2  ECB5  F02B         	call	_forzarParoAuto	;wreg free
  2287                           
  2288                           ;main.c: 1395:         } else {
  2289  004BD6  EFD2  F025         	goto	l10839
  2290  004BDA                     l10855:
  2291                           
  2292                           ; BSR set to: 1
  2293                           ;main.c: 1397:             iniciado = 0;
  2294  004BDA  0E00               	movlw	0
  2295  004BDC  6FE8               	movwf	main@iniciado& (0+255),b
  2296  004BDE  EFD2  F025         	goto	l10839
  2297  004BE2  EF07  F000         	goto	start
  2298  004BE6                     __end_of_main:
  2299                           	opt callstack 0
  2300                           
  2301 ;; *************** function _visualizarPasosRealizados *****************
  2302 ;; Defined at:
  2303 ;;		line 196 in file "main.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  numMovimient    2  155[BANK0 ] unsigned int 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2317 ;;      Params:         0       2       0       0       0       0       0       0       0
  2318 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2319 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2320 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2321 ;;Total ram usage:        4 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:   10
  2324 ;; This function calls:
  2325 ;;		_UART_printf
  2326 ;;		_sprintf
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text1
  2333  0048BA                     __ptext1:
  2334                           	opt callstack 0
  2335  0048BA                     _visualizarPasosRealizados:
  2336                           	opt callstack 20
  2337  0048BA                     
  2338                           ;main.c: 198:     switch (mouse.curr_state) {
  2339  0048BA  EF7F  F024         	goto	l10471
  2340  0048BE                     l10461:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;main.c: 200:             UART_printf("Enfrente\n");
  2344  0048BE  0ED3               	movlw	low STR_7
  2345  0048C0  6E07               	movwf	UART_printf@cadena^0,c
  2346  0048C2  0E7F               	movlw	high STR_7
  2347  0048C4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2348  0048C6  EC27  F028         	call	_UART_printf	;wreg free
  2349                           
  2350                           ;main.c: 201:             break;
  2351  0048CA  EF9D  F024         	goto	l10473
  2352  0048CE                     l10463:
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;main.c: 204:             UART_printf("Izquierda\n");
  2356  0048CE  0EC8               	movlw	low STR_8
  2357  0048D0  6E07               	movwf	UART_printf@cadena^0,c
  2358  0048D2  0E7F               	movlw	high STR_8
  2359  0048D4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2360  0048D6  EC27  F028         	call	_UART_printf	;wreg free
  2361                           
  2362                           ;main.c: 205:             break;
  2363  0048DA  EF9D  F024         	goto	l10473
  2364  0048DE                     l10465:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;main.c: 208:             UART_printf("Derecha\n");
  2368  0048DE  0EDD               	movlw	low STR_9
  2369  0048E0  6E07               	movwf	UART_printf@cadena^0,c
  2370  0048E2  0E7F               	movlw	high STR_9
  2371  0048E4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2372  0048E6  EC27  F028         	call	_UART_printf	;wreg free
  2373                           
  2374                           ;main.c: 209:             break;
  2375  0048EA  EF9D  F024         	goto	l10473
  2376  0048EE                     l10467:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;main.c: 212:             UART_printf("Alto\n");
  2380  0048EE  0EE6               	movlw	low STR_10
  2381  0048F0  6E07               	movwf	UART_printf@cadena^0,c
  2382  0048F2  0E7F               	movlw	high STR_10
  2383  0048F4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2384  0048F6  EC27  F028         	call	_UART_printf	;wreg free
  2385                           
  2386                           ;main.c: 213:             break;
  2387  0048FA  EF9D  F024         	goto	l10473
  2388  0048FE                     l10471:
  2389  0048FE  5057               	movf	_mouse^0,w,c
  2390  004900  0100               	movlb	0	; () banked
  2391  004902  6FFD               	movwf	??_visualizarPasosRealizados& (0+255),b
  2392  004904  6BFE               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2393                           
  2394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2395                           ; Switch size 1, requested type "simple"
  2396                           ; Number of cases is 1, Range of values is 0 to 0
  2397                           ; switch strategies available:
  2398                           ; Name         Instructions Cycles
  2399                           ; simple_byte            4     3 (average)
  2400                           ;	Chosen strategy is simple_byte
  2401  004906  51FE               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2402  004908  0A00               	xorlw	0	; case 0
  2403  00490A  B4D8               	btfsc	status,2,c
  2404  00490C  EF8A  F024         	goto	l11167
  2405  004910  EF9D  F024         	goto	l10473
  2406  004914                     l11167:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ; Switch size 1, requested type "simple"
  2410                           ; Number of cases is 4, Range of values is 1 to 4
  2411                           ; switch strategies available:
  2412                           ; Name         Instructions Cycles
  2413                           ; simple_byte           13     7 (average)
  2414                           ;	Chosen strategy is simple_byte
  2415  004914  51FD               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2416  004916  0A01               	xorlw	1	; case 1
  2417  004918  B4D8               	btfsc	status,2,c
  2418  00491A  EF5F  F024         	goto	l10461
  2419  00491E  0A03               	xorlw	3	; case 2
  2420  004920  B4D8               	btfsc	status,2,c
  2421  004922  EF67  F024         	goto	l10463
  2422  004926  0A01               	xorlw	1	; case 3
  2423  004928  B4D8               	btfsc	status,2,c
  2424  00492A  EF6F  F024         	goto	l10465
  2425  00492E  0A07               	xorlw	7	; case 4
  2426  004930  B4D8               	btfsc	status,2,c
  2427  004932  EF77  F024         	goto	l10467
  2428  004936  EF9D  F024         	goto	l10473
  2429  00493A                     l10473:
  2430                           
  2431                           ;main.c: 216:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2432  00493A  0E91               	movlw	low _buffer
  2433  00493C  0100               	movlb	0	; () banked
  2434  00493E  6FE7               	movwf	sprintf@s& (0+255),b
  2435  004940  0E01               	movlw	high _buffer
  2436  004942  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2437  004944  0ECB               	movlw	low STR_11
  2438  004946  6FE9               	movwf	sprintf@fmt& (0+255),b
  2439  004948  0E7E               	movlw	high STR_11
  2440  00494A  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2441  00494C  C0FB  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2442  004950  C0FC  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2443  004954  EC07  F029         	call	_sprintf	;wreg free
  2444  004958                     
  2445                           ;main.c: 217:     UART_printf(buffer);
  2446  004958  0E91               	movlw	low _buffer
  2447  00495A  6E07               	movwf	UART_printf@cadena^0,c
  2448  00495C  0E01               	movlw	high _buffer
  2449  00495E  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2450  004960  EC27  F028         	call	_UART_printf	;wreg free
  2451  004964  0012               	return		;funcret
  2452  004966                     __end_of_visualizarPasosRealizados:
  2453                           	opt callstack 0
  2454                           
  2455 ;; *************** function _inicializarComportamientoBasico *****************
  2456 ;; Defined at:
  2457 ;;		line 235 in file "main.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    6
  2478 ;; This function calls:
  2479 ;;		_dameDistancia
  2480 ;;		_velocidadEstandar
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text2
  2487  005352                     __ptext2:
  2488                           	opt callstack 0
  2489  005352                     _inicializarComportamientoBasico:
  2490                           	opt callstack 24
  2491  005352                     
  2492                           ;main.c: 237:     mouse.curr_state = ENFRENTE;
  2493  005352  0E01               	movlw	1
  2494  005354  6E57               	movwf	_mouse^0,c
  2495  005356                     
  2496                           ;main.c: 239:     oldSensorDerecha = dameDistancia(DERECHA);
  2497  005356  0E03               	movlw	3
  2498  005358  ECD2  F01E         	call	_dameDistancia
  2499  00535C  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  2500  005360  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  2501  005364  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  2502  005368  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  2503  00536C                     
  2504                           ;main.c: 240:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  2505  00536C  0E02               	movlw	2
  2506  00536E  ECD2  F01E         	call	_dameDistancia
  2507  005372  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  2508  005376  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  2509  00537A  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  2510  00537E  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  2511  005382                     
  2512                           ;main.c: 241:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  2513  005382  0E01               	movlw	1
  2514  005384  ECD2  F01E         	call	_dameDistancia
  2515  005388  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  2516  00538C  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  2517  005390  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  2518  005394  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  2519  005398                     
  2520                           ;main.c: 243:     velocidadEstandar();
  2521  005398  EC20  F02B         	call	_velocidadEstandar	;wreg free
  2522  00539C  0012               	return		;funcret
  2523  00539E                     __end_of_inicializarComportamientoBasico:
  2524                           	opt callstack 0
  2525                           
  2526 ;; *************** function _configurarAdc *****************
  2527 ;; Defined at:
  2528 ;;		line 7 in file "./adc.h"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2546 ;;Total ram usage:        0 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    2
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text3
  2557  0057AA                     __ptext3:
  2558                           	opt callstack 0
  2559  0057AA                     _configurarAdc:
  2560                           	opt callstack 28
  2561  0057AA                     
  2562                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  2563  0057AA  0E0E               	movlw	14
  2564  0057AC  6EC1               	movwf	193,c	;volatile
  2565                           
  2566                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  2567  0057AE  0EA5               	movlw	165
  2568  0057B0  6EC0               	movwf	192,c	;volatile
  2569  0057B2  0012               	return		;funcret
  2570  0057B4                     __end_of_configurarAdc:
  2571                           	opt callstack 0
  2572                           
  2573 ;; *************** function _configPwm *****************
  2574 ;; Defined at:
  2575 ;;		line 47 in file "./pwm.h"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  channel         1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  channel         1    7[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2592 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:        3 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    2
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text4
  2604  0052B2                     __ptext4:
  2605                           	opt callstack 0
  2606  0052B2                     _configPwm:
  2607                           	opt callstack 28
  2608                           
  2609                           ;incstack = 0
  2610                           ;configPwm@channel stored from wreg
  2611  0052B2  6E08               	movwf	configPwm@channel^0,c
  2612  0052B4                     
  2613                           ;./pwm.h: 56:         T2CKPS0 = 1;
  2614  0052B4  80CA               	bsf	4042,0,c	;volatile
  2615                           
  2616                           ;./pwm.h: 57:         T2CKPS1 = 1;
  2617  0052B6  82CA               	bsf	4042,1,c	;volatile
  2618  0052B8                     
  2619                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  2620  0052B8  0E7C               	movlw	124
  2621  0052BA  6ECB               	movwf	203,c	;volatile
  2622                           
  2623                           ;./pwm.h: 63:     switch (channel) {
  2624  0052BC  EF6A  F029         	goto	l10427
  2625  0052C0                     l163:
  2626                           
  2627                           ;./pwm.h: 66:             TRISC2 = 0;
  2628  0052C0  9494               	bcf	3988,2,c	;volatile
  2629                           
  2630                           ;./pwm.h: 67:             CCP1M3 = 1;
  2631  0052C2  86BD               	bsf	4029,3,c	;volatile
  2632                           
  2633                           ;./pwm.h: 68:             CCP1M2 = 1;
  2634  0052C4  84BD               	bsf	4029,2,c	;volatile
  2635                           
  2636                           ;./pwm.h: 71:             break;
  2637  0052C6  EF7F  F029         	goto	l164
  2638  0052CA                     l165:
  2639                           
  2640                           ;./pwm.h: 74:             TRISC1 = 0;
  2641  0052CA  9294               	bcf	3988,1,c	;volatile
  2642                           
  2643                           ;./pwm.h: 75:             CCP2M3 = 1;
  2644  0052CC  86BA               	bsf	4026,3,c	;volatile
  2645                           
  2646                           ;./pwm.h: 76:             CCP2M2 = 1;
  2647  0052CE  84BA               	bsf	4026,2,c	;volatile
  2648                           
  2649                           ;./pwm.h: 77:             break;
  2650  0052D0  EF7F  F029         	goto	l164
  2651  0052D4                     l10427:
  2652  0052D4  5008               	movf	configPwm@channel^0,w,c
  2653  0052D6  6E06               	movwf	??_configPwm^0,c
  2654  0052D8  6A07               	clrf	(??_configPwm+1)^0,c
  2655                           
  2656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2657                           ; Switch size 1, requested type "simple"
  2658                           ; Number of cases is 1, Range of values is 0 to 0
  2659                           ; switch strategies available:
  2660                           ; Name         Instructions Cycles
  2661                           ; simple_byte            4     3 (average)
  2662                           ;	Chosen strategy is simple_byte
  2663  0052DA  5007               	movf	(??_configPwm+1)^0,w,c
  2664  0052DC  0A00               	xorlw	0	; case 0
  2665  0052DE  B4D8               	btfsc	status,2,c
  2666  0052E0  EF74  F029         	goto	l11169
  2667  0052E4  EF7F  F029         	goto	l164
  2668  0052E8                     l11169:
  2669                           
  2670                           ; Switch size 1, requested type "simple"
  2671                           ; Number of cases is 2, Range of values is 1 to 2
  2672                           ; switch strategies available:
  2673                           ; Name         Instructions Cycles
  2674                           ; simple_byte            7     4 (average)
  2675                           ;	Chosen strategy is simple_byte
  2676  0052E8  5006               	movf	??_configPwm^0,w,c
  2677  0052EA  0A01               	xorlw	1	; case 1
  2678  0052EC  B4D8               	btfsc	status,2,c
  2679  0052EE  EF60  F029         	goto	l163
  2680  0052F2  0A03               	xorlw	3	; case 2
  2681  0052F4  B4D8               	btfsc	status,2,c
  2682  0052F6  EF65  F029         	goto	l165
  2683  0052FA  EF7F  F029         	goto	l164
  2684  0052FE                     l164:
  2685                           
  2686                           ;./pwm.h: 81:     TMR2ON = 1;
  2687  0052FE  84CA               	bsf	4042,2,c	;volatile
  2688  005300  0012               	return		;funcret
  2689  005302                     __end_of_configPwm:
  2690                           	opt callstack 0
  2691                           
  2692 ;; *************** function _comportamientoBasico *****************
  2693 ;; Defined at:
  2694 ;;		line 255 in file "main.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  direccionEle    1  158[BANK0 ] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2708 ;;      Params:         0       0       0       0       0       0       0       0       0
  2709 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2710 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2711 ;;      Totals:         0       1       2       0       0       0       0       0       0
  2712 ;;Total ram usage:        3 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:   11
  2715 ;; This function calls:
  2716 ;;		_PID
  2717 ;;		_UART_printf
  2718 ;;		_caminoCorrecto
  2719 ;;		_decidirDireccion
  2720 ;;		_finalizarRecorrido
  2721 ;;		_forzarEspejeo
  2722 ;;		_forzarParoAuto
  2723 ;;		_leerSensores
  2724 ;;		_limpiarMovimientos
  2725 ;;		_moverCarrito
  2726 ;;		_recorrerCaminoEncontrado
  2727 ;;		_regresarAlCruce
  2728 ;;		_regresarPuntoPartida
  2729 ;;		_velocidadBaja
  2730 ;;		_velocidadEstandar
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text5
  2737  001BC0                     __ptext5:
  2738                           	opt callstack 0
  2739  001BC0                     _comportamientoBasico:
  2740                           	opt callstack 19
  2741  001BC0                     
  2742                           ;main.c: 257:     static T_UBYTE espejearCarroY = 0;;main.c: 258:     static T_UBYTE car
      +                          roEspejeado = 0;;main.c: 259:     static T_UBYTE movimientosRealizados[200];;main.c: 260
      +                          :     static T_UBYTE caminoFinal[1000];;main.c: 261:     static T_UINT numMovimientos = 
      +                          0;;main.c: 262:     static T_UINT numMovimientosTotales = 0;;main.c: 263:     static T_U
      +                          BYTE mapear = 0;;main.c: 264:     static T_UBYTE cruceDetectado = 0;;main.c: 265:     st
      +                          atic T_UBYTE caminosRecorrer[3];;main.c: 266:     static T_UBYTE investigandoCruce = 0;
  2743  001BC0  0E00               	movlw	0
  2744  001BC2  0100               	movlb	0	; () banked
  2745  001BC4  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2746                           
  2747                           ;main.c: 275:     if (!caminoEncontrado) {
  2748  001BC6  0101               	movlb	1	; () banked
  2749  001BC8  5138               	movf	comportamientoBasico@caminoEncontrado& (0+255),w,b
  2750  001BCA  A4D8               	btfss	status,2,c
  2751  001BCC  EFEA  F00D         	goto	u11681
  2752  001BD0  EFEC  F00D         	goto	u11680
  2753  001BD4                     u11681:
  2754  001BD4  EFCF  F00F         	goto	l10627
  2755  001BD8                     u11680:
  2756  001BD8                     
  2757                           ; BSR set to: 1
  2758                           ;main.c: 277:         moverCarrito(espejearCarroY, &carroEspejeado, &avanceRectoLargo);
  2759  001BD8  0E59               	movlw	low comportamientoBasico@carroEspejeado
  2760  001BDA  0100               	movlb	0	; () banked
  2761  001BDC  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  2762  001BDE  0E00               	movlw	high comportamientoBasico@carroEspejeado
  2763  001BE0  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  2764  001BE2  0ECA               	movlw	low comportamientoBasico@avanceRectoLargo
  2765  001BE4  6F8A               	movwf	moverCarrito@avanceRectoLargo& (0+255),b
  2766  001BE6  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2767  001BE8  6F8B               	movwf	(moverCarrito@avanceRectoLargo+1)& (0+255),b
  2768  001BEA  0101               	movlb	1	; () banked
  2769  001BEC  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  2770  001BEE  EC8D  F020         	call	_moverCarrito
  2771  001BF2                     
  2772                           ;main.c: 280:         if (!llegoDestino) {
  2773  001BF2  0100               	movlb	0	; () banked
  2774  001BF4  51FF               	movf	_llegoDestino& (0+255),w,b
  2775  001BF6  A4D8               	btfss	status,2,c
  2776  001BF8  EF00  F00E         	goto	u11691
  2777  001BFC  EF02  F00E         	goto	u11690
  2778  001C00                     u11691:
  2779  001C00  EFAD  F00F         	goto	l10625
  2780  001C04                     u11690:
  2781  001C04                     
  2782                           ; BSR set to: 0
  2783                           ;main.c: 282:             if (mapear)
  2784  001C04  0101               	movlb	1	; () banked
  2785  001C06  51D1               	movf	comportamientoBasico@mapear& (0+255),w,b
  2786  001C08  B4D8               	btfsc	status,2,c
  2787  001C0A  EF09  F00E         	goto	u11701
  2788  001C0E  EF0B  F00E         	goto	u11700
  2789  001C12                     u11701:
  2790  001C12  EF2F  F00E         	goto	l10511
  2791  001C16                     u11700:
  2792  001C16                     
  2793                           ; BSR set to: 1
  2794                           ;main.c: 283:             {;main.c: 284:                 if (numMovimientos < 200)
  2795  001C16  51C9               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2796  001C18  E107               	bnz	u11711
  2797  001C1A  0EC8               	movlw	200
  2798  001C1C  5DC8               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2799  001C1E  B0D8               	btfsc	status,0,c
  2800  001C20  EF14  F00E         	goto	u11711
  2801  001C24  EF16  F00E         	goto	u11710
  2802  001C28                     u11711:
  2803  001C28  EF22  F00E         	goto	l10505
  2804  001C2C                     u11710:
  2805  001C2C                     
  2806                           ; BSR set to: 1
  2807                           ;main.c: 285:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  2808  001C2C  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2809  001C2E  25C8               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2810  001C30  6ED9               	movwf	fsr2l,c
  2811  001C32  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2812  001C34  21C9               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2813  001C36  6EDA               	movwf	fsr2h,c
  2814  001C38  C057  FFDF         	movff	_mouse,indf2
  2815  001C3C                     
  2816                           ; BSR set to: 1
  2817  001C3C  4BC8               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  2818  001C3E  2BC9               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  2819  001C40  EF56  F00E         	goto	l10525
  2820  001C44                     l10505:
  2821                           
  2822                           ; BSR set to: 1
  2823                           ;main.c: 287:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  2824  001C44  0E0C               	movlw	low STR_12
  2825  001C46  6E07               	movwf	UART_printf@cadena^0,c
  2826  001C48  0E7E               	movlw	high STR_12
  2827  001C4A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2828  001C4C  EC27  F028         	call	_UART_printf	;wreg free
  2829  001C50                     l10507:
  2830                           
  2831                           ;main.c: 288:                     forzarParoAuto();
  2832  001C50  ECB5  F02B         	call	_forzarParoAuto	;wreg free
  2833  001C54                     
  2834                           ;main.c: 289:                     pausa = 1;
  2835  001C54  0E01               	movlw	1
  2836  001C56  0101               	movlb	1	; () banked
  2837  001C58  6FE9               	movwf	_pausa& (0+255),b
  2838  001C5A  EF56  F00E         	goto	l10525
  2839  001C5E                     l10511:
  2840                           
  2841                           ; BSR set to: 1
  2842                           ;main.c: 310:                 if (!investigandoCruce) {
  2843  001C5E  51CF               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  2844  001C60  A4D8               	btfss	status,2,c
  2845  001C62  EF35  F00E         	goto	u11721
  2846  001C66  EF37  F00E         	goto	u11720
  2847  001C6A                     u11721:
  2848  001C6A  EF56  F00E         	goto	l10525
  2849  001C6E                     u11720:
  2850  001C6E                     
  2851                           ; BSR set to: 1
  2852                           ;main.c: 311:                     if (numMovimientosTotales < 1000)
  2853  001C6E  0EE8               	movlw	232
  2854  001C70  5DC6               	subwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  2855  001C72  0E03               	movlw	3
  2856  001C74  59C7               	subwfb	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  2857  001C76  B0D8               	btfsc	status,0,c
  2858  001C78  EF40  F00E         	goto	u11731
  2859  001C7C  EF42  F00E         	goto	u11730
  2860  001C80                     u11731:
  2861  001C80  EF4E  F00E         	goto	l10519
  2862  001C84                     u11730:
  2863  001C84                     
  2864                           ; BSR set to: 1
  2865                           ;main.c: 312:                         caminoFinal[numMovimientosTotales++] = mouse.curr_
      +                          state;
  2866  001C84  0EC8               	movlw	low comportamientoBasico@caminoFinal
  2867  001C86  25C6               	addwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  2868  001C88  6ED9               	movwf	fsr2l,c
  2869  001C8A  0E02               	movlw	high comportamientoBasico@caminoFinal
  2870  001C8C  21C7               	addwfc	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  2871  001C8E  6EDA               	movwf	fsr2h,c
  2872  001C90  C057  FFDF         	movff	_mouse,indf2
  2873  001C94                     
  2874                           ; BSR set to: 1
  2875  001C94  4BC6               	infsnz	comportamientoBasico@numMovimientosTotales& (0+255),f,b
  2876  001C96  2BC7               	incf	(comportamientoBasico@numMovimientosTotales+1)& (0+255),f,b
  2877  001C98  EF56  F00E         	goto	l10525
  2878  001C9C                     l10519:
  2879                           
  2880                           ; BSR set to: 1
  2881                           ;main.c: 314:                         UART_printf("\n\nOVERFLOW en el mapeo de pasos Rea
      +                          lizados para camino Total\n\n");
  2882  001C9C  0ECD               	movlw	low STR_13
  2883  001C9E  6E07               	movwf	UART_printf@cadena^0,c
  2884  001CA0  0E7D               	movlw	high STR_13
  2885  001CA2  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2886  001CA4  EC27  F028         	call	_UART_printf	;wreg free
  2887  001CA8  EF28  F00E         	goto	l10507
  2888  001CAC                     l10525:
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;main.c: 321:             leerSensores();
  2892  001CAC  EC62  F01D         	call	_leerSensores	;wreg free
  2893  001CB0                     
  2894                           ;main.c: 324:             direccionElegida = decidirDireccion(caminosRecorrer, &investig
      +                          andoCruce,
  2895  001CB0  0EC3               	movlw	low comportamientoBasico@caminosRecorrer
  2896  001CB2  0101               	movlb	1	; () banked
  2897  001CB4  6FD2               	movwf	decidirDireccion@caminosRecorrer& (0+255),b
  2898  001CB6  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  2899  001CB8  6FD3               	movwf	(decidirDireccion@caminosRecorrer+1)& (0+255),b
  2900  001CBA  0ECF               	movlw	low comportamientoBasico@investigandoCruce
  2901  001CBC  6FD4               	movwf	decidirDireccion@investigandoCruce& (0+255),b
  2902  001CBE  0E01               	movlw	high comportamientoBasico@investigandoCruce
  2903  001CC0  6FD5               	movwf	(decidirDireccion@investigandoCruce+1)& (0+255),b
  2904  001CC2  0ECE               	movlw	low comportamientoBasico@posicionInvCruce
  2905  001CC4  6FD6               	movwf	decidirDireccion@posicionInvCruce& (0+255),b
  2906  001CC6  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  2907  001CC8  6FD7               	movwf	(decidirDireccion@posicionInvCruce+1)& (0+255),b
  2908  001CCA  0ECD               	movlw	low comportamientoBasico@contCaminosRecorridos
  2909  001CCC  6FD8               	movwf	decidirDireccion@contCaminosRecorridos& (0+255),b
  2910  001CCE  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  2911  001CD0  6FD9               	movwf	(decidirDireccion@contCaminosRecorridos+1)& (0+255),b
  2912  001CD2  0ECC               	movlw	low comportamientoBasico@caminoActual
  2913  001CD4  6FDA               	movwf	decidirDireccion@caminoActual& (0+255),b
  2914  001CD6  0E01               	movlw	high comportamientoBasico@caminoActual
  2915  001CD8  6FDB               	movwf	(decidirDireccion@caminoActual+1)& (0+255),b
  2916  001CDA  0ECB               	movlw	low comportamientoBasico@cambioOrientacionCarro
  2917  001CDC  6FDC               	movwf	decidirDireccion@cambioOrientacionCarro& (0+255),b
  2918  001CDE  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  2919  001CE0  6FDD               	movwf	(decidirDireccion@cambioOrientacionCarro+1)& (0+255),b
  2920  001CE2  0ED1               	movlw	low comportamientoBasico@mapear
  2921  001CE4  6FDE               	movwf	decidirDireccion@mapear& (0+255),b
  2922  001CE6  0E01               	movlw	high comportamientoBasico@mapear
  2923  001CE8  6FDF               	movwf	(decidirDireccion@mapear+1)& (0+255),b
  2924  001CEA  0ED0               	movlw	low comportamientoBasico@cruceDetectado
  2925  001CEC  6FE0               	movwf	decidirDireccion@cruceDetectado& (0+255),b
  2926  001CEE  0E01               	movlw	high comportamientoBasico@cruceDetectado
  2927  001CF0  6FE1               	movwf	(decidirDireccion@cruceDetectado+1)& (0+255),b
  2928  001CF2  0ECA               	movlw	low comportamientoBasico@avanceRectoLargo
  2929  001CF4  6FE2               	movwf	decidirDireccion@avanceRectoLargo& (0+255),b
  2930  001CF6  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2931  001CF8  6FE3               	movwf	(decidirDireccion@avanceRectoLargo+1)& (0+255),b
  2932  001CFA  ECBA  F008         	call	_decidirDireccion	;wreg free
  2933  001CFE  0100               	movlb	0	; () banked
  2934  001D00  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2935  001D02  EFAD  F00F         	goto	l10625
  2936  001D06                     l10529:
  2937                           
  2938                           ; BSR set to: 1
  2939                           ;main.c: 338:                         mapear = 0;
  2940  001D06  0E00               	movlw	0
  2941  001D08  6FD1               	movwf	comportamientoBasico@mapear& (0+255),b
  2942                           
  2943                           ;main.c: 339:                         espejearCarroY = 1;
  2944  001D0A  0E01               	movlw	1
  2945  001D0C  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  2946                           
  2947                           ;main.c: 340:                         mouse.Next_state = IZQUIERDA;
  2948  001D0E  0E02               	movlw	2
  2949  001D10  6E58               	movwf	(_mouse+1)^0,c
  2950                           
  2951                           ;main.c: 341:                         break;
  2952  001D12  EFCB  F00F         	goto	l387
  2953  001D16                     l10531:
  2954                           
  2955                           ; BSR set to: 1
  2956                           ;main.c: 345:                         if (!paredEnfrente)
  2957  001D16  513C               	movf	_paredEnfrente& (0+255),w,b
  2958  001D18  A4D8               	btfss	status,2,c
  2959  001D1A  EF91  F00E         	goto	u11741
  2960  001D1E  EF93  F00E         	goto	u11740
  2961  001D22                     u11741:
  2962  001D22  EF97  F00E         	goto	l10535
  2963  001D26                     u11740:
  2964  001D26                     
  2965                           ; BSR set to: 1
  2966                           ;main.c: 346:                             velocidadBaja();
  2967  001D26  EC33  F02B         	call	_velocidadBaja	;wreg free
  2968  001D2A  EF99  F00E         	goto	l10537
  2969  001D2E                     l10535:
  2970                           
  2971                           ; BSR set to: 1
  2972                           ;main.c: 348:                             PID();
  2973  001D2E  EC22  F017         	call	_PID	;wreg free
  2974  001D32                     l10537:
  2975                           
  2976                           ;main.c: 350:                         mouse.Next_state = ENFRENTE;
  2977  001D32  0E01               	movlw	1
  2978  001D34  6E58               	movwf	(_mouse+1)^0,c
  2979                           
  2980                           ;main.c: 351:                         break;
  2981  001D36  EFCB  F00F         	goto	l387
  2982  001D3A                     l10539:
  2983                           
  2984                           ; BSR set to: 1
  2985                           ;main.c: 354:                         velocidadEstandar();
  2986  001D3A  EC20  F02B         	call	_velocidadEstandar	;wreg free
  2987  001D3E                     l10541:
  2988                           
  2989                           ;main.c: 355:                         mouse.Next_state = IZQUIERDA;
  2990  001D3E  0E02               	movlw	2
  2991  001D40  6E58               	movwf	(_mouse+1)^0,c
  2992                           
  2993                           ;main.c: 356:                         break;
  2994  001D42  EFCB  F00F         	goto	l387
  2995  001D46                     l10543:
  2996                           
  2997                           ; BSR set to: 1
  2998                           ;main.c: 359:                         velocidadEstandar();
  2999  001D46  EC20  F02B         	call	_velocidadEstandar	;wreg free
  3000  001D4A                     
  3001                           ;main.c: 360:                         mouse.Next_state = DERECHA;
  3002  001D4A  0E03               	movlw	3
  3003  001D4C  6E58               	movwf	(_mouse+1)^0,c
  3004                           
  3005                           ;main.c: 361:                         break;
  3006  001D4E  EFCB  F00F         	goto	l387
  3007  001D52                     l10547:
  3008                           
  3009                           ; BSR set to: 1
  3010                           ;main.c: 365:                         mouse.Next_state = ALTO;
  3011  001D52  0E04               	movlw	4
  3012  001D54  6E58               	movwf	(_mouse+1)^0,c
  3013                           
  3014                           ;main.c: 366:                         break;
  3015  001D56  EFCB  F00F         	goto	l387
  3016  001D5A                     l10551:
  3017                           
  3018                           ; BSR set to: 1
  3019  001D5A  0100               	movlb	0	; () banked
  3020  001D5C  51FE               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  3021  001D5E  0101               	movlb	1	; () banked
  3022  001D60  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3023  001D62  6BE5               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3024                           
  3025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3026                           ; Switch size 1, requested type "simple"
  3027                           ; Number of cases is 1, Range of values is 0 to 0
  3028                           ; switch strategies available:
  3029                           ; Name         Instructions Cycles
  3030                           ; simple_byte            4     3 (average)
  3031                           ;	Chosen strategy is simple_byte
  3032  001D64  51E5               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3033  001D66  0A00               	xorlw	0	; case 0
  3034  001D68  B4D8               	btfsc	status,2,c
  3035  001D6A  EFB9  F00E         	goto	l11171
  3036  001D6E  EFCB  F00F         	goto	l387
  3037  001D72                     l11171:
  3038                           
  3039                           ; BSR set to: 1
  3040                           ; Switch size 1, requested type "simple"
  3041                           ; Number of cases is 5, Range of values is 0 to 4
  3042                           ; switch strategies available:
  3043                           ; Name         Instructions Cycles
  3044                           ; simple_byte           16     9 (average)
  3045                           ;	Chosen strategy is simple_byte
  3046  001D72  51E4               	movf	??_comportamientoBasico& (0+255),w,b
  3047  001D74  0A00               	xorlw	0	; case 0
  3048  001D76  B4D8               	btfsc	status,2,c
  3049  001D78  EF83  F00E         	goto	l10529
  3050  001D7C  0A01               	xorlw	1	; case 1
  3051  001D7E  B4D8               	btfsc	status,2,c
  3052  001D80  EF8B  F00E         	goto	l10531
  3053  001D84  0A03               	xorlw	3	; case 2
  3054  001D86  B4D8               	btfsc	status,2,c
  3055  001D88  EF9D  F00E         	goto	l10539
  3056  001D8C  0A01               	xorlw	1	; case 3
  3057  001D8E  B4D8               	btfsc	status,2,c
  3058  001D90  EFA3  F00E         	goto	l10543
  3059  001D94  0A07               	xorlw	7	; case 4
  3060  001D96  B4D8               	btfsc	status,2,c
  3061  001D98  EFA9  F00E         	goto	l10547
  3062  001D9C  EFCB  F00F         	goto	l387
  3063  001DA0                     l10553:
  3064                           
  3065                           ; BSR set to: 1
  3066                           ;main.c: 374:                 if (carroEspejeado && espejearCarroY && !llegoDestino) {
  3067  001DA0  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3068  001DA2  B4D8               	btfsc	status,2,c
  3069  001DA4  EFD6  F00E         	goto	u11751
  3070  001DA8  EFD8  F00E         	goto	u11750
  3071  001DAC                     u11751:
  3072  001DAC  EF0B  F00F         	goto	l10573
  3073  001DB0                     u11750:
  3074  001DB0                     
  3075                           ; BSR set to: 1
  3076  001DB0  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3077  001DB2  B4D8               	btfsc	status,2,c
  3078  001DB4  EFDE  F00E         	goto	u11761
  3079  001DB8  EFE0  F00E         	goto	u11760
  3080  001DBC                     u11761:
  3081  001DBC  EF0B  F00F         	goto	l10573
  3082  001DC0                     u11760:
  3083  001DC0                     
  3084                           ; BSR set to: 1
  3085  001DC0  0100               	movlb	0	; () banked
  3086  001DC2  51FF               	movf	_llegoDestino& (0+255),w,b
  3087  001DC4  A4D8               	btfss	status,2,c
  3088  001DC6  EFE7  F00E         	goto	u11771
  3089  001DCA  EFE9  F00E         	goto	u11770
  3090  001DCE                     u11771:
  3091  001DCE  EF0B  F00F         	goto	l10573
  3092  001DD2                     u11770:
  3093  001DD2                     
  3094                           ; BSR set to: 0
  3095                           ;main.c: 376:                     espejearCarroY = 0;
  3096  001DD2  0E00               	movlw	0
  3097  001DD4  0101               	movlb	1	; () banked
  3098  001DD6  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3099                           
  3100                           ;main.c: 377:                     carroEspejeado = 0;
  3101  001DD8  0E00               	movlw	0
  3102  001DDA  6E59               	movwf	comportamientoBasico@carroEspejeado^0,c
  3103  001DDC                     
  3104                           ; BSR set to: 1
  3105                           ;main.c: 379:                     regresarAlCruce(movimientosRealizados, numMovimientos)
      +                          ;
  3106  001DDC  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3107  001DDE  0100               	movlb	0	; () banked
  3108  001DE0  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  3109  001DE2  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3110  001DE4  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  3111  001DE6  C1C8  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  3112  001DEA  C1C9  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  3113  001DEE  EC43  F023         	call	_regresarAlCruce	;wreg free
  3114  001DF2                     
  3115                           ;main.c: 380:                     limpiarMovimientos(movimientosRealizados, &numMovimien
      +                          tos);
  3116  001DF2  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3117  001DF4  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  3118  001DF6  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3119  001DF8  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  3120  001DFA  0EC8               	movlw	low comportamientoBasico@numMovimientos
  3121  001DFC  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  3122  001DFE  0E01               	movlw	high comportamientoBasico@numMovimientos
  3123  001E00  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  3124  001E02  EC81  F029         	call	_limpiarMovimientos	;wreg free
  3125  001E06                     
  3126                           ;main.c: 382:                     cruceDetectado = 0;
  3127  001E06  0E00               	movlw	0
  3128  001E08  0101               	movlb	1	; () banked
  3129  001E0A  6FD0               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  3130  001E0C                     
  3131                           ; BSR set to: 1
  3132                           ;main.c: 383:                     posicionInvCruce = 1;
  3133  001E0C  0E01               	movlw	1
  3134  001E0E  6FCE               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  3135  001E10                     
  3136                           ; BSR set to: 1
  3137                           ;main.c: 384:                     contCaminosRecorridos++;
  3138  001E10  2BCD               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  3139  001E12  EFA9  F00E         	goto	l10547
  3140  001E16                     l10573:
  3141  001E16  0101               	movlb	1	; () banked
  3142  001E18  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3143  001E1A  B4D8               	btfsc	status,2,c
  3144  001E1C  EF12  F00F         	goto	u11781
  3145  001E20  EF14  F00F         	goto	u11780
  3146  001E24                     u11781:
  3147  001E24  EF99  F00E         	goto	l10537
  3148  001E28                     u11780:
  3149  001E28                     
  3150                           ; BSR set to: 1
  3151  001E28  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3152  001E2A  B4D8               	btfsc	status,2,c
  3153  001E2C  EF1A  F00F         	goto	u11791
  3154  001E30  EF1C  F00F         	goto	u11790
  3155  001E34                     u11791:
  3156  001E34  EF99  F00E         	goto	l10537
  3157  001E38                     u11790:
  3158  001E38                     
  3159                           ; BSR set to: 1
  3160  001E38  0100               	movlb	0	; () banked
  3161  001E3A  51FF               	movf	_llegoDestino& (0+255),w,b
  3162  001E3C  B4D8               	btfsc	status,2,c
  3163  001E3E  EF23  F00F         	goto	u11801
  3164  001E42  EF25  F00F         	goto	u11800
  3165  001E46                     u11801:
  3166  001E46  EF99  F00E         	goto	l10537
  3167  001E4A                     u11800:
  3168  001E4A                     
  3169                           ; BSR set to: 0
  3170                           ;main.c: 387:                     espejearCarroY = 0;
  3171  001E4A  0E00               	movlw	0
  3172  001E4C  0101               	movlb	1	; () banked
  3173  001E4E  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3174                           
  3175                           ;main.c: 388:                     mouse.Next_state = ALTO;
  3176  001E50  0E04               	movlw	4
  3177  001E52  6E58               	movwf	(_mouse+1)^0,c
  3178                           
  3179                           ;main.c: 390:                 } else {
  3180  001E54  EFCB  F00F         	goto	l387
  3181  001E58                     l10585:
  3182                           
  3183                           ; BSR set to: 1
  3184                           ;main.c: 402:                 if (llegoDestino && carroEspejeado) {
  3185  001E58  0100               	movlb	0	; () banked
  3186  001E5A  51FF               	movf	_llegoDestino& (0+255),w,b
  3187  001E5C  B4D8               	btfsc	status,2,c
  3188  001E5E  EF33  F00F         	goto	u11811
  3189  001E62  EF35  F00F         	goto	u11810
  3190  001E66                     u11811:
  3191  001E66  EF59  F00F         	goto	l10601
  3192  001E6A                     u11810:
  3193  001E6A                     
  3194                           ; BSR set to: 0
  3195  001E6A  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3196  001E6C  B4D8               	btfsc	status,2,c
  3197  001E6E  EF3B  F00F         	goto	u11821
  3198  001E72  EF3D  F00F         	goto	u11820
  3199  001E76                     u11821:
  3200  001E76  EF59  F00F         	goto	l10601
  3201  001E7A                     u11820:
  3202  001E7A                     
  3203                           ; BSR set to: 0
  3204                           ;main.c: 404:                     carroEspejeado = 0;
  3205  001E7A  0E00               	movlw	0
  3206  001E7C  6E59               	movwf	comportamientoBasico@carroEspejeado^0,c
  3207  001E7E                     
  3208                           ; BSR set to: 0
  3209                           ;main.c: 405:                     regresarPuntoPartida(caminoFinal, numMovimientosTotale
      +                          s);
  3210  001E7E  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3211  001E80  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  3212  001E82  0E02               	movlw	high comportamientoBasico@caminoFinal
  3213  001E84  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  3214  001E86  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  3215  001E8A  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  3216  001E8E  EC08  F025         	call	_regresarPuntoPartida	;wreg free
  3217  001E92                     
  3218                           ;main.c: 406:                     llegoDestino = 0;
  3219  001E92  0E00               	movlw	0
  3220  001E94  0100               	movlb	0	; () banked
  3221  001E96  6FFF               	movwf	_llegoDestino& (0+255),b
  3222  001E98                     
  3223                           ; BSR set to: 0
  3224                           ;main.c: 407:                     caminoEncontrado = 1;
  3225  001E98  0E01               	movlw	1
  3226  001E9A  0101               	movlb	1	; () banked
  3227  001E9C  6F38               	movwf	comportamientoBasico@caminoEncontrado& (0+255),b
  3228  001E9E                     
  3229                           ; BSR set to: 1
  3230                           ;main.c: 408:                     finalizarRecorrido();
  3231  001E9E  ECCD  F02B         	call	_finalizarRecorrido	;wreg free
  3232  001EA2                     
  3233                           ;main.c: 409:                     UART_printf("\rSe regreso al punto de partida\r\n");
  3234  001EA2  0E66               	movlw	low STR_14
  3235  001EA4  6E07               	movwf	UART_printf@cadena^0,c
  3236  001EA6  0E7E               	movlw	high STR_14
  3237  001EA8  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3238  001EAA  EC27  F028         	call	_UART_printf	;wreg free
  3239                           
  3240                           ;main.c: 410:                 } else if (llegoDestino && !carroEspejeado) {
  3241  001EAE  EFCB  F00F         	goto	l387
  3242  001EB2                     l10601:
  3243                           
  3244                           ; BSR set to: 0
  3245  001EB2  51FF               	movf	_llegoDestino& (0+255),w,b
  3246  001EB4  B4D8               	btfsc	status,2,c
  3247  001EB6  EF5F  F00F         	goto	u11831
  3248  001EBA  EF61  F00F         	goto	u11830
  3249  001EBE                     u11831:
  3250  001EBE  EF95  F00F         	goto	l10615
  3251  001EC2                     u11830:
  3252  001EC2                     
  3253                           ; BSR set to: 0
  3254  001EC2  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3255  001EC4  A4D8               	btfss	status,2,c
  3256  001EC6  EF67  F00F         	goto	u11841
  3257  001ECA  EF69  F00F         	goto	u11840
  3258  001ECE                     u11841:
  3259  001ECE  EF95  F00F         	goto	l10615
  3260  001ED2                     u11840:
  3261  001ED2                     
  3262                           ; BSR set to: 0
  3263                           ;main.c: 412:                     caminoCorrecto(movimientosRealizados, caminoFinal, num
      +                          Movimientos,
  3264  001ED2  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3265  001ED4  6E12               	movwf	caminoCorrecto@movimientos^0,c
  3266  001ED6  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3267  001ED8  6E13               	movwf	(caminoCorrecto@movimientos+1)^0,c
  3268  001EDA  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3269  001EDC  6E14               	movwf	caminoCorrecto@caminoFinal^0,c
  3270  001EDE  0E02               	movlw	high comportamientoBasico@caminoFinal
  3271  001EE0  6E15               	movwf	(caminoCorrecto@caminoFinal+1)^0,c
  3272  001EE2  C1C8  F016         	movff	comportamientoBasico@numMovimientos,caminoCorrecto@numMovimientos
  3273  001EE6  C1C9  F017         	movff	comportamientoBasico@numMovimientos+1,caminoCorrecto@numMovimientos+1
  3274  001EEA  0EC6               	movlw	low comportamientoBasico@numMovimientosTotales
  3275  001EEC  6E18               	movwf	caminoCorrecto@numMovimientosFinal^0,c
  3276  001EEE  0E01               	movlw	high comportamientoBasico@numMovimientosTotales
  3277  001EF0  6E19               	movwf	(caminoCorrecto@numMovimientosFinal+1)^0,c
  3278  001EF2  C1CC  F01A         	movff	comportamientoBasico@caminoActual,caminoCorrecto@caminoActual
  3279  001EF6  EC15  F02A         	call	_caminoCorrecto	;wreg free
  3280  001EFA                     
  3281                           ;main.c: 415:                     espejearCarroY = 1;
  3282  001EFA  0E01               	movlw	1
  3283  001EFC  0101               	movlb	1	; () banked
  3284  001EFE  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3285  001F00                     
  3286                           ; BSR set to: 1
  3287                           ;main.c: 416:                     UART_printf("\rSe llego Al destino\r\n");
  3288  001F00  0E7B               	movlw	low STR_15
  3289  001F02  6E07               	movwf	UART_printf@cadena^0,c
  3290  001F04  0E7F               	movlw	high STR_15
  3291  001F06  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3292  001F08  EC27  F028         	call	_UART_printf	;wreg free
  3293  001F0C                     
  3294                           ;main.c: 417:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  3295  001F0C  0E10               	movlw	16
  3296  001F0E  0101               	movlb	1	; () banked
  3297  001F10  6FE5               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3298  001F12  0E39               	movlw	57
  3299  001F14  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3300  001F16  0E0D               	movlw	13
  3301  001F18                     u12017:
  3302  001F18  2EE8               	decfsz	wreg,f,c
  3303  001F1A  D7FE               	bra	u12017
  3304  001F1C  2FE4               	decfsz	??_comportamientoBasico& (0+255),f,b
  3305  001F1E  D7FC               	bra	u12017
  3306  001F20  2FE5               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3307  001F22  D7FA               	bra	u12017
  3308  001F24  D000               	nop2	
  3309  001F26  EF9F  F00E         	goto	l10541
  3310  001F2A                     l10615:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;main.c: 421:                     if (direccionElegida == IZQUIERDA || direccionElegida 
      +                          == DERECHA)
  3314  001F2A  0E02               	movlw	2
  3315  001F2C  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3316  001F2E  B4D8               	btfsc	status,2,c
  3317  001F30  EF9C  F00F         	goto	u11851
  3318  001F34  EF9E  F00F         	goto	u11850
  3319  001F38                     u11851:
  3320  001F38  EFA7  F00F         	goto	l10619
  3321  001F3C                     u11850:
  3322  001F3C                     
  3323                           ; BSR set to: 0
  3324  001F3C  0E03               	movlw	3
  3325  001F3E  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3326  001F40  A4D8               	btfss	status,2,c
  3327  001F42  EFA5  F00F         	goto	u11861
  3328  001F46  EFA7  F00F         	goto	u11860
  3329  001F4A                     u11861:
  3330  001F4A  EFA9  F00F         	goto	l10621
  3331  001F4E                     u11860:
  3332  001F4E                     l10619:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;main.c: 422:                         velocidadEstandar();
  3336  001F4E  EC20  F02B         	call	_velocidadEstandar	;wreg free
  3337  001F52                     l10621:
  3338                           
  3339                           ;main.c: 424:                     mouse.Next_state = direccionElegida;
  3340  001F52  C0FE  F058         	movff	comportamientoBasico@direccionElegida,_mouse+1
  3341  001F56  EFCB  F00F         	goto	l387
  3342  001F5A                     l10625:
  3343                           
  3344                           ; BSR set to: 0
  3345  001F5A  5057               	movf	_mouse^0,w,c
  3346  001F5C  0101               	movlb	1	; () banked
  3347  001F5E  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3348  001F60  6BE5               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3349                           
  3350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3351                           ; Switch size 1, requested type "simple"
  3352                           ; Number of cases is 1, Range of values is 0 to 0
  3353                           ; switch strategies available:
  3354                           ; Name         Instructions Cycles
  3355                           ; simple_byte            4     3 (average)
  3356                           ;	Chosen strategy is simple_byte
  3357  001F62  51E5               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3358  001F64  0A00               	xorlw	0	; case 0
  3359  001F66  B4D8               	btfsc	status,2,c
  3360  001F68  EFB8  F00F         	goto	l11173
  3361  001F6C  EFCB  F00F         	goto	l387
  3362  001F70                     l11173:
  3363                           
  3364                           ; BSR set to: 1
  3365                           ; Switch size 1, requested type "simple"
  3366                           ; Number of cases is 4, Range of values is 1 to 4
  3367                           ; switch strategies available:
  3368                           ; Name         Instructions Cycles
  3369                           ; simple_byte           13     7 (average)
  3370                           ;	Chosen strategy is simple_byte
  3371  001F70  51E4               	movf	??_comportamientoBasico& (0+255),w,b
  3372  001F72  0A01               	xorlw	1	; case 1
  3373  001F74  B4D8               	btfsc	status,2,c
  3374  001F76  EFAD  F00E         	goto	l10551
  3375  001F7A  0A03               	xorlw	3	; case 2
  3376  001F7C  B4D8               	btfsc	status,2,c
  3377  001F7E  EFD0  F00E         	goto	l10553
  3378  001F82  0A01               	xorlw	1	; case 3
  3379  001F84  B4D8               	btfsc	status,2,c
  3380  001F86  EF99  F00E         	goto	l10537
  3381  001F8A  0A07               	xorlw	7	; case 4
  3382  001F8C  B4D8               	btfsc	status,2,c
  3383  001F8E  EF2C  F00F         	goto	l10585
  3384  001F92  EFCB  F00F         	goto	l387
  3385  001F96                     l387:
  3386                           
  3387                           ;main.c: 430:         mouse.curr_state = mouse.Next_state;
  3388  001F96  C058  F057         	movff	_mouse+1,_mouse
  3389                           
  3390                           ;main.c: 432:     } else {
  3391  001F9A  EFF6  F00F         	goto	l403
  3392  001F9E                     l10627:
  3393                           
  3394                           ; BSR set to: 1
  3395                           ;main.c: 433:         recorrerCaminoEncontrado(caminoFinal, numMovimientosTotales);
  3396  001F9E  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3397  001FA0  0100               	movlb	0	; () banked
  3398  001FA2  6F9A               	movwf	recorrerCaminoEncontrado@movimientos& (0+255),b
  3399  001FA4  0E02               	movlw	high comportamientoBasico@caminoFinal
  3400  001FA6  6F9B               	movwf	(recorrerCaminoEncontrado@movimientos+1)& (0+255),b
  3401  001FA8  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,recorrerCaminoEncontrado@numMovimiento
      +                          s
  3402  001FAC  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,recorrerCaminoEncontrado@numMovimien
      +                          tos+1
  3403  001FB0  ECF3  F025         	call	_recorrerCaminoEncontrado	;wreg free
  3404  001FB4                     
  3405                           ;main.c: 434:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  3406  001FB4  0E10               	movlw	16
  3407  001FB6  0101               	movlb	1	; () banked
  3408  001FB8  6FE5               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3409  001FBA  0E39               	movlw	57
  3410  001FBC  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3411  001FBE  0E0D               	movlw	13
  3412  001FC0                     u12027:
  3413  001FC0  2EE8               	decfsz	wreg,f,c
  3414  001FC2  D7FE               	bra	u12027
  3415  001FC4  2FE4               	decfsz	??_comportamientoBasico& (0+255),f,b
  3416  001FC6  D7FC               	bra	u12027
  3417  001FC8  2FE5               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3418  001FCA  D7FA               	bra	u12027
  3419  001FCC  D000               	nop2	
  3420  001FCE                     
  3421                           ;main.c: 435:         forzarEspejeo();
  3422  001FCE  EC5A  F02A         	call	_forzarEspejeo	;wreg free
  3423  001FD2                     
  3424                           ;main.c: 436:         regresarPuntoPartida(caminoFinal, numMovimientosTotales);
  3425  001FD2  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3426  001FD4  0100               	movlb	0	; () banked
  3427  001FD6  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  3428  001FD8  0E02               	movlw	high comportamientoBasico@caminoFinal
  3429  001FDA  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  3430  001FDC  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  3431  001FE0  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  3432  001FE4  EC08  F025         	call	_regresarPuntoPartida	;wreg free
  3433  001FE8                     
  3434                           ;main.c: 437:         finalizarRecorrido();
  3435  001FE8  ECCD  F02B         	call	_finalizarRecorrido	;wreg free
  3436  001FEC                     l403:
  3437  001FEC  0012               	return		;funcret
  3438  001FEE                     __end_of_comportamientoBasico:
  3439                           	opt callstack 0
  3440                           
  3441 ;; *************** function _regresarPuntoPartida *****************
  3442 ;; Defined at:
  3443 ;;		line 644 in file "main.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3446 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  3447 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  i               2   62[BANK0 ] int 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3459 ;;      Params:         0       4       0       0       0       0       0       0       0
  3460 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3461 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3462 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3463 ;;Total ram usage:        7 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    6
  3466 ;; This function calls:
  3467 ;;		_PID
  3468 ;;		_mover
  3469 ;;		_velocidadEstandar
  3470 ;; This function is called by:
  3471 ;;		_comportamientoBasico
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text6
  3476  004A10                     __ptext6:
  3477                           	opt callstack 0
  3478  004A10                     _regresarPuntoPartida:
  3479                           	opt callstack 23
  3480  004A10                     
  3481                           ;main.c: 646:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  3482  004A10  0EFF               	movlw	255
  3483  004A12  0100               	movlb	0	; () banked
  3484  004A14  259C               	addwf	regresarPuntoPartida@numMovimientos& (0+255),w,b
  3485  004A16  6F9E               	movwf	regresarPuntoPartida@i& (0+255),b
  3486  004A18  0EFF               	movlw	255
  3487  004A1A  219D               	addwfc	(regresarPuntoPartida@numMovimientos+1)& (0+255),w,b
  3488  004A1C  6F9F               	movwf	(regresarPuntoPartida@i+1)& (0+255),b
  3489  004A1E  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  3490  004A20  EF16  F025         	goto	u11610
  3491  004A24  EF14  F025         	goto	u11611
  3492  004A28                     u11611:
  3493  004A28  EF18  F025         	goto	l10371
  3494  004A2C                     u11610:
  3495  004A2C  EF5A  F025         	goto	l465
  3496  004A30                     l10371:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;main.c: 648:         if (movimientos[i] == IZQUIERDA) {
  3500  004A30  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3501  004A32  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3502  004A34  6ED9               	movwf	fsr2l,c
  3503  004A36  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3504  004A38  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3505  004A3A  6EDA               	movwf	fsr2h,c
  3506  004A3C  0E02               	movlw	2
  3507  004A3E  18DE               	xorwf	postinc2,w,c
  3508  004A40  A4D8               	btfss	status,2,c
  3509  004A42  EF25  F025         	goto	u11621
  3510  004A46  EF27  F025         	goto	u11620
  3511  004A4A                     u11621:
  3512  004A4A  EF2D  F025         	goto	l10377
  3513  004A4E                     u11620:
  3514  004A4E                     
  3515                           ; BSR set to: 0
  3516                           ;main.c: 649:             velocidadEstandar();
  3517  004A4E  EC20  F02B         	call	_velocidadEstandar	;wreg free
  3518  004A52                     
  3519                           ;main.c: 650:             mouse.curr_state = DERECHA;
  3520  004A52  0E03               	movlw	3
  3521  004A54  6E57               	movwf	_mouse^0,c
  3522                           
  3523                           ;main.c: 651:         } else if (movimientos[i] == DERECHA) {
  3524  004A56  EF4D  F025         	goto	l10387
  3525  004A5A                     l10377:
  3526                           
  3527                           ; BSR set to: 0
  3528  004A5A  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3529  004A5C  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3530  004A5E  6ED9               	movwf	fsr2l,c
  3531  004A60  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3532  004A62  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3533  004A64  6EDA               	movwf	fsr2h,c
  3534  004A66  0E03               	movlw	3
  3535  004A68  18DE               	xorwf	postinc2,w,c
  3536  004A6A  A4D8               	btfss	status,2,c
  3537  004A6C  EF3A  F025         	goto	u11631
  3538  004A70  EF3C  F025         	goto	u11630
  3539  004A74                     u11631:
  3540  004A74  EF42  F025         	goto	l10383
  3541  004A78                     u11630:
  3542  004A78                     
  3543                           ; BSR set to: 0
  3544                           ;main.c: 652:             velocidadEstandar();
  3545  004A78  EC20  F02B         	call	_velocidadEstandar	;wreg free
  3546  004A7C                     
  3547                           ;main.c: 653:             mouse.curr_state = IZQUIERDA;
  3548  004A7C  0E02               	movlw	2
  3549  004A7E  6E57               	movwf	_mouse^0,c
  3550                           
  3551                           ;main.c: 654:         } else {
  3552  004A80  EF4D  F025         	goto	l10387
  3553  004A84                     l10383:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;main.c: 656:             PID();
  3557  004A84  EC22  F017         	call	_PID	;wreg free
  3558  004A88                     
  3559                           ;main.c: 657:             mouse.curr_state = movimientos[i];
  3560  004A88  0100               	movlb	0	; () banked
  3561  004A8A  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3562  004A8C  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3563  004A8E  6ED9               	movwf	fsr2l,c
  3564  004A90  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3565  004A92  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3566  004A94  6EDA               	movwf	fsr2h,c
  3567  004A96  50DF               	movf	indf2,w,c
  3568  004A98  6E57               	movwf	_mouse^0,c
  3569  004A9A                     l10387:
  3570                           
  3571                           ;main.c: 660:         mover();
  3572  004A9A  EC5B  F025         	call	_mover	;wreg free
  3573  004A9E                     
  3574                           ;main.c: 661:     }
  3575  004A9E  0100               	movlb	0	; () banked
  3576  004AA0  079E               	decf	regresarPuntoPartida@i& (0+255),f,b
  3577  004AA2  A0D8               	btfss	status,0,c
  3578  004AA4  079F               	decf	(regresarPuntoPartida@i+1)& (0+255),f,b
  3579  004AA6                     
  3580                           ; BSR set to: 0
  3581  004AA6  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  3582  004AA8  EF5A  F025         	goto	u11640
  3583  004AAC  EF58  F025         	goto	u11641
  3584  004AB0                     u11641:
  3585  004AB0  EF18  F025         	goto	l10371
  3586  004AB4                     u11640:
  3587  004AB4                     l465:
  3588                           
  3589                           ; BSR set to: 0
  3590  004AB4  0012               	return		;funcret
  3591  004AB6                     __end_of_regresarPuntoPartida:
  3592                           	opt callstack 0
  3593                           
  3594 ;; *************** function _regresarAlCruce *****************
  3595 ;; Defined at:
  3596 ;;		line 664 in file "main.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3599 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  3600 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  i               2   62[BANK0 ] int 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3612 ;;      Params:         0       4       0       0       0       0       0       0       0
  3613 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3614 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3615 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3616 ;;Total ram usage:        7 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    6
  3619 ;; This function calls:
  3620 ;;		_PID
  3621 ;;		_mover
  3622 ;;		_velocidadEstandar
  3623 ;; This function is called by:
  3624 ;;		_comportamientoBasico
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text7
  3629  004686                     __ptext7:
  3630                           	opt callstack 0
  3631  004686                     _regresarAlCruce:
  3632                           	opt callstack 23
  3633  004686                     
  3634                           ;main.c: 666:     for (T_INT i = numMovimientos - 1; i > 1; i--) {
  3635  004686  0EFF               	movlw	255
  3636  004688  0100               	movlb	0	; () banked
  3637  00468A  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  3638  00468C  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  3639  00468E  0EFF               	movlw	255
  3640  004690  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  3641  004692  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  3642  004694  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3643  004696  EF58  F023         	goto	u11570
  3644  00469A  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3645  00469C  E107               	bnz	u11571
  3646  00469E  0E02               	movlw	2
  3647  0046A0  5D9E               	subwf	regresarAlCruce@i& (0+255),w,b
  3648  0046A2  B0D8               	btfsc	status,0,c
  3649  0046A4  EF56  F023         	goto	u11571
  3650  0046A8  EF58  F023         	goto	u11570
  3651  0046AC                     u11571:
  3652  0046AC  EF5A  F023         	goto	l10345
  3653  0046B0                     u11570:
  3654  0046B0  EFA3  F023         	goto	l474
  3655  0046B4                     l10345:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;main.c: 670:         if (movimientos[i] == IZQUIERDA) {
  3659  0046B4  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3660  0046B6  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3661  0046B8  6ED9               	movwf	fsr2l,c
  3662  0046BA  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3663  0046BC  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3664  0046BE  6EDA               	movwf	fsr2h,c
  3665  0046C0  0E02               	movlw	2
  3666  0046C2  18DE               	xorwf	postinc2,w,c
  3667  0046C4  A4D8               	btfss	status,2,c
  3668  0046C6  EF67  F023         	goto	u11581
  3669  0046CA  EF69  F023         	goto	u11580
  3670  0046CE                     u11581:
  3671  0046CE  EF6F  F023         	goto	l10351
  3672  0046D2                     u11580:
  3673  0046D2                     
  3674                           ; BSR set to: 0
  3675                           ;main.c: 671:             velocidadEstandar();
  3676  0046D2  EC20  F02B         	call	_velocidadEstandar	;wreg free
  3677  0046D6                     
  3678                           ;main.c: 672:             mouse.curr_state = DERECHA;
  3679  0046D6  0E03               	movlw	3
  3680  0046D8  6E57               	movwf	_mouse^0,c
  3681                           
  3682                           ;main.c: 673:         } else if (movimientos[i] == DERECHA) {
  3683  0046DA  EF8F  F023         	goto	l10361
  3684  0046DE                     l10351:
  3685                           
  3686                           ; BSR set to: 0
  3687  0046DE  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3688  0046E0  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3689  0046E2  6ED9               	movwf	fsr2l,c
  3690  0046E4  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3691  0046E6  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3692  0046E8  6EDA               	movwf	fsr2h,c
  3693  0046EA  0E03               	movlw	3
  3694  0046EC  18DE               	xorwf	postinc2,w,c
  3695  0046EE  A4D8               	btfss	status,2,c
  3696  0046F0  EF7C  F023         	goto	u11591
  3697  0046F4  EF7E  F023         	goto	u11590
  3698  0046F8                     u11591:
  3699  0046F8  EF84  F023         	goto	l10357
  3700  0046FC                     u11590:
  3701  0046FC                     
  3702                           ; BSR set to: 0
  3703                           ;main.c: 674:             velocidadEstandar();
  3704  0046FC  EC20  F02B         	call	_velocidadEstandar	;wreg free
  3705  004700                     
  3706                           ;main.c: 675:             mouse.curr_state = IZQUIERDA;
  3707  004700  0E02               	movlw	2
  3708  004702  6E57               	movwf	_mouse^0,c
  3709                           
  3710                           ;main.c: 676:         } else {
  3711  004704  EF8F  F023         	goto	l10361
  3712  004708                     l10357:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;main.c: 678:             PID();
  3716  004708  EC22  F017         	call	_PID	;wreg free
  3717  00470C                     
  3718                           ;main.c: 679:             mouse.curr_state = movimientos[i];
  3719  00470C  0100               	movlb	0	; () banked
  3720  00470E  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3721  004710  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3722  004712  6ED9               	movwf	fsr2l,c
  3723  004714  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3724  004716  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3725  004718  6EDA               	movwf	fsr2h,c
  3726  00471A  50DF               	movf	indf2,w,c
  3727  00471C  6E57               	movwf	_mouse^0,c
  3728  00471E                     l10361:
  3729                           
  3730                           ;main.c: 682:         mover();
  3731  00471E  EC5B  F025         	call	_mover	;wreg free
  3732  004722                     
  3733                           ;main.c: 683:     }
  3734  004722  0100               	movlb	0	; () banked
  3735  004724  079E               	decf	regresarAlCruce@i& (0+255),f,b
  3736  004726  A0D8               	btfss	status,0,c
  3737  004728  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  3738  00472A                     
  3739                           ; BSR set to: 0
  3740  00472A  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3741  00472C  EFA3  F023         	goto	u11600
  3742  004730  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3743  004732  E107               	bnz	u11601
  3744  004734  0E02               	movlw	2
  3745  004736  5D9E               	subwf	regresarAlCruce@i& (0+255),w,b
  3746  004738  B0D8               	btfsc	status,0,c
  3747  00473A  EFA1  F023         	goto	u11601
  3748  00473E  EFA3  F023         	goto	u11600
  3749  004742                     u11601:
  3750  004742  EF5A  F023         	goto	l10345
  3751  004746                     u11600:
  3752  004746                     l474:
  3753                           
  3754                           ; BSR set to: 0
  3755  004746  0012               	return		;funcret
  3756  004748                     __end_of_regresarAlCruce:
  3757                           	opt callstack 0
  3758                           
  3759 ;; *************** function _recorrerCaminoEncontrado *****************
  3760 ;; Defined at:
  3761 ;;		line 686 in file "main.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3764 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  3765 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  i               2   62[BANK0 ] int 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3777 ;;      Params:         0       4       0       0       0       0       0       0       0
  3778 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3779 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3780 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3781 ;;Total ram usage:        7 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    6
  3784 ;; This function calls:
  3785 ;;		_PID
  3786 ;;		_mover
  3787 ;;		_velocidadEstandar
  3788 ;; This function is called by:
  3789 ;;		_comportamientoBasico
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text8
  3794  004BE6                     __ptext8:
  3795                           	opt callstack 0
  3796  004BE6                     _recorrerCaminoEncontrado:
  3797                           	opt callstack 23
  3798  004BE6                     
  3799                           ;main.c: 688:     for (T_INT i = 0; i < numMovimientos; i++) {
  3800  004BE6  0E00               	movlw	0
  3801  004BE8  0100               	movlb	0	; () banked
  3802  004BEA  6F9F               	movwf	(recorrerCaminoEncontrado@i+1)& (0+255),b
  3803  004BEC  0E00               	movlw	0
  3804  004BEE  6F9E               	movwf	recorrerCaminoEncontrado@i& (0+255),b
  3805  004BF0  EF2C  F026         	goto	l10415
  3806  004BF4                     l10401:
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;main.c: 690:         if (movimientos[i] == IZQUIERDA || movimientos[i] == DERECHA)
  3810  004BF4  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3811  004BF6  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3812  004BF8  6ED9               	movwf	fsr2l,c
  3813  004BFA  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3814  004BFC  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3815  004BFE  6EDA               	movwf	fsr2h,c
  3816  004C00  0E02               	movlw	2
  3817  004C02  18DE               	xorwf	postinc2,w,c
  3818  004C04  B4D8               	btfsc	status,2,c
  3819  004C06  EF07  F026         	goto	u11651
  3820  004C0A  EF09  F026         	goto	u11650
  3821  004C0E                     u11651:
  3822  004C0E  EF18  F026         	goto	l10405
  3823  004C12                     u11650:
  3824  004C12                     
  3825                           ; BSR set to: 0
  3826  004C12  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3827  004C14  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3828  004C16  6ED9               	movwf	fsr2l,c
  3829  004C18  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3830  004C1A  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3831  004C1C  6EDA               	movwf	fsr2h,c
  3832  004C1E  0E03               	movlw	3
  3833  004C20  18DE               	xorwf	postinc2,w,c
  3834  004C22  A4D8               	btfss	status,2,c
  3835  004C24  EF16  F026         	goto	u11661
  3836  004C28  EF18  F026         	goto	u11660
  3837  004C2C                     u11661:
  3838  004C2C  EF1C  F026         	goto	l10407
  3839  004C30                     u11660:
  3840  004C30                     l10405:
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;main.c: 691:             velocidadEstandar();
  3844  004C30  EC20  F02B         	call	_velocidadEstandar	;wreg free
  3845  004C34  EF1E  F026         	goto	l10409
  3846  004C38                     l10407:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;main.c: 694:             PID();
  3850  004C38  EC22  F017         	call	_PID	;wreg free
  3851  004C3C                     l10409:
  3852                           
  3853                           ;main.c: 696:         mouse.curr_state = movimientos[i];
  3854  004C3C  0100               	movlb	0	; () banked
  3855  004C3E  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3856  004C40  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3857  004C42  6ED9               	movwf	fsr2l,c
  3858  004C44  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3859  004C46  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3860  004C48  6EDA               	movwf	fsr2h,c
  3861  004C4A  50DF               	movf	indf2,w,c
  3862  004C4C  6E57               	movwf	_mouse^0,c
  3863  004C4E                     
  3864                           ; BSR set to: 0
  3865                           ;main.c: 697:         mover();
  3866  004C4E  EC5B  F025         	call	_mover	;wreg free
  3867  004C52                     
  3868                           ;main.c: 698:     }
  3869  004C52  0100               	movlb	0	; () banked
  3870  004C54  4B9E               	infsnz	recorrerCaminoEncontrado@i& (0+255),f,b
  3871  004C56  2B9F               	incf	(recorrerCaminoEncontrado@i+1)& (0+255),f,b
  3872  004C58                     l10415:
  3873                           
  3874                           ; BSR set to: 0
  3875  004C58  519C               	movf	recorrerCaminoEncontrado@numMovimientos& (0+255),w,b
  3876  004C5A  5D9E               	subwf	recorrerCaminoEncontrado@i& (0+255),w,b
  3877  004C5C  519D               	movf	(recorrerCaminoEncontrado@numMovimientos+1)& (0+255),w,b
  3878  004C5E  599F               	subwfb	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3879  004C60  A0D8               	btfss	status,0,c
  3880  004C62  EF35  F026         	goto	u11671
  3881  004C66  EF37  F026         	goto	u11670
  3882  004C6A                     u11671:
  3883  004C6A  EFFA  F025         	goto	l10401
  3884  004C6E                     u11670:
  3885  004C6E                     
  3886                           ; BSR set to: 0
  3887  004C6E  0012               	return		;funcret
  3888  004C70                     __end_of_recorrerCaminoEncontrado:
  3889                           	opt callstack 0
  3890                           
  3891 ;; *************** function _mover *****************
  3892 ;; Defined at:
  3893 ;;		line 589 in file "main.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3909 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3910 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3911 ;;Total ram usage:        2 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    3
  3914 ;; This function calls:
  3915 ;;		_forzarAvanceRecto
  3916 ;; This function is called by:
  3917 ;;		_regresarPuntoPartida
  3918 ;;		_regresarAlCruce
  3919 ;;		_recorrerCaminoEncontrado
  3920 ;;		_probarGirosAuto
  3921 ;;		_probarPID
  3922 ;;		_probarCruceT
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text9
  3927  004AB6                     __ptext9:
  3928                           	opt callstack 0
  3929  004AB6                     _mover:
  3930                           	opt callstack 25
  3931  004AB6                     
  3932                           ;main.c: 591:     switch (mouse.curr_state) {
  3933  004AB6  EF8A  F025         	goto	l9795
  3934  004ABA                     l450:
  3935                           
  3936                           ;main.c: 595:             LATB4 = 1;
  3937  004ABA  888A               	bsf	3978,4,c	;volatile
  3938                           
  3939                           ;main.c: 596:             LATB5 = 0;
  3940  004ABC  9A8A               	bcf	3978,5,c	;volatile
  3941                           
  3942                           ;main.c: 597:             LATB6 = 1;
  3943  004ABE  8C8A               	bsf	3978,6,c	;volatile
  3944                           
  3945                           ;main.c: 600:             if (!0)
  3946  004AC0  9E8A               	bcf	3978,7,c	;volatile
  3947  004AC2                     
  3948                           ;main.c: 601:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  3949  004AC2  0E48               	movlw	72
  3950  004AC4  6E08               	movwf	??_mover^0,c
  3951  004AC6  0E6C               	movlw	108
  3952  004AC8                     u12037:
  3953  004AC8  2EE8               	decfsz	wreg,f,c
  3954  004ACA  D7FE               	bra	u12037
  3955  004ACC  2E08               	decfsz	??_mover^0,f,c
  3956  004ACE  D7FC               	bra	u12037
  3957  004AD0  D000               	nop2	
  3958  004AD2  EFA7  F025         	goto	l456
  3959  004AD6                     l453:
  3960                           
  3961                           ;main.c: 607:             LATB4 = 0;
  3962  004AD6  988A               	bcf	3978,4,c	;volatile
  3963                           
  3964                           ;main.c: 608:             LATB5 = 0;
  3965  004AD8  9A8A               	bcf	3978,5,c	;volatile
  3966                           
  3967                           ;main.c: 609:             LATB6 = 1;
  3968  004ADA  8C8A               	bsf	3978,6,c	;volatile
  3969                           
  3970                           ;main.c: 610:             LATB7 = 0;
  3971  004ADC  9E8A               	bcf	3978,7,c	;volatile
  3972  004ADE                     l9785:
  3973                           
  3974                           ;main.c: 612:             _delay((unsigned long)((410)*(4000000/4000.0)));
  3975  004ADE  0E03               	movlw	3
  3976  004AE0  6E09               	movwf	(??_mover+1)^0,c
  3977  004AE2  0E15               	movlw	21
  3978  004AE4  6E08               	movwf	??_mover^0,c
  3979  004AE6  0E74               	movlw	116
  3980  004AE8                     u12047:
  3981  004AE8  2EE8               	decfsz	wreg,f,c
  3982  004AEA  D7FE               	bra	u12047
  3983  004AEC  2E08               	decfsz	??_mover^0,f,c
  3984  004AEE  D7FC               	bra	u12047
  3985  004AF0  2E09               	decfsz	(??_mover+1)^0,f,c
  3986  004AF2  D7FA               	bra	u12047
  3987  004AF4                     
  3988                           ;main.c: 614:             forzarAvanceRecto();
  3989  004AF4  EC59  F02B         	call	_forzarAvanceRecto	;wreg free
  3990                           
  3991                           ;main.c: 616:             break;
  3992  004AF8  EFA7  F025         	goto	l456
  3993  004AFC                     l454:
  3994                           
  3995                           ;main.c: 620:             LATB4 = 1;
  3996  004AFC  888A               	bsf	3978,4,c	;volatile
  3997                           
  3998                           ;main.c: 621:             LATB5 = 0;
  3999  004AFE  9A8A               	bcf	3978,5,c	;volatile
  4000                           
  4001                           ;main.c: 622:             LATB6 = 0;
  4002  004B00  9C8A               	bcf	3978,6,c	;volatile
  4003                           
  4004                           ;main.c: 623:             LATB7 = 0;
  4005  004B02  9E8A               	bcf	3978,7,c	;volatile
  4006  004B04  EF6F  F025         	goto	l9785
  4007  004B08                     l455:
  4008                           
  4009                           ;main.c: 633:             LATB4 = 0;
  4010  004B08  988A               	bcf	3978,4,c	;volatile
  4011                           
  4012                           ;main.c: 634:             LATB5 = 0;
  4013  004B0A  9A8A               	bcf	3978,5,c	;volatile
  4014                           
  4015                           ;main.c: 635:             LATB6 = 0;
  4016  004B0C  9C8A               	bcf	3978,6,c	;volatile
  4017                           
  4018                           ;main.c: 636:             LATB7 = 0;
  4019  004B0E  9E8A               	bcf	3978,7,c	;volatile
  4020                           
  4021                           ;main.c: 638:             break;
  4022  004B10  EFA7  F025         	goto	l456
  4023  004B14                     l9795:
  4024  004B14  5057               	movf	_mouse^0,w,c
  4025  004B16  6E08               	movwf	??_mover^0,c
  4026  004B18  6A09               	clrf	(??_mover+1)^0,c
  4027                           
  4028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4029                           ; Switch size 1, requested type "simple"
  4030                           ; Number of cases is 1, Range of values is 0 to 0
  4031                           ; switch strategies available:
  4032                           ; Name         Instructions Cycles
  4033                           ; simple_byte            4     3 (average)
  4034                           ;	Chosen strategy is simple_byte
  4035  004B1A  5009               	movf	(??_mover+1)^0,w,c
  4036  004B1C  0A00               	xorlw	0	; case 0
  4037  004B1E  B4D8               	btfsc	status,2,c
  4038  004B20  EF94  F025         	goto	l11175
  4039  004B24  EFA7  F025         	goto	l456
  4040  004B28                     l11175:
  4041                           
  4042                           ; Switch size 1, requested type "simple"
  4043                           ; Number of cases is 4, Range of values is 1 to 4
  4044                           ; switch strategies available:
  4045                           ; Name         Instructions Cycles
  4046                           ; simple_byte           13     7 (average)
  4047                           ;	Chosen strategy is simple_byte
  4048  004B28  5008               	movf	??_mover^0,w,c
  4049  004B2A  0A01               	xorlw	1	; case 1
  4050  004B2C  B4D8               	btfsc	status,2,c
  4051  004B2E  EF5D  F025         	goto	l450
  4052  004B32  0A03               	xorlw	3	; case 2
  4053  004B34  B4D8               	btfsc	status,2,c
  4054  004B36  EF6B  F025         	goto	l453
  4055  004B3A  0A01               	xorlw	1	; case 3
  4056  004B3C  B4D8               	btfsc	status,2,c
  4057  004B3E  EF7E  F025         	goto	l454
  4058  004B42  0A07               	xorlw	7	; case 4
  4059  004B44  B4D8               	btfsc	status,2,c
  4060  004B46  EF84  F025         	goto	l455
  4061  004B4A  EFA7  F025         	goto	l456
  4062  004B4E                     l456:
  4063  004B4E  0012               	return		;funcret
  4064  004B50                     __end_of_mover:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _PID *****************
  4068 ;; Defined at:
  4069 ;;		line 1232 in file "main.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  error           2   56[BANK0 ] int 
  4074 ;;  dif             2   54[BANK0 ] int 
  4075 ;;  velocidadDer    2   50[BANK0 ] int 
  4076 ;;  velocidadIzq    2   46[BANK0 ] int 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4086 ;;      Params:         0       0       0       0       0       0       0       0       0
  4087 ;;      Locals:         0      16       0       0       0       0       0       0       0
  4088 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4089 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4090 ;;Total ram usage:       18 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    5
  4093 ;; This function calls:
  4094 ;;		___fladd
  4095 ;;		___flmul
  4096 ;;		___flsub
  4097 ;;		___fltol
  4098 ;;		___xxtofl
  4099 ;;		_pwmDuty
  4100 ;;		_roundf
  4101 ;; This function is called by:
  4102 ;;		_comportamientoBasico
  4103 ;;		_regresarPuntoPartida
  4104 ;;		_regresarAlCruce
  4105 ;;		_recorrerCaminoEncontrado
  4106 ;;		_probarPID
  4107 ;;		_probarCruceT
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text10
  4112  002E44                     __ptext10:
  4113                           	opt callstack 0
  4114  002E44                     _PID:
  4115                           	opt callstack 23
  4116  002E44                     
  4117                           ;main.c: 1235:     T_INT error = 0;
  4118  002E44  0E00               	movlw	0
  4119  002E46  0100               	movlb	0	; () banked
  4120  002E48  6F99               	movwf	(PID@error+1)& (0+255),b
  4121  002E4A  0E00               	movlw	0
  4122  002E4C  6F98               	movwf	PID@error& (0+255),b
  4123  002E4E                     
  4124                           ; BSR set to: 0
  4125                           ;main.c: 1236:     static T_INT difAnt = 0;;main.c: 1239:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  4126  002E4E  C12C  F048         	movff	_sensorDerecha,___flsub@a
  4127  002E52  C12D  F049         	movff	_sensorDerecha+1,___flsub@a+1
  4128  002E56  C12E  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  4129  002E5A  C12F  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  4130  002E5E  C128  F044         	movff	_sensorIzquierda,___flsub@b
  4131  002E62  C129  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  4132  002E66  C12A  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  4133  002E6A  C12B  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  4134  002E6E  ECCF  F029         	call	___flsub	;wreg free
  4135  002E72  C044  F072         	movff	?___flsub,___fltol@f1
  4136  002E76  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  4137  002E7A  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  4138  002E7E  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  4139  002E82  EC09  F020         	call	___fltol	;wreg free
  4140  002E86  C072  F096         	movff	?___fltol,PID@dif
  4141  002E8A  C073  F097         	movff	?___fltol+1,PID@dif+1
  4142  002E8E                     
  4143                           ;main.c: 1241:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  4144  002E8E  0ECD               	movlw	205
  4145  002E90  6E1F               	movwf	___flmul@a^0,c
  4146  002E92  0ECC               	movlw	204
  4147  002E94  6E20               	movwf	(___flmul@a+1)^0,c
  4148  002E96  0ECC               	movlw	204
  4149  002E98  6E21               	movwf	(___flmul@a+2)^0,c
  4150  002E9A  0E3D               	movlw	61
  4151  002E9C  6E22               	movwf	(___flmul@a+3)^0,c
  4152  002E9E  0100               	movlb	0	; () banked
  4153  002EA0  5196               	movf	PID@dif& (0+255),w,b
  4154  002EA2  0101               	movlb	1	; () banked
  4155  002EA4  5D36               	subwf	PID@difAnt& (0+255),w,b
  4156  002EA6  0100               	movlb	0	; () banked
  4157  002EA8  6F88               	movwf	??_PID& (0+255),b
  4158  002EAA  5197               	movf	(PID@dif+1)& (0+255),w,b
  4159  002EAC  0101               	movlb	1	; () banked
  4160  002EAE  5937               	subwfb	(PID@difAnt+1)& (0+255),w,b
  4161  002EB0  0100               	movlb	0	; () banked
  4162  002EB2  6F89               	movwf	(??_PID+1)& (0+255),b
  4163  002EB4  C088  F00D         	movff	??_PID,___xxtofl@val
  4164  002EB8  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  4165  002EBC  0E00               	movlw	0
  4166  002EBE  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  4167  002EC0  0EFF               	movlw	-1
  4168  002EC2  6E0F               	movwf	(___xxtofl@val+2)^0,c
  4169  002EC4  6E10               	movwf	(___xxtofl@val+3)^0,c
  4170  002EC6  0E01               	movlw	1
  4171  002EC8  EC34  F01A         	call	___xxtofl
  4172  002ECC  C00D  F01B         	movff	?___xxtofl,___flmul@b
  4173  002ED0  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  4174  002ED4  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  4175  002ED8  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  4176  002EDC  ECF7  F00F         	call	___flmul	;wreg free
  4177  002EE0  C01B  F038         	movff	?___flmul,___fladd@a
  4178  002EE4  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  4179  002EE8  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  4180  002EEC  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  4181  002EF0  0E66               	movlw	102
  4182  002EF2  6E1F               	movwf	___flmul@a^0,c
  4183  002EF4  0E66               	movlw	102
  4184  002EF6  6E20               	movwf	(___flmul@a+1)^0,c
  4185  002EF8  0E66               	movlw	102
  4186  002EFA  6E21               	movwf	(___flmul@a+2)^0,c
  4187  002EFC  0E3F               	movlw	63
  4188  002EFE  6E22               	movwf	(___flmul@a+3)^0,c
  4189  002F00  C096  F00D         	movff	PID@dif,___xxtofl@val
  4190  002F04  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  4191  002F08  0E00               	movlw	0
  4192  002F0A  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  4193  002F0C  0EFF               	movlw	-1
  4194  002F0E  6E0F               	movwf	(___xxtofl@val+2)^0,c
  4195  002F10  6E10               	movwf	(___xxtofl@val+3)^0,c
  4196  002F12  0E01               	movlw	1
  4197  002F14  EC34  F01A         	call	___xxtofl
  4198  002F18  C00D  F01B         	movff	?___xxtofl,___flmul@b
  4199  002F1C  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  4200  002F20  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  4201  002F24  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  4202  002F28  ECF7  F00F         	call	___flmul	;wreg free
  4203  002F2C  C01B  F034         	movff	?___flmul,___fladd@b
  4204  002F30  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  4205  002F34  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  4206  002F38  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  4207  002F3C  EC80  F00B         	call	___fladd	;wreg free
  4208  002F40  C034  F08A         	movff	?___fladd,_PID$1843
  4209  002F44  C035  F08B         	movff	?___fladd+1,_PID$1843+1
  4210  002F48  C036  F08C         	movff	?___fladd+2,_PID$1843+2
  4211  002F4C  C037  F08D         	movff	?___fladd+3,_PID$1843+3
  4212  002F50                     
  4213                           ;main.c: 1241:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  4214  002F50  C08A  F04C         	movff	_PID$1843,roundf@x
  4215  002F54  C08B  F04D         	movff	_PID$1843+1,roundf@x+1
  4216  002F58  C08C  F04E         	movff	_PID$1843+2,roundf@x+2
  4217  002F5C  C08D  F04F         	movff	_PID$1843+3,roundf@x+3
  4218  002F60  EC0C  F012         	call	_roundf	;wreg free
  4219  002F64  C04C  F072         	movff	?_roundf,___fltol@f1
  4220  002F68  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  4221  002F6C  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  4222  002F70  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  4223  002F74  EC09  F020         	call	___fltol	;wreg free
  4224  002F78  C072  F098         	movff	?___fltol,PID@error
  4225  002F7C  C073  F099         	movff	?___fltol+1,PID@error+1
  4226  002F80                     
  4227                           ;main.c: 1243:     difAnt = dif;
  4228  002F80  C096  F136         	movff	PID@dif,PID@difAnt
  4229  002F84  C097  F137         	movff	PID@dif+1,PID@difAnt+1
  4230  002F88                     
  4231                           ;main.c: 1245:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  4232  002F88  0E64               	movlw	100
  4233  002F8A  0100               	movlb	0	; () banked
  4234  002F8C  6F88               	movwf	??_PID& (0+255),b
  4235  002F8E  0E00               	movlw	0
  4236  002F90  6F89               	movwf	(??_PID+1)& (0+255),b
  4237  002F92  5198               	movf	PID@error& (0+255),w,b
  4238  002F94  5D88               	subwf	??_PID& (0+255),w,b
  4239  002F96  5199               	movf	(PID@error+1)& (0+255),w,b
  4240  002F98  5989               	subwfb	(??_PID+1)& (0+255),w,b
  4241  002F9A  0B80               	andlw	128
  4242  002F9C  A4D8               	btfss	status,2,c
  4243  002F9E  EFD3  F017         	goto	u11131
  4244  002FA2  EFD5  F017         	goto	u11130
  4245  002FA6                     u11131:
  4246  002FA6  EFFF  F017         	goto	l9843
  4247  002FAA                     u11130:
  4248  002FAA                     
  4249                           ; BSR set to: 0
  4250  002FAA  0E64               	movlw	100
  4251  002FAC  6F88               	movwf	??_PID& (0+255),b
  4252  002FAE  0E00               	movlw	0
  4253  002FB0  6F89               	movwf	(??_PID+1)& (0+255),b
  4254  002FB2  5198               	movf	PID@error& (0+255),w,b
  4255  002FB4  5F88               	subwf	??_PID& (0+255),f,b
  4256  002FB6  5199               	movf	(PID@error+1)& (0+255),w,b
  4257  002FB8  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  4258  002FBA  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4259  002FBC  EFEB  F017         	goto	u11140
  4260  002FC0  5189               	movf	(??_PID+1)& (0+255),w,b
  4261  002FC2  E107               	bnz	u11141
  4262  002FC4  0E65               	movlw	101
  4263  002FC6  5D88               	subwf	??_PID& (0+255),w,b
  4264  002FC8  B0D8               	btfsc	status,0,c
  4265  002FCA  EFE9  F017         	goto	u11141
  4266  002FCE  EFEB  F017         	goto	u11140
  4267  002FD2                     u11141:
  4268  002FD2  EFF5  F017         	goto	l9839
  4269  002FD6                     u11140:
  4270  002FD6                     
  4271                           ; BSR set to: 0
  4272  002FD6  5198               	movf	PID@error& (0+255),w,b
  4273  002FD8  0864               	sublw	100
  4274  002FDA  6F90               	movwf	_PID$761& (0+255),b
  4275  002FDC  5199               	movf	(PID@error+1)& (0+255),w,b
  4276  002FDE  A0D8               	btfss	status,0,c
  4277  002FE0  2AE8               	incf	wreg,f,c
  4278  002FE2  0800               	sublw	0
  4279  002FE4  6F91               	movwf	(_PID$761+1)& (0+255),b
  4280  002FE6  EFF9  F017         	goto	l9841
  4281  002FEA                     l9839:
  4282                           
  4283                           ; BSR set to: 0
  4284  002FEA  0E00               	movlw	0
  4285  002FEC  6F91               	movwf	(_PID$761+1)& (0+255),b
  4286  002FEE  0E64               	movlw	100
  4287  002FF0  6F90               	movwf	_PID$761& (0+255),b
  4288  002FF2                     l9841:
  4289                           
  4290                           ; BSR set to: 0
  4291  002FF2  C090  F08E         	movff	_PID$761,PID@velocidadIzquierda
  4292  002FF6  C091  F08F         	movff	_PID$761+1,PID@velocidadIzquierda+1
  4293  002FFA  EF03  F018         	goto	l9845
  4294  002FFE                     l9843:
  4295                           
  4296                           ; BSR set to: 0
  4297  002FFE  0E00               	movlw	0
  4298  003000  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  4299  003002  0E00               	movlw	0
  4300  003004  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  4301  003006                     l9845:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;main.c: 1246:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  4305  003006  0E64               	movlw	100
  4306  003008  2598               	addwf	PID@error& (0+255),w,b
  4307  00300A  0E00               	movlw	0
  4308  00300C  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4309  00300E  0B80               	andlw	128
  4310  003010  A4D8               	btfss	status,2,c
  4311  003012  EF0D  F018         	goto	u11151
  4312  003016  EF0F  F018         	goto	u11150
  4313  00301A                     u11151:
  4314  00301A  EF35  F018         	goto	l9855
  4315  00301E                     u11150:
  4316  00301E                     
  4317                           ; BSR set to: 0
  4318  00301E  0E64               	movlw	100
  4319  003020  2598               	addwf	PID@error& (0+255),w,b
  4320  003022  6F88               	movwf	??_PID& (0+255),b
  4321  003024  0E00               	movlw	0
  4322  003026  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4323  003028  6F89               	movwf	(??_PID+1)& (0+255),b
  4324  00302A  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4325  00302C  EF23  F018         	goto	u11160
  4326  003030  5189               	movf	(??_PID+1)& (0+255),w,b
  4327  003032  E107               	bnz	u11161
  4328  003034  0E65               	movlw	101
  4329  003036  5D88               	subwf	??_PID& (0+255),w,b
  4330  003038  B0D8               	btfsc	status,0,c
  4331  00303A  EF21  F018         	goto	u11161
  4332  00303E  EF23  F018         	goto	u11160
  4333  003042                     u11161:
  4334  003042  EF2B  F018         	goto	l9851
  4335  003046                     u11160:
  4336  003046                     
  4337                           ; BSR set to: 0
  4338  003046  0E64               	movlw	100
  4339  003048  2598               	addwf	PID@error& (0+255),w,b
  4340  00304A  6F94               	movwf	_PID$763& (0+255),b
  4341  00304C  0E00               	movlw	0
  4342  00304E  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4343  003050  6F95               	movwf	(_PID$763+1)& (0+255),b
  4344  003052  EF2F  F018         	goto	l9853
  4345  003056                     l9851:
  4346                           
  4347                           ; BSR set to: 0
  4348  003056  0E00               	movlw	0
  4349  003058  6F95               	movwf	(_PID$763+1)& (0+255),b
  4350  00305A  0E64               	movlw	100
  4351  00305C  6F94               	movwf	_PID$763& (0+255),b
  4352  00305E                     l9853:
  4353                           
  4354                           ; BSR set to: 0
  4355  00305E  C094  F092         	movff	_PID$763,PID@velocidadDerecha
  4356  003062  C095  F093         	movff	_PID$763+1,PID@velocidadDerecha+1
  4357  003066  EF39  F018         	goto	l9857
  4358  00306A                     l9855:
  4359                           
  4360                           ; BSR set to: 0
  4361  00306A  0E00               	movlw	0
  4362  00306C  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  4363  00306E  0E00               	movlw	0
  4364  003070  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  4365  003072                     l9857:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;main.c: 1248:     pwmDuty(velocidadIzquierda, 1);
  4369  003072  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  4370  003076  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  4371  00307A  0E01               	movlw	1
  4372  00307C  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4373  00307E  EC56  F019         	call	_pwmDuty	;wreg free
  4374  003082                     
  4375                           ;main.c: 1249:     pwmDuty(velocidadDerecha, 2);
  4376  003082  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  4377  003086  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  4378  00308A  0E02               	movlw	2
  4379  00308C  0100               	movlb	0	; () banked
  4380  00308E  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4381  003090  EC56  F019         	call	_pwmDuty	;wreg free
  4382  003094  0012               	return		;funcret
  4383  003096                     __end_of_PID:
  4384                           	opt callstack 0
  4385                           
  4386 ;; *************** function _roundf *****************
  4387 ;; Defined at:
  4388 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  x               4   75[COMRAM] float 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  y               4   14[BANK0 ] float 
  4393 ;;  u               4   10[BANK0 ] struct .
  4394 ;;  e               2    4[BANK0 ] int 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  4   75[COMRAM] float 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4404 ;;      Params:         4       0       0       0       0       0       0       0       0
  4405 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4406 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4407 ;;      Totals:         8      18       0       0       0       0       0       0       0
  4408 ;;Total ram usage:       26 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    4
  4411 ;; This function calls:
  4412 ;;		___fladd
  4413 ;;		___flge
  4414 ;;		___flmul
  4415 ;;		___flneg
  4416 ;;		___flsub
  4417 ;; This function is called by:
  4418 ;;		_PID
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text11
  4423  002418                     __ptext11:
  4424                           	opt callstack 0
  4425  002418                     _roundf:
  4426                           	opt callstack 23
  4427  002418  C100  F06A         	movff	roundf@F525,roundf@u
  4428  00241C  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  4429  002420  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  4430  002424  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  4431  002428  C04C  F06A         	movff	roundf@x,roundf@u
  4432  00242C  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  4433  002430  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  4434  002434  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  4435  002438  C06A  F050         	movff	roundf@u,??_roundf
  4436  00243C  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4437  002440  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4438  002444  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4439  002448  0E18               	movlw	24
  4440  00244A  EF2C  F012         	goto	u10880
  4441  00244E                     u10885:
  4442  00244E  90D8               	bcf	status,0,c
  4443  002450  3253               	rrcf	(??_roundf+3)^0,f,c
  4444  002452  3252               	rrcf	(??_roundf+2)^0,f,c
  4445  002454  3251               	rrcf	(??_roundf+1)^0,f,c
  4446  002456  3250               	rrcf	??_roundf^0,f,c
  4447  002458                     u10880:
  4448  002458  2EE8               	decfsz	wreg,f,c
  4449  00245A  EF27  F012         	goto	u10885
  4450  00245E  5050               	movf	??_roundf^0,w,c
  4451  002460  0100               	movlb	0	; () banked
  4452  002462  6F64               	movwf	roundf@e& (0+255),b
  4453  002464  6B65               	clrf	(roundf@e+1)& (0+255),b
  4454  002466  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4455  002468  EF3F  F012         	goto	u10891
  4456  00246C  5165               	movf	(roundf@e+1)& (0+255),w,b
  4457  00246E  E109               	bnz	u10890
  4458  002470  0E96               	movlw	150
  4459  002472  5D64               	subwf	roundf@e& (0+255),w,b
  4460  002474  A0D8               	btfss	status,0,c
  4461  002476  EF3F  F012         	goto	u10891
  4462  00247A  EF41  F012         	goto	u10890
  4463  00247E                     u10891:
  4464  00247E  EF4B  F012         	goto	l9677
  4465  002482                     u10890:
  4466  002482                     
  4467                           ; BSR set to: 0
  4468  002482  C04C  F04C         	movff	roundf@x,?_roundf
  4469  002486  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  4470  00248A  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  4471  00248E  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  4472  002492  EFE4  F013         	goto	l1752
  4473  002496                     l9677:
  4474                           
  4475                           ; BSR set to: 0
  4476  002496  C06A  F050         	movff	roundf@u,??_roundf
  4477  00249A  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4478  00249E  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4479  0024A2  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4480  0024A6  0E20               	movlw	32
  4481  0024A8  EF5B  F012         	goto	u10900
  4482  0024AC                     u10905:
  4483  0024AC  90D8               	bcf	status,0,c
  4484  0024AE  3253               	rrcf	(??_roundf+3)^0,f,c
  4485  0024B0  3252               	rrcf	(??_roundf+2)^0,f,c
  4486  0024B2  3251               	rrcf	(??_roundf+1)^0,f,c
  4487  0024B4  3250               	rrcf	??_roundf^0,f,c
  4488  0024B6                     u10900:
  4489  0024B6  2EE8               	decfsz	wreg,f,c
  4490  0024B8  EF56  F012         	goto	u10905
  4491  0024BC  5050               	movf	??_roundf^0,w,c
  4492  0024BE  1051               	iorwf	(??_roundf+1)^0,w,c
  4493  0024C0  1052               	iorwf	(??_roundf+2)^0,w,c
  4494  0024C2  1053               	iorwf	(??_roundf+3)^0,w,c
  4495  0024C4  B4D8               	btfsc	status,2,c
  4496  0024C6  EF67  F012         	goto	u10911
  4497  0024CA  EF69  F012         	goto	u10910
  4498  0024CE                     u10911:
  4499  0024CE  EF7B  F012         	goto	l9681
  4500  0024D2                     u10910:
  4501  0024D2                     
  4502                           ; BSR set to: 0
  4503  0024D2  C04C  F006         	movff	roundf@x,___flneg@f1
  4504  0024D6  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  4505  0024DA  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  4506  0024DE  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  4507  0024E2  ECB6  F02A         	call	___flneg	;wreg free
  4508  0024E6  C006  F04C         	movff	?___flneg,roundf@x
  4509  0024EA  C007  F04D         	movff	?___flneg+1,roundf@x+1
  4510  0024EE  C008  F04E         	movff	?___flneg+2,roundf@x+2
  4511  0024F2  C009  F04F         	movff	?___flneg+3,roundf@x+3
  4512  0024F6                     l9681:
  4513  0024F6  0100               	movlb	0	; () banked
  4514  0024F8  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4515  0024FA  EF8A  F012         	goto	u10920
  4516  0024FE  5165               	movf	(roundf@e+1)& (0+255),w,b
  4517  002500  E107               	bnz	u10921
  4518  002502  0E7E               	movlw	126
  4519  002504  5D64               	subwf	roundf@e& (0+255),w,b
  4520  002506  B0D8               	btfsc	status,0,c
  4521  002508  EF88  F012         	goto	u10921
  4522  00250C  EF8A  F012         	goto	u10920
  4523  002510                     u10921:
  4524  002510  EFA6  F012         	goto	l9687
  4525  002514                     u10920:
  4526  002514                     
  4527                           ; BSR set to: 0
  4528  002514  C06A  F01B         	movff	roundf@u,___flmul@b
  4529  002518  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  4530  00251C  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  4531  002520  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  4532  002524  0E00               	movlw	0
  4533  002526  6E1F               	movwf	___flmul@a^0,c
  4534  002528  0E00               	movlw	0
  4535  00252A  6E20               	movwf	(___flmul@a+1)^0,c
  4536  00252C  0E00               	movlw	0
  4537  00252E  6E21               	movwf	(___flmul@a+2)^0,c
  4538  002530  0E00               	movlw	0
  4539  002532  6E22               	movwf	(___flmul@a+3)^0,c
  4540  002534  ECF7  F00F         	call	___flmul	;wreg free
  4541  002538  C01B  F04C         	movff	?___flmul,?_roundf
  4542  00253C  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  4543  002540  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  4544  002544  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  4545  002548  EFE4  F013         	goto	l1752
  4546  00254C                     l9687:
  4547                           
  4548                           ; BSR set to: 0
  4549  00254C  0E00               	movlw	0
  4550  00254E  6E38               	movwf	___fladd@a^0,c
  4551  002550  0E00               	movlw	0
  4552  002552  6E39               	movwf	(___fladd@a+1)^0,c
  4553  002554  0E00               	movlw	0
  4554  002556  6E3A               	movwf	(___fladd@a+2)^0,c
  4555  002558  0E4B               	movlw	75
  4556  00255A  6E3B               	movwf	(___fladd@a+3)^0,c
  4557  00255C  C04C  F034         	movff	roundf@x,___fladd@b
  4558  002560  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  4559  002564  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  4560  002568  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  4561  00256C  EC80  F00B         	call	___fladd	;wreg free
  4562  002570  C034  F066         	movff	?___fladd,_roundf$1844
  4563  002574  C035  F067         	movff	?___fladd+1,_roundf$1844+1
  4564  002578  C036  F068         	movff	?___fladd+2,_roundf$1844+2
  4565  00257C  C037  F069         	movff	?___fladd+3,_roundf$1844+3
  4566  002580  0E00               	movlw	0
  4567  002582  6E38               	movwf	___fladd@a^0,c
  4568  002584  0E00               	movlw	0
  4569  002586  6E39               	movwf	(___fladd@a+1)^0,c
  4570  002588  0E00               	movlw	0
  4571  00258A  6E3A               	movwf	(___fladd@a+2)^0,c
  4572  00258C  0ECB               	movlw	203
  4573  00258E  6E3B               	movwf	(___fladd@a+3)^0,c
  4574  002590  C066  F034         	movff	_roundf$1844,___fladd@b
  4575  002594  C067  F035         	movff	_roundf$1844+1,___fladd@b+1
  4576  002598  C068  F036         	movff	_roundf$1844+2,___fladd@b+2
  4577  00259C  C069  F037         	movff	_roundf$1844+3,___fladd@b+3
  4578  0025A0  EC80  F00B         	call	___fladd	;wreg free
  4579  0025A4  C034  F060         	movff	?___fladd,_roundf$1845
  4580  0025A8  C035  F061         	movff	?___fladd+1,_roundf$1845+1
  4581  0025AC  C036  F062         	movff	?___fladd+2,_roundf$1845+2
  4582  0025B0  C037  F063         	movff	?___fladd+3,_roundf$1845+3
  4583  0025B4  C060  F044         	movff	_roundf$1845,___flsub@b
  4584  0025B8  C061  F045         	movff	_roundf$1845+1,___flsub@b+1
  4585  0025BC  C062  F046         	movff	_roundf$1845+2,___flsub@b+2
  4586  0025C0  C063  F047         	movff	_roundf$1845+3,___flsub@b+3
  4587  0025C4  C04C  F048         	movff	roundf@x,___flsub@a
  4588  0025C8  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  4589  0025CC  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  4590  0025D0  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  4591  0025D4  ECCF  F029         	call	___flsub	;wreg free
  4592  0025D8  C044  F06E         	movff	?___flsub,roundf@y
  4593  0025DC  C045  F06F         	movff	?___flsub+1,roundf@y+1
  4594  0025E0  C046  F070         	movff	?___flsub+2,roundf@y+2
  4595  0025E4  C047  F071         	movff	?___flsub+3,roundf@y+3
  4596  0025E8  0E00               	movlw	0
  4597  0025EA  6E34               	movwf	___flge@ff1^0,c
  4598  0025EC  0E00               	movlw	0
  4599  0025EE  6E35               	movwf	(___flge@ff1+1)^0,c
  4600  0025F0  0E00               	movlw	0
  4601  0025F2  6E36               	movwf	(___flge@ff1+2)^0,c
  4602  0025F4  0E3F               	movlw	63
  4603  0025F6  6E37               	movwf	(___flge@ff1+3)^0,c
  4604  0025F8  C06E  F038         	movff	roundf@y,___flge@ff2
  4605  0025FC  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4606  002600  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4607  002604  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4608  002608  EC10  F021         	call	___flge	;wreg free
  4609  00260C  B0D8               	btfsc	status,0,c
  4610  00260E  EF0B  F013         	goto	u10931
  4611  002612  EF0D  F013         	goto	u10930
  4612  002616                     u10931:
  4613  002616  EF43  F013         	goto	l9691
  4614  00261A                     u10930:
  4615  00261A  C04C  F038         	movff	roundf@x,___fladd@a
  4616  00261E  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4617  002622  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4618  002626  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4619  00262A  C06E  F034         	movff	roundf@y,___fladd@b
  4620  00262E  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4621  002632  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4622  002636  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4623  00263A  EC80  F00B         	call	___fladd	;wreg free
  4624  00263E  C034  F066         	movff	?___fladd,_roundf$1844
  4625  002642  C035  F067         	movff	?___fladd+1,_roundf$1844+1
  4626  002646  C036  F068         	movff	?___fladd+2,_roundf$1844+2
  4627  00264A  C037  F069         	movff	?___fladd+3,_roundf$1844+3
  4628  00264E  C066  F034         	movff	_roundf$1844,___fladd@b
  4629  002652  C067  F035         	movff	_roundf$1844+1,___fladd@b+1
  4630  002656  C068  F036         	movff	_roundf$1844+2,___fladd@b+2
  4631  00265A  C069  F037         	movff	_roundf$1844+3,___fladd@b+3
  4632  00265E  0E00               	movlw	0
  4633  002660  6E38               	movwf	___fladd@a^0,c
  4634  002662  0E00               	movlw	0
  4635  002664  6E39               	movwf	(___fladd@a+1)^0,c
  4636  002666  0E80               	movlw	128
  4637  002668  6E3A               	movwf	(___fladd@a+2)^0,c
  4638  00266A  0EBF               	movlw	191
  4639  00266C  6E3B               	movwf	(___fladd@a+3)^0,c
  4640  00266E  EC80  F00B         	call	___fladd	;wreg free
  4641  002672  C034  F06E         	movff	?___fladd,roundf@y
  4642  002676  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4643  00267A  C036  F070         	movff	?___fladd+2,roundf@y+2
  4644  00267E  C037  F071         	movff	?___fladd+3,roundf@y+3
  4645  002682  EFAC  F013         	goto	l9697
  4646  002686                     l9691:
  4647  002686  0E00               	movlw	0
  4648  002688  6E34               	movwf	___flge@ff1^0,c
  4649  00268A  0E00               	movlw	0
  4650  00268C  6E35               	movwf	(___flge@ff1+1)^0,c
  4651  00268E  0E00               	movlw	0
  4652  002690  6E36               	movwf	(___flge@ff1+2)^0,c
  4653  002692  0EBF               	movlw	191
  4654  002694  6E37               	movwf	(___flge@ff1+3)^0,c
  4655  002696  C06E  F038         	movff	roundf@y,___flge@ff2
  4656  00269A  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4657  00269E  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4658  0026A2  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4659  0026A6  EC10  F021         	call	___flge	;wreg free
  4660  0026AA  A0D8               	btfss	status,0,c
  4661  0026AC  EF5A  F013         	goto	u10941
  4662  0026B0  EF5C  F013         	goto	u10940
  4663  0026B4                     u10941:
  4664  0026B4  EF92  F013         	goto	l9695
  4665  0026B8                     u10940:
  4666  0026B8  C04C  F038         	movff	roundf@x,___fladd@a
  4667  0026BC  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4668  0026C0  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4669  0026C4  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4670  0026C8  C06E  F034         	movff	roundf@y,___fladd@b
  4671  0026CC  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4672  0026D0  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4673  0026D4  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4674  0026D8  EC80  F00B         	call	___fladd	;wreg free
  4675  0026DC  C034  F066         	movff	?___fladd,_roundf$1844
  4676  0026E0  C035  F067         	movff	?___fladd+1,_roundf$1844+1
  4677  0026E4  C036  F068         	movff	?___fladd+2,_roundf$1844+2
  4678  0026E8  C037  F069         	movff	?___fladd+3,_roundf$1844+3
  4679  0026EC  C066  F034         	movff	_roundf$1844,___fladd@b
  4680  0026F0  C067  F035         	movff	_roundf$1844+1,___fladd@b+1
  4681  0026F4  C068  F036         	movff	_roundf$1844+2,___fladd@b+2
  4682  0026F8  C069  F037         	movff	_roundf$1844+3,___fladd@b+3
  4683  0026FC  0E00               	movlw	0
  4684  0026FE  6E38               	movwf	___fladd@a^0,c
  4685  002700  0E00               	movlw	0
  4686  002702  6E39               	movwf	(___fladd@a+1)^0,c
  4687  002704  0E80               	movlw	128
  4688  002706  6E3A               	movwf	(___fladd@a+2)^0,c
  4689  002708  0E3F               	movlw	63
  4690  00270A  6E3B               	movwf	(___fladd@a+3)^0,c
  4691  00270C  EC80  F00B         	call	___fladd	;wreg free
  4692  002710  C034  F06E         	movff	?___fladd,roundf@y
  4693  002714  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4694  002718  C036  F070         	movff	?___fladd+2,roundf@y+2
  4695  00271C  C037  F071         	movff	?___fladd+3,roundf@y+3
  4696  002720  EFAC  F013         	goto	l9697
  4697  002724                     l9695:
  4698  002724  C06E  F034         	movff	roundf@y,___fladd@b
  4699  002728  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4700  00272C  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4701  002730  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4702  002734  C04C  F038         	movff	roundf@x,___fladd@a
  4703  002738  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4704  00273C  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4705  002740  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4706  002744  EC80  F00B         	call	___fladd	;wreg free
  4707  002748  C034  F06E         	movff	?___fladd,roundf@y
  4708  00274C  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4709  002750  C036  F070         	movff	?___fladd+2,roundf@y+2
  4710  002754  C037  F071         	movff	?___fladd+3,roundf@y+3
  4711  002758                     l9697:
  4712  002758  C06A  F050         	movff	roundf@u,??_roundf
  4713  00275C  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4714  002760  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4715  002764  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4716  002768  0E20               	movlw	32
  4717  00276A  EFBC  F013         	goto	u10950
  4718  00276E                     u10955:
  4719  00276E  90D8               	bcf	status,0,c
  4720  002770  3253               	rrcf	(??_roundf+3)^0,f,c
  4721  002772  3252               	rrcf	(??_roundf+2)^0,f,c
  4722  002774  3251               	rrcf	(??_roundf+1)^0,f,c
  4723  002776  3250               	rrcf	??_roundf^0,f,c
  4724  002778                     u10950:
  4725  002778  2EE8               	decfsz	wreg,f,c
  4726  00277A  EFB7  F013         	goto	u10955
  4727  00277E  5050               	movf	??_roundf^0,w,c
  4728  002780  1051               	iorwf	(??_roundf+1)^0,w,c
  4729  002782  1052               	iorwf	(??_roundf+2)^0,w,c
  4730  002784  1053               	iorwf	(??_roundf+3)^0,w,c
  4731  002786  B4D8               	btfsc	status,2,c
  4732  002788  EFC8  F013         	goto	u10961
  4733  00278C  EFCA  F013         	goto	u10960
  4734  002790                     u10961:
  4735  002790  EFDC  F013         	goto	l9701
  4736  002794                     u10960:
  4737  002794  C06E  F006         	movff	roundf@y,___flneg@f1
  4738  002798  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
  4739  00279C  C070  F008         	movff	roundf@y+2,___flneg@f1+2
  4740  0027A0  C071  F009         	movff	roundf@y+3,___flneg@f1+3
  4741  0027A4  ECB6  F02A         	call	___flneg	;wreg free
  4742  0027A8  C006  F06E         	movff	?___flneg,roundf@y
  4743  0027AC  C007  F06F         	movff	?___flneg+1,roundf@y+1
  4744  0027B0  C008  F070         	movff	?___flneg+2,roundf@y+2
  4745  0027B4  C009  F071         	movff	?___flneg+3,roundf@y+3
  4746  0027B8                     l9701:
  4747  0027B8  C06E  F04C         	movff	roundf@y,?_roundf
  4748  0027BC  C06F  F04D         	movff	roundf@y+1,?_roundf+1
  4749  0027C0  C070  F04E         	movff	roundf@y+2,?_roundf+2
  4750  0027C4  C071  F04F         	movff	roundf@y+3,?_roundf+3
  4751  0027C8                     l1752:
  4752  0027C8  0012               	return		;funcret
  4753  0027CA                     __end_of_roundf:
  4754                           	opt callstack 0
  4755                           
  4756 ;; *************** function _moverCarrito *****************
  4757 ;; Defined at:
  4758 ;;		line 526 in file "main.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  espejearCarr    1    wreg     unsigned char 
  4761 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
  4762 ;;		 -> comportamientoBasico@carroEspejeado(1), 
  4763 ;;  avanceRectoL    2   42[BANK0 ] PTR unsigned char 
  4764 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  espejearCarr    1   83[COMRAM] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4776 ;;      Params:         0       4       0       0       0       0       0       0       0
  4777 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4778 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4779 ;;      Totals:         1       6       0       0       0       0       0       0       0
  4780 ;;Total ram usage:        7 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    8
  4783 ;; This function calls:
  4784 ;;		_forzarAvanceRecto
  4785 ;;		_forzarEspejeo
  4786 ;; This function is called by:
  4787 ;;		_comportamientoBasico
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text12
  4792  00411A                     __ptext12:
  4793                           	opt callstack 0
  4794  00411A                     _moverCarrito:
  4795                           	opt callstack 21
  4796                           
  4797                           ;incstack = 0
  4798                           ;moverCarrito@espejearCarroY stored from wreg
  4799  00411A  6E54               	movwf	moverCarrito@espejearCarroY^0,c
  4800  00411C                     
  4801                           ;main.c: 528:     switch (mouse.curr_state) {
  4802  00411C  EFF1  F020         	goto	l10031
  4803  004120                     l437:
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;main.c: 532:             LATB4 = 1;
  4807  004120  888A               	bsf	3978,4,c	;volatile
  4808                           
  4809                           ;main.c: 533:             LATB5 = 0;
  4810  004122  9A8A               	bcf	3978,5,c	;volatile
  4811                           
  4812                           ;main.c: 534:             LATB6 = 1;
  4813  004124  8C8A               	bsf	3978,6,c	;volatile
  4814                           
  4815                           ;main.c: 535:             LATB7 = 0;
  4816  004126  9E8A               	bcf	3978,7,c	;volatile
  4817  004128                     
  4818                           ; BSR set to: 0
  4819                           ;main.c: 537:             if (*avanceRectoLargo) {
  4820  004128  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4821  00412C  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4822  004130  50DF               	movf	indf2,w,c
  4823  004132  B4D8               	btfsc	status,2,c
  4824  004134  EF9E  F020         	goto	u11281
  4825  004138  EFA0  F020         	goto	u11280
  4826  00413C                     u11281:
  4827  00413C  EFB3  F020         	goto	l10013
  4828  004140                     u11280:
  4829  004140                     
  4830                           ; BSR set to: 0
  4831                           ;main.c: 538:                 *avanceRectoLargo = 0;
  4832  004140  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4833  004144  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4834  004148  0E00               	movlw	0
  4835  00414A  6EDF               	movwf	indf2,c
  4836  00414C                     
  4837                           ; BSR set to: 0
  4838                           ;main.c: 539:                 _delay((unsigned long)((410 * 2)*(4000000/4000.0)));
  4839  00414C  0E05               	movlw	5
  4840  00414E  0100               	movlb	0	; () banked
  4841  004150  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4842  004152  0E29               	movlw	41
  4843  004154  6F8C               	movwf	??_moverCarrito& (0+255),b
  4844  004156  0EEA               	movlw	234
  4845  004158                     u12057:
  4846  004158  2EE8               	decfsz	wreg,f,c
  4847  00415A  D7FE               	bra	u12057
  4848  00415C  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4849  00415E  D7FC               	bra	u12057
  4850  004160  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4851  004162  D7FA               	bra	u12057
  4852  004164  F000               	nop	
  4853  004166                     l10013:
  4854                           
  4855                           ;main.c: 543:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  4856  004166  0E48               	movlw	72
  4857  004168  0100               	movlb	0	; () banked
  4858  00416A  6F8C               	movwf	??_moverCarrito& (0+255),b
  4859  00416C  0E6C               	movlw	108
  4860  00416E                     u12067:
  4861  00416E  2EE8               	decfsz	wreg,f,c
  4862  004170  D7FE               	bra	u12067
  4863  004172  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4864  004174  D7FC               	bra	u12067
  4865  004176  F000               	nop	
  4866  004178  EF0F  F021         	goto	l446
  4867  00417C                     l10015:
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;main.c: 549:             if (espejearCarroY) {
  4871  00417C  5054               	movf	moverCarrito@espejearCarroY^0,w,c
  4872  00417E  B4D8               	btfsc	status,2,c
  4873  004180  EFC4  F020         	goto	u11291
  4874  004184  EFC6  F020         	goto	u11290
  4875  004188                     u11291:
  4876  004188  EFD0  F020         	goto	l442
  4877  00418C                     u11290:
  4878  00418C                     
  4879                           ; BSR set to: 0
  4880                           ;main.c: 550:                 forzarEspejeo();
  4881  00418C  EC5A  F02A         	call	_forzarEspejeo	;wreg free
  4882  004190                     
  4883                           ;main.c: 551:                 *carroEspejeado = 1;
  4884  004190  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
  4885  004194  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
  4886  004198  0E01               	movlw	1
  4887  00419A  6EDF               	movwf	indf2,c
  4888                           
  4889                           ;main.c: 552:             } else {
  4890  00419C  EF0F  F021         	goto	l446
  4891  0041A0                     l442:
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;main.c: 553:                 LATB4 = 0;
  4895  0041A0  988A               	bcf	3978,4,c	;volatile
  4896                           
  4897                           ;main.c: 554:                 LATB5 = 0;
  4898  0041A2  9A8A               	bcf	3978,5,c	;volatile
  4899                           
  4900                           ;main.c: 555:                 LATB6 = 1;
  4901  0041A4  8C8A               	bsf	3978,6,c	;volatile
  4902                           
  4903                           ;main.c: 556:                 LATB7 = 0;
  4904  0041A6  9E8A               	bcf	3978,7,c	;volatile
  4905  0041A8                     l10021:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;main.c: 557:                 _delay((unsigned long)((410)*(4000000/4000.0)));
  4909  0041A8  0E03               	movlw	3
  4910  0041AA  0100               	movlb	0	; () banked
  4911  0041AC  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4912  0041AE  0E15               	movlw	21
  4913  0041B0  6F8C               	movwf	??_moverCarrito& (0+255),b
  4914  0041B2  0E73               	movlw	115
  4915  0041B4                     u12077:
  4916  0041B4  2EE8               	decfsz	wreg,f,c
  4917  0041B6  D7FE               	bra	u12077
  4918  0041B8  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4919  0041BA  D7FC               	bra	u12077
  4920  0041BC  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4921  0041BE  D7FA               	bra	u12077
  4922  0041C0  D000               	nop2	
  4923  0041C2                     
  4924                           ;main.c: 558:                 forzarAvanceRecto();
  4925  0041C2  EC59  F02B         	call	_forzarAvanceRecto	;wreg free
  4926  0041C6  EF0F  F021         	goto	l446
  4927  0041CA                     l444:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;main.c: 566:             LATB4 = 1;
  4931  0041CA  888A               	bsf	3978,4,c	;volatile
  4932                           
  4933                           ;main.c: 567:             LATB5 = 0;
  4934  0041CC  9A8A               	bcf	3978,5,c	;volatile
  4935                           
  4936                           ;main.c: 568:             LATB6 = 0;
  4937  0041CE  9C8A               	bcf	3978,6,c	;volatile
  4938                           
  4939                           ;main.c: 569:             LATB7 = 0;
  4940  0041D0  9E8A               	bcf	3978,7,c	;volatile
  4941  0041D2  EFD4  F020         	goto	l10021
  4942  0041D6                     l445:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;main.c: 578:             LATB4 = 0;
  4946  0041D6  988A               	bcf	3978,4,c	;volatile
  4947                           
  4948                           ;main.c: 579:             LATB5 = 0;
  4949  0041D8  9A8A               	bcf	3978,5,c	;volatile
  4950                           
  4951                           ;main.c: 580:             LATB6 = 0;
  4952  0041DA  9C8A               	bcf	3978,6,c	;volatile
  4953                           
  4954                           ;main.c: 581:             LATB7 = 0;
  4955  0041DC  9E8A               	bcf	3978,7,c	;volatile
  4956                           
  4957                           ;main.c: 583:             break;
  4958  0041DE  EF0F  F021         	goto	l446
  4959  0041E2                     l10031:
  4960  0041E2  5057               	movf	_mouse^0,w,c
  4961  0041E4  0100               	movlb	0	; () banked
  4962  0041E6  6F8C               	movwf	??_moverCarrito& (0+255),b
  4963  0041E8  6B8D               	clrf	(??_moverCarrito+1)& (0+255),b
  4964                           
  4965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4966                           ; Switch size 1, requested type "simple"
  4967                           ; Number of cases is 1, Range of values is 0 to 0
  4968                           ; switch strategies available:
  4969                           ; Name         Instructions Cycles
  4970                           ; simple_byte            4     3 (average)
  4971                           ;	Chosen strategy is simple_byte
  4972  0041EA  518D               	movf	(??_moverCarrito+1)& (0+255),w,b
  4973  0041EC  0A00               	xorlw	0	; case 0
  4974  0041EE  B4D8               	btfsc	status,2,c
  4975  0041F0  EFFC  F020         	goto	l11177
  4976  0041F4  EF0F  F021         	goto	l446
  4977  0041F8                     l11177:
  4978                           
  4979                           ; BSR set to: 0
  4980                           ; Switch size 1, requested type "simple"
  4981                           ; Number of cases is 4, Range of values is 1 to 4
  4982                           ; switch strategies available:
  4983                           ; Name         Instructions Cycles
  4984                           ; simple_byte           13     7 (average)
  4985                           ;	Chosen strategy is simple_byte
  4986  0041F8  518C               	movf	??_moverCarrito& (0+255),w,b
  4987  0041FA  0A01               	xorlw	1	; case 1
  4988  0041FC  B4D8               	btfsc	status,2,c
  4989  0041FE  EF90  F020         	goto	l437
  4990  004202  0A03               	xorlw	3	; case 2
  4991  004204  B4D8               	btfsc	status,2,c
  4992  004206  EFBE  F020         	goto	l10015
  4993  00420A  0A01               	xorlw	1	; case 3
  4994  00420C  B4D8               	btfsc	status,2,c
  4995  00420E  EFE5  F020         	goto	l444
  4996  004212  0A07               	xorlw	7	; case 4
  4997  004214  B4D8               	btfsc	status,2,c
  4998  004216  EFEB  F020         	goto	l445
  4999  00421A  EF0F  F021         	goto	l446
  5000  00421E                     l446:
  5001  00421E  0012               	return		;funcret
  5002  004220                     __end_of_moverCarrito:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function _forzarAvanceRecto *****************
  5006 ;; Defined at:
  5007 ;;		line 470 in file "main.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5023 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5024 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5025 ;;Total ram usage:        2 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    2
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_moverCarrito
  5032 ;;		_mover
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text13
  5037  0056B2                     __ptext13:
  5038                           	opt callstack 0
  5039  0056B2                     _forzarAvanceRecto:
  5040                           	opt callstack 25
  5041  0056B2                     
  5042                           ;main.c: 471:     LATB4 = 1;
  5043  0056B2  888A               	bsf	3978,4,c	;volatile
  5044                           
  5045                           ;main.c: 472:     LATB5 = 0;
  5046  0056B4  9A8A               	bcf	3978,5,c	;volatile
  5047                           
  5048                           ;main.c: 473:     LATB6 = 1;
  5049  0056B6  8C8A               	bsf	3978,6,c	;volatile
  5050                           
  5051                           ;main.c: 474:     LATB7 = 0;
  5052  0056B8  9E8A               	bcf	3978,7,c	;volatile
  5053  0056BA                     
  5054                           ;main.c: 476:     _delay((unsigned long)((550)*(4000000/4000.0)));
  5055  0056BA  0E03               	movlw	3
  5056  0056BC  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
  5057  0056BE  0ECB               	movlw	203
  5058  0056C0  6E06               	movwf	??_forzarAvanceRecto^0,c
  5059  0056C2  0E45               	movlw	69
  5060  0056C4                     u12087:
  5061  0056C4  2EE8               	decfsz	wreg,f,c
  5062  0056C6  D7FE               	bra	u12087
  5063  0056C8  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
  5064  0056CA  D7FC               	bra	u12087
  5065  0056CC  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
  5066  0056CE  D7FA               	bra	u12087
  5067  0056D0  F000               	nop	
  5068  0056D2  0012               	return		;funcret
  5069  0056D4                     __end_of_forzarAvanceRecto:
  5070                           	opt callstack 0
  5071                           
  5072 ;; *************** function _leerSensores *****************
  5073 ;; Defined at:
  5074 ;;		line 1199 in file "main.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    4
  5095 ;; This function calls:
  5096 ;;		___fladd
  5097 ;;		___fldiv
  5098 ;;		_dameDistancia
  5099 ;; This function is called by:
  5100 ;;		_comportamientoBasico
  5101 ;;		_probarSensores
  5102 ;;		_probarPID
  5103 ;;		_probarCruceT
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text14
  5108  003AC4                     __ptext14:
  5109                           	opt callstack 0
  5110  003AC4                     _leerSensores:
  5111                           	opt callstack 25
  5112  003AC4                     
  5113                           ;main.c: 1201:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  5114  003AC4  C120  F038         	movff	_oldSensorDerecha,___fladd@a
  5115  003AC8  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
  5116  003ACC  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
  5117  003AD0  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
  5118  003AD4  0E03               	movlw	3
  5119  003AD6  ECD2  F01E         	call	_dameDistancia
  5120  003ADA  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5121  003ADE  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5122  003AE2  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5123  003AE6  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5124  003AEA  EC80  F00B         	call	___fladd	;wreg free
  5125  003AEE  C034  F044         	movff	?___fladd,___fldiv@b
  5126  003AF2  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5127  003AF6  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5128  003AFA  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5129  003AFE  0E00               	movlw	0
  5130  003B00  6E48               	movwf	___fldiv@a^0,c
  5131  003B02  0E00               	movlw	0
  5132  003B04  6E49               	movwf	(___fldiv@a+1)^0,c
  5133  003B06  0E00               	movlw	0
  5134  003B08  6E4A               	movwf	(___fldiv@a+2)^0,c
  5135  003B0A  0E40               	movlw	64
  5136  003B0C  6E4B               	movwf	(___fldiv@a+3)^0,c
  5137  003B0E  ECE5  F013         	call	___fldiv	;wreg free
  5138  003B12  C044  F12C         	movff	?___fldiv,_sensorDerecha
  5139  003B16  C045  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  5140  003B1A  C046  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  5141  003B1E  C047  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  5142                           
  5143                           ;main.c: 1202:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  5144  003B22  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
  5145  003B26  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
  5146  003B2A  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
  5147  003B2E  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
  5148  003B32  0E02               	movlw	2
  5149  003B34  ECD2  F01E         	call	_dameDistancia
  5150  003B38  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5151  003B3C  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5152  003B40  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5153  003B44  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5154  003B48  EC80  F00B         	call	___fladd	;wreg free
  5155  003B4C  C034  F044         	movff	?___fladd,___fldiv@b
  5156  003B50  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5157  003B54  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5158  003B58  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5159  003B5C  0E00               	movlw	0
  5160  003B5E  6E48               	movwf	___fldiv@a^0,c
  5161  003B60  0E00               	movlw	0
  5162  003B62  6E49               	movwf	(___fldiv@a+1)^0,c
  5163  003B64  0E00               	movlw	0
  5164  003B66  6E4A               	movwf	(___fldiv@a+2)^0,c
  5165  003B68  0E40               	movlw	64
  5166  003B6A  6E4B               	movwf	(___fldiv@a+3)^0,c
  5167  003B6C  ECE5  F013         	call	___fldiv	;wreg free
  5168  003B70  C044  F128         	movff	?___fldiv,_sensorIzquierda
  5169  003B74  C045  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  5170  003B78  C046  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  5171  003B7C  C047  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  5172                           
  5173                           ;main.c: 1203:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  5174  003B80  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
  5175  003B84  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
  5176  003B88  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
  5177  003B8C  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
  5178  003B90  0E01               	movlw	1
  5179  003B92  ECD2  F01E         	call	_dameDistancia
  5180  003B96  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5181  003B9A  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5182  003B9E  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5183  003BA2  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5184  003BA6  EC80  F00B         	call	___fladd	;wreg free
  5185  003BAA  C034  F044         	movff	?___fladd,___fldiv@b
  5186  003BAE  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5187  003BB2  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5188  003BB6  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5189  003BBA  0E00               	movlw	0
  5190  003BBC  6E48               	movwf	___fldiv@a^0,c
  5191  003BBE  0E00               	movlw	0
  5192  003BC0  6E49               	movwf	(___fldiv@a+1)^0,c
  5193  003BC2  0E00               	movlw	0
  5194  003BC4  6E4A               	movwf	(___fldiv@a+2)^0,c
  5195  003BC6  0E40               	movlw	64
  5196  003BC8  6E4B               	movwf	(___fldiv@a+3)^0,c
  5197  003BCA  ECE5  F013         	call	___fldiv	;wreg free
  5198  003BCE  C044  F124         	movff	?___fldiv,_sensorEnfrente
  5199  003BD2  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  5200  003BD6  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  5201  003BDA  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  5202  003BDE                     
  5203                           ;main.c: 1205:     oldSensorDerecha = sensorDerecha;
  5204  003BDE  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  5205  003BE2  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  5206  003BE6  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  5207  003BEA  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  5208  003BEE                     
  5209                           ;main.c: 1206:     oldSensorIzquierda = sensorIzquierda;
  5210  003BEE  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  5211  003BF2  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  5212  003BF6  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  5213  003BFA  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  5214  003BFE                     
  5215                           ;main.c: 1207:     oldSensorEnfrente = sensorEnfrente;
  5216  003BFE  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  5217  003C02  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  5218  003C06  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  5219  003C0A  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  5220  003C0E                     
  5221                           ;main.c: 1212:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  5222  003C0E  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  5223  003C12  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  5224  003C16  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  5225  003C1A  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  5226  003C1E                     
  5227                           ;main.c: 1221:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  5228  003C1E  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  5229  003C22  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  5230  003C26  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  5231  003C2A  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  5232  003C2E                     
  5233                           ;main.c: 1224:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  5234  003C2E  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  5235  003C32  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  5236  003C36  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  5237  003C3A  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  5238  003C3E  0012               	return		;funcret
  5239  003C40                     __end_of_leerSensores:
  5240                           	opt callstack 0
  5241                           
  5242 ;; *************** function _dameDistancia *****************
  5243 ;; Defined at:
  5244 ;;		line 26 in file "./ultrasonico.h"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  numeroSensor    1    wreg     unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  numeroSensor    1   32[COMRAM] unsigned char 
  5249 ;;  distancia       4   33[COMRAM] float 
  5250 ;;  conteo          2   37[COMRAM] unsigned int 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  4   26[COMRAM] float 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5260 ;;      Params:         4       0       0       0       0       0       0       0       0
  5261 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5262 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5263 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5264 ;;Total ram usage:       13 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    3
  5267 ;; This function calls:
  5268 ;;		___lwdiv
  5269 ;;		___xxtofl
  5270 ;; This function is called by:
  5271 ;;		_inicializarComportamientoBasico
  5272 ;;		_leerSensores
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text15
  5277  003DA4                     __ptext15:
  5278                           	opt callstack 0
  5279  003DA4                     _dameDistancia:
  5280                           	opt callstack 26
  5281                           
  5282                           ;incstack = 0
  5283                           ;dameDistancia@numeroSensor stored from wreg
  5284  003DA4  6E21               	movwf	dameDistancia@numeroSensor^0,c
  5285  003DA6                     
  5286                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
  5287  003DA6  0E00               	movlw	0
  5288  003DA8  6ECF               	movwf	207,c	;volatile
  5289                           
  5290                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
  5291  003DAA  0E00               	movlw	0
  5292  003DAC  6ECE               	movwf	206,c	;volatile
  5293                           
  5294                           ;./ultrasonico.h: 33:     conteo = 0;
  5295  003DAE  0E00               	movlw	0
  5296  003DB0  6E27               	movwf	(dameDistancia@conteo+1)^0,c
  5297  003DB2  0E00               	movlw	0
  5298  003DB4  6E26               	movwf	dameDistancia@conteo^0,c
  5299  003DB6                     
  5300                           ;./ultrasonico.h: 34:     LATD3 = 1;
  5301  003DB6  868C               	bsf	3980,3,c	;volatile
  5302  003DB8                     
  5303                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
  5304  003DB8  0E04               	movlw	4
  5305  003DBA                     u12097:
  5306  003DBA  2EE8               	decfsz	wreg,f,c
  5307  003DBC  D7FE               	bra	u12097
  5308  003DBE                     
  5309                           ;./ultrasonico.h: 36:     LATD3 = 0;
  5310  003DBE  968C               	bcf	3980,3,c	;volatile
  5311                           
  5312                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
  5313  003DC0  EF2A  F01F         	goto	l9751
  5314  003DC4                     l183:
  5315  003DC4  A281               	btfss	129,1,c	;volatile
  5316  003DC6  EFE7  F01E         	goto	u11011
  5317  003DCA  EFE9  F01E         	goto	u11010
  5318  003DCE                     u11011:
  5319  003DCE  EFE2  F01E         	goto	l183
  5320  003DD2                     u11010:
  5321  003DD2                     
  5322                           ;./ultrasonico.h: 43:             TMR1ON = 1;
  5323  003DD2  80CD               	bsf	4045,0,c	;volatile
  5324  003DD4                     l186:
  5325  003DD4  A281               	btfss	129,1,c	;volatile
  5326  003DD6  EFEF  F01E         	goto	u11021
  5327  003DDA  EFF1  F01E         	goto	u11020
  5328  003DDE                     u11021:
  5329  003DDE  EF43  F01F         	goto	l191
  5330  003DE2                     u11020:
  5331  003DE2  A09E               	btfss	3998,0,c	;volatile
  5332  003DE4  EFF6  F01E         	goto	u11031
  5333  003DE8  EFF8  F01E         	goto	u11030
  5334  003DEC                     u11031:
  5335  003DEC  EFEA  F01E         	goto	l186
  5336  003DF0                     u11030:
  5337  003DF0  EF43  F01F         	goto	l191
  5338  003DF4                     l193:
  5339  003DF4  A481               	btfss	129,2,c	;volatile
  5340  003DF6  EFFF  F01E         	goto	u11041
  5341  003DFA  EF01  F01F         	goto	u11040
  5342  003DFE                     u11041:
  5343  003DFE  EFFA  F01E         	goto	l193
  5344  003E02                     u11040:
  5345  003E02                     
  5346                           ;./ultrasonico.h: 51:             TMR1ON = 1;
  5347  003E02  80CD               	bsf	4045,0,c	;volatile
  5348  003E04                     l196:
  5349  003E04  A481               	btfss	129,2,c	;volatile
  5350  003E06  EF07  F01F         	goto	u11051
  5351  003E0A  EF09  F01F         	goto	u11050
  5352  003E0E                     u11051:
  5353  003E0E  EF43  F01F         	goto	l191
  5354  003E12                     u11050:
  5355  003E12  A09E               	btfss	3998,0,c	;volatile
  5356  003E14  EF0E  F01F         	goto	u11061
  5357  003E18  EF10  F01F         	goto	u11060
  5358  003E1C                     u11061:
  5359  003E1C  EF02  F01F         	goto	l196
  5360  003E20                     u11060:
  5361  003E20  EF43  F01F         	goto	l191
  5362  003E24                     l202:
  5363  003E24  A681               	btfss	129,3,c	;volatile
  5364  003E26  EF17  F01F         	goto	u11071
  5365  003E2A  EF19  F01F         	goto	u11070
  5366  003E2E                     u11071:
  5367  003E2E  EF12  F01F         	goto	l202
  5368  003E32                     u11070:
  5369  003E32                     
  5370                           ;./ultrasonico.h: 59:             TMR1ON = 1;
  5371  003E32  80CD               	bsf	4045,0,c	;volatile
  5372  003E34                     l205:
  5373  003E34  A681               	btfss	129,3,c	;volatile
  5374  003E36  EF1F  F01F         	goto	u11081
  5375  003E3A  EF21  F01F         	goto	u11080
  5376  003E3E                     u11081:
  5377  003E3E  EF43  F01F         	goto	l191
  5378  003E42                     u11080:
  5379  003E42  A09E               	btfss	3998,0,c	;volatile
  5380  003E44  EF26  F01F         	goto	u11091
  5381  003E48  EF28  F01F         	goto	u11090
  5382  003E4C                     u11091:
  5383  003E4C  EF1A  F01F         	goto	l205
  5384  003E50                     u11090:
  5385  003E50  EF43  F01F         	goto	l191
  5386  003E54                     l9751:
  5387  003E54  5021               	movf	dameDistancia@numeroSensor^0,w,c
  5388  003E56  6E1F               	movwf	??_dameDistancia^0,c
  5389  003E58  6A20               	clrf	(??_dameDistancia+1)^0,c
  5390                           
  5391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5392                           ; Switch size 1, requested type "simple"
  5393                           ; Number of cases is 1, Range of values is 0 to 0
  5394                           ; switch strategies available:
  5395                           ; Name         Instructions Cycles
  5396                           ; simple_byte            4     3 (average)
  5397                           ;	Chosen strategy is simple_byte
  5398  003E5A  5020               	movf	(??_dameDistancia+1)^0,w,c
  5399  003E5C  0A00               	xorlw	0	; case 0
  5400  003E5E  B4D8               	btfsc	status,2,c
  5401  003E60  EF34  F01F         	goto	l11179
  5402  003E64  EF43  F01F         	goto	l191
  5403  003E68                     l11179:
  5404                           
  5405                           ; Switch size 1, requested type "simple"
  5406                           ; Number of cases is 3, Range of values is 1 to 3
  5407                           ; switch strategies available:
  5408                           ; Name         Instructions Cycles
  5409                           ; simple_byte           10     6 (average)
  5410                           ;	Chosen strategy is simple_byte
  5411  003E68  501F               	movf	??_dameDistancia^0,w,c
  5412  003E6A  0A01               	xorlw	1	; case 1
  5413  003E6C  B4D8               	btfsc	status,2,c
  5414  003E6E  EFE2  F01E         	goto	l183
  5415  003E72  0A03               	xorlw	3	; case 2
  5416  003E74  B4D8               	btfsc	status,2,c
  5417  003E76  EFFA  F01E         	goto	l193
  5418  003E7A  0A01               	xorlw	1	; case 3
  5419  003E7C  B4D8               	btfsc	status,2,c
  5420  003E7E  EF12  F01F         	goto	l202
  5421  003E82  EF43  F01F         	goto	l191
  5422  003E86                     l191:
  5423                           
  5424                           ;./ultrasonico.h: 66:     TMR1ON = 0;
  5425  003E86  90CD               	bcf	4045,0,c	;volatile
  5426                           
  5427                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
  5428  003E88  B09E               	btfsc	3998,0,c	;volatile
  5429  003E8A  EF49  F01F         	goto	u11101
  5430  003E8E  EF4B  F01F         	goto	u11100
  5431  003E92                     u11101:
  5432  003E92  EF71  F01F         	goto	l9757
  5433  003E96                     u11100:
  5434  003E96                     
  5435                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
  5436  003E96  50CF               	movf	207,w,c	;volatile
  5437  003E98  6E20               	movwf	(??_dameDistancia+1)^0,c
  5438  003E9A  6A1F               	clrf	??_dameDistancia^0,c
  5439  003E9C  501F               	movf	??_dameDistancia^0,w,c
  5440  003E9E  1226               	iorwf	dameDistancia@conteo^0,f,c
  5441  003EA0  5020               	movf	(??_dameDistancia+1)^0,w,c
  5442  003EA2  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
  5443                           
  5444                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
  5445  003EA4  50CE               	movf	206,w,c	;volatile
  5446  003EA6  1226               	iorwf	dameDistancia@conteo^0,f,c
  5447  003EA8                     
  5448                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
  5449  003EA8  0E00               	movlw	0
  5450  003EAA  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5451  003EAC  0E3A               	movlw	58
  5452  003EAE  6E08               	movwf	___lwdiv@divisor^0,c
  5453  003EB0  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
  5454  003EB4  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
  5455  003EB8  ECB6  F026         	call	___lwdiv	;wreg free
  5456  003EBC  C006  F00D         	movff	?___lwdiv,___xxtofl@val
  5457  003EC0  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
  5458  003EC4  6A0F               	clrf	(___xxtofl@val+2)^0,c
  5459  003EC6  6A10               	clrf	(___xxtofl@val+3)^0,c
  5460  003EC8  0E00               	movlw	0
  5461  003ECA  EC34  F01A         	call	___xxtofl
  5462  003ECE  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
  5463  003ED2  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
  5464  003ED6  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
  5465  003EDA  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
  5466                           
  5467                           ;./ultrasonico.h: 73:     } else {
  5468  003EDE  EF7A  F01F         	goto	l9761
  5469  003EE2                     l9757:
  5470  003EE2                     
  5471                           ;./ultrasonico.h: 75:         TMR1IF = 0;
  5472  003EE2  909E               	bcf	3998,0,c	;volatile
  5473                           
  5474                           ;./ultrasonico.h: 76:         distancia = 0;
  5475  003EE4  0E00               	movlw	0
  5476  003EE6  6E22               	movwf	dameDistancia@distancia^0,c
  5477  003EE8  0E00               	movlw	0
  5478  003EEA  6E23               	movwf	(dameDistancia@distancia+1)^0,c
  5479  003EEC  0E00               	movlw	0
  5480  003EEE  6E24               	movwf	(dameDistancia@distancia+2)^0,c
  5481  003EF0  0E00               	movlw	0
  5482  003EF2  6E25               	movwf	(dameDistancia@distancia+3)^0,c
  5483  003EF4                     l9761:
  5484                           
  5485                           ;./ultrasonico.h: 80:     return distancia;
  5486  003EF4  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
  5487  003EF8  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
  5488  003EFC  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
  5489  003F00  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
  5490  003F04  0012               	return		;funcret
  5491  003F06                     __end_of_dameDistancia:
  5492                           	opt callstack 0
  5493                           
  5494 ;; *************** function ___lwdiv *****************
  5495 ;; Defined at:
  5496 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  dividend        2    5[COMRAM] unsigned int 
  5499 ;;  divisor         2    7[COMRAM] unsigned int 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  quotient        2   10[COMRAM] unsigned int 
  5502 ;;  counter         1    9[COMRAM] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  2    5[COMRAM] unsigned int 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5512 ;;      Params:         4       0       0       0       0       0       0       0       0
  5513 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5515 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5516 ;;Total ram usage:        7 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    2
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_dameDistancia
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text16
  5527  004D6C                     __ptext16:
  5528                           	opt callstack 0
  5529  004D6C                     ___lwdiv:
  5530                           	opt callstack 26
  5531  004D6C  0E00               	movlw	0
  5532  004D6E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  5533  004D70  0E00               	movlw	0
  5534  004D72  6E0B               	movwf	___lwdiv@quotient^0,c
  5535  004D74  5008               	movf	___lwdiv@divisor^0,w,c
  5536  004D76  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5537  004D78  B4D8               	btfsc	status,2,c
  5538  004D7A  EFC1  F026         	goto	u10981
  5539  004D7E  EFC3  F026         	goto	u10980
  5540  004D82                     u10981:
  5541  004D82  EFEB  F026         	goto	l1452
  5542  004D86                     u10980:
  5543  004D86  0E01               	movlw	1
  5544  004D88  6E0A               	movwf	___lwdiv@counter^0,c
  5545  004D8A  EFCB  F026         	goto	l9721
  5546  004D8E                     l9719:
  5547  004D8E  90D8               	bcf	status,0,c
  5548  004D90  3608               	rlcf	___lwdiv@divisor^0,f,c
  5549  004D92  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5550  004D94  2A0A               	incf	___lwdiv@counter^0,f,c
  5551  004D96                     l9721:
  5552  004D96  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  5553  004D98  EFD0  F026         	goto	u10991
  5554  004D9C  EFD2  F026         	goto	u10990
  5555  004DA0                     u10991:
  5556  004DA0  EFC7  F026         	goto	l9719
  5557  004DA4                     u10990:
  5558  004DA4                     l9723:
  5559  004DA4  90D8               	bcf	status,0,c
  5560  004DA6  360B               	rlcf	___lwdiv@quotient^0,f,c
  5561  004DA8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5562  004DAA  5008               	movf	___lwdiv@divisor^0,w,c
  5563  004DAC  5C06               	subwf	___lwdiv@dividend^0,w,c
  5564  004DAE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  5565  004DB0  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5566  004DB2  A0D8               	btfss	status,0,c
  5567  004DB4  EFDE  F026         	goto	u11001
  5568  004DB8  EFE0  F026         	goto	u11000
  5569  004DBC                     u11001:
  5570  004DBC  EFE5  F026         	goto	l9731
  5571  004DC0                     u11000:
  5572  004DC0  5008               	movf	___lwdiv@divisor^0,w,c
  5573  004DC2  5E06               	subwf	___lwdiv@dividend^0,f,c
  5574  004DC4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  5575  004DC6  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5576  004DC8  800B               	bsf	___lwdiv@quotient^0,0,c
  5577  004DCA                     l9731:
  5578  004DCA  90D8               	bcf	status,0,c
  5579  004DCC  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5580  004DCE  3208               	rrcf	___lwdiv@divisor^0,f,c
  5581  004DD0  2E0A               	decfsz	___lwdiv@counter^0,f,c
  5582  004DD2  EFD2  F026         	goto	l9723
  5583  004DD6                     l1452:
  5584  004DD6  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5585  004DDA  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5586  004DDE  0012               	return		;funcret
  5587  004DE0                     __end_of___lwdiv:
  5588                           	opt callstack 0
  5589                           
  5590 ;; *************** function _finalizarRecorrido *****************
  5591 ;; Defined at:
  5592 ;;		line 442 in file "main.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;		None
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;		None
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  1    wreg      void 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5606 ;;      Params:         0       0       0       0       0       0       0       0       0
  5607 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5608 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5609 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5610 ;;Total ram usage:        0 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    8
  5613 ;; This function calls:
  5614 ;;		_forzarEspejeo
  5615 ;;		_forzarParoAuto
  5616 ;; This function is called by:
  5617 ;;		_comportamientoBasico
  5618 ;;		_probarPID
  5619 ;;		_probarCruceT
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text17
  5624  00579A                     __ptext17:
  5625                           	opt callstack 0
  5626  00579A                     _finalizarRecorrido:
  5627                           	opt callstack 21
  5628  00579A                     
  5629                           ;main.c: 443:     forzarEspejeo();
  5630  00579A  EC5A  F02A         	call	_forzarEspejeo	;wreg free
  5631  00579E                     
  5632                           ;main.c: 444:     forzarParoAuto();
  5633  00579E  ECB5  F02B         	call	_forzarParoAuto	;wreg free
  5634  0057A2                     
  5635                           ;main.c: 445:     pausa = 1;
  5636  0057A2  0E01               	movlw	1
  5637  0057A4  0101               	movlb	1	; () banked
  5638  0057A6  6FE9               	movwf	_pausa& (0+255),b
  5639  0057A8                     
  5640                           ; BSR set to: 1
  5641  0057A8  0012               	return		;funcret
  5642  0057AA                     __end_of_finalizarRecorrido:
  5643                           	opt callstack 0
  5644                           
  5645 ;; *************** function _forzarEspejeo *****************
  5646 ;; Defined at:
  5647 ;;		line 518 in file "main.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    7
  5668 ;; This function calls:
  5669 ;;		___flge
  5670 ;;		_forzarEspejeoDerecha
  5671 ;;		_forzarEspejeoIzquierda
  5672 ;; This function is called by:
  5673 ;;		_comportamientoBasico
  5674 ;;		_finalizarRecorrido
  5675 ;;		_moverCarrito
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text18
  5680  0054B4                     __ptext18:
  5681                           	opt callstack 0
  5682  0054B4                     _forzarEspejeo:
  5683                           	opt callstack 21
  5684  0054B4                     
  5685                           ;main.c: 520:     if (sensorIzquierda > sensorDerecha)
  5686  0054B4  C12C  F034         	movff	_sensorDerecha,___flge@ff1
  5687  0054B8  C12D  F035         	movff	_sensorDerecha+1,___flge@ff1+1
  5688  0054BC  C12E  F036         	movff	_sensorDerecha+2,___flge@ff1+2
  5689  0054C0  C12F  F037         	movff	_sensorDerecha+3,___flge@ff1+3
  5690  0054C4  C128  F038         	movff	_sensorIzquierda,___flge@ff2
  5691  0054C8  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  5692  0054CC  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  5693  0054D0  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  5694  0054D4  EC10  F021         	call	___flge	;wreg free
  5695  0054D8  B0D8               	btfsc	status,0,c
  5696  0054DA  EF71  F02A         	goto	u11171
  5697  0054DE  EF73  F02A         	goto	u11170
  5698  0054E2                     u11171:
  5699  0054E2  EF77  F02A         	goto	l9865
  5700  0054E6                     u11170:
  5701  0054E6                     
  5702                           ;main.c: 521:         forzarEspejeoIzquierda();
  5703  0054E6  EC9B  F02B         	call	_forzarEspejeoIzquierda	;wreg free
  5704  0054EA  EF79  F02A         	goto	l433
  5705  0054EE                     l9865:
  5706                           
  5707                           ;main.c: 523:         forzarEspejeoDerecha();
  5708  0054EE  ECA8  F02B         	call	_forzarEspejeoDerecha	;wreg free
  5709  0054F2                     l433:
  5710  0054F2  0012               	return		;funcret
  5711  0054F4                     __end_of_forzarEspejeo:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function _forzarEspejeoIzquierda *****************
  5715 ;; Defined at:
  5716 ;;		line 498 in file "main.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;		None
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5733 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5734 ;;Total ram usage:        0 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    6
  5737 ;; This function calls:
  5738 ;;		_forzarGiroIzquierda
  5739 ;;		_forzarParoAuto
  5740 ;;		_forzarReversa
  5741 ;;		_velocidadEstandar
  5742 ;; This function is called by:
  5743 ;;		_forzarEspejeo
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text19
  5748  005736                     __ptext19:
  5749                           	opt callstack 0
  5750  005736                     _forzarEspejeoIzquierda:
  5751                           	opt callstack 21
  5752  005736                     
  5753                           ;main.c: 500:     forzarParoAuto();
  5754  005736  ECB5  F02B         	call	_forzarParoAuto	;wreg free
  5755  00573A                     
  5756                           ;main.c: 501:     velocidadEstandar();
  5757  00573A  EC20  F02B         	call	_velocidadEstandar	;wreg free
  5758  00573E                     
  5759                           ;main.c: 502:     forzarReversa();
  5760  00573E  EC6A  F02B         	call	_forzarReversa	;wreg free
  5761  005742                     
  5762                           ;main.c: 503:     forzarGiroIzquierda();
  5763  005742  EC7B  F02B         	call	_forzarGiroIzquierda	;wreg free
  5764  005746                     
  5765                           ;main.c: 504:     forzarReversa();
  5766  005746  EC6A  F02B         	call	_forzarReversa	;wreg free
  5767  00574A                     
  5768                           ;main.c: 505:     forzarGiroIzquierda();
  5769  00574A  EC7B  F02B         	call	_forzarGiroIzquierda	;wreg free
  5770  00574E  0012               	return		;funcret
  5771  005750                     __end_of_forzarEspejeoIzquierda:
  5772                           	opt callstack 0
  5773                           
  5774 ;; *************** function _forzarGiroIzquierda *****************
  5775 ;; Defined at:
  5776 ;;		line 480 in file "main.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		wreg
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5790 ;;      Params:         0       0       0       0       0       0       0       0       0
  5791 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5792 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5793 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5794 ;;Total ram usage:        2 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    2
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		_forzarEspejeoIzquierda
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text20
  5805  0056F6                     __ptext20:
  5806                           	opt callstack 0
  5807  0056F6                     _forzarGiroIzquierda:
  5808                           	opt callstack 24
  5809  0056F6                     
  5810                           ;main.c: 481:     LATB4 = 0;
  5811  0056F6  988A               	bcf	3978,4,c	;volatile
  5812                           
  5813                           ;main.c: 482:     LATB5 = 0;
  5814  0056F8  9A8A               	bcf	3978,5,c	;volatile
  5815                           
  5816                           ;main.c: 483:     LATB6 = 1;
  5817  0056FA  8C8A               	bsf	3978,6,c	;volatile
  5818                           
  5819                           ;main.c: 484:     LATB7 = 0;
  5820  0056FC  9E8A               	bcf	3978,7,c	;volatile
  5821  0056FE                     
  5822                           ;main.c: 485:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5823  0056FE  0E03               	movlw	3
  5824  005700  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
  5825  005702  0E15               	movlw	21
  5826  005704  6E06               	movwf	??_forzarGiroIzquierda^0,c
  5827  005706  0E74               	movlw	116
  5828  005708                     u12107:
  5829  005708  2EE8               	decfsz	wreg,f,c
  5830  00570A  D7FE               	bra	u12107
  5831  00570C  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
  5832  00570E  D7FC               	bra	u12107
  5833  005710  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
  5834  005712  D7FA               	bra	u12107
  5835  005714  0012               	return		;funcret
  5836  005716                     __end_of_forzarGiroIzquierda:
  5837                           	opt callstack 0
  5838                           
  5839 ;; *************** function _forzarEspejeoDerecha *****************
  5840 ;; Defined at:
  5841 ;;		line 508 in file "main.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5858 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5859 ;;Total ram usage:        0 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    6
  5862 ;; This function calls:
  5863 ;;		_forzarGiroDerecha
  5864 ;;		_forzarParoAuto
  5865 ;;		_forzarReversa
  5866 ;;		_velocidadEstandar
  5867 ;; This function is called by:
  5868 ;;		_forzarEspejeo
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text21
  5873  005750                     __ptext21:
  5874                           	opt callstack 0
  5875  005750                     _forzarEspejeoDerecha:
  5876                           	opt callstack 21
  5877  005750                     
  5878                           ;main.c: 510:     forzarParoAuto();
  5879  005750  ECB5  F02B         	call	_forzarParoAuto	;wreg free
  5880  005754                     
  5881                           ;main.c: 511:     velocidadEstandar();
  5882  005754  EC20  F02B         	call	_velocidadEstandar	;wreg free
  5883  005758                     
  5884                           ;main.c: 512:     forzarReversa();
  5885  005758  EC6A  F02B         	call	_forzarReversa	;wreg free
  5886  00575C                     
  5887                           ;main.c: 513:     forzarGiroDerecha();
  5888  00575C  EC8B  F02B         	call	_forzarGiroDerecha	;wreg free
  5889  005760                     
  5890                           ;main.c: 514:     forzarReversa();
  5891  005760  EC6A  F02B         	call	_forzarReversa	;wreg free
  5892  005764                     
  5893                           ;main.c: 515:     forzarGiroDerecha();
  5894  005764  EC8B  F02B         	call	_forzarGiroDerecha	;wreg free
  5895  005768  0012               	return		;funcret
  5896  00576A                     __end_of_forzarEspejeoDerecha:
  5897                           	opt callstack 0
  5898                           
  5899 ;; *************** function _velocidadEstandar *****************
  5900 ;; Defined at:
  5901 ;;		line 1312 in file "main.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5915 ;;      Params:         0       0       0       0       0       0       0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    5
  5922 ;; This function calls:
  5923 ;;		_pwmDuty
  5924 ;; This function is called by:
  5925 ;;		_inicializarComportamientoBasico
  5926 ;;		_comportamientoBasico
  5927 ;;		_forzarEspejeoIzquierda
  5928 ;;		_forzarEspejeoDerecha
  5929 ;;		_regresarPuntoPartida
  5930 ;;		_regresarAlCruce
  5931 ;;		_recorrerCaminoEncontrado
  5932 ;;		_probarCruceT
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text22
  5937  005640                     __ptext22:
  5938                           	opt callstack 0
  5939  005640                     _velocidadEstandar:
  5940                           	opt callstack 24
  5941  005640                     
  5942                           ;main.c: 1314:     pwmDuty(100, 1);
  5943  005640  0E00               	movlw	0
  5944  005642  0100               	movlb	0	; () banked
  5945  005644  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5946  005646  0E64               	movlw	100
  5947  005648  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5948  00564A  0E01               	movlw	1
  5949  00564C  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5950  00564E  EC56  F019         	call	_pwmDuty	;wreg free
  5951                           
  5952                           ;main.c: 1315:     pwmDuty(100, 2);
  5953  005652  0E00               	movlw	0
  5954  005654  0100               	movlb	0	; () banked
  5955  005656  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5956  005658  0E64               	movlw	100
  5957  00565A  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5958  00565C  0E02               	movlw	2
  5959  00565E  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5960  005660  EC56  F019         	call	_pwmDuty	;wreg free
  5961  005664  0012               	return		;funcret
  5962  005666                     __end_of_velocidadEstandar:
  5963                           	opt callstack 0
  5964                           
  5965 ;; *************** function _forzarReversa *****************
  5966 ;; Defined at:
  5967 ;;		line 460 in file "main.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      void 
  5974 ;; Registers used:
  5975 ;;		wreg
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5981 ;;      Params:         0       0       0       0       0       0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5983 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5984 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5985 ;;Total ram usage:        2 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    2
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_forzarEspejeoIzquierda
  5992 ;;		_forzarEspejeoDerecha
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text23
  5997  0056D4                     __ptext23:
  5998                           	opt callstack 0
  5999  0056D4                     _forzarReversa:
  6000                           	opt callstack 24
  6001  0056D4                     
  6002                           ;main.c: 461:     LATB4 = 0;
  6003  0056D4  988A               	bcf	3978,4,c	;volatile
  6004                           
  6005                           ;main.c: 462:     LATB5 = 1;
  6006  0056D6  8A8A               	bsf	3978,5,c	;volatile
  6007                           
  6008                           ;main.c: 463:     LATB6 = 0;
  6009  0056D8  9C8A               	bcf	3978,6,c	;volatile
  6010                           
  6011                           ;main.c: 464:     LATB7 = 1;
  6012  0056DA  8E8A               	bsf	3978,7,c	;volatile
  6013  0056DC                     
  6014                           ;main.c: 466:     _delay((unsigned long)((400)*(4000000/4000.0)));
  6015  0056DC  0E03               	movlw	3
  6016  0056DE  6E07               	movwf	(??_forzarReversa+1)^0,c
  6017  0056E0  0E08               	movlw	8
  6018  0056E2  6E06               	movwf	??_forzarReversa^0,c
  6019  0056E4  0E77               	movlw	119
  6020  0056E6                     u12117:
  6021  0056E6  2EE8               	decfsz	wreg,f,c
  6022  0056E8  D7FE               	bra	u12117
  6023  0056EA  2E06               	decfsz	??_forzarReversa^0,f,c
  6024  0056EC  D7FC               	bra	u12117
  6025  0056EE  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  6026  0056F0  D7FA               	bra	u12117
  6027  0056F2  F000               	nop	
  6028  0056F4  0012               	return		;funcret
  6029  0056F6                     __end_of_forzarReversa:
  6030                           	opt callstack 0
  6031                           
  6032 ;; *************** function _forzarParoAuto *****************
  6033 ;; Defined at:
  6034 ;;		line 449 in file "main.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6048 ;;      Params:         0       0       0       0       0       0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6050 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6051 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6052 ;;Total ram usage:        1 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    2
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_comportamientoBasico
  6059 ;;		_finalizarRecorrido
  6060 ;;		_forzarEspejeoIzquierda
  6061 ;;		_forzarEspejeoDerecha
  6062 ;;		_main
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text24
  6067  00576A                     __ptext24:
  6068                           	opt callstack 0
  6069  00576A                     _forzarParoAuto:
  6070                           	opt callstack 28
  6071  00576A                     
  6072                           ;main.c: 451:     LATB4 = 0;
  6073  00576A  988A               	bcf	3978,4,c	;volatile
  6074                           
  6075                           ;main.c: 452:     LATB5 = 0;
  6076  00576C  9A8A               	bcf	3978,5,c	;volatile
  6077                           
  6078                           ;main.c: 453:     LATB6 = 0;
  6079  00576E  9C8A               	bcf	3978,6,c	;volatile
  6080                           
  6081                           ;main.c: 456:     if (!0)
  6082  005770  9E8A               	bcf	3978,7,c	;volatile
  6083  005772                     
  6084                           ;main.c: 457:         _delay((unsigned long)((35)*(4000000/4000.0)));
  6085  005772  0E2E               	movlw	46
  6086  005774  6E06               	movwf	??_forzarParoAuto^0,c
  6087  005776  0E73               	movlw	115
  6088  005778                     u12127:
  6089  005778  2EE8               	decfsz	wreg,f,c
  6090  00577A  D7FE               	bra	u12127
  6091  00577C  2E06               	decfsz	??_forzarParoAuto^0,f,c
  6092  00577E  D7FC               	bra	u12127
  6093  005780  F000               	nop	
  6094  005782  0012               	return		;funcret
  6095  005784                     __end_of_forzarParoAuto:
  6096                           	opt callstack 0
  6097                           
  6098 ;; *************** function _forzarGiroDerecha *****************
  6099 ;; Defined at:
  6100 ;;		line 489 in file "main.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6114 ;;      Params:         0       0       0       0       0       0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6116 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6117 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6118 ;;Total ram usage:        2 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    2
  6121 ;; This function calls:
  6122 ;;		Nothing
  6123 ;; This function is called by:
  6124 ;;		_forzarEspejeoDerecha
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text25
  6129  005716                     __ptext25:
  6130                           	opt callstack 0
  6131  005716                     _forzarGiroDerecha:
  6132                           	opt callstack 24
  6133  005716                     
  6134                           ;main.c: 490:     LATB4 = 1;
  6135  005716  888A               	bsf	3978,4,c	;volatile
  6136                           
  6137                           ;main.c: 491:     LATB5 = 0;
  6138  005718  9A8A               	bcf	3978,5,c	;volatile
  6139                           
  6140                           ;main.c: 492:     LATB6 = 0;
  6141  00571A  9C8A               	bcf	3978,6,c	;volatile
  6142                           
  6143                           ;main.c: 493:     LATB7 = 0;
  6144  00571C  9E8A               	bcf	3978,7,c	;volatile
  6145  00571E                     
  6146                           ;main.c: 494:     _delay((unsigned long)((410)*(4000000/4000.0)));
  6147  00571E  0E03               	movlw	3
  6148  005720  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
  6149  005722  0E15               	movlw	21
  6150  005724  6E06               	movwf	??_forzarGiroDerecha^0,c
  6151  005726  0E74               	movlw	116
  6152  005728                     u12137:
  6153  005728  2EE8               	decfsz	wreg,f,c
  6154  00572A  D7FE               	bra	u12137
  6155  00572C  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
  6156  00572E  D7FC               	bra	u12137
  6157  005730  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
  6158  005732  D7FA               	bra	u12137
  6159  005734  0012               	return		;funcret
  6160  005736                     __end_of_forzarGiroDerecha:
  6161                           	opt callstack 0
  6162                           
  6163 ;; *************** function _decidirDireccion *****************
  6164 ;; Defined at:
  6165 ;;		line 874 in file "main.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  caminosRecor    2    0[BANK1 ] PTR unsigned char 
  6168 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
  6169 ;;  investigando    2    2[BANK1 ] PTR unsigned char 
  6170 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  6171 ;;  posicionInvC    2    4[BANK1 ] PTR unsigned char 
  6172 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  6173 ;;  contCaminosR    2    6[BANK1 ] PTR unsigned char 
  6174 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  6175 ;;  caminoActual    2    8[BANK1 ] PTR unsigned char 
  6176 ;;		 -> comportamientoBasico@caminoActual(1), 
  6177 ;;  cambioOrient    2   10[BANK1 ] PTR unsigned char 
  6178 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  6179 ;;  mapear          2   12[BANK1 ] PTR unsigned char 
  6180 ;;		 -> comportamientoBasico@mapear(1), 
  6181 ;;  cruceDetecta    2   14[BANK1 ] PTR unsigned char 
  6182 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  6183 ;;  avanceRectoL    2   16[BANK1 ] PTR unsigned char 
  6184 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  direccionEle    1   83[COMRAM] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      unsigned char 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6196 ;;      Params:         0       0      18       0       0       0       0       0       0
  6197 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6198 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6199 ;;      Totals:         1       3      18       0       0       0       0       0       0
  6200 ;;Total ram usage:       22 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:   10
  6203 ;; This function calls:
  6204 ;;		_UART_printf
  6205 ;;		___flge
  6206 ;;		_hayCruce
  6207 ;;		_mostrarDireccionElegida
  6208 ;;		_seLlegoAlDestino
  6209 ;;		_sprintf
  6210 ;;		_velocidadBaja
  6211 ;; This function is called by:
  6212 ;;		_comportamientoBasico
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text26
  6217  001174                     __ptext26:
  6218                           	opt callstack 0
  6219  001174                     _decidirDireccion:
  6220                           	opt callstack 19
  6221  001174                     
  6222                           ;main.c: 874: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 875:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro,;main.c: 876:         T_UBYTE* mapear
      +                          , T_UBYTE* cruceDetectado, T_BOOL* avanceRectoLargo) {;main.c: 878:     T_UBYTE direccio
      +                          nElegida;;main.c: 879:     llegoDestino = seLlegoAlDestino();
  6223  001174  EC09  F02B         	call	_seLlegoAlDestino	;wreg free
  6224  001178  0100               	movlb	0	; () banked
  6225  00117A  6FFF               	movwf	_llegoDestino& (0+255),b
  6226  00117C                     
  6227                           ; BSR set to: 0
  6228                           ;main.c: 882:     if (*posicionInvCruce && *investigandoCruce) {
  6229  00117C  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6230  001180  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6231  001184  50DF               	movf	indf2,w,c
  6232  001186  B4D8               	btfsc	status,2,c
  6233  001188  EFC8  F008         	goto	u11301
  6234  00118C  EFCA  F008         	goto	u11300
  6235  001190                     u11301:
  6236  001190  EF9B  F00A         	goto	l10293
  6237  001194                     u11300:
  6238  001194                     
  6239                           ; BSR set to: 0
  6240  001194  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6241  001198  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6242  00119C  50DF               	movf	indf2,w,c
  6243  00119E  B4D8               	btfsc	status,2,c
  6244  0011A0  EFD4  F008         	goto	u11311
  6245  0011A4  EFD6  F008         	goto	u11310
  6246  0011A8                     u11311:
  6247  0011A8  EF9B  F00A         	goto	l10293
  6248  0011AC                     u11310:
  6249  0011AC                     
  6250                           ; BSR set to: 0
  6251                           ;main.c: 884:         if (*posicionInvCruce)
  6252  0011AC  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6253  0011B0  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6254  0011B4  50DF               	movf	indf2,w,c
  6255  0011B6  B4D8               	btfsc	status,2,c
  6256  0011B8  EFE0  F008         	goto	u11321
  6257  0011BC  EFE2  F008         	goto	u11320
  6258  0011C0                     u11321:
  6259  0011C0  EFE8  F008         	goto	l10049
  6260  0011C4                     u11320:
  6261  0011C4                     
  6262                           ; BSR set to: 0
  6263                           ;main.c: 885:             *posicionInvCruce = 0;
  6264  0011C4  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6265  0011C8  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6266  0011CC  0E00               	movlw	0
  6267  0011CE  6EDF               	movwf	indf2,c
  6268  0011D0                     l10049:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;main.c: 887:         if (llegoDestino) {
  6272  0011D0  51FF               	movf	_llegoDestino& (0+255),w,b
  6273  0011D2  B4D8               	btfsc	status,2,c
  6274  0011D4  EFEE  F008         	goto	u11331
  6275  0011D8  EFF0  F008         	goto	u11330
  6276  0011DC                     u11331:
  6277  0011DC  EF51  F009         	goto	l10073
  6278  0011E0                     u11330:
  6279  0011E0                     
  6280                           ; BSR set to: 0
  6281                           ;main.c: 888:             direccionElegida = ALTO;
  6282  0011E0  0E04               	movlw	4
  6283  0011E2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6284                           
  6285                           ;main.c: 890:         } else {
  6286  0011E4  EF6E  F009         	goto	l10075
  6287  0011E8                     l10053:
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;main.c: 894:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1'
      +                          )
  6291  0011E8  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6292  0011EC  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6293  0011F0  0E31               	movlw	49
  6294  0011F2  18DE               	xorwf	postinc2,w,c
  6295  0011F4  A4D8               	btfss	status,2,c
  6296  0011F6  EFFF  F008         	goto	u11341
  6297  0011FA  EF01  F009         	goto	u11340
  6298  0011FE                     u11341:
  6299  0011FE  EF09  F009         	goto	l10057
  6300  001202                     u11340:
  6301  001202                     
  6302                           ; BSR set to: 0
  6303                           ;main.c: 895:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
  6304  001202  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6305  001206  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6306  00120A  0E58               	movlw	88
  6307  00120C  6EDF               	movwf	indf2,c
  6308  00120E  EF6E  F009         	goto	l10075
  6309  001212                     l10057:
  6310                           
  6311                           ; BSR set to: 0
  6312  001212  0101               	movlb	1	; () banked
  6313  001214  EE20 F001          	lfsr	2,1
  6314  001218  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6315  00121A  26D9               	addwf	fsr2l,f,c
  6316  00121C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6317  00121E  22DA               	addwfc	fsr2h,f,c
  6318  001220  0E31               	movlw	49
  6319  001222  18DE               	xorwf	postinc2,w,c
  6320  001224  A4D8               	btfss	status,2,c
  6321  001226  EF17  F009         	goto	u11351
  6322  00122A  EF19  F009         	goto	u11350
  6323  00122E                     u11351:
  6324  00122E  EF6E  F009         	goto	l565
  6325  001232                     u11350:
  6326  001232                     l10059:
  6327                           
  6328                           ; BSR set to: 1
  6329  001232  EE20 F001          	lfsr	2,1
  6330  001236  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6331  001238  26D9               	addwf	fsr2l,f,c
  6332  00123A  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6333  00123C  22DA               	addwfc	fsr2h,f,c
  6334  00123E  0E58               	movlw	88
  6335  001240  6EDF               	movwf	indf2,c
  6336  001242  EF6E  F009         	goto	l10075
  6337  001246                     l10061:
  6338                           
  6339                           ; BSR set to: 0
  6340  001246  0101               	movlb	1	; () banked
  6341  001248  EE20 F001          	lfsr	2,1
  6342  00124C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6343  00124E  26D9               	addwf	fsr2l,f,c
  6344  001250  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6345  001252  22DA               	addwfc	fsr2h,f,c
  6346  001254  0E31               	movlw	49
  6347  001256  18DE               	xorwf	postinc2,w,c
  6348  001258  A4D8               	btfss	status,2,c
  6349  00125A  EF31  F009         	goto	u11361
  6350  00125E  EF33  F009         	goto	u11360
  6351  001262                     u11361:
  6352  001262  EF35  F009         	goto	l10065
  6353  001266                     u11360:
  6354  001266  EF19  F009         	goto	l10059
  6355  00126A                     l10065:
  6356                           
  6357                           ; BSR set to: 1
  6358  00126A  EE20 F002          	lfsr	2,2
  6359  00126E  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6360  001270  26D9               	addwf	fsr2l,f,c
  6361  001272  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6362  001274  22DA               	addwfc	fsr2h,f,c
  6363  001276  0E58               	movlw	88
  6364  001278  6EDF               	movwf	indf2,c
  6365  00127A  EF6E  F009         	goto	l10075
  6366  00127E                     l10067:
  6367                           
  6368                           ; BSR set to: 0
  6369  00127E  0101               	movlb	1	; () banked
  6370  001280  EE20 F002          	lfsr	2,2
  6371  001284  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6372  001286  26D9               	addwf	fsr2l,f,c
  6373  001288  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6374  00128A  22DA               	addwfc	fsr2h,f,c
  6375  00128C  0E31               	movlw	49
  6376  00128E  18DE               	xorwf	postinc2,w,c
  6377  001290  A4D8               	btfss	status,2,c
  6378  001292  EF4D  F009         	goto	u11371
  6379  001296  EF4F  F009         	goto	u11370
  6380  00129A                     u11371:
  6381  00129A  EF6E  F009         	goto	l10075
  6382  00129E                     u11370:
  6383  00129E  EF35  F009         	goto	l10065
  6384  0012A2                     l10073:
  6385                           
  6386                           ; BSR set to: 0
  6387  0012A2  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6388  0012A6  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6389  0012AA  50DF               	movf	indf2,w,c
  6390  0012AC  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6391  0012AE  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6392                           
  6393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6394                           ; Switch size 1, requested type "simple"
  6395                           ; Number of cases is 1, Range of values is 0 to 0
  6396                           ; switch strategies available:
  6397                           ; Name         Instructions Cycles
  6398                           ; simple_byte            4     3 (average)
  6399                           ;	Chosen strategy is simple_byte
  6400  0012B0  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6401  0012B2  0A00               	xorlw	0	; case 0
  6402  0012B4  B4D8               	btfsc	status,2,c
  6403  0012B6  EF5F  F009         	goto	l11181
  6404  0012BA  EF6E  F009         	goto	l10075
  6405  0012BE                     l11181:
  6406                           
  6407                           ; BSR set to: 0
  6408                           ; Switch size 1, requested type "simple"
  6409                           ; Number of cases is 3, Range of values is 1 to 3
  6410                           ; switch strategies available:
  6411                           ; Name         Instructions Cycles
  6412                           ; simple_byte           10     6 (average)
  6413                           ;	Chosen strategy is simple_byte
  6414  0012BE  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6415  0012C0  0A01               	xorlw	1	; case 1
  6416  0012C2  B4D8               	btfsc	status,2,c
  6417  0012C4  EFF4  F008         	goto	l10053
  6418  0012C8  0A03               	xorlw	3	; case 2
  6419  0012CA  B4D8               	btfsc	status,2,c
  6420  0012CC  EF23  F009         	goto	l10061
  6421  0012D0  0A01               	xorlw	1	; case 3
  6422  0012D2  B4D8               	btfsc	status,2,c
  6423  0012D4  EF3F  F009         	goto	l10067
  6424  0012D8  EF6E  F009         	goto	l10075
  6425  0012DC                     l565:
  6426  0012DC                     l10075:
  6427                           
  6428                           ;main.c: 923:         if (!(*cambioOrientacionCarro)) {
  6429  0012DC  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6430  0012E0  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6431  0012E4  50DF               	movf	indf2,w,c
  6432  0012E6  A4D8               	btfss	status,2,c
  6433  0012E8  EF78  F009         	goto	u11381
  6434  0012EC  EF7A  F009         	goto	u11380
  6435  0012F0                     u11381:
  6436  0012F0  EF6A  F00A         	goto	l10285
  6437  0012F4                     u11380:
  6438  0012F4                     
  6439                           ;main.c: 925:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1')
  6440  0012F4  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6441  0012F8  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6442  0012FC  0E31               	movlw	49
  6443  0012FE  18DE               	xorwf	postinc2,w,c
  6444  001300  A4D8               	btfss	status,2,c
  6445  001302  EF85  F009         	goto	u11391
  6446  001306  EF87  F009         	goto	u11390
  6447  00130A                     u11391:
  6448  00130A  EF8B  F009         	goto	l10081
  6449  00130E                     u11390:
  6450  00130E  0E01               	movlw	1
  6451  001310  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6452  001312  EFB0  F009         	goto	l10089
  6453  001316                     l10081:
  6454  001316  0101               	movlb	1	; () banked
  6455  001318  EE20 F001          	lfsr	2,1
  6456  00131C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6457  00131E  26D9               	addwf	fsr2l,f,c
  6458  001320  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6459  001322  22DA               	addwfc	fsr2h,f,c
  6460  001324  0E31               	movlw	49
  6461  001326  18DE               	xorwf	postinc2,w,c
  6462  001328  A4D8               	btfss	status,2,c
  6463  00132A  EF99  F009         	goto	u11401
  6464  00132E  EF9B  F009         	goto	u11400
  6465  001332                     u11401:
  6466  001332  EF9F  F009         	goto	l10085
  6467  001336                     u11400:
  6468  001336                     
  6469                           ; BSR set to: 1
  6470  001336  0E02               	movlw	2
  6471  001338  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6472  00133A  EFB0  F009         	goto	l10089
  6473  00133E                     l10085:
  6474                           
  6475                           ; BSR set to: 1
  6476  00133E  EE20 F002          	lfsr	2,2
  6477  001342  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6478  001344  26D9               	addwf	fsr2l,f,c
  6479  001346  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6480  001348  22DA               	addwfc	fsr2h,f,c
  6481  00134A  0E31               	movlw	49
  6482  00134C  18DE               	xorwf	postinc2,w,c
  6483  00134E  A4D8               	btfss	status,2,c
  6484  001350  EFAC  F009         	goto	u11411
  6485  001354  EFAE  F009         	goto	u11410
  6486  001358                     u11411:
  6487  001358  EFB0  F009         	goto	l10089
  6488  00135C                     u11410:
  6489  00135C                     
  6490                           ; BSR set to: 1
  6491  00135C  0E03               	movlw	3
  6492  00135E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6493  001360                     l10089:
  6494                           
  6495                           ;main.c: 933:             *caminoActual = direccionElegida;
  6496  001360  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6497  001364  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6498  001368  C054  FFDF         	movff	decidirDireccion@direccionElegida,indf2
  6499  00136C                     
  6500                           ;main.c: 934:             *cambioOrientacionCarro = 1;
  6501  00136C  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6502  001370  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6503  001374  0E01               	movlw	1
  6504  001376  6EDF               	movwf	indf2,c
  6505                           
  6506                           ;main.c: 936:         } else {
  6507  001378  EF88  F00A         	goto	l10287
  6508  00137C                     l595:
  6509                           
  6510                           ; BSR set to: 1
  6511  00137C  EF02  F00A         	goto	l10189
  6512  001380                     l10147:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;main.c: 990:                         if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] ==
      +                           'X') {
  6516  001380  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6517  001384  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6518  001388  0E58               	movlw	88
  6519  00138A  18DE               	xorwf	postinc2,w,c
  6520  00138C  A4D8               	btfss	status,2,c
  6521  00138E  EFCB  F009         	goto	u11421
  6522  001392  EFCD  F009         	goto	u11420
  6523  001396                     u11421:
  6524  001396  EF02  F00A         	goto	l10189
  6525  00139A                     u11420:
  6526  00139A                     
  6527                           ; BSR set to: 0
  6528  00139A  0101               	movlb	1	; () banked
  6529  00139C  EE20 F001          	lfsr	2,1
  6530  0013A0  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6531  0013A2  26D9               	addwf	fsr2l,f,c
  6532  0013A4  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6533  0013A6  22DA               	addwfc	fsr2h,f,c
  6534  0013A8  0E31               	movlw	49
  6535  0013AA  18DE               	xorwf	postinc2,w,c
  6536  0013AC  A4D8               	btfss	status,2,c
  6537  0013AE  EFDB  F009         	goto	u11431
  6538  0013B2  EFDD  F009         	goto	u11430
  6539  0013B6                     u11431:
  6540  0013B6  EFE7  F009         	goto	l10167
  6541  0013BA                     u11430:
  6542  0013BA                     
  6543                           ; BSR set to: 1
  6544                           ;main.c: 993:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA
      +                           - 1] == '1') {;main.c: 994:                                 *caminoActual = IZQUIERDA;
  6545  0013BA  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6546  0013BE  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6547  0013C2  0E02               	movlw	2
  6548  0013C4  6EDF               	movwf	indf2,c
  6549  0013C6                     
  6550                           ; BSR set to: 1
  6551                           ;main.c: 995:                                 direccionElegida = DERECHA;
  6552  0013C6  0E03               	movlw	3
  6553  0013C8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6554                           
  6555                           ;main.c: 996:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA &
      +                          &
  6556  0013CA  EF02  F00A         	goto	l10189
  6557  0013CE                     l10167:
  6558                           
  6559                           ; BSR set to: 1
  6560  0013CE  EE20 F002          	lfsr	2,2
  6561  0013D2  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6562  0013D4  26D9               	addwf	fsr2l,f,c
  6563  0013D6  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6564  0013D8  22DA               	addwfc	fsr2h,f,c
  6565  0013DA  0E31               	movlw	49
  6566  0013DC  18DE               	xorwf	postinc2,w,c
  6567  0013DE  A4D8               	btfss	status,2,c
  6568  0013E0  EFF4  F009         	goto	u11441
  6569  0013E4  EFF6  F009         	goto	u11440
  6570  0013E8                     u11441:
  6571  0013E8  EFBE  F009         	goto	l595
  6572  0013EC                     u11440:
  6573  0013EC                     
  6574                           ; BSR set to: 1
  6575                           ;main.c: 1005:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1006:                                 *caminoActual = DERECHA;
  6576  0013EC  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6577  0013F0  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6578  0013F4  0E03               	movlw	3
  6579  0013F6  6EDF               	movwf	indf2,c
  6580  0013F8                     
  6581                           ; BSR set to: 1
  6582                           ;main.c: 1007:                                 direccionElegida = IZQUIERDA;
  6583  0013F8  0E02               	movlw	2
  6584  0013FA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6585  0013FC  EF02  F00A         	goto	l10189
  6586  001400                     l612:
  6587                           
  6588                           ; BSR set to: 1
  6589  001400  EF88  F00A         	goto	l10287
  6590  001404                     l10189:
  6591  001404  0101               	movlb	1	; () banked
  6592  001406  EE20 F001          	lfsr	2,1
  6593  00140A  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6594  00140C  26D9               	addwf	fsr2l,f,c
  6595  00140E  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6596  001410  22DA               	addwfc	fsr2h,f,c
  6597  001412  0E58               	movlw	88
  6598  001414  18DE               	xorwf	postinc2,w,c
  6599  001416  A4D8               	btfss	status,2,c
  6600  001418  EF10  F00A         	goto	u11451
  6601  00141C  EF12  F00A         	goto	u11450
  6602  001420                     u11451:
  6603  001420  EF88  F00A         	goto	l10287
  6604  001424                     u11450:
  6605  001424                     
  6606                           ; BSR set to: 1
  6607  001424  EE20 F002          	lfsr	2,2
  6608  001428  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6609  00142A  26D9               	addwf	fsr2l,f,c
  6610  00142C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6611  00142E  22DA               	addwfc	fsr2h,f,c
  6612  001430  0E31               	movlw	49
  6613  001432  18DE               	xorwf	postinc2,w,c
  6614  001434  A4D8               	btfss	status,2,c
  6615  001436  EF1F  F00A         	goto	u11461
  6616  00143A  EF21  F00A         	goto	u11460
  6617  00143E                     u11461:
  6618  00143E  EF00  F00A         	goto	l612
  6619  001442                     u11460:
  6620  001442                     l10193:
  6621                           
  6622                           ; BSR set to: 1
  6623                           ;main.c: 1035:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1036:                                 *caminoActual = DERECHA;
  6624  001442  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6625  001446  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6626  00144A  0E03               	movlw	3
  6627  00144C  6EDF               	movwf	indf2,c
  6628  00144E                     
  6629                           ; BSR set to: 1
  6630                           ;main.c: 1037:                                 direccionElegida = ENFRENTE;
  6631  00144E  0E01               	movlw	1
  6632  001450  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6633                           
  6634                           ;main.c: 1038:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
  6635  001452  EF88  F00A         	goto	l10287
  6636  001456                     l10235:
  6637                           
  6638                           ; BSR set to: 0
  6639  001456  0101               	movlb	1	; () banked
  6640  001458  EE20 F001          	lfsr	2,1
  6641  00145C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6642  00145E  26D9               	addwf	fsr2l,f,c
  6643  001460  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6644  001462  22DA               	addwfc	fsr2h,f,c
  6645  001464  0E58               	movlw	88
  6646  001466  18DE               	xorwf	postinc2,w,c
  6647  001468  A4D8               	btfss	status,2,c
  6648  00146A  EF39  F00A         	goto	u11471
  6649  00146E  EF3B  F00A         	goto	u11470
  6650  001472                     u11471:
  6651  001472  EF88  F00A         	goto	l10287
  6652  001476                     u11470:
  6653  001476                     
  6654                           ; BSR set to: 1
  6655  001476  EE20 F002          	lfsr	2,2
  6656  00147A  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6657  00147C  26D9               	addwf	fsr2l,f,c
  6658  00147E  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6659  001480  22DA               	addwfc	fsr2h,f,c
  6660  001482  0E31               	movlw	49
  6661  001484  18DE               	xorwf	postinc2,w,c
  6662  001486  A4D8               	btfss	status,2,c
  6663  001488  EF48  F00A         	goto	u11481
  6664  00148C  EF4A  F00A         	goto	u11480
  6665  001490                     u11481:
  6666  001490  EF4C  F00A         	goto	l10249
  6667  001494                     u11480:
  6668  001494  EF21  F00A         	goto	l10193
  6669  001498                     l10249:
  6670                           
  6671                           ; BSR set to: 1
  6672                           ;main.c: 1098:                                 *contCaminosRecorridos = 3;
  6673  001498  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6674  00149C  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6675  0014A0  0E03               	movlw	3
  6676  0014A2  6EDF               	movwf	indf2,c
  6677  0014A4  EF88  F00A         	goto	l10287
  6678  0014A8                     l10279:
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;main.c: 1137:                     *cambioOrientacionCarro = 0;
  6682  0014A8  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6683  0014AC  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6684  0014B0  0E00               	movlw	0
  6685  0014B2  6EDF               	movwf	indf2,c
  6686                           
  6687                           ;main.c: 1138:                     *contCaminosRecorridos = 0;
  6688  0014B4  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6689  0014B8  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6690  0014BC  0E00               	movlw	0
  6691  0014BE  6EDF               	movwf	indf2,c
  6692                           
  6693                           ;main.c: 1139:                     *investigandoCruce = 0;
  6694  0014C0  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6695  0014C4  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6696  0014C8  0E00               	movlw	0
  6697  0014CA  6EDF               	movwf	indf2,c
  6698  0014CC                     
  6699                           ; BSR set to: 0
  6700                           ;main.c: 1140:                     direccionElegida = ALTO;
  6701  0014CC  0E04               	movlw	4
  6702  0014CE  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6703                           
  6704                           ;main.c: 1142:                     break;
  6705  0014D0  EF88  F00A         	goto	l10287
  6706  0014D4                     l10285:
  6707  0014D4  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6708  0014D8  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6709  0014DC  50DF               	movf	indf2,w,c
  6710  0014DE  0100               	movlb	0	; () banked
  6711  0014E0  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6712  0014E2  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6713                           
  6714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6715                           ; Switch size 1, requested type "simple"
  6716                           ; Number of cases is 1, Range of values is 0 to 0
  6717                           ; switch strategies available:
  6718                           ; Name         Instructions Cycles
  6719                           ; simple_byte            4     3 (average)
  6720                           ;	Chosen strategy is simple_byte
  6721  0014E4  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6722  0014E6  0A00               	xorlw	0	; case 0
  6723  0014E8  B4D8               	btfsc	status,2,c
  6724  0014EA  EF79  F00A         	goto	l11183
  6725  0014EE  EF88  F00A         	goto	l10287
  6726  0014F2                     l11183:
  6727                           
  6728                           ; BSR set to: 0
  6729                           ; Switch size 1, requested type "simple"
  6730                           ; Number of cases is 3, Range of values is 1 to 3
  6731                           ; switch strategies available:
  6732                           ; Name         Instructions Cycles
  6733                           ; simple_byte           10     6 (average)
  6734                           ;	Chosen strategy is simple_byte
  6735  0014F2  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6736  0014F4  0A01               	xorlw	1	; case 1
  6737  0014F6  B4D8               	btfsc	status,2,c
  6738  0014F8  EFC0  F009         	goto	l10147
  6739  0014FC  0A03               	xorlw	3	; case 2
  6740  0014FE  B4D8               	btfsc	status,2,c
  6741  001500  EF2B  F00A         	goto	l10235
  6742  001504  0A01               	xorlw	1	; case 3
  6743  001506  B4D8               	btfsc	status,2,c
  6744  001508  EF54  F00A         	goto	l10279
  6745  00150C  EF88  F00A         	goto	l10287
  6746  001510                     l10287:
  6747                           
  6748                           ;main.c: 1146:         if (direccionElegida == ENFRENTE)
  6749  001510  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  6750  001512  A4D8               	btfss	status,2,c
  6751  001514  EF8E  F00A         	goto	u11491
  6752  001518  EF90  F00A         	goto	u11490
  6753  00151C                     u11491:
  6754  00151C  EF96  F00A         	goto	l10291
  6755  001520                     u11490:
  6756  001520                     
  6757                           ;main.c: 1147:             *avanceRectoLargo = 1;
  6758  001520  C1E2  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  6759  001524  C1E3  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  6760  001528  0E01               	movlw	1
  6761  00152A  6EDF               	movwf	indf2,c
  6762  00152C                     l10291:
  6763                           
  6764                           ;main.c: 1149:         mostrarDireccionElegida(direccionElegida);
  6765  00152C  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  6766  00152E  EC38  F026         	call	_mostrarDireccionElegida
  6767                           
  6768                           ;main.c: 1151:     } else {
  6769  001532  EF7E  F00B         	goto	l659
  6770  001536                     l10293:
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;main.c: 1153:         if (llegoDestino) {
  6774  001536  51FF               	movf	_llegoDestino& (0+255),w,b
  6775  001538  B4D8               	btfsc	status,2,c
  6776  00153A  EFA1  F00A         	goto	u11501
  6777  00153E  EFA3  F00A         	goto	u11500
  6778  001542                     u11501:
  6779  001542  EFA7  F00A         	goto	l10297
  6780  001546                     u11500:
  6781  001546                     
  6782                           ; BSR set to: 0
  6783                           ;main.c: 1154:             direccionElegida = ALTO;
  6784  001546  0E04               	movlw	4
  6785  001548  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6786                           
  6787                           ;main.c: 1156:         } else {
  6788  00154A  EF7E  F00B         	goto	l659
  6789  00154E                     l10297:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;main.c: 1158:             if (hayCruce(caminosRecorrer, *investigandoCruce)) {
  6793  00154E  C1D2  F040         	movff	decidirDireccion@caminosRecorrer,hayCruce@caminosRecorrer
  6794  001552  C1D3  F041         	movff	decidirDireccion@caminosRecorrer+1,hayCruce@caminosRecorrer+1
  6795  001556  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6796  00155A  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6797  00155E  50DF               	movf	indf2,w,c
  6798  001560  6E42               	movwf	hayCruce@investigandoCruce^0,c
  6799  001562  ECD6  F01B         	call	_hayCruce	;wreg free
  6800  001566  0900               	iorlw	0
  6801  001568  B4D8               	btfsc	status,2,c
  6802  00156A  EFB9  F00A         	goto	u11511
  6803  00156E  EFBB  F00A         	goto	u11510
  6804  001572                     u11511:
  6805  001572  EF25  F00B         	goto	l10313
  6806  001576                     u11510:
  6807  001576                     
  6808                           ;main.c: 1160:                 velocidadBaja();
  6809  001576  EC33  F02B         	call	_velocidadBaja	;wreg free
  6810  00157A                     
  6811                           ;main.c: 1162:                 if (!(*cruceDetectado)) {
  6812  00157A  C1E0  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  6813  00157E  C1E1  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  6814  001582  50DF               	movf	indf2,w,c
  6815  001584  A4D8               	btfss	status,2,c
  6816  001586  EFC7  F00A         	goto	u11521
  6817  00158A  EFC9  F00A         	goto	u11520
  6818  00158E                     u11521:
  6819  00158E  EF7E  F00B         	goto	l659
  6820  001592                     u11520:
  6821  001592                     
  6822                           ;main.c: 1164:                     if (!(*investigandoCruce))
  6823  001592  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6824  001596  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6825  00159A  50DF               	movf	indf2,w,c
  6826  00159C  A4D8               	btfss	status,2,c
  6827  00159E  EFD3  F00A         	goto	u11531
  6828  0015A2  EFD5  F00A         	goto	u11530
  6829  0015A6                     u11531:
  6830  0015A6  EFDB  F00A         	goto	l664
  6831  0015AA                     u11530:
  6832  0015AA                     
  6833                           ;main.c: 1165:                         *posicionInvCruce = 1;
  6834  0015AA  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6835  0015AE  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6836  0015B2  0E01               	movlw	1
  6837  0015B4  6EDF               	movwf	indf2,c
  6838  0015B6                     l664:
  6839                           
  6840                           ;main.c: 1167:                     *mapear = 1;
  6841  0015B6  C1DE  FFD9         	movff	decidirDireccion@mapear,fsr2l
  6842  0015BA  C1DF  FFDA         	movff	decidirDireccion@mapear+1,fsr2h
  6843  0015BE  0E01               	movlw	1
  6844  0015C0  6EDF               	movwf	indf2,c
  6845                           
  6846                           ;main.c: 1168:                     *cruceDetectado = 1;
  6847  0015C2  C1E0  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  6848  0015C6  C1E1  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  6849  0015CA  0E01               	movlw	1
  6850  0015CC  6EDF               	movwf	indf2,c
  6851                           
  6852                           ;main.c: 1169:                     *investigandoCruce = 1;
  6853  0015CE  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6854  0015D2  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6855  0015D6  0E01               	movlw	1
  6856  0015D8  6EDF               	movwf	indf2,c
  6857  0015DA                     
  6858                           ;main.c: 1170:                     direccionElegida = ALTO;
  6859  0015DA  0E04               	movlw	4
  6860  0015DC  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6861  0015DE                     
  6862                           ;main.c: 1172:                     sprintf(buffer, "Investigando Cruce: %c | %c | %c\n",
  6863  0015DE  0E91               	movlw	low _buffer
  6864  0015E0  0100               	movlb	0	; () banked
  6865  0015E2  6FE7               	movwf	sprintf@s& (0+255),b
  6866  0015E4  0E01               	movlw	high _buffer
  6867  0015E6  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  6868  0015E8  0E88               	movlw	low STR_20
  6869  0015EA  6FE9               	movwf	sprintf@fmt& (0+255),b
  6870  0015EC  0E7E               	movlw	high STR_20
  6871  0015EE  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  6872  0015F0  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6873  0015F4  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6874  0015F8  50DF               	movf	indf2,w,c
  6875  0015FA  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6876  0015FC  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6877  0015FE  6FEB               	movwf	(?_sprintf+4)& (0+255),b
  6878  001600  6BEC               	clrf	(?_sprintf+5)& (0+255),b
  6879  001602  0101               	movlb	1	; () banked
  6880  001604  EE20 F001          	lfsr	2,1
  6881  001608  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6882  00160A  26D9               	addwf	fsr2l,f,c
  6883  00160C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6884  00160E  22DA               	addwfc	fsr2h,f,c
  6885  001610  50DF               	movf	indf2,w,c
  6886  001612  0100               	movlb	0	; () banked
  6887  001614  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6888  001616  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6889  001618  6FED               	movwf	(?_sprintf+6)& (0+255),b
  6890  00161A  6BEE               	clrf	(?_sprintf+7)& (0+255),b
  6891  00161C  0101               	movlb	1	; () banked
  6892  00161E  EE20 F002          	lfsr	2,2
  6893  001622  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6894  001624  26D9               	addwf	fsr2l,f,c
  6895  001626  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6896  001628  22DA               	addwfc	fsr2h,f,c
  6897  00162A  50DF               	movf	indf2,w,c
  6898  00162C  0100               	movlb	0	; () banked
  6899  00162E  6FFD               	movwf	(??_decidirDireccion+2)& (0+255),b
  6900  001630  51FD               	movf	(??_decidirDireccion+2)& (0+255),w,b
  6901  001632  6FEF               	movwf	(?_sprintf+8)& (0+255),b
  6902  001634  6BF0               	clrf	(?_sprintf+9)& (0+255),b
  6903  001636  EC07  F029         	call	_sprintf	;wreg free
  6904  00163A                     
  6905                           ;main.c: 1174:                     UART_printf(buffer);
  6906  00163A  0E91               	movlw	low _buffer
  6907  00163C  6E07               	movwf	UART_printf@cadena^0,c
  6908  00163E  0E01               	movlw	high _buffer
  6909  001640  6E08               	movwf	(UART_printf@cadena+1)^0,c
  6910  001642  EC27  F028         	call	_UART_printf	;wreg free
  6911  001646  EF7E  F00B         	goto	l659
  6912  00164A                     l10313:
  6913                           
  6914                           ;main.c: 1180:                 if (DISTANCIA_PRIORIDAD_ALTA > 14)
  6915  00164A  0E00               	movlw	0
  6916  00164C  6E34               	movwf	___flge@ff1^0,c
  6917  00164E  0E00               	movlw	0
  6918  001650  6E35               	movwf	(___flge@ff1+1)^0,c
  6919  001652  0E60               	movlw	96
  6920  001654  6E36               	movwf	(___flge@ff1+2)^0,c
  6921  001656  0E41               	movlw	65
  6922  001658  6E37               	movwf	(___flge@ff1+3)^0,c
  6923  00165A  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
  6924  00165E  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
  6925  001662  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
  6926  001666  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
  6927  00166A  EC10  F021         	call	___flge	;wreg free
  6928  00166E  B0D8               	btfsc	status,0,c
  6929  001670  EF3C  F00B         	goto	u11541
  6930  001674  EF3E  F00B         	goto	u11540
  6931  001678                     u11541:
  6932  001678  EF42  F00B         	goto	l10317
  6933  00167C                     u11540:
  6934  00167C  0E01               	movlw	1
  6935  00167E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6936  001680  EF7E  F00B         	goto	l659
  6937  001684                     l10317:
  6938  001684  0E00               	movlw	0
  6939  001686  6E34               	movwf	___flge@ff1^0,c
  6940  001688  0E00               	movlw	0
  6941  00168A  6E35               	movwf	(___flge@ff1+1)^0,c
  6942  00168C  0EF0               	movlw	240
  6943  00168E  6E36               	movwf	(___flge@ff1+2)^0,c
  6944  001690  0E41               	movlw	65
  6945  001692  6E37               	movwf	(___flge@ff1+3)^0,c
  6946  001694  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
  6947  001698  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
  6948  00169C  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
  6949  0016A0  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
  6950  0016A4  EC10  F021         	call	___flge	;wreg free
  6951  0016A8  B0D8               	btfsc	status,0,c
  6952  0016AA  EF59  F00B         	goto	u11551
  6953  0016AE  EF5B  F00B         	goto	u11550
  6954  0016B2                     u11551:
  6955  0016B2  EF5F  F00B         	goto	l10321
  6956  0016B6                     u11550:
  6957  0016B6  0E02               	movlw	2
  6958  0016B8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6959  0016BA  EF7E  F00B         	goto	l659
  6960  0016BE                     l10321:
  6961  0016BE  0E00               	movlw	0
  6962  0016C0  6E34               	movwf	___flge@ff1^0,c
  6963  0016C2  0E00               	movlw	0
  6964  0016C4  6E35               	movwf	(___flge@ff1+1)^0,c
  6965  0016C6  0EF0               	movlw	240
  6966  0016C8  6E36               	movwf	(___flge@ff1+2)^0,c
  6967  0016CA  0E41               	movlw	65
  6968  0016CC  6E37               	movwf	(___flge@ff1+3)^0,c
  6969  0016CE  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
  6970  0016D2  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
  6971  0016D6  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
  6972  0016DA  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
  6973  0016DE  EC10  F021         	call	___flge	;wreg free
  6974  0016E2  B0D8               	btfsc	status,0,c
  6975  0016E4  EF76  F00B         	goto	u11561
  6976  0016E8  EF78  F00B         	goto	u11560
  6977  0016EC                     u11561:
  6978  0016EC  EF7C  F00B         	goto	l10325
  6979  0016F0                     u11560:
  6980  0016F0  0E03               	movlw	3
  6981  0016F2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6982  0016F4  EF7E  F00B         	goto	l659
  6983  0016F8                     l10325:
  6984                           
  6985                           ;main.c: 1187:                     direccionElegida = 0;
  6986  0016F8  0E00               	movlw	0
  6987  0016FA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6988  0016FC                     l659:
  6989                           
  6990                           ;main.c: 1196:     return direccionElegida;
  6991  0016FC  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  6992  0016FE  0012               	return		;funcret
  6993  001700                     __end_of_decidirDireccion:
  6994                           	opt callstack 0
  6995                           
  6996 ;; *************** function _velocidadBaja *****************
  6997 ;; Defined at:
  6998 ;;		line 1319 in file "main.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;		None
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;		None
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  1    wreg      void 
  7005 ;; Registers used:
  7006 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7012 ;;      Params:         0       0       0       0       0       0       0       0       0
  7013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7015 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7016 ;;Total ram usage:        0 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; Hardware stack levels required when called:    5
  7019 ;; This function calls:
  7020 ;;		_pwmDuty
  7021 ;; This function is called by:
  7022 ;;		_comportamientoBasico
  7023 ;;		_decidirDireccion
  7024 ;;		_probarCruceT
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text27
  7029  005666                     __ptext27:
  7030                           	opt callstack 0
  7031  005666                     _velocidadBaja:
  7032                           	opt callstack 24
  7033  005666                     
  7034                           ;main.c: 1321:     pwmDuty(70, 1);
  7035  005666  0E00               	movlw	0
  7036  005668  0100               	movlb	0	; () banked
  7037  00566A  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7038  00566C  0E46               	movlw	70
  7039  00566E  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7040  005670  0E01               	movlw	1
  7041  005672  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7042  005674  EC56  F019         	call	_pwmDuty	;wreg free
  7043                           
  7044                           ;main.c: 1322:     pwmDuty(70, 2);
  7045  005678  0E00               	movlw	0
  7046  00567A  0100               	movlb	0	; () banked
  7047  00567C  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7048  00567E  0E46               	movlw	70
  7049  005680  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7050  005682  0E02               	movlw	2
  7051  005684  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7052  005686  EC56  F019         	call	_pwmDuty	;wreg free
  7053  00568A  0012               	return		;funcret
  7054  00568C                     __end_of_velocidadBaja:
  7055                           	opt callstack 0
  7056                           
  7057 ;; *************** function _pwmDuty *****************
  7058 ;; Defined at:
  7059 ;;		line 20 in file "./pwm.h"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
  7062 ;;  channel         1   30[BANK0 ] unsigned char 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  duty            4   36[BANK0 ] long 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      void 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7074 ;;      Params:         0       3       0       0       0       0       0       0       0
  7075 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7076 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7077 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7078 ;;Total ram usage:       12 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    4
  7081 ;; This function calls:
  7082 ;;		___fldiv
  7083 ;;		___flmul
  7084 ;;		___fltol
  7085 ;;		___xxtofl
  7086 ;;		_map
  7087 ;; This function is called by:
  7088 ;;		_PID
  7089 ;;		_velocidadEstandar
  7090 ;;		_velocidadBaja
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text28
  7095  0032AC                     __ptext28:
  7096                           	opt callstack 0
  7097  0032AC                     _pwmDuty:
  7098                           	opt callstack 24
  7099  0032AC                     
  7100                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  7101  0032AC  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
  7102  0032B0  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  7103  0032B4  6A22               	clrf	(map@x+2)^0,c
  7104  0032B6  6A23               	clrf	(map@x+3)^0,c
  7105  0032B8  0E00               	movlw	0
  7106  0032BA  6E24               	movwf	map@in_min^0,c
  7107  0032BC  0E00               	movlw	0
  7108  0032BE  6E25               	movwf	(map@in_min+1)^0,c
  7109  0032C0  0E00               	movlw	0
  7110  0032C2  6E26               	movwf	(map@in_min+2)^0,c
  7111  0032C4  0E00               	movlw	0
  7112  0032C6  6E27               	movwf	(map@in_min+3)^0,c
  7113  0032C8  0E64               	movlw	100
  7114  0032CA  6E28               	movwf	map@in_max^0,c
  7115  0032CC  0E00               	movlw	0
  7116  0032CE  6E29               	movwf	(map@in_max+1)^0,c
  7117  0032D0  0E00               	movlw	0
  7118  0032D2  6E2A               	movwf	(map@in_max+2)^0,c
  7119  0032D4  0E00               	movlw	0
  7120  0032D6  6E2B               	movwf	(map@in_max+3)^0,c
  7121  0032D8  0E00               	movlw	0
  7122  0032DA  6E2C               	movwf	map@out_min^0,c
  7123  0032DC  0E00               	movlw	0
  7124  0032DE  6E2D               	movwf	(map@out_min+1)^0,c
  7125  0032E0  0E00               	movlw	0
  7126  0032E2  6E2E               	movwf	(map@out_min+2)^0,c
  7127  0032E4  0E00               	movlw	0
  7128  0032E6  6E2F               	movwf	(map@out_min+3)^0,c
  7129  0032E8  0EFF               	movlw	255
  7130  0032EA  6E30               	movwf	map@out_max^0,c
  7131  0032EC  0E03               	movlw	3
  7132  0032EE  6E31               	movwf	(map@out_max+1)^0,c
  7133  0032F0  0E00               	movlw	0
  7134  0032F2  6E32               	movwf	(map@out_max+2)^0,c
  7135  0032F4  0E00               	movlw	0
  7136  0032F6  6E33               	movwf	(map@out_max+3)^0,c
  7137  0032F8  EC79  F026         	call	_map	;wreg free
  7138  0032FC  C020  F084         	movff	?_map,pwmDuty@duty
  7139  003300  C021  F085         	movff	?_map+1,pwmDuty@duty+1
  7140  003304  C022  F086         	movff	?_map+2,pwmDuty@duty+2
  7141  003308  C023  F087         	movff	?_map+3,pwmDuty@duty+3
  7142  00330C                     
  7143                           ;./pwm.h: 24:     if (duty < 1024) {
  7144  00330C  0100               	movlb	0	; () banked
  7145  00330E  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  7146  003310  EF96  F019         	goto	u9830
  7147  003314  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
  7148  003316  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  7149  003318  E107               	bnz	u9831
  7150  00331A  0E04               	movlw	4
  7151  00331C  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  7152  00331E  B0D8               	btfsc	status,0,c
  7153  003320  EF94  F019         	goto	u9831
  7154  003324  EF96  F019         	goto	u9830
  7155  003328                     u9831:
  7156  003328  EF33  F01A         	goto	l155
  7157  00332C                     u9830:
  7158  00332C                     
  7159                           ; BSR set to: 0
  7160                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  7161  00332C  0E00               	movlw	0
  7162  00332E  6E1F               	movwf	___flmul@a^0,c
  7163  003330  0E00               	movlw	0
  7164  003332  6E20               	movwf	(___flmul@a+1)^0,c
  7165  003334  0EFA               	movlw	250
  7166  003336  6E21               	movwf	(___flmul@a+2)^0,c
  7167  003338  0E43               	movlw	67
  7168  00333A  6E22               	movwf	(___flmul@a+3)^0,c
  7169  00333C  0E00               	movlw	0
  7170  00333E  6E48               	movwf	___fldiv@a^0,c
  7171  003340  0EC0               	movlw	192
  7172  003342  6E49               	movwf	(___fldiv@a+1)^0,c
  7173  003344  0E7F               	movlw	127
  7174  003346  6E4A               	movwf	(___fldiv@a+2)^0,c
  7175  003348  0E44               	movlw	68
  7176  00334A  6E4B               	movwf	(___fldiv@a+3)^0,c
  7177  00334C  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
  7178  003350  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  7179  003354  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  7180  003358  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  7181  00335C  0E01               	movlw	1
  7182  00335E  EC34  F01A         	call	___xxtofl
  7183  003362  C00D  F044         	movff	?___xxtofl,___fldiv@b
  7184  003366  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
  7185  00336A  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
  7186  00336E  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
  7187  003372  ECE5  F013         	call	___fldiv	;wreg free
  7188  003376  C044  F01B         	movff	?___fldiv,___flmul@b
  7189  00337A  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
  7190  00337E  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
  7191  003382  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
  7192  003386  ECF7  F00F         	call	___flmul	;wreg free
  7193  00338A  C01B  F072         	movff	?___flmul,___fltol@f1
  7194  00338E  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
  7195  003392  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
  7196  003396  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
  7197  00339A  EC09  F020         	call	___fltol	;wreg free
  7198  00339E  C072  F084         	movff	?___fltol,pwmDuty@duty
  7199  0033A2  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
  7200  0033A6  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
  7201  0033AA  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
  7202                           
  7203                           ;./pwm.h: 28:         switch (channel) {
  7204  0033AE  EF1D  F01A         	goto	l9051
  7205  0033B2                     l9045:
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  7209  0033B2  0E02               	movlw	2
  7210  0033B4  6F7F               	movwf	??_pwmDuty& (0+255),b
  7211  0033B6  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7212  0033BA  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7213  0033BE  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7214  0033C2  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7215  0033C6                     u9845:
  7216  0033C6  677F               	tstfsz	??_pwmDuty& (0+255),b
  7217  0033C8  EFE8  F019         	goto	u9846
  7218  0033CC  EFF0  F019         	goto	u9847
  7219  0033D0                     u9846:
  7220  0033D0  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7221  0033D2  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7222  0033D4  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7223  0033D6  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7224  0033D8  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7225  0033DA  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7226  0033DC  EFE3  F019         	goto	u9845
  7227  0033E0                     u9847:
  7228  0033E0  0100               	movlb	0	; () banked
  7229  0033E2  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7230  0033E4  6EBE               	movwf	190,c	;volatile
  7231                           
  7232                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  7233  0033E6  0ECF               	movlw	207
  7234  0033E8  16BD               	andwf	189,f,c	;volatile
  7235                           
  7236                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  7237  0033EA  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7238  0033EC  0BF0               	andlw	240
  7239  0033EE  0B30               	andlw	48
  7240  0033F0  12BD               	iorwf	189,f,c	;volatile
  7241                           
  7242                           ;./pwm.h: 34:                 break;
  7243  0033F2  EF33  F01A         	goto	l155
  7244  0033F6                     l9047:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  7248  0033F6  0E02               	movlw	2
  7249  0033F8  6F7F               	movwf	??_pwmDuty& (0+255),b
  7250  0033FA  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7251  0033FE  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7252  003402  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7253  003406  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7254  00340A                     u9855:
  7255  00340A  677F               	tstfsz	??_pwmDuty& (0+255),b
  7256  00340C  EF0A  F01A         	goto	u9856
  7257  003410  EF12  F01A         	goto	u9857
  7258  003414                     u9856:
  7259  003414  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7260  003416  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7261  003418  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7262  00341A  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7263  00341C  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7264  00341E  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7265  003420  EF05  F01A         	goto	u9855
  7266  003424                     u9857:
  7267  003424  0100               	movlb	0	; () banked
  7268  003426  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7269  003428  6EBB               	movwf	187,c	;volatile
  7270                           
  7271                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  7272  00342A  0ECF               	movlw	207
  7273  00342C  16BA               	andwf	186,f,c	;volatile
  7274                           
  7275                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  7276  00342E  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7277  003430  0BF0               	andlw	240
  7278  003432  0B30               	andlw	48
  7279  003434  12BA               	iorwf	186,f,c	;volatile
  7280                           
  7281                           ;./pwm.h: 40:                 break;
  7282  003436  EF33  F01A         	goto	l155
  7283  00343A                     l9051:
  7284  00343A  0100               	movlb	0	; () banked
  7285  00343C  517E               	movf	pwmDuty@channel& (0+255),w,b
  7286  00343E  6F7F               	movwf	??_pwmDuty& (0+255),b
  7287  003440  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
  7288                           
  7289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7290                           ; Switch size 1, requested type "simple"
  7291                           ; Number of cases is 1, Range of values is 0 to 0
  7292                           ; switch strategies available:
  7293                           ; Name         Instructions Cycles
  7294                           ; simple_byte            4     3 (average)
  7295                           ;	Chosen strategy is simple_byte
  7296  003442  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7297  003444  0A00               	xorlw	0	; case 0
  7298  003446  B4D8               	btfsc	status,2,c
  7299  003448  EF28  F01A         	goto	l11185
  7300  00344C  EF33  F01A         	goto	l155
  7301  003450                     l11185:
  7302                           
  7303                           ; BSR set to: 0
  7304                           ; Switch size 1, requested type "simple"
  7305                           ; Number of cases is 2, Range of values is 1 to 2
  7306                           ; switch strategies available:
  7307                           ; Name         Instructions Cycles
  7308                           ; simple_byte            7     4 (average)
  7309                           ;	Chosen strategy is simple_byte
  7310  003450  517F               	movf	??_pwmDuty& (0+255),w,b
  7311  003452  0A01               	xorlw	1	; case 1
  7312  003454  B4D8               	btfsc	status,2,c
  7313  003456  EFD9  F019         	goto	l9045
  7314  00345A  0A03               	xorlw	3	; case 2
  7315  00345C  B4D8               	btfsc	status,2,c
  7316  00345E  EFFB  F019         	goto	l9047
  7317  003462  EF33  F01A         	goto	l155
  7318  003466                     l155:
  7319                           
  7320                           ; BSR set to: 0
  7321  003466  0012               	return		;funcret
  7322  003468                     __end_of_pwmDuty:
  7323                           	opt callstack 0
  7324                           
  7325 ;; *************** function _map *****************
  7326 ;; Defined at:
  7327 ;;		line 16 in file "./pwm.h"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  x               4   31[COMRAM] long 
  7330 ;;  in_min          4   35[COMRAM] long 
  7331 ;;  in_max          4   39[COMRAM] long 
  7332 ;;  out_min         4   43[COMRAM] long 
  7333 ;;  out_max         4   47[COMRAM] long 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  4   31[COMRAM] long 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0, cstack
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7345 ;;      Params:        20       0       0       0       0       0       0       0       0
  7346 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7348 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7349 ;;Total ram usage:       20 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    3
  7352 ;; This function calls:
  7353 ;;		___aldiv
  7354 ;;		___lmul
  7355 ;; This function is called by:
  7356 ;;		_pwmDuty
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           	psect	text29
  7361  004CF2                     __ptext29:
  7362                           	opt callstack 0
  7363  004CF2                     _map:
  7364                           	opt callstack 24
  7365  004CF2                     
  7366                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  7367  004CF2  5024               	movf	map@in_min^0,w,c
  7368  004CF4  5C20               	subwf	map@x^0,w,c
  7369  004CF6  6E06               	movwf	___lmul@multiplier^0,c
  7370  004CF8  5025               	movf	(map@in_min+1)^0,w,c
  7371  004CFA  5821               	subwfb	(map@x+1)^0,w,c
  7372  004CFC  6E07               	movwf	(___lmul@multiplier+1)^0,c
  7373  004CFE  5026               	movf	(map@in_min+2)^0,w,c
  7374  004D00  5822               	subwfb	(map@x+2)^0,w,c
  7375  004D02  6E08               	movwf	(___lmul@multiplier+2)^0,c
  7376  004D04  5027               	movf	(map@in_min+3)^0,w,c
  7377  004D06  5823               	subwfb	(map@x+3)^0,w,c
  7378  004D08  6E09               	movwf	(___lmul@multiplier+3)^0,c
  7379  004D0A  502C               	movf	map@out_min^0,w,c
  7380  004D0C  5C30               	subwf	map@out_max^0,w,c
  7381  004D0E  6E0A               	movwf	___lmul@multiplicand^0,c
  7382  004D10  502D               	movf	(map@out_min+1)^0,w,c
  7383  004D12  5831               	subwfb	(map@out_max+1)^0,w,c
  7384  004D14  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  7385  004D16  502E               	movf	(map@out_min+2)^0,w,c
  7386  004D18  5832               	subwfb	(map@out_max+2)^0,w,c
  7387  004D1A  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  7388  004D1C  502F               	movf	(map@out_min+3)^0,w,c
  7389  004D1E  5833               	subwfb	(map@out_max+3)^0,w,c
  7390  004D20  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  7391  004D22  EC28  F027         	call	___lmul	;wreg free
  7392  004D26  C006  F012         	movff	?___lmul,___aldiv@dividend
  7393  004D2A  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  7394  004D2E  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  7395  004D32  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  7396  004D36  5024               	movf	map@in_min^0,w,c
  7397  004D38  5C28               	subwf	map@in_max^0,w,c
  7398  004D3A  6E16               	movwf	___aldiv@divisor^0,c
  7399  004D3C  5025               	movf	(map@in_min+1)^0,w,c
  7400  004D3E  5829               	subwfb	(map@in_max+1)^0,w,c
  7401  004D40  6E17               	movwf	(___aldiv@divisor+1)^0,c
  7402  004D42  5026               	movf	(map@in_min+2)^0,w,c
  7403  004D44  582A               	subwfb	(map@in_max+2)^0,w,c
  7404  004D46  6E18               	movwf	(___aldiv@divisor+2)^0,c
  7405  004D48  5027               	movf	(map@in_min+3)^0,w,c
  7406  004D4A  582B               	subwfb	(map@in_max+3)^0,w,c
  7407  004D4C  6E19               	movwf	(___aldiv@divisor+3)^0,c
  7408  004D4E  EC83  F01F         	call	___aldiv	;wreg free
  7409  004D52  502C               	movf	map@out_min^0,w,c
  7410  004D54  2412               	addwf	?___aldiv^0,w,c
  7411  004D56  6E20               	movwf	?_map^0,c
  7412  004D58  502D               	movf	(map@out_min+1)^0,w,c
  7413  004D5A  2013               	addwfc	(?___aldiv+1)^0,w,c
  7414  004D5C  6E21               	movwf	(?_map+1)^0,c
  7415  004D5E  502E               	movf	(map@out_min+2)^0,w,c
  7416  004D60  2014               	addwfc	(?___aldiv+2)^0,w,c
  7417  004D62  6E22               	movwf	(?_map+2)^0,c
  7418  004D64  502F               	movf	(map@out_min+3)^0,w,c
  7419  004D66  2015               	addwfc	(?___aldiv+3)^0,w,c
  7420  004D68  6E23               	movwf	(?_map+3)^0,c
  7421  004D6A  0012               	return		;funcret
  7422  004D6C                     __end_of_map:
  7423                           	opt callstack 0
  7424                           
  7425 ;; *************** function ___lmul *****************
  7426 ;; Defined at:
  7427 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  multiplier      4    5[COMRAM] unsigned long 
  7430 ;;  multiplicand    4    9[COMRAM] unsigned long 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  product         4   13[COMRAM] unsigned long 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  4    5[COMRAM] unsigned long 
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7442 ;;      Params:         8       0       0       0       0       0       0       0       0
  7443 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7445 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7446 ;;Total ram usage:       12 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; Hardware stack levels required when called:    2
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_map
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text30
  7457  004E50                     __ptext30:
  7458                           	opt callstack 0
  7459  004E50                     ___lmul:
  7460                           	opt callstack 24
  7461  004E50  0E00               	movlw	0
  7462  004E52  6E0E               	movwf	___lmul@product^0,c
  7463  004E54  0E00               	movlw	0
  7464  004E56  6E0F               	movwf	(___lmul@product+1)^0,c
  7465  004E58  0E00               	movlw	0
  7466  004E5A  6E10               	movwf	(___lmul@product+2)^0,c
  7467  004E5C  0E00               	movlw	0
  7468  004E5E  6E11               	movwf	(___lmul@product+3)^0,c
  7469  004E60                     l8099:
  7470  004E60  A006               	btfss	___lmul@multiplier^0,0,c
  7471  004E62  EF35  F027         	goto	u8121
  7472  004E66  EF37  F027         	goto	u8120
  7473  004E6A                     u8121:
  7474  004E6A  EF3F  F027         	goto	l8103
  7475  004E6E                     u8120:
  7476  004E6E  500A               	movf	___lmul@multiplicand^0,w,c
  7477  004E70  260E               	addwf	___lmul@product^0,f,c
  7478  004E72  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  7479  004E74  220F               	addwfc	(___lmul@product+1)^0,f,c
  7480  004E76  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  7481  004E78  2210               	addwfc	(___lmul@product+2)^0,f,c
  7482  004E7A  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  7483  004E7C  2211               	addwfc	(___lmul@product+3)^0,f,c
  7484  004E7E                     l8103:
  7485  004E7E  90D8               	bcf	status,0,c
  7486  004E80  360A               	rlcf	___lmul@multiplicand^0,f,c
  7487  004E82  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7488  004E84  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7489  004E86  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7490  004E88  90D8               	bcf	status,0,c
  7491  004E8A  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  7492  004E8C  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  7493  004E8E  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  7494  004E90  3206               	rrcf	___lmul@multiplier^0,f,c
  7495  004E92  5006               	movf	___lmul@multiplier^0,w,c
  7496  004E94  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  7497  004E96  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  7498  004E98  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  7499  004E9A  A4D8               	btfss	status,2,c
  7500  004E9C  EF52  F027         	goto	u8131
  7501  004EA0  EF54  F027         	goto	u8130
  7502  004EA4                     u8131:
  7503  004EA4  EF30  F027         	goto	l8099
  7504  004EA8                     u8130:
  7505  004EA8  C00E  F006         	movff	___lmul@product,?___lmul
  7506  004EAC  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  7507  004EB0  C010  F008         	movff	___lmul@product+2,?___lmul+2
  7508  004EB4  C011  F009         	movff	___lmul@product+3,?___lmul+3
  7509  004EB8  0012               	return		;funcret
  7510  004EBA                     __end_of___lmul:
  7511                           	opt callstack 0
  7512                           
  7513 ;; *************** function ___xxtofl *****************
  7514 ;; Defined at:
  7515 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  sign            1    wreg     unsigned char 
  7518 ;;  val             4   12[COMRAM] long 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  sign            1   20[COMRAM] unsigned char 
  7521 ;;  arg             4   22[COMRAM] unsigned long 
  7522 ;;  exp             1   21[COMRAM] unsigned char 
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  4   12[COMRAM] unsigned char 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2, status,0
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7532 ;;      Params:         4       0       0       0       0       0       0       0       0
  7533 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7534 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7535 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7536 ;;Total ram usage:       14 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    2
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_pwmDuty
  7543 ;;		_dameDistancia
  7544 ;;		_PID
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text31
  7549  003468                     __ptext31:
  7550                           	opt callstack 0
  7551  003468                     ___xxtofl:
  7552                           	opt callstack 25
  7553                           
  7554                           ;incstack = 0
  7555                           ;___xxtofl@sign stored from wreg
  7556  003468  6E15               	movwf	___xxtofl@sign^0,c
  7557  00346A  5015               	movf	___xxtofl@sign^0,w,c
  7558  00346C  B4D8               	btfsc	status,2,c
  7559  00346E  EF3B  F01A         	goto	u9711
  7560  003472  EF3D  F01A         	goto	u9710
  7561  003476                     u9711:
  7562  003476  EF5F  F01A         	goto	l1616
  7563  00347A                     u9710:
  7564  00347A  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7565  00347C  EF44  F01A         	goto	u9720
  7566  003480  EF42  F01A         	goto	u9721
  7567  003484                     u9721:
  7568  003484  EF5F  F01A         	goto	l1616
  7569  003488                     u9720:
  7570  003488  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  7571  00348C  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  7572  003490  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  7573  003494  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  7574  003498  1E11               	comf	??___xxtofl^0,f,c
  7575  00349A  1E12               	comf	(??___xxtofl+1)^0,f,c
  7576  00349C  1E13               	comf	(??___xxtofl+2)^0,f,c
  7577  00349E  1E14               	comf	(??___xxtofl+3)^0,f,c
  7578  0034A0  2A11               	incf	??___xxtofl^0,f,c
  7579  0034A2  0E00               	movlw	0
  7580  0034A4  2212               	addwfc	(??___xxtofl+1)^0,f,c
  7581  0034A6  2213               	addwfc	(??___xxtofl+2)^0,f,c
  7582  0034A8  2214               	addwfc	(??___xxtofl+3)^0,f,c
  7583  0034AA  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  7584  0034AE  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  7585  0034B2  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  7586  0034B6  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  7587  0034BA  EF67  F01A         	goto	l8987
  7588  0034BE                     l1616:
  7589  0034BE  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  7590  0034C2  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7591  0034C6  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7592  0034CA  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7593  0034CE                     l8987:
  7594  0034CE  500D               	movf	___xxtofl@val^0,w,c
  7595  0034D0  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  7596  0034D2  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  7597  0034D4  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  7598  0034D6  A4D8               	btfss	status,2,c
  7599  0034D8  EF70  F01A         	goto	u9731
  7600  0034DC  EF72  F01A         	goto	u9730
  7601  0034E0                     u9731:
  7602  0034E0  EF7C  F01A         	goto	l8993
  7603  0034E4                     u9730:
  7604  0034E4  0E00               	movlw	0
  7605  0034E6  6E0D               	movwf	?___xxtofl^0,c
  7606  0034E8  0E00               	movlw	0
  7607  0034EA  6E0E               	movwf	(?___xxtofl+1)^0,c
  7608  0034EC  0E00               	movlw	0
  7609  0034EE  6E0F               	movwf	(?___xxtofl+2)^0,c
  7610  0034F0  0E00               	movlw	0
  7611  0034F2  6E10               	movwf	(?___xxtofl+3)^0,c
  7612  0034F4  EF0D  F01B         	goto	l1619
  7613  0034F8                     l8993:
  7614  0034F8  0E96               	movlw	150
  7615  0034FA  6E16               	movwf	___xxtofl@exp^0,c
  7616  0034FC  EF86  F01A         	goto	l8997
  7617  003500                     l8995:
  7618  003500  2A16               	incf	___xxtofl@exp^0,f,c
  7619  003502  90D8               	bcf	status,0,c
  7620  003504  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7621  003506  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7622  003508  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7623  00350A  3217               	rrcf	___xxtofl@arg^0,f,c
  7624  00350C                     l8997:
  7625  00350C  0E00               	movlw	0
  7626  00350E  1417               	andwf	___xxtofl@arg^0,w,c
  7627  003510  6E11               	movwf	??___xxtofl^0,c
  7628  003512  0E00               	movlw	0
  7629  003514  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7630  003516  6E12               	movwf	(??___xxtofl+1)^0,c
  7631  003518  0E00               	movlw	0
  7632  00351A  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7633  00351C  6E13               	movwf	(??___xxtofl+2)^0,c
  7634  00351E  0EFE               	movlw	254
  7635  003520  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7636  003522  6E14               	movwf	(??___xxtofl+3)^0,c
  7637  003524  5011               	movf	??___xxtofl^0,w,c
  7638  003526  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7639  003528  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7640  00352A  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7641  00352C  A4D8               	btfss	status,2,c
  7642  00352E  EF9B  F01A         	goto	u9741
  7643  003532  EF9D  F01A         	goto	u9740
  7644  003536                     u9741:
  7645  003536  EF80  F01A         	goto	l8995
  7646  00353A                     u9740:
  7647  00353A  EFAB  F01A         	goto	l1623
  7648  00353E                     l8999:
  7649  00353E  2A16               	incf	___xxtofl@exp^0,f,c
  7650  003540  0E01               	movlw	1
  7651  003542  2617               	addwf	___xxtofl@arg^0,f,c
  7652  003544  0E00               	movlw	0
  7653  003546  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7654  003548  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7655  00354A  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7656  00354C  90D8               	bcf	status,0,c
  7657  00354E  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7658  003550  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7659  003552  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7660  003554  3217               	rrcf	___xxtofl@arg^0,f,c
  7661  003556                     l1623:
  7662  003556  0E00               	movlw	0
  7663  003558  1417               	andwf	___xxtofl@arg^0,w,c
  7664  00355A  6E11               	movwf	??___xxtofl^0,c
  7665  00355C  0E00               	movlw	0
  7666  00355E  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7667  003560  6E12               	movwf	(??___xxtofl+1)^0,c
  7668  003562  0E00               	movlw	0
  7669  003564  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7670  003566  6E13               	movwf	(??___xxtofl+2)^0,c
  7671  003568  0EFF               	movlw	255
  7672  00356A  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7673  00356C  6E14               	movwf	(??___xxtofl+3)^0,c
  7674  00356E  5011               	movf	??___xxtofl^0,w,c
  7675  003570  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7676  003572  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7677  003574  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7678  003576  A4D8               	btfss	status,2,c
  7679  003578  EFC0  F01A         	goto	u9751
  7680  00357C  EFC2  F01A         	goto	u9750
  7681  003580                     u9751:
  7682  003580  EF9F  F01A         	goto	l8999
  7683  003584                     u9750:
  7684  003584  EFCA  F01A         	goto	l9007
  7685  003588                     l9005:
  7686  003588  0616               	decf	___xxtofl@exp^0,f,c
  7687  00358A  90D8               	bcf	status,0,c
  7688  00358C  3617               	rlcf	___xxtofl@arg^0,f,c
  7689  00358E  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  7690  003590  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  7691  003592  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  7692  003594                     l9007:
  7693  003594  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  7694  003596  EFCF  F01A         	goto	u9761
  7695  00359A  EFD1  F01A         	goto	u9760
  7696  00359E                     u9761:
  7697  00359E  EFD9  F01A         	goto	l1630
  7698  0035A2                     u9760:
  7699  0035A2  0E02               	movlw	2
  7700  0035A4  6016               	cpfslt	___xxtofl@exp^0,c
  7701  0035A6  EFD7  F01A         	goto	u9771
  7702  0035AA  EFD9  F01A         	goto	u9770
  7703  0035AE                     u9771:
  7704  0035AE  EFC4  F01A         	goto	l9005
  7705  0035B2                     u9770:
  7706  0035B2                     l1630:
  7707  0035B2  B016               	btfsc	___xxtofl@exp^0,0,c
  7708  0035B4  EFDE  F01A         	goto	u9781
  7709  0035B8  EFE0  F01A         	goto	u9780
  7710  0035BC                     u9781:
  7711  0035BC  EFE1  F01A         	goto	l9013
  7712  0035C0                     u9780:
  7713  0035C0  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  7714  0035C2                     l9013:
  7715  0035C2  90D8               	bcf	status,0,c
  7716  0035C4  3216               	rrcf	___xxtofl@exp^0,f,c
  7717  0035C6  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  7718  0035CA  6A12               	clrf	(??___xxtofl+1)^0,c
  7719  0035CC  6A13               	clrf	(??___xxtofl+2)^0,c
  7720  0035CE  6A14               	clrf	(??___xxtofl+3)^0,c
  7721  0035D0  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  7722  0035D4  6A13               	clrf	(??___xxtofl+2)^0,c
  7723  0035D6  6A12               	clrf	(??___xxtofl+1)^0,c
  7724  0035D8  6A11               	clrf	??___xxtofl^0,c
  7725  0035DA  5011               	movf	??___xxtofl^0,w,c
  7726  0035DC  1217               	iorwf	___xxtofl@arg^0,f,c
  7727  0035DE  5012               	movf	(??___xxtofl+1)^0,w,c
  7728  0035E0  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  7729  0035E2  5013               	movf	(??___xxtofl+2)^0,w,c
  7730  0035E4  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  7731  0035E6  5014               	movf	(??___xxtofl+3)^0,w,c
  7732  0035E8  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  7733  0035EA  5015               	movf	___xxtofl@sign^0,w,c
  7734  0035EC  B4D8               	btfsc	status,2,c
  7735  0035EE  EFFB  F01A         	goto	u9791
  7736  0035F2  EFFD  F01A         	goto	u9790
  7737  0035F6                     u9791:
  7738  0035F6  EF05  F01B         	goto	l9023
  7739  0035FA                     u9790:
  7740  0035FA  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7741  0035FC  EF04  F01B         	goto	u9800
  7742  003600  EF02  F01B         	goto	u9801
  7743  003604                     u9801:
  7744  003604  EF05  F01B         	goto	l9023
  7745  003608                     u9800:
  7746  003608  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  7747  00360A                     l9023:
  7748  00360A  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  7749  00360E  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  7750  003612  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  7751  003616  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  7752  00361A                     l1619:
  7753  00361A  0012               	return		;funcret
  7754  00361C                     __end_of___xxtofl:
  7755                           	opt callstack 0
  7756                           
  7757 ;; *************** function _sprintf *****************
  7758 ;; Defined at:
  7759 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  s               2  135[BANK0 ] PTR unsigned char 
  7762 ;;		 -> buffer(50), 
  7763 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  7764 ;;		 -> STR_20(34), STR_11(32), STR_6(17), STR_5(19), 
  7765 ;;		 -> STR_4(18), STR_3(34), 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  f               6  149[BANK0 ] struct _IO_FILE
  7768 ;;  ap              2  147[BANK0 ] PTR void [1]
  7769 ;;		 -> ?_sprintf(2), 
  7770 ;;  ret             2    0        int 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  2  135[BANK0 ] int 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7780 ;;      Params:         0      10       0       0       0       0       0       0       0
  7781 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7783 ;;      Totals:         0      20       0       0       0       0       0       0       0
  7784 ;;Total ram usage:       20 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:    9
  7787 ;; This function calls:
  7788 ;;		_vfprintf
  7789 ;; This function is called by:
  7790 ;;		_visualizarPasosRealizados
  7791 ;;		_decidirDireccion
  7792 ;;		_probarSensores
  7793 ;;		_probarUltrasonico
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text32
  7798  00520E                     __ptext32:
  7799                           	opt callstack 0
  7800  00520E                     _sprintf:
  7801                           	opt callstack 20
  7802  00520E  0EEB               	movlw	low (?_sprintf+4)
  7803  005210  0100               	movlb	0	; () banked
  7804  005212  6FF3               	movwf	sprintf@ap& (0+255),b
  7805  005214  0E00               	movlw	high (?_sprintf+4)
  7806  005216  6FF4               	movwf	(sprintf@ap+1)& (0+255),b
  7807  005218  C0E7  F0F5         	movff	sprintf@s,sprintf@f
  7808  00521C  C0E8  F0F6         	movff	sprintf@s+1,sprintf@f+1
  7809  005220                     
  7810                           ; BSR set to: 0
  7811  005220  0E00               	movlw	0
  7812  005222  6FF8               	movwf	(sprintf@f+3)& (0+255),b
  7813  005224  0E00               	movlw	0
  7814  005226  6FF7               	movwf	(sprintf@f+2)& (0+255),b
  7815  005228                     
  7816                           ; BSR set to: 0
  7817  005228  0E00               	movlw	0
  7818  00522A  6FFA               	movwf	(sprintf@f+5)& (0+255),b
  7819  00522C  0E00               	movlw	0
  7820  00522E  6FF9               	movwf	(sprintf@f+4)& (0+255),b
  7821  005230                     
  7822                           ; BSR set to: 0
  7823  005230  0EF5               	movlw	low sprintf@f
  7824  005232  6FDF               	movwf	vfprintf@fp& (0+255),b
  7825  005234  0E00               	movlw	high sprintf@f
  7826  005236  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  7827  005238  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  7828  00523C  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7829  005240  0EF3               	movlw	low sprintf@ap
  7830  005242  6FE3               	movwf	vfprintf@ap& (0+255),b
  7831  005244  0E00               	movlw	high sprintf@ap
  7832  005246  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  7833  005248  EC5D  F027         	call	_vfprintf	;wreg free
  7834  00524C  0100               	movlb	0	; () banked
  7835  00524E  51F7               	movf	(sprintf@f+2)& (0+255),w,b
  7836  005250  25E7               	addwf	sprintf@s& (0+255),w,b
  7837  005252  6ED9               	movwf	fsr2l,c
  7838  005254  51F8               	movf	(sprintf@f+3)& (0+255),w,b
  7839  005256  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  7840  005258  6EDA               	movwf	fsr2h,c
  7841  00525A  0E00               	movlw	0
  7842  00525C  6EDF               	movwf	indf2,c
  7843  00525E                     
  7844                           ; BSR set to: 0
  7845  00525E  0012               	return		;funcret
  7846  005260                     __end_of_sprintf:
  7847                           	opt callstack 0
  7848                           
  7849 ;; *************** function _vfprintf *****************
  7850 ;; Defined at:
  7851 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  7854 ;;		 -> sprintf@f(6), 
  7855 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  7856 ;;		 -> STR_20(34), STR_11(32), STR_6(17), STR_5(19), 
  7857 ;;		 -> STR_4(18), STR_3(34), 
  7858 ;;  ap              2  131[BANK0 ] PTR PTR void 
  7859 ;;		 -> sprintf@ap(2), 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  7862 ;;		 -> STR_20(34), STR_11(32), STR_6(17), STR_5(19), 
  7863 ;;		 -> STR_4(18), STR_3(34), 
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  2  127[BANK0 ] int 
  7866 ;; Registers used:
  7867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7873 ;;      Params:         0       6       0       0       0       0       0       0       0
  7874 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7876 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7877 ;;Total ram usage:        8 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:    8
  7880 ;; This function calls:
  7881 ;;		_vfpfcnvrt
  7882 ;; This function is called by:
  7883 ;;		_sprintf
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text33
  7888  004EBA                     __ptext33:
  7889                           	opt callstack 0
  7890  004EBA                     _vfprintf:
  7891                           	opt callstack 20
  7892  004EBA                     
  7893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7894  004EBA  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  7895  004EBE  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7896  004EC2                     
  7897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7898  004EC2  0E00               	movlw	0
  7899  004EC4  0101               	movlb	1	; () banked
  7900  004EC6  6F31               	movwf	(_nout+1)& (0+255),b
  7901  004EC8  0E00               	movlw	0
  7902  004ECA  6F30               	movwf	_nout& (0+255),b
  7903                           
  7904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7905  004ECC  EF7F  F027         	goto	l9711
  7906  004ED0                     l9709:
  7907                           
  7908                           ; BSR set to: 1
  7909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7910  004ED0  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  7911  004ED4  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7912  004ED8  0EE5               	movlw	low vfprintf@cfmt
  7913  004EDA  0100               	movlb	0	; () banked
  7914  004EDC  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  7915  004EDE  0E00               	movlw	high vfprintf@cfmt
  7916  004EE0  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7917  004EE2  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  7918  004EE6  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7919  004EEA  ECE6  F005         	call	_vfpfcnvrt	;wreg free
  7920  004EEE  0100               	movlb	0	; () banked
  7921  004EF0  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  7922  004EF2  0101               	movlb	1	; () banked
  7923  004EF4  2730               	addwf	_nout& (0+255),f,b
  7924  004EF6  0100               	movlb	0	; () banked
  7925  004EF8  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7926  004EFA  0101               	movlb	1	; () banked
  7927  004EFC  2331               	addwfc	(_nout+1)& (0+255),f,b
  7928  004EFE                     l9711:
  7929                           
  7930                           ; BSR set to: 1
  7931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7932  004EFE  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  7933  004F02  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7934  004F06                     	if	0	;tblptru may be non-zero
  7935  004F06                     	endif
  7936  004F06                     	if	0	;tblptru may be non-zero
  7937  004F06                     	endif
  7938  004F06  0008               	tblrd		*
  7939  004F08  50F5               	movf	tablat,w,c
  7940  004F0A  0900               	iorlw	0
  7941  004F0C  A4D8               	btfss	status,2,c
  7942  004F0E  EF8B  F027         	goto	u10971
  7943  004F12  EF8D  F027         	goto	u10970
  7944  004F16                     u10971:
  7945  004F16  EF68  F027         	goto	l9709
  7946  004F1A                     u10970:
  7947  004F1A                     
  7948                           ; BSR set to: 1
  7949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7950  004F1A  C130  F0DF         	movff	_nout,?_vfprintf
  7951  004F1E  C131  F0E0         	movff	_nout+1,?_vfprintf+1
  7952  004F22                     
  7953                           ; BSR set to: 1
  7954  004F22  0012               	return		;funcret
  7955  004F24                     __end_of_vfprintf:
  7956                           	opt callstack 0
  7957                           
  7958 ;; *************** function _vfpfcnvrt *****************
  7959 ;; Defined at:
  7960 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  7963 ;;		 -> sprintf@f(6), 
  7964 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  7965 ;;		 -> vfprintf@cfmt(2), 
  7966 ;;  ap              2  101[BANK0 ] PTR PTR void 
  7967 ;;		 -> sprintf@ap(2), 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;  ll              8  107[BANK0 ] long long 
  7970 ;;  llu             8    0        unsigned long long 
  7971 ;;  f               4  119[BANK0 ] unsigned long long 
  7972 ;;  ct              3  123[BANK0 ] unsigned char [3]
  7973 ;;  vp              3    0        PTR void 
  7974 ;;  cp              3    0        PTR unsigned char 
  7975 ;;  i               2    0        int 
  7976 ;;  done            2    0        int 
  7977 ;;  c               1  126[BANK0 ] unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  2   97[BANK0 ] int 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7987 ;;      Params:         0       6       0       0       0       0       0       0       0
  7988 ;;      Locals:         0      20       0       0       0       0       0       0       0
  7989 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7990 ;;      Totals:         0      30       0       0       0       0       0       0       0
  7991 ;;Total ram usage:       30 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:    7
  7994 ;; This function calls:
  7995 ;;		_atoi
  7996 ;;		_ctoa
  7997 ;;		_dtoa
  7998 ;;		_efgtoa
  7999 ;;		_fputc
  8000 ;;		_isdigit
  8001 ;;		_isupper
  8002 ;;		_strncmp
  8003 ;;		_tolower
  8004 ;; This function is called by:
  8005 ;;		_vfprintf
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text34
  8010  000BCC                     __ptext34:
  8011                           	opt callstack 0
  8012  000BCC                     _vfpfcnvrt:
  8013                           	opt callstack 20
  8014  000BCC                     
  8015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8016  000BCC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8017  000BD0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8018  000BD4  CFDE FFF6          	movff	postinc2,tblptrl
  8019  000BD8  CFDD FFF7          	movff	postdec2,tblptrh
  8020  000BDC                     	if	0	;tblptru may be non-zero
  8021  000BDC                     	endif
  8022  000BDC                     	if	0	;tblptru may be non-zero
  8023  000BDC                     	endif
  8024  000BDC  0008               	tblrd		*
  8025  000BDE  50F5               	movf	tablat,w,c
  8026  000BE0  0A25               	xorlw	37
  8027  000BE2  A4D8               	btfss	status,2,c
  8028  000BE4  EFF6  F005         	goto	u10671
  8029  000BE8  EFF8  F005         	goto	u10670
  8030  000BEC                     u10671:
  8031  000BEC  EF9E  F008         	goto	l9613
  8032  000BF0                     u10670:
  8033  000BF0                     
  8034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8035  000BF0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8036  000BF4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8037  000BF8  2ADE               	incf	postinc2,f,c
  8038  000BFA  0E00               	movlw	0
  8039  000BFC  22DD               	addwfc	postdec2,f,c
  8040  000BFE                     
  8041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8042  000BFE  0E00               	movlw	0
  8043  000C00  0101               	movlb	1	; () banked
  8044  000C02  6F33               	movwf	(_width+1)& (0+255),b
  8045  000C04  0E00               	movlw	0
  8046  000C06  6F32               	movwf	_width& (0+255),b
  8047  000C08  C132  F055         	movff	_width,_flags
  8048  000C0C  C133  F056         	movff	_width+1,_flags+1
  8049  000C10                     
  8050                           ; BSR set to: 1
  8051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8052  000C10  6934               	setf	_prec& (0+255),b
  8053  000C12  6935               	setf	(_prec+1)& (0+255),b
  8054  000C14                     
  8055                           ; BSR set to: 1
  8056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8057  000C14  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8058  000C18  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8059  000C1C  CFDE FFF6          	movff	postinc2,tblptrl
  8060  000C20  CFDD FFF7          	movff	postdec2,tblptrh
  8061  000C24                     	if	0	;tblptru may be non-zero
  8062  000C24                     	endif
  8063  000C24                     	if	0	;tblptru may be non-zero
  8064  000C24                     	endif
  8065  000C24  0008               	tblrd		*
  8066  000C26  50F5               	movf	tablat,w,c
  8067  000C28  0A2E               	xorlw	46
  8068  000C2A  A4D8               	btfss	status,2,c
  8069  000C2C  EF1A  F006         	goto	u10681
  8070  000C30  EF1C  F006         	goto	u10680
  8071  000C34                     u10681:
  8072  000C34  EF9A  F006         	goto	l9541
  8073  000C38                     u10680:
  8074  000C38                     
  8075                           ; BSR set to: 1
  8076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8077  000C38  0E00               	movlw	0
  8078  000C3A  6F35               	movwf	(_prec+1)& (0+255),b
  8079  000C3C  0E00               	movlw	0
  8080  000C3E  6F34               	movwf	_prec& (0+255),b
  8081  000C40                     
  8082                           ; BSR set to: 1
  8083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8084  000C40  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8085  000C44  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8086  000C48  2ADE               	incf	postinc2,f,c
  8087  000C4A  0E00               	movlw	0
  8088  000C4C  22DD               	addwfc	postdec2,f,c
  8089  000C4E                     
  8090                           ; BSR set to: 1
  8091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8092  000C4E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8093  000C52  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8094  000C56  CFDE FFF6          	movff	postinc2,tblptrl
  8095  000C5A  CFDD FFF7          	movff	postdec2,tblptrh
  8096  000C5E                     	if	0	;tblptru may be non-zero
  8097  000C5E                     	endif
  8098  000C5E                     	if	0	;tblptru may be non-zero
  8099  000C5E                     	endif
  8100  000C5E  0008               	tblrd		*
  8101  000C60  50F5               	movf	tablat,w,c
  8102  000C62  0A2A               	xorlw	42
  8103  000C64  A4D8               	btfss	status,2,c
  8104  000C66  EF37  F006         	goto	u10691
  8105  000C6A  EF39  F006         	goto	u10690
  8106  000C6E                     u10691:
  8107  000C6E  EF56  F006         	goto	l9531
  8108  000C72                     u10690:
  8109  000C72                     
  8110                           ; BSR set to: 1
  8111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8112  000C72  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8113  000C76  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8114  000C7A  2ADE               	incf	postinc2,f,c
  8115  000C7C  0E00               	movlw	0
  8116  000C7E  22DD               	addwfc	postdec2,f,c
  8117                           
  8118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8119  000C80  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8120  000C84  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8121  000C88  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8122  000C8C  0E02               	movlw	2
  8123  000C8E  26DE               	addwf	postinc2,f,c
  8124  000C90  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8125  000C94  0E00               	movlw	0
  8126  000C96  22DD               	addwfc	postdec2,f,c
  8127  000C98  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8128  000C9C  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8129  000CA0  CFDE F134          	movff	postinc2,_prec
  8130  000CA4  CFDD F135          	movff	postdec2,_prec+1
  8131                           
  8132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8133  000CA8  EF9A  F006         	goto	l9541
  8134  000CAC                     l9531:
  8135                           
  8136                           ; BSR set to: 1
  8137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8138  000CAC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8139  000CB0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8140  000CB4  CFDE F00D          	movff	postinc2,atoi@s
  8141  000CB8  CFDD F00E          	movff	postdec2,atoi@s+1
  8142  000CBC  EC0E  F01B         	call	_atoi	;wreg free
  8143  000CC0  C00D  F134         	movff	?_atoi,_prec
  8144  000CC4  C00E  F135         	movff	?_atoi+1,_prec+1
  8145                           
  8146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8147  000CC8  EF6D  F006         	goto	l9535
  8148  000CCC                     l9533:
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8152  000CCC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8153  000CD0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8154  000CD4  2ADE               	incf	postinc2,f,c
  8155  000CD6  0E00               	movlw	0
  8156  000CD8  22DD               	addwfc	postdec2,f,c
  8157  000CDA                     l9535:
  8158  000CDA  0ED0               	movlw	208
  8159  000CDC  0100               	movlb	0	; () banked
  8160  000CDE  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8161  000CE0  0EFF               	movlw	255
  8162  000CE2  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8163  000CE4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8164  000CE8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8165  000CEC  CFDE FFF6          	movff	postinc2,tblptrl
  8166  000CF0  CFDD FFF7          	movff	postdec2,tblptrh
  8167  000CF4                     	if	0	;tblptru may be non-zero
  8168  000CF4                     	endif
  8169  000CF4                     	if	0	;tblptru may be non-zero
  8170  000CF4                     	endif
  8171  000CF4  0008               	tblrd		*
  8172  000CF6  50F5               	movf	tablat,w,c
  8173  000CF8  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8174  000CFA  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8175  000CFC  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8176  000CFE  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8177  000D00  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8178  000D02  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8179  000D04  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8180  000D06  E10A               	bnz	u10700
  8181  000D08  0E0A               	movlw	10
  8182  000D0A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8183  000D0C  A0D8               	btfss	status,0,c
  8184  000D0E  EF8B  F006         	goto	u10701
  8185  000D12  EF8E  F006         	goto	u10700
  8186  000D16                     u10701:
  8187  000D16  0E01               	movlw	1
  8188  000D18  EF8F  F006         	goto	u10710
  8189  000D1C                     u10700:
  8190  000D1C  0E00               	movlw	0
  8191  000D1E                     u10710:
  8192  000D1E  6FD3               	movwf	_vfpfcnvrt$965& (0+255),b
  8193  000D20  6BD4               	clrf	(_vfpfcnvrt$965+1)& (0+255),b
  8194  000D22                     
  8195                           ; BSR set to: 0
  8196  000D22  51D3               	movf	_vfpfcnvrt$965& (0+255),w,b
  8197  000D24  11D4               	iorwf	(_vfpfcnvrt$965+1)& (0+255),w,b
  8198  000D26  A4D8               	btfss	status,2,c
  8199  000D28  EF98  F006         	goto	u10721
  8200  000D2C  EF9A  F006         	goto	u10720
  8201  000D30                     u10721:
  8202  000D30  EF66  F006         	goto	l9533
  8203  000D34                     u10720:
  8204  000D34                     l9541:
  8205                           
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  8207  000D34  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8208  000D38  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8209  000D3C  CFDE FFF6          	movff	postinc2,tblptrl
  8210  000D40  CFDD FFF7          	movff	postdec2,tblptrh
  8211  000D44                     	if	0	;tblptru may be non-zero
  8212  000D44                     	endif
  8213  000D44                     	if	0	;tblptru may be non-zero
  8214  000D44                     	endif
  8215  000D44  0008               	tblrd		*
  8216  000D46  50F5               	movf	tablat,w,c
  8217  000D48  6E0C               	movwf	tolower@c^0,c
  8218  000D4A  6A0D               	clrf	(tolower@c+1)^0,c
  8219  000D4C  ECF7  F027         	call	_tolower	;wreg free
  8220  000D50  500C               	movf	?_tolower^0,w,c
  8221  000D52  0100               	movlb	0	; () banked
  8222  000D54  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  8223  000D56                     
  8224                           ; BSR set to: 0
  8225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  8226  000D56  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  8227  000D58  B4D8               	btfsc	status,2,c
  8228  000D5A  EFB1  F006         	goto	u10731
  8229  000D5E  EFB3  F006         	goto	u10730
  8230  000D62                     u10731:
  8231  000D62  EFED  F006         	goto	l9551
  8232  000D66                     u10730:
  8233  000D66                     
  8234                           ; BSR set to: 0
  8235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  8236  000D66  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8237  000D6A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8238  000D6E  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8239  000D72  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8240  000D76  0E01               	movlw	1
  8241  000D78  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8242  000D7A  0E00               	movlw	0
  8243  000D7C  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8244  000D7E  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8245  000D82  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8246  000D86                     	if	0	;tblptru may be non-zero
  8247  000D86                     	endif
  8248  000D86                     	if	0	;tblptru may be non-zero
  8249  000D86                     	endif
  8250  000D86  0008               	tblrd		*
  8251  000D88  50F5               	movf	tablat,w,c
  8252  000D8A  6E0C               	movwf	tolower@c^0,c
  8253  000D8C  6A0D               	clrf	(tolower@c+1)^0,c
  8254  000D8E  ECF7  F027         	call	_tolower	;wreg free
  8255  000D92  500C               	movf	?_tolower^0,w,c
  8256  000D94  0100               	movlb	0	; () banked
  8257  000D96  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  8258  000D98                     
  8259                           ; BSR set to: 0
  8260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  8261  000D98  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  8262  000D9A  B4D8               	btfsc	status,2,c
  8263  000D9C  EFD2  F006         	goto	u10741
  8264  000DA0  EFD4  F006         	goto	u10740
  8265  000DA4                     u10741:
  8266  000DA4  EFED  F006         	goto	l9551
  8267  000DA8                     u10740:
  8268  000DA8                     
  8269                           ; BSR set to: 0
  8270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  8271  000DA8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8272  000DAC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8273  000DB0  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8274  000DB4  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8275  000DB8  0E02               	movlw	2
  8276  000DBA  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8277  000DBC  0E00               	movlw	0
  8278  000DBE  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8279  000DC0  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8280  000DC4  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8281  000DC8                     	if	0	;tblptru may be non-zero
  8282  000DC8                     	endif
  8283  000DC8                     	if	0	;tblptru may be non-zero
  8284  000DC8                     	endif
  8285  000DC8  0008               	tblrd		*
  8286  000DCA  50F5               	movf	tablat,w,c
  8287  000DCC  6E0C               	movwf	tolower@c^0,c
  8288  000DCE  6A0D               	clrf	(tolower@c+1)^0,c
  8289  000DD0  ECF7  F027         	call	_tolower	;wreg free
  8290  000DD4  500C               	movf	?_tolower^0,w,c
  8291  000DD6  0100               	movlb	0	; () banked
  8292  000DD8  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  8293  000DDA                     l9551:
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8297  000DDA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8298  000DDE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8299  000DE2  CFDE FFF6          	movff	postinc2,tblptrl
  8300  000DE6  CFDD FFF7          	movff	postdec2,tblptrh
  8301  000DEA                     	if	0	;tblptru may be non-zero
  8302  000DEA                     	endif
  8303  000DEA                     	if	0	;tblptru may be non-zero
  8304  000DEA                     	endif
  8305  000DEA  0008               	tblrd		*
  8306  000DEC  50F5               	movf	tablat,w,c
  8307  000DEE  0A63               	xorlw	99
  8308  000DF0  A4D8               	btfss	status,2,c
  8309  000DF2  EFFD  F006         	goto	u10751
  8310  000DF6  EFFF  F006         	goto	u10750
  8311  000DFA                     u10751:
  8312  000DFA  EF26  F007         	goto	l9559
  8313  000DFE                     u10750:
  8314  000DFE                     
  8315                           ; BSR set to: 0
  8316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8317  000DFE  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8318  000E02  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8319  000E06  2ADE               	incf	postinc2,f,c
  8320  000E08  0E00               	movlw	0
  8321  000E0A  22DD               	addwfc	postdec2,f,c
  8322                           
  8323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8324  000E0C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8325  000E10  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8326  000E14  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8327  000E18  0E02               	movlw	2
  8328  000E1A  26DE               	addwf	postinc2,f,c
  8329  000E1C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8330  000E20  0E00               	movlw	0
  8331  000E22  22DD               	addwfc	postdec2,f,c
  8332  000E24  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8333  000E28  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8334  000E2C  50DF               	movf	indf2,w,c
  8335  000E2E  6FDE               	movwf	vfpfcnvrt@c& (0+255),b
  8336  000E30                     
  8337                           ; BSR set to: 0
  8338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8339  000E30  C0C1  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  8340  000E34  C0C2  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8341  000E38  C0DE  F023         	movff	vfpfcnvrt@c,ctoa@c
  8342  000E3C  EC84  F028         	call	_ctoa	;wreg free
  8343  000E40  C021  F0C1         	movff	?_ctoa,?_vfpfcnvrt
  8344  000E44  C022  F0C2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8345  000E48  EFB9  F008         	goto	l940
  8346  000E4C                     l9559:
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8350  000E4C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8351  000E50  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8352  000E54  CFDE FFF6          	movff	postinc2,tblptrl
  8353  000E58  CFDD FFF7          	movff	postdec2,tblptrh
  8354  000E5C                     	if	0	;tblptru may be non-zero
  8355  000E5C                     	endif
  8356  000E5C                     	if	0	;tblptru may be non-zero
  8357  000E5C                     	endif
  8358  000E5C  0008               	tblrd		*
  8359  000E5E  50F5               	movf	tablat,w,c
  8360  000E60  0A64               	xorlw	100
  8361  000E62  B4D8               	btfsc	status,2,c
  8362  000E64  EF36  F007         	goto	u10761
  8363  000E68  EF38  F007         	goto	u10760
  8364  000E6C                     u10761:
  8365  000E6C  EF4A  F007         	goto	l9563
  8366  000E70                     u10760:
  8367  000E70                     
  8368                           ; BSR set to: 0
  8369  000E70  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8370  000E74  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8371  000E78  CFDE FFF6          	movff	postinc2,tblptrl
  8372  000E7C  CFDD FFF7          	movff	postdec2,tblptrh
  8373  000E80                     	if	0	;tblptru may be non-zero
  8374  000E80                     	endif
  8375  000E80                     	if	0	;tblptru may be non-zero
  8376  000E80                     	endif
  8377  000E80  0008               	tblrd		*
  8378  000E82  50F5               	movf	tablat,w,c
  8379  000E84  0A69               	xorlw	105
  8380  000E86  A4D8               	btfss	status,2,c
  8381  000E88  EF48  F007         	goto	u10771
  8382  000E8C  EF4A  F007         	goto	u10770
  8383  000E90                     u10771:
  8384  000E90  EF8A  F007         	goto	l9569
  8385  000E94                     u10770:
  8386  000E94                     l9563:
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8390  000E94  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8391  000E98  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8392  000E9C  2ADE               	incf	postinc2,f,c
  8393  000E9E  0E00               	movlw	0
  8394  000EA0  22DD               	addwfc	postdec2,f,c
  8395                           
  8396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8397  000EA2  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8398  000EA6  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8399  000EAA  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8400  000EAE  0E02               	movlw	2
  8401  000EB0  26DE               	addwf	postinc2,f,c
  8402  000EB2  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8403  000EB6  0E00               	movlw	0
  8404  000EB8  22DD               	addwfc	postdec2,f,c
  8405  000EBA  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8406  000EBE  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8407  000EC2  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  8408  000EC6  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  8409  000ECA  0E00               	movlw	0
  8410  000ECC  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8411  000ECE  0EFF               	movlw	-1
  8412  000ED0  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8413  000ED2  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8414  000ED4  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8415  000ED6  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8416  000ED8  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8417  000EDA  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8418  000EDC                     
  8419                           ; BSR set to: 0
  8420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8421  000EDC  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  8422  000EE0  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8423  000EE4  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  8424  000EE8  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8425  000EEC  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8426  000EF0  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8427  000EF4  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8428  000EF8  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8429  000EFC  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8430  000F00  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8431  000F04  ECB3  F015         	call	_dtoa	;wreg free
  8432  000F08  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  8433  000F0C  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8434  000F10  EFB9  F008         	goto	l940
  8435  000F14                     l9569:
  8436                           
  8437                           ; BSR set to: 0
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  8439  000F14  0E66               	movlw	102
  8440  000F16  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  8441  000F18  A4D8               	btfss	status,2,c
  8442  000F1A  EF91  F007         	goto	u10781
  8443  000F1E  EF93  F007         	goto	u10780
  8444  000F22                     u10781:
  8445  000F22  EFD3  F007         	goto	l9581
  8446  000F26                     u10780:
  8447  000F26                     
  8448                           ; BSR set to: 0
  8449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  8450  000F26  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8451  000F2A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8452  000F2E  CFDE FFF6          	movff	postinc2,tblptrl
  8453  000F32  CFDD FFF7          	movff	postdec2,tblptrh
  8454  000F36                     	if	0	;tblptru may be non-zero
  8455  000F36                     	endif
  8456  000F36                     	if	0	;tblptru may be non-zero
  8457  000F36                     	endif
  8458  000F36  0008               	tblrd		*
  8459  000F38  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8460  000F3C                     
  8461                           ; BSR set to: 0
  8462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  8463  000F3C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8464  000F40  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8465  000F44  2ADE               	incf	postinc2,f,c
  8466  000F46  0E00               	movlw	0
  8467  000F48  22DD               	addwfc	postdec2,f,c
  8468  000F4A                     
  8469                           ; BSR set to: 0
  8470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8471  000F4A  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8472  000F4E  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8473  000F52  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8474  000F56  0E04               	movlw	4
  8475  000F58  26DE               	addwf	postinc2,f,c
  8476  000F5A  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8477  000F5E  0E00               	movlw	0
  8478  000F60  22DD               	addwfc	postdec2,f,c
  8479  000F62  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8480  000F66  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8481  000F6A  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8482  000F6E  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8483  000F72  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8484  000F76  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8485  000F7A                     l9577:
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  8489  000F7A  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  8490  000F7E  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8491  000F82  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  8492  000F86  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  8493  000F8A  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  8494  000F8E  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  8495  000F92  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  8496  000F96  EC09  F000         	call	_efgtoa	;wreg free
  8497  000F9A  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  8498  000F9E  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  8499  000FA2  EFB9  F008         	goto	l940
  8500  000FA6                     l9581:
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8504  000FA6  0EDB               	movlw	low vfpfcnvrt@ct
  8505  000FA8  6E06               	movwf	strncmp@_l^0,c
  8506  000FAA  0E00               	movlw	high vfpfcnvrt@ct
  8507  000FAC  6E07               	movwf	(strncmp@_l+1)^0,c
  8508  000FAE  0EFC               	movlw	low STR_29
  8509  000FB0  6E08               	movwf	strncmp@_r^0,c
  8510  000FB2  0E7F               	movlw	high STR_29
  8511  000FB4  6E09               	movwf	(strncmp@_r+1)^0,c
  8512  000FB6  0E00               	movlw	0
  8513  000FB8  6E0B               	movwf	(strncmp@n+1)^0,c
  8514  000FBA  0E02               	movlw	2
  8515  000FBC  6E0A               	movwf	strncmp@n^0,c
  8516  000FBE  EC11  F022         	call	_strncmp	;wreg free
  8517  000FC2  5006               	movf	?_strncmp^0,w,c
  8518  000FC4  1007               	iorwf	(?_strncmp+1)^0,w,c
  8519  000FC6  A4D8               	btfss	status,2,c
  8520  000FC8  EFE8  F007         	goto	u10791
  8521  000FCC  EFEA  F007         	goto	u10790
  8522  000FD0                     u10791:
  8523  000FD0  EF66  F008         	goto	l9597
  8524  000FD4                     u10790:
  8525  000FD4                     
  8526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8527  000FD4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8528  000FD8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8529  000FDC  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8530  000FE0  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8531  000FE4  0E01               	movlw	1
  8532  000FE6  0100               	movlb	0	; () banked
  8533  000FE8  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8534  000FEA  0E00               	movlw	0
  8535  000FEC  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8536  000FEE  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8537  000FF2  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8538  000FF6                     	if	0	;tblptru may be non-zero
  8539  000FF6                     	endif
  8540  000FF6                     	if	0	;tblptru may be non-zero
  8541  000FF6                     	endif
  8542  000FF6  0008               	tblrd		*
  8543  000FF8  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8544  000FFC  0EBF               	movlw	191
  8545  000FFE  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8546  001000  0EFF               	movlw	255
  8547  001002  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8548  001004  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8549  001008  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8550  00100C  CFDE FFF6          	movff	postinc2,tblptrl
  8551  001010  CFDD FFF7          	movff	postdec2,tblptrh
  8552  001014                     	if	0	;tblptru may be non-zero
  8553  001014                     	endif
  8554  001014                     	if	0	;tblptru may be non-zero
  8555  001014                     	endif
  8556  001014  0008               	tblrd		*
  8557  001016  50F5               	movf	tablat,w,c
  8558  001018  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8559  00101A  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8560  00101C  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8561  00101E  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8562  001020  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8563  001022  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8564  001024  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8565  001026  E10A               	bnz	u10800
  8566  001028  0E1A               	movlw	26
  8567  00102A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8568  00102C  A0D8               	btfss	status,0,c
  8569  00102E  EF1B  F008         	goto	u10801
  8570  001032  EF1E  F008         	goto	u10800
  8571  001036                     u10801:
  8572  001036  0E01               	movlw	1
  8573  001038  EF1F  F008         	goto	u10810
  8574  00103C                     u10800:
  8575  00103C  0E00               	movlw	0
  8576  00103E                     u10810:
  8577  00103E  6FD5               	movwf	_vfpfcnvrt$971& (0+255),b
  8578  001040  6BD6               	clrf	(_vfpfcnvrt$971+1)& (0+255),b
  8579  001042                     
  8580                           ; BSR set to: 0
  8581  001042  51D5               	movf	_vfpfcnvrt$971& (0+255),w,b
  8582  001044  11D6               	iorwf	(_vfpfcnvrt$971+1)& (0+255),w,b
  8583  001046  B4D8               	btfsc	status,2,c
  8584  001048  EF28  F008         	goto	u10821
  8585  00104C  EF2A  F008         	goto	u10820
  8586  001050                     u10821:
  8587  001050  EF44  F008         	goto	l9591
  8588  001054                     u10820:
  8589  001054                     
  8590                           ; BSR set to: 0
  8591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8592  001054  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8593  001058  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8594  00105C  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8595  001060  0E04               	movlw	4
  8596  001062  26DE               	addwf	postinc2,f,c
  8597  001064  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8598  001068  0E00               	movlw	0
  8599  00106A  22DD               	addwfc	postdec2,f,c
  8600  00106C  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8601  001070  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8602  001074  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8603  001078  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8604  00107C  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8605  001080  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8606                           
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  8608  001084  EF5C  F008         	goto	l951
  8609  001088                     l9591:
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8613  001088  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8614  00108C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8615  001090  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8616  001094  0E04               	movlw	4
  8617  001096  26DE               	addwf	postinc2,f,c
  8618  001098  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8619  00109C  0E00               	movlw	0
  8620  00109E  22DD               	addwfc	postdec2,f,c
  8621  0010A0  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8622  0010A4  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8623  0010A8  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8624  0010AC  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8625  0010B0  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8626  0010B4  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8627  0010B8                     l951:
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  8631  0010B8  0E02               	movlw	2
  8632  0010BA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8633  0010BE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8634  0010C2  26DE               	addwf	postinc2,f,c
  8635  0010C4  0E00               	movlw	0
  8636  0010C6  22DD               	addwfc	postdec2,f,c
  8637  0010C8  EFBD  F007         	goto	l9577
  8638  0010CC                     l9597:
  8639                           
  8640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8641  0010CC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8642  0010D0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8643  0010D4  CFDE FFF6          	movff	postinc2,tblptrl
  8644  0010D8  CFDD FFF7          	movff	postdec2,tblptrh
  8645  0010DC                     	if	0	;tblptru may be non-zero
  8646  0010DC                     	endif
  8647  0010DC                     	if	0	;tblptru may be non-zero
  8648  0010DC                     	endif
  8649  0010DC  0008               	tblrd		*
  8650  0010DE  50F5               	movf	tablat,w,c
  8651  0010E0  0A25               	xorlw	37
  8652  0010E2  A4D8               	btfss	status,2,c
  8653  0010E4  EF76  F008         	goto	u10831
  8654  0010E8  EF78  F008         	goto	u10830
  8655  0010EC                     u10831:
  8656  0010EC  EF90  F008         	goto	l9607
  8657  0010F0                     u10830:
  8658  0010F0                     
  8659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8660  0010F0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8661  0010F4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8662  0010F8  2ADE               	incf	postinc2,f,c
  8663  0010FA  0E00               	movlw	0
  8664  0010FC  22DD               	addwfc	postdec2,f,c
  8665  0010FE                     
  8666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8667  0010FE  0E00               	movlw	0
  8668  001100  6E07               	movwf	(fputc@c+1)^0,c
  8669  001102  0E25               	movlw	37
  8670  001104  6E06               	movwf	fputc@c^0,c
  8671  001106  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  8672  00110A  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8673  00110E  EC7C  F022         	call	_fputc	;wreg free
  8674  001112                     l9603:
  8675                           
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8677  001112  0E00               	movlw	0
  8678  001114  0100               	movlb	0	; () banked
  8679  001116  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8680  001118  0E01               	movlw	1
  8681  00111A  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  8682  00111C  EFB9  F008         	goto	l940
  8683  001120                     l9607:
  8684                           
  8685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8686  001120  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8687  001124  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8688  001128  2ADE               	incf	postinc2,f,c
  8689  00112A  0E00               	movlw	0
  8690  00112C  22DD               	addwfc	postdec2,f,c
  8691  00112E                     
  8692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8693  00112E  0E00               	movlw	0
  8694  001130  0100               	movlb	0	; () banked
  8695  001132  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8696  001134  0E00               	movlw	0
  8697  001136  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  8698  001138  EFB9  F008         	goto	l940
  8699  00113C                     l9613:
  8700                           
  8701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8702  00113C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8703  001140  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8704  001144  CFDE FFF6          	movff	postinc2,tblptrl
  8705  001148  CFDD FFF7          	movff	postdec2,tblptrh
  8706  00114C                     	if	0	;tblptru may be non-zero
  8707  00114C                     	endif
  8708  00114C                     	if	0	;tblptru may be non-zero
  8709  00114C                     	endif
  8710  00114C  0008               	tblrd		*
  8711  00114E  50F5               	movf	tablat,w,c
  8712  001150  6E06               	movwf	fputc@c^0,c
  8713  001152  6A07               	clrf	(fputc@c+1)^0,c
  8714  001154  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  8715  001158  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8716  00115C  EC7C  F022         	call	_fputc	;wreg free
  8717  001160                     
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8719  001160  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8720  001164  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8721  001168  2ADE               	incf	postinc2,f,c
  8722  00116A  0E00               	movlw	0
  8723  00116C  22DD               	addwfc	postdec2,f,c
  8724  00116E  EF89  F008         	goto	l9603
  8725  001172                     l940:
  8726  001172  0012               	return		;funcret
  8727  001174                     __end_of_vfpfcnvrt:
  8728                           	opt callstack 0
  8729                           
  8730 ;; *************** function _strncmp *****************
  8731 ;; Defined at:
  8732 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  8735 ;;		 -> vfpfcnvrt@ct(3), 
  8736 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  8737 ;;		 -> STR_31(3), 
  8738 ;;  n               2    9[COMRAM] unsigned int 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;  r               2   14[COMRAM] PTR const unsigned char 
  8741 ;;		 -> STR_31(3), 
  8742 ;;  l               2   12[COMRAM] PTR const unsigned char 
  8743 ;;		 -> vfpfcnvrt@ct(3), 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  2    5[COMRAM] int 
  8746 ;; Registers used:
  8747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8753 ;;      Params:         6       0       0       0       0       0       0       0       0
  8754 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8755 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8756 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8757 ;;Total ram usage:       11 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    2
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_vfpfcnvrt
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text35
  8768  004422                     __ptext35:
  8769                           	opt callstack 0
  8770  004422                     _strncmp:
  8771                           	opt callstack 24
  8772  004422  C006  F00D         	movff	strncmp@_l,strncmp@l
  8773  004426  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  8774  00442A  C008  F00F         	movff	strncmp@_r,strncmp@r
  8775  00442E  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  8776  004432  060A               	decf	strncmp@n^0,f,c
  8777  004434  A0D8               	btfss	status,0,c
  8778  004436  060B               	decf	(strncmp@n+1)^0,f,c
  8779  004438  280A               	incf	strncmp@n^0,w,c
  8780  00443A  E106               	bnz	u10611
  8781  00443C  280B               	incf	(strncmp@n+1)^0,w,c
  8782  00443E  A4D8               	btfss	status,2,c
  8783  004440  EF24  F022         	goto	u10611
  8784  004444  EF26  F022         	goto	u10610
  8785  004448                     u10611:
  8786  004448  EF33  F022         	goto	l9481
  8787  00444C                     u10610:
  8788  00444C  0E00               	movlw	0
  8789  00444E  6E07               	movwf	(?_strncmp+1)^0,c
  8790  004450  0E00               	movlw	0
  8791  004452  6E06               	movwf	?_strncmp^0,c
  8792  004454  EF7B  F022         	goto	l1775
  8793  004458                     l9479:
  8794  004458  4A0D               	infsnz	strncmp@l^0,f,c
  8795  00445A  2A0E               	incf	(strncmp@l+1)^0,f,c
  8796  00445C  4A0F               	infsnz	strncmp@r^0,f,c
  8797  00445E  2A10               	incf	(strncmp@r+1)^0,f,c
  8798  004460  060A               	decf	strncmp@n^0,f,c
  8799  004462  A0D8               	btfss	status,0,c
  8800  004464  060B               	decf	(strncmp@n+1)^0,f,c
  8801  004466                     l9481:
  8802  004466  C00D  FFD9         	movff	strncmp@l,fsr2l
  8803  00446A  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8804  00446E  50DF               	movf	indf2,w,c
  8805  004470  B4D8               	btfsc	status,2,c
  8806  004472  EF3D  F022         	goto	u10621
  8807  004476  EF3F  F022         	goto	u10620
  8808  00447A                     u10621:
  8809  00447A  EF6A  F022         	goto	l9489
  8810  00447E                     u10620:
  8811  00447E  C00F  FFF6         	movff	strncmp@r,tblptrl
  8812  004482  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8813  004486                     	if	0	;tblptru may be non-zero
  8814  004486                     	endif
  8815  004486                     	if	0	;tblptru may be non-zero
  8816  004486                     	endif
  8817  004486  0008               	tblrd		*
  8818  004488  50F5               	movf	tablat,w,c
  8819  00448A  0900               	iorlw	0
  8820  00448C  B4D8               	btfsc	status,2,c
  8821  00448E  EF4B  F022         	goto	u10631
  8822  004492  EF4D  F022         	goto	u10630
  8823  004496                     u10631:
  8824  004496  EF6A  F022         	goto	l9489
  8825  00449A                     u10630:
  8826  00449A  500A               	movf	strncmp@n^0,w,c
  8827  00449C  100B               	iorwf	(strncmp@n+1)^0,w,c
  8828  00449E  B4D8               	btfsc	status,2,c
  8829  0044A0  EF54  F022         	goto	u10641
  8830  0044A4  EF56  F022         	goto	u10640
  8831  0044A8                     u10641:
  8832  0044A8  EF6A  F022         	goto	l9489
  8833  0044AC                     u10640:
  8834  0044AC  C00D  FFD9         	movff	strncmp@l,fsr2l
  8835  0044B0  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8836  0044B4  50DF               	movf	indf2,w,c
  8837  0044B6  6E0C               	movwf	??_strncmp^0,c
  8838  0044B8  C00F  FFF6         	movff	strncmp@r,tblptrl
  8839  0044BC  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8840  0044C0                     	if	0	;tblptru may be non-zero
  8841  0044C0                     	endif
  8842  0044C0                     	if	0	;tblptru may be non-zero
  8843  0044C0                     	endif
  8844  0044C0  0008               	tblrd		*
  8845  0044C2  50F5               	movf	tablat,w,c
  8846  0044C4  180C               	xorwf	??_strncmp^0,w,c
  8847  0044C6  B4D8               	btfsc	status,2,c
  8848  0044C8  EF68  F022         	goto	u10651
  8849  0044CC  EF6A  F022         	goto	u10650
  8850  0044D0                     u10651:
  8851  0044D0  EF2C  F022         	goto	l9479
  8852  0044D4                     u10650:
  8853  0044D4                     l9489:
  8854  0044D4  C00D  FFD9         	movff	strncmp@l,fsr2l
  8855  0044D8  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8856  0044DC  50DF               	movf	indf2,w,c
  8857  0044DE  6E0C               	movwf	??_strncmp^0,c
  8858  0044E0  C00F  FFF6         	movff	strncmp@r,tblptrl
  8859  0044E4  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8860  0044E8                     	if	0	;tblptru may be non-zero
  8861  0044E8                     	endif
  8862  0044E8                     	if	0	;tblptru may be non-zero
  8863  0044E8                     	endif
  8864  0044E8  0008               	tblrd		*
  8865  0044EA  50F5               	movf	tablat,w,c
  8866  0044EC  5C0C               	subwf	??_strncmp^0,w,c
  8867  0044EE  6E06               	movwf	?_strncmp^0,c
  8868  0044F0  6A07               	clrf	(?_strncmp+1)^0,c
  8869  0044F2  A0D8               	btfss	status,0,c
  8870  0044F4  0607               	decf	(?_strncmp+1)^0,f,c
  8871  0044F6                     l1775:
  8872  0044F6  0012               	return		;funcret
  8873  0044F8                     __end_of_strncmp:
  8874                           	opt callstack 0
  8875                           
  8876 ;; *************** function _efgtoa *****************
  8877 ;; Defined at:
  8878 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  8881 ;;		 -> sprintf@f(6), 
  8882 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  8883 ;;  c               1   35[BANK0 ] unsigned char 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  u               4   93[BANK0 ] unsigned char 
  8886 ;;  g               4   85[BANK0 ] unsigned char 
  8887 ;;  l               4   79[BANK0 ] unsigned char 
  8888 ;;  h               4   75[BANK0 ] unsigned char 
  8889 ;;  ou              4   41[BANK0 ] unsigned char 
  8890 ;;  n               2   91[BANK0 ] int 
  8891 ;;  e               2   89[BANK0 ] int 
  8892 ;;  i               2   83[BANK0 ] int 
  8893 ;;  w               2   72[BANK0 ] int 
  8894 ;;  p               2   69[BANK0 ] int 
  8895 ;;  sign            2   67[BANK0 ] int 
  8896 ;;  d               2   65[BANK0 ] int 
  8897 ;;  ne              2   63[BANK0 ] int 
  8898 ;;  m               2   61[BANK0 ] int 
  8899 ;;  pp              2   59[BANK0 ] int 
  8900 ;;  t               2   57[BANK0 ] int 
  8901 ;;  mode            1   74[BANK0 ] unsigned char 
  8902 ;;  nmode           1   71[BANK0 ] unsigned char 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  2   29[BANK0 ] int 
  8905 ;; Registers used:
  8906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8912 ;;      Params:         0       7       0       0       0       0       0       0       0
  8913 ;;      Locals:         0      56       0       0       0       0       0       0       0
  8914 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8915 ;;      Totals:         0      68       0       0       0       0       0       0       0
  8916 ;;Total ram usage:       68 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:    6
  8919 ;; This function calls:
  8920 ;;		___awdiv
  8921 ;;		___awmod
  8922 ;;		___fladd
  8923 ;;		___fldiv
  8924 ;;		___fleq
  8925 ;;		___flge
  8926 ;;		___flmul
  8927 ;;		___flneg
  8928 ;;		___flsub
  8929 ;;		___fltol
  8930 ;;		___fpclassifyf
  8931 ;;		_floorf
  8932 ;;		_isupper
  8933 ;;		_pad
  8934 ;;		_strcpy
  8935 ;;		_tolower
  8936 ;; This function is called by:
  8937 ;;		_vfpfcnvrt
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text36
  8942  000012                     __ptext36:
  8943                           	opt callstack 0
  8944  000012                     _efgtoa:
  8945                           	opt callstack 20
  8946  000012                     
  8947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8948  000012  0E00               	movlw	0
  8949  000014  0100               	movlb	0	; () banked
  8950  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  8951  000018  0E00               	movlw	0
  8952  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  8953  00001C                     
  8954                           ; BSR set to: 0
  8955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8956  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  8957  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  8958  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  8959  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  8960  00002C                     
  8961                           ; BSR set to: 0
  8962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8963  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8964  00002E  EF1D  F000         	goto	u10020
  8965  000032  EF1B  F000         	goto	u10021
  8966  000036                     u10021:
  8967  000036  EF33  F000         	goto	l9143
  8968  00003A                     u10020:
  8969  00003A                     
  8970                           ; BSR set to: 0
  8971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8972  00003A  0E00               	movlw	0
  8973  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  8974  00003E  0E01               	movlw	1
  8975  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  8976  000042                     
  8977                           ; BSR set to: 0
  8978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8979  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  8980  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  8981  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  8982  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  8983  000052  ECB6  F02A         	call	___flneg	;wreg free
  8984  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  8985  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  8986  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  8987  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  8988  000066                     l9143:
  8989                           
  8990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8991  000066  0E00               	movlw	0
  8992  000068  0100               	movlb	0	; () banked
  8993  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  8994  00006C  0E00               	movlw	0
  8995  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  8996  000070                     
  8997                           ; BSR set to: 0
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8999  000070  C132  F0A8         	movff	_width,efgtoa@w
  9000  000074  C133  F0A9         	movff	_width+1,efgtoa@w+1
  9001  000078                     
  9002                           ; BSR set to: 0
  9003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9004  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  9005  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9006  00007C  A4D8               	btfss	status,2,c
  9007  00007E  EF43  F000         	goto	u10031
  9008  000082  EF45  F000         	goto	u10030
  9009  000086                     u10031:
  9010  000086  EF4C  F000         	goto	l9151
  9011  00008A                     u10030:
  9012  00008A                     
  9013                           ; BSR set to: 0
  9014  00008A  A455               	btfss	_flags^0,2,c
  9015  00008C  EF4A  F000         	goto	u10041
  9016  000090  EF4C  F000         	goto	u10040
  9017  000094                     u10041:
  9018  000094  EF66  F000         	goto	l9163
  9019  000098                     u10040:
  9020  000098                     l9151:
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9024  000098  51A3               	movf	efgtoa@sign& (0+255),w,b
  9025  00009A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9026  00009C  A4D8               	btfss	status,2,c
  9027  00009E  EF53  F000         	goto	u10051
  9028  0000A2  EF55  F000         	goto	u10050
  9029  0000A6                     u10051:
  9030  0000A6  EF5B  F000         	goto	l9155
  9031  0000AA                     u10050:
  9032  0000AA                     
  9033                           ; BSR set to: 0
  9034  0000AA  0E00               	movlw	0
  9035  0000AC  6F8E               	movwf	(_efgtoa$940+1)& (0+255),b
  9036  0000AE  0E2B               	movlw	43
  9037  0000B0  6F8D               	movwf	_efgtoa$940& (0+255),b
  9038  0000B2  EF5F  F000         	goto	l9157
  9039  0000B6                     l9155:
  9040                           
  9041                           ; BSR set to: 0
  9042  0000B6  0E00               	movlw	0
  9043  0000B8  6F8E               	movwf	(_efgtoa$940+1)& (0+255),b
  9044  0000BA  0E2D               	movlw	45
  9045  0000BC  6F8D               	movwf	_efgtoa$940& (0+255),b
  9046  0000BE                     l9157:
  9047                           
  9048                           ; BSR set to: 0
  9049  0000BE  C08D  F141         	movff	_efgtoa$940,_dbuf
  9050  0000C2                     
  9051                           ; BSR set to: 0
  9052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9053  0000C2  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  9054  0000C4  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  9055  0000C6                     
  9056                           ; BSR set to: 0
  9057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9058  0000C6  07A8               	decf	efgtoa@w& (0+255),f,b
  9059  0000C8  A0D8               	btfss	status,0,c
  9060  0000CA  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  9061  0000CC                     l9163:
  9062                           
  9063                           ; BSR set to: 0
  9064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9065  0000CC  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9066  0000D0  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9067  0000D4  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9068  0000D8  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9069  0000DC  EC92  F021         	call	___fpclassifyf	;wreg free
  9070  0000E0  0406               	decf	?___fpclassifyf^0,w,c
  9071  0000E2  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9072  0000E4  A4D8               	btfss	status,2,c
  9073  0000E6  EF77  F000         	goto	u10061
  9074  0000EA  EF79  F000         	goto	u10060
  9075  0000EE                     u10061:
  9076  0000EE  EFD0  F000         	goto	l9181
  9077  0000F2                     u10060:
  9078  0000F2  0EBF               	movlw	191
  9079  0000F4  0100               	movlb	0	; () banked
  9080  0000F6  6F84               	movwf	??_efgtoa& (0+255),b
  9081  0000F8  0EFF               	movlw	255
  9082  0000FA  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9083  0000FC  5183               	movf	efgtoa@c& (0+255),w,b
  9084  0000FE  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9085  000100  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9086  000102  5184               	movf	??_efgtoa& (0+255),w,b
  9087  000104  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9088  000106  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9089  000108  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9090  00010A  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9091  00010C  E10A               	bnz	u10070
  9092  00010E  0E1A               	movlw	26
  9093  000110  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9094  000112  A0D8               	btfss	status,0,c
  9095  000114  EF8E  F000         	goto	u10071
  9096  000118  EF91  F000         	goto	u10070
  9097  00011C                     u10071:
  9098  00011C  0E01               	movlw	1
  9099  00011E  EF92  F000         	goto	u10080
  9100  000122                     u10070:
  9101  000122  0E00               	movlw	0
  9102  000124                     u10080:
  9103  000124  6F8F               	movwf	_efgtoa$941& (0+255),b
  9104  000126  6B90               	clrf	(_efgtoa$941+1)& (0+255),b
  9105  000128                     
  9106                           ; BSR set to: 0
  9107  000128  518F               	movf	_efgtoa$941& (0+255),w,b
  9108  00012A  1190               	iorwf	(_efgtoa$941+1)& (0+255),w,b
  9109  00012C  B4D8               	btfsc	status,2,c
  9110  00012E  EF9B  F000         	goto	u10091
  9111  000132  EF9D  F000         	goto	u10090
  9112  000136                     u10091:
  9113  000136  EFAB  F000         	goto	l9173
  9114  00013A                     u10090:
  9115  00013A                     
  9116                           ; BSR set to: 0
  9117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9118  00013A  0E41               	movlw	low _dbuf
  9119  00013C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9120  00013E  6E06               	movwf	strcpy@dest^0,c
  9121  000140  0E01               	movlw	high _dbuf
  9122  000142  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9123  000144  6E07               	movwf	(strcpy@dest+1)^0,c
  9124  000146  0EEC               	movlw	low STR_21
  9125  000148  6E08               	movwf	strcpy@src^0,c
  9126  00014A  0E7F               	movlw	high STR_21
  9127  00014C  6E09               	movwf	(strcpy@src+1)^0,c
  9128  00014E  EC56  F028         	call	_strcpy	;wreg free
  9129                           
  9130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9131  000152  EFB7  F000         	goto	l9175
  9132  000156                     l9173:
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9136  000156  0E41               	movlw	low _dbuf
  9137  000158  25BB               	addwf	efgtoa@n& (0+255),w,b
  9138  00015A  6E06               	movwf	strcpy@dest^0,c
  9139  00015C  0E01               	movlw	high _dbuf
  9140  00015E  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9141  000160  6E07               	movwf	(strcpy@dest+1)^0,c
  9142  000162  0EF4               	movlw	low STR_22
  9143  000164  6E08               	movwf	strcpy@src^0,c
  9144  000166  0E7F               	movlw	high STR_22
  9145  000168  6E09               	movwf	(strcpy@src+1)^0,c
  9146  00016A  EC56  F028         	call	_strcpy	;wreg free
  9147  00016E                     l9175:
  9148                           
  9149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9150  00016E  0100               	movlb	0	; () banked
  9151  000170  0EFD               	movlw	253
  9152  000172  27A8               	addwf	efgtoa@w& (0+255),f,b
  9153  000174  0EFF               	movlw	255
  9154  000176  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9155  000178                     l9177:
  9156                           
  9157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9158  000178  C07D  F016         	movff	efgtoa@fp,pad@fp
  9159  00017C  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  9160  000180  0E41               	movlw	low _dbuf
  9161  000182  6E18               	movwf	pad@buf^0,c
  9162  000184  0E01               	movlw	high _dbuf
  9163  000186  6E19               	movwf	(pad@buf+1)^0,c
  9164  000188  C0A8  F01A         	movff	efgtoa@w,pad@p
  9165  00018C  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  9166  000190  ECA4  F023         	call	_pad	;wreg free
  9167  000194  C016  F07D         	movff	?_pad,?_efgtoa
  9168  000198  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  9169  00019C  EFE5  F005         	goto	l850
  9170  0001A0                     l9181:
  9171                           
  9172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9173  0001A0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9174  0001A4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9175  0001A8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9176  0001AC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9177  0001B0  EC92  F021         	call	___fpclassifyf	;wreg free
  9178  0001B4  5006               	movf	?___fpclassifyf^0,w,c
  9179  0001B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9180  0001B8  A4D8               	btfss	status,2,c
  9181  0001BA  EFE1  F000         	goto	u10101
  9182  0001BE  EFE3  F000         	goto	u10100
  9183  0001C2                     u10101:
  9184  0001C2  EF23  F001         	goto	l9199
  9185  0001C6                     u10100:
  9186  0001C6  0EBF               	movlw	191
  9187  0001C8  0100               	movlb	0	; () banked
  9188  0001CA  6F84               	movwf	??_efgtoa& (0+255),b
  9189  0001CC  0EFF               	movlw	255
  9190  0001CE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9191  0001D0  5183               	movf	efgtoa@c& (0+255),w,b
  9192  0001D2  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9193  0001D4  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9194  0001D6  5184               	movf	??_efgtoa& (0+255),w,b
  9195  0001D8  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9196  0001DA  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9197  0001DC  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9198  0001DE  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9199  0001E0  E10A               	bnz	u10110
  9200  0001E2  0E1A               	movlw	26
  9201  0001E4  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9202  0001E6  A0D8               	btfss	status,0,c
  9203  0001E8  EFF8  F000         	goto	u10111
  9204  0001EC  EFFB  F000         	goto	u10110
  9205  0001F0                     u10111:
  9206  0001F0  0E01               	movlw	1
  9207  0001F2  EFFC  F000         	goto	u10120
  9208  0001F6                     u10110:
  9209  0001F6  0E00               	movlw	0
  9210  0001F8                     u10120:
  9211  0001F8  6F91               	movwf	_efgtoa$945& (0+255),b
  9212  0001FA  6B92               	clrf	(_efgtoa$945+1)& (0+255),b
  9213  0001FC                     
  9214                           ; BSR set to: 0
  9215  0001FC  5191               	movf	_efgtoa$945& (0+255),w,b
  9216  0001FE  1192               	iorwf	(_efgtoa$945+1)& (0+255),w,b
  9217  000200  B4D8               	btfsc	status,2,c
  9218  000202  EF05  F001         	goto	u10131
  9219  000206  EF07  F001         	goto	u10130
  9220  00020A                     u10131:
  9221  00020A  EF15  F001         	goto	l9191
  9222  00020E                     u10130:
  9223  00020E                     
  9224                           ; BSR set to: 0
  9225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9226  00020E  0E41               	movlw	low _dbuf
  9227  000210  25BB               	addwf	efgtoa@n& (0+255),w,b
  9228  000212  6E06               	movwf	strcpy@dest^0,c
  9229  000214  0E01               	movlw	high _dbuf
  9230  000216  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9231  000218  6E07               	movwf	(strcpy@dest+1)^0,c
  9232  00021A  0EF0               	movlw	low STR_25
  9233  00021C  6E08               	movwf	strcpy@src^0,c
  9234  00021E  0E7F               	movlw	high STR_25
  9235  000220  6E09               	movwf	(strcpy@src+1)^0,c
  9236  000222  EC56  F028         	call	_strcpy	;wreg free
  9237                           
  9238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9239  000226  EFB7  F000         	goto	l9175
  9240  00022A                     l9191:
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9244  00022A  0E41               	movlw	low _dbuf
  9245  00022C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9246  00022E  6E06               	movwf	strcpy@dest^0,c
  9247  000230  0E01               	movlw	high _dbuf
  9248  000232  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9249  000234  6E07               	movwf	(strcpy@dest+1)^0,c
  9250  000236  0EF8               	movlw	low STR_26
  9251  000238  6E08               	movwf	strcpy@src^0,c
  9252  00023A  0E7F               	movlw	high STR_26
  9253  00023C  6E09               	movwf	(strcpy@src+1)^0,c
  9254  00023E  EC56  F028         	call	_strcpy	;wreg free
  9255  000242  EFB7  F000         	goto	l9175
  9256  000246                     l9199:
  9257                           
  9258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9259  000246  0E00               	movlw	0
  9260  000248  0100               	movlb	0	; () banked
  9261  00024A  6FBD               	movwf	efgtoa@u& (0+255),b
  9262  00024C  0E00               	movlw	0
  9263  00024E  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9264  000250  0E80               	movlw	128
  9265  000252  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9266  000254  0E3F               	movlw	63
  9267  000256  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9268                           
  9269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9270  000258  0E00               	movlw	0
  9271  00025A  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9272  00025C  0E00               	movlw	0
  9273  00025E  6FB9               	movwf	efgtoa@e& (0+255),b
  9274  000260                     
  9275                           ; BSR set to: 0
  9276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9277  000260  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  9278  000264  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9279  000268  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9280  00026C  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9281  000270  0E00               	movlw	0
  9282  000272  6E0A               	movwf	___fleq@ff2^0,c
  9283  000274  0E00               	movlw	0
  9284  000276  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9285  000278  0E00               	movlw	0
  9286  00027A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9287  00027C  0E00               	movlw	0
  9288  00027E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9289  000280  ECB3  F024         	call	___fleq	;wreg free
  9290  000284  B0D8               	btfsc	status,0,c
  9291  000286  EF47  F001         	goto	u10141
  9292  00028A  EF49  F001         	goto	u10140
  9293  00028E                     u10141:
  9294  00028E  EFCC  F001         	goto	l9217
  9295  000292                     u10140:
  9296  000292  EF68  F001         	goto	l9209
  9297  000296                     l9205:
  9298                           
  9299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9300  000296  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9301  00029A  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9302  00029E  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9303  0002A2  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9304  0002A6  0E00               	movlw	0
  9305  0002A8  6E1F               	movwf	___flmul@a^0,c
  9306  0002AA  0E00               	movlw	0
  9307  0002AC  6E20               	movwf	(___flmul@a+1)^0,c
  9308  0002AE  0E20               	movlw	32
  9309  0002B0  6E21               	movwf	(___flmul@a+2)^0,c
  9310  0002B2  0E41               	movlw	65
  9311  0002B4  6E22               	movwf	(___flmul@a+3)^0,c
  9312  0002B6  ECF7  F00F         	call	___flmul	;wreg free
  9313  0002BA  C01B  F0BD         	movff	?___flmul,efgtoa@u
  9314  0002BE  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  9315  0002C2  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  9316  0002C6  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  9317  0002CA                     
  9318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9319  0002CA  0100               	movlb	0	; () banked
  9320  0002CC  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  9321  0002CE  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  9322  0002D0                     l9209:
  9323                           
  9324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9325  0002D0  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9326  0002D4  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9327  0002D8  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9328  0002DC  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9329  0002E0  0E00               	movlw	0
  9330  0002E2  6E1F               	movwf	___flmul@a^0,c
  9331  0002E4  0E00               	movlw	0
  9332  0002E6  6E20               	movwf	(___flmul@a+1)^0,c
  9333  0002E8  0E20               	movlw	32
  9334  0002EA  6E21               	movwf	(___flmul@a+2)^0,c
  9335  0002EC  0E41               	movlw	65
  9336  0002EE  6E22               	movwf	(___flmul@a+3)^0,c
  9337  0002F0  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9338  0002F4  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9339  0002F8  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9340  0002FC  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9341  000300  ECF7  F00F         	call	___flmul	;wreg free
  9342  000304  C01B  F038         	movff	?___flmul,___flge@ff2
  9343  000308  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  9344  00030C  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  9345  000310  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  9346  000314  EC10  F021         	call	___flge	;wreg free
  9347  000318  B0D8               	btfsc	status,0,c
  9348  00031A  EF91  F001         	goto	u10151
  9349  00031E  EF93  F001         	goto	u10150
  9350  000322                     u10151:
  9351  000322  EF4B  F001         	goto	l9205
  9352  000326                     u10150:
  9353  000326  EFB3  F001         	goto	l9215
  9354  00032A                     l9211:
  9355                           
  9356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9357  00032A  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9358  00032E  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9359  000332  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9360  000336  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9361  00033A  0E00               	movlw	0
  9362  00033C  6E48               	movwf	___fldiv@a^0,c
  9363  00033E  0E00               	movlw	0
  9364  000340  6E49               	movwf	(___fldiv@a+1)^0,c
  9365  000342  0E20               	movlw	32
  9366  000344  6E4A               	movwf	(___fldiv@a+2)^0,c
  9367  000346  0E41               	movlw	65
  9368  000348  6E4B               	movwf	(___fldiv@a+3)^0,c
  9369  00034A  ECE5  F013         	call	___fldiv	;wreg free
  9370  00034E  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9371  000352  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9372  000356  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9373  00035A  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9374  00035E                     
  9375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9376  00035E  0100               	movlb	0	; () banked
  9377  000360  07B9               	decf	efgtoa@e& (0+255),f,b
  9378  000362  A0D8               	btfss	status,0,c
  9379  000364  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  9380  000366                     l9215:
  9381                           
  9382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9383  000366  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9384  00036A  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9385  00036E  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9386  000372  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9387  000376  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  9388  00037A  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  9389  00037E  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  9390  000382  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  9391  000386  EC10  F021         	call	___flge	;wreg free
  9392  00038A  A0D8               	btfss	status,0,c
  9393  00038C  EFCA  F001         	goto	u10161
  9394  000390  EFCC  F001         	goto	u10160
  9395  000394                     u10161:
  9396  000394  EF95  F001         	goto	l9211
  9397  000398                     u10160:
  9398  000398                     l9217:
  9399                           
  9400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9401  000398  C083  F00C         	movff	efgtoa@c,tolower@c
  9402  00039C  6A0D               	clrf	(tolower@c+1)^0,c
  9403  00039E  ECF7  F027         	call	_tolower	;wreg free
  9404  0003A2  500C               	movf	?_tolower^0,w,c
  9405  0003A4  0100               	movlb	0	; () banked
  9406  0003A6  6FAA               	movwf	efgtoa@mode& (0+255),b
  9407  0003A8                     
  9408                           ; BSR set to: 0
  9409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9410  0003A8  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  9411  0003AC                     
  9412                           ; BSR set to: 0
  9413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9414  0003AC  0E67               	movlw	103
  9415  0003AE  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9416  0003B0  A4D8               	btfss	status,2,c
  9417  0003B2  EFDD  F001         	goto	u10171
  9418  0003B6  EFDF  F001         	goto	u10170
  9419  0003BA                     u10171:
  9420  0003BA  EF07  F002         	goto	l9231
  9421  0003BE                     u10170:
  9422  0003BE                     
  9423                           ; BSR set to: 0
  9424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9425  0003BE  0101               	movlb	1	; () banked
  9426  0003C0  5134               	movf	_prec& (0+255),w,b
  9427  0003C2  1135               	iorwf	(_prec+1)& (0+255),w,b
  9428  0003C4  A4D8               	btfss	status,2,c
  9429  0003C6  EFE7  F001         	goto	u10181
  9430  0003CA  EFE9  F001         	goto	u10180
  9431  0003CE                     u10181:
  9432  0003CE  EFED  F001         	goto	l9227
  9433  0003D2                     u10180:
  9434  0003D2                     
  9435                           ; BSR set to: 1
  9436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9437  0003D2  0E00               	movlw	0
  9438  0003D4  6F35               	movwf	(_prec+1)& (0+255),b
  9439  0003D6  0E01               	movlw	1
  9440  0003D8  6F34               	movwf	_prec& (0+255),b
  9441  0003DA                     l9227:
  9442                           
  9443                           ; BSR set to: 1
  9444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9445  0003DA  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9446  0003DC  EFFA  F001         	goto	u10190
  9447  0003E0  5135               	movf	(_prec+1)& (0+255),w,b
  9448  0003E2  E106               	bnz	u10191
  9449  0003E4  0534               	decf	_prec& (0+255),w,b
  9450  0003E6  B0D8               	btfsc	status,0,c
  9451  0003E8  EFF8  F001         	goto	u10191
  9452  0003EC  EFFA  F001         	goto	u10190
  9453  0003F0                     u10191:
  9454  0003F0  EF01  F002         	goto	l868
  9455  0003F4                     u10190:
  9456  0003F4                     l9229:
  9457                           
  9458                           ; BSR set to: 1
  9459  0003F4  0E00               	movlw	0
  9460  0003F6  0100               	movlb	0	; () banked
  9461  0003F8  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  9462  0003FA  0E06               	movlw	6
  9463  0003FC  6FA5               	movwf	efgtoa@p& (0+255),b
  9464  0003FE  EF11  F002         	goto	l9237
  9465  000402                     l868:
  9466                           
  9467                           ; BSR set to: 1
  9468  000402  C134  F0A5         	movff	_prec,efgtoa@p
  9469  000406  C135  F0A6         	movff	_prec+1,efgtoa@p+1
  9470  00040A  EF11  F002         	goto	l9237
  9471  00040E                     l9231:
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9475  00040E  0101               	movlb	1	; () banked
  9476  000410  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9477  000412  EF0D  F002         	goto	u10201
  9478  000416  EF0F  F002         	goto	u10200
  9479  00041A                     u10201:
  9480  00041A  EFFA  F001         	goto	l9229
  9481  00041E                     u10200:
  9482  00041E  EF01  F002         	goto	l868
  9483  000422                     l9237:
  9484                           
  9485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9486  000422  0E67               	movlw	103
  9487  000424  0100               	movlb	0	; () banked
  9488  000426  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9489  000428  A4D8               	btfss	status,2,c
  9490  00042A  EF19  F002         	goto	u10211
  9491  00042E  EF1B  F002         	goto	u10210
  9492  000432                     u10211:
  9493  000432  EF4A  F002         	goto	l9247
  9494  000436                     u10210:
  9495  000436                     
  9496                           ; BSR set to: 0
  9497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9498  000436  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  9499  000438  EF29  F002         	goto	u10220
  9500  00043C  0EFC               	movlw	252
  9501  00043E  5DB9               	subwf	efgtoa@e& (0+255),w,b
  9502  000440  0EFF               	movlw	255
  9503  000442  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9504  000444  A0D8               	btfss	status,0,c
  9505  000446  EF27  F002         	goto	u10221
  9506  00044A  EF29  F002         	goto	u10220
  9507  00044E                     u10221:
  9508  00044E  EF48  F002         	goto	l9245
  9509  000452                     u10220:
  9510  000452                     
  9511                           ; BSR set to: 0
  9512  000452  0EFF               	movlw	255
  9513  000454  6F84               	movwf	??_efgtoa& (0+255),b
  9514  000456  0EFF               	movlw	255
  9515  000458  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9516  00045A  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  9517  00045E  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  9518  000462  5184               	movf	??_efgtoa& (0+255),w,b
  9519  000464  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9520  000466  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9521  000468  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9522  00046A  51B9               	movf	efgtoa@e& (0+255),w,b
  9523  00046C  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9524  00046E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9525  000470  0A80               	xorlw	128
  9526  000472  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  9527  000474  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9528  000476  0A80               	xorlw	128
  9529  000478  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9530  00047A  A0D8               	btfss	status,0,c
  9531  00047C  EF42  F002         	goto	u10231
  9532  000480  EF44  F002         	goto	u10230
  9533  000484                     u10231:
  9534  000484  EF48  F002         	goto	l9245
  9535  000488                     u10230:
  9536  000488                     
  9537                           ; BSR set to: 0
  9538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9539  000488  0E66               	movlw	102
  9540  00048A  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9541                           
  9542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9543  00048C  EF4A  F002         	goto	l9247
  9544  000490                     l9245:
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9548  000490  0E65               	movlw	101
  9549  000492  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9550  000494                     l9247:
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9554  000494  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  9555  000498  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  9556  00049C                     
  9557                           ; BSR set to: 0
  9558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9559  00049C  0E67               	movlw	103
  9560  00049E  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9561  0004A0  A4D8               	btfss	status,2,c
  9562  0004A2  EF55  F002         	goto	u10241
  9563  0004A6  EF57  F002         	goto	u10240
  9564  0004AA                     u10241:
  9565  0004AA  EF67  F002         	goto	l9255
  9566  0004AE                     u10240:
  9567  0004AE                     
  9568                           ; BSR set to: 0
  9569  0004AE  0E66               	movlw	102
  9570  0004B0  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9571  0004B2  A4D8               	btfss	status,2,c
  9572  0004B4  EF5E  F002         	goto	u10251
  9573  0004B8  EF60  F002         	goto	u10250
  9574  0004BC                     u10251:
  9575  0004BC  EF69  F002         	goto	l9257
  9576  0004C0                     u10250:
  9577  0004C0                     
  9578                           ; BSR set to: 0
  9579  0004C0  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9580  0004C2  EF67  F002         	goto	u10260
  9581  0004C6  EF65  F002         	goto	u10261
  9582  0004CA                     u10261:
  9583  0004CA  EF69  F002         	goto	l9257
  9584  0004CE                     u10260:
  9585  0004CE                     l9255:
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9589  0004CE  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  9590  0004D0  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  9591  0004D2                     l9257:
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9595  0004D2  0E66               	movlw	102
  9596  0004D4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9597  0004D6  A4D8               	btfss	status,2,c
  9598  0004D8  EF70  F002         	goto	u10271
  9599  0004DC  EF72  F002         	goto	u10270
  9600  0004E0                     u10271:
  9601  0004E0  EF92  F002         	goto	l9267
  9602  0004E4                     u10270:
  9603  0004E4                     
  9604                           ; BSR set to: 0
  9605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9606  0004E4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9607  0004E6  EF79  F002         	goto	u10280
  9608  0004EA  EF77  F002         	goto	u10281
  9609  0004EE                     u10281:
  9610  0004EE  EF85  F002         	goto	l9263
  9611  0004F2                     u10280:
  9612  0004F2                     
  9613                           ; BSR set to: 0
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9615  0004F2  0E00               	movlw	0
  9616  0004F4  6FBD               	movwf	efgtoa@u& (0+255),b
  9617  0004F6  0E00               	movlw	0
  9618  0004F8  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9619  0004FA  0E80               	movlw	128
  9620  0004FC  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9621  0004FE  0E3F               	movlw	63
  9622  000500  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9623                           
  9624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9625  000502  0E00               	movlw	0
  9626  000504  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9627  000506  0E00               	movlw	0
  9628  000508  6FB9               	movwf	efgtoa@e& (0+255),b
  9629  00050A                     l9263:
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9633  00050A  0E67               	movlw	103
  9634  00050C  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9635  00050E  B4D8               	btfsc	status,2,c
  9636  000510  EF8C  F002         	goto	u10291
  9637  000514  EF8E  F002         	goto	u10290
  9638  000518                     u10291:
  9639  000518  EF92  F002         	goto	l9267
  9640  00051C                     u10290:
  9641  00051C                     
  9642                           ; BSR set to: 0
  9643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9644  00051C  51B9               	movf	efgtoa@e& (0+255),w,b
  9645  00051E  279D               	addwf	efgtoa@m& (0+255),f,b
  9646  000520  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9647  000522  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9648  000524                     l9267:
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9652  000524  0E00               	movlw	0
  9653  000526  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  9654  000528  0E00               	movlw	0
  9655  00052A  6FB3               	movwf	efgtoa@i& (0+255),b
  9656  00052C                     
  9657                           ; BSR set to: 0
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9659  00052C  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  9660  000530  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  9661  000534  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  9662  000538  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  9663  00053C                     
  9664                           ; BSR set to: 0
  9665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9666  00053C  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  9667  000540  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  9668  000544  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  9669  000548  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  9670                           
  9671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9672  00054C  EF23  F003         	goto	l9281
  9673  000550                     l9273:
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9677  000550  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  9678  000554  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  9679  000558  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  9680  00055C  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  9681  000560  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  9682  000564  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  9683  000568  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  9684  00056C  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  9685  000570  ECE5  F013         	call	___fldiv	;wreg free
  9686  000574  C044  F050         	movff	?___fldiv,floorf@x
  9687  000578  C045  F051         	movff	?___fldiv+1,floorf@x+1
  9688  00057C  C046  F052         	movff	?___fldiv+2,floorf@x+2
  9689  000580  C047  F053         	movff	?___fldiv+3,floorf@x+3
  9690  000584  EC4B  F018         	call	_floorf	;wreg free
  9691  000588  C050  F0AF         	movff	?_floorf,efgtoa@l
  9692  00058C  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  9693  000590  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  9694  000594  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  9695                           
  9696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9697  000598  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  9698  00059C  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  9699  0005A0  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  9700  0005A4  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  9701  0005A8  EC09  F020         	call	___fltol	;wreg free
  9702  0005AC  C072  F0A1         	movff	?___fltol,efgtoa@d
  9703  0005B0  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  9704  0005B4                     
  9705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9706  0005B4  C0AB  F044         	movff	efgtoa@h,___flsub@b
  9707  0005B8  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  9708  0005BC  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  9709  0005C0  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  9710  0005C4  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  9711  0005C8  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  9712  0005CC  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  9713  0005D0  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  9714  0005D4  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  9715  0005D8  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  9716  0005DC  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  9717  0005E0  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  9718  0005E4  ECF7  F00F         	call	___flmul	;wreg free
  9719  0005E8  C01B  F048         	movff	?___flmul,___flsub@a
  9720  0005EC  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  9721  0005F0  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  9722  0005F4  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  9723  0005F8  ECCF  F029         	call	___flsub	;wreg free
  9724  0005FC  C044  F0AB         	movff	?___flsub,efgtoa@h
  9725  000600  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  9726  000604  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  9727  000608  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  9728  00060C                     
  9729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9730  00060C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9731  000610  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9732  000614  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9733  000618  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9734  00061C  0E00               	movlw	0
  9735  00061E  6E48               	movwf	___fldiv@a^0,c
  9736  000620  0E00               	movlw	0
  9737  000622  6E49               	movwf	(___fldiv@a+1)^0,c
  9738  000624  0E20               	movlw	32
  9739  000626  6E4A               	movwf	(___fldiv@a+2)^0,c
  9740  000628  0E41               	movlw	65
  9741  00062A  6E4B               	movwf	(___fldiv@a+3)^0,c
  9742  00062C  ECE5  F013         	call	___fldiv	;wreg free
  9743  000630  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9744  000634  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9745  000638  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9746  00063C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9747  000640                     
  9748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9749  000640  0100               	movlb	0	; () banked
  9750  000642  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  9751  000644  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  9752  000646                     l9281:
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9756  000646  519D               	movf	efgtoa@m& (0+255),w,b
  9757  000648  5DB3               	subwf	efgtoa@i& (0+255),w,b
  9758  00064A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  9759  00064C  0A80               	xorlw	128
  9760  00064E  6F84               	movwf	??_efgtoa& (0+255),b
  9761  000650  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  9762  000652  0A80               	xorlw	128
  9763  000654  5984               	subwfb	??_efgtoa& (0+255),w,b
  9764  000656  A0D8               	btfss	status,0,c
  9765  000658  EF30  F003         	goto	u10301
  9766  00065C  EF32  F003         	goto	u10300
  9767  000660                     u10301:
  9768  000660  EFA8  F002         	goto	l9273
  9769  000664                     u10300:
  9770  000664                     
  9771                           ; BSR set to: 0
  9772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9773  000664  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9774  000668  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9775  00066C  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9776  000670  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9777  000674  0E00               	movlw	0
  9778  000676  6E1F               	movwf	___flmul@a^0,c
  9779  000678  0E00               	movlw	0
  9780  00067A  6E20               	movwf	(___flmul@a+1)^0,c
  9781  00067C  0EA0               	movlw	160
  9782  00067E  6E21               	movwf	(___flmul@a+2)^0,c
  9783  000680  0E40               	movlw	64
  9784  000682  6E22               	movwf	(___flmul@a+3)^0,c
  9785  000684  ECF7  F00F         	call	___flmul	;wreg free
  9786  000688  C01B  F0AF         	movff	?___flmul,efgtoa@l
  9787  00068C  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
  9788  000690  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
  9789  000694  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
  9790  000698                     
  9791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9792  000698  C0AB  F034         	movff	efgtoa@h,___flge@ff1
  9793  00069C  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
  9794  0006A0  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
  9795  0006A4  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
  9796  0006A8  C0AF  F038         	movff	efgtoa@l,___flge@ff2
  9797  0006AC  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
  9798  0006B0  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  9799  0006B4  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  9800  0006B8  EC10  F021         	call	___flge	;wreg free
  9801  0006BC  B0D8               	btfsc	status,0,c
  9802  0006BE  EF63  F003         	goto	u10311
  9803  0006C2  EF65  F003         	goto	u10310
  9804  0006C6                     u10311:
  9805  0006C6  EF70  F003         	goto	l9289
  9806  0006CA                     u10310:
  9807  0006CA                     
  9808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9809  0006CA  0E00               	movlw	0
  9810  0006CC  0100               	movlb	0	; () banked
  9811  0006CE  6FAF               	movwf	efgtoa@l& (0+255),b
  9812  0006D0  0E00               	movlw	0
  9813  0006D2  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  9814  0006D4  0E00               	movlw	0
  9815  0006D6  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  9816  0006D8  0E00               	movlw	0
  9817  0006DA  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  9818                           
  9819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9820  0006DC  EF99  F003         	goto	l9295
  9821  0006E0                     l9289:
  9822                           
  9823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9824  0006E0  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
  9825  0006E4  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  9826  0006E8  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  9827  0006EC  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  9828  0006F0  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
  9829  0006F4  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  9830  0006F8  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  9831  0006FC  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  9832  000700  ECB3  F024         	call	___fleq	;wreg free
  9833  000704  A0D8               	btfss	status,0,c
  9834  000706  EF87  F003         	goto	u10321
  9835  00070A  EF89  F003         	goto	u10320
  9836  00070E                     u10321:
  9837  00070E  EF99  F003         	goto	l9295
  9838  000712                     u10320:
  9839  000712  0100               	movlb	0	; () banked
  9840  000714  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  9841  000716  EF8F  F003         	goto	u10331
  9842  00071A  EF91  F003         	goto	u10330
  9843  00071E                     u10331:
  9844  00071E  EF99  F003         	goto	l9295
  9845  000722                     u10330:
  9846  000722                     
  9847                           ; BSR set to: 0
  9848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9849  000722  0E00               	movlw	0
  9850  000724  6FAF               	movwf	efgtoa@l& (0+255),b
  9851  000726  0E00               	movlw	0
  9852  000728  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  9853  00072A  0E00               	movlw	0
  9854  00072C  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  9855  00072E  0E00               	movlw	0
  9856  000730  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  9857  000732                     l9295:
  9858                           
  9859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9860  000732  C0B5  F034         	movff	efgtoa@g,___fladd@b
  9861  000736  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
  9862  00073A  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
  9863  00073E  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
  9864  000742  C0AF  F038         	movff	efgtoa@l,___fladd@a
  9865  000746  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
  9866  00074A  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  9867  00074E  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  9868  000752  EC80  F00B         	call	___fladd	;wreg free
  9869  000756  C034  F0AB         	movff	?___fladd,efgtoa@h
  9870  00075A  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
  9871  00075E  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
  9872  000762  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
  9873  000766                     
  9874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9875  000766  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
  9876  00076A  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  9877  00076E  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  9878  000772  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  9879  000776                     
  9880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9881  000776  0E65               	movlw	101
  9882  000778  0100               	movlb	0	; () banked
  9883  00077A  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9884  00077C  B4D8               	btfsc	status,2,c
  9885  00077E  EFC3  F003         	goto	u10341
  9886  000782  EFC5  F003         	goto	u10340
  9887  000786                     u10341:
  9888  000786  EFCB  F003         	goto	l9303
  9889  00078A                     u10340:
  9890  00078A                     
  9891                           ; BSR set to: 0
  9892  00078A  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
  9893  00078E  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  9894  000792  EFCF  F003         	goto	l894
  9895  000796                     l9303:
  9896                           
  9897                           ; BSR set to: 0
  9898  000796  0E00               	movlw	0
  9899  000798  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  9900  00079A  0E00               	movlw	0
  9901  00079C  6F9F               	movwf	efgtoa@ne& (0+255),b
  9902  00079E                     l894:
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9906  00079E  0E00               	movlw	0
  9907  0007A0  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  9908  0007A2  0E00               	movlw	0
  9909  0007A4  6F9B               	movwf	efgtoa@pp& (0+255),b
  9910                           
  9911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9912  0007A6  0E00               	movlw	0
  9913  0007A8  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  9914  0007AA  0E00               	movlw	0
  9915  0007AC  6F99               	movwf	efgtoa@t& (0+255),b
  9916                           
  9917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9918  0007AE  0E00               	movlw	0
  9919  0007B0  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  9920  0007B2  0E00               	movlw	0
  9921  0007B4  6FB3               	movwf	efgtoa@i& (0+255),b
  9922                           
  9923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9924  0007B6  EFCB  F004         	goto	l9353
  9925  0007BA                     l9305:
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9929  0007BA  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  9930  0007BE  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  9931  0007C2  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  9932  0007C6  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  9933  0007CA  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  9934  0007CE  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  9935  0007D2  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  9936  0007D6  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  9937  0007DA  ECE5  F013         	call	___fldiv	;wreg free
  9938  0007DE  C044  F050         	movff	?___fldiv,floorf@x
  9939  0007E2  C045  F051         	movff	?___fldiv+1,floorf@x+1
  9940  0007E6  C046  F052         	movff	?___fldiv+2,floorf@x+2
  9941  0007EA  C047  F053         	movff	?___fldiv+3,floorf@x+3
  9942  0007EE  EC4B  F018         	call	_floorf	;wreg free
  9943  0007F2  C050  F0AF         	movff	?_floorf,efgtoa@l
  9944  0007F6  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  9945  0007FA  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  9946  0007FE  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  9947                           
  9948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9949  000802  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  9950  000806  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  9951  00080A  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  9952  00080E  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  9953  000812  EC09  F020         	call	___fltol	;wreg free
  9954  000816  C072  F0A1         	movff	?___fltol,efgtoa@d
  9955  00081A  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  9956  00081E                     
  9957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9958  00081E  B855               	btfsc	_flags^0,4,c
  9959  000820  EF14  F004         	goto	u10351
  9960  000824  EF16  F004         	goto	u10350
  9961  000828                     u10351:
  9962  000828  EF34  F004         	goto	l9317
  9963  00082C                     u10350:
  9964  00082C  0100               	movlb	0	; () banked
  9965  00082E  51A1               	movf	efgtoa@d& (0+255),w,b
  9966  000830  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9967  000832  A4D8               	btfss	status,2,c
  9968  000834  EF1E  F004         	goto	u10361
  9969  000838  EF20  F004         	goto	u10360
  9970  00083C                     u10361:
  9971  00083C  EF34  F004         	goto	l9317
  9972  000840                     u10360:
  9973  000840                     
  9974                           ; BSR set to: 0
  9975  000840  0E67               	movlw	103
  9976  000842  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9977  000844  A4D8               	btfss	status,2,c
  9978  000846  EF27  F004         	goto	u10371
  9979  00084A  EF29  F004         	goto	u10370
  9980  00084E                     u10371:
  9981  00084E  EF34  F004         	goto	l9317
  9982  000852                     u10370:
  9983  000852                     
  9984                           ; BSR set to: 0
  9985  000852  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9986  000854  EF30  F004         	goto	u10380
  9987  000858  EF2E  F004         	goto	u10381
  9988  00085C                     u10381:
  9989  00085C  EF34  F004         	goto	l9317
  9990  000860                     u10380:
  9991  000860                     
  9992                           ; BSR set to: 0
  9993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9994  000860  4B99               	infsnz	efgtoa@t& (0+255),f,b
  9995  000862  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  9996                           
  9997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9998  000864  EF7F  F004         	goto	l9345
  9999  000868                     l9317:
 10000                           
 10001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10002  000868  0100               	movlb	0	; () banked
 10003  00086A  519B               	movf	efgtoa@pp& (0+255),w,b
 10004  00086C  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10005  00086E  A4D8               	btfss	status,2,c
 10006  000870  EF3C  F004         	goto	u10391
 10007  000874  EF3E  F004         	goto	u10390
 10008  000878                     u10391:
 10009  000878  EF68  F004         	goto	l9337
 10010  00087C                     u10390:
 10011  00087C                     
 10012                           ; BSR set to: 0
 10013  00087C  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10014  00087E  EF45  F004         	goto	u10400
 10015  000882  EF43  F004         	goto	u10401
 10016  000886                     u10401:
 10017  000886  EF68  F004         	goto	l9337
 10018  00088A                     u10400:
 10019  00088A                     
 10020                           ; BSR set to: 0
 10021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10022  00088A  0E41               	movlw	low _dbuf
 10023  00088C  25BB               	addwf	efgtoa@n& (0+255),w,b
 10024  00088E  6ED9               	movwf	fsr2l,c
 10025  000890  0E01               	movlw	high _dbuf
 10026  000892  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10027  000894  6EDA               	movwf	fsr2h,c
 10028  000896  0E2E               	movlw	46
 10029  000898  6EDF               	movwf	indf2,c
 10030  00089A                     
 10031                           ; BSR set to: 0
 10032  00089A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10033  00089C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10034  00089E                     
 10035                           ; BSR set to: 0
 10036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10037  00089E  07A8               	decf	efgtoa@w& (0+255),f,b
 10038  0008A0  A0D8               	btfss	status,0,c
 10039  0008A2  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10040  0008A4                     
 10041                           ; BSR set to: 0
 10042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10043  0008A4  0E00               	movlw	0
 10044  0008A6  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10045  0008A8  0E01               	movlw	1
 10046  0008AA  6F9B               	movwf	efgtoa@pp& (0+255),b
 10047  0008AC  EF68  F004         	goto	l9337
 10048  0008B0                     l9329:
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10052  0008B0  0E41               	movlw	low _dbuf
 10053  0008B2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10054  0008B4  6ED9               	movwf	fsr2l,c
 10055  0008B6  0E01               	movlw	high _dbuf
 10056  0008B8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10057  0008BA  6EDA               	movwf	fsr2h,c
 10058  0008BC  0E30               	movlw	48
 10059  0008BE  6EDF               	movwf	indf2,c
 10060  0008C0                     
 10061                           ; BSR set to: 0
 10062  0008C0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10063  0008C2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10064  0008C4                     
 10065                           ; BSR set to: 0
 10066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10067  0008C4  07A8               	decf	efgtoa@w& (0+255),f,b
 10068  0008C6  A0D8               	btfss	status,0,c
 10069  0008C8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10070  0008CA                     
 10071                           ; BSR set to: 0
 10072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10073  0008CA  0799               	decf	efgtoa@t& (0+255),f,b
 10074  0008CC  A0D8               	btfss	status,0,c
 10075  0008CE  079A               	decf	(efgtoa@t+1)& (0+255),f,b
 10076  0008D0                     l9337:
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10080  0008D0  5199               	movf	efgtoa@t& (0+255),w,b
 10081  0008D2  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10082  0008D4  A4D8               	btfss	status,2,c
 10083  0008D6  EF6F  F004         	goto	u10411
 10084  0008DA  EF71  F004         	goto	u10410
 10085  0008DE                     u10411:
 10086  0008DE  EF58  F004         	goto	l9329
 10087  0008E2                     u10410:
 10088  0008E2                     
 10089                           ; BSR set to: 0
 10090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10091  0008E2  0E41               	movlw	low _dbuf
 10092  0008E4  25BB               	addwf	efgtoa@n& (0+255),w,b
 10093  0008E6  6ED9               	movwf	fsr2l,c
 10094  0008E8  0E01               	movlw	high _dbuf
 10095  0008EA  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10096  0008EC  6EDA               	movwf	fsr2h,c
 10097  0008EE  51A1               	movf	efgtoa@d& (0+255),w,b
 10098  0008F0  0F30               	addlw	48
 10099  0008F2  6EDF               	movwf	indf2,c
 10100  0008F4                     
 10101                           ; BSR set to: 0
 10102  0008F4  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10103  0008F6  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10104  0008F8                     
 10105                           ; BSR set to: 0
 10106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10107  0008F8  07A8               	decf	efgtoa@w& (0+255),f,b
 10108  0008FA  A0D8               	btfss	status,0,c
 10109  0008FC  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10110  0008FE                     l9345:
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10114  0008FE  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10115  000902  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10116  000906  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10117  00090A  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10118  00090E  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10119  000912  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10120  000916  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10121  00091A  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10122  00091E  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10123  000922  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10124  000926  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10125  00092A  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10126  00092E  ECF7  F00F         	call	___flmul	;wreg free
 10127  000932  C01B  F048         	movff	?___flmul,___flsub@a
 10128  000936  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10129  00093A  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10130  00093E  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10131  000942  ECCF  F029         	call	___flsub	;wreg free
 10132  000946  C044  F0AB         	movff	?___flsub,efgtoa@h
 10133  00094A  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10134  00094E  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10135  000952  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10136  000956                     
 10137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10138  000956  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10139  00095A  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10140  00095E  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10141  000962  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10142  000966  0E00               	movlw	0
 10143  000968  6E48               	movwf	___fldiv@a^0,c
 10144  00096A  0E00               	movlw	0
 10145  00096C  6E49               	movwf	(___fldiv@a+1)^0,c
 10146  00096E  0E20               	movlw	32
 10147  000970  6E4A               	movwf	(___fldiv@a+2)^0,c
 10148  000972  0E41               	movlw	65
 10149  000974  6E4B               	movwf	(___fldiv@a+3)^0,c
 10150  000976  ECE5  F013         	call	___fldiv	;wreg free
 10151  00097A  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10152  00097E  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10153  000982  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10154  000986  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10155  00098A                     
 10156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10157  00098A  0100               	movlb	0	; () banked
 10158  00098C  079F               	decf	efgtoa@ne& (0+255),f,b
 10159  00098E  A0D8               	btfss	status,0,c
 10160  000990  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
 10161  000992                     
 10162                           ; BSR set to: 0
 10163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10164  000992  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10165  000994  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10166  000996                     l9353:
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10170  000996  519D               	movf	efgtoa@m& (0+255),w,b
 10171  000998  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10172  00099A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10173  00099C  0A80               	xorlw	128
 10174  00099E  6F84               	movwf	??_efgtoa& (0+255),b
 10175  0009A0  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10176  0009A2  0A80               	xorlw	128
 10177  0009A4  5984               	subwfb	??_efgtoa& (0+255),w,b
 10178  0009A6  B0D8               	btfsc	status,0,c
 10179  0009A8  EFD8  F004         	goto	u10421
 10180  0009AC  EFDA  F004         	goto	u10420
 10181  0009B0                     u10421:
 10182  0009B0  EFE8  F004         	goto	l9357
 10183  0009B4                     u10420:
 10184  0009B4                     
 10185                           ; BSR set to: 0
 10186  0009B4  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10187  0009B6  EFE6  F004         	goto	u10431
 10188  0009BA  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
 10189  0009BC  E109               	bnz	u10430
 10190  0009BE  0E4B               	movlw	75
 10191  0009C0  5DBB               	subwf	efgtoa@n& (0+255),w,b
 10192  0009C2  A0D8               	btfss	status,0,c
 10193  0009C4  EFE6  F004         	goto	u10431
 10194  0009C8  EFE8  F004         	goto	u10430
 10195  0009CC                     u10431:
 10196  0009CC  EFDD  F003         	goto	l9305
 10197  0009D0                     u10430:
 10198  0009D0                     l9357:
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10202  0009D0  519B               	movf	efgtoa@pp& (0+255),w,b
 10203  0009D2  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10204  0009D4  A4D8               	btfss	status,2,c
 10205  0009D6  EFEF  F004         	goto	u10441
 10206  0009DA  EFF1  F004         	goto	u10440
 10207  0009DE                     u10441:
 10208  0009DE  EF02  F005         	goto	l9365
 10209  0009E2                     u10440:
 10210  0009E2                     
 10211                           ; BSR set to: 0
 10212  0009E2  A855               	btfss	_flags^0,4,c
 10213  0009E4  EFF6  F004         	goto	u10451
 10214  0009E8  EFF8  F004         	goto	u10450
 10215  0009EC                     u10451:
 10216  0009EC  EF02  F005         	goto	l9365
 10217  0009F0                     u10450:
 10218  0009F0                     
 10219                           ; BSR set to: 0
 10220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10221  0009F0  0E41               	movlw	low _dbuf
 10222  0009F2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10223  0009F4  6ED9               	movwf	fsr2l,c
 10224  0009F6  0E01               	movlw	high _dbuf
 10225  0009F8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10226  0009FA  6EDA               	movwf	fsr2h,c
 10227  0009FC  0E2E               	movlw	46
 10228  0009FE  6EDF               	movwf	indf2,c
 10229  000A00                     
 10230                           ; BSR set to: 0
 10231  000A00  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10232  000A02  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10233  000A04                     l9365:
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10237  000A04  0E41               	movlw	low _dbuf
 10238  000A06  25BB               	addwf	efgtoa@n& (0+255),w,b
 10239  000A08  6ED9               	movwf	fsr2l,c
 10240  000A0A  0E01               	movlw	high _dbuf
 10241  000A0C  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10242  000A0E  6EDA               	movwf	fsr2h,c
 10243  000A10  0E00               	movlw	0
 10244  000A12  6EDF               	movwf	indf2,c
 10245  000A14                     
 10246                           ; BSR set to: 0
 10247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10248  000A14  0E65               	movlw	101
 10249  000A16  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10250  000A18  A4D8               	btfss	status,2,c
 10251  000A1A  EF11  F005         	goto	u10461
 10252  000A1E  EF13  F005         	goto	u10460
 10253  000A22                     u10461:
 10254  000A22  EFBC  F000         	goto	l9177
 10255  000A26                     u10460:
 10256  000A26                     
 10257                           ; BSR set to: 0
 10258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10259  000A26  0E00               	movlw	0
 10260  000A28  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10261  000A2A  0E4F               	movlw	79
 10262  000A2C  6FB3               	movwf	efgtoa@i& (0+255),b
 10263  000A2E                     
 10264                           ; BSR set to: 0
 10265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10266  000A2E  0E41               	movlw	low _dbuf
 10267  000A30  25B3               	addwf	efgtoa@i& (0+255),w,b
 10268  000A32  6ED9               	movwf	fsr2l,c
 10269  000A34  0E01               	movlw	high _dbuf
 10270  000A36  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10271  000A38  6EDA               	movwf	fsr2h,c
 10272  000A3A  0E00               	movlw	0
 10273  000A3C  6EDF               	movwf	indf2,c
 10274  000A3E                     
 10275                           ; BSR set to: 0
 10276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10277  000A3E  0E00               	movlw	0
 10278  000A40  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10279  000A42  0E00               	movlw	0
 10280  000A44  6FA3               	movwf	efgtoa@sign& (0+255),b
 10281  000A46                     
 10282                           ; BSR set to: 0
 10283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10284  000A46  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10285  000A48  EF2A  F005         	goto	u10470
 10286  000A4C  EF28  F005         	goto	u10471
 10287  000A50                     u10471:
 10288  000A50  EF32  F005         	goto	l9381
 10289  000A54                     u10470:
 10290  000A54                     
 10291                           ; BSR set to: 0
 10292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10293  000A54  0E00               	movlw	0
 10294  000A56  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10295  000A58  0E01               	movlw	1
 10296  000A5A  6FA3               	movwf	efgtoa@sign& (0+255),b
 10297  000A5C                     
 10298                           ; BSR set to: 0
 10299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10300  000A5C  6DB9               	negf	efgtoa@e& (0+255),b
 10301  000A5E  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
 10302  000A60  B0D8               	btfsc	status,0,c
 10303  000A62  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
 10304  000A64                     l9381:
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10308  000A64  0E00               	movlw	0
 10309  000A66  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
 10310  000A68  0E02               	movlw	2
 10311  000A6A  6FA5               	movwf	efgtoa@p& (0+255),b
 10312                           
 10313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10314  000A6C  EF63  F005         	goto	l9393
 10315  000A70                     l9383:
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10319  000A70  07B3               	decf	efgtoa@i& (0+255),f,b
 10320  000A72  A0D8               	btfss	status,0,c
 10321  000A74  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10322  000A76                     
 10323                           ; BSR set to: 0
 10324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10325  000A76  0E41               	movlw	low _dbuf
 10326  000A78  25B3               	addwf	efgtoa@i& (0+255),w,b
 10327  000A7A  6ED9               	movwf	fsr2l,c
 10328  000A7C  0E01               	movlw	high _dbuf
 10329  000A7E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10330  000A80  6EDA               	movwf	fsr2h,c
 10331  000A82  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
 10332  000A86  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
 10333  000A8A  0E00               	movlw	0
 10334  000A8C  6E09               	movwf	(___awmod@divisor+1)^0,c
 10335  000A8E  0E0A               	movlw	10
 10336  000A90  6E08               	movwf	___awmod@divisor^0,c
 10337  000A92  EC05  F024         	call	___awmod	;wreg free
 10338  000A96  5006               	movf	?___awmod^0,w,c
 10339  000A98  0F30               	addlw	48
 10340  000A9A  6EDF               	movwf	indf2,c
 10341  000A9C                     
 10342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10343  000A9C  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
 10344  000AA0  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
 10345  000AA4  0E00               	movlw	0
 10346  000AA6  6E09               	movwf	(___awdiv@divisor+1)^0,c
 10347  000AA8  0E0A               	movlw	10
 10348  000AAA  6E08               	movwf	___awdiv@divisor^0,c
 10349  000AAC  ECE1  F022         	call	___awdiv	;wreg free
 10350  000AB0  C006  F0B9         	movff	?___awdiv,efgtoa@e
 10351  000AB4  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
 10352  000AB8                     
 10353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10354  000AB8  0100               	movlb	0	; () banked
 10355  000ABA  07A5               	decf	efgtoa@p& (0+255),f,b
 10356  000ABC  A0D8               	btfss	status,0,c
 10357  000ABE  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
 10358  000AC0                     
 10359                           ; BSR set to: 0
 10360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10361  000AC0  07A8               	decf	efgtoa@w& (0+255),f,b
 10362  000AC2  A0D8               	btfss	status,0,c
 10363  000AC4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10364  000AC6                     l9393:
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10368  000AC6  51B9               	movf	efgtoa@e& (0+255),w,b
 10369  000AC8  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10370  000ACA  A4D8               	btfss	status,2,c
 10371  000ACC  EF6A  F005         	goto	u10481
 10372  000AD0  EF6C  F005         	goto	u10480
 10373  000AD4                     u10481:
 10374  000AD4  EF38  F005         	goto	l9383
 10375  000AD8                     u10480:
 10376  000AD8                     
 10377                           ; BSR set to: 0
 10378  000AD8  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10379  000ADA  EF79  F005         	goto	u10490
 10380  000ADE  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
 10381  000AE0  E106               	bnz	u10491
 10382  000AE2  05A5               	decf	efgtoa@p& (0+255),w,b
 10383  000AE4  B0D8               	btfsc	status,0,c
 10384  000AE6  EF77  F005         	goto	u10491
 10385  000AEA  EF79  F005         	goto	u10490
 10386  000AEE                     u10491:
 10387  000AEE  EF38  F005         	goto	l9383
 10388  000AF2                     u10490:
 10389  000AF2                     
 10390                           ; BSR set to: 0
 10391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10392  000AF2  07B3               	decf	efgtoa@i& (0+255),f,b
 10393  000AF4  A0D8               	btfss	status,0,c
 10394  000AF6  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10395  000AF8                     
 10396                           ; BSR set to: 0
 10397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10398  000AF8  51A3               	movf	efgtoa@sign& (0+255),w,b
 10399  000AFA  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10400  000AFC  A4D8               	btfss	status,2,c
 10401  000AFE  EF83  F005         	goto	u10501
 10402  000B02  EF85  F005         	goto	u10500
 10403  000B06                     u10501:
 10404  000B06  EF8B  F005         	goto	l9403
 10405  000B0A                     u10500:
 10406  000B0A                     
 10407                           ; BSR set to: 0
 10408  000B0A  0E00               	movlw	0
 10409  000B0C  6F94               	movwf	(_efgtoa$949+1)& (0+255),b
 10410  000B0E  0E2B               	movlw	43
 10411  000B10  6F93               	movwf	_efgtoa$949& (0+255),b
 10412  000B12  EF8F  F005         	goto	l9405
 10413  000B16                     l9403:
 10414                           
 10415                           ; BSR set to: 0
 10416  000B16  0E00               	movlw	0
 10417  000B18  6F94               	movwf	(_efgtoa$949+1)& (0+255),b
 10418  000B1A  0E2D               	movlw	45
 10419  000B1C  6F93               	movwf	_efgtoa$949& (0+255),b
 10420  000B1E                     l9405:
 10421                           
 10422                           ; BSR set to: 0
 10423  000B1E  0E41               	movlw	low _dbuf
 10424  000B20  25B3               	addwf	efgtoa@i& (0+255),w,b
 10425  000B22  6ED9               	movwf	fsr2l,c
 10426  000B24  0E01               	movlw	high _dbuf
 10427  000B26  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10428  000B28  6EDA               	movwf	fsr2h,c
 10429  000B2A  C093  FFDF         	movff	_efgtoa$949,indf2
 10430  000B2E                     
 10431                           ; BSR set to: 0
 10432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10433  000B2E  07A8               	decf	efgtoa@w& (0+255),f,b
 10434  000B30  A0D8               	btfss	status,0,c
 10435  000B32  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10436  000B34                     
 10437                           ; BSR set to: 0
 10438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10439  000B34  07B3               	decf	efgtoa@i& (0+255),f,b
 10440  000B36  A0D8               	btfss	status,0,c
 10441  000B38  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10442  000B3A                     
 10443                           ; BSR set to: 0
 10444  000B3A  0EBF               	movlw	191
 10445  000B3C  6F84               	movwf	??_efgtoa& (0+255),b
 10446  000B3E  0EFF               	movlw	255
 10447  000B40  6F85               	movwf	(??_efgtoa+1)& (0+255),b
 10448  000B42  5183               	movf	efgtoa@c& (0+255),w,b
 10449  000B44  6F86               	movwf	(??_efgtoa+2)& (0+255),b
 10450  000B46  6B87               	clrf	(??_efgtoa+3)& (0+255),b
 10451  000B48  5184               	movf	??_efgtoa& (0+255),w,b
 10452  000B4A  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
 10453  000B4C  5185               	movf	(??_efgtoa+1)& (0+255),w,b
 10454  000B4E  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10455  000B50  5187               	movf	(??_efgtoa+3)& (0+255),w,b
 10456  000B52  E10A               	bnz	u10510
 10457  000B54  0E1A               	movlw	26
 10458  000B56  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
 10459  000B58  A0D8               	btfss	status,0,c
 10460  000B5A  EFB1  F005         	goto	u10511
 10461  000B5E  EFB4  F005         	goto	u10510
 10462  000B62                     u10511:
 10463  000B62  0E01               	movlw	1
 10464  000B64  EFB5  F005         	goto	u10520
 10465  000B68                     u10510:
 10466  000B68  0E00               	movlw	0
 10467  000B6A                     u10520:
 10468  000B6A  6F97               	movwf	_efgtoa$951& (0+255),b
 10469  000B6C  6B98               	clrf	(_efgtoa$951+1)& (0+255),b
 10470  000B6E                     
 10471                           ; BSR set to: 0
 10472  000B6E  5197               	movf	_efgtoa$951& (0+255),w,b
 10473  000B70  1198               	iorwf	(_efgtoa$951+1)& (0+255),w,b
 10474  000B72  A4D8               	btfss	status,2,c
 10475  000B74  EFBE  F005         	goto	u10531
 10476  000B78  EFC0  F005         	goto	u10530
 10477  000B7C                     u10531:
 10478  000B7C  EFC6  F005         	goto	l9419
 10479  000B80                     u10530:
 10480  000B80                     
 10481                           ; BSR set to: 0
 10482  000B80  0E00               	movlw	0
 10483  000B82  6F96               	movwf	(_efgtoa$950+1)& (0+255),b
 10484  000B84  0E65               	movlw	101
 10485  000B86  6F95               	movwf	_efgtoa$950& (0+255),b
 10486  000B88  EFCA  F005         	goto	l9421
 10487  000B8C                     l9419:
 10488                           
 10489                           ; BSR set to: 0
 10490  000B8C  0E00               	movlw	0
 10491  000B8E  6F96               	movwf	(_efgtoa$950+1)& (0+255),b
 10492  000B90  0E45               	movlw	69
 10493  000B92  6F95               	movwf	_efgtoa$950& (0+255),b
 10494  000B94                     l9421:
 10495                           
 10496                           ; BSR set to: 0
 10497  000B94  0E41               	movlw	low _dbuf
 10498  000B96  25B3               	addwf	efgtoa@i& (0+255),w,b
 10499  000B98  6ED9               	movwf	fsr2l,c
 10500  000B9A  0E01               	movlw	high _dbuf
 10501  000B9C  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10502  000B9E  6EDA               	movwf	fsr2h,c
 10503  000BA0  C095  FFDF         	movff	_efgtoa$950,indf2
 10504  000BA4                     
 10505                           ; BSR set to: 0
 10506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10507  000BA4  07A8               	decf	efgtoa@w& (0+255),f,b
 10508  000BA6  A0D8               	btfss	status,0,c
 10509  000BA8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10510  000BAA                     
 10511                           ; BSR set to: 0
 10512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10513  000BAA  0E41               	movlw	low _dbuf
 10514  000BAC  25BB               	addwf	efgtoa@n& (0+255),w,b
 10515  000BAE  6E06               	movwf	strcpy@dest^0,c
 10516  000BB0  0E01               	movlw	high _dbuf
 10517  000BB2  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10518  000BB4  6E07               	movwf	(strcpy@dest+1)^0,c
 10519  000BB6  0E41               	movlw	low _dbuf
 10520  000BB8  25B3               	addwf	efgtoa@i& (0+255),w,b
 10521  000BBA  6E08               	movwf	strcpy@src^0,c
 10522  000BBC  0E01               	movlw	high _dbuf
 10523  000BBE  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10524  000BC0  6E09               	movwf	(strcpy@src+1)^0,c
 10525  000BC2  EC56  F028         	call	_strcpy	;wreg free
 10526  000BC6  EFBC  F000         	goto	l9177
 10527  000BCA                     l850:
 10528  000BCA  0012               	return		;funcret
 10529  000BCC                     __end_of_efgtoa:
 10530                           	opt callstack 0
 10531                           
 10532 ;; *************** function _tolower *****************
 10533 ;; Defined at:
 10534 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;  c               2   11[COMRAM] int 
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  2   11[COMRAM] int 
 10541 ;; Registers used:
 10542 ;;		wreg, status,2, status,0
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10548 ;;      Params:         2       0       0       0       0       0       0       0       0
 10549 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10550 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10551 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10552 ;;Total ram usage:        8 bytes
 10553 ;; Hardware stack levels used:    1
 10554 ;; Hardware stack levels required when called:    3
 10555 ;; This function calls:
 10556 ;;		_isupper
 10557 ;; This function is called by:
 10558 ;;		_efgtoa
 10559 ;;		_vfpfcnvrt
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text37
 10564  004FEE                     __ptext37:
 10565                           	opt callstack 0
 10566  004FEE                     _tolower:
 10567                           	opt callstack 23
 10568  004FEE  0EBF               	movlw	191
 10569  004FF0  6E0E               	movwf	??_tolower^0,c
 10570  004FF2  0EFF               	movlw	255
 10571  004FF4  6E0F               	movwf	(??_tolower+1)^0,c
 10572  004FF6  C00C  F010         	movff	tolower@c,??_tolower+2
 10573  004FFA  C00D  F011         	movff	tolower@c+1,??_tolower+3
 10574  004FFE  500E               	movf	??_tolower^0,w,c
 10575  005000  2610               	addwf	(??_tolower+2)^0,f,c
 10576  005002  500F               	movf	(??_tolower+1)^0,w,c
 10577  005004  2211               	addwfc	(??_tolower+3)^0,f,c
 10578  005006  5011               	movf	(??_tolower+3)^0,w,c
 10579  005008  E10A               	bnz	u8730
 10580  00500A  0E1A               	movlw	26
 10581  00500C  5C10               	subwf	(??_tolower+2)^0,w,c
 10582  00500E  A0D8               	btfss	status,0,c
 10583  005010  EF0C  F028         	goto	u8731
 10584  005014  EF0F  F028         	goto	u8730
 10585  005018                     u8731:
 10586  005018  0E01               	movlw	1
 10587  00501A  EF10  F028         	goto	u8740
 10588  00501E                     u8730:
 10589  00501E  0E00               	movlw	0
 10590  005020                     u8740:
 10591  005020  6E12               	movwf	_tolower$1574^0,c
 10592  005022  6A13               	clrf	(_tolower$1574+1)^0,c
 10593  005024  5012               	movf	_tolower$1574^0,w,c
 10594  005026  1013               	iorwf	(_tolower$1574+1)^0,w,c
 10595  005028  B4D8               	btfsc	status,2,c
 10596  00502A  EF19  F028         	goto	u8751
 10597  00502E  EF1B  F028         	goto	u8750
 10598  005032                     u8751:
 10599  005032  EF22  F028         	goto	l1785
 10600  005036                     u8750:
 10601  005036  0E20               	movlw	32
 10602  005038  100C               	iorwf	tolower@c^0,w,c
 10603  00503A  6E0C               	movwf	?_tolower^0,c
 10604  00503C  500D               	movf	(tolower@c+1)^0,w,c
 10605  00503E  6E0D               	movwf	(?_tolower+1)^0,c
 10606  005040  EF26  F028         	goto	l1790
 10607  005044                     l1785:
 10608  005044  C00C  F00C         	movff	tolower@c,?_tolower
 10609  005048  C00D  F00D         	movff	tolower@c+1,?_tolower+1
 10610  00504C                     l1790:
 10611  00504C  0012               	return		;funcret
 10612  00504E                     __end_of_tolower:
 10613                           	opt callstack 0
 10614                           
 10615 ;; *************** function _isupper *****************
 10616 ;; Defined at:
 10617 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10618 ;; Parameters:    Size  Location     Type
 10619 ;;  c               2    5[COMRAM] int 
 10620 ;; Auto vars:     Size  Location     Type
 10621 ;;		None
 10622 ;; Return value:  Size  Location     Type
 10623 ;;                  2    5[COMRAM] int 
 10624 ;; Registers used:
 10625 ;;		wreg, status,2, status,0
 10626 ;; Tracked objects:
 10627 ;;		On entry : 0/0
 10628 ;;		On exit  : 0/0
 10629 ;;		Unchanged: 0/0
 10630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10631 ;;      Params:         2       0       0       0       0       0       0       0       0
 10632 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10633 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10634 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10635 ;;Total ram usage:        6 bytes
 10636 ;; Hardware stack levels used:    1
 10637 ;; Hardware stack levels required when called:    2
 10638 ;; This function calls:
 10639 ;;		Nothing
 10640 ;; This function is called by:
 10641 ;;		_efgtoa
 10642 ;;		_vfpfcnvrt
 10643 ;;		_tolower
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text38
 10648  005534                     __ptext38:
 10649                           	opt callstack 0
 10650  005534                     _isupper:
 10651                           	opt callstack 23
 10652  005534  0EBF               	movlw	191
 10653  005536  6E08               	movwf	??_isupper^0,c
 10654  005538  0EFF               	movlw	255
 10655  00553A  6E09               	movwf	(??_isupper+1)^0,c
 10656  00553C  C006  F00A         	movff	isupper@c,??_isupper+2
 10657  005540  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10658  005544  5008               	movf	??_isupper^0,w,c
 10659  005546  260A               	addwf	(??_isupper+2)^0,f,c
 10660  005548  5009               	movf	(??_isupper+1)^0,w,c
 10661  00554A  220B               	addwfc	(??_isupper+3)^0,f,c
 10662  00554C  500B               	movf	(??_isupper+3)^0,w,c
 10663  00554E  E10A               	bnz	u8100
 10664  005550  0E1A               	movlw	26
 10665  005552  5C0A               	subwf	(??_isupper+2)^0,w,c
 10666  005554  A0D8               	btfss	status,0,c
 10667  005556  EFAF  F02A         	goto	u8101
 10668  00555A  EFB2  F02A         	goto	u8100
 10669  00555E                     u8101:
 10670  00555E  0E01               	movlw	1
 10671  005560  EFB3  F02A         	goto	u8110
 10672  005564                     u8100:
 10673  005564  0E00               	movlw	0
 10674  005566                     u8110:
 10675  005566  6E06               	movwf	?_isupper^0,c
 10676  005568  6A07               	clrf	(?_isupper+1)^0,c
 10677  00556A  0012               	return		;funcret
 10678  00556C                     __end_of_isupper:
 10679                           	opt callstack 0
 10680                           
 10681 ;; *************** function _strcpy *****************
 10682 ;; Defined at:
 10683 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10686 ;;		 -> dbuf(80), 
 10687 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10688 ;;		 -> STR_26(4), STR_25(4), STR_22(4), STR_21(4), 
 10689 ;;		 -> dbuf(80), 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  d               2   13[COMRAM] PTR unsigned char 
 10692 ;;		 -> dbuf(80), 
 10693 ;;  s               2   11[COMRAM] PTR const unsigned char 
 10694 ;;		 -> STR_26(4), STR_25(4), STR_22(4), STR_21(4), 
 10695 ;;		 -> dbuf(80), 
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  2    5[COMRAM] PTR unsigned char 
 10698 ;; Registers used:
 10699 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10705 ;;      Params:         4       0       0       0       0       0       0       0       0
 10706 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10707 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10708 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10709 ;;Total ram usage:       10 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    2
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_efgtoa
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text39
 10720  0050AC                     __ptext39:
 10721                           	opt callstack 0
 10722  0050AC                     _strcpy:
 10723                           	opt callstack 23
 10724  0050AC  C008  F00C         	movff	strcpy@src,strcpy@s
 10725  0050B0  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
 10726  0050B4  C006  F00E         	movff	strcpy@dest,strcpy@d
 10727  0050B8  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
 10728  0050BC                     l8407:
 10729  0050BC  500C               	movf	strcpy@s^0,w,c
 10730  0050BE  6E0A               	movwf	??_strcpy^0,c
 10731  0050C0  500D               	movf	(strcpy@s+1)^0,w,c
 10732  0050C2  6E0B               	movwf	(??_strcpy+1)^0,c
 10733  0050C4  4A0C               	infsnz	strcpy@s^0,f,c
 10734  0050C6  2A0D               	incf	(strcpy@s+1)^0,f,c
 10735  0050C8  C00A  FFF6         	movff	??_strcpy,tblptrl
 10736  0050CC  C00B  FFF7         	movff	??_strcpy+1,tblptrh
 10737  0050D0  6AF8               	clrf	tblptru,c
 10738  0050D2  C00E  FFD9         	movff	strcpy@d,fsr2l
 10739  0050D6  C00F  FFDA         	movff	strcpy@d+1,fsr2h
 10740  0050DA  4A0E               	infsnz	strcpy@d^0,f,c
 10741  0050DC  2A0F               	incf	(strcpy@d+1)^0,f,c
 10742  0050DE  0E07               	movlw	(high __ramtop+-1)
 10743  0050E0  64F7               	cpfsgt	tblptrh,c
 10744  0050E2  D003               	bra	u8717
 10745  0050E4  0008               	tblrd		*
 10746  0050E6  50F5               	movf	tablat,w,c
 10747  0050E8  D005               	bra	u8710
 10748  0050EA                     u8717:
 10749  0050EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 10750  0050EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 10751  0050F2  50EF               	movf	indf0,w,c
 10752  0050F4                     u8710:
 10753  0050F4  6EDF               	movwf	indf2,c
 10754  0050F6  50DF               	movf	indf2,w,c
 10755  0050F8  A4D8               	btfss	status,2,c
 10756  0050FA  EF81  F028         	goto	u8721
 10757  0050FE  EF83  F028         	goto	u8720
 10758  005102                     u8721:
 10759  005102  EF5E  F028         	goto	l8407
 10760  005106                     u8720:
 10761  005106  0012               	return		;funcret
 10762  005108                     __end_of_strcpy:
 10763                           	opt callstack 0
 10764                           
 10765 ;; *************** function _floorf *****************
 10766 ;; Defined at:
 10767 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;  x               4   79[COMRAM] float 
 10770 ;; Auto vars:     Size  Location     Type
 10771 ;;  u               4   25[BANK0 ] struct .
 10772 ;;  m               4   19[BANK0 ] unsigned long 
 10773 ;;  e               2   23[BANK0 ] int 
 10774 ;; Return value:  Size  Location     Type
 10775 ;;                  4   79[COMRAM] float 
 10776 ;; Registers used:
 10777 ;;		wreg, status,2, status,0
 10778 ;; Tracked objects:
 10779 ;;		On entry : 0/0
 10780 ;;		On exit  : 0/0
 10781 ;;		Unchanged: 0/0
 10782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10783 ;;      Params:         4       0       0       0       0       0       0       0       0
 10784 ;;      Locals:         0      10       0       0       0       0       0       0       0
 10785 ;;      Temps:          0       6       0       0       0       0       0       0       0
 10786 ;;      Totals:         4      16       0       0       0       0       0       0       0
 10787 ;;Total ram usage:       20 bytes
 10788 ;; Hardware stack levels used:    1
 10789 ;; Hardware stack levels required when called:    2
 10790 ;; This function calls:
 10791 ;;		Nothing
 10792 ;; This function is called by:
 10793 ;;		_efgtoa
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797                           	psect	text40
 10798  003096                     __ptext40:
 10799                           	opt callstack 0
 10800  003096                     _floorf:
 10801                           	opt callstack 23
 10802  003096  C104  F079         	movff	floorf@F524,floorf@u
 10803  00309A  C105  F07A         	movff	floorf@F524+1,floorf@u+1
 10804  00309E  C106  F07B         	movff	floorf@F524+2,floorf@u+2
 10805  0030A2  C107  F07C         	movff	floorf@F524+3,floorf@u+3
 10806  0030A6  C050  F079         	movff	floorf@x,floorf@u
 10807  0030AA  C051  F07A         	movff	floorf@x+1,floorf@u+1
 10808  0030AE  C052  F07B         	movff	floorf@x+2,floorf@u+2
 10809  0030B2  C053  F07C         	movff	floorf@x+3,floorf@u+3
 10810  0030B6  0E81               	movlw	129
 10811  0030B8  0100               	movlb	0	; () banked
 10812  0030BA  6F6D               	movwf	??_floorf& (0+255),b
 10813  0030BC  0EFF               	movlw	255
 10814  0030BE  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10815  0030C0  C079  F06F         	movff	floorf@u,??_floorf+2
 10816  0030C4  C07A  F070         	movff	floorf@u+1,??_floorf+3
 10817  0030C8  C07B  F071         	movff	floorf@u+2,??_floorf+4
 10818  0030CC  C07C  F072         	movff	floorf@u+3,??_floorf+5
 10819  0030D0  0E18               	movlw	24
 10820  0030D2  EF70  F018         	goto	u8760
 10821  0030D6                     u8765:
 10822  0030D6  90D8               	bcf	status,0,c
 10823  0030D8  3372               	rrcf	(??_floorf+5)& (0+255),f,b
 10824  0030DA  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 10825  0030DC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10826  0030DE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10827  0030E0                     u8760:
 10828  0030E0  2EE8               	decfsz	wreg,f,c
 10829  0030E2  EF6B  F018         	goto	u8765
 10830  0030E6  516F               	movf	(??_floorf+2)& (0+255),w,b
 10831  0030E8  256D               	addwf	??_floorf& (0+255),w,b
 10832  0030EA  6F77               	movwf	floorf@e& (0+255),b
 10833  0030EC  0E00               	movlw	0
 10834  0030EE  216E               	addwfc	(??_floorf+1)& (0+255),w,b
 10835  0030F0  6F78               	movwf	(floorf@e+1)& (0+255),b
 10836  0030F2  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 10837  0030F4  EF85  F018         	goto	u8771
 10838  0030F8  5178               	movf	(floorf@e+1)& (0+255),w,b
 10839  0030FA  E109               	bnz	u8770
 10840  0030FC  0E17               	movlw	23
 10841  0030FE  5D77               	subwf	floorf@e& (0+255),w,b
 10842  003100  A0D8               	btfss	status,0,c
 10843  003102  EF85  F018         	goto	u8771
 10844  003106  EF87  F018         	goto	u8770
 10845  00310A                     u8771:
 10846  00310A  EF91  F018         	goto	l8425
 10847  00310E                     u8770:
 10848  00310E                     l8423:
 10849                           
 10850                           ; BSR set to: 0
 10851  00310E  C050  F050         	movff	floorf@x,?_floorf
 10852  003112  C051  F051         	movff	floorf@x+1,?_floorf+1
 10853  003116  C052  F052         	movff	floorf@x+2,?_floorf+2
 10854  00311A  C053  F053         	movff	floorf@x+3,?_floorf+3
 10855  00311E  EF55  F019         	goto	l1687
 10856  003122                     l8425:
 10857                           
 10858                           ; BSR set to: 0
 10859  003122  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 10860  003124  EF96  F018         	goto	u8781
 10861  003128  EF98  F018         	goto	u8780
 10862  00312C                     u8781:
 10863  00312C  EF09  F019         	goto	l8435
 10864  003130                     u8780:
 10865  003130                     
 10866                           ; BSR set to: 0
 10867  003130  C077  F06D         	movff	floorf@e,??_floorf
 10868  003134  0EFF               	movlw	255
 10869  003136  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10870  003138  0EFF               	movlw	255
 10871  00313A  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10872  00313C  0E7F               	movlw	127
 10873  00313E  6F70               	movwf	(??_floorf+3)& (0+255),b
 10874  003140  0E00               	movlw	0
 10875  003142  6F71               	movwf	(??_floorf+4)& (0+255),b
 10876  003144                     u8795:
 10877  003144  676D               	tstfsz	??_floorf& (0+255),b
 10878  003146  EFA7  F018         	goto	u8796
 10879  00314A  EFAF  F018         	goto	u8797
 10880  00314E                     u8796:
 10881  00314E  3571               	rlcf	(??_floorf+4)& (0+255),w,b
 10882  003150  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 10883  003152  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10884  003154  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10885  003156  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 10886  003158  2F6D               	decfsz	??_floorf& (0+255),f,b
 10887  00315A  EFA2  F018         	goto	u8795
 10888  00315E                     u8797:
 10889  00315E  C06E  F073         	movff	??_floorf+1,floorf@m
 10890  003162  C06F  F074         	movff	??_floorf+2,floorf@m+1
 10891  003166  C070  F075         	movff	??_floorf+3,floorf@m+2
 10892  00316A  C071  F076         	movff	??_floorf+4,floorf@m+3
 10893  00316E  0100               	movlb	0	; () banked
 10894  003170  5173               	movf	floorf@m& (0+255),w,b
 10895  003172  1579               	andwf	floorf@u& (0+255),w,b
 10896  003174  6F6D               	movwf	??_floorf& (0+255),b
 10897  003176  5174               	movf	(floorf@m+1)& (0+255),w,b
 10898  003178  157A               	andwf	(floorf@u+1)& (0+255),w,b
 10899  00317A  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10900  00317C  5175               	movf	(floorf@m+2)& (0+255),w,b
 10901  00317E  157B               	andwf	(floorf@u+2)& (0+255),w,b
 10902  003180  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10903  003182  5176               	movf	(floorf@m+3)& (0+255),w,b
 10904  003184  157C               	andwf	(floorf@u+3)& (0+255),w,b
 10905  003186  6F70               	movwf	(??_floorf+3)& (0+255),b
 10906  003188  516D               	movf	??_floorf& (0+255),w,b
 10907  00318A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 10908  00318C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 10909  00318E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 10910  003190  A4D8               	btfss	status,2,c
 10911  003192  EFCD  F018         	goto	u8801
 10912  003196  EFCF  F018         	goto	u8800
 10913  00319A                     u8801:
 10914  00319A  EFD1  F018         	goto	l8431
 10915  00319E                     u8800:
 10916  00319E  EF87  F018         	goto	l8423
 10917  0031A2                     l8431:
 10918                           
 10919                           ; BSR set to: 0
 10920  0031A2  C079  F06D         	movff	floorf@u,??_floorf
 10921  0031A6  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 10922  0031AA  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 10923  0031AE  C07C  F070         	movff	floorf@u+3,??_floorf+3
 10924  0031B2  0E20               	movlw	32
 10925  0031B4  EFE1  F018         	goto	u8810
 10926  0031B8                     u8815:
 10927  0031B8  90D8               	bcf	status,0,c
 10928  0031BA  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10929  0031BC  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10930  0031BE  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 10931  0031C0  336D               	rrcf	??_floorf& (0+255),f,b
 10932  0031C2                     u8810:
 10933  0031C2  2EE8               	decfsz	wreg,f,c
 10934  0031C4  EFDC  F018         	goto	u8815
 10935  0031C8  516D               	movf	??_floorf& (0+255),w,b
 10936  0031CA  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 10937  0031CC  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 10938  0031CE  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 10939  0031D0  B4D8               	btfsc	status,2,c
 10940  0031D2  EFED  F018         	goto	u8821
 10941  0031D6  EFEF  F018         	goto	u8820
 10942  0031DA                     u8821:
 10943  0031DA  EFF7  F018         	goto	l1690
 10944  0031DE                     u8820:
 10945  0031DE                     
 10946                           ; BSR set to: 0
 10947  0031DE  5173               	movf	floorf@m& (0+255),w,b
 10948  0031E0  2779               	addwf	floorf@u& (0+255),f,b
 10949  0031E2  5174               	movf	(floorf@m+1)& (0+255),w,b
 10950  0031E4  237A               	addwfc	(floorf@u+1)& (0+255),f,b
 10951  0031E6  5175               	movf	(floorf@m+2)& (0+255),w,b
 10952  0031E8  237B               	addwfc	(floorf@u+2)& (0+255),f,b
 10953  0031EA  5176               	movf	(floorf@m+3)& (0+255),w,b
 10954  0031EC  237C               	addwfc	(floorf@u+3)& (0+255),f,b
 10955  0031EE                     l1690:
 10956                           
 10957                           ; BSR set to: 0
 10958  0031EE  1D73               	comf	floorf@m& (0+255),w,b
 10959  0031F0  6F6D               	movwf	??_floorf& (0+255),b
 10960  0031F2  1D74               	comf	(floorf@m+1)& (0+255),w,b
 10961  0031F4  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10962  0031F6  1D75               	comf	(floorf@m+2)& (0+255),w,b
 10963  0031F8  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10964  0031FA  1D76               	comf	(floorf@m+3)& (0+255),w,b
 10965  0031FC  6F70               	movwf	(??_floorf+3)& (0+255),b
 10966  0031FE  516D               	movf	??_floorf& (0+255),w,b
 10967  003200  1779               	andwf	floorf@u& (0+255),f,b
 10968  003202  516E               	movf	(??_floorf+1)& (0+255),w,b
 10969  003204  177A               	andwf	(floorf@u+1)& (0+255),f,b
 10970  003206  516F               	movf	(??_floorf+2)& (0+255),w,b
 10971  003208  177B               	andwf	(floorf@u+2)& (0+255),f,b
 10972  00320A  5170               	movf	(??_floorf+3)& (0+255),w,b
 10973  00320C  177C               	andwf	(floorf@u+3)& (0+255),f,b
 10974  00320E  EF4D  F019         	goto	l8443
 10975  003212                     l8435:
 10976                           
 10977                           ; BSR set to: 0
 10978  003212  C079  F06D         	movff	floorf@u,??_floorf
 10979  003216  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 10980  00321A  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 10981  00321E  C07C  F070         	movff	floorf@u+3,??_floorf+3
 10982  003222  0E20               	movlw	32
 10983  003224  EF19  F019         	goto	u8830
 10984  003228                     u8835:
 10985  003228  90D8               	bcf	status,0,c
 10986  00322A  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10987  00322C  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10988  00322E  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 10989  003230  336D               	rrcf	??_floorf& (0+255),f,b
 10990  003232                     u8830:
 10991  003232  2EE8               	decfsz	wreg,f,c
 10992  003234  EF14  F019         	goto	u8835
 10993  003238  516D               	movf	??_floorf& (0+255),w,b
 10994  00323A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 10995  00323C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 10996  00323E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 10997  003240  A4D8               	btfss	status,2,c
 10998  003242  EF25  F019         	goto	u8841
 10999  003246  EF27  F019         	goto	u8840
 11000  00324A                     u8841:
 11001  00324A  EF31  F019         	goto	l8439
 11002  00324E                     u8840:
 11003  00324E                     
 11004                           ; BSR set to: 0
 11005  00324E  0E00               	movlw	0
 11006  003250  6F79               	movwf	floorf@u& (0+255),b
 11007  003252  0E00               	movlw	0
 11008  003254  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11009  003256  0E00               	movlw	0
 11010  003258  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11011  00325A  0E00               	movlw	0
 11012  00325C  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11013  00325E  EF4D  F019         	goto	l8443
 11014  003262                     l8439:
 11015                           
 11016                           ; BSR set to: 0
 11017  003262  90D8               	bcf	status,0,c
 11018  003264  3579               	rlcf	floorf@u& (0+255),w,b
 11019  003266  6F6D               	movwf	??_floorf& (0+255),b
 11020  003268  357A               	rlcf	(floorf@u+1)& (0+255),w,b
 11021  00326A  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11022  00326C  357B               	rlcf	(floorf@u+2)& (0+255),w,b
 11023  00326E  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11024  003270  357C               	rlcf	(floorf@u+3)& (0+255),w,b
 11025  003272  6F70               	movwf	(??_floorf+3)& (0+255),b
 11026  003274  516D               	movf	??_floorf& (0+255),w,b
 11027  003276  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11028  003278  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11029  00327A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11030  00327C  B4D8               	btfsc	status,2,c
 11031  00327E  EF43  F019         	goto	u8851
 11032  003282  EF45  F019         	goto	u8850
 11033  003286                     u8851:
 11034  003286  EF4D  F019         	goto	l8443
 11035  00328A                     u8850:
 11036  00328A                     
 11037                           ; BSR set to: 0
 11038  00328A  0E00               	movlw	0
 11039  00328C  6F79               	movwf	floorf@u& (0+255),b
 11040  00328E  0E00               	movlw	0
 11041  003290  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11042  003292  0E80               	movlw	128
 11043  003294  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11044  003296  0EBF               	movlw	191
 11045  003298  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11046  00329A                     l8443:
 11047                           
 11048                           ; BSR set to: 0
 11049  00329A  C079  F050         	movff	floorf@u,?_floorf
 11050  00329E  C07A  F051         	movff	floorf@u+1,?_floorf+1
 11051  0032A2  C07B  F052         	movff	floorf@u+2,?_floorf+2
 11052  0032A6  C07C  F053         	movff	floorf@u+3,?_floorf+3
 11053  0032AA                     l1687:
 11054                           
 11055                           ; BSR set to: 0
 11056  0032AA  0012               	return		;funcret
 11057  0032AC                     __end_of_floorf:
 11058                           	opt callstack 0
 11059                           
 11060 ;; *************** function ___fpclassifyf *****************
 11061 ;; Defined at:
 11062 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 11063 ;; Parameters:    Size  Location     Type
 11064 ;;  x               4    5[COMRAM] float 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;  u               4   15[COMRAM] struct .
 11067 ;;  e               2   13[COMRAM] int 
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  2    5[COMRAM] int 
 11070 ;; Registers used:
 11071 ;;		wreg, status,2, status,0
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11077 ;;      Params:         4       0       0       0       0       0       0       0       0
 11078 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11079 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11080 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11081 ;;Total ram usage:       14 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    2
 11084 ;; This function calls:
 11085 ;;		Nothing
 11086 ;; This function is called by:
 11087 ;;		_efgtoa
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           	psect	text41
 11092  004324                     __ptext41:
 11093                           	opt callstack 0
 11094  004324                     ___fpclassifyf:
 11095                           	opt callstack 23
 11096  004324  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
 11097  004328  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 11098  00432C  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 11099  004330  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 11100  004334  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11101  004338  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11102  00433C  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11103  004340  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11104  004344  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11105  004348  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11106  00434C  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11107  004350  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11108  004354  0E18               	movlw	24
 11109  004356  EFB2  F021         	goto	u8640
 11110  00435A                     u8645:
 11111  00435A  90D8               	bcf	status,0,c
 11112  00435C  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11113  00435E  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11114  004360  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11115  004362  320A               	rrcf	??___fpclassifyf^0,f,c
 11116  004364                     u8640:
 11117  004364  2EE8               	decfsz	wreg,f,c
 11118  004366  EFAD  F021         	goto	u8645
 11119  00436A  500A               	movf	??___fpclassifyf^0,w,c
 11120  00436C  6E0E               	movwf	___fpclassifyf@e^0,c
 11121  00436E  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11122  004370  500E               	movf	___fpclassifyf@e^0,w,c
 11123  004372  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11124  004374  A4D8               	btfss	status,2,c
 11125  004376  EFBF  F021         	goto	u8651
 11126  00437A  EFC1  F021         	goto	u8650
 11127  00437E                     u8651:
 11128  00437E  EFE1  F021         	goto	l8395
 11129  004382                     u8650:
 11130  004382  90D8               	bcf	status,0,c
 11131  004384  3410               	rlcf	___fpclassifyf@u^0,w,c
 11132  004386  6E0A               	movwf	??___fpclassifyf^0,c
 11133  004388  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11134  00438A  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11135  00438C  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11136  00438E  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11137  004390  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11138  004392  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11139  004394  500A               	movf	??___fpclassifyf^0,w,c
 11140  004396  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11141  004398  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11142  00439A  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11143  00439C  A4D8               	btfss	status,2,c
 11144  00439E  EFD3  F021         	goto	u8661
 11145  0043A2  EFD5  F021         	goto	u8660
 11146  0043A6                     u8661:
 11147  0043A6  EFDB  F021         	goto	l8391
 11148  0043AA                     u8660:
 11149  0043AA  0E00               	movlw	0
 11150  0043AC  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11151  0043AE  0E02               	movlw	2
 11152  0043B0  6E06               	movwf	?___fpclassifyf^0,c
 11153  0043B2  EF10  F022         	goto	l1642
 11154  0043B6                     l8391:
 11155  0043B6  0E00               	movlw	0
 11156  0043B8  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11157  0043BA  0E03               	movlw	3
 11158  0043BC  6E06               	movwf	?___fpclassifyf^0,c
 11159  0043BE  EF10  F022         	goto	l1642
 11160  0043C2                     l8395:
 11161  0043C2  280E               	incf	___fpclassifyf@e^0,w,c
 11162  0043C4  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11163  0043C6  A4D8               	btfss	status,2,c
 11164  0043C8  EFE8  F021         	goto	u8671
 11165  0043CC  EFEA  F021         	goto	u8670
 11166  0043D0                     u8671:
 11167  0043D0  EF0C  F022         	goto	l8401
 11168  0043D4                     u8670:
 11169  0043D4  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11170  0043D8  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11171  0043DC  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11172  0043E0  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11173  0043E4  0E09               	movlw	9
 11174  0043E6                     u8685:
 11175  0043E6  90D8               	bcf	status,0,c
 11176  0043E8  360A               	rlcf	??___fpclassifyf^0,f,c
 11177  0043EA  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11178  0043EC  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11179  0043EE  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11180  0043F0  2EE8               	decfsz	wreg,f,c
 11181  0043F2  EFF3  F021         	goto	u8685
 11182  0043F6  500A               	movf	??___fpclassifyf^0,w,c
 11183  0043F8  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11184  0043FA  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11185  0043FC  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11186  0043FE  B4D8               	btfsc	status,2,c
 11187  004400  EF04  F022         	goto	u8691
 11188  004404  EF07  F022         	goto	u8690
 11189  004408                     u8691:
 11190  004408  0E01               	movlw	1
 11191  00440A  EF08  F022         	goto	u8700
 11192  00440E                     u8690:
 11193  00440E  0E00               	movlw	0
 11194  004410                     u8700:
 11195  004410  6E06               	movwf	?___fpclassifyf^0,c
 11196  004412  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11197  004414  EF10  F022         	goto	l1642
 11198  004418                     l8401:
 11199  004418  0E00               	movlw	0
 11200  00441A  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11201  00441C  0E04               	movlw	4
 11202  00441E  6E06               	movwf	?___fpclassifyf^0,c
 11203  004420                     l1642:
 11204  004420  0012               	return		;funcret
 11205  004422                     __end_of___fpclassifyf:
 11206                           	opt callstack 0
 11207                           
 11208 ;; *************** function ___fltol *****************
 11209 ;; Defined at:
 11210 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;  f1              4   18[BANK0 ] int 
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;  exp1            1   27[BANK0 ] unsigned char 
 11215 ;;  sign1           1   26[BANK0 ] unsigned char 
 11216 ;; Return value:  Size  Location     Type
 11217 ;;                  4   18[BANK0 ] long 
 11218 ;; Registers used:
 11219 ;;		wreg, status,2, status,0
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11225 ;;      Params:         0       4       0       0       0       0       0       0       0
 11226 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11227 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11228 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11229 ;;Total ram usage:       10 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    2
 11232 ;; This function calls:
 11233 ;;		Nothing
 11234 ;; This function is called by:
 11235 ;;		_pwmDuty
 11236 ;;		_PID
 11237 ;;		_efgtoa
 11238 ;; This function uses a non-reentrant model
 11239 ;;
 11240                           
 11241                           	psect	text42
 11242  004012                     __ptext42:
 11243                           	opt callstack 0
 11244  004012                     ___fltol:
 11245                           	opt callstack 23
 11246  004012  0100               	movlb	0	; () banked
 11247  004014  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11248  004016  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11249  004018  6F7B               	movwf	___fltol@exp1& (0+255),b
 11250  00401A  517B               	movf	___fltol@exp1& (0+255),w,b
 11251  00401C  A4D8               	btfss	status,2,c
 11252  00401E  EF13  F020         	goto	u9641
 11253  004022  EF15  F020         	goto	u9640
 11254  004026                     u9641:
 11255  004026  EF1F  F020         	goto	l8943
 11256  00402A                     u9640:
 11257  00402A                     l8939:
 11258                           
 11259                           ; BSR set to: 0
 11260  00402A  0E00               	movlw	0
 11261  00402C  6F72               	movwf	?___fltol& (0+255),b
 11262  00402E  0E00               	movlw	0
 11263  004030  6F73               	movwf	(?___fltol+1)& (0+255),b
 11264  004032  0E00               	movlw	0
 11265  004034  6F74               	movwf	(?___fltol+2)& (0+255),b
 11266  004036  0E00               	movlw	0
 11267  004038  6F75               	movwf	(?___fltol+3)& (0+255),b
 11268  00403A  EF8C  F020         	goto	l1258
 11269  00403E                     l8943:
 11270                           
 11271                           ; BSR set to: 0
 11272  00403E  C072  F076         	movff	___fltol@f1,??___fltol
 11273  004042  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 11274  004046  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 11275  00404A  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 11276  00404E  0E20               	movlw	32
 11277  004050  EF2F  F020         	goto	u9650
 11278  004054                     u9655:
 11279  004054  90D8               	bcf	status,0,c
 11280  004056  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 11281  004058  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 11282  00405A  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 11283  00405C  3376               	rrcf	??___fltol& (0+255),f,b
 11284  00405E                     u9650:
 11285  00405E  2EE8               	decfsz	wreg,f,c
 11286  004060  EF2A  F020         	goto	u9655
 11287  004064  5176               	movf	??___fltol& (0+255),w,b
 11288  004066  6F7A               	movwf	___fltol@sign1& (0+255),b
 11289  004068                     
 11290                           ; BSR set to: 0
 11291  004068  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 11292  00406A                     
 11293                           ; BSR set to: 0
 11294  00406A  0EFF               	movlw	255
 11295  00406C  1772               	andwf	___fltol@f1& (0+255),f,b
 11296  00406E  0EFF               	movlw	255
 11297  004070  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 11298  004072  0EFF               	movlw	255
 11299  004074  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 11300  004076  0E00               	movlw	0
 11301  004078  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 11302  00407A                     
 11303                           ; BSR set to: 0
 11304  00407A  0E96               	movlw	150
 11305  00407C  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 11306  00407E                     
 11307                           ; BSR set to: 0
 11308  00407E  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 11309  004080  EF46  F020         	goto	u9660
 11310  004084  EF44  F020         	goto	u9661
 11311  004088                     u9661:
 11312  004088  EF5C  F020         	goto	l8963
 11313  00408C                     u9660:
 11314  00408C                     
 11315                           ; BSR set to: 0
 11316  00408C  517B               	movf	___fltol@exp1& (0+255),w,b
 11317  00408E  0A80               	xorlw	128
 11318  004090  0F97               	addlw	151
 11319  004092  B0D8               	btfsc	status,0,c
 11320  004094  EF4E  F020         	goto	u9671
 11321  004098  EF50  F020         	goto	u9670
 11322  00409C                     u9671:
 11323  00409C  EF52  F020         	goto	l8959
 11324  0040A0                     u9670:
 11325  0040A0  EF15  F020         	goto	l8939
 11326  0040A4                     l8959:
 11327                           
 11328                           ; BSR set to: 0
 11329  0040A4  90D8               	bcf	status,0,c
 11330  0040A6  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11331  0040A8  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11332  0040AA  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11333  0040AC  3372               	rrcf	___fltol@f1& (0+255),f,b
 11334  0040AE                     
 11335                           ; BSR set to: 0
 11336  0040AE  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 11337  0040B0  EF52  F020         	goto	l8959
 11338  0040B4  EF74  F020         	goto	l8973
 11339  0040B8                     l8963:
 11340                           
 11341                           ; BSR set to: 0
 11342  0040B8  0E1F               	movlw	31
 11343  0040BA  657B               	cpfsgt	___fltol@exp1& (0+255),b
 11344  0040BC  EF62  F020         	goto	u9681
 11345  0040C0  EF64  F020         	goto	u9680
 11346  0040C4                     u9681:
 11347  0040C4  EF6C  F020         	goto	l8971
 11348  0040C8                     u9680:
 11349  0040C8  EF15  F020         	goto	l8939
 11350  0040CC                     l8969:
 11351                           
 11352                           ; BSR set to: 0
 11353  0040CC  90D8               	bcf	status,0,c
 11354  0040CE  3772               	rlcf	___fltol@f1& (0+255),f,b
 11355  0040D0  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11356  0040D2  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11357  0040D4  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11358  0040D6  077B               	decf	___fltol@exp1& (0+255),f,b
 11359  0040D8                     l8971:
 11360                           
 11361                           ; BSR set to: 0
 11362  0040D8  517B               	movf	___fltol@exp1& (0+255),w,b
 11363  0040DA  A4D8               	btfss	status,2,c
 11364  0040DC  EF72  F020         	goto	u9691
 11365  0040E0  EF74  F020         	goto	u9690
 11366  0040E4                     u9691:
 11367  0040E4  EF66  F020         	goto	l8969
 11368  0040E8                     u9690:
 11369  0040E8                     l8973:
 11370                           
 11371                           ; BSR set to: 0
 11372  0040E8  517A               	movf	___fltol@sign1& (0+255),w,b
 11373  0040EA  B4D8               	btfsc	status,2,c
 11374  0040EC  EF7A  F020         	goto	u9701
 11375  0040F0  EF7C  F020         	goto	u9700
 11376  0040F4                     u9701:
 11377  0040F4  EF84  F020         	goto	l8977
 11378  0040F8                     u9700:
 11379  0040F8                     
 11380                           ; BSR set to: 0
 11381  0040F8  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 11382  0040FA  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 11383  0040FC  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 11384  0040FE  6D72               	negf	___fltol@f1& (0+255),b
 11385  004100  0E00               	movlw	0
 11386  004102  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11387  004104  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11388  004106  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11389  004108                     l8977:
 11390                           
 11391                           ; BSR set to: 0
 11392  004108  C072  F072         	movff	___fltol@f1,?___fltol
 11393  00410C  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 11394  004110  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 11395  004114  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 11396  004118                     l1258:
 11397                           
 11398                           ; BSR set to: 0
 11399  004118  0012               	return		;funcret
 11400  00411A                     __end_of___fltol:
 11401                           	opt callstack 0
 11402                           
 11403 ;; *************** function ___flsub *****************
 11404 ;; Defined at:
 11405 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;  b               4   67[COMRAM] long 
 11408 ;;  a               4   71[COMRAM] long 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;		None
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  4   67[COMRAM] long 
 11413 ;; Registers used:
 11414 ;;		wreg, status,2, status,0, cstack
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11420 ;;      Params:         8       0       0       0       0       0       0       0       0
 11421 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11422 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11423 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11424 ;;Total ram usage:        8 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:    3
 11427 ;; This function calls:
 11428 ;;		___fladd
 11429 ;; This function is called by:
 11430 ;;		_PID
 11431 ;;		_efgtoa
 11432 ;;		_roundf
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text43
 11437  00539E                     __ptext43:
 11438                           	opt callstack 0
 11439  00539E                     ___flsub:
 11440                           	opt callstack 22
 11441  00539E  0E00               	movlw	0
 11442  0053A0  1A48               	xorwf	___flsub@a^0,f,c
 11443  0053A2  0E00               	movlw	0
 11444  0053A4  1A49               	xorwf	(___flsub@a+1)^0,f,c
 11445  0053A6  0E00               	movlw	0
 11446  0053A8  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 11447  0053AA  0E80               	movlw	128
 11448  0053AC  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 11449  0053AE  C044  F034         	movff	___flsub@b,___fladd@b
 11450  0053B2  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 11451  0053B6  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 11452  0053BA  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 11453  0053BE  C048  F038         	movff	___flsub@a,___fladd@a
 11454  0053C2  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 11455  0053C6  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 11456  0053CA  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 11457  0053CE  EC80  F00B         	call	___fladd	;wreg free
 11458  0053D2  C034  F044         	movff	?___fladd,?___flsub
 11459  0053D6  C035  F045         	movff	?___fladd+1,?___flsub+1
 11460  0053DA  C036  F046         	movff	?___fladd+2,?___flsub+2
 11461  0053DE  C037  F047         	movff	?___fladd+3,?___flsub+3
 11462  0053E2  0012               	return		;funcret
 11463  0053E4                     __end_of___flsub:
 11464                           	opt callstack 0
 11465                           
 11466 ;; *************** function ___fladd *****************
 11467 ;; Defined at:
 11468 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;  b               4   51[COMRAM] long 
 11471 ;;  a               4   55[COMRAM] long 
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;  grs             1   66[COMRAM] unsigned char 
 11474 ;;  bexp            1   65[COMRAM] unsigned char 
 11475 ;;  aexp            1   64[COMRAM] unsigned char 
 11476 ;;  signs           1   63[COMRAM] unsigned char 
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  4   51[COMRAM] unsigned char 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2, status,0
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11486 ;;      Params:         8       0       0       0       0       0       0       0       0
 11487 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11488 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11489 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11490 ;;Total ram usage:       16 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:    2
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_leerSensores
 11497 ;;		_PID
 11498 ;;		_efgtoa
 11499 ;;		___flsub
 11500 ;;		_roundf
 11501 ;; This function uses a non-reentrant model
 11502 ;;
 11503                           
 11504                           	psect	text44
 11505  001700                     __ptext44:
 11506                           	opt callstack 0
 11507  001700                     ___fladd:
 11508                           	opt callstack 22
 11509  001700  5037               	movf	(___fladd@b+3)^0,w,c
 11510  001702  0B80               	andlw	128
 11511  001704  6E40               	movwf	___fladd@signs^0,c
 11512  001706  5037               	movf	(___fladd@b+3)^0,w,c
 11513  001708  2437               	addwf	(___fladd@b+3)^0,w,c
 11514  00170A  6E42               	movwf	___fladd@bexp^0,c
 11515  00170C  AE36               	btfss	(___fladd@b+2)^0,7,c
 11516  00170E  EF8B  F00B         	goto	u8201
 11517  001712  EF8D  F00B         	goto	u8200
 11518  001716                     u8201:
 11519  001716  EF8E  F00B         	goto	l8157
 11520  00171A                     u8200:
 11521  00171A  8042               	bsf	___fladd@bexp^0,0,c
 11522  00171C                     l8157:
 11523  00171C  5042               	movf	___fladd@bexp^0,w,c
 11524  00171E  B4D8               	btfsc	status,2,c
 11525  001720  EF94  F00B         	goto	u8211
 11526  001724  EF96  F00B         	goto	u8210
 11527  001728                     u8211:
 11528  001728  EFAB  F00B         	goto	l8167
 11529  00172C                     u8210:
 11530  00172C  2842               	incf	___fladd@bexp^0,w,c
 11531  00172E  A4D8               	btfss	status,2,c
 11532  001730  EF9C  F00B         	goto	u8221
 11533  001734  EF9E  F00B         	goto	u8220
 11534  001738                     u8221:
 11535  001738  EFA6  F00B         	goto	l8163
 11536  00173C                     u8220:
 11537  00173C  0E00               	movlw	0
 11538  00173E  6E34               	movwf	___fladd@b^0,c
 11539  001740  0E00               	movlw	0
 11540  001742  6E35               	movwf	(___fladd@b+1)^0,c
 11541  001744  0E00               	movlw	0
 11542  001746  6E36               	movwf	(___fladd@b+2)^0,c
 11543  001748  0E00               	movlw	0
 11544  00174A  6E37               	movwf	(___fladd@b+3)^0,c
 11545  00174C                     l8163:
 11546  00174C  8E36               	bsf	(___fladd@b+2)^0,7,c
 11547  00174E  0E00               	movlw	0
 11548  001750  6E37               	movwf	(___fladd@b+3)^0,c
 11549  001752  EFB3  F00B         	goto	l8169
 11550  001756                     l8167:
 11551  001756  0E00               	movlw	0
 11552  001758  6E34               	movwf	___fladd@b^0,c
 11553  00175A  0E00               	movlw	0
 11554  00175C  6E35               	movwf	(___fladd@b+1)^0,c
 11555  00175E  0E00               	movlw	0
 11556  001760  6E36               	movwf	(___fladd@b+2)^0,c
 11557  001762  0E00               	movlw	0
 11558  001764  6E37               	movwf	(___fladd@b+3)^0,c
 11559  001766                     l8169:
 11560  001766  503B               	movf	(___fladd@a+3)^0,w,c
 11561  001768  0B80               	andlw	128
 11562  00176A  6E41               	movwf	___fladd@aexp^0,c
 11563  00176C  5040               	movf	___fladd@signs^0,w,c
 11564  00176E  1841               	xorwf	___fladd@aexp^0,w,c
 11565  001770  B4D8               	btfsc	status,2,c
 11566  001772  EFBD  F00B         	goto	u8231
 11567  001776  EFBF  F00B         	goto	u8230
 11568  00177A                     u8231:
 11569  00177A  EFC0  F00B         	goto	l8175
 11570  00177E                     u8230:
 11571  00177E  8C40               	bsf	___fladd@signs^0,6,c
 11572  001780                     l8175:
 11573  001780  503B               	movf	(___fladd@a+3)^0,w,c
 11574  001782  243B               	addwf	(___fladd@a+3)^0,w,c
 11575  001784  6E41               	movwf	___fladd@aexp^0,c
 11576  001786  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11577  001788  EFC8  F00B         	goto	u8241
 11578  00178C  EFCA  F00B         	goto	u8240
 11579  001790                     u8241:
 11580  001790  EFCB  F00B         	goto	l8181
 11581  001794                     u8240:
 11582  001794  8041               	bsf	___fladd@aexp^0,0,c
 11583  001796                     l8181:
 11584  001796  5041               	movf	___fladd@aexp^0,w,c
 11585  001798  B4D8               	btfsc	status,2,c
 11586  00179A  EFD1  F00B         	goto	u8251
 11587  00179E  EFD3  F00B         	goto	u8250
 11588  0017A2                     u8251:
 11589  0017A2  EFE8  F00B         	goto	l8191
 11590  0017A6                     u8250:
 11591  0017A6  2841               	incf	___fladd@aexp^0,w,c
 11592  0017A8  A4D8               	btfss	status,2,c
 11593  0017AA  EFD9  F00B         	goto	u8261
 11594  0017AE  EFDB  F00B         	goto	u8260
 11595  0017B2                     u8261:
 11596  0017B2  EFE3  F00B         	goto	l8187
 11597  0017B6                     u8260:
 11598  0017B6  0E00               	movlw	0
 11599  0017B8  6E38               	movwf	___fladd@a^0,c
 11600  0017BA  0E00               	movlw	0
 11601  0017BC  6E39               	movwf	(___fladd@a+1)^0,c
 11602  0017BE  0E00               	movlw	0
 11603  0017C0  6E3A               	movwf	(___fladd@a+2)^0,c
 11604  0017C2  0E00               	movlw	0
 11605  0017C4  6E3B               	movwf	(___fladd@a+3)^0,c
 11606  0017C6                     l8187:
 11607  0017C6  8E3A               	bsf	(___fladd@a+2)^0,7,c
 11608  0017C8  0E00               	movlw	0
 11609  0017CA  6E3B               	movwf	(___fladd@a+3)^0,c
 11610  0017CC  EFF0  F00B         	goto	l8193
 11611  0017D0                     l8191:
 11612  0017D0  0E00               	movlw	0
 11613  0017D2  6E38               	movwf	___fladd@a^0,c
 11614  0017D4  0E00               	movlw	0
 11615  0017D6  6E39               	movwf	(___fladd@a+1)^0,c
 11616  0017D8  0E00               	movlw	0
 11617  0017DA  6E3A               	movwf	(___fladd@a+2)^0,c
 11618  0017DC  0E00               	movlw	0
 11619  0017DE  6E3B               	movwf	(___fladd@a+3)^0,c
 11620  0017E0                     l8193:
 11621  0017E0  5042               	movf	___fladd@bexp^0,w,c
 11622  0017E2  5C41               	subwf	___fladd@aexp^0,w,c
 11623  0017E4  B0D8               	btfsc	status,0,c
 11624  0017E6  EFF7  F00B         	goto	u8271
 11625  0017EA  EFF9  F00B         	goto	u8270
 11626  0017EE                     u8271:
 11627  0017EE  EF20  F00C         	goto	l8229
 11628  0017F2                     u8270:
 11629  0017F2  AC40               	btfss	___fladd@signs^0,6,c
 11630  0017F4  EFFE  F00B         	goto	u8281
 11631  0017F8  EF00  F00C         	goto	u8280
 11632  0017FC                     u8281:
 11633  0017FC  EF02  F00C         	goto	l8199
 11634  001800                     u8280:
 11635  001800  0E80               	movlw	128
 11636  001802  1A40               	xorwf	___fladd@signs^0,f,c
 11637  001804                     l8199:
 11638  001804  C042  F043         	movff	___fladd@bexp,___fladd@grs
 11639  001808  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11640  00180C  C043  F041         	movff	___fladd@grs,___fladd@aexp
 11641  001810  C034  F043         	movff	___fladd@b,___fladd@grs
 11642  001814  C038  F034         	movff	___fladd@a,___fladd@b
 11643  001818  C043  F038         	movff	___fladd@grs,___fladd@a
 11644  00181C  C035  F043         	movff	___fladd@b+1,___fladd@grs
 11645  001820  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 11646  001824  C043  F039         	movff	___fladd@grs,___fladd@a+1
 11647  001828  C036  F043         	movff	___fladd@b+2,___fladd@grs
 11648  00182C  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 11649  001830  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 11650  001834  C037  F043         	movff	___fladd@b+3,___fladd@grs
 11651  001838  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 11652  00183C  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 11653  001840                     l8229:
 11654  001840  0E00               	movlw	0
 11655  001842  6E43               	movwf	___fladd@grs^0,c
 11656  001844  5042               	movf	___fladd@bexp^0,w,c
 11657  001846  C041  F03C         	movff	___fladd@aexp,??___fladd
 11658  00184A  6A3D               	clrf	(??___fladd+1)^0,c
 11659  00184C  5E3C               	subwf	??___fladd^0,f,c
 11660  00184E  0E00               	movlw	0
 11661  001850  5A3D               	subwfb	(??___fladd+1)^0,f,c
 11662  001852  BE3D               	btfsc	(??___fladd+1)^0,7,c
 11663  001854  EF35  F00C         	goto	u8291
 11664  001858  503D               	movf	(??___fladd+1)^0,w,c
 11665  00185A  E109               	bnz	u8290
 11666  00185C  0E1A               	movlw	26
 11667  00185E  5C3C               	subwf	??___fladd^0,w,c
 11668  001860  A0D8               	btfss	status,0,c
 11669  001862  EF35  F00C         	goto	u8291
 11670  001866  EF37  F00C         	goto	u8290
 11671  00186A                     u8291:
 11672  00186A  EF6E  F00C         	goto	l1490
 11673  00186E                     u8290:
 11674  00186E  5034               	movf	___fladd@b^0,w,c
 11675  001870  1035               	iorwf	(___fladd@b+1)^0,w,c
 11676  001872  1036               	iorwf	(___fladd@b+2)^0,w,c
 11677  001874  1037               	iorwf	(___fladd@b+3)^0,w,c
 11678  001876  A4D8               	btfss	status,2,c
 11679  001878  EF40  F00C         	goto	u8301
 11680  00187C  EF43  F00C         	goto	u8300
 11681  001880                     u8301:
 11682  001880  0E01               	movlw	1
 11683  001882  EF44  F00C         	goto	u8310
 11684  001886                     u8300:
 11685  001886  0E00               	movlw	0
 11686  001888                     u8310:
 11687  001888  6E43               	movwf	___fladd@grs^0,c
 11688  00188A  0E00               	movlw	0
 11689  00188C  6E34               	movwf	___fladd@b^0,c
 11690  00188E  0E00               	movlw	0
 11691  001890  6E35               	movwf	(___fladd@b+1)^0,c
 11692  001892  0E00               	movlw	0
 11693  001894  6E36               	movwf	(___fladd@b+2)^0,c
 11694  001896  0E00               	movlw	0
 11695  001898  6E37               	movwf	(___fladd@b+3)^0,c
 11696  00189A  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11697  00189E  EF77  F00C         	goto	l1489
 11698  0018A2                     l1491:
 11699  0018A2  A043               	btfss	___fladd@grs^0,0,c
 11700  0018A4  EF56  F00C         	goto	u8321
 11701  0018A8  EF58  F00C         	goto	u8320
 11702  0018AC                     u8321:
 11703  0018AC  EF5E  F00C         	goto	l8241
 11704  0018B0                     u8320:
 11705  0018B0  90D8               	bcf	status,0,c
 11706  0018B2  3043               	rrcf	___fladd@grs^0,w,c
 11707  0018B4  0901               	iorlw	1
 11708  0018B6  6E43               	movwf	___fladd@grs^0,c
 11709  0018B8  EF60  F00C         	goto	l8243
 11710  0018BC                     l8241:
 11711  0018BC  90D8               	bcf	status,0,c
 11712  0018BE  3243               	rrcf	___fladd@grs^0,f,c
 11713  0018C0                     l8243:
 11714  0018C0  A034               	btfss	___fladd@b^0,0,c
 11715  0018C2  EF65  F00C         	goto	u8331
 11716  0018C6  EF67  F00C         	goto	u8330
 11717  0018CA                     u8331:
 11718  0018CA  EF68  F00C         	goto	l8247
 11719  0018CE                     u8330:
 11720  0018CE  8E43               	bsf	___fladd@grs^0,7,c
 11721  0018D0                     l8247:
 11722  0018D0  3437               	rlcf	(___fladd@b+3)^0,w,c
 11723  0018D2  3237               	rrcf	(___fladd@b+3)^0,f,c
 11724  0018D4  3236               	rrcf	(___fladd@b+2)^0,f,c
 11725  0018D6  3235               	rrcf	(___fladd@b+1)^0,f,c
 11726  0018D8  3234               	rrcf	___fladd@b^0,f,c
 11727  0018DA  2A42               	incf	___fladd@bexp^0,f,c
 11728  0018DC                     l1490:
 11729  0018DC  5041               	movf	___fladd@aexp^0,w,c
 11730  0018DE  5C42               	subwf	___fladd@bexp^0,w,c
 11731  0018E0  A0D8               	btfss	status,0,c
 11732  0018E2  EF75  F00C         	goto	u8341
 11733  0018E6  EF77  F00C         	goto	u8340
 11734  0018EA                     u8341:
 11735  0018EA  EF51  F00C         	goto	l1491
 11736  0018EE                     u8340:
 11737  0018EE                     l1489:
 11738  0018EE  BC40               	btfsc	___fladd@signs^0,6,c
 11739  0018F0  EF7C  F00C         	goto	u8351
 11740  0018F4  EF7E  F00C         	goto	u8350
 11741  0018F8                     u8351:
 11742  0018F8  EFBE  F00C         	goto	l8275
 11743  0018FC                     u8350:
 11744  0018FC  5042               	movf	___fladd@bexp^0,w,c
 11745  0018FE  A4D8               	btfss	status,2,c
 11746  001900  EF84  F00C         	goto	u8361
 11747  001904  EF86  F00C         	goto	u8360
 11748  001908                     u8361:
 11749  001908  EF90  F00C         	goto	l8257
 11750  00190C                     u8360:
 11751  00190C  0E00               	movlw	0
 11752  00190E  6E34               	movwf	?___fladd^0,c
 11753  001910  0E00               	movlw	0
 11754  001912  6E35               	movwf	(?___fladd+1)^0,c
 11755  001914  0E00               	movlw	0
 11756  001916  6E36               	movwf	(?___fladd+2)^0,c
 11757  001918  0E00               	movlw	0
 11758  00191A  6E37               	movwf	(?___fladd+3)^0,c
 11759  00191C  EFDF  F00D         	goto	l1498
 11760  001920                     l8257:
 11761  001920  5038               	movf	___fladd@a^0,w,c
 11762  001922  2634               	addwf	___fladd@b^0,f,c
 11763  001924  5039               	movf	(___fladd@a+1)^0,w,c
 11764  001926  2235               	addwfc	(___fladd@b+1)^0,f,c
 11765  001928  503A               	movf	(___fladd@a+2)^0,w,c
 11766  00192A  2236               	addwfc	(___fladd@b+2)^0,f,c
 11767  00192C  503B               	movf	(___fladd@a+3)^0,w,c
 11768  00192E  2237               	addwfc	(___fladd@b+3)^0,f,c
 11769  001930  A037               	btfss	(___fladd@b+3)^0,0,c
 11770  001932  EF9D  F00C         	goto	u8371
 11771  001936  EF9F  F00C         	goto	u8370
 11772  00193A                     u8371:
 11773  00193A  EF4B  F00D         	goto	l8311
 11774  00193E                     u8370:
 11775  00193E  A043               	btfss	___fladd@grs^0,0,c
 11776  001940  EFA4  F00C         	goto	u8381
 11777  001944  EFA6  F00C         	goto	u8380
 11778  001948                     u8381:
 11779  001948  EFAC  F00C         	goto	l8265
 11780  00194C                     u8380:
 11781  00194C  90D8               	bcf	status,0,c
 11782  00194E  3043               	rrcf	___fladd@grs^0,w,c
 11783  001950  0901               	iorlw	1
 11784  001952  6E43               	movwf	___fladd@grs^0,c
 11785  001954  EFAE  F00C         	goto	l8267
 11786  001958                     l8265:
 11787  001958  90D8               	bcf	status,0,c
 11788  00195A  3243               	rrcf	___fladd@grs^0,f,c
 11789  00195C                     l8267:
 11790  00195C  A034               	btfss	___fladd@b^0,0,c
 11791  00195E  EFB3  F00C         	goto	u8391
 11792  001962  EFB5  F00C         	goto	u8390
 11793  001966                     u8391:
 11794  001966  EFB6  F00C         	goto	l8271
 11795  00196A                     u8390:
 11796  00196A  8E43               	bsf	___fladd@grs^0,7,c
 11797  00196C                     l8271:
 11798  00196C  3437               	rlcf	(___fladd@b+3)^0,w,c
 11799  00196E  3237               	rrcf	(___fladd@b+3)^0,f,c
 11800  001970  3236               	rrcf	(___fladd@b+2)^0,f,c
 11801  001972  3235               	rrcf	(___fladd@b+1)^0,f,c
 11802  001974  3234               	rrcf	___fladd@b^0,f,c
 11803  001976  2A42               	incf	___fladd@bexp^0,f,c
 11804  001978  EF4B  F00D         	goto	l8311
 11805  00197C                     l8275:
 11806  00197C  5038               	movf	___fladd@a^0,w,c
 11807  00197E  5C34               	subwf	___fladd@b^0,w,c
 11808  001980  5039               	movf	(___fladd@a+1)^0,w,c
 11809  001982  5835               	subwfb	(___fladd@b+1)^0,w,c
 11810  001984  503A               	movf	(___fladd@a+2)^0,w,c
 11811  001986  5836               	subwfb	(___fladd@b+2)^0,w,c
 11812  001988  5037               	movf	(___fladd@b+3)^0,w,c
 11813  00198A  0A80               	xorlw	128
 11814  00198C  6E3C               	movwf	??___fladd^0,c
 11815  00198E  503B               	movf	(___fladd@a+3)^0,w,c
 11816  001990  0A80               	xorlw	128
 11817  001992  583C               	subwfb	??___fladd^0,w,c
 11818  001994  B0D8               	btfsc	status,0,c
 11819  001996  EFCF  F00C         	goto	u8401
 11820  00199A  EFD1  F00C         	goto	u8400
 11821  00199E                     u8401:
 11822  00199E  EFFC  F00C         	goto	l8285
 11823  0019A2                     u8400:
 11824  0019A2  5034               	movf	___fladd@b^0,w,c
 11825  0019A4  5C38               	subwf	___fladd@a^0,w,c
 11826  0019A6  6E3C               	movwf	??___fladd^0,c
 11827  0019A8  5035               	movf	(___fladd@b+1)^0,w,c
 11828  0019AA  5839               	subwfb	(___fladd@a+1)^0,w,c
 11829  0019AC  6E3D               	movwf	(??___fladd+1)^0,c
 11830  0019AE  5036               	movf	(___fladd@b+2)^0,w,c
 11831  0019B0  583A               	subwfb	(___fladd@a+2)^0,w,c
 11832  0019B2  6E3E               	movwf	(??___fladd+2)^0,c
 11833  0019B4  5037               	movf	(___fladd@b+3)^0,w,c
 11834  0019B6  583B               	subwfb	(___fladd@a+3)^0,w,c
 11835  0019B8  6E3F               	movwf	(??___fladd+3)^0,c
 11836  0019BA  0EFF               	movlw	255
 11837  0019BC  243C               	addwf	??___fladd^0,w,c
 11838  0019BE  6E34               	movwf	___fladd@b^0,c
 11839  0019C0  0EFF               	movlw	255
 11840  0019C2  203D               	addwfc	(??___fladd+1)^0,w,c
 11841  0019C4  6E35               	movwf	(___fladd@b+1)^0,c
 11842  0019C6  0EFF               	movlw	255
 11843  0019C8  203E               	addwfc	(??___fladd+2)^0,w,c
 11844  0019CA  6E36               	movwf	(___fladd@b+2)^0,c
 11845  0019CC  0EFF               	movlw	255
 11846  0019CE  203F               	addwfc	(??___fladd+3)^0,w,c
 11847  0019D0  6E37               	movwf	(___fladd@b+3)^0,c
 11848  0019D2  0E80               	movlw	128
 11849  0019D4  1A40               	xorwf	___fladd@signs^0,f,c
 11850  0019D6  6C43               	negf	___fladd@grs^0,c
 11851  0019D8  5043               	movf	___fladd@grs^0,w,c
 11852  0019DA  A4D8               	btfss	status,2,c
 11853  0019DC  EFF2  F00C         	goto	u8411
 11854  0019E0  EFF4  F00C         	goto	u8410
 11855  0019E4                     u8411:
 11856  0019E4  EF04  F00D         	goto	l1506
 11857  0019E8                     u8410:
 11858  0019E8  0E01               	movlw	1
 11859  0019EA  2634               	addwf	___fladd@b^0,f,c
 11860  0019EC  0E00               	movlw	0
 11861  0019EE  2235               	addwfc	(___fladd@b+1)^0,f,c
 11862  0019F0  2236               	addwfc	(___fladd@b+2)^0,f,c
 11863  0019F2  2237               	addwfc	(___fladd@b+3)^0,f,c
 11864  0019F4  EF04  F00D         	goto	l1506
 11865  0019F8                     l8285:
 11866  0019F8  5038               	movf	___fladd@a^0,w,c
 11867  0019FA  5E34               	subwf	___fladd@b^0,f,c
 11868  0019FC  5039               	movf	(___fladd@a+1)^0,w,c
 11869  0019FE  5A35               	subwfb	(___fladd@b+1)^0,f,c
 11870  001A00  503A               	movf	(___fladd@a+2)^0,w,c
 11871  001A02  5A36               	subwfb	(___fladd@b+2)^0,f,c
 11872  001A04  503B               	movf	(___fladd@a+3)^0,w,c
 11873  001A06  5A37               	subwfb	(___fladd@b+3)^0,f,c
 11874  001A08                     l1506:
 11875  001A08  5034               	movf	___fladd@b^0,w,c
 11876  001A0A  1035               	iorwf	(___fladd@b+1)^0,w,c
 11877  001A0C  1036               	iorwf	(___fladd@b+2)^0,w,c
 11878  001A0E  1037               	iorwf	(___fladd@b+3)^0,w,c
 11879  001A10  A4D8               	btfss	status,2,c
 11880  001A12  EF0D  F00D         	goto	u8421
 11881  001A16  EF0F  F00D         	goto	u8420
 11882  001A1A                     u8421:
 11883  001A1A  EF44  F00D         	goto	l8309
 11884  001A1E                     u8420:
 11885  001A1E  5043               	movf	___fladd@grs^0,w,c
 11886  001A20  A4D8               	btfss	status,2,c
 11887  001A22  EF15  F00D         	goto	u8431
 11888  001A26  EF17  F00D         	goto	u8430
 11889  001A2A                     u8431:
 11890  001A2A  EF44  F00D         	goto	l8309
 11891  001A2E                     u8430:
 11892  001A2E  0E00               	movlw	0
 11893  001A30  6E34               	movwf	?___fladd^0,c
 11894  001A32  0E00               	movlw	0
 11895  001A34  6E35               	movwf	(?___fladd+1)^0,c
 11896  001A36  0E00               	movlw	0
 11897  001A38  6E36               	movwf	(?___fladd+2)^0,c
 11898  001A3A  0E00               	movlw	0
 11899  001A3C  6E37               	movwf	(?___fladd+3)^0,c
 11900  001A3E  EFDF  F00D         	goto	l1498
 11901  001A42                     l8293:
 11902  001A42  90D8               	bcf	status,0,c
 11903  001A44  3634               	rlcf	___fladd@b^0,f,c
 11904  001A46  3635               	rlcf	(___fladd@b+1)^0,f,c
 11905  001A48  3636               	rlcf	(___fladd@b+2)^0,f,c
 11906  001A4A  3637               	rlcf	(___fladd@b+3)^0,f,c
 11907  001A4C  AE43               	btfss	___fladd@grs^0,7,c
 11908  001A4E  EF2B  F00D         	goto	u8441
 11909  001A52  EF2D  F00D         	goto	u8440
 11910  001A56                     u8441:
 11911  001A56  EF2E  F00D         	goto	l8299
 11912  001A5A                     u8440:
 11913  001A5A  8034               	bsf	___fladd@b^0,0,c
 11914  001A5C                     l8299:
 11915  001A5C  A043               	btfss	___fladd@grs^0,0,c
 11916  001A5E  EF33  F00D         	goto	u8451
 11917  001A62  EF35  F00D         	goto	u8450
 11918  001A66                     u8451:
 11919  001A66  EF39  F00D         	goto	l8303
 11920  001A6A                     u8450:
 11921  001A6A  80D8               	bsf	status,0,c
 11922  001A6C  3643               	rlcf	___fladd@grs^0,f,c
 11923  001A6E  EF3B  F00D         	goto	l8305
 11924  001A72                     l8303:
 11925  001A72  90D8               	bcf	status,0,c
 11926  001A74  3643               	rlcf	___fladd@grs^0,f,c
 11927  001A76                     l8305:
 11928  001A76  5042               	movf	___fladd@bexp^0,w,c
 11929  001A78  B4D8               	btfsc	status,2,c
 11930  001A7A  EF41  F00D         	goto	u8461
 11931  001A7E  EF43  F00D         	goto	u8460
 11932  001A82                     u8461:
 11933  001A82  EF44  F00D         	goto	l8309
 11934  001A86                     u8460:
 11935  001A86  0642               	decf	___fladd@bexp^0,f,c
 11936  001A88                     l8309:
 11937  001A88  AE36               	btfss	(___fladd@b+2)^0,7,c
 11938  001A8A  EF49  F00D         	goto	u8471
 11939  001A8E  EF4B  F00D         	goto	u8470
 11940  001A92                     u8471:
 11941  001A92  EF21  F00D         	goto	l8293
 11942  001A96                     u8470:
 11943  001A96                     l8311:
 11944  001A96  0E00               	movlw	0
 11945  001A98  6E41               	movwf	___fladd@aexp^0,c
 11946  001A9A  AE43               	btfss	___fladd@grs^0,7,c
 11947  001A9C  EF52  F00D         	goto	u8481
 11948  001AA0  EF54  F00D         	goto	u8480
 11949  001AA4                     u8481:
 11950  001AA4  EF6C  F00D         	goto	l1515
 11951  001AA8                     u8480:
 11952  001AA8  C043  F03C         	movff	___fladd@grs,??___fladd
 11953  001AAC  0E7F               	movlw	127
 11954  001AAE  163C               	andwf	??___fladd^0,f,c
 11955  001AB0  B4D8               	btfsc	status,2,c
 11956  001AB2  EF5D  F00D         	goto	u8491
 11957  001AB6  EF5F  F00D         	goto	u8490
 11958  001ABA                     u8491:
 11959  001ABA  EF63  F00D         	goto	l1516
 11960  001ABE                     u8490:
 11961  001ABE                     l8317:
 11962  001ABE  0E01               	movlw	1
 11963  001AC0  6E41               	movwf	___fladd@aexp^0,c
 11964  001AC2  EF6C  F00D         	goto	l1515
 11965  001AC6                     l1516:
 11966  001AC6  A034               	btfss	___fladd@b^0,0,c
 11967  001AC8  EF68  F00D         	goto	u8501
 11968  001ACC  EF6A  F00D         	goto	u8500
 11969  001AD0                     u8501:
 11970  001AD0  EF6C  F00D         	goto	l1515
 11971  001AD4                     u8500:
 11972  001AD4  EF5F  F00D         	goto	l8317
 11973  001AD8                     l1515:
 11974  001AD8  5041               	movf	___fladd@aexp^0,w,c
 11975  001ADA  B4D8               	btfsc	status,2,c
 11976  001ADC  EF72  F00D         	goto	u8511
 11977  001AE0  EF74  F00D         	goto	u8510
 11978  001AE4                     u8511:
 11979  001AE4  EF9F  F00D         	goto	l8329
 11980  001AE8                     u8510:
 11981  001AE8  0E01               	movlw	1
 11982  001AEA  2634               	addwf	___fladd@b^0,f,c
 11983  001AEC  0E00               	movlw	0
 11984  001AEE  2235               	addwfc	(___fladd@b+1)^0,f,c
 11985  001AF0  2236               	addwfc	(___fladd@b+2)^0,f,c
 11986  001AF2  2237               	addwfc	(___fladd@b+3)^0,f,c
 11987  001AF4  A037               	btfss	(___fladd@b+3)^0,0,c
 11988  001AF6  EF7F  F00D         	goto	u8521
 11989  001AFA  EF81  F00D         	goto	u8520
 11990  001AFE                     u8521:
 11991  001AFE  EF9F  F00D         	goto	l8329
 11992  001B02                     u8520:
 11993  001B02  C034  F03C         	movff	___fladd@b,??___fladd
 11994  001B06  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 11995  001B0A  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 11996  001B0E  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 11997  001B12  343F               	rlcf	(??___fladd+3)^0,w,c
 11998  001B14  323F               	rrcf	(??___fladd+3)^0,f,c
 11999  001B16  323E               	rrcf	(??___fladd+2)^0,f,c
 12000  001B18  323D               	rrcf	(??___fladd+1)^0,f,c
 12001  001B1A  323C               	rrcf	??___fladd^0,f,c
 12002  001B1C  C03C  F034         	movff	??___fladd,___fladd@b
 12003  001B20  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 12004  001B24  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 12005  001B28  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 12006  001B2C  2842               	incf	___fladd@bexp^0,w,c
 12007  001B2E  B4D8               	btfsc	status,2,c
 12008  001B30  EF9C  F00D         	goto	u8531
 12009  001B34  EF9E  F00D         	goto	u8530
 12010  001B38                     u8531:
 12011  001B38  EF9F  F00D         	goto	l8329
 12012  001B3C                     u8530:
 12013  001B3C  2A42               	incf	___fladd@bexp^0,f,c
 12014  001B3E                     l8329:
 12015  001B3E  2842               	incf	___fladd@bexp^0,w,c
 12016  001B40  B4D8               	btfsc	status,2,c
 12017  001B42  EFA5  F00D         	goto	u8541
 12018  001B46  EFA7  F00D         	goto	u8540
 12019  001B4A                     u8541:
 12020  001B4A  EFAF  F00D         	goto	l8333
 12021  001B4E                     u8540:
 12022  001B4E  5042               	movf	___fladd@bexp^0,w,c
 12023  001B50  A4D8               	btfss	status,2,c
 12024  001B52  EFAD  F00D         	goto	u8551
 12025  001B56  EFAF  F00D         	goto	u8550
 12026  001B5A                     u8551:
 12027  001B5A  EFC1  F00D         	goto	l8337
 12028  001B5E                     u8550:
 12029  001B5E                     l8333:
 12030  001B5E  0E00               	movlw	0
 12031  001B60  6E34               	movwf	___fladd@b^0,c
 12032  001B62  0E00               	movlw	0
 12033  001B64  6E35               	movwf	(___fladd@b+1)^0,c
 12034  001B66  0E00               	movlw	0
 12035  001B68  6E36               	movwf	(___fladd@b+2)^0,c
 12036  001B6A  0E00               	movlw	0
 12037  001B6C  6E37               	movwf	(___fladd@b+3)^0,c
 12038  001B6E  5042               	movf	___fladd@bexp^0,w,c
 12039  001B70  A4D8               	btfss	status,2,c
 12040  001B72  EFBD  F00D         	goto	u8561
 12041  001B76  EFBF  F00D         	goto	u8560
 12042  001B7A                     u8561:
 12043  001B7A  EFC1  F00D         	goto	l8337
 12044  001B7E                     u8560:
 12045  001B7E  0E00               	movlw	0
 12046  001B80  6E40               	movwf	___fladd@signs^0,c
 12047  001B82                     l8337:
 12048  001B82  A042               	btfss	___fladd@bexp^0,0,c
 12049  001B84  EFC6  F00D         	goto	u8571
 12050  001B88  EFC8  F00D         	goto	u8570
 12051  001B8C                     u8571:
 12052  001B8C  EFCB  F00D         	goto	l8341
 12053  001B90                     u8570:
 12054  001B90  8E36               	bsf	(___fladd@b+2)^0,7,c
 12055  001B92  EFCC  F00D         	goto	l8343
 12056  001B96                     l8341:
 12057  001B96  9E36               	bcf	(___fladd@b+2)^0,7,c
 12058  001B98                     l8343:
 12059  001B98  90D8               	bcf	status,0,c
 12060  001B9A  3042               	rrcf	___fladd@bexp^0,w,c
 12061  001B9C  6E37               	movwf	(___fladd@b+3)^0,c
 12062  001B9E  AE40               	btfss	___fladd@signs^0,7,c
 12063  001BA0  EFD4  F00D         	goto	u8581
 12064  001BA4  EFD6  F00D         	goto	u8580
 12065  001BA8                     u8581:
 12066  001BA8  EFD7  F00D         	goto	l8349
 12067  001BAC                     u8580:
 12068  001BAC  8E37               	bsf	(___fladd@b+3)^0,7,c
 12069  001BAE                     l8349:
 12070  001BAE  C034  F034         	movff	___fladd@b,?___fladd
 12071  001BB2  C035  F035         	movff	___fladd@b+1,?___fladd+1
 12072  001BB6  C036  F036         	movff	___fladd@b+2,?___fladd+2
 12073  001BBA  C037  F037         	movff	___fladd@b+3,?___fladd+3
 12074  001BBE                     l1498:
 12075  001BBE  0012               	return		;funcret
 12076  001BC0                     __end_of___fladd:
 12077                           	opt callstack 0
 12078                           
 12079 ;; *************** function ___flneg *****************
 12080 ;; Defined at:
 12081 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;  f1              4    5[COMRAM] unsigned char 
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;		None
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  4    5[COMRAM] unsigned char 
 12088 ;; Registers used:
 12089 ;;		wreg, status,2, status,0
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 0/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12095 ;;      Params:         4       0       0       0       0       0       0       0       0
 12096 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12097 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12098 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12099 ;;Total ram usage:        4 bytes
 12100 ;; Hardware stack levels used:    1
 12101 ;; Hardware stack levels required when called:    2
 12102 ;; This function calls:
 12103 ;;		Nothing
 12104 ;; This function is called by:
 12105 ;;		_efgtoa
 12106 ;;		_roundf
 12107 ;; This function uses a non-reentrant model
 12108 ;;
 12109                           
 12110                           	psect	text45
 12111  00556C                     __ptext45:
 12112                           	opt callstack 0
 12113  00556C                     ___flneg:
 12114                           	opt callstack 23
 12115  00556C  5006               	movf	___flneg@f1^0,w,c
 12116  00556E  1007               	iorwf	(___flneg@f1+1)^0,w,c
 12117  005570  1008               	iorwf	(___flneg@f1+2)^0,w,c
 12118  005572  1009               	iorwf	(___flneg@f1+3)^0,w,c
 12119  005574  B4D8               	btfsc	status,2,c
 12120  005576  EFBF  F02A         	goto	u9631
 12121  00557A  EFC1  F02A         	goto	u9630
 12122  00557E                     u9631:
 12123  00557E  EFC9  F02A         	goto	l8933
 12124  005582                     u9630:
 12125  005582  0E00               	movlw	0
 12126  005584  1A06               	xorwf	___flneg@f1^0,f,c
 12127  005586  0E00               	movlw	0
 12128  005588  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 12129  00558A  0E00               	movlw	0
 12130  00558C  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 12131  00558E  0E80               	movlw	128
 12132  005590  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 12133  005592                     l8933:
 12134  005592  C006  F006         	movff	___flneg@f1,?___flneg
 12135  005596  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 12136  00559A  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 12137  00559E  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 12138  0055A2  0012               	return		;funcret
 12139  0055A4                     __end_of___flneg:
 12140                           	opt callstack 0
 12141                           
 12142 ;; *************** function ___flmul *****************
 12143 ;; Defined at:
 12144 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;  b               4   26[COMRAM] unsigned char 
 12147 ;;  a               4   30[COMRAM] unsigned char 
 12148 ;; Auto vars:     Size  Location     Type
 12149 ;;  prod            4   45[COMRAM] struct .
 12150 ;;  grs             4   40[COMRAM] unsigned long 
 12151 ;;  temp            2   49[COMRAM] struct .
 12152 ;;  bexp            1   44[COMRAM] unsigned char 
 12153 ;;  aexp            1   39[COMRAM] unsigned char 
 12154 ;;  sign            1   38[COMRAM] unsigned char 
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  4   26[COMRAM] unsigned char 
 12157 ;; Registers used:
 12158 ;;		wreg, status,2, status,0, prodl, prodh
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12164 ;;      Params:         8       0       0       0       0       0       0       0       0
 12165 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12166 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12167 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12168 ;;Total ram usage:       25 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:    2
 12171 ;; This function calls:
 12172 ;;		Nothing
 12173 ;; This function is called by:
 12174 ;;		_pwmDuty
 12175 ;;		_PID
 12176 ;;		_efgtoa
 12177 ;;		_roundf
 12178 ;; This function uses a non-reentrant model
 12179 ;;
 12180                           
 12181                           	psect	text46
 12182  001FEE                     __ptext46:
 12183                           	opt callstack 0
 12184  001FEE                     ___flmul:
 12185                           	opt callstack 23
 12186  001FEE  501E               	movf	(___flmul@b+3)^0,w,c
 12187  001FF0  0B80               	andlw	128
 12188  001FF2  6E27               	movwf	___flmul@sign^0,c
 12189  001FF4  501E               	movf	(___flmul@b+3)^0,w,c
 12190  001FF6  241E               	addwf	(___flmul@b+3)^0,w,c
 12191  001FF8  6E2D               	movwf	___flmul@bexp^0,c
 12192  001FFA  AE1D               	btfss	(___flmul@b+2)^0,7,c
 12193  001FFC  EF02  F010         	goto	u9241
 12194  002000  EF04  F010         	goto	u9240
 12195  002004                     u9241:
 12196  002004  EF05  F010         	goto	l8681
 12197  002008                     u9240:
 12198  002008  802D               	bsf	___flmul@bexp^0,0,c
 12199  00200A                     l8681:
 12200  00200A  502D               	movf	___flmul@bexp^0,w,c
 12201  00200C  B4D8               	btfsc	status,2,c
 12202  00200E  EF0B  F010         	goto	u9251
 12203  002012  EF0D  F010         	goto	u9250
 12204  002016                     u9251:
 12205  002016  EF20  F010         	goto	l8689
 12206  00201A                     u9250:
 12207  00201A  282D               	incf	___flmul@bexp^0,w,c
 12208  00201C  A4D8               	btfss	status,2,c
 12209  00201E  EF13  F010         	goto	u9261
 12210  002022  EF15  F010         	goto	u9260
 12211  002026                     u9261:
 12212  002026  EF1D  F010         	goto	l8687
 12213  00202A                     u9260:
 12214  00202A  0E00               	movlw	0
 12215  00202C  6E1B               	movwf	___flmul@b^0,c
 12216  00202E  0E00               	movlw	0
 12217  002030  6E1C               	movwf	(___flmul@b+1)^0,c
 12218  002032  0E00               	movlw	0
 12219  002034  6E1D               	movwf	(___flmul@b+2)^0,c
 12220  002036  0E00               	movlw	0
 12221  002038  6E1E               	movwf	(___flmul@b+3)^0,c
 12222  00203A                     l8687:
 12223  00203A  8E1D               	bsf	(___flmul@b+2)^0,7,c
 12224  00203C  EF28  F010         	goto	l8691
 12225  002040                     l8689:
 12226  002040  0E00               	movlw	0
 12227  002042  6E1B               	movwf	___flmul@b^0,c
 12228  002044  0E00               	movlw	0
 12229  002046  6E1C               	movwf	(___flmul@b+1)^0,c
 12230  002048  0E00               	movlw	0
 12231  00204A  6E1D               	movwf	(___flmul@b+2)^0,c
 12232  00204C  0E00               	movlw	0
 12233  00204E  6E1E               	movwf	(___flmul@b+3)^0,c
 12234  002050                     l8691:
 12235  002050  5022               	movf	(___flmul@a+3)^0,w,c
 12236  002052  0B80               	andlw	128
 12237  002054  1A27               	xorwf	___flmul@sign^0,f,c
 12238  002056  5022               	movf	(___flmul@a+3)^0,w,c
 12239  002058  2422               	addwf	(___flmul@a+3)^0,w,c
 12240  00205A  6E28               	movwf	___flmul@aexp^0,c
 12241  00205C  AE21               	btfss	(___flmul@a+2)^0,7,c
 12242  00205E  EF33  F010         	goto	u9271
 12243  002062  EF35  F010         	goto	u9270
 12244  002066                     u9271:
 12245  002066  EF36  F010         	goto	l8699
 12246  00206A                     u9270:
 12247  00206A  8028               	bsf	___flmul@aexp^0,0,c
 12248  00206C                     l8699:
 12249  00206C  5028               	movf	___flmul@aexp^0,w,c
 12250  00206E  B4D8               	btfsc	status,2,c
 12251  002070  EF3C  F010         	goto	u9281
 12252  002074  EF3E  F010         	goto	u9280
 12253  002078                     u9281:
 12254  002078  EF51  F010         	goto	l8707
 12255  00207C                     u9280:
 12256  00207C  2828               	incf	___flmul@aexp^0,w,c
 12257  00207E  A4D8               	btfss	status,2,c
 12258  002080  EF44  F010         	goto	u9291
 12259  002084  EF46  F010         	goto	u9290
 12260  002088                     u9291:
 12261  002088  EF4E  F010         	goto	l8705
 12262  00208C                     u9290:
 12263  00208C  0E00               	movlw	0
 12264  00208E  6E1F               	movwf	___flmul@a^0,c
 12265  002090  0E00               	movlw	0
 12266  002092  6E20               	movwf	(___flmul@a+1)^0,c
 12267  002094  0E00               	movlw	0
 12268  002096  6E21               	movwf	(___flmul@a+2)^0,c
 12269  002098  0E00               	movlw	0
 12270  00209A  6E22               	movwf	(___flmul@a+3)^0,c
 12271  00209C                     l8705:
 12272  00209C  8E21               	bsf	(___flmul@a+2)^0,7,c
 12273  00209E  EF59  F010         	goto	l1575
 12274  0020A2                     l8707:
 12275  0020A2  0E00               	movlw	0
 12276  0020A4  6E1F               	movwf	___flmul@a^0,c
 12277  0020A6  0E00               	movlw	0
 12278  0020A8  6E20               	movwf	(___flmul@a+1)^0,c
 12279  0020AA  0E00               	movlw	0
 12280  0020AC  6E21               	movwf	(___flmul@a+2)^0,c
 12281  0020AE  0E00               	movlw	0
 12282  0020B0  6E22               	movwf	(___flmul@a+3)^0,c
 12283  0020B2                     l1575:
 12284  0020B2  5028               	movf	___flmul@aexp^0,w,c
 12285  0020B4  B4D8               	btfsc	status,2,c
 12286  0020B6  EF5F  F010         	goto	u9301
 12287  0020BA  EF61  F010         	goto	u9300
 12288  0020BE                     u9301:
 12289  0020BE  EF69  F010         	goto	l8711
 12290  0020C2                     u9300:
 12291  0020C2  502D               	movf	___flmul@bexp^0,w,c
 12292  0020C4  A4D8               	btfss	status,2,c
 12293  0020C6  EF67  F010         	goto	u9311
 12294  0020CA  EF69  F010         	goto	u9310
 12295  0020CE                     u9311:
 12296  0020CE  EF73  F010         	goto	l8715
 12297  0020D2                     u9310:
 12298  0020D2                     l8711:
 12299  0020D2  0E00               	movlw	0
 12300  0020D4  6E1B               	movwf	?___flmul^0,c
 12301  0020D6  0E00               	movlw	0
 12302  0020D8  6E1C               	movwf	(?___flmul+1)^0,c
 12303  0020DA  0E00               	movlw	0
 12304  0020DC  6E1D               	movwf	(?___flmul+2)^0,c
 12305  0020DE  0E00               	movlw	0
 12306  0020E0  6E1E               	movwf	(?___flmul+3)^0,c
 12307  0020E2  EF0B  F012         	goto	l1579
 12308  0020E6                     l8715:
 12309  0020E6  5021               	movf	(___flmul@a+2)^0,w,c
 12310  0020E8  021B               	mulwf	___flmul@b^0,c
 12311  0020EA  CFF3 F032          	movff	prodl,___flmul@temp
 12312  0020EE  CFF4 F033          	movff	prodh,___flmul@temp+1
 12313  0020F2  5032               	movf	___flmul@temp^0,w,c
 12314  0020F4  6E29               	movwf	___flmul@grs^0,c
 12315  0020F6  6A2A               	clrf	(___flmul@grs+1)^0,c
 12316  0020F8  6A2B               	clrf	(___flmul@grs+2)^0,c
 12317  0020FA  6A2C               	clrf	(___flmul@grs+3)^0,c
 12318  0020FC  5033               	movf	(___flmul@temp+1)^0,w,c
 12319  0020FE  6E2E               	movwf	___flmul@prod^0,c
 12320  002100  6A2F               	clrf	(___flmul@prod+1)^0,c
 12321  002102  6A30               	clrf	(___flmul@prod+2)^0,c
 12322  002104  6A31               	clrf	(___flmul@prod+3)^0,c
 12323  002106  5020               	movf	(___flmul@a+1)^0,w,c
 12324  002108  021C               	mulwf	(___flmul@b+1)^0,c
 12325  00210A  CFF3 F032          	movff	prodl,___flmul@temp
 12326  00210E  CFF4 F033          	movff	prodh,___flmul@temp+1
 12327  002112  5032               	movf	___flmul@temp^0,w,c
 12328  002114  2629               	addwf	___flmul@grs^0,f,c
 12329  002116  0E00               	movlw	0
 12330  002118  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12331  00211A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12332  00211C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12333  00211E  5033               	movf	(___flmul@temp+1)^0,w,c
 12334  002120  262E               	addwf	___flmul@prod^0,f,c
 12335  002122  0E00               	movlw	0
 12336  002124  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12337  002126  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12338  002128  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12339  00212A  501F               	movf	___flmul@a^0,w,c
 12340  00212C  021D               	mulwf	(___flmul@b+2)^0,c
 12341  00212E  CFF3 F032          	movff	prodl,___flmul@temp
 12342  002132  CFF4 F033          	movff	prodh,___flmul@temp+1
 12343  002136  5032               	movf	___flmul@temp^0,w,c
 12344  002138  2629               	addwf	___flmul@grs^0,f,c
 12345  00213A  0E00               	movlw	0
 12346  00213C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12347  00213E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12348  002140  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12349  002142  5033               	movf	(___flmul@temp+1)^0,w,c
 12350  002144  262E               	addwf	___flmul@prod^0,f,c
 12351  002146  0E00               	movlw	0
 12352  002148  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12353  00214A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12354  00214C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12355  00214E  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12356  002152  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12357  002156  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12358  00215A  6A29               	clrf	___flmul@grs^0,c
 12359  00215C  501F               	movf	___flmul@a^0,w,c
 12360  00215E  021C               	mulwf	(___flmul@b+1)^0,c
 12361  002160  CFF3 F032          	movff	prodl,___flmul@temp
 12362  002164  CFF4 F033          	movff	prodh,___flmul@temp+1
 12363  002168  5032               	movf	___flmul@temp^0,w,c
 12364  00216A  2629               	addwf	___flmul@grs^0,f,c
 12365  00216C  5033               	movf	(___flmul@temp+1)^0,w,c
 12366  00216E  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12367  002170  0E00               	movlw	0
 12368  002172  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12369  002174  0E00               	movlw	0
 12370  002176  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12371  002178  5020               	movf	(___flmul@a+1)^0,w,c
 12372  00217A  021B               	mulwf	___flmul@b^0,c
 12373  00217C  CFF3 F032          	movff	prodl,___flmul@temp
 12374  002180  CFF4 F033          	movff	prodh,___flmul@temp+1
 12375  002184  5032               	movf	___flmul@temp^0,w,c
 12376  002186  2629               	addwf	___flmul@grs^0,f,c
 12377  002188  5033               	movf	(___flmul@temp+1)^0,w,c
 12378  00218A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12379  00218C  0E00               	movlw	0
 12380  00218E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12381  002190  0E00               	movlw	0
 12382  002192  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12383  002194  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12384  002198  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12385  00219C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12386  0021A0  6A29               	clrf	___flmul@grs^0,c
 12387  0021A2  501F               	movf	___flmul@a^0,w,c
 12388  0021A4  021B               	mulwf	___flmul@b^0,c
 12389  0021A6  CFF3 F032          	movff	prodl,___flmul@temp
 12390  0021AA  CFF4 F033          	movff	prodh,___flmul@temp+1
 12391  0021AE  5032               	movf	___flmul@temp^0,w,c
 12392  0021B0  2629               	addwf	___flmul@grs^0,f,c
 12393  0021B2  5033               	movf	(___flmul@temp+1)^0,w,c
 12394  0021B4  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12395  0021B6  0E00               	movlw	0
 12396  0021B8  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12397  0021BA  0E00               	movlw	0
 12398  0021BC  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12399  0021BE  5021               	movf	(___flmul@a+2)^0,w,c
 12400  0021C0  021C               	mulwf	(___flmul@b+1)^0,c
 12401  0021C2  CFF3 F032          	movff	prodl,___flmul@temp
 12402  0021C6  CFF4 F033          	movff	prodh,___flmul@temp+1
 12403  0021CA  5032               	movf	___flmul@temp^0,w,c
 12404  0021CC  262E               	addwf	___flmul@prod^0,f,c
 12405  0021CE  5033               	movf	(___flmul@temp+1)^0,w,c
 12406  0021D0  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12407  0021D2  0E00               	movlw	0
 12408  0021D4  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12409  0021D6  0E00               	movlw	0
 12410  0021D8  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12411  0021DA  5020               	movf	(___flmul@a+1)^0,w,c
 12412  0021DC  021D               	mulwf	(___flmul@b+2)^0,c
 12413  0021DE  CFF3 F032          	movff	prodl,___flmul@temp
 12414  0021E2  CFF4 F033          	movff	prodh,___flmul@temp+1
 12415  0021E6  5032               	movf	___flmul@temp^0,w,c
 12416  0021E8  262E               	addwf	___flmul@prod^0,f,c
 12417  0021EA  5033               	movf	(___flmul@temp+1)^0,w,c
 12418  0021EC  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12419  0021EE  0E00               	movlw	0
 12420  0021F0  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12421  0021F2  0E00               	movlw	0
 12422  0021F4  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12423  0021F6  5021               	movf	(___flmul@a+2)^0,w,c
 12424  0021F8  021D               	mulwf	(___flmul@b+2)^0,c
 12425  0021FA  CFF3 F032          	movff	prodl,___flmul@temp
 12426  0021FE  CFF4 F033          	movff	prodh,___flmul@temp+1
 12427  002202  5032               	movf	___flmul@temp^0,w,c
 12428  002204  6E23               	movwf	??___flmul^0,c
 12429  002206  5033               	movf	(___flmul@temp+1)^0,w,c
 12430  002208  6E24               	movwf	(??___flmul+1)^0,c
 12431  00220A  6A25               	clrf	(??___flmul+2)^0,c
 12432  00220C  6A26               	clrf	(??___flmul+3)^0,c
 12433  00220E  C025  F026         	movff	??___flmul+2,??___flmul+3
 12434  002212  C024  F025         	movff	??___flmul+1,??___flmul+2
 12435  002216  C023  F024         	movff	??___flmul,??___flmul+1
 12436  00221A  6A23               	clrf	??___flmul^0,c
 12437  00221C  5023               	movf	??___flmul^0,w,c
 12438  00221E  262E               	addwf	___flmul@prod^0,f,c
 12439  002220  5024               	movf	(??___flmul+1)^0,w,c
 12440  002222  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12441  002224  5025               	movf	(??___flmul+2)^0,w,c
 12442  002226  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12443  002228  5026               	movf	(??___flmul+3)^0,w,c
 12444  00222A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12445  00222C  C029  F023         	movff	___flmul@grs,??___flmul
 12446  002230  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 12447  002234  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 12448  002238  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 12449  00223C  0E19               	movlw	25
 12450  00223E  EF26  F011         	goto	u9320
 12451  002242                     u9325:
 12452  002242  90D8               	bcf	status,0,c
 12453  002244  3226               	rrcf	(??___flmul+3)^0,f,c
 12454  002246  3225               	rrcf	(??___flmul+2)^0,f,c
 12455  002248  3224               	rrcf	(??___flmul+1)^0,f,c
 12456  00224A  3223               	rrcf	??___flmul^0,f,c
 12457  00224C                     u9320:
 12458  00224C  2EE8               	decfsz	wreg,f,c
 12459  00224E  EF21  F011         	goto	u9325
 12460  002252  5023               	movf	??___flmul^0,w,c
 12461  002254  262E               	addwf	___flmul@prod^0,f,c
 12462  002256  5024               	movf	(??___flmul+1)^0,w,c
 12463  002258  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12464  00225A  5025               	movf	(??___flmul+2)^0,w,c
 12465  00225C  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12466  00225E  5026               	movf	(??___flmul+3)^0,w,c
 12467  002260  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12468  002262  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12469  002266  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12470  00226A  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12471  00226E  6A29               	clrf	___flmul@grs^0,c
 12472  002270  5028               	movf	___flmul@aexp^0,w,c
 12473  002272  C02D  F023         	movff	___flmul@bexp,??___flmul
 12474  002276  6A24               	clrf	(??___flmul+1)^0,c
 12475  002278  2623               	addwf	??___flmul^0,f,c
 12476  00227A  0E00               	movlw	0
 12477  00227C  2224               	addwfc	(??___flmul+1)^0,f,c
 12478  00227E  0E82               	movlw	130
 12479  002280  2423               	addwf	??___flmul^0,w,c
 12480  002282  6E32               	movwf	___flmul@temp^0,c
 12481  002284  0EFF               	movlw	255
 12482  002286  2024               	addwfc	(??___flmul+1)^0,w,c
 12483  002288  6E33               	movwf	(___flmul@temp+1)^0,c
 12484  00228A  EF5C  F011         	goto	l8763
 12485  00228E                     l8757:
 12486  00228E  90D8               	bcf	status,0,c
 12487  002290  362E               	rlcf	___flmul@prod^0,f,c
 12488  002292  362F               	rlcf	(___flmul@prod+1)^0,f,c
 12489  002294  3630               	rlcf	(___flmul@prod+2)^0,f,c
 12490  002296  3631               	rlcf	(___flmul@prod+3)^0,f,c
 12491  002298  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12492  00229A  EF51  F011         	goto	u9331
 12493  00229E  EF53  F011         	goto	u9330
 12494  0022A2                     u9331:
 12495  0022A2  EF54  F011         	goto	l1582
 12496  0022A6                     u9330:
 12497  0022A6  802E               	bsf	___flmul@prod^0,0,c
 12498  0022A8                     l1582:
 12499  0022A8  90D8               	bcf	status,0,c
 12500  0022AA  3629               	rlcf	___flmul@grs^0,f,c
 12501  0022AC  362A               	rlcf	(___flmul@grs+1)^0,f,c
 12502  0022AE  362B               	rlcf	(___flmul@grs+2)^0,f,c
 12503  0022B0  362C               	rlcf	(___flmul@grs+3)^0,f,c
 12504  0022B2  0632               	decf	___flmul@temp^0,f,c
 12505  0022B4  A0D8               	btfss	status,0,c
 12506  0022B6  0633               	decf	(___flmul@temp+1)^0,f,c
 12507  0022B8                     l8763:
 12508  0022B8  AE30               	btfss	(___flmul@prod+2)^0,7,c
 12509  0022BA  EF61  F011         	goto	u9341
 12510  0022BE  EF63  F011         	goto	u9340
 12511  0022C2                     u9341:
 12512  0022C2  EF47  F011         	goto	l8757
 12513  0022C6                     u9340:
 12514  0022C6  0E00               	movlw	0
 12515  0022C8  6E28               	movwf	___flmul@aexp^0,c
 12516  0022CA  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12517  0022CC  EF6A  F011         	goto	u9351
 12518  0022D0  EF6C  F011         	goto	u9350
 12519  0022D4                     u9351:
 12520  0022D4  EF90  F011         	goto	l1584
 12521  0022D8                     u9350:
 12522  0022D8  0EFF               	movlw	255
 12523  0022DA  1429               	andwf	___flmul@grs^0,w,c
 12524  0022DC  6E23               	movwf	??___flmul^0,c
 12525  0022DE  0EFF               	movlw	255
 12526  0022E0  142A               	andwf	(___flmul@grs+1)^0,w,c
 12527  0022E2  6E24               	movwf	(??___flmul+1)^0,c
 12528  0022E4  0EFF               	movlw	255
 12529  0022E6  142B               	andwf	(___flmul@grs+2)^0,w,c
 12530  0022E8  6E25               	movwf	(??___flmul+2)^0,c
 12531  0022EA  0E7F               	movlw	127
 12532  0022EC  142C               	andwf	(___flmul@grs+3)^0,w,c
 12533  0022EE  6E26               	movwf	(??___flmul+3)^0,c
 12534  0022F0  5023               	movf	??___flmul^0,w,c
 12535  0022F2  1024               	iorwf	(??___flmul+1)^0,w,c
 12536  0022F4  1025               	iorwf	(??___flmul+2)^0,w,c
 12537  0022F6  1026               	iorwf	(??___flmul+3)^0,w,c
 12538  0022F8  B4D8               	btfsc	status,2,c
 12539  0022FA  EF81  F011         	goto	u9361
 12540  0022FE  EF83  F011         	goto	u9360
 12541  002302                     u9361:
 12542  002302  EF87  F011         	goto	l1585
 12543  002306                     u9360:
 12544  002306                     l8771:
 12545  002306  0E01               	movlw	1
 12546  002308  6E28               	movwf	___flmul@aexp^0,c
 12547  00230A  EF90  F011         	goto	l1584
 12548  00230E                     l1585:
 12549  00230E  A02E               	btfss	___flmul@prod^0,0,c
 12550  002310  EF8C  F011         	goto	u9371
 12551  002314  EF8E  F011         	goto	u9370
 12552  002318                     u9371:
 12553  002318  EF90  F011         	goto	l1584
 12554  00231C                     u9370:
 12555  00231C  EF83  F011         	goto	l8771
 12556  002320                     l1584:
 12557  002320  5028               	movf	___flmul@aexp^0,w,c
 12558  002322  B4D8               	btfsc	status,2,c
 12559  002324  EF96  F011         	goto	u9381
 12560  002328  EF98  F011         	goto	u9380
 12561  00232C                     u9381:
 12562  00232C  EFBC  F011         	goto	l8783
 12563  002330                     u9380:
 12564  002330  0E01               	movlw	1
 12565  002332  262E               	addwf	___flmul@prod^0,f,c
 12566  002334  0E00               	movlw	0
 12567  002336  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12568  002338  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12569  00233A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12570  00233C  A031               	btfss	(___flmul@prod+3)^0,0,c
 12571  00233E  EFA3  F011         	goto	u9391
 12572  002342  EFA5  F011         	goto	u9390
 12573  002346                     u9391:
 12574  002346  EFBC  F011         	goto	l8783
 12575  00234A                     u9390:
 12576  00234A  C02E  F023         	movff	___flmul@prod,??___flmul
 12577  00234E  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 12578  002352  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 12579  002356  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 12580  00235A  3426               	rlcf	(??___flmul+3)^0,w,c
 12581  00235C  3226               	rrcf	(??___flmul+3)^0,f,c
 12582  00235E  3225               	rrcf	(??___flmul+2)^0,f,c
 12583  002360  3224               	rrcf	(??___flmul+1)^0,f,c
 12584  002362  3223               	rrcf	??___flmul^0,f,c
 12585  002364  C023  F02E         	movff	??___flmul,___flmul@prod
 12586  002368  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 12587  00236C  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 12588  002370  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 12589  002374  4A32               	infsnz	___flmul@temp^0,f,c
 12590  002376  2A33               	incf	(___flmul@temp+1)^0,f,c
 12591  002378                     l8783:
 12592  002378  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12593  00237A  EFC7  F011         	goto	u9401
 12594  00237E  5033               	movf	(___flmul@temp+1)^0,w,c
 12595  002380  E108               	bnz	u9400
 12596  002382  2832               	incf	___flmul@temp^0,w,c
 12597  002384  A0D8               	btfss	status,0,c
 12598  002386  EFC7  F011         	goto	u9401
 12599  00238A  EFC9  F011         	goto	u9400
 12600  00238E                     u9401:
 12601  00238E  EFD3  F011         	goto	l8787
 12602  002392                     u9400:
 12603  002392  0E00               	movlw	0
 12604  002394  6E2E               	movwf	___flmul@prod^0,c
 12605  002396  0E00               	movlw	0
 12606  002398  6E2F               	movwf	(___flmul@prod+1)^0,c
 12607  00239A  0E80               	movlw	128
 12608  00239C  6E30               	movwf	(___flmul@prod+2)^0,c
 12609  00239E  0E7F               	movlw	127
 12610  0023A0  6E31               	movwf	(___flmul@prod+3)^0,c
 12611  0023A2  EF01  F012         	goto	l8799
 12612  0023A6                     l8787:
 12613  0023A6  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12614  0023A8  EFE0  F011         	goto	u9410
 12615  0023AC  5033               	movf	(___flmul@temp+1)^0,w,c
 12616  0023AE  E106               	bnz	u9411
 12617  0023B0  0432               	decf	___flmul@temp^0,w,c
 12618  0023B2  B0D8               	btfsc	status,0,c
 12619  0023B4  EFDE  F011         	goto	u9411
 12620  0023B8  EFE0  F011         	goto	u9410
 12621  0023BC                     u9411:
 12622  0023BC  EFEC  F011         	goto	l1592
 12623  0023C0                     u9410:
 12624  0023C0  0E00               	movlw	0
 12625  0023C2  6E2E               	movwf	___flmul@prod^0,c
 12626  0023C4  0E00               	movlw	0
 12627  0023C6  6E2F               	movwf	(___flmul@prod+1)^0,c
 12628  0023C8  0E00               	movlw	0
 12629  0023CA  6E30               	movwf	(___flmul@prod+2)^0,c
 12630  0023CC  0E00               	movlw	0
 12631  0023CE  6E31               	movwf	(___flmul@prod+3)^0,c
 12632  0023D0  0E00               	movlw	0
 12633  0023D2  6E27               	movwf	___flmul@sign^0,c
 12634  0023D4  EF01  F012         	goto	l8799
 12635  0023D8                     l1592:
 12636  0023D8  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 12637  0023DC  0EFF               	movlw	255
 12638  0023DE  162E               	andwf	___flmul@prod^0,f,c
 12639  0023E0  0EFF               	movlw	255
 12640  0023E2  162F               	andwf	(___flmul@prod+1)^0,f,c
 12641  0023E4  0E7F               	movlw	127
 12642  0023E6  1630               	andwf	(___flmul@prod+2)^0,f,c
 12643  0023E8  0E00               	movlw	0
 12644  0023EA  1631               	andwf	(___flmul@prod+3)^0,f,c
 12645  0023EC  A02D               	btfss	___flmul@bexp^0,0,c
 12646  0023EE  EFFB  F011         	goto	u9421
 12647  0023F2  EFFD  F011         	goto	u9420
 12648  0023F6                     u9421:
 12649  0023F6  EFFE  F011         	goto	l8797
 12650  0023FA                     u9420:
 12651  0023FA  8E30               	bsf	(___flmul@prod+2)^0,7,c
 12652  0023FC                     l8797:
 12653  0023FC  90D8               	bcf	status,0,c
 12654  0023FE  302D               	rrcf	___flmul@bexp^0,w,c
 12655  002400  6E31               	movwf	(___flmul@prod+3)^0,c
 12656  002402                     l8799:
 12657  002402  5027               	movf	___flmul@sign^0,w,c
 12658  002404  1231               	iorwf	(___flmul@prod+3)^0,f,c
 12659  002406  C02E  F01B         	movff	___flmul@prod,?___flmul
 12660  00240A  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 12661  00240E  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 12662  002412  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 12663  002416                     l1579:
 12664  002416  0012               	return		;funcret
 12665  002418                     __end_of___flmul:
 12666                           	opt callstack 0
 12667                           
 12668 ;; *************** function ___fleq *****************
 12669 ;; Defined at:
 12670 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;  ff1             4    5[COMRAM] unsigned char 
 12673 ;;  ff2             4    9[COMRAM] unsigned char 
 12674 ;; Auto vars:     Size  Location     Type
 12675 ;;		None
 12676 ;; Return value:  Size  Location     Type
 12677 ;;		None               void
 12678 ;; Registers used:
 12679 ;;		wreg, status,2, status,0
 12680 ;; Tracked objects:
 12681 ;;		On entry : 0/0
 12682 ;;		On exit  : 0/0
 12683 ;;		Unchanged: 0/0
 12684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12685 ;;      Params:         8       0       0       0       0       0       0       0       0
 12686 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12687 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12688 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12689 ;;Total ram usage:       12 bytes
 12690 ;; Hardware stack levels used:    1
 12691 ;; Hardware stack levels required when called:    2
 12692 ;; This function calls:
 12693 ;;		Nothing
 12694 ;; This function is called by:
 12695 ;;		_efgtoa
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text47
 12700  004966                     __ptext47:
 12701                           	opt callstack 0
 12702  004966                     ___fleq:
 12703                           	opt callstack 23
 12704  004966  0E00               	movlw	0
 12705  004968  1406               	andwf	___fleq@ff1^0,w,c
 12706  00496A  6E0E               	movwf	??___fleq^0,c
 12707  00496C  0E00               	movlw	0
 12708  00496E  1407               	andwf	(___fleq@ff1+1)^0,w,c
 12709  004970  6E0F               	movwf	(??___fleq+1)^0,c
 12710  004972  0E80               	movlw	128
 12711  004974  1408               	andwf	(___fleq@ff1+2)^0,w,c
 12712  004976  6E10               	movwf	(??___fleq+2)^0,c
 12713  004978  0E7F               	movlw	127
 12714  00497A  1409               	andwf	(___fleq@ff1+3)^0,w,c
 12715  00497C  6E11               	movwf	(??___fleq+3)^0,c
 12716  00497E  500E               	movf	??___fleq^0,w,c
 12717  004980  100F               	iorwf	(??___fleq+1)^0,w,c
 12718  004982  1010               	iorwf	(??___fleq+2)^0,w,c
 12719  004984  1011               	iorwf	(??___fleq+3)^0,w,c
 12720  004986  A4D8               	btfss	status,2,c
 12721  004988  EFC8  F024         	goto	u9551
 12722  00498C  EFCA  F024         	goto	u9550
 12723  004990                     u9551:
 12724  004990  EFD2  F024         	goto	l8895
 12725  004994                     u9550:
 12726  004994  0E00               	movlw	0
 12727  004996  6E06               	movwf	___fleq@ff1^0,c
 12728  004998  0E00               	movlw	0
 12729  00499A  6E07               	movwf	(___fleq@ff1+1)^0,c
 12730  00499C  0E00               	movlw	0
 12731  00499E  6E08               	movwf	(___fleq@ff1+2)^0,c
 12732  0049A0  0E00               	movlw	0
 12733  0049A2  6E09               	movwf	(___fleq@ff1+3)^0,c
 12734  0049A4                     l8895:
 12735  0049A4  0E00               	movlw	0
 12736  0049A6  140A               	andwf	___fleq@ff2^0,w,c
 12737  0049A8  6E0E               	movwf	??___fleq^0,c
 12738  0049AA  0E00               	movlw	0
 12739  0049AC  140B               	andwf	(___fleq@ff2+1)^0,w,c
 12740  0049AE  6E0F               	movwf	(??___fleq+1)^0,c
 12741  0049B0  0E80               	movlw	128
 12742  0049B2  140C               	andwf	(___fleq@ff2+2)^0,w,c
 12743  0049B4  6E10               	movwf	(??___fleq+2)^0,c
 12744  0049B6  0E7F               	movlw	127
 12745  0049B8  140D               	andwf	(___fleq@ff2+3)^0,w,c
 12746  0049BA  6E11               	movwf	(??___fleq+3)^0,c
 12747  0049BC  500E               	movf	??___fleq^0,w,c
 12748  0049BE  100F               	iorwf	(??___fleq+1)^0,w,c
 12749  0049C0  1010               	iorwf	(??___fleq+2)^0,w,c
 12750  0049C2  1011               	iorwf	(??___fleq+3)^0,w,c
 12751  0049C4  A4D8               	btfss	status,2,c
 12752  0049C6  EFE7  F024         	goto	u9561
 12753  0049CA  EFE9  F024         	goto	u9560
 12754  0049CE                     u9561:
 12755  0049CE  EFF1  F024         	goto	l8899
 12756  0049D2                     u9560:
 12757  0049D2  0E00               	movlw	0
 12758  0049D4  6E0A               	movwf	___fleq@ff2^0,c
 12759  0049D6  0E00               	movlw	0
 12760  0049D8  6E0B               	movwf	(___fleq@ff2+1)^0,c
 12761  0049DA  0E00               	movlw	0
 12762  0049DC  6E0C               	movwf	(___fleq@ff2+2)^0,c
 12763  0049DE  0E00               	movlw	0
 12764  0049E0  6E0D               	movwf	(___fleq@ff2+3)^0,c
 12765  0049E2                     l8899:
 12766  0049E2  500A               	movf	___fleq@ff2^0,w,c
 12767  0049E4  1806               	xorwf	___fleq@ff1^0,w,c
 12768  0049E6  E10F               	bnz	u9570
 12769  0049E8  500B               	movf	(___fleq@ff2+1)^0,w,c
 12770  0049EA  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 12771  0049EC  E10C               	bnz	u9570
 12772  0049EE  500C               	movf	(___fleq@ff2+2)^0,w,c
 12773  0049F0  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 12774  0049F2  E109               	bnz	u9570
 12775  0049F4  500D               	movf	(___fleq@ff2+3)^0,w,c
 12776  0049F6  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 12777  0049F8  B4D8               	btfsc	status,2,c
 12778  0049FA  EF01  F025         	goto	u9571
 12779  0049FE  EF03  F025         	goto	u9570
 12780  004A02                     u9571:
 12781  004A02  EF06  F025         	goto	l8903
 12782  004A06                     u9570:
 12783  004A06  90D8               	bcf	status,0,c
 12784  004A08  EF07  F025         	goto	l1220
 12785  004A0C                     l8903:
 12786  004A0C  80D8               	bsf	status,0,c
 12787  004A0E                     l1220:
 12788  004A0E  0012               	return		;funcret
 12789  004A10                     __end_of___fleq:
 12790                           	opt callstack 0
 12791                           
 12792 ;; *************** function ___fldiv *****************
 12793 ;; Defined at:
 12794 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  b               4   67[COMRAM] unsigned char 
 12797 ;;  a               4   71[COMRAM] unsigned char 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;  grs             4    7[BANK0 ] unsigned long 
 12800 ;;  rem             4    0[BANK0 ] unsigned long 
 12801 ;;  new_exp         2    5[BANK0 ] short 
 12802 ;;  aexp            1   12[BANK0 ] unsigned char 
 12803 ;;  bexp            1   11[BANK0 ] unsigned char 
 12804 ;;  sign            1    4[BANK0 ] unsigned char 
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  4   67[COMRAM] unsigned char 
 12807 ;; Registers used:
 12808 ;;		wreg, status,2, status,0
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12814 ;;      Params:         8       0       0       0       0       0       0       0       0
 12815 ;;      Locals:         0      13       0       0       0       0       0       0       0
 12816 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12817 ;;      Totals:        12      13       0       0       0       0       0       0       0
 12818 ;;Total ram usage:       25 bytes
 12819 ;; Hardware stack levels used:    1
 12820 ;; Hardware stack levels required when called:    2
 12821 ;; This function calls:
 12822 ;;		Nothing
 12823 ;; This function is called by:
 12824 ;;		_pwmDuty
 12825 ;;		_leerSensores
 12826 ;;		_efgtoa
 12827 ;; This function uses a non-reentrant model
 12828 ;;
 12829                           
 12830                           	psect	text48
 12831  0027CA                     __ptext48:
 12832                           	opt callstack 0
 12833  0027CA                     ___fldiv:
 12834                           	opt callstack 23
 12835  0027CA  5047               	movf	(___fldiv@b+3)^0,w,c
 12836  0027CC  0B80               	andlw	128
 12837  0027CE  0100               	movlb	0	; () banked
 12838  0027D0  6F64               	movwf	___fldiv@sign& (0+255),b
 12839  0027D2  5047               	movf	(___fldiv@b+3)^0,w,c
 12840  0027D4  2447               	addwf	(___fldiv@b+3)^0,w,c
 12841  0027D6  6F6B               	movwf	___fldiv@bexp& (0+255),b
 12842  0027D8                     
 12843                           ; BSR set to: 0
 12844  0027D8  AE46               	btfss	(___fldiv@b+2)^0,7,c
 12845  0027DA  EFF1  F013         	goto	u9011
 12846  0027DE  EFF3  F013         	goto	u9010
 12847  0027E2                     u9011:
 12848  0027E2  EFF4  F013         	goto	l8543
 12849  0027E6                     u9010:
 12850  0027E6                     
 12851                           ; BSR set to: 0
 12852  0027E6  816B               	bsf	___fldiv@bexp& (0+255),0,b
 12853  0027E8                     l8543:
 12854                           
 12855                           ; BSR set to: 0
 12856  0027E8  516B               	movf	___fldiv@bexp& (0+255),w,b
 12857  0027EA  B4D8               	btfsc	status,2,c
 12858  0027EC  EFFA  F013         	goto	u9021
 12859  0027F0  EFFC  F013         	goto	u9020
 12860  0027F4                     u9021:
 12861  0027F4  EF11  F014         	goto	l8553
 12862  0027F8                     u9020:
 12863  0027F8                     
 12864                           ; BSR set to: 0
 12865  0027F8  296B               	incf	___fldiv@bexp& (0+255),w,b
 12866  0027FA  A4D8               	btfss	status,2,c
 12867  0027FC  EF02  F014         	goto	u9031
 12868  002800  EF04  F014         	goto	u9030
 12869  002804                     u9031:
 12870  002804  EF0C  F014         	goto	l8549
 12871  002808                     u9030:
 12872  002808                     
 12873                           ; BSR set to: 0
 12874  002808  0E00               	movlw	0
 12875  00280A  6E44               	movwf	___fldiv@b^0,c
 12876  00280C  0E00               	movlw	0
 12877  00280E  6E45               	movwf	(___fldiv@b+1)^0,c
 12878  002810  0E00               	movlw	0
 12879  002812  6E46               	movwf	(___fldiv@b+2)^0,c
 12880  002814  0E00               	movlw	0
 12881  002816  6E47               	movwf	(___fldiv@b+3)^0,c
 12882  002818                     l8549:
 12883                           
 12884                           ; BSR set to: 0
 12885  002818  8E46               	bsf	(___fldiv@b+2)^0,7,c
 12886  00281A                     
 12887                           ; BSR set to: 0
 12888  00281A  0E00               	movlw	0
 12889  00281C  6E47               	movwf	(___fldiv@b+3)^0,c
 12890  00281E  EF19  F014         	goto	l8555
 12891  002822                     l8553:
 12892                           
 12893                           ; BSR set to: 0
 12894  002822  0E00               	movlw	0
 12895  002824  6E44               	movwf	___fldiv@b^0,c
 12896  002826  0E00               	movlw	0
 12897  002828  6E45               	movwf	(___fldiv@b+1)^0,c
 12898  00282A  0E00               	movlw	0
 12899  00282C  6E46               	movwf	(___fldiv@b+2)^0,c
 12900  00282E  0E00               	movlw	0
 12901  002830  6E47               	movwf	(___fldiv@b+3)^0,c
 12902  002832                     l8555:
 12903                           
 12904                           ; BSR set to: 0
 12905  002832  504B               	movf	(___fldiv@a+3)^0,w,c
 12906  002834  0B80               	andlw	128
 12907  002836  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 12908  002838                     
 12909                           ; BSR set to: 0
 12910  002838  504B               	movf	(___fldiv@a+3)^0,w,c
 12911  00283A  244B               	addwf	(___fldiv@a+3)^0,w,c
 12912  00283C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12913  00283E                     
 12914                           ; BSR set to: 0
 12915  00283E  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 12916  002840  EF24  F014         	goto	u9041
 12917  002844  EF26  F014         	goto	u9040
 12918  002848                     u9041:
 12919  002848  EF27  F014         	goto	l8563
 12920  00284C                     u9040:
 12921  00284C                     
 12922                           ; BSR set to: 0
 12923  00284C  816C               	bsf	___fldiv@aexp& (0+255),0,b
 12924  00284E                     l8563:
 12925                           
 12926                           ; BSR set to: 0
 12927  00284E  516C               	movf	___fldiv@aexp& (0+255),w,b
 12928  002850  B4D8               	btfsc	status,2,c
 12929  002852  EF2D  F014         	goto	u9051
 12930  002856  EF2F  F014         	goto	u9050
 12931  00285A                     u9051:
 12932  00285A  EF44  F014         	goto	l8573
 12933  00285E                     u9050:
 12934  00285E                     
 12935                           ; BSR set to: 0
 12936  00285E  296C               	incf	___fldiv@aexp& (0+255),w,b
 12937  002860  A4D8               	btfss	status,2,c
 12938  002862  EF35  F014         	goto	u9061
 12939  002866  EF37  F014         	goto	u9060
 12940  00286A                     u9061:
 12941  00286A  EF3F  F014         	goto	l8569
 12942  00286E                     u9060:
 12943  00286E                     
 12944                           ; BSR set to: 0
 12945  00286E  0E00               	movlw	0
 12946  002870  6E48               	movwf	___fldiv@a^0,c
 12947  002872  0E00               	movlw	0
 12948  002874  6E49               	movwf	(___fldiv@a+1)^0,c
 12949  002876  0E00               	movlw	0
 12950  002878  6E4A               	movwf	(___fldiv@a+2)^0,c
 12951  00287A  0E00               	movlw	0
 12952  00287C  6E4B               	movwf	(___fldiv@a+3)^0,c
 12953  00287E                     l8569:
 12954                           
 12955                           ; BSR set to: 0
 12956  00287E  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 12957  002880                     
 12958                           ; BSR set to: 0
 12959  002880  0E00               	movlw	0
 12960  002882  6E4B               	movwf	(___fldiv@a+3)^0,c
 12961  002884  EF4C  F014         	goto	l8575
 12962  002888                     l8573:
 12963                           
 12964                           ; BSR set to: 0
 12965  002888  0E00               	movlw	0
 12966  00288A  6E48               	movwf	___fldiv@a^0,c
 12967  00288C  0E00               	movlw	0
 12968  00288E  6E49               	movwf	(___fldiv@a+1)^0,c
 12969  002890  0E00               	movlw	0
 12970  002892  6E4A               	movwf	(___fldiv@a+2)^0,c
 12971  002894  0E00               	movlw	0
 12972  002896  6E4B               	movwf	(___fldiv@a+3)^0,c
 12973  002898                     l8575:
 12974                           
 12975                           ; BSR set to: 0
 12976  002898  5048               	movf	___fldiv@a^0,w,c
 12977  00289A  1049               	iorwf	(___fldiv@a+1)^0,w,c
 12978  00289C  104A               	iorwf	(___fldiv@a+2)^0,w,c
 12979  00289E  104B               	iorwf	(___fldiv@a+3)^0,w,c
 12980  0028A0  A4D8               	btfss	status,2,c
 12981  0028A2  EF55  F014         	goto	u9071
 12982  0028A6  EF57  F014         	goto	u9070
 12983  0028AA                     u9071:
 12984  0028AA  EF6F  F014         	goto	l8587
 12985  0028AE                     u9070:
 12986  0028AE                     
 12987                           ; BSR set to: 0
 12988  0028AE  0E00               	movlw	0
 12989  0028B0  6E44               	movwf	___fldiv@b^0,c
 12990  0028B2  0E00               	movlw	0
 12991  0028B4  6E45               	movwf	(___fldiv@b+1)^0,c
 12992  0028B6  0E00               	movlw	0
 12993  0028B8  6E46               	movwf	(___fldiv@b+2)^0,c
 12994  0028BA  0E00               	movlw	0
 12995  0028BC  6E47               	movwf	(___fldiv@b+3)^0,c
 12996  0028BE                     
 12997                           ; BSR set to: 0
 12998  0028BE  0E80               	movlw	128
 12999  0028C0  1246               	iorwf	(___fldiv@b+2)^0,f,c
 13000  0028C2  0E7F               	movlw	127
 13001  0028C4  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13002  0028C6                     l8581:
 13003                           
 13004                           ; BSR set to: 0
 13005  0028C6  5164               	movf	___fldiv@sign& (0+255),w,b
 13006  0028C8  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13007  0028CA                     
 13008                           ; BSR set to: 0
 13009  0028CA  C044  F044         	movff	___fldiv@b,?___fldiv
 13010  0028CE  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 13011  0028D2  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 13012  0028D6  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 13013  0028DA  EFB2  F015         	goto	l1543
 13014  0028DE                     l8587:
 13015                           
 13016                           ; BSR set to: 0
 13017  0028DE  516B               	movf	___fldiv@bexp& (0+255),w,b
 13018  0028E0  A4D8               	btfss	status,2,c
 13019  0028E2  EF75  F014         	goto	u9081
 13020  0028E6  EF77  F014         	goto	u9080
 13021  0028EA                     u9081:
 13022  0028EA  EF81  F014         	goto	l8595
 13023  0028EE                     u9080:
 13024  0028EE                     
 13025                           ; BSR set to: 0
 13026  0028EE  0E00               	movlw	0
 13027  0028F0  6E44               	movwf	?___fldiv^0,c
 13028  0028F2  0E00               	movlw	0
 13029  0028F4  6E45               	movwf	(?___fldiv+1)^0,c
 13030  0028F6  0E00               	movlw	0
 13031  0028F8  6E46               	movwf	(?___fldiv+2)^0,c
 13032  0028FA  0E00               	movlw	0
 13033  0028FC  6E47               	movwf	(?___fldiv+3)^0,c
 13034  0028FE  EFB2  F015         	goto	l1543
 13035  002902                     l8595:
 13036                           
 13037                           ; BSR set to: 0
 13038  002902  516C               	movf	___fldiv@aexp& (0+255),w,b
 13039  002904  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 13040  002908  6A4D               	clrf	(??___fldiv+1)^0,c
 13041  00290A  5E4C               	subwf	??___fldiv^0,f,c
 13042  00290C  0E00               	movlw	0
 13043  00290E  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 13044  002910  0E7F               	movlw	127
 13045  002912  244C               	addwf	??___fldiv^0,w,c
 13046  002914  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13047  002916  0E00               	movlw	0
 13048  002918  204D               	addwfc	(??___fldiv+1)^0,w,c
 13049  00291A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13050  00291C                     
 13051                           ; BSR set to: 0
 13052  00291C  C044  F060         	movff	___fldiv@b,___fldiv@rem
 13053  002920  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 13054  002924  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 13055  002928  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 13056  00292C                     
 13057                           ; BSR set to: 0
 13058  00292C  0E00               	movlw	0
 13059  00292E  6E44               	movwf	___fldiv@b^0,c
 13060  002930  0E00               	movlw	0
 13061  002932  6E45               	movwf	(___fldiv@b+1)^0,c
 13062  002934  0E00               	movlw	0
 13063  002936  6E46               	movwf	(___fldiv@b+2)^0,c
 13064  002938  0E00               	movlw	0
 13065  00293A  6E47               	movwf	(___fldiv@b+3)^0,c
 13066  00293C                     
 13067                           ; BSR set to: 0
 13068  00293C  0E00               	movlw	0
 13069  00293E  6F67               	movwf	___fldiv@grs& (0+255),b
 13070  002940  0E00               	movlw	0
 13071  002942  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 13072  002944  0E00               	movlw	0
 13073  002946  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 13074  002948  0E00               	movlw	0
 13075  00294A  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 13076  00294C                     
 13077                           ; BSR set to: 0
 13078  00294C  0E00               	movlw	0
 13079  00294E  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13080  002950  EFE2  F014         	goto	l1545
 13081  002954                     l8605:
 13082                           
 13083                           ; BSR set to: 0
 13084  002954  516C               	movf	___fldiv@aexp& (0+255),w,b
 13085  002956  B4D8               	btfsc	status,2,c
 13086  002958  EFB0  F014         	goto	u9091
 13087  00295C  EFB2  F014         	goto	u9090
 13088  002960                     u9091:
 13089  002960  EFC9  F014         	goto	l8613
 13090  002964                     u9090:
 13091  002964                     
 13092                           ; BSR set to: 0
 13093  002964  90D8               	bcf	status,0,c
 13094  002966  3760               	rlcf	___fldiv@rem& (0+255),f,b
 13095  002968  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13096  00296A  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13097  00296C  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13098  00296E  90D8               	bcf	status,0,c
 13099  002970  3644               	rlcf	___fldiv@b^0,f,c
 13100  002972  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13101  002974  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13102  002976  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13103  002978                     
 13104                           ; BSR set to: 0
 13105  002978  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13106  00297A  EFC1  F014         	goto	u9101
 13107  00297E  EFC3  F014         	goto	u9100
 13108  002982                     u9101:
 13109  002982  EFC4  F014         	goto	l1548
 13110  002986                     u9100:
 13111  002986                     
 13112                           ; BSR set to: 0
 13113  002986  8044               	bsf	___fldiv@b^0,0,c
 13114  002988                     l1548:
 13115                           
 13116                           ; BSR set to: 0
 13117  002988  90D8               	bcf	status,0,c
 13118  00298A  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13119  00298C  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13120  00298E  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13121  002990  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13122  002992                     l8613:
 13123                           
 13124                           ; BSR set to: 0
 13125  002992  5048               	movf	___fldiv@a^0,w,c
 13126  002994  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13127  002996  5049               	movf	(___fldiv@a+1)^0,w,c
 13128  002998  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13129  00299A  504A               	movf	(___fldiv@a+2)^0,w,c
 13130  00299C  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13131  00299E  504B               	movf	(___fldiv@a+3)^0,w,c
 13132  0029A0  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13133  0029A2  A0D8               	btfss	status,0,c
 13134  0029A4  EFD6  F014         	goto	u9111
 13135  0029A8  EFD8  F014         	goto	u9110
 13136  0029AC                     u9111:
 13137  0029AC  EFE1  F014         	goto	l8619
 13138  0029B0                     u9110:
 13139  0029B0                     
 13140                           ; BSR set to: 0
 13141  0029B0  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13142  0029B2                     
 13143                           ; BSR set to: 0
 13144  0029B2  5048               	movf	___fldiv@a^0,w,c
 13145  0029B4  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13146  0029B6  5049               	movf	(___fldiv@a+1)^0,w,c
 13147  0029B8  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13148  0029BA  504A               	movf	(___fldiv@a+2)^0,w,c
 13149  0029BC  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13150  0029BE  504B               	movf	(___fldiv@a+3)^0,w,c
 13151  0029C0  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13152  0029C2                     l8619:
 13153                           
 13154                           ; BSR set to: 0
 13155  0029C2  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13156  0029C4                     l1545:
 13157                           
 13158                           ; BSR set to: 0
 13159  0029C4  0E19               	movlw	25
 13160  0029C6  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13161  0029C8  EFE8  F014         	goto	u9121
 13162  0029CC  EFEA  F014         	goto	u9120
 13163  0029D0                     u9121:
 13164  0029D0  EFAA  F014         	goto	l8605
 13165  0029D4                     u9120:
 13166  0029D4                     
 13167                           ; BSR set to: 0
 13168  0029D4  5160               	movf	___fldiv@rem& (0+255),w,b
 13169  0029D6  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13170  0029D8  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13171  0029DA  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13172  0029DC  B4D8               	btfsc	status,2,c
 13173  0029DE  EFF3  F014         	goto	u9131
 13174  0029E2  EFF5  F014         	goto	u9130
 13175  0029E6                     u9131:
 13176  0029E6  EF0D  F015         	goto	l8631
 13177  0029EA                     u9130:
 13178  0029EA                     
 13179                           ; BSR set to: 0
 13180  0029EA  8167               	bsf	___fldiv@grs& (0+255),0,b
 13181  0029EC  EF0D  F015         	goto	l8631
 13182  0029F0                     l8625:
 13183                           
 13184                           ; BSR set to: 0
 13185  0029F0  90D8               	bcf	status,0,c
 13186  0029F2  3644               	rlcf	___fldiv@b^0,f,c
 13187  0029F4  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13188  0029F6  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13189  0029F8  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13190  0029FA                     
 13191                           ; BSR set to: 0
 13192  0029FA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13193  0029FC  EF02  F015         	goto	u9141
 13194  002A00  EF04  F015         	goto	u9140
 13195  002A04                     u9141:
 13196  002A04  EF05  F015         	goto	l1554
 13197  002A08                     u9140:
 13198  002A08                     
 13199                           ; BSR set to: 0
 13200  002A08  8044               	bsf	___fldiv@b^0,0,c
 13201  002A0A                     l1554:
 13202                           
 13203                           ; BSR set to: 0
 13204  002A0A  90D8               	bcf	status,0,c
 13205  002A0C  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13206  002A0E  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13207  002A10  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13208  002A12  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13209  002A14  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13210  002A16  A0D8               	btfss	status,0,c
 13211  002A18  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13212  002A1A                     l8631:
 13213                           
 13214                           ; BSR set to: 0
 13215  002A1A  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13216  002A1C  EF12  F015         	goto	u9151
 13217  002A20  EF14  F015         	goto	u9150
 13218  002A24                     u9151:
 13219  002A24  EFF8  F014         	goto	l8625
 13220  002A28                     u9150:
 13221  002A28                     
 13222                           ; BSR set to: 0
 13223  002A28  0E00               	movlw	0
 13224  002A2A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13225  002A2C                     
 13226                           ; BSR set to: 0
 13227  002A2C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13228  002A2E  EF1B  F015         	goto	u9161
 13229  002A32  EF1D  F015         	goto	u9160
 13230  002A36                     u9161:
 13231  002A36  EF41  F015         	goto	l1556
 13232  002A3A                     u9160:
 13233  002A3A                     
 13234                           ; BSR set to: 0
 13235  002A3A  0EFF               	movlw	255
 13236  002A3C  1567               	andwf	___fldiv@grs& (0+255),w,b
 13237  002A3E  6E4C               	movwf	??___fldiv^0,c
 13238  002A40  0EFF               	movlw	255
 13239  002A42  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13240  002A44  6E4D               	movwf	(??___fldiv+1)^0,c
 13241  002A46  0EFF               	movlw	255
 13242  002A48  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13243  002A4A  6E4E               	movwf	(??___fldiv+2)^0,c
 13244  002A4C  0E7F               	movlw	127
 13245  002A4E  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13246  002A50  6E4F               	movwf	(??___fldiv+3)^0,c
 13247  002A52  504C               	movf	??___fldiv^0,w,c
 13248  002A54  104D               	iorwf	(??___fldiv+1)^0,w,c
 13249  002A56  104E               	iorwf	(??___fldiv+2)^0,w,c
 13250  002A58  104F               	iorwf	(??___fldiv+3)^0,w,c
 13251  002A5A  B4D8               	btfsc	status,2,c
 13252  002A5C  EF32  F015         	goto	u9171
 13253  002A60  EF34  F015         	goto	u9170
 13254  002A64                     u9171:
 13255  002A64  EF38  F015         	goto	l1557
 13256  002A68                     u9170:
 13257  002A68                     l8639:
 13258                           
 13259                           ; BSR set to: 0
 13260  002A68  0E01               	movlw	1
 13261  002A6A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13262  002A6C  EF41  F015         	goto	l1556
 13263  002A70                     l1557:
 13264                           
 13265                           ; BSR set to: 0
 13266  002A70  A044               	btfss	___fldiv@b^0,0,c
 13267  002A72  EF3D  F015         	goto	u9181
 13268  002A76  EF3F  F015         	goto	u9180
 13269  002A7A                     u9181:
 13270  002A7A  EF41  F015         	goto	l1556
 13271  002A7E                     u9180:
 13272  002A7E  EF34  F015         	goto	l8639
 13273  002A82                     l1556:
 13274                           
 13275                           ; BSR set to: 0
 13276  002A82  516C               	movf	___fldiv@aexp& (0+255),w,b
 13277  002A84  B4D8               	btfsc	status,2,c
 13278  002A86  EF47  F015         	goto	u9191
 13279  002A8A  EF49  F015         	goto	u9190
 13280  002A8E                     u9191:
 13281  002A8E  EF6D  F015         	goto	l8651
 13282  002A92                     u9190:
 13283  002A92                     
 13284                           ; BSR set to: 0
 13285  002A92  0E01               	movlw	1
 13286  002A94  2644               	addwf	___fldiv@b^0,f,c
 13287  002A96  0E00               	movlw	0
 13288  002A98  2245               	addwfc	(___fldiv@b+1)^0,f,c
 13289  002A9A  2246               	addwfc	(___fldiv@b+2)^0,f,c
 13290  002A9C  2247               	addwfc	(___fldiv@b+3)^0,f,c
 13291  002A9E                     
 13292                           ; BSR set to: 0
 13293  002A9E  A047               	btfss	(___fldiv@b+3)^0,0,c
 13294  002AA0  EF54  F015         	goto	u9201
 13295  002AA4  EF56  F015         	goto	u9200
 13296  002AA8                     u9201:
 13297  002AA8  EF6D  F015         	goto	l8651
 13298  002AAC                     u9200:
 13299  002AAC                     
 13300                           ; BSR set to: 0
 13301  002AAC  C044  F04C         	movff	___fldiv@b,??___fldiv
 13302  002AB0  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 13303  002AB4  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 13304  002AB8  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 13305  002ABC  344F               	rlcf	(??___fldiv+3)^0,w,c
 13306  002ABE  324F               	rrcf	(??___fldiv+3)^0,f,c
 13307  002AC0  324E               	rrcf	(??___fldiv+2)^0,f,c
 13308  002AC2  324D               	rrcf	(??___fldiv+1)^0,f,c
 13309  002AC4  324C               	rrcf	??___fldiv^0,f,c
 13310  002AC6  C04C  F044         	movff	??___fldiv,___fldiv@b
 13311  002ACA  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 13312  002ACE  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 13313  002AD2  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 13314  002AD6                     
 13315                           ; BSR set to: 0
 13316  002AD6  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13317  002AD8  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13318  002ADA                     l8651:
 13319                           
 13320                           ; BSR set to: 0
 13321  002ADA  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13322  002ADC  EF78  F015         	goto	u9211
 13323  002AE0  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13324  002AE2  E108               	bnz	u9210
 13325  002AE4  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13326  002AE6  A0D8               	btfss	status,0,c
 13327  002AE8  EF78  F015         	goto	u9211
 13328  002AEC  EF7A  F015         	goto	u9210
 13329  002AF0                     u9211:
 13330  002AF0  EF85  F015         	goto	l8655
 13331  002AF4                     u9210:
 13332  002AF4                     
 13333                           ; BSR set to: 0
 13334  002AF4  0E00               	movlw	0
 13335  002AF6  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13336  002AF8  6965               	setf	___fldiv@new_exp& (0+255),b
 13337  002AFA  0E00               	movlw	0
 13338  002AFC  6E44               	movwf	___fldiv@b^0,c
 13339  002AFE  0E00               	movlw	0
 13340  002B00  6E45               	movwf	(___fldiv@b+1)^0,c
 13341  002B02  0E00               	movlw	0
 13342  002B04  6E46               	movwf	(___fldiv@b+2)^0,c
 13343  002B06  0E00               	movlw	0
 13344  002B08  6E47               	movwf	(___fldiv@b+3)^0,c
 13345  002B0A                     l8655:
 13346                           
 13347                           ; BSR set to: 0
 13348  002B0A  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13349  002B0C  EF92  F015         	goto	u9220
 13350  002B10  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13351  002B12  E106               	bnz	u9221
 13352  002B14  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13353  002B16  B0D8               	btfsc	status,0,c
 13354  002B18  EF90  F015         	goto	u9221
 13355  002B1C  EF92  F015         	goto	u9220
 13356  002B20                     u9221:
 13357  002B20  EFA0  F015         	goto	l8659
 13358  002B24                     u9220:
 13359  002B24                     
 13360                           ; BSR set to: 0
 13361  002B24  0E00               	movlw	0
 13362  002B26  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13363  002B28  0E00               	movlw	0
 13364  002B2A  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13365  002B2C  0E00               	movlw	0
 13366  002B2E  6E44               	movwf	___fldiv@b^0,c
 13367  002B30  0E00               	movlw	0
 13368  002B32  6E45               	movwf	(___fldiv@b+1)^0,c
 13369  002B34  0E00               	movlw	0
 13370  002B36  6E46               	movwf	(___fldiv@b+2)^0,c
 13371  002B38  0E00               	movlw	0
 13372  002B3A  6E47               	movwf	(___fldiv@b+3)^0,c
 13373  002B3C  0E00               	movlw	0
 13374  002B3E  6F64               	movwf	___fldiv@sign& (0+255),b
 13375  002B40                     l8659:
 13376                           
 13377                           ; BSR set to: 0
 13378  002B40  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13379  002B44                     
 13380                           ; BSR set to: 0
 13381  002B44  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13382  002B46  EFA7  F015         	goto	u9231
 13383  002B4A  EFA9  F015         	goto	u9230
 13384  002B4E                     u9231:
 13385  002B4E  EFAC  F015         	goto	l8665
 13386  002B52                     u9230:
 13387  002B52                     
 13388                           ; BSR set to: 0
 13389  002B52  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13390  002B54  EFAD  F015         	goto	l8667
 13391  002B58                     l8665:
 13392                           
 13393                           ; BSR set to: 0
 13394  002B58  9E46               	bcf	(___fldiv@b+2)^0,7,c
 13395  002B5A                     l8667:
 13396                           
 13397                           ; BSR set to: 0
 13398  002B5A  90D8               	bcf	status,0,c
 13399  002B5C  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13400  002B5E  6E47               	movwf	(___fldiv@b+3)^0,c
 13401  002B60  EF63  F014         	goto	l8581
 13402  002B64                     l1543:
 13403                           
 13404                           ; BSR set to: 0
 13405  002B64  0012               	return		;funcret
 13406  002B66                     __end_of___fldiv:
 13407                           	opt callstack 0
 13408                           
 13409 ;; *************** function ___awmod *****************
 13410 ;; Defined at:
 13411 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;  dividend        2    5[COMRAM] int 
 13414 ;;  divisor         2    7[COMRAM] int 
 13415 ;; Auto vars:     Size  Location     Type
 13416 ;;  sign            1   10[COMRAM] unsigned char 
 13417 ;;  counter         1    9[COMRAM] unsigned char 
 13418 ;; Return value:  Size  Location     Type
 13419 ;;                  2    5[COMRAM] int 
 13420 ;; Registers used:
 13421 ;;		wreg, status,2, status,0
 13422 ;; Tracked objects:
 13423 ;;		On entry : 0/0
 13424 ;;		On exit  : 0/0
 13425 ;;		Unchanged: 0/0
 13426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13427 ;;      Params:         4       0       0       0       0       0       0       0       0
 13428 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13429 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13430 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13431 ;;Total ram usage:        6 bytes
 13432 ;; Hardware stack levels used:    1
 13433 ;; Hardware stack levels required when called:    2
 13434 ;; This function calls:
 13435 ;;		Nothing
 13436 ;; This function is called by:
 13437 ;;		_efgtoa
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           
 13441                           	psect	text49
 13442  00480A                     __ptext49:
 13443                           	opt callstack 0
 13444  00480A                     ___awmod:
 13445                           	opt callstack 23
 13446  00480A  0E00               	movlw	0
 13447  00480C  6E0B               	movwf	___awmod@sign^0,c
 13448  00480E  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 13449  004810  EF0E  F024         	goto	u9490
 13450  004814  EF0C  F024         	goto	u9491
 13451  004818                     u9491:
 13452  004818  EF14  F024         	goto	l8863
 13453  00481C                     u9490:
 13454  00481C  6C06               	negf	___awmod@dividend^0,c
 13455  00481E  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13456  004820  B0D8               	btfsc	status,0,c
 13457  004822  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13458  004824  0E01               	movlw	1
 13459  004826  6E0B               	movwf	___awmod@sign^0,c
 13460  004828                     l8863:
 13461  004828  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 13462  00482A  EF1B  F024         	goto	u9500
 13463  00482E  EF19  F024         	goto	u9501
 13464  004832                     u9501:
 13465  004832  EF1F  F024         	goto	l8867
 13466  004836                     u9500:
 13467  004836  6C08               	negf	___awmod@divisor^0,c
 13468  004838  1E09               	comf	(___awmod@divisor+1)^0,f,c
 13469  00483A  B0D8               	btfsc	status,0,c
 13470  00483C  2A09               	incf	(___awmod@divisor+1)^0,f,c
 13471  00483E                     l8867:
 13472  00483E  5008               	movf	___awmod@divisor^0,w,c
 13473  004840  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 13474  004842  B4D8               	btfsc	status,2,c
 13475  004844  EF26  F024         	goto	u9511
 13476  004848  EF28  F024         	goto	u9510
 13477  00484C                     u9511:
 13478  00484C  EF4C  F024         	goto	l8883
 13479  004850                     u9510:
 13480  004850  0E01               	movlw	1
 13481  004852  6E0A               	movwf	___awmod@counter^0,c
 13482  004854  EF30  F024         	goto	l8873
 13483  004858                     l8871:
 13484  004858  90D8               	bcf	status,0,c
 13485  00485A  3608               	rlcf	___awmod@divisor^0,f,c
 13486  00485C  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 13487  00485E  2A0A               	incf	___awmod@counter^0,f,c
 13488  004860                     l8873:
 13489  004860  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 13490  004862  EF35  F024         	goto	u9521
 13491  004866  EF37  F024         	goto	u9520
 13492  00486A                     u9521:
 13493  00486A  EF2C  F024         	goto	l8871
 13494  00486E                     u9520:
 13495  00486E                     l8875:
 13496  00486E  5008               	movf	___awmod@divisor^0,w,c
 13497  004870  5C06               	subwf	___awmod@dividend^0,w,c
 13498  004872  5009               	movf	(___awmod@divisor+1)^0,w,c
 13499  004874  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 13500  004876  A0D8               	btfss	status,0,c
 13501  004878  EF40  F024         	goto	u9531
 13502  00487C  EF42  F024         	goto	u9530
 13503  004880                     u9531:
 13504  004880  EF46  F024         	goto	l8879
 13505  004884                     u9530:
 13506  004884  5008               	movf	___awmod@divisor^0,w,c
 13507  004886  5E06               	subwf	___awmod@dividend^0,f,c
 13508  004888  5009               	movf	(___awmod@divisor+1)^0,w,c
 13509  00488A  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 13510  00488C                     l8879:
 13511  00488C  90D8               	bcf	status,0,c
 13512  00488E  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 13513  004890  3208               	rrcf	___awmod@divisor^0,f,c
 13514  004892  2E0A               	decfsz	___awmod@counter^0,f,c
 13515  004894  EF37  F024         	goto	l8875
 13516  004898                     l8883:
 13517  004898  500B               	movf	___awmod@sign^0,w,c
 13518  00489A  B4D8               	btfsc	status,2,c
 13519  00489C  EF52  F024         	goto	u9541
 13520  0048A0  EF54  F024         	goto	u9540
 13521  0048A4                     u9541:
 13522  0048A4  EF58  F024         	goto	l8887
 13523  0048A8                     u9540:
 13524  0048A8  6C06               	negf	___awmod@dividend^0,c
 13525  0048AA  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13526  0048AC  B0D8               	btfsc	status,0,c
 13527  0048AE  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13528  0048B0                     l8887:
 13529  0048B0  C006  F006         	movff	___awmod@dividend,?___awmod
 13530  0048B4  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 13531  0048B8  0012               	return		;funcret
 13532  0048BA                     __end_of___awmod:
 13533                           	opt callstack 0
 13534                           
 13535 ;; *************** function ___awdiv *****************
 13536 ;; Defined at:
 13537 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13538 ;; Parameters:    Size  Location     Type
 13539 ;;  dividend        2    5[COMRAM] int 
 13540 ;;  divisor         2    7[COMRAM] int 
 13541 ;; Auto vars:     Size  Location     Type
 13542 ;;  quotient        2   11[COMRAM] int 
 13543 ;;  sign            1   10[COMRAM] unsigned char 
 13544 ;;  counter         1    9[COMRAM] unsigned char 
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  2    5[COMRAM] int 
 13547 ;; Registers used:
 13548 ;;		wreg, status,2, status,0
 13549 ;; Tracked objects:
 13550 ;;		On entry : 0/0
 13551 ;;		On exit  : 0/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13554 ;;      Params:         4       0       0       0       0       0       0       0       0
 13555 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13556 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13557 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13558 ;;Total ram usage:        8 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; Hardware stack levels required when called:    2
 13561 ;; This function calls:
 13562 ;;		Nothing
 13563 ;; This function is called by:
 13564 ;;		_efgtoa
 13565 ;; This function uses a non-reentrant model
 13566 ;;
 13567                           
 13568                           	psect	text50
 13569  0045C2                     __ptext50:
 13570                           	opt callstack 0
 13571  0045C2                     ___awdiv:
 13572                           	opt callstack 23
 13573  0045C2  0E00               	movlw	0
 13574  0045C4  6E0B               	movwf	___awdiv@sign^0,c
 13575  0045C6  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 13576  0045C8  EFEA  F022         	goto	u9430
 13577  0045CC  EFE8  F022         	goto	u9431
 13578  0045D0                     u9431:
 13579  0045D0  EFF0  F022         	goto	l8819
 13580  0045D4                     u9430:
 13581  0045D4  6C08               	negf	___awdiv@divisor^0,c
 13582  0045D6  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 13583  0045D8  B0D8               	btfsc	status,0,c
 13584  0045DA  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 13585  0045DC  0E01               	movlw	1
 13586  0045DE  6E0B               	movwf	___awdiv@sign^0,c
 13587  0045E0                     l8819:
 13588  0045E0  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 13589  0045E2  EFF7  F022         	goto	u9440
 13590  0045E6  EFF5  F022         	goto	u9441
 13591  0045EA                     u9441:
 13592  0045EA  EFFD  F022         	goto	l8825
 13593  0045EE                     u9440:
 13594  0045EE  6C06               	negf	___awdiv@dividend^0,c
 13595  0045F0  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 13596  0045F2  B0D8               	btfsc	status,0,c
 13597  0045F4  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 13598  0045F6  0E01               	movlw	1
 13599  0045F8  1A0B               	xorwf	___awdiv@sign^0,f,c
 13600  0045FA                     l8825:
 13601  0045FA  0E00               	movlw	0
 13602  0045FC  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 13603  0045FE  0E00               	movlw	0
 13604  004600  6E0C               	movwf	___awdiv@quotient^0,c
 13605  004602  5008               	movf	___awdiv@divisor^0,w,c
 13606  004604  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 13607  004606  B4D8               	btfsc	status,2,c
 13608  004608  EF08  F023         	goto	u9451
 13609  00460C  EF0A  F023         	goto	u9450
 13610  004610                     u9451:
 13611  004610  EF32  F023         	goto	l8847
 13612  004614                     u9450:
 13613  004614  0E01               	movlw	1
 13614  004616  6E0A               	movwf	___awdiv@counter^0,c
 13615  004618  EF12  F023         	goto	l8833
 13616  00461C                     l8831:
 13617  00461C  90D8               	bcf	status,0,c
 13618  00461E  3608               	rlcf	___awdiv@divisor^0,f,c
 13619  004620  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 13620  004622  2A0A               	incf	___awdiv@counter^0,f,c
 13621  004624                     l8833:
 13622  004624  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 13623  004626  EF17  F023         	goto	u9461
 13624  00462A  EF19  F023         	goto	u9460
 13625  00462E                     u9461:
 13626  00462E  EF0E  F023         	goto	l8831
 13627  004632                     u9460:
 13628  004632                     l8835:
 13629  004632  90D8               	bcf	status,0,c
 13630  004634  360C               	rlcf	___awdiv@quotient^0,f,c
 13631  004636  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 13632  004638  5008               	movf	___awdiv@divisor^0,w,c
 13633  00463A  5C06               	subwf	___awdiv@dividend^0,w,c
 13634  00463C  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13635  00463E  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 13636  004640  A0D8               	btfss	status,0,c
 13637  004642  EF25  F023         	goto	u9471
 13638  004646  EF27  F023         	goto	u9470
 13639  00464A                     u9471:
 13640  00464A  EF2C  F023         	goto	l8843
 13641  00464E                     u9470:
 13642  00464E  5008               	movf	___awdiv@divisor^0,w,c
 13643  004650  5E06               	subwf	___awdiv@dividend^0,f,c
 13644  004652  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13645  004654  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 13646  004656  800C               	bsf	___awdiv@quotient^0,0,c
 13647  004658                     l8843:
 13648  004658  90D8               	bcf	status,0,c
 13649  00465A  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 13650  00465C  3208               	rrcf	___awdiv@divisor^0,f,c
 13651  00465E  2E0A               	decfsz	___awdiv@counter^0,f,c
 13652  004660  EF19  F023         	goto	l8835
 13653  004664                     l8847:
 13654  004664  500B               	movf	___awdiv@sign^0,w,c
 13655  004666  B4D8               	btfsc	status,2,c
 13656  004668  EF38  F023         	goto	u9481
 13657  00466C  EF3A  F023         	goto	u9480
 13658  004670                     u9481:
 13659  004670  EF3E  F023         	goto	l8851
 13660  004674                     u9480:
 13661  004674  6C0C               	negf	___awdiv@quotient^0,c
 13662  004676  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 13663  004678  B0D8               	btfsc	status,0,c
 13664  00467A  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 13665  00467C                     l8851:
 13666  00467C  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 13667  004680  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 13668  004684  0012               	return		;funcret
 13669  004686                     __end_of___awdiv:
 13670                           	opt callstack 0
 13671                           
 13672 ;; *************** function _dtoa *****************
 13673 ;; Defined at:
 13674 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13675 ;; Parameters:    Size  Location     Type
 13676 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 13677 ;;		 -> sprintf@f(6), 
 13678 ;;  d               8   34[COMRAM] long long 
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;  n               8   58[COMRAM] long long 
 13681 ;;  i               2   66[COMRAM] int 
 13682 ;;  s               2   56[COMRAM] int 
 13683 ;;  w               2   54[COMRAM] int 
 13684 ;;  p               2   52[COMRAM] int 
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  2   32[COMRAM] int 
 13687 ;; Registers used:
 13688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13689 ;; Tracked objects:
 13690 ;;		On entry : 0/0
 13691 ;;		On exit  : 0/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13694 ;;      Params:        10       0       0       0       0       0       0       0       0
 13695 ;;      Locals:        18       0       0       0       0       0       0       0       0
 13696 ;;      Temps:          8       0       0       0       0       0       0       0       0
 13697 ;;      Totals:        36       0       0       0       0       0       0       0       0
 13698 ;;Total ram usage:       36 bytes
 13699 ;; Hardware stack levels used:    1
 13700 ;; Hardware stack levels required when called:    6
 13701 ;; This function calls:
 13702 ;;		___aodiv
 13703 ;;		___aomod
 13704 ;;		_abs
 13705 ;;		_pad
 13706 ;; This function is called by:
 13707 ;;		_vfpfcnvrt
 13708 ;; This function uses a non-reentrant model
 13709 ;;
 13710                           
 13711                           	psect	text51
 13712  002B66                     __ptext51:
 13713                           	opt callstack 0
 13714  002B66                     _dtoa:
 13715                           	opt callstack 20
 13716  002B66                     
 13717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13718  002B66  C023  F03B         	movff	dtoa@d,dtoa@n
 13719  002B6A  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
 13720  002B6E  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
 13721  002B72  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
 13722  002B76  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
 13723  002B7A  C028  F040         	movff	dtoa@d+5,dtoa@n+5
 13724  002B7E  C029  F041         	movff	dtoa@d+6,dtoa@n+6
 13725  002B82  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
 13726  002B86                     
 13727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13728  002B86  BE42               	btfsc	(dtoa@n+7)^0,7,c
 13729  002B88  EFC8  F015         	goto	u9871
 13730  002B8C  EFCB  F015         	goto	u9870
 13731  002B90                     u9871:
 13732  002B90  0E01               	movlw	1
 13733  002B92  EFCC  F015         	goto	u9880
 13734  002B96                     u9870:
 13735  002B96  0E00               	movlw	0
 13736  002B98                     u9880:
 13737  002B98  6E39               	movwf	dtoa@s^0,c
 13738  002B9A  6A3A               	clrf	(dtoa@s+1)^0,c
 13739                           
 13740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13741  002B9C  5039               	movf	dtoa@s^0,w,c
 13742  002B9E  103A               	iorwf	(dtoa@s+1)^0,w,c
 13743  002BA0  B4D8               	btfsc	status,2,c
 13744  002BA2  EFD5  F015         	goto	u9891
 13745  002BA6  EFD7  F015         	goto	u9890
 13746  002BAA                     u9891:
 13747  002BAA  EFE7  F015         	goto	l9077
 13748  002BAE                     u9890:
 13749  002BAE                     
 13750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13751  002BAE  1E42               	comf	(dtoa@n+7)^0,f,c
 13752  002BB0  1E41               	comf	(dtoa@n+6)^0,f,c
 13753  002BB2  1E40               	comf	(dtoa@n+5)^0,f,c
 13754  002BB4  1E3F               	comf	(dtoa@n+4)^0,f,c
 13755  002BB6  1E3E               	comf	(dtoa@n+3)^0,f,c
 13756  002BB8  1E3D               	comf	(dtoa@n+2)^0,f,c
 13757  002BBA  1E3C               	comf	(dtoa@n+1)^0,f,c
 13758  002BBC  6C3B               	negf	dtoa@n^0,c
 13759  002BBE  0E00               	movlw	0
 13760  002BC0  223C               	addwfc	(dtoa@n+1)^0,f,c
 13761  002BC2  223D               	addwfc	(dtoa@n+2)^0,f,c
 13762  002BC4  223E               	addwfc	(dtoa@n+3)^0,f,c
 13763  002BC6  223F               	addwfc	(dtoa@n+4)^0,f,c
 13764  002BC8  2240               	addwfc	(dtoa@n+5)^0,f,c
 13765  002BCA  2241               	addwfc	(dtoa@n+6)^0,f,c
 13766  002BCC  2242               	addwfc	(dtoa@n+7)^0,f,c
 13767  002BCE                     l9077:
 13768                           
 13769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13770  002BCE  0101               	movlb	1	; () banked
 13771  002BD0  BF35               	btfsc	(_prec+1)& (0+255),7,b
 13772  002BD2  EFED  F015         	goto	u9901
 13773  002BD6  EFEF  F015         	goto	u9900
 13774  002BDA                     u9901:
 13775  002BDA  EFF0  F015         	goto	l9081
 13776  002BDE                     u9900:
 13777  002BDE                     
 13778                           ; BSR set to: 1
 13779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13780  002BDE  9255               	bcf	_flags^0,1,c
 13781  002BE0                     l9081:
 13782                           
 13783                           ; BSR set to: 1
 13784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13785  002BE0  BF35               	btfsc	(_prec+1)& (0+255),7,b
 13786  002BE2  EFFD  F015         	goto	u9910
 13787  002BE6  5135               	movf	(_prec+1)& (0+255),w,b
 13788  002BE8  E106               	bnz	u9911
 13789  002BEA  0534               	decf	_prec& (0+255),w,b
 13790  002BEC  B0D8               	btfsc	status,0,c
 13791  002BEE  EFFB  F015         	goto	u9911
 13792  002BF2  EFFD  F015         	goto	u9910
 13793  002BF6                     u9911:
 13794  002BF6  EF03  F016         	goto	l812
 13795  002BFA                     u9910:
 13796  002BFA                     
 13797                           ; BSR set to: 1
 13798  002BFA  0E00               	movlw	0
 13799  002BFC  6E36               	movwf	(dtoa@p+1)^0,c
 13800  002BFE  0E01               	movlw	1
 13801  002C00  6E35               	movwf	dtoa@p^0,c
 13802  002C02  EF07  F016         	goto	l814
 13803  002C06                     l812:
 13804                           
 13805                           ; BSR set to: 1
 13806  002C06  C134  F035         	movff	_prec,dtoa@p
 13807  002C0A  C135  F036         	movff	_prec+1,dtoa@p+1
 13808  002C0E                     l814:
 13809                           
 13810                           ; BSR set to: 1
 13811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13812  002C0E  C132  F037         	movff	_width,dtoa@w
 13813  002C12  C133  F038         	movff	_width+1,dtoa@w+1
 13814  002C16                     
 13815                           ; BSR set to: 1
 13816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13817  002C16  5039               	movf	dtoa@s^0,w,c
 13818  002C18  103A               	iorwf	(dtoa@s+1)^0,w,c
 13819  002C1A  A4D8               	btfss	status,2,c
 13820  002C1C  EF12  F016         	goto	u9921
 13821  002C20  EF14  F016         	goto	u9920
 13822  002C24                     u9921:
 13823  002C24  EF1B  F016         	goto	l9089
 13824  002C28                     u9920:
 13825  002C28                     
 13826                           ; BSR set to: 1
 13827  002C28  A455               	btfss	_flags^0,2,c
 13828  002C2A  EF19  F016         	goto	u9931
 13829  002C2E  EF1B  F016         	goto	u9930
 13830  002C32                     u9931:
 13831  002C32  EF1E  F016         	goto	l9091
 13832  002C36                     u9930:
 13833  002C36                     l9089:
 13834                           
 13835                           ; BSR set to: 1
 13836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13837  002C36  0637               	decf	dtoa@w^0,f,c
 13838  002C38  A0D8               	btfss	status,0,c
 13839  002C3A  0638               	decf	(dtoa@w+1)^0,f,c
 13840  002C3C                     l9091:
 13841                           
 13842                           ; BSR set to: 1
 13843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13844  002C3C  0E00               	movlw	0
 13845  002C3E  6E44               	movwf	(dtoa@i+1)^0,c
 13846  002C40  0E4F               	movlw	79
 13847  002C42  6E43               	movwf	dtoa@i^0,c
 13848  002C44                     
 13849                           ; BSR set to: 1
 13850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13851  002C44  0E00               	movlw	0
 13852  002C46  6F90               	movwf	(_dbuf+79)& (0+255),b
 13853                           
 13854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13855  002C48  EFA2  F016         	goto	l9105
 13856  002C4C                     l9095:
 13857                           
 13858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13859  002C4C  0643               	decf	dtoa@i^0,f,c
 13860  002C4E  A0D8               	btfss	status,0,c
 13861  002C50  0644               	decf	(dtoa@i+1)^0,f,c
 13862  002C52                     
 13863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13864  002C52  0E41               	movlw	low _dbuf
 13865  002C54  2443               	addwf	dtoa@i^0,w,c
 13866  002C56  6ED9               	movwf	fsr2l,c
 13867  002C58  0E01               	movlw	high _dbuf
 13868  002C5A  2044               	addwfc	(dtoa@i+1)^0,w,c
 13869  002C5C  6EDA               	movwf	fsr2h,c
 13870  002C5E  C03B  F006         	movff	dtoa@n,___aomod@dividend
 13871  002C62  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
 13872  002C66  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
 13873  002C6A  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
 13874  002C6E  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 13875  002C72  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 13876  002C76  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 13877  002C7A  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 13878  002C7E  0E0A               	movlw	10
 13879  002C80  6E0E               	movwf	___aomod@divisor^0,c
 13880  002C82  0E00               	movlw	0
 13881  002C84  6E0F               	movwf	(___aomod@divisor+1)^0,c
 13882  002C86  0E00               	movlw	0
 13883  002C88  6E10               	movwf	(___aomod@divisor+2)^0,c
 13884  002C8A  0E00               	movlw	0
 13885  002C8C  6E11               	movwf	(___aomod@divisor+3)^0,c
 13886  002C8E  0E00               	movlw	0
 13887  002C90  6E12               	movwf	(___aomod@divisor+4)^0,c
 13888  002C92  0E00               	movlw	0
 13889  002C94  6E13               	movwf	(___aomod@divisor+5)^0,c
 13890  002C96  0E00               	movlw	0
 13891  002C98  6E14               	movwf	(___aomod@divisor+6)^0,c
 13892  002C9A  0E00               	movlw	0
 13893  002C9C  6E15               	movwf	(___aomod@divisor+7)^0,c
 13894  002C9E  EC20  F01E         	call	___aomod	;wreg free
 13895  002CA2  C006  F02B         	movff	?___aomod,??_dtoa
 13896  002CA6  C007  F02C         	movff	?___aomod+1,??_dtoa+1
 13897  002CAA  C008  F02D         	movff	?___aomod+2,??_dtoa+2
 13898  002CAE  C009  F02E         	movff	?___aomod+3,??_dtoa+3
 13899  002CB2  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
 13900  002CB6  C00B  F030         	movff	?___aomod+5,??_dtoa+5
 13901  002CBA  C00C  F031         	movff	?___aomod+6,??_dtoa+6
 13902  002CBE  C00D  F032         	movff	?___aomod+7,??_dtoa+7
 13903  002CC2  C02B  F018         	movff	??_dtoa,abs@a
 13904  002CC6  C02D  F019         	movff	??_dtoa+2,abs@a+1
 13905  002CCA  EC7A  F02A         	call	_abs	;wreg free
 13906  002CCE  5018               	movf	?_abs^0,w,c
 13907  002CD0  0F30               	addlw	48
 13908  002CD2  6EDF               	movwf	indf2,c
 13909  002CD4                     
 13910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13911  002CD4  0635               	decf	dtoa@p^0,f,c
 13912  002CD6  A0D8               	btfss	status,0,c
 13913  002CD8  0636               	decf	(dtoa@p+1)^0,f,c
 13914  002CDA                     
 13915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13916  002CDA  0637               	decf	dtoa@w^0,f,c
 13917  002CDC  A0D8               	btfss	status,0,c
 13918  002CDE  0638               	decf	(dtoa@w+1)^0,f,c
 13919  002CE0                     
 13920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13921  002CE0  C03B  F006         	movff	dtoa@n,___aodiv@dividend
 13922  002CE4  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 13923  002CE8  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 13924  002CEC  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 13925  002CF0  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 13926  002CF4  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 13927  002CF8  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 13928  002CFC  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 13929  002D00  0E0A               	movlw	10
 13930  002D02  6E0E               	movwf	___aodiv@divisor^0,c
 13931  002D04  0E00               	movlw	0
 13932  002D06  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 13933  002D08  0E00               	movlw	0
 13934  002D0A  6E10               	movwf	(___aodiv@divisor+2)^0,c
 13935  002D0C  0E00               	movlw	0
 13936  002D0E  6E11               	movwf	(___aodiv@divisor+3)^0,c
 13937  002D10  0E00               	movlw	0
 13938  002D12  6E12               	movwf	(___aodiv@divisor+4)^0,c
 13939  002D14  0E00               	movlw	0
 13940  002D16  6E13               	movwf	(___aodiv@divisor+5)^0,c
 13941  002D18  0E00               	movlw	0
 13942  002D1A  6E14               	movwf	(___aodiv@divisor+6)^0,c
 13943  002D1C  0E00               	movlw	0
 13944  002D1E  6E15               	movwf	(___aodiv@divisor+7)^0,c
 13945  002D20  EC9E  F01C         	call	___aodiv	;wreg free
 13946  002D24  C006  F03B         	movff	?___aodiv,dtoa@n
 13947  002D28  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
 13948  002D2C  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
 13949  002D30  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
 13950  002D34  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
 13951  002D38  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
 13952  002D3C  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
 13953  002D40  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
 13954  002D44                     l9105:
 13955                           
 13956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13957  002D44  BE44               	btfsc	(dtoa@i+1)^0,7,c
 13958  002D46  EFAD  F016         	goto	u9941
 13959  002D4A  5044               	movf	(dtoa@i+1)^0,w,c
 13960  002D4C  E108               	bnz	u9940
 13961  002D4E  0443               	decf	dtoa@i^0,w,c
 13962  002D50  A0D8               	btfss	status,0,c
 13963  002D52  EFAD  F016         	goto	u9941
 13964  002D56  EFAF  F016         	goto	u9940
 13965  002D5A                     u9941:
 13966  002D5A  EFDF  F016         	goto	l9115
 13967  002D5E                     u9940:
 13968  002D5E  503B               	movf	dtoa@n^0,w,c
 13969  002D60  103C               	iorwf	(dtoa@n+1)^0,w,c
 13970  002D62  103D               	iorwf	(dtoa@n+2)^0,w,c
 13971  002D64  103E               	iorwf	(dtoa@n+3)^0,w,c
 13972  002D66  103F               	iorwf	(dtoa@n+4)^0,w,c
 13973  002D68  1040               	iorwf	(dtoa@n+5)^0,w,c
 13974  002D6A  1041               	iorwf	(dtoa@n+6)^0,w,c
 13975  002D6C  1042               	iorwf	(dtoa@n+7)^0,w,c
 13976  002D6E  A4D8               	btfss	status,2,c
 13977  002D70  EFBC  F016         	goto	u9951
 13978  002D74  EFBE  F016         	goto	u9950
 13979  002D78                     u9951:
 13980  002D78  EF26  F016         	goto	l9095
 13981  002D7C                     u9950:
 13982  002D7C  BE36               	btfsc	(dtoa@p+1)^0,7,c
 13983  002D7E  EFCB  F016         	goto	u9960
 13984  002D82  5036               	movf	(dtoa@p+1)^0,w,c
 13985  002D84  E106               	bnz	u9961
 13986  002D86  0435               	decf	dtoa@p^0,w,c
 13987  002D88  B0D8               	btfsc	status,0,c
 13988  002D8A  EFC9  F016         	goto	u9961
 13989  002D8E  EFCB  F016         	goto	u9960
 13990  002D92                     u9961:
 13991  002D92  EF26  F016         	goto	l9095
 13992  002D96                     u9960:
 13993  002D96  BE38               	btfsc	(dtoa@w+1)^0,7,c
 13994  002D98  EFD6  F016         	goto	u9971
 13995  002D9C  5038               	movf	(dtoa@w+1)^0,w,c
 13996  002D9E  E108               	bnz	u9970
 13997  002DA0  0437               	decf	dtoa@w^0,w,c
 13998  002DA2  A0D8               	btfss	status,0,c
 13999  002DA4  EFD6  F016         	goto	u9971
 14000  002DA8  EFD8  F016         	goto	u9970
 14001  002DAC                     u9971:
 14002  002DAC  EFDF  F016         	goto	l9115
 14003  002DB0                     u9970:
 14004  002DB0  B255               	btfsc	_flags^0,1,c
 14005  002DB2  EFDD  F016         	goto	u9981
 14006  002DB6  EFDF  F016         	goto	u9980
 14007  002DBA                     u9981:
 14008  002DBA  EF26  F016         	goto	l9095
 14009  002DBE                     u9980:
 14010  002DBE                     l9115:
 14011                           
 14012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 14013  002DBE  5039               	movf	dtoa@s^0,w,c
 14014  002DC0  103A               	iorwf	(dtoa@s+1)^0,w,c
 14015  002DC2  A4D8               	btfss	status,2,c
 14016  002DC4  EFE6  F016         	goto	u9991
 14017  002DC8  EFE8  F016         	goto	u9990
 14018  002DCC                     u9991:
 14019  002DCC  EFEF  F016         	goto	l9119
 14020  002DD0                     u9990:
 14021  002DD0  A455               	btfss	_flags^0,2,c
 14022  002DD2  EFED  F016         	goto	u10001
 14023  002DD6  EFEF  F016         	goto	u10000
 14024  002DDA                     u10001:
 14025  002DDA  EF0D  F017         	goto	l9129
 14026  002DDE                     u10000:
 14027  002DDE                     l9119:
 14028                           
 14029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 14030  002DDE  0643               	decf	dtoa@i^0,f,c
 14031  002DE0  A0D8               	btfss	status,0,c
 14032  002DE2  0644               	decf	(dtoa@i+1)^0,f,c
 14033  002DE4                     
 14034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 14035  002DE4  5039               	movf	dtoa@s^0,w,c
 14036  002DE6  103A               	iorwf	(dtoa@s+1)^0,w,c
 14037  002DE8  A4D8               	btfss	status,2,c
 14038  002DEA  EFF9  F016         	goto	u10011
 14039  002DEE  EFFB  F016         	goto	u10010
 14040  002DF2                     u10011:
 14041  002DF2  EF01  F017         	goto	l9125
 14042  002DF6                     u10010:
 14043  002DF6  0E00               	movlw	0
 14044  002DF8  6E34               	movwf	(_dtoa$917+1)^0,c
 14045  002DFA  0E2B               	movlw	43
 14046  002DFC  6E33               	movwf	_dtoa$917^0,c
 14047  002DFE  EF05  F017         	goto	l9127
 14048  002E02                     l9125:
 14049  002E02  0E00               	movlw	0
 14050  002E04  6E34               	movwf	(_dtoa$917+1)^0,c
 14051  002E06  0E2D               	movlw	45
 14052  002E08  6E33               	movwf	_dtoa$917^0,c
 14053  002E0A                     l9127:
 14054  002E0A  0E41               	movlw	low _dbuf
 14055  002E0C  2443               	addwf	dtoa@i^0,w,c
 14056  002E0E  6ED9               	movwf	fsr2l,c
 14057  002E10  0E01               	movlw	high _dbuf
 14058  002E12  2044               	addwfc	(dtoa@i+1)^0,w,c
 14059  002E14  6EDA               	movwf	fsr2h,c
 14060  002E16  C033  FFDF         	movff	_dtoa$917,indf2
 14061  002E1A                     l9129:
 14062                           
 14063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 14064  002E1A  C021  F016         	movff	dtoa@fp,pad@fp
 14065  002E1E  C022  F017         	movff	dtoa@fp+1,pad@fp+1
 14066  002E22  0E41               	movlw	low _dbuf
 14067  002E24  2443               	addwf	dtoa@i^0,w,c
 14068  002E26  6E18               	movwf	pad@buf^0,c
 14069  002E28  0E01               	movlw	high _dbuf
 14070  002E2A  2044               	addwfc	(dtoa@i+1)^0,w,c
 14071  002E2C  6E19               	movwf	(pad@buf+1)^0,c
 14072  002E2E  C037  F01A         	movff	dtoa@w,pad@p
 14073  002E32  C038  F01B         	movff	dtoa@w+1,pad@p+1
 14074  002E36  ECA4  F023         	call	_pad	;wreg free
 14075  002E3A  C016  F021         	movff	?_pad,?_dtoa
 14076  002E3E  C017  F022         	movff	?_pad+1,?_dtoa+1
 14077  002E42  0012               	return		;funcret
 14078  002E44                     __end_of_dtoa:
 14079                           	opt callstack 0
 14080                           
 14081 ;; *************** function _abs *****************
 14082 ;; Defined at:
 14083 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;  a               2   23[COMRAM] int 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;		None
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  2   23[COMRAM] int 
 14090 ;; Registers used:
 14091 ;;		wreg, status,2, status,0
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14097 ;;      Params:         2       0       0       0       0       0       0       0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14099 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14100 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14101 ;;Total ram usage:        4 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; Hardware stack levels required when called:    2
 14104 ;; This function calls:
 14105 ;;		Nothing
 14106 ;; This function is called by:
 14107 ;;		_dtoa
 14108 ;; This function uses a non-reentrant model
 14109 ;;
 14110                           
 14111                           	psect	text52
 14112  0054F4                     __ptext52:
 14113                           	opt callstack 0
 14114  0054F4                     _abs:
 14115                           	opt callstack 23
 14116  0054F4  BE19               	btfsc	(abs@a+1)^0,7,c
 14117  0054F6  EF87  F02A         	goto	u8630
 14118  0054FA  5019               	movf	(abs@a+1)^0,w,c
 14119  0054FC  E106               	bnz	u8631
 14120  0054FE  0418               	decf	abs@a^0,w,c
 14121  005500  B0D8               	btfsc	status,0,c
 14122  005502  EF85  F02A         	goto	u8631
 14123  005506  EF87  F02A         	goto	u8630
 14124  00550A                     u8631:
 14125  00550A  EF95  F02A         	goto	l1647
 14126  00550E                     u8630:
 14127  00550E  C018  F01A         	movff	abs@a,??_abs
 14128  005512  C019  F01B         	movff	abs@a+1,??_abs+1
 14129  005516  1E1A               	comf	??_abs^0,f,c
 14130  005518  1E1B               	comf	(??_abs+1)^0,f,c
 14131  00551A  4A1A               	infsnz	??_abs^0,f,c
 14132  00551C  2A1B               	incf	(??_abs+1)^0,f,c
 14133  00551E  C01A  F018         	movff	??_abs,?_abs
 14134  005522  C01B  F019         	movff	??_abs+1,?_abs+1
 14135  005526  EF99  F02A         	goto	l1650
 14136  00552A                     l1647:
 14137  00552A  C018  F018         	movff	abs@a,?_abs
 14138  00552E  C019  F019         	movff	abs@a+1,?_abs+1
 14139  005532                     l1650:
 14140  005532  0012               	return		;funcret
 14141  005534                     __end_of_abs:
 14142                           	opt callstack 0
 14143                           
 14144 ;; *************** function ___aomod *****************
 14145 ;; Defined at:
 14146 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;  dividend        8    5[COMRAM] long long 
 14149 ;;  divisor         8   13[COMRAM] long long 
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;  sign            1   22[COMRAM] unsigned char 
 14152 ;;  counter         1   21[COMRAM] unsigned char 
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  8    5[COMRAM] long long 
 14155 ;; Registers used:
 14156 ;;		wreg, status,2, status,0
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14162 ;;      Params:        16       0       0       0       0       0       0       0       0
 14163 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14164 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14165 ;;      Totals:        18       0       0       0       0       0       0       0       0
 14166 ;;Total ram usage:       18 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; Hardware stack levels required when called:    2
 14169 ;; This function calls:
 14170 ;;		Nothing
 14171 ;; This function is called by:
 14172 ;;		_dtoa
 14173 ;; This function uses a non-reentrant model
 14174 ;;
 14175                           
 14176                           	psect	text53
 14177  003C40                     __ptext53:
 14178                           	opt callstack 0
 14179  003C40                     ___aomod:
 14180                           	opt callstack 23
 14181  003C40  0E00               	movlw	0
 14182  003C42  6E17               	movwf	___aomod@sign^0,c
 14183  003C44  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 14184  003C46  EF29  F01E         	goto	u8950
 14185  003C4A  EF27  F01E         	goto	u8951
 14186  003C4E                     u8951:
 14187  003C4E  EF3B  F01E         	goto	l8509
 14188  003C52                     u8950:
 14189  003C52  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14190  003C54  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14191  003C56  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14192  003C58  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14193  003C5A  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14194  003C5C  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14195  003C5E  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14196  003C60  6C06               	negf	___aomod@dividend^0,c
 14197  003C62  0E00               	movlw	0
 14198  003C64  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14199  003C66  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14200  003C68  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14201  003C6A  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14202  003C6C  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14203  003C6E  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14204  003C70  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14205  003C72  0E01               	movlw	1
 14206  003C74  6E17               	movwf	___aomod@sign^0,c
 14207  003C76                     l8509:
 14208  003C76  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 14209  003C78  EF42  F01E         	goto	u8960
 14210  003C7C  EF40  F01E         	goto	u8961
 14211  003C80                     u8961:
 14212  003C80  EF52  F01E         	goto	l8513
 14213  003C84                     u8960:
 14214  003C84  1E15               	comf	(___aomod@divisor+7)^0,f,c
 14215  003C86  1E14               	comf	(___aomod@divisor+6)^0,f,c
 14216  003C88  1E13               	comf	(___aomod@divisor+5)^0,f,c
 14217  003C8A  1E12               	comf	(___aomod@divisor+4)^0,f,c
 14218  003C8C  1E11               	comf	(___aomod@divisor+3)^0,f,c
 14219  003C8E  1E10               	comf	(___aomod@divisor+2)^0,f,c
 14220  003C90  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 14221  003C92  6C0E               	negf	___aomod@divisor^0,c
 14222  003C94  0E00               	movlw	0
 14223  003C96  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 14224  003C98  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 14225  003C9A  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 14226  003C9C  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 14227  003C9E  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 14228  003CA0  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 14229  003CA2  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 14230  003CA4                     l8513:
 14231  003CA4  500E               	movf	___aomod@divisor^0,w,c
 14232  003CA6  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 14233  003CA8  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 14234  003CAA  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 14235  003CAC  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 14236  003CAE  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 14237  003CB0  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 14238  003CB2  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 14239  003CB4  B4D8               	btfsc	status,2,c
 14240  003CB6  EF5F  F01E         	goto	u8971
 14241  003CBA  EF61  F01E         	goto	u8970
 14242  003CBE                     u8971:
 14243  003CBE  EFA9  F01E         	goto	l8529
 14244  003CC2                     u8970:
 14245  003CC2  0E01               	movlw	1
 14246  003CC4  6E16               	movwf	___aomod@counter^0,c
 14247  003CC6  EF6F  F01E         	goto	l8519
 14248  003CCA                     l8517:
 14249  003CCA  90D8               	bcf	status,0,c
 14250  003CCC  360E               	rlcf	___aomod@divisor^0,f,c
 14251  003CCE  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 14252  003CD0  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 14253  003CD2  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 14254  003CD4  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 14255  003CD6  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 14256  003CD8  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 14257  003CDA  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 14258  003CDC  2A16               	incf	___aomod@counter^0,f,c
 14259  003CDE                     l8519:
 14260  003CDE  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 14261  003CE0  EF74  F01E         	goto	u8981
 14262  003CE4  EF76  F01E         	goto	u8980
 14263  003CE8                     u8981:
 14264  003CE8  EF65  F01E         	goto	l8517
 14265  003CEC                     u8980:
 14266  003CEC                     l8521:
 14267  003CEC  500E               	movf	___aomod@divisor^0,w,c
 14268  003CEE  5C06               	subwf	___aomod@dividend^0,w,c
 14269  003CF0  500F               	movf	(___aomod@divisor+1)^0,w,c
 14270  003CF2  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 14271  003CF4  5010               	movf	(___aomod@divisor+2)^0,w,c
 14272  003CF6  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 14273  003CF8  5011               	movf	(___aomod@divisor+3)^0,w,c
 14274  003CFA  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 14275  003CFC  5012               	movf	(___aomod@divisor+4)^0,w,c
 14276  003CFE  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 14277  003D00  5013               	movf	(___aomod@divisor+5)^0,w,c
 14278  003D02  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 14279  003D04  5014               	movf	(___aomod@divisor+6)^0,w,c
 14280  003D06  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 14281  003D08  5015               	movf	(___aomod@divisor+7)^0,w,c
 14282  003D0A  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 14283  003D0C  A0D8               	btfss	status,0,c
 14284  003D0E  EF8B  F01E         	goto	u8991
 14285  003D12  EF8D  F01E         	goto	u8990
 14286  003D16                     u8991:
 14287  003D16  EF9D  F01E         	goto	l8525
 14288  003D1A                     u8990:
 14289  003D1A  500E               	movf	___aomod@divisor^0,w,c
 14290  003D1C  5E06               	subwf	___aomod@dividend^0,f,c
 14291  003D1E  500F               	movf	(___aomod@divisor+1)^0,w,c
 14292  003D20  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 14293  003D22  5010               	movf	(___aomod@divisor+2)^0,w,c
 14294  003D24  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 14295  003D26  5011               	movf	(___aomod@divisor+3)^0,w,c
 14296  003D28  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 14297  003D2A  5012               	movf	(___aomod@divisor+4)^0,w,c
 14298  003D2C  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 14299  003D2E  5013               	movf	(___aomod@divisor+5)^0,w,c
 14300  003D30  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 14301  003D32  5014               	movf	(___aomod@divisor+6)^0,w,c
 14302  003D34  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 14303  003D36  5015               	movf	(___aomod@divisor+7)^0,w,c
 14304  003D38  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 14305  003D3A                     l8525:
 14306  003D3A  90D8               	bcf	status,0,c
 14307  003D3C  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 14308  003D3E  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 14309  003D40  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 14310  003D42  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 14311  003D44  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 14312  003D46  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 14313  003D48  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 14314  003D4A  320E               	rrcf	___aomod@divisor^0,f,c
 14315  003D4C  2E16               	decfsz	___aomod@counter^0,f,c
 14316  003D4E  EF76  F01E         	goto	l8521
 14317  003D52                     l8529:
 14318  003D52  5017               	movf	___aomod@sign^0,w,c
 14319  003D54  B4D8               	btfsc	status,2,c
 14320  003D56  EFAF  F01E         	goto	u9001
 14321  003D5A  EFB1  F01E         	goto	u9000
 14322  003D5E                     u9001:
 14323  003D5E  EFC1  F01E         	goto	l8533
 14324  003D62                     u9000:
 14325  003D62  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14326  003D64  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14327  003D66  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14328  003D68  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14329  003D6A  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14330  003D6C  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14331  003D6E  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14332  003D70  6C06               	negf	___aomod@dividend^0,c
 14333  003D72  0E00               	movlw	0
 14334  003D74  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14335  003D76  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14336  003D78  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14337  003D7A  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14338  003D7C  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14339  003D7E  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14340  003D80  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14341  003D82                     l8533:
 14342  003D82  C006  F006         	movff	___aomod@dividend,?___aomod
 14343  003D86  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 14344  003D8A  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 14345  003D8E  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 14346  003D92  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 14347  003D96  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 14348  003D9A  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 14349  003D9E  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 14350  003DA2  0012               	return		;funcret
 14351  003DA4                     __end_of___aomod:
 14352                           	opt callstack 0
 14353                           
 14354 ;; *************** function ___aodiv *****************
 14355 ;; Defined at:
 14356 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14357 ;; Parameters:    Size  Location     Type
 14358 ;;  dividend        8    5[COMRAM] long long 
 14359 ;;  divisor         8   13[COMRAM] long long 
 14360 ;; Auto vars:     Size  Location     Type
 14361 ;;  quotient        8   23[COMRAM] long long 
 14362 ;;  sign            1   22[COMRAM] unsigned char 
 14363 ;;  counter         1   21[COMRAM] unsigned char 
 14364 ;; Return value:  Size  Location     Type
 14365 ;;                  8    5[COMRAM] long long 
 14366 ;; Registers used:
 14367 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14368 ;; Tracked objects:
 14369 ;;		On entry : 0/0
 14370 ;;		On exit  : 0/0
 14371 ;;		Unchanged: 0/0
 14372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14373 ;;      Params:        16       0       0       0       0       0       0       0       0
 14374 ;;      Locals:        10       0       0       0       0       0       0       0       0
 14375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14376 ;;      Totals:        26       0       0       0       0       0       0       0       0
 14377 ;;Total ram usage:       26 bytes
 14378 ;; Hardware stack levels used:    1
 14379 ;; Hardware stack levels required when called:    2
 14380 ;; This function calls:
 14381 ;;		Nothing
 14382 ;; This function is called by:
 14383 ;;		_dtoa
 14384 ;; This function uses a non-reentrant model
 14385 ;;
 14386                           
 14387                           	psect	text54
 14388  00393C                     __ptext54:
 14389                           	opt callstack 0
 14390  00393C                     ___aodiv:
 14391                           	opt callstack 23
 14392  00393C  0E00               	movlw	0
 14393  00393E  6E17               	movwf	___aodiv@sign^0,c
 14394  003940  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 14395  003942  EFA7  F01C         	goto	u8880
 14396  003946  EFA5  F01C         	goto	u8881
 14397  00394A                     u8881:
 14398  00394A  EFB9  F01C         	goto	l8465
 14399  00394E                     u8880:
 14400  00394E  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 14401  003950  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 14402  003952  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 14403  003954  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 14404  003956  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 14405  003958  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 14406  00395A  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 14407  00395C  6C0E               	negf	___aodiv@divisor^0,c
 14408  00395E  0E00               	movlw	0
 14409  003960  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 14410  003962  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 14411  003964  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 14412  003966  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 14413  003968  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 14414  00396A  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 14415  00396C  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 14416  00396E  0E01               	movlw	1
 14417  003970  6E17               	movwf	___aodiv@sign^0,c
 14418  003972                     l8465:
 14419  003972  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 14420  003974  EFC0  F01C         	goto	u8890
 14421  003978  EFBE  F01C         	goto	u8891
 14422  00397C                     u8891:
 14423  00397C  EFD2  F01C         	goto	l8471
 14424  003980                     u8890:
 14425  003980  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 14426  003982  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 14427  003984  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 14428  003986  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 14429  003988  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 14430  00398A  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 14431  00398C  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 14432  00398E  6C06               	negf	___aodiv@dividend^0,c
 14433  003990  0E00               	movlw	0
 14434  003992  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 14435  003994  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 14436  003996  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 14437  003998  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 14438  00399A  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 14439  00399C  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 14440  00399E  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 14441  0039A0  0E01               	movlw	1
 14442  0039A2  1A17               	xorwf	___aodiv@sign^0,f,c
 14443  0039A4                     l8471:
 14444  0039A4  EE20  F018         	lfsr	2,___aodiv@quotient
 14445  0039A8  0E07               	movlw	7
 14446  0039AA                     u8901:
 14447  0039AA  6ADE               	clrf	postinc2,c
 14448  0039AC  06E8               	decf	wreg,f,c
 14449  0039AE  E2FD               	bc	u8901
 14450  0039B0  500E               	movf	___aodiv@divisor^0,w,c
 14451  0039B2  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 14452  0039B4  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 14453  0039B6  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 14454  0039B8  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 14455  0039BA  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 14456  0039BC  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 14457  0039BE  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 14458  0039C0  B4D8               	btfsc	status,2,c
 14459  0039C2  EFE5  F01C         	goto	u8911
 14460  0039C6  EFE7  F01C         	goto	u8910
 14461  0039CA                     u8911:
 14462  0039CA  EF39  F01D         	goto	l8493
 14463  0039CE                     u8910:
 14464  0039CE  0E01               	movlw	1
 14465  0039D0  6E16               	movwf	___aodiv@counter^0,c
 14466  0039D2  EFF5  F01C         	goto	l8479
 14467  0039D6                     l8477:
 14468  0039D6  90D8               	bcf	status,0,c
 14469  0039D8  360E               	rlcf	___aodiv@divisor^0,f,c
 14470  0039DA  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 14471  0039DC  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 14472  0039DE  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 14473  0039E0  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 14474  0039E2  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 14475  0039E4  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 14476  0039E6  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 14477  0039E8  2A16               	incf	___aodiv@counter^0,f,c
 14478  0039EA                     l8479:
 14479  0039EA  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 14480  0039EC  EFFA  F01C         	goto	u8921
 14481  0039F0  EFFC  F01C         	goto	u8920
 14482  0039F4                     u8921:
 14483  0039F4  EFEB  F01C         	goto	l8477
 14484  0039F8                     u8920:
 14485  0039F8                     l8481:
 14486  0039F8  90D8               	bcf	status,0,c
 14487  0039FA  3618               	rlcf	___aodiv@quotient^0,f,c
 14488  0039FC  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 14489  0039FE  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 14490  003A00  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 14491  003A02  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 14492  003A04  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 14493  003A06  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 14494  003A08  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 14495  003A0A  500E               	movf	___aodiv@divisor^0,w,c
 14496  003A0C  5C06               	subwf	___aodiv@dividend^0,w,c
 14497  003A0E  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14498  003A10  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 14499  003A12  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14500  003A14  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 14501  003A16  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14502  003A18  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 14503  003A1A  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14504  003A1C  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 14505  003A1E  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14506  003A20  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 14507  003A22  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14508  003A24  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 14509  003A26  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14510  003A28  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 14511  003A2A  A0D8               	btfss	status,0,c
 14512  003A2C  EF1A  F01D         	goto	u8931
 14513  003A30  EF1C  F01D         	goto	u8930
 14514  003A34                     u8931:
 14515  003A34  EF2D  F01D         	goto	l8489
 14516  003A38                     u8930:
 14517  003A38  500E               	movf	___aodiv@divisor^0,w,c
 14518  003A3A  5E06               	subwf	___aodiv@dividend^0,f,c
 14519  003A3C  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14520  003A3E  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 14521  003A40  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14522  003A42  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 14523  003A44  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14524  003A46  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 14525  003A48  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14526  003A4A  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 14527  003A4C  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14528  003A4E  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 14529  003A50  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14530  003A52  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 14531  003A54  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14532  003A56  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 14533  003A58  8018               	bsf	___aodiv@quotient^0,0,c
 14534  003A5A                     l8489:
 14535  003A5A  90D8               	bcf	status,0,c
 14536  003A5C  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 14537  003A5E  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 14538  003A60  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 14539  003A62  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 14540  003A64  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 14541  003A66  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 14542  003A68  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 14543  003A6A  320E               	rrcf	___aodiv@divisor^0,f,c
 14544  003A6C  2E16               	decfsz	___aodiv@counter^0,f,c
 14545  003A6E  EFFC  F01C         	goto	l8481
 14546  003A72                     l8493:
 14547  003A72  5017               	movf	___aodiv@sign^0,w,c
 14548  003A74  B4D8               	btfsc	status,2,c
 14549  003A76  EF3F  F01D         	goto	u8941
 14550  003A7A  EF41  F01D         	goto	u8940
 14551  003A7E                     u8941:
 14552  003A7E  EF51  F01D         	goto	l8497
 14553  003A82                     u8940:
 14554  003A82  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 14555  003A84  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 14556  003A86  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 14557  003A88  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 14558  003A8A  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 14559  003A8C  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 14560  003A8E  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 14561  003A90  6C18               	negf	___aodiv@quotient^0,c
 14562  003A92  0E00               	movlw	0
 14563  003A94  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 14564  003A96  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 14565  003A98  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 14566  003A9A  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 14567  003A9C  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 14568  003A9E  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 14569  003AA0  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 14570  003AA2                     l8497:
 14571  003AA2  C018  F006         	movff	___aodiv@quotient,?___aodiv
 14572  003AA6  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 14573  003AAA  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 14574  003AAE  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 14575  003AB2  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 14576  003AB6  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 14577  003ABA  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 14578  003ABE  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 14579  003AC2  0012               	return		;funcret
 14580  003AC4                     __end_of___aodiv:
 14581                           	opt callstack 0
 14582                           
 14583 ;; *************** function _ctoa *****************
 14584 ;; Defined at:
 14585 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 14588 ;;		 -> sprintf@f(6), 
 14589 ;;  c               1   34[COMRAM] unsigned char 
 14590 ;; Auto vars:     Size  Location     Type
 14591 ;;  w               2   35[COMRAM] int 
 14592 ;;  l               2    0        int 
 14593 ;; Return value:  Size  Location     Type
 14594 ;;                  2   32[COMRAM] int 
 14595 ;; Registers used:
 14596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14597 ;; Tracked objects:
 14598 ;;		On entry : 0/0
 14599 ;;		On exit  : 0/0
 14600 ;;		Unchanged: 0/0
 14601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14602 ;;      Params:         3       0       0       0       0       0       0       0       0
 14603 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14604 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14605 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14606 ;;Total ram usage:        5 bytes
 14607 ;; Hardware stack levels used:    1
 14608 ;; Hardware stack levels required when called:    6
 14609 ;; This function calls:
 14610 ;;		_pad
 14611 ;; This function is called by:
 14612 ;;		_vfpfcnvrt
 14613 ;; This function uses a non-reentrant model
 14614 ;;
 14615                           
 14616                           	psect	text55
 14617  005108                     __ptext55:
 14618                           	opt callstack 0
 14619  005108                     _ctoa:
 14620                           	opt callstack 20
 14621  005108                     
 14622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14623  005108  0101               	movlb	1	; () banked
 14624  00510A  5132               	movf	_width& (0+255),w,b
 14625  00510C  1133               	iorwf	(_width+1)& (0+255),w,b
 14626  00510E  A4D8               	btfss	status,2,c
 14627  005110  EF8C  F028         	goto	u9861
 14628  005114  EF8E  F028         	goto	u9860
 14629  005118                     u9861:
 14630  005118  EF94  F028         	goto	l9061
 14631  00511C                     u9860:
 14632  00511C                     
 14633                           ; BSR set to: 1
 14634  00511C  C132  F024         	movff	_width,ctoa@w
 14635  005120  C133  F025         	movff	_width+1,ctoa@w+1
 14636  005124  EF9A  F028         	goto	l9063
 14637  005128                     l9061:
 14638                           
 14639                           ; BSR set to: 1
 14640  005128  0EFF               	movlw	255
 14641  00512A  2532               	addwf	_width& (0+255),w,b
 14642  00512C  6E24               	movwf	ctoa@w^0,c
 14643  00512E  0EFF               	movlw	255
 14644  005130  2133               	addwfc	(_width+1)& (0+255),w,b
 14645  005132  6E25               	movwf	(ctoa@w+1)^0,c
 14646  005134                     l9063:
 14647                           
 14648                           ; BSR set to: 1
 14649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14650  005134  C023  F141         	movff	ctoa@c,_dbuf
 14651  005138                     
 14652                           ; BSR set to: 1
 14653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14654  005138  0E00               	movlw	0
 14655  00513A  6F42               	movwf	(_dbuf+1)& (0+255),b
 14656  00513C                     
 14657                           ; BSR set to: 1
 14658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14659  00513C  C021  F016         	movff	ctoa@fp,pad@fp
 14660  005140  C022  F017         	movff	ctoa@fp+1,pad@fp+1
 14661  005144  0E41               	movlw	low _dbuf
 14662  005146  6E18               	movwf	pad@buf^0,c
 14663  005148  0E01               	movlw	high _dbuf
 14664  00514A  6E19               	movwf	(pad@buf+1)^0,c
 14665  00514C  C024  F01A         	movff	ctoa@w,pad@p
 14666  005150  C025  F01B         	movff	ctoa@w+1,pad@p+1
 14667  005154  ECA4  F023         	call	_pad	;wreg free
 14668  005158  C016  F021         	movff	?_pad,?_ctoa
 14669  00515C  C017  F022         	movff	?_pad+1,?_ctoa+1
 14670  005160  0012               	return		;funcret
 14671  005162                     __end_of_ctoa:
 14672                           	opt callstack 0
 14673                           
 14674 ;; *************** function _pad *****************
 14675 ;; Defined at:
 14676 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14677 ;; Parameters:    Size  Location     Type
 14678 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 14679 ;;		 -> sprintf@f(6), 
 14680 ;;  buf             2   23[COMRAM] PTR unsigned char 
 14681 ;;		 -> dbuf(80), 
 14682 ;;  p               2   25[COMRAM] int 
 14683 ;; Auto vars:     Size  Location     Type
 14684 ;;  w               2   30[COMRAM] int 
 14685 ;;  i               2   28[COMRAM] int 
 14686 ;; Return value:  Size  Location     Type
 14687 ;;                  2   21[COMRAM] int 
 14688 ;; Registers used:
 14689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14690 ;; Tracked objects:
 14691 ;;		On entry : 0/0
 14692 ;;		On exit  : 0/0
 14693 ;;		Unchanged: 0/0
 14694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14695 ;;      Params:         6       0       0       0       0       0       0       0       0
 14696 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14697 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14698 ;;      Totals:        11       0       0       0       0       0       0       0       0
 14699 ;;Total ram usage:       11 bytes
 14700 ;; Hardware stack levels used:    1
 14701 ;; Hardware stack levels required when called:    5
 14702 ;; This function calls:
 14703 ;;		_fputc
 14704 ;;		_fputs
 14705 ;;		_strlen
 14706 ;; This function is called by:
 14707 ;;		_ctoa
 14708 ;;		_dtoa
 14709 ;;		_efgtoa
 14710 ;; This function uses a non-reentrant model
 14711 ;;
 14712                           
 14713                           	psect	text56
 14714  004748                     __ptext56:
 14715                           	opt callstack 0
 14716  004748                     _pad:
 14717                           	opt callstack 20
 14718  004748                     
 14719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14720  004748  A055               	btfss	_flags^0,0,c
 14721  00474A  EFA9  F023         	goto	u8591
 14722  00474E  EFAB  F023         	goto	u8590
 14723  004752                     u8591:
 14724  004752  EFB5  F023         	goto	l8361
 14725  004756                     u8590:
 14726  004756                     
 14727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14728  004756  C018  F00F         	movff	pad@buf,fputs@s
 14729  00475A  C019  F010         	movff	pad@buf+1,fputs@s+1
 14730  00475E  C016  F011         	movff	pad@fp,fputs@fp
 14731  004762  C017  F012         	movff	pad@fp+1,fputs@fp+1
 14732  004766  EC38  F02A         	call	_fputs	;wreg free
 14733  00476A                     l8361:
 14734                           
 14735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14736  00476A  BE1B               	btfsc	(pad@p+1)^0,7,c
 14737  00476C  EFBA  F023         	goto	u8601
 14738  004770  EFBC  F023         	goto	u8600
 14739  004774                     u8601:
 14740  004774  EFC2  F023         	goto	l8365
 14741  004778                     u8600:
 14742  004778  C01A  F01F         	movff	pad@p,pad@w
 14743  00477C  C01B  F020         	movff	pad@p+1,pad@w+1
 14744  004780  EFC6  F023         	goto	l794
 14745  004784                     l8365:
 14746  004784  0E00               	movlw	0
 14747  004786  6E20               	movwf	(pad@w+1)^0,c
 14748  004788  0E00               	movlw	0
 14749  00478A  6E1F               	movwf	pad@w^0,c
 14750  00478C                     l794:
 14751                           
 14752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14753  00478C  0E00               	movlw	0
 14754  00478E  6E1E               	movwf	(pad@i+1)^0,c
 14755  004790  0E00               	movlw	0
 14756  004792  6E1D               	movwf	pad@i^0,c
 14757                           
 14758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14759  004794  EFD8  F023         	goto	l8371
 14760  004798                     l8367:
 14761                           
 14762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14763  004798  0E00               	movlw	0
 14764  00479A  6E07               	movwf	(fputc@c+1)^0,c
 14765  00479C  0E20               	movlw	32
 14766  00479E  6E06               	movwf	fputc@c^0,c
 14767  0047A0  C016  F008         	movff	pad@fp,fputc@fp
 14768  0047A4  C017  F009         	movff	pad@fp+1,fputc@fp+1
 14769  0047A8  EC7C  F022         	call	_fputc	;wreg free
 14770  0047AC                     
 14771                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14772  0047AC  4A1D               	infsnz	pad@i^0,f,c
 14773  0047AE  2A1E               	incf	(pad@i+1)^0,f,c
 14774  0047B0                     l8371:
 14775                           
 14776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14777  0047B0  501F               	movf	pad@w^0,w,c
 14778  0047B2  5C1D               	subwf	pad@i^0,w,c
 14779  0047B4  501E               	movf	(pad@i+1)^0,w,c
 14780  0047B6  0A80               	xorlw	128
 14781  0047B8  6E1C               	movwf	??_pad^0,c
 14782  0047BA  5020               	movf	(pad@w+1)^0,w,c
 14783  0047BC  0A80               	xorlw	128
 14784  0047BE  581C               	subwfb	??_pad^0,w,c
 14785  0047C0  A0D8               	btfss	status,0,c
 14786  0047C2  EFE5  F023         	goto	u8611
 14787  0047C6  EFE7  F023         	goto	u8610
 14788  0047CA                     u8611:
 14789  0047CA  EFCC  F023         	goto	l8367
 14790  0047CE                     u8610:
 14791  0047CE                     
 14792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14793  0047CE  B055               	btfsc	_flags^0,0,c
 14794  0047D0  EFEC  F023         	goto	u8621
 14795  0047D4  EFEE  F023         	goto	u8620
 14796  0047D8                     u8621:
 14797  0047D8  EFF8  F023         	goto	l8375
 14798  0047DC                     u8620:
 14799  0047DC                     
 14800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14801  0047DC  C018  F00F         	movff	pad@buf,fputs@s
 14802  0047E0  C019  F010         	movff	pad@buf+1,fputs@s+1
 14803  0047E4  C016  F011         	movff	pad@fp,fputs@fp
 14804  0047E8  C017  F012         	movff	pad@fp+1,fputs@fp+1
 14805  0047EC  EC38  F02A         	call	_fputs	;wreg free
 14806  0047F0                     l8375:
 14807                           
 14808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14809  0047F0  C018  F006         	movff	pad@buf,strlen@s
 14810  0047F4  C019  F007         	movff	pad@buf+1,strlen@s+1
 14811  0047F8  ECEE  F02A         	call	_strlen	;wreg free
 14812  0047FC  501F               	movf	pad@w^0,w,c
 14813  0047FE  2406               	addwf	?_strlen^0,w,c
 14814  004800  6E16               	movwf	?_pad^0,c
 14815  004802  5020               	movf	(pad@w+1)^0,w,c
 14816  004804  2007               	addwfc	(?_strlen+1)^0,w,c
 14817  004806  6E17               	movwf	(?_pad+1)^0,c
 14818  004808  0012               	return		;funcret
 14819  00480A                     __end_of_pad:
 14820                           	opt callstack 0
 14821                           
 14822 ;; *************** function _strlen *****************
 14823 ;; Defined at:
 14824 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14825 ;; Parameters:    Size  Location     Type
 14826 ;;  s               2    5[COMRAM] PTR const unsigned char 
 14827 ;;		 -> dbuf(80), 
 14828 ;; Auto vars:     Size  Location     Type
 14829 ;;  a               2    7[COMRAM] PTR const unsigned char 
 14830 ;;		 -> dbuf(80), 
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  2    5[COMRAM] unsigned int 
 14833 ;; Registers used:
 14834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14840 ;;      Params:         2       0       0       0       0       0       0       0       0
 14841 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14842 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14843 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14844 ;;Total ram usage:        4 bytes
 14845 ;; Hardware stack levels used:    1
 14846 ;; Hardware stack levels required when called:    2
 14847 ;; This function calls:
 14848 ;;		Nothing
 14849 ;; This function is called by:
 14850 ;;		_pad
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854                           	psect	text57
 14855  0055DC                     __ptext57:
 14856                           	opt callstack 0
 14857  0055DC                     _strlen:
 14858                           	opt callstack 22
 14859  0055DC  C006  F008         	movff	strlen@s,strlen@a
 14860  0055E0  C007  F009         	movff	strlen@s+1,strlen@a+1
 14861  0055E4  EFF6  F02A         	goto	l8087
 14862  0055E8                     l8085:
 14863  0055E8  4A06               	infsnz	strlen@s^0,f,c
 14864  0055EA  2A07               	incf	(strlen@s+1)^0,f,c
 14865  0055EC                     l8087:
 14866  0055EC  C006  FFD9         	movff	strlen@s,fsr2l
 14867  0055F0  C007  FFDA         	movff	strlen@s+1,fsr2h
 14868  0055F4  50DF               	movf	indf2,w,c
 14869  0055F6  A4D8               	btfss	status,2,c
 14870  0055F8  EF00  F02B         	goto	u8091
 14871  0055FC  EF02  F02B         	goto	u8090
 14872  005600                     u8091:
 14873  005600  EFF4  F02A         	goto	l8085
 14874  005604                     u8090:
 14875  005604  5008               	movf	strlen@a^0,w,c
 14876  005606  5C06               	subwf	strlen@s^0,w,c
 14877  005608  6E06               	movwf	?_strlen^0,c
 14878  00560A  5009               	movf	(strlen@a+1)^0,w,c
 14879  00560C  5807               	subwfb	(strlen@s+1)^0,w,c
 14880  00560E  6E07               	movwf	(?_strlen+1)^0,c
 14881  005610  0012               	return		;funcret
 14882  005612                     __end_of_strlen:
 14883                           	opt callstack 0
 14884                           
 14885 ;; *************** function _fputs *****************
 14886 ;; Defined at:
 14887 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14888 ;; Parameters:    Size  Location     Type
 14889 ;;  s               2   14[COMRAM] PTR const unsigned char 
 14890 ;;		 -> dbuf(80), 
 14891 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 14892 ;;		 -> sprintf@f(6), 
 14893 ;; Auto vars:     Size  Location     Type
 14894 ;;  i               2   19[COMRAM] int 
 14895 ;;  c               1   18[COMRAM] unsigned char 
 14896 ;; Return value:  Size  Location     Type
 14897 ;;                  2   14[COMRAM] int 
 14898 ;; Registers used:
 14899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14900 ;; Tracked objects:
 14901 ;;		On entry : 0/0
 14902 ;;		On exit  : 0/0
 14903 ;;		Unchanged: 0/0
 14904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14905 ;;      Params:         4       0       0       0       0       0       0       0       0
 14906 ;;      Locals:         3       0       0       0       0       0       0       0       0
 14907 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14908 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14909 ;;Total ram usage:        7 bytes
 14910 ;; Hardware stack levels used:    1
 14911 ;; Hardware stack levels required when called:    4
 14912 ;; This function calls:
 14913 ;;		_fputc
 14914 ;; This function is called by:
 14915 ;;		_pad
 14916 ;; This function uses a non-reentrant model
 14917 ;;
 14918                           
 14919                           	psect	text58
 14920  005470                     __ptext58:
 14921                           	opt callstack 0
 14922  005470                     _fputs:
 14923                           	opt callstack 20
 14924  005470  0E00               	movlw	0
 14925  005472  6E15               	movwf	(fputs@i+1)^0,c
 14926  005474  0E00               	movlw	0
 14927  005476  6E14               	movwf	fputs@i^0,c
 14928  005478  EF49  F02A         	goto	l8081
 14929  00547C                     l8077:
 14930  00547C  C013  F006         	movff	fputs@c,fputc@c
 14931  005480  6A07               	clrf	(fputc@c+1)^0,c
 14932  005482  C011  F008         	movff	fputs@fp,fputc@fp
 14933  005486  C012  F009         	movff	fputs@fp+1,fputc@fp+1
 14934  00548A  EC7C  F022         	call	_fputc	;wreg free
 14935  00548E  4A14               	infsnz	fputs@i^0,f,c
 14936  005490  2A15               	incf	(fputs@i+1)^0,f,c
 14937  005492                     l8081:
 14938  005492  5014               	movf	fputs@i^0,w,c
 14939  005494  240F               	addwf	fputs@s^0,w,c
 14940  005496  6ED9               	movwf	fsr2l,c
 14941  005498  5015               	movf	(fputs@i+1)^0,w,c
 14942  00549A  2010               	addwfc	(fputs@s+1)^0,w,c
 14943  00549C  6EDA               	movwf	fsr2h,c
 14944  00549E  50DF               	movf	indf2,w,c
 14945  0054A0  6E13               	movwf	fputs@c^0,c
 14946  0054A2  5013               	movf	fputs@c^0,w,c
 14947  0054A4  A4D8               	btfss	status,2,c
 14948  0054A6  EF57  F02A         	goto	u8081
 14949  0054AA  EF59  F02A         	goto	u8080
 14950  0054AE                     u8081:
 14951  0054AE  EF3E  F02A         	goto	l8077
 14952  0054B2                     u8080:
 14953  0054B2  0012               	return		;funcret
 14954  0054B4                     __end_of_fputs:
 14955                           	opt callstack 0
 14956                           
 14957 ;; *************** function _fputc *****************
 14958 ;; Defined at:
 14959 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;  c               2    5[COMRAM] int 
 14962 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
 14963 ;;		 -> sprintf@f(6), 
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;		None
 14966 ;; Return value:  Size  Location     Type
 14967 ;;                  2    5[COMRAM] int 
 14968 ;; Registers used:
 14969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14970 ;; Tracked objects:
 14971 ;;		On entry : 0/0
 14972 ;;		On exit  : 0/0
 14973 ;;		Unchanged: 0/0
 14974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14975 ;;      Params:         4       0       0       0       0       0       0       0       0
 14976 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14977 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14978 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14979 ;;Total ram usage:        9 bytes
 14980 ;; Hardware stack levels used:    1
 14981 ;; Hardware stack levels required when called:    3
 14982 ;; This function calls:
 14983 ;;		_putch
 14984 ;; This function is called by:
 14985 ;;		_pad
 14986 ;;		_vfpfcnvrt
 14987 ;;		_fputs
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           	psect	text59
 14992  0044F8                     __ptext59:
 14993                           	opt callstack 0
 14994  0044F8                     _fputc:
 14995                           	opt callstack 23
 14996  0044F8  5008               	movf	fputc@fp^0,w,c
 14997  0044FA  1009               	iorwf	(fputc@fp+1)^0,w,c
 14998  0044FC  B4D8               	btfsc	status,2,c
 14999  0044FE  EF83  F022         	goto	u8041
 15000  004502  EF85  F022         	goto	u8040
 15001  004506                     u8041:
 15002  004506  EF8E  F022         	goto	l8065
 15003  00450A                     u8040:
 15004  00450A  5008               	movf	fputc@fp^0,w,c
 15005  00450C  1009               	iorwf	(fputc@fp+1)^0,w,c
 15006  00450E  A4D8               	btfss	status,2,c
 15007  004510  EF8C  F022         	goto	u8051
 15008  004514  EF8E  F022         	goto	u8050
 15009  004518                     u8051:
 15010  004518  EF93  F022         	goto	l8067
 15011  00451C                     u8050:
 15012  00451C                     l8065:
 15013  00451C  5006               	movf	fputc@c^0,w,c
 15014  00451E  ECDC  F02B         	call	_putch
 15015  004522  EFE0  F022         	goto	l1726
 15016  004526                     l8067:
 15017  004526  EE20 F004          	lfsr	2,4
 15018  00452A  5008               	movf	fputc@fp^0,w,c
 15019  00452C  26D9               	addwf	fsr2l,f,c
 15020  00452E  5009               	movf	(fputc@fp+1)^0,w,c
 15021  004530  22DA               	addwfc	fsr2h,f,c
 15022  004532  50DE               	movf	postinc2,w,c
 15023  004534  10DE               	iorwf	postinc2,w,c
 15024  004536  B4D8               	btfsc	status,2,c
 15025  004538  EFA0  F022         	goto	u8061
 15026  00453C  EFA2  F022         	goto	u8060
 15027  004540                     u8061:
 15028  004540  EFBD  F022         	goto	l8071
 15029  004544                     u8060:
 15030  004544  EE20 F004          	lfsr	2,4
 15031  004548  5008               	movf	fputc@fp^0,w,c
 15032  00454A  26D9               	addwf	fsr2l,f,c
 15033  00454C  5009               	movf	(fputc@fp+1)^0,w,c
 15034  00454E  22DA               	addwfc	fsr2h,f,c
 15035  004550  EE10 F002          	lfsr	1,2
 15036  004554  5008               	movf	fputc@fp^0,w,c
 15037  004556  26E1               	addwf	fsr1l,f,c
 15038  004558  5009               	movf	(fputc@fp+1)^0,w,c
 15039  00455A  22E2               	addwfc	fsr1h,f,c
 15040  00455C  50DE               	movf	postinc2,w,c
 15041  00455E  5CE6               	subwf	postinc1,w,c
 15042  004560  50E6               	movf	postinc1,w,c
 15043  004562  0A80               	xorlw	128
 15044  004564  6E0E               	movwf	(??_fputc+4)^0,c
 15045  004566  50DE               	movf	postinc2,w,c
 15046  004568  0A80               	xorlw	128
 15047  00456A  580E               	subwfb	(??_fputc+4)^0,w,c
 15048  00456C  B0D8               	btfsc	status,0,c
 15049  00456E  EFBB  F022         	goto	u8071
 15050  004572  EFBD  F022         	goto	u8070
 15051  004576                     u8071:
 15052  004576  EFE0  F022         	goto	l1726
 15053  00457A                     u8070:
 15054  00457A                     l8071:
 15055  00457A  EE20 F002          	lfsr	2,2
 15056  00457E  5008               	movf	fputc@fp^0,w,c
 15057  004580  26D9               	addwf	fsr2l,f,c
 15058  004582  5009               	movf	(fputc@fp+1)^0,w,c
 15059  004584  22DA               	addwfc	fsr2h,f,c
 15060  004586  CFDE F00A          	movff	postinc2,??_fputc
 15061  00458A  CFDD F00B          	movff	postdec2,??_fputc+1
 15062  00458E  C008  FFD9         	movff	fputc@fp,fsr2l
 15063  004592  C009  FFDA         	movff	fputc@fp+1,fsr2h
 15064  004596  CFDE F00C          	movff	postinc2,??_fputc+2
 15065  00459A  CFDD F00D          	movff	postdec2,??_fputc+3
 15066  00459E  500A               	movf	??_fputc^0,w,c
 15067  0045A0  240C               	addwf	(??_fputc+2)^0,w,c
 15068  0045A2  6ED9               	movwf	fsr2l,c
 15069  0045A4  500B               	movf	(??_fputc+1)^0,w,c
 15070  0045A6  200D               	addwfc	(??_fputc+3)^0,w,c
 15071  0045A8  6EDA               	movwf	fsr2h,c
 15072  0045AA  C006  FFDF         	movff	fputc@c,indf2
 15073  0045AE  EE20 F002          	lfsr	2,2
 15074  0045B2  5008               	movf	fputc@fp^0,w,c
 15075  0045B4  26D9               	addwf	fsr2l,f,c
 15076  0045B6  5009               	movf	(fputc@fp+1)^0,w,c
 15077  0045B8  22DA               	addwfc	fsr2h,f,c
 15078  0045BA  2ADE               	incf	postinc2,f,c
 15079  0045BC  0E00               	movlw	0
 15080  0045BE  22DD               	addwfc	postdec2,f,c
 15081  0045C0                     l1726:
 15082  0045C0  0012               	return		;funcret
 15083  0045C2                     __end_of_fputc:
 15084                           	opt callstack 0
 15085                           
 15086 ;; *************** function _putch *****************
 15087 ;; Defined at:
 15088 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 15089 ;; Parameters:    Size  Location     Type
 15090 ;;  c               1    wreg     unsigned char 
 15091 ;; Auto vars:     Size  Location     Type
 15092 ;;  c               1    0[COMRAM] unsigned char 
 15093 ;; Return value:  Size  Location     Type
 15094 ;;                  1    wreg      void 
 15095 ;; Registers used:
 15096 ;;		wreg
 15097 ;; Tracked objects:
 15098 ;;		On entry : 0/0
 15099 ;;		On exit  : 0/0
 15100 ;;		Unchanged: 0/0
 15101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15102 ;;      Params:         0       0       0       0       0       0       0       0       0
 15103 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15104 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15105 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15106 ;;Total ram usage:        0 bytes
 15107 ;; Hardware stack levels used:    1
 15108 ;; Hardware stack levels required when called:    2
 15109 ;; This function calls:
 15110 ;;		Nothing
 15111 ;; This function is called by:
 15112 ;;		_fputc
 15113 ;; This function uses a non-reentrant model
 15114 ;;
 15115                           
 15116                           	psect	text60
 15117  0057B8                     __ptext60:
 15118                           	opt callstack 0
 15119  0057B8                     _putch:
 15120                           	opt callstack 23
 15121  0057B8  0012               	return		;funcret
 15122  0057BA                     __end_of_putch:
 15123                           	opt callstack 0
 15124                           
 15125 ;; *************** function _atoi *****************
 15126 ;; Defined at:
 15127 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15128 ;; Parameters:    Size  Location     Type
 15129 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15130 ;;		 -> STR_20(34), STR_11(32), STR_6(17), STR_5(19), 
 15131 ;;		 -> STR_4(18), STR_3(34), 
 15132 ;; Auto vars:     Size  Location     Type
 15133 ;;  n               2   25[COMRAM] int 
 15134 ;;  neg             2   18[COMRAM] int 
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  2   12[COMRAM] int 
 15137 ;; Registers used:
 15138 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15144 ;;      Params:         2       0       0       0       0       0       0       0       0
 15145 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15146 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15147 ;;      Totals:        15       0       0       0       0       0       0       0       0
 15148 ;;Total ram usage:       15 bytes
 15149 ;; Hardware stack levels used:    1
 15150 ;; Hardware stack levels required when called:    3
 15151 ;; This function calls:
 15152 ;;		___wmul
 15153 ;;		_isdigit
 15154 ;;		_isspace
 15155 ;; This function is called by:
 15156 ;;		_vfpfcnvrt
 15157 ;; This function uses a non-reentrant model
 15158 ;;
 15159                           
 15160                           	psect	text61
 15161  00361C                     __ptext61:
 15162                           	opt callstack 0
 15163  00361C                     _atoi:
 15164                           	opt callstack 23
 15165  00361C  0E00               	movlw	0
 15166  00361E  6E1B               	movwf	(atoi@n+1)^0,c
 15167  003620  0E00               	movlw	0
 15168  003622  6E1A               	movwf	atoi@n^0,c
 15169  003624  0E00               	movlw	0
 15170  003626  6E14               	movwf	(atoi@neg+1)^0,c
 15171  003628  0E00               	movlw	0
 15172  00362A  6E13               	movwf	atoi@neg^0,c
 15173  00362C  EF1A  F01B         	goto	l9435
 15174  003630                     l9433:
 15175  003630  4A0D               	infsnz	atoi@s^0,f,c
 15176  003632  2A0E               	incf	(atoi@s+1)^0,f,c
 15177  003634                     l9435:
 15178  003634  0E01               	movlw	1
 15179  003636  6E19               	movwf	_atoi$1445^0,c
 15180  003638  C00D  FFF6         	movff	atoi@s,tblptrl
 15181  00363C  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15182  003640                     	if	0	;tblptru may be non-zero
 15183  003640                     	endif
 15184  003640                     	if	0	;tblptru may be non-zero
 15185  003640                     	endif
 15186  003640  0008               	tblrd		*
 15187  003642  50F5               	movf	tablat,w,c
 15188  003644  0A20               	xorlw	32
 15189  003646  B4D8               	btfsc	status,2,c
 15190  003648  EF28  F01B         	goto	u10541
 15191  00364C  EF2A  F01B         	goto	u10540
 15192  003650                     u10541:
 15193  003650  EF47  F01B         	goto	l9443
 15194  003654                     u10540:
 15195  003654  0EF7               	movlw	247
 15196  003656  6E0F               	movwf	??_atoi^0,c
 15197  003658  0EFF               	movlw	255
 15198  00365A  6E10               	movwf	(??_atoi+1)^0,c
 15199  00365C  C00D  FFF6         	movff	atoi@s,tblptrl
 15200  003660  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15201  003664                     	if	0	;tblptru may be non-zero
 15202  003664                     	endif
 15203  003664                     	if	0	;tblptru may be non-zero
 15204  003664                     	endif
 15205  003664  0008               	tblrd		*
 15206  003666  50F5               	movf	tablat,w,c
 15207  003668  6E11               	movwf	(??_atoi+2)^0,c
 15208  00366A  6A12               	clrf	(??_atoi+3)^0,c
 15209  00366C  500F               	movf	??_atoi^0,w,c
 15210  00366E  2611               	addwf	(??_atoi+2)^0,f,c
 15211  003670  5010               	movf	(??_atoi+1)^0,w,c
 15212  003672  2212               	addwfc	(??_atoi+3)^0,f,c
 15213  003674  5012               	movf	(??_atoi+3)^0,w,c
 15214  003676  E109               	bnz	u10550
 15215  003678  0E05               	movlw	5
 15216  00367A  5C11               	subwf	(??_atoi+2)^0,w,c
 15217  00367C  A0D8               	btfss	status,0,c
 15218  00367E  EF43  F01B         	goto	u10551
 15219  003682  EF45  F01B         	goto	u10550
 15220  003686                     u10551:
 15221  003686  EF47  F01B         	goto	l9443
 15222  00368A                     u10550:
 15223  00368A  0E00               	movlw	0
 15224  00368C  6E19               	movwf	_atoi$1445^0,c
 15225  00368E                     l9443:
 15226  00368E  C019  F015         	movff	_atoi$1445,_atoi$1444
 15227  003692  6A16               	clrf	(_atoi$1444+1)^0,c
 15228  003694  5015               	movf	_atoi$1444^0,w,c
 15229  003696  1016               	iorwf	(_atoi$1444+1)^0,w,c
 15230  003698  A4D8               	btfss	status,2,c
 15231  00369A  EF51  F01B         	goto	u10561
 15232  00369E  EF53  F01B         	goto	u10560
 15233  0036A2                     u10561:
 15234  0036A2  EF18  F01B         	goto	l9433
 15235  0036A6                     u10560:
 15236  0036A6  EF5D  F01B         	goto	l9453
 15237  0036AA                     l9449:
 15238  0036AA  0E00               	movlw	0
 15239  0036AC  6E14               	movwf	(atoi@neg+1)^0,c
 15240  0036AE  0E01               	movlw	1
 15241  0036B0  6E13               	movwf	atoi@neg^0,c
 15242  0036B2                     l9451:
 15243  0036B2  4A0D               	infsnz	atoi@s^0,f,c
 15244  0036B4  2A0E               	incf	(atoi@s+1)^0,f,c
 15245  0036B6  EF92  F01B         	goto	l9459
 15246  0036BA                     l9453:
 15247  0036BA  C00D  FFF6         	movff	atoi@s,tblptrl
 15248  0036BE  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15249  0036C2                     	if	0	;tblptru may be non-zero
 15250  0036C2                     	endif
 15251  0036C2                     	if	0	;tblptru may be non-zero
 15252  0036C2                     	endif
 15253  0036C2  0008               	tblrd		*
 15254  0036C4  50F5               	movf	tablat,w,c
 15255  0036C6  6E0F               	movwf	??_atoi^0,c
 15256  0036C8  6A10               	clrf	(??_atoi+1)^0,c
 15257                           
 15258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15259                           ; Switch size 1, requested type "simple"
 15260                           ; Number of cases is 1, Range of values is 0 to 0
 15261                           ; switch strategies available:
 15262                           ; Name         Instructions Cycles
 15263                           ; simple_byte            4     3 (average)
 15264                           ;	Chosen strategy is simple_byte
 15265  0036CA  5010               	movf	(??_atoi+1)^0,w,c
 15266  0036CC  0A00               	xorlw	0	; case 0
 15267  0036CE  B4D8               	btfsc	status,2,c
 15268  0036D0  EF6C  F01B         	goto	l11187
 15269  0036D4  EF92  F01B         	goto	l9459
 15270  0036D8                     l11187:
 15271                           
 15272                           ; Switch size 1, requested type "simple"
 15273                           ; Number of cases is 2, Range of values is 43 to 45
 15274                           ; switch strategies available:
 15275                           ; Name         Instructions Cycles
 15276                           ; simple_byte            7     4 (average)
 15277                           ;	Chosen strategy is simple_byte
 15278  0036D8  500F               	movf	??_atoi^0,w,c
 15279  0036DA  0A2B               	xorlw	43	; case 43
 15280  0036DC  B4D8               	btfsc	status,2,c
 15281  0036DE  EF59  F01B         	goto	l9451
 15282  0036E2  0A06               	xorlw	6	; case 45
 15283  0036E4  B4D8               	btfsc	status,2,c
 15284  0036E6  EF55  F01B         	goto	l9449
 15285  0036EA  EF92  F01B         	goto	l9459
 15286  0036EE                     l9455:
 15287  0036EE  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15288  0036F2  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15289  0036F6  0E00               	movlw	0
 15290  0036F8  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 15291  0036FA  0E0A               	movlw	10
 15292  0036FC  6E08               	movwf	___wmul@multiplicand^0,c
 15293  0036FE  EC46  F02B         	call	___wmul	;wreg free
 15294  003702  C00D  FFF6         	movff	atoi@s,tblptrl
 15295  003706  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15296  00370A                     	if	0	;tblptru may be non-zero
 15297  00370A                     	endif
 15298  00370A                     	if	0	;tblptru may be non-zero
 15299  00370A                     	endif
 15300  00370A  0008               	tblrd		*
 15301  00370C  50F5               	movf	tablat,w,c
 15302  00370E  5E06               	subwf	?___wmul^0,f,c
 15303  003710  0E00               	movlw	0
 15304  003712  5A07               	subwfb	(?___wmul+1)^0,f,c
 15305  003714  0E30               	movlw	48
 15306  003716  2406               	addwf	?___wmul^0,w,c
 15307  003718  6E1A               	movwf	atoi@n^0,c
 15308  00371A  0E00               	movlw	0
 15309  00371C  2007               	addwfc	(?___wmul+1)^0,w,c
 15310  00371E  6E1B               	movwf	(atoi@n+1)^0,c
 15311  003720  EF59  F01B         	goto	l9451
 15312  003724                     l9459:
 15313  003724  0ED0               	movlw	208
 15314  003726  6E0F               	movwf	??_atoi^0,c
 15315  003728  0EFF               	movlw	255
 15316  00372A  6E10               	movwf	(??_atoi+1)^0,c
 15317  00372C  C00D  FFF6         	movff	atoi@s,tblptrl
 15318  003730  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15319  003734                     	if	0	;tblptru may be non-zero
 15320  003734                     	endif
 15321  003734                     	if	0	;tblptru may be non-zero
 15322  003734                     	endif
 15323  003734  0008               	tblrd		*
 15324  003736  50F5               	movf	tablat,w,c
 15325  003738  6E11               	movwf	(??_atoi+2)^0,c
 15326  00373A  6A12               	clrf	(??_atoi+3)^0,c
 15327  00373C  500F               	movf	??_atoi^0,w,c
 15328  00373E  2611               	addwf	(??_atoi+2)^0,f,c
 15329  003740  5010               	movf	(??_atoi+1)^0,w,c
 15330  003742  2212               	addwfc	(??_atoi+3)^0,f,c
 15331  003744  5012               	movf	(??_atoi+3)^0,w,c
 15332  003746  E10A               	bnz	u10570
 15333  003748  0E0A               	movlw	10
 15334  00374A  5C11               	subwf	(??_atoi+2)^0,w,c
 15335  00374C  A0D8               	btfss	status,0,c
 15336  00374E  EFAB  F01B         	goto	u10571
 15337  003752  EFAE  F01B         	goto	u10570
 15338  003756                     u10571:
 15339  003756  0E01               	movlw	1
 15340  003758  EFAF  F01B         	goto	u10580
 15341  00375C                     u10570:
 15342  00375C  0E00               	movlw	0
 15343  00375E                     u10580:
 15344  00375E  6E17               	movwf	_atoi$1446^0,c
 15345  003760  6A18               	clrf	(_atoi$1446+1)^0,c
 15346  003762  5017               	movf	_atoi$1446^0,w,c
 15347  003764  1018               	iorwf	(_atoi$1446+1)^0,w,c
 15348  003766  A4D8               	btfss	status,2,c
 15349  003768  EFB8  F01B         	goto	u10591
 15350  00376C  EFBA  F01B         	goto	u10590
 15351  003770                     u10591:
 15352  003770  EF77  F01B         	goto	l9455
 15353  003774                     u10590:
 15354  003774  5013               	movf	atoi@neg^0,w,c
 15355  003776  1014               	iorwf	(atoi@neg+1)^0,w,c
 15356  003778  A4D8               	btfss	status,2,c
 15357  00377A  EFC1  F01B         	goto	u10601
 15358  00377E  EFC3  F01B         	goto	u10600
 15359  003782                     u10601:
 15360  003782  EFD1  F01B         	goto	l1678
 15361  003786                     u10600:
 15362  003786  C01A  F00F         	movff	atoi@n,??_atoi
 15363  00378A  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15364  00378E  1E0F               	comf	??_atoi^0,f,c
 15365  003790  1E10               	comf	(??_atoi+1)^0,f,c
 15366  003792  4A0F               	infsnz	??_atoi^0,f,c
 15367  003794  2A10               	incf	(??_atoi+1)^0,f,c
 15368  003796  C00F  F00D         	movff	??_atoi,?_atoi
 15369  00379A  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15370  00379E  EFD5  F01B         	goto	l1681
 15371  0037A2                     l1678:
 15372  0037A2  C01A  F00D         	movff	atoi@n,?_atoi
 15373  0037A6  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15374  0037AA                     l1681:
 15375  0037AA  0012               	return		;funcret
 15376  0037AC                     __end_of_atoi:
 15377                           	opt callstack 0
 15378                           
 15379 ;; *************** function _isspace *****************
 15380 ;; Defined at:
 15381 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;  c               2    5[COMRAM] int 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;		None
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  2    5[COMRAM] int 
 15388 ;; Registers used:
 15389 ;;		wreg, status,2, status,0
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15395 ;;      Params:         2       0       0       0       0       0       0       0       0
 15396 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15397 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15398 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15399 ;;Total ram usage:        7 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:    2
 15402 ;; This function calls:
 15403 ;;		Nothing
 15404 ;; This function is called by:
 15405 ;;		_atoi
 15406 ;; This function uses a non-reentrant model
 15407 ;;
 15408                           
 15409                           	psect	text62
 15410  005260                     __ptext62:
 15411                           	opt callstack 0
 15412  005260                     _isspace:
 15413                           	opt callstack 23
 15414  005260  0E01               	movlw	1
 15415  005262  6E0C               	movwf	_isspace$1475^0,c
 15416  005264  0E20               	movlw	32
 15417  005266  1806               	xorwf	isspace@c^0,w,c
 15418  005268  1007               	iorwf	(isspace@c+1)^0,w,c
 15419  00526A  B4D8               	btfsc	status,2,c
 15420  00526C  EF3A  F029         	goto	u9811
 15421  005270  EF3C  F029         	goto	u9810
 15422  005274                     u9811:
 15423  005274  EF55  F029         	goto	l9035
 15424  005278                     u9810:
 15425  005278  0EF7               	movlw	247
 15426  00527A  6E08               	movwf	??_isspace^0,c
 15427  00527C  0EFF               	movlw	255
 15428  00527E  6E09               	movwf	(??_isspace+1)^0,c
 15429  005280  C006  F00A         	movff	isspace@c,??_isspace+2
 15430  005284  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15431  005288  5008               	movf	??_isspace^0,w,c
 15432  00528A  260A               	addwf	(??_isspace+2)^0,f,c
 15433  00528C  5009               	movf	(??_isspace+1)^0,w,c
 15434  00528E  220B               	addwfc	(??_isspace+3)^0,f,c
 15435  005290  500B               	movf	(??_isspace+3)^0,w,c
 15436  005292  E109               	bnz	u9820
 15437  005294  0E05               	movlw	5
 15438  005296  5C0A               	subwf	(??_isspace+2)^0,w,c
 15439  005298  A0D8               	btfss	status,0,c
 15440  00529A  EF51  F029         	goto	u9821
 15441  00529E  EF53  F029         	goto	u9820
 15442  0052A2                     u9821:
 15443  0052A2  EF55  F029         	goto	l9035
 15444  0052A6                     u9820:
 15445  0052A6  0E00               	movlw	0
 15446  0052A8  6E0C               	movwf	_isspace$1475^0,c
 15447  0052AA                     l9035:
 15448  0052AA  C00C  F006         	movff	_isspace$1475,?_isspace
 15449  0052AE  6A07               	clrf	(?_isspace+1)^0,c
 15450  0052B0  0012               	return		;funcret
 15451  0052B2                     __end_of_isspace:
 15452                           	opt callstack 0
 15453                           
 15454 ;; *************** function _isdigit *****************
 15455 ;; Defined at:
 15456 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15457 ;; Parameters:    Size  Location     Type
 15458 ;;  c               2    5[COMRAM] int 
 15459 ;; Auto vars:     Size  Location     Type
 15460 ;;		None
 15461 ;; Return value:  Size  Location     Type
 15462 ;;                  2    5[COMRAM] int 
 15463 ;; Registers used:
 15464 ;;		wreg, status,2, status,0
 15465 ;; Tracked objects:
 15466 ;;		On entry : 0/0
 15467 ;;		On exit  : 0/0
 15468 ;;		Unchanged: 0/0
 15469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15470 ;;      Params:         2       0       0       0       0       0       0       0       0
 15471 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15472 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15473 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15474 ;;Total ram usage:        6 bytes
 15475 ;; Hardware stack levels used:    1
 15476 ;; Hardware stack levels required when called:    2
 15477 ;; This function calls:
 15478 ;;		Nothing
 15479 ;; This function is called by:
 15480 ;;		_vfpfcnvrt
 15481 ;;		_atoi
 15482 ;; This function uses a non-reentrant model
 15483 ;;
 15484                           
 15485                           	psect	text63
 15486  0055A4                     __ptext63:
 15487                           	opt callstack 0
 15488  0055A4                     _isdigit:
 15489                           	opt callstack 24
 15490  0055A4  0ED0               	movlw	208
 15491  0055A6  6E08               	movwf	??_isdigit^0,c
 15492  0055A8  0EFF               	movlw	255
 15493  0055AA  6E09               	movwf	(??_isdigit+1)^0,c
 15494  0055AC  C006  F00A         	movff	isdigit@c,??_isdigit+2
 15495  0055B0  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 15496  0055B4  5008               	movf	??_isdigit^0,w,c
 15497  0055B6  260A               	addwf	(??_isdigit+2)^0,f,c
 15498  0055B8  5009               	movf	(??_isdigit+1)^0,w,c
 15499  0055BA  220B               	addwfc	(??_isdigit+3)^0,f,c
 15500  0055BC  500B               	movf	(??_isdigit+3)^0,w,c
 15501  0055BE  E10A               	bnz	u8860
 15502  0055C0  0E0A               	movlw	10
 15503  0055C2  5C0A               	subwf	(??_isdigit+2)^0,w,c
 15504  0055C4  A0D8               	btfss	status,0,c
 15505  0055C6  EFE7  F02A         	goto	u8861
 15506  0055CA  EFEA  F02A         	goto	u8860
 15507  0055CE                     u8861:
 15508  0055CE  0E01               	movlw	1
 15509  0055D0  EFEB  F02A         	goto	u8870
 15510  0055D4                     u8860:
 15511  0055D4  0E00               	movlw	0
 15512  0055D6                     u8870:
 15513  0055D6  6E06               	movwf	?_isdigit^0,c
 15514  0055D8  6A07               	clrf	(?_isdigit+1)^0,c
 15515  0055DA  0012               	return		;funcret
 15516  0055DC                     __end_of_isdigit:
 15517                           	opt callstack 0
 15518                           
 15519 ;; *************** function ___wmul *****************
 15520 ;; Defined at:
 15521 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15522 ;; Parameters:    Size  Location     Type
 15523 ;;  multiplier      2    5[COMRAM] unsigned int 
 15524 ;;  multiplicand    2    7[COMRAM] unsigned int 
 15525 ;; Auto vars:     Size  Location     Type
 15526 ;;  product         2    9[COMRAM] unsigned int 
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  2    5[COMRAM] unsigned int 
 15529 ;; Registers used:
 15530 ;;		wreg, status,2, status,0, prodl, prodh
 15531 ;; Tracked objects:
 15532 ;;		On entry : 0/0
 15533 ;;		On exit  : 0/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15536 ;;      Params:         4       0       0       0       0       0       0       0       0
 15537 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15538 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15539 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15540 ;;Total ram usage:        6 bytes
 15541 ;; Hardware stack levels used:    1
 15542 ;; Hardware stack levels required when called:    2
 15543 ;; This function calls:
 15544 ;;		Nothing
 15545 ;; This function is called by:
 15546 ;;		_atoi
 15547 ;; This function uses a non-reentrant model
 15548 ;;
 15549                           
 15550                           	psect	text64
 15551  00568C                     __ptext64:
 15552                           	opt callstack 0
 15553  00568C                     ___wmul:
 15554                           	opt callstack 23
 15555  00568C  5006               	movf	___wmul@multiplier^0,w,c
 15556  00568E  0208               	mulwf	___wmul@multiplicand^0,c
 15557  005690  CFF3 F00A          	movff	prodl,___wmul@product
 15558  005694  CFF4 F00B          	movff	prodh,___wmul@product+1
 15559  005698  5006               	movf	___wmul@multiplier^0,w,c
 15560  00569A  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 15561  00569C  50F3               	movf	243,w,c
 15562  00569E  260B               	addwf	(___wmul@product+1)^0,f,c
 15563  0056A0  5007               	movf	(___wmul@multiplier+1)^0,w,c
 15564  0056A2  0208               	mulwf	___wmul@multiplicand^0,c
 15565  0056A4  50F3               	movf	243,w,c
 15566  0056A6  260B               	addwf	(___wmul@product+1)^0,f,c
 15567  0056A8  C00A  F006         	movff	___wmul@product,?___wmul
 15568  0056AC  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 15569  0056B0  0012               	return		;funcret
 15570  0056B2                     __end_of___wmul:
 15571                           	opt callstack 0
 15572                           
 15573 ;; *************** function _seLlegoAlDestino *****************
 15574 ;; Defined at:
 15575 ;;		line 837 in file "main.c"
 15576 ;; Parameters:    Size  Location     Type
 15577 ;;		None
 15578 ;; Auto vars:     Size  Location     Type
 15579 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 15580 ;; Return value:  Size  Location     Type
 15581 ;;                  1    wreg      unsigned char 
 15582 ;; Registers used:
 15583 ;;		wreg, status,2, status,0, cstack
 15584 ;; Tracked objects:
 15585 ;;		On entry : 0/0
 15586 ;;		On exit  : 0/0
 15587 ;;		Unchanged: 0/0
 15588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15589 ;;      Params:         0       0       0       0       0       0       0       0       0
 15590 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15591 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15592 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15593 ;;Total ram usage:        1 bytes
 15594 ;; Hardware stack levels used:    1
 15595 ;; Hardware stack levels required when called:    3
 15596 ;; This function calls:
 15597 ;;		_dameLecturaAdc
 15598 ;; This function is called by:
 15599 ;;		_decidirDireccion
 15600 ;; This function uses a non-reentrant model
 15601 ;;
 15602                           
 15603                           	psect	text65
 15604  005612                     __ptext65:
 15605                           	opt callstack 0
 15606  005612                     _seLlegoAlDestino:
 15607                           	opt callstack 25
 15608  005612                     
 15609                           ;main.c: 839:     T_BOOL llegoDestino = 0;
 15610  005612  0E00               	movlw	0
 15611  005614  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15612  005616                     
 15613                           ;main.c: 842:     if (dameLecturaAdc(0) < 20)
 15614  005616  0E00               	movlw	0
 15615  005618  ECF2  F029         	call	_dameLecturaAdc
 15616  00561C  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 15617  00561E  EF1C  F02B         	goto	u11270
 15618  005622  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 15619  005624  E107               	bnz	u11271
 15620  005626  0E14               	movlw	20
 15621  005628  5C06               	subwf	?_dameLecturaAdc^0,w,c
 15622  00562A  B0D8               	btfsc	status,0,c
 15623  00562C  EF1A  F02B         	goto	u11271
 15624  005630  EF1C  F02B         	goto	u11270
 15625  005634                     u11271:
 15626  005634  EF1E  F02B         	goto	l542
 15627  005638                     u11270:
 15628  005638                     
 15629                           ;main.c: 843:         llegoDestino = 1;
 15630  005638  0E01               	movlw	1
 15631  00563A  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15632  00563C                     l542:
 15633                           
 15634                           ;main.c: 845:     return llegoDestino;
 15635  00563C  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 15636  00563E  0012               	return		;funcret
 15637  005640                     __end_of_seLlegoAlDestino:
 15638                           	opt callstack 0
 15639                           
 15640 ;; *************** function _dameLecturaAdc *****************
 15641 ;; Defined at:
 15642 ;;		line 12 in file "./adc.h"
 15643 ;; Parameters:    Size  Location     Type
 15644 ;;  canalLeer       1    wreg     unsigned char 
 15645 ;; Auto vars:     Size  Location     Type
 15646 ;;  canalLeer       1    9[COMRAM] unsigned char 
 15647 ;; Return value:  Size  Location     Type
 15648 ;;                  2    5[COMRAM] short 
 15649 ;; Registers used:
 15650 ;;		wreg, status,2, status,0
 15651 ;; Tracked objects:
 15652 ;;		On entry : 0/0
 15653 ;;		On exit  : 0/0
 15654 ;;		Unchanged: 0/0
 15655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15656 ;;      Params:         2       0       0       0       0       0       0       0       0
 15657 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15658 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15659 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15660 ;;Total ram usage:        5 bytes
 15661 ;; Hardware stack levels used:    1
 15662 ;; Hardware stack levels required when called:    2
 15663 ;; This function calls:
 15664 ;;		Nothing
 15665 ;; This function is called by:
 15666 ;;		_seLlegoAlDestino
 15667 ;;		_probarSensores
 15668 ;; This function uses a non-reentrant model
 15669 ;;
 15670                           
 15671                           	psect	text66
 15672  0053E4                     __ptext66:
 15673                           	opt callstack 0
 15674  0053E4                     _dameLecturaAdc:
 15675                           	opt callstack 25
 15676                           
 15677                           ;incstack = 0
 15678                           ;dameLecturaAdc@canalLeer stored from wreg
 15679  0053E4  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 15680  0053E6                     
 15681                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 15682  0053E6  0E06               	movlw	6
 15683  0053E8                     u12147:
 15684  0053E8  2EE8               	decfsz	wreg,f,c
 15685  0053EA  D7FE               	bra	u12147
 15686  0053EC  D000               	nop2	
 15687  0053EE                     
 15688                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 15689  0053EE  80C2               	bsf	194,0,c	;volatile
 15690  0053F0                     
 15691                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 15692  0053F0  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 15693  0053F4  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15694  0053F6  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15695  0053F8  50C2               	movf	194,w,c	;volatile
 15696  0053FA  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15697  0053FC  0BC3               	andlw	-61
 15698  0053FE  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15699  005400  6EC2               	movwf	194,c	;volatile
 15700  005402                     
 15701                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 15702  005402  82C2               	bsf	194,1,c	;volatile
 15703  005404                     
 15704                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 15705  005404  82C2               	bsf	194,1,c	;volatile
 15706  005406                     l239:
 15707  005406  B2C2               	btfsc	194,1,c	;volatile
 15708  005408  EF08  F02A         	goto	u10871
 15709  00540C  EF0A  F02A         	goto	u10870
 15710  005410                     u10871:
 15711  005410  EF03  F02A         	goto	l239
 15712  005414                     u10870:
 15713  005414                     
 15714                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 15715  005414  90C2               	bcf	194,0,c	;volatile
 15716  005416                     
 15717                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 15718  005416  50C4               	movf	196,w,c	;volatile
 15719  005418  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 15720  00541A  6A08               	clrf	??_dameLecturaAdc^0,c
 15721  00541C  50C3               	movf	195,w,c	;volatile
 15722  00541E  2408               	addwf	??_dameLecturaAdc^0,w,c
 15723  005420  6E06               	movwf	?_dameLecturaAdc^0,c
 15724  005422  0E00               	movlw	0
 15725  005424  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 15726  005426  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 15727  005428  0012               	return		;funcret
 15728  00542A                     __end_of_dameLecturaAdc:
 15729                           	opt callstack 0
 15730                           
 15731 ;; *************** function _mostrarDireccionElegida *****************
 15732 ;; Defined at:
 15733 ;;		line 849 in file "main.c"
 15734 ;; Parameters:    Size  Location     Type
 15735 ;;  direccionEle    1    wreg     unsigned char 
 15736 ;; Auto vars:     Size  Location     Type
 15737 ;;  direccionEle    1   10[COMRAM] unsigned char 
 15738 ;; Return value:  Size  Location     Type
 15739 ;;                  1    wreg      void 
 15740 ;; Registers used:
 15741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15742 ;; Tracked objects:
 15743 ;;		On entry : 0/0
 15744 ;;		On exit  : 0/0
 15745 ;;		Unchanged: 0/0
 15746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15747 ;;      Params:         0       0       0       0       0       0       0       0       0
 15748 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15749 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15750 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15751 ;;Total ram usage:        3 bytes
 15752 ;; Hardware stack levels used:    1
 15753 ;; Hardware stack levels required when called:    4
 15754 ;; This function calls:
 15755 ;;		_UART_printf
 15756 ;; This function is called by:
 15757 ;;		_decidirDireccion
 15758 ;; This function uses a non-reentrant model
 15759 ;;
 15760                           
 15761                           	psect	text67
 15762  004C70                     __ptext67:
 15763                           	opt callstack 0
 15764  004C70                     _mostrarDireccionElegida:
 15765                           	opt callstack 24
 15766                           
 15767                           ;incstack = 0
 15768                           ;mostrarDireccionElegida@direccionElegida stored from wreg
 15769  004C70  6E0B               	movwf	mostrarDireccionElegida@direccionElegida^0,c
 15770  004C72                     
 15771                           ;main.c: 851:     switch (direccionElegida) {
 15772  004C72  EF5B  F026         	goto	l9977
 15773  004C76                     l9967:
 15774                           
 15775                           ;main.c: 853:             UART_printf("\rDireccion Elegida: ENFRENTE\n\n\r");
 15776  004C76  0EEB               	movlw	low STR_16
 15777  004C78  6E07               	movwf	UART_printf@cadena^0,c
 15778  004C7A  0E7E               	movlw	high STR_16
 15779  004C7C  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15780  004C7E  EC27  F028         	call	_UART_printf	;wreg free
 15781                           
 15782                           ;main.c: 854:             break;
 15783  004C82  EF78  F026         	goto	l553
 15784  004C86                     l9969:
 15785                           
 15786                           ;main.c: 857:             UART_printf("\rDireccion Elegida: IZQUIERDA\n\n\r");
 15787  004C86  0EAA               	movlw	low STR_17
 15788  004C88  6E07               	movwf	UART_printf@cadena^0,c
 15789  004C8A  0E7E               	movlw	high STR_17
 15790  004C8C  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15791  004C8E  EC27  F028         	call	_UART_printf	;wreg free
 15792                           
 15793                           ;main.c: 858:             break;
 15794  004C92  EF78  F026         	goto	l553
 15795  004C96                     l9971:
 15796                           
 15797                           ;main.c: 861:             UART_printf("\rDireccion Elegida: DERECHA\n\n\r");
 15798  004C96  0E2B               	movlw	low STR_18
 15799  004C98  6E07               	movwf	UART_printf@cadena^0,c
 15800  004C9A  0E7F               	movlw	high STR_18
 15801  004C9C  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15802  004C9E  EC27  F028         	call	_UART_printf	;wreg free
 15803                           
 15804                           ;main.c: 862:             break;
 15805  004CA2  EF78  F026         	goto	l553
 15806  004CA6                     l9973:
 15807                           
 15808                           ;main.c: 865:             UART_printf("\rDireccion Elegida: CALLEJON\n\n\r");
 15809  004CA6  0E0B               	movlw	low STR_19
 15810  004CA8  6E07               	movwf	UART_printf@cadena^0,c
 15811  004CAA  0E7F               	movlw	high STR_19
 15812  004CAC  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15813  004CAE  EC27  F028         	call	_UART_printf	;wreg free
 15814                           
 15815                           ;main.c: 866:             break;
 15816  004CB2  EF78  F026         	goto	l553
 15817  004CB6                     l9977:
 15818  004CB6  500B               	movf	mostrarDireccionElegida@direccionElegida^0,w,c
 15819  004CB8  6E09               	movwf	??_mostrarDireccionElegida^0,c
 15820  004CBA  6A0A               	clrf	(??_mostrarDireccionElegida+1)^0,c
 15821                           
 15822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15823                           ; Switch size 1, requested type "simple"
 15824                           ; Number of cases is 1, Range of values is 0 to 0
 15825                           ; switch strategies available:
 15826                           ; Name         Instructions Cycles
 15827                           ; simple_byte            4     3 (average)
 15828                           ;	Chosen strategy is simple_byte
 15829  004CBC  500A               	movf	(??_mostrarDireccionElegida+1)^0,w,c
 15830  004CBE  0A00               	xorlw	0	; case 0
 15831  004CC0  B4D8               	btfsc	status,2,c
 15832  004CC2  EF65  F026         	goto	l11189
 15833  004CC6  EF78  F026         	goto	l553
 15834  004CCA                     l11189:
 15835                           
 15836                           ; Switch size 1, requested type "simple"
 15837                           ; Number of cases is 4, Range of values is 0 to 3
 15838                           ; switch strategies available:
 15839                           ; Name         Instructions Cycles
 15840                           ; simple_byte           13     7 (average)
 15841                           ;	Chosen strategy is simple_byte
 15842  004CCA  5009               	movf	??_mostrarDireccionElegida^0,w,c
 15843  004CCC  0A00               	xorlw	0	; case 0
 15844  004CCE  B4D8               	btfsc	status,2,c
 15845  004CD0  EF53  F026         	goto	l9973
 15846  004CD4  0A01               	xorlw	1	; case 1
 15847  004CD6  B4D8               	btfsc	status,2,c
 15848  004CD8  EF3B  F026         	goto	l9967
 15849  004CDC  0A03               	xorlw	3	; case 2
 15850  004CDE  B4D8               	btfsc	status,2,c
 15851  004CE0  EF43  F026         	goto	l9969
 15852  004CE4  0A01               	xorlw	1	; case 3
 15853  004CE6  B4D8               	btfsc	status,2,c
 15854  004CE8  EF4B  F026         	goto	l9971
 15855  004CEC  EF78  F026         	goto	l553
 15856  004CF0                     l553:
 15857  004CF0  0012               	return		;funcret
 15858  004CF2                     __end_of_mostrarDireccionElegida:
 15859                           	opt callstack 0
 15860                           
 15861 ;; *************** function _UART_printf *****************
 15862 ;; Defined at:
 15863 ;;		line 47 in file "./UART.h"
 15864 ;; Parameters:    Size  Location     Type
 15865 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 15866 ;;		 -> STR_19(32), STR_18(31), STR_17(33), STR_16(32), 
 15867 ;;		 -> STR_15(23), STR_14(34), STR_13(63), STR_12(56), 
 15868 ;;		 -> STR_10(6), STR_9(9), STR_8(11), STR_7(10), 
 15869 ;;		 -> buffer(50), STR_2(25), STR_1(24), 
 15870 ;; Auto vars:     Size  Location     Type
 15871 ;;		None
 15872 ;; Return value:  Size  Location     Type
 15873 ;;                  1    wreg      void 
 15874 ;; Registers used:
 15875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15876 ;; Tracked objects:
 15877 ;;		On entry : 0/0
 15878 ;;		On exit  : 0/0
 15879 ;;		Unchanged: 0/0
 15880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15881 ;;      Params:         2       0       0       0       0       0       0       0       0
 15882 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15883 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15884 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15885 ;;Total ram usage:        2 bytes
 15886 ;; Hardware stack levels used:    1
 15887 ;; Hardware stack levels required when called:    3
 15888 ;; This function calls:
 15889 ;;		_UART_write
 15890 ;; This function is called by:
 15891 ;;		_visualizarPasosRealizados
 15892 ;;		_comportamientoBasico
 15893 ;;		_mostrarDireccionElegida
 15894 ;;		_decidirDireccion
 15895 ;;		_probarSensores
 15896 ;;		_probarUltrasonico
 15897 ;; This function uses a non-reentrant model
 15898 ;;
 15899                           
 15900                           	psect	text68
 15901  00504E                     __ptext68:
 15902                           	opt callstack 0
 15903  00504E                     _UART_printf:
 15904                           	opt callstack 26
 15905  00504E                     
 15906                           ;./UART.h: 48:     while (*cadena) {
 15907  00504E  EF3D  F028         	goto	l9627
 15908  005052                     l9623:
 15909                           
 15910                           ;./UART.h: 49:         UART_write(*cadena++);
 15911  005052  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15912  005056  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15913  00505A  6AF8               	clrf	tblptru,c
 15914  00505C  0E07               	movlw	(high __ramtop+-1)
 15915  00505E  64F7               	cpfsgt	tblptrh,c
 15916  005060  D003               	bra	u10847
 15917  005062  0008               	tblrd		*
 15918  005064  50F5               	movf	tablat,w,c
 15919  005066  D005               	bra	u10840
 15920  005068                     u10847:
 15921  005068  CFF6 FFE9          	movff	tblptrl,fsr0l
 15922  00506C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15923  005070  50EF               	movf	indf0,w,c
 15924  005072                     u10840:
 15925  005072  ECC2  F02B         	call	_UART_write
 15926  005076  4A07               	infsnz	UART_printf@cadena^0,f,c
 15927  005078  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 15928  00507A                     l9627:
 15929                           
 15930                           ;./UART.h: 48:     while (*cadena) {
 15931  00507A  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15932  00507E  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15933  005082  6AF8               	clrf	tblptru,c
 15934  005084  0E07               	movlw	(high __ramtop+-1)
 15935  005086  64F7               	cpfsgt	tblptrh,c
 15936  005088  D003               	bra	u10857
 15937  00508A  0008               	tblrd		*
 15938  00508C  50F5               	movf	tablat,w,c
 15939  00508E  D005               	bra	u10850
 15940  005090                     u10857:
 15941  005090  CFF6 FFE9          	movff	tblptrl,fsr0l
 15942  005094  CFF7 FFEA          	movff	tblptrh,fsr0h
 15943  005098  50EF               	movf	indf0,w,c
 15944  00509A                     u10850:
 15945  00509A  0900               	iorlw	0
 15946  00509C  A4D8               	btfss	status,2,c
 15947  00509E  EF53  F028         	goto	u10861
 15948  0050A2  EF55  F028         	goto	u10860
 15949  0050A6                     u10861:
 15950  0050A6  EF29  F028         	goto	l9623
 15951  0050AA                     u10860:
 15952  0050AA  0012               	return		;funcret
 15953  0050AC                     __end_of_UART_printf:
 15954                           	opt callstack 0
 15955                           
 15956 ;; *************** function _UART_write *****************
 15957 ;; Defined at:
 15958 ;;		line 42 in file "./UART.h"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;  dato            1    wreg     unsigned char 
 15961 ;; Auto vars:     Size  Location     Type
 15962 ;;  dato            1    5[COMRAM] unsigned char 
 15963 ;; Return value:  Size  Location     Type
 15964 ;;                  1    wreg      void 
 15965 ;; Registers used:
 15966 ;;		wreg
 15967 ;; Tracked objects:
 15968 ;;		On entry : 0/0
 15969 ;;		On exit  : 0/0
 15970 ;;		Unchanged: 0/0
 15971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15972 ;;      Params:         0       0       0       0       0       0       0       0       0
 15973 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15974 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15975 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15976 ;;Total ram usage:        1 bytes
 15977 ;; Hardware stack levels used:    1
 15978 ;; Hardware stack levels required when called:    2
 15979 ;; This function calls:
 15980 ;;		Nothing
 15981 ;; This function is called by:
 15982 ;;		_UART_printf
 15983 ;; This function uses a non-reentrant model
 15984 ;;
 15985                           
 15986                           	psect	text69
 15987  005784                     __ptext69:
 15988                           	opt callstack 0
 15989  005784                     _UART_write:
 15990                           	opt callstack 26
 15991                           
 15992                           ;incstack = 0
 15993                           ;UART_write@dato stored from wreg
 15994  005784  6E06               	movwf	UART_write@dato^0,c
 15995  005786                     
 15996                           ;./UART.h: 43:     TXREG = dato;
 15997  005786  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 15998  00578A                     l224:
 15999  00578A  A2AC               	btfss	172,1,c	;volatile
 16000  00578C  EFCA  F02B         	goto	u10661
 16001  005790  EFCC  F02B         	goto	u10660
 16002  005794                     u10661:
 16003  005794  EFC5  F02B         	goto	l224
 16004  005798                     u10660:
 16005  005798  0012               	return		;funcret
 16006  00579A                     __end_of_UART_write:
 16007                           	opt callstack 0
 16008                           
 16009 ;; *************** function _hayCruce *****************
 16010 ;; Defined at:
 16011 ;;		line 701 in file "main.c"
 16012 ;; Parameters:    Size  Location     Type
 16013 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 16014 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 16015 ;;  investigando    1   65[COMRAM] unsigned char 
 16016 ;; Auto vars:     Size  Location     Type
 16017 ;;  contCaminos     1   66[COMRAM] unsigned char 
 16018 ;; Return value:  Size  Location     Type
 16019 ;;                  1    wreg      unsigned char 
 16020 ;; Registers used:
 16021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16022 ;; Tracked objects:
 16023 ;;		On entry : 0/0
 16024 ;;		On exit  : 0/0
 16025 ;;		Unchanged: 0/0
 16026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16027 ;;      Params:         3       0       0       0       0       0       0       0       0
 16028 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16030 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16031 ;;Total ram usage:        4 bytes
 16032 ;; Hardware stack levels used:    1
 16033 ;; Hardware stack levels required when called:    3
 16034 ;; This function calls:
 16035 ;;		___flge
 16036 ;; This function is called by:
 16037 ;;		_decidirDireccion
 16038 ;; This function uses a non-reentrant model
 16039 ;;
 16040                           
 16041                           	psect	text70
 16042  0037AC                     __ptext70:
 16043                           	opt callstack 0
 16044  0037AC                     _hayCruce:
 16045                           	opt callstack 25
 16046  0037AC                     
 16047                           ;main.c: 703:     T_UBYTE contCaminos = 0;
 16048  0037AC  0E00               	movlw	0
 16049  0037AE  6E43               	movwf	hayCruce@contCaminos^0,c
 16050                           
 16051                           ;main.c: 705:     paredEnfrente = 0;
 16052  0037B0  0E00               	movlw	0
 16053  0037B2  0101               	movlb	1	; () banked
 16054  0037B4  6F3C               	movwf	_paredEnfrente& (0+255),b
 16055                           
 16056                           ;main.c: 706:     paredDerecha = 0;
 16057  0037B6  0E00               	movlw	0
 16058  0037B8  6F3B               	movwf	_paredDerecha& (0+255),b
 16059                           
 16060                           ;main.c: 707:     paredIzquierda = 0;
 16061  0037BA  0E00               	movlw	0
 16062  0037BC  6F3A               	movwf	_paredIzquierda& (0+255),b
 16063                           
 16064                           ;main.c: 709:     if (!investigandoCruce) {
 16065  0037BE  5042               	movf	hayCruce@investigandoCruce^0,w,c
 16066  0037C0  A4D8               	btfss	status,2,c
 16067  0037C2  EFE5  F01B         	goto	u11181
 16068  0037C6  EFE7  F01B         	goto	u11180
 16069  0037CA                     u11181:
 16070  0037CA  EF91  F01C         	goto	l9945
 16071  0037CE                     u11180:
 16072  0037CE                     
 16073                           ; BSR set to: 1
 16074                           ;main.c: 711:         if (sensorEnfrente > 35) {
 16075  0037CE  0E00               	movlw	0
 16076  0037D0  6E34               	movwf	___flge@ff1^0,c
 16077  0037D2  0E00               	movlw	0
 16078  0037D4  6E35               	movwf	(___flge@ff1+1)^0,c
 16079  0037D6  0E0C               	movlw	12
 16080  0037D8  6E36               	movwf	(___flge@ff1+2)^0,c
 16081  0037DA  0E42               	movlw	66
 16082  0037DC  6E37               	movwf	(___flge@ff1+3)^0,c
 16083  0037DE  C124  F038         	movff	_sensorEnfrente,___flge@ff2
 16084  0037E2  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 16085  0037E6  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 16086  0037EA  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 16087  0037EE  EC10  F021         	call	___flge	;wreg free
 16088  0037F2  B0D8               	btfsc	status,0,c
 16089  0037F4  EFFE  F01B         	goto	u11191
 16090  0037F8  EF00  F01C         	goto	u11190
 16091  0037FC                     u11191:
 16092  0037FC  EF04  F01C         	goto	l9875
 16093  003800                     u11190:
 16094  003800                     
 16095                           ;main.c: 712:             paredEnfrente = 1;
 16096  003800  0E01               	movlw	1
 16097  003802  0101               	movlb	1	; () banked
 16098  003804  6F3C               	movwf	_paredEnfrente& (0+255),b
 16099  003806                     
 16100                           ; BSR set to: 1
 16101                           ;main.c: 713:             contCaminos++;
 16102  003806  2A43               	incf	hayCruce@contCaminos^0,f,c
 16103  003808                     l9875:
 16104                           
 16105                           ;main.c: 716:         if (sensorIzquierda > 30) {
 16106  003808  0E00               	movlw	0
 16107  00380A  6E34               	movwf	___flge@ff1^0,c
 16108  00380C  0E00               	movlw	0
 16109  00380E  6E35               	movwf	(___flge@ff1+1)^0,c
 16110  003810  0EF0               	movlw	240
 16111  003812  6E36               	movwf	(___flge@ff1+2)^0,c
 16112  003814  0E41               	movlw	65
 16113  003816  6E37               	movwf	(___flge@ff1+3)^0,c
 16114  003818  C128  F038         	movff	_sensorIzquierda,___flge@ff2
 16115  00381C  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 16116  003820  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 16117  003824  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 16118  003828  EC10  F021         	call	___flge	;wreg free
 16119  00382C  B0D8               	btfsc	status,0,c
 16120  00382E  EF1B  F01C         	goto	u11201
 16121  003832  EF1D  F01C         	goto	u11200
 16122  003836                     u11201:
 16123  003836  EF21  F01C         	goto	l9881
 16124  00383A                     u11200:
 16125  00383A                     
 16126                           ;main.c: 717:             paredIzquierda = 1;
 16127  00383A  0E01               	movlw	1
 16128  00383C  0101               	movlb	1	; () banked
 16129  00383E  6F3A               	movwf	_paredIzquierda& (0+255),b
 16130  003840                     
 16131                           ; BSR set to: 1
 16132                           ;main.c: 718:             contCaminos++;
 16133  003840  2A43               	incf	hayCruce@contCaminos^0,f,c
 16134  003842                     l9881:
 16135                           
 16136                           ;main.c: 721:         if (sensorDerecha > 30) {
 16137  003842  0E00               	movlw	0
 16138  003844  6E34               	movwf	___flge@ff1^0,c
 16139  003846  0E00               	movlw	0
 16140  003848  6E35               	movwf	(___flge@ff1+1)^0,c
 16141  00384A  0EF0               	movlw	240
 16142  00384C  6E36               	movwf	(___flge@ff1+2)^0,c
 16143  00384E  0E41               	movlw	65
 16144  003850  6E37               	movwf	(___flge@ff1+3)^0,c
 16145  003852  C12C  F038         	movff	_sensorDerecha,___flge@ff2
 16146  003856  C12D  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 16147  00385A  C12E  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 16148  00385E  C12F  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 16149  003862  EC10  F021         	call	___flge	;wreg free
 16150  003866  B0D8               	btfsc	status,0,c
 16151  003868  EF38  F01C         	goto	u11211
 16152  00386C  EF3A  F01C         	goto	u11210
 16153  003870                     u11211:
 16154  003870  EF3E  F01C         	goto	l9887
 16155  003874                     u11210:
 16156  003874                     
 16157                           ;main.c: 722:             paredDerecha = 1;
 16158  003874  0E01               	movlw	1
 16159  003876  0101               	movlb	1	; () banked
 16160  003878  6F3B               	movwf	_paredDerecha& (0+255),b
 16161  00387A                     
 16162                           ; BSR set to: 1
 16163                           ;main.c: 723:             contCaminos++;
 16164  00387A  2A43               	incf	hayCruce@contCaminos^0,f,c
 16165  00387C                     l9887:
 16166                           
 16167                           ;main.c: 727:         if (contCaminos > 1) {
 16168  00387C  0E01               	movlw	1
 16169  00387E  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16170  003880  EF44  F01C         	goto	u11221
 16171  003884  EF46  F01C         	goto	u11220
 16172  003888                     u11221:
 16173  003888  EF91  F01C         	goto	l9945
 16174  00388C                     u11220:
 16175  00388C                     
 16176                           ;main.c: 738:                 if (paredDerecha)
 16177  00388C  0101               	movlb	1	; () banked
 16178  00388E  513B               	movf	_paredDerecha& (0+255),w,b
 16179  003890  B4D8               	btfsc	status,2,c
 16180  003892  EF4D  F01C         	goto	u11231
 16181  003896  EF4F  F01C         	goto	u11230
 16182  00389A                     u11231:
 16183  00389A  EF59  F01C         	goto	l9901
 16184  00389E                     u11230:
 16185  00389E                     
 16186                           ; BSR set to: 1
 16187  00389E  EE20 F002          	lfsr	2,2
 16188  0038A2  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16189  0038A4  26D9               	addwf	fsr2l,f,c
 16190  0038A6  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16191  0038A8  22DA               	addwfc	fsr2h,f,c
 16192  0038AA  0E31               	movlw	49
 16193  0038AC  6EDF               	movwf	indf2,c
 16194  0038AE  EF61  F01C         	goto	l9921
 16195  0038B2                     l9901:
 16196                           
 16197                           ; BSR set to: 1
 16198  0038B2  EE20 F002          	lfsr	2,2
 16199  0038B6  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16200  0038B8  26D9               	addwf	fsr2l,f,c
 16201  0038BA  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16202  0038BC  22DA               	addwfc	fsr2h,f,c
 16203  0038BE  0E30               	movlw	48
 16204  0038C0  6EDF               	movwf	indf2,c
 16205  0038C2                     l9921:
 16206                           
 16207                           ; BSR set to: 1
 16208                           ;main.c: 768:                 if (paredIzquierda)
 16209  0038C2  513A               	movf	_paredIzquierda& (0+255),w,b
 16210  0038C4  B4D8               	btfsc	status,2,c
 16211  0038C6  EF67  F01C         	goto	u11241
 16212  0038CA  EF69  F01C         	goto	u11240
 16213  0038CE                     u11241:
 16214  0038CE  EF73  F01C         	goto	l9925
 16215  0038D2                     u11240:
 16216  0038D2                     
 16217                           ; BSR set to: 1
 16218  0038D2  EE20 F001          	lfsr	2,1
 16219  0038D6  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16220  0038D8  26D9               	addwf	fsr2l,f,c
 16221  0038DA  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16222  0038DC  22DA               	addwfc	fsr2h,f,c
 16223  0038DE  0E31               	movlw	49
 16224  0038E0  6EDF               	movwf	indf2,c
 16225  0038E2  EF7B  F01C         	goto	l9927
 16226  0038E6                     l9925:
 16227                           
 16228                           ; BSR set to: 1
 16229  0038E6  EE20 F001          	lfsr	2,1
 16230  0038EA  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16231  0038EC  26D9               	addwf	fsr2l,f,c
 16232  0038EE  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16233  0038F0  22DA               	addwfc	fsr2h,f,c
 16234  0038F2  0E30               	movlw	48
 16235  0038F4  6EDF               	movwf	indf2,c
 16236  0038F6                     l9927:
 16237                           
 16238                           ; BSR set to: 1
 16239                           ;main.c: 777:                 if (paredEnfrente)
 16240  0038F6  513C               	movf	_paredEnfrente& (0+255),w,b
 16241  0038F8  B4D8               	btfsc	status,2,c
 16242  0038FA  EF81  F01C         	goto	u11251
 16243  0038FE  EF83  F01C         	goto	u11250
 16244  003902                     u11251:
 16245  003902  EF8B  F01C         	goto	l9931
 16246  003906                     u11250:
 16247  003906                     
 16248                           ; BSR set to: 1
 16249                           ;main.c: 778:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '1';
 16250  003906  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16251  00390A  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16252  00390E  0E31               	movlw	49
 16253  003910  6EDF               	movwf	indf2,c
 16254  003912  EF91  F01C         	goto	l9945
 16255  003916                     l9931:
 16256                           
 16257                           ; BSR set to: 1
 16258                           ;main.c: 780:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '0';
 16259  003916  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16260  00391A  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16261  00391E  0E30               	movlw	48
 16262  003920  6EDF               	movwf	indf2,c
 16263  003922                     l9945:
 16264                           
 16265                           ;main.c: 805:     if (contCaminos > 1)
 16266  003922  0E01               	movlw	1
 16267  003924  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16268  003926  EF97  F01C         	goto	u11261
 16269  00392A  EF99  F01C         	goto	u11260
 16270  00392E                     u11261:
 16271  00392E  EF9C  F01C         	goto	l9953
 16272  003932                     u11260:
 16273  003932                     
 16274                           ;main.c: 806:         return 1;
 16275  003932  0E01               	movlw	1
 16276  003934  EF9D  F01C         	goto	l523
 16277  003938                     l9953:
 16278                           
 16279                           ;main.c: 809:         return 0;
 16280  003938  0E00               	movlw	0
 16281  00393A                     l523:
 16282  00393A  0012               	return		;funcret
 16283  00393C                     __end_of_hayCruce:
 16284                           	opt callstack 0
 16285                           
 16286 ;; *************** function ___flge *****************
 16287 ;; Defined at:
 16288 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16289 ;; Parameters:    Size  Location     Type
 16290 ;;  ff1             4   51[COMRAM] unsigned char 
 16291 ;;  ff2             4   55[COMRAM] unsigned char 
 16292 ;; Auto vars:     Size  Location     Type
 16293 ;;		None
 16294 ;; Return value:  Size  Location     Type
 16295 ;;		None               void
 16296 ;; Registers used:
 16297 ;;		wreg, status,2, status,0
 16298 ;; Tracked objects:
 16299 ;;		On entry : 0/0
 16300 ;;		On exit  : 0/0
 16301 ;;		Unchanged: 0/0
 16302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16303 ;;      Params:         8       0       0       0       0       0       0       0       0
 16304 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16305 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16306 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16307 ;;Total ram usage:       12 bytes
 16308 ;; Hardware stack levels used:    1
 16309 ;; Hardware stack levels required when called:    2
 16310 ;; This function calls:
 16311 ;;		Nothing
 16312 ;; This function is called by:
 16313 ;;		_forzarEspejeo
 16314 ;;		_hayCruce
 16315 ;;		_decidirDireccion
 16316 ;;		_efgtoa
 16317 ;;		_roundf
 16318 ;;		_probarPID
 16319 ;;		_probarCruceT
 16320 ;; This function uses a non-reentrant model
 16321 ;;
 16322                           
 16323                           	psect	text71
 16324  004220                     __ptext71:
 16325                           	opt callstack 0
 16326  004220                     ___flge:
 16327                           	opt callstack 23
 16328  004220  0E00               	movlw	0
 16329  004222  1434               	andwf	___flge@ff1^0,w,c
 16330  004224  6E3C               	movwf	??___flge^0,c
 16331  004226  0E00               	movlw	0
 16332  004228  1435               	andwf	(___flge@ff1+1)^0,w,c
 16333  00422A  6E3D               	movwf	(??___flge+1)^0,c
 16334  00422C  0E80               	movlw	128
 16335  00422E  1436               	andwf	(___flge@ff1+2)^0,w,c
 16336  004230  6E3E               	movwf	(??___flge+2)^0,c
 16337  004232  0E7F               	movlw	127
 16338  004234  1437               	andwf	(___flge@ff1+3)^0,w,c
 16339  004236  6E3F               	movwf	(??___flge+3)^0,c
 16340  004238  503C               	movf	??___flge^0,w,c
 16341  00423A  103D               	iorwf	(??___flge+1)^0,w,c
 16342  00423C  103E               	iorwf	(??___flge+2)^0,w,c
 16343  00423E  103F               	iorwf	(??___flge+3)^0,w,c
 16344  004240  A4D8               	btfss	status,2,c
 16345  004242  EF25  F021         	goto	u9581
 16346  004246  EF27  F021         	goto	u9580
 16347  00424A                     u9581:
 16348  00424A  EF2F  F021         	goto	l8911
 16349  00424E                     u9580:
 16350  00424E  0E00               	movlw	0
 16351  004250  6E34               	movwf	___flge@ff1^0,c
 16352  004252  0E00               	movlw	0
 16353  004254  6E35               	movwf	(___flge@ff1+1)^0,c
 16354  004256  0E00               	movlw	0
 16355  004258  6E36               	movwf	(___flge@ff1+2)^0,c
 16356  00425A  0E00               	movlw	0
 16357  00425C  6E37               	movwf	(___flge@ff1+3)^0,c
 16358  00425E                     l8911:
 16359  00425E  0E00               	movlw	0
 16360  004260  1438               	andwf	___flge@ff2^0,w,c
 16361  004262  6E3C               	movwf	??___flge^0,c
 16362  004264  0E00               	movlw	0
 16363  004266  1439               	andwf	(___flge@ff2+1)^0,w,c
 16364  004268  6E3D               	movwf	(??___flge+1)^0,c
 16365  00426A  0E80               	movlw	128
 16366  00426C  143A               	andwf	(___flge@ff2+2)^0,w,c
 16367  00426E  6E3E               	movwf	(??___flge+2)^0,c
 16368  004270  0E7F               	movlw	127
 16369  004272  143B               	andwf	(___flge@ff2+3)^0,w,c
 16370  004274  6E3F               	movwf	(??___flge+3)^0,c
 16371  004276  503C               	movf	??___flge^0,w,c
 16372  004278  103D               	iorwf	(??___flge+1)^0,w,c
 16373  00427A  103E               	iorwf	(??___flge+2)^0,w,c
 16374  00427C  103F               	iorwf	(??___flge+3)^0,w,c
 16375  00427E  A4D8               	btfss	status,2,c
 16376  004280  EF44  F021         	goto	u9591
 16377  004284  EF46  F021         	goto	u9590
 16378  004288                     u9591:
 16379  004288  EF4E  F021         	goto	l8915
 16380  00428C                     u9590:
 16381  00428C  0E00               	movlw	0
 16382  00428E  6E38               	movwf	___flge@ff2^0,c
 16383  004290  0E00               	movlw	0
 16384  004292  6E39               	movwf	(___flge@ff2+1)^0,c
 16385  004294  0E00               	movlw	0
 16386  004296  6E3A               	movwf	(___flge@ff2+2)^0,c
 16387  004298  0E00               	movlw	0
 16388  00429A  6E3B               	movwf	(___flge@ff2+3)^0,c
 16389  00429C                     l8915:
 16390  00429C  AE37               	btfss	(___flge@ff1+3)^0,7,c
 16391  00429E  EF53  F021         	goto	u9601
 16392  0042A2  EF55  F021         	goto	u9600
 16393  0042A6                     u9601:
 16394  0042A6  EF5E  F021         	goto	l8919
 16395  0042AA                     u9600:
 16396  0042AA  6C34               	negf	___flge@ff1^0,c
 16397  0042AC  1E35               	comf	(___flge@ff1+1)^0,f,c
 16398  0042AE  B0D8               	btfsc	status,0,c
 16399  0042B0  2A35               	incf	(___flge@ff1+1)^0,f,c
 16400  0042B2  1E36               	comf	(___flge@ff1+2)^0,f,c
 16401  0042B4  B0D8               	btfsc	status,0,c
 16402  0042B6  2A36               	incf	(___flge@ff1+2)^0,f,c
 16403  0042B8  0E80               	movlw	128
 16404  0042BA  5637               	subfwb	(___flge@ff1+3)^0,f,c
 16405  0042BC                     l8919:
 16406  0042BC  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 16407  0042BE  EF63  F021         	goto	u9611
 16408  0042C2  EF65  F021         	goto	u9610
 16409  0042C6                     u9611:
 16410  0042C6  EF6E  F021         	goto	l1226
 16411  0042CA                     u9610:
 16412  0042CA  6C38               	negf	___flge@ff2^0,c
 16413  0042CC  1E39               	comf	(___flge@ff2+1)^0,f,c
 16414  0042CE  B0D8               	btfsc	status,0,c
 16415  0042D0  2A39               	incf	(___flge@ff2+1)^0,f,c
 16416  0042D2  1E3A               	comf	(___flge@ff2+2)^0,f,c
 16417  0042D4  B0D8               	btfsc	status,0,c
 16418  0042D6  2A3A               	incf	(___flge@ff2+2)^0,f,c
 16419  0042D8  0E80               	movlw	128
 16420  0042DA  563B               	subfwb	(___flge@ff2+3)^0,f,c
 16421  0042DC                     l1226:
 16422  0042DC  0E00               	movlw	0
 16423  0042DE  1A34               	xorwf	___flge@ff1^0,f,c
 16424  0042E0  0E00               	movlw	0
 16425  0042E2  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 16426  0042E4  0E00               	movlw	0
 16427  0042E6  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 16428  0042E8  0E80               	movlw	128
 16429  0042EA  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 16430  0042EC  0E00               	movlw	0
 16431  0042EE  1A38               	xorwf	___flge@ff2^0,f,c
 16432  0042F0  0E00               	movlw	0
 16433  0042F2  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 16434  0042F4  0E00               	movlw	0
 16435  0042F6  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 16436  0042F8  0E80               	movlw	128
 16437  0042FA  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 16438  0042FC  5038               	movf	___flge@ff2^0,w,c
 16439  0042FE  5C34               	subwf	___flge@ff1^0,w,c
 16440  004300  5039               	movf	(___flge@ff2+1)^0,w,c
 16441  004302  5835               	subwfb	(___flge@ff1+1)^0,w,c
 16442  004304  503A               	movf	(___flge@ff2+2)^0,w,c
 16443  004306  5836               	subwfb	(___flge@ff1+2)^0,w,c
 16444  004308  503B               	movf	(___flge@ff2+3)^0,w,c
 16445  00430A  5837               	subwfb	(___flge@ff1+3)^0,w,c
 16446  00430C  B0D8               	btfsc	status,0,c
 16447  00430E  EF8B  F021         	goto	u9621
 16448  004312  EF8D  F021         	goto	u9620
 16449  004316                     u9621:
 16450  004316  EF90  F021         	goto	l8925
 16451  00431A                     u9620:
 16452  00431A  90D8               	bcf	status,0,c
 16453  00431C  EF91  F021         	goto	l1231
 16454  004320                     l8925:
 16455  004320  80D8               	bsf	status,0,c
 16456  004322                     l1231:
 16457  004322  0012               	return		;funcret
 16458  004324                     __end_of___flge:
 16459                           	opt callstack 0
 16460                           
 16461 ;; *************** function _caminoCorrecto *****************
 16462 ;; Defined at:
 16463 ;;		line 247 in file "main.c"
 16464 ;; Parameters:    Size  Location     Type
 16465 ;;  movimientos     2   17[COMRAM] PTR unsigned char 
 16466 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16467 ;;  caminoFinal     2   19[COMRAM] PTR unsigned char 
 16468 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 16469 ;;  numMovimient    2   21[COMRAM] unsigned int 
 16470 ;;  numMovimient    2   23[COMRAM] PTR unsigned int 
 16471 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 16472 ;;  caminoActual    1   25[COMRAM] unsigned char 
 16473 ;; Auto vars:     Size  Location     Type
 16474 ;;		None
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  1    wreg      void 
 16477 ;; Registers used:
 16478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16479 ;; Tracked objects:
 16480 ;;		On entry : 0/0
 16481 ;;		On exit  : 0/0
 16482 ;;		Unchanged: 0/0
 16483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16484 ;;      Params:         9       0       0       0       0       0       0       0       0
 16485 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16486 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16487 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16488 ;;Total ram usage:        9 bytes
 16489 ;; Hardware stack levels used:    1
 16490 ;; Hardware stack levels required when called:    3
 16491 ;; This function calls:
 16492 ;;		_combinarArreglos
 16493 ;;		_limpiarMovimientos
 16494 ;; This function is called by:
 16495 ;;		_comportamientoBasico
 16496 ;; This function uses a non-reentrant model
 16497 ;;
 16498                           
 16499                           	psect	text72
 16500  00542A                     __ptext72:
 16501                           	opt callstack 0
 16502  00542A                     _caminoCorrecto:
 16503                           	opt callstack 26
 16504  00542A                     
 16505                           ;main.c: 247: void caminoCorrecto(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT num
      +                          Movimientos,;main.c: 248:         T_UINT* numMovimientosFinal, T_UBYTE caminoActual) {;m
      +                          ain.c: 250:     movimientos[0] = caminoActual;
 16506  00542A  C012  FFD9         	movff	caminoCorrecto@movimientos,fsr2l
 16507  00542E  C013  FFDA         	movff	caminoCorrecto@movimientos+1,fsr2h
 16508  005432  C01A  FFDF         	movff	caminoCorrecto@caminoActual,indf2
 16509  005436                     
 16510                           ;main.c: 251:     combinarArreglos(movimientos, caminoFinal, numMovimientos, numMovimien
      +                          tosFinal);
 16511  005436  C012  F006         	movff	caminoCorrecto@movimientos,combinarArreglos@movimientos
 16512  00543A  C013  F007         	movff	caminoCorrecto@movimientos+1,combinarArreglos@movimientos+1
 16513  00543E  C014  F008         	movff	caminoCorrecto@caminoFinal,combinarArreglos@caminoFinal
 16514  005442  C015  F009         	movff	caminoCorrecto@caminoFinal+1,combinarArreglos@caminoFinal+1
 16515  005446  C016  F00A         	movff	caminoCorrecto@numMovimientos,combinarArreglos@numMovimientos
 16516  00544A  C017  F00B         	movff	caminoCorrecto@numMovimientos+1,combinarArreglos@numMovimientos+1
 16517  00544E  C018  F00C         	movff	caminoCorrecto@numMovimientosFinal,combinarArreglos@numMovimientosFinal
 16518  005452  C019  F00D         	movff	caminoCorrecto@numMovimientosFinal+1,combinarArreglos@numMovimientosFinal+1
 16519  005456  ECC6  F027         	call	_combinarArreglos	;wreg free
 16520  00545A                     
 16521                           ;main.c: 252:     limpiarMovimientos(movimientos, &numMovimientos);
 16522  00545A  C012  F006         	movff	caminoCorrecto@movimientos,limpiarMovimientos@movimientos
 16523  00545E  C013  F007         	movff	caminoCorrecto@movimientos+1,limpiarMovimientos@movimientos+1
 16524  005462  0E16               	movlw	low caminoCorrecto@numMovimientos
 16525  005464  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
 16526  005466  0E00               	movlw	high caminoCorrecto@numMovimientos
 16527  005468  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
 16528  00546A  EC81  F029         	call	_limpiarMovimientos	;wreg free
 16529  00546E  0012               	return		;funcret
 16530  005470                     __end_of_caminoCorrecto:
 16531                           	opt callstack 0
 16532                           
 16533 ;; *************** function _limpiarMovimientos *****************
 16534 ;; Defined at:
 16535 ;;		line 829 in file "main.c"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 16538 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16539 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
 16540 ;;		 -> comportamientoBasico@numMovimientos(2), caminoCorrecto@numMovimientos(2), 
 16541 ;; Auto vars:     Size  Location     Type
 16542 ;;  i               2   11[COMRAM] int 
 16543 ;; Return value:  Size  Location     Type
 16544 ;;                  1    wreg      void 
 16545 ;; Registers used:
 16546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16547 ;; Tracked objects:
 16548 ;;		On entry : 0/0
 16549 ;;		On exit  : 0/0
 16550 ;;		Unchanged: 0/0
 16551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16552 ;;      Params:         4       0       0       0       0       0       0       0       0
 16553 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16554 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16555 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16556 ;;Total ram usage:        8 bytes
 16557 ;; Hardware stack levels used:    1
 16558 ;; Hardware stack levels required when called:    2
 16559 ;; This function calls:
 16560 ;;		Nothing
 16561 ;; This function is called by:
 16562 ;;		_caminoCorrecto
 16563 ;;		_comportamientoBasico
 16564 ;; This function uses a non-reentrant model
 16565 ;;
 16566                           
 16567                           	psect	text73
 16568  005302                     __ptext73:
 16569                           	opt callstack 0
 16570  005302                     _limpiarMovimientos:
 16571                           	opt callstack 27
 16572  005302                     
 16573                           ;main.c: 831:     for (T_INT i = 0; i < *numMovimientos; i++)
 16574  005302  0E00               	movlw	0
 16575  005304  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
 16576  005306  0E00               	movlw	0
 16577  005308  6E0C               	movwf	limpiarMovimientos@i^0,c
 16578  00530A  EF91  F029         	goto	l9817
 16579  00530E                     l9813:
 16580                           
 16581                           ;main.c: 832:         movimientos[i] = 0;
 16582  00530E  500C               	movf	limpiarMovimientos@i^0,w,c
 16583  005310  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
 16584  005312  6ED9               	movwf	fsr2l,c
 16585  005314  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
 16586  005316  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
 16587  005318  6EDA               	movwf	fsr2h,c
 16588  00531A  0E00               	movlw	0
 16589  00531C  6EDF               	movwf	indf2,c
 16590  00531E  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
 16591  005320  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
 16592  005322                     l9817:
 16593  005322  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 16594  005326  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 16595  00532A  50DE               	movf	postinc2,w,c
 16596  00532C  5C0C               	subwf	limpiarMovimientos@i^0,w,c
 16597  00532E  50DE               	movf	postinc2,w,c
 16598  005330  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
 16599  005332  A0D8               	btfss	status,0,c
 16600  005334  EF9E  F029         	goto	u11121
 16601  005338  EFA0  F029         	goto	u11120
 16602  00533C                     u11121:
 16603  00533C  EF87  F029         	goto	l9813
 16604  005340                     u11120:
 16605  005340                     
 16606                           ;main.c: 834:     *numMovimientos = 0;
 16607  005340  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 16608  005344  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 16609  005348  0E00               	movlw	0
 16610  00534A  6EDE               	movwf	postinc2,c
 16611  00534C  0E00               	movlw	0
 16612  00534E  6EDD               	movwf	postdec2,c
 16613  005350  0012               	return		;funcret
 16614  005352                     __end_of_limpiarMovimientos:
 16615                           	opt callstack 0
 16616                           
 16617 ;; *************** function _combinarArreglos *****************
 16618 ;; Defined at:
 16619 ;;		line 1326 in file "main.c"
 16620 ;; Parameters:    Size  Location     Type
 16621 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 16622 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16623 ;;  caminoFinal     2    7[COMRAM] PTR unsigned char 
 16624 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 16625 ;;  numMovimient    2    9[COMRAM] unsigned int 
 16626 ;;  numMovimient    2   11[COMRAM] PTR unsigned int 
 16627 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 16628 ;; Auto vars:     Size  Location     Type
 16629 ;;  i               2   15[COMRAM] int 
 16630 ;; Return value:  Size  Location     Type
 16631 ;;                  1    wreg      void 
 16632 ;; Registers used:
 16633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16634 ;; Tracked objects:
 16635 ;;		On entry : 0/0
 16636 ;;		On exit  : 0/0
 16637 ;;		Unchanged: 0/0
 16638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16639 ;;      Params:         8       0       0       0       0       0       0       0       0
 16640 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16641 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16642 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16643 ;;Total ram usage:       12 bytes
 16644 ;; Hardware stack levels used:    1
 16645 ;; Hardware stack levels required when called:    2
 16646 ;; This function calls:
 16647 ;;		Nothing
 16648 ;; This function is called by:
 16649 ;;		_caminoCorrecto
 16650 ;; This function uses a non-reentrant model
 16651 ;;
 16652                           
 16653                           	psect	text74
 16654  004F8C                     __ptext74:
 16655                           	opt callstack 0
 16656  004F8C                     _combinarArreglos:
 16657                           	opt callstack 26
 16658  004F8C                     
 16659                           ;main.c: 1326: void combinarArreglos(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT 
      +                          numMovimientos,;main.c: 1327:         T_UINT* numMovimientosFinal) {;main.c: 1328:     f
      +                          or (T_INT i = 0; i < numMovimientos; i++) {
 16660  004F8C  0E00               	movlw	0
 16661  004F8E  6E11               	movwf	(combinarArreglos@i+1)^0,c
 16662  004F90  0E00               	movlw	0
 16663  004F92  6E10               	movwf	combinarArreglos@i^0,c
 16664  004F94  EFEB  F027         	goto	l9809
 16665  004F98                     l9803:
 16666                           
 16667                           ;main.c: 1330:         caminoFinal[*numMovimientosFinal] = movimientos[i];
 16668  004F98  5010               	movf	combinarArreglos@i^0,w,c
 16669  004F9A  2406               	addwf	combinarArreglos@movimientos^0,w,c
 16670  004F9C  6ED9               	movwf	fsr2l,c
 16671  004F9E  5011               	movf	(combinarArreglos@i+1)^0,w,c
 16672  004FA0  2007               	addwfc	(combinarArreglos@movimientos+1)^0,w,c
 16673  004FA2  6EDA               	movwf	fsr2h,c
 16674  004FA4  C00C  FFE1         	movff	combinarArreglos@numMovimientosFinal,fsr1l
 16675  004FA8  C00D  FFE2         	movff	combinarArreglos@numMovimientosFinal+1,fsr1h
 16676  004FAC  CFE6 F00E          	movff	postinc1,??_combinarArreglos
 16677  004FB0  CFE5 F00F          	movff	postdec1,??_combinarArreglos+1
 16678  004FB4  500E               	movf	??_combinarArreglos^0,w,c
 16679  004FB6  2408               	addwf	combinarArreglos@caminoFinal^0,w,c
 16680  004FB8  6EE1               	movwf	fsr1l,c
 16681  004FBA  500F               	movf	(??_combinarArreglos+1)^0,w,c
 16682  004FBC  2009               	addwfc	(combinarArreglos@caminoFinal+1)^0,w,c
 16683  004FBE  6EE2               	movwf	fsr1h,c
 16684  004FC0  CFDF FFE7          	movff	indf2,indf1
 16685  004FC4                     
 16686                           ;main.c: 1331:         *numMovimientosFinal += 1;
 16687  004FC4  C00C  FFD9         	movff	combinarArreglos@numMovimientosFinal,fsr2l
 16688  004FC8  C00D  FFDA         	movff	combinarArreglos@numMovimientosFinal+1,fsr2h
 16689  004FCC  2ADE               	incf	postinc2,f,c
 16690  004FCE  0E00               	movlw	0
 16691  004FD0  22DD               	addwfc	postdec2,f,c
 16692  004FD2                     
 16693                           ;main.c: 1332:     }
 16694  004FD2  4A10               	infsnz	combinarArreglos@i^0,f,c
 16695  004FD4  2A11               	incf	(combinarArreglos@i+1)^0,f,c
 16696  004FD6                     l9809:
 16697  004FD6  500A               	movf	combinarArreglos@numMovimientos^0,w,c
 16698  004FD8  5C10               	subwf	combinarArreglos@i^0,w,c
 16699  004FDA  500B               	movf	(combinarArreglos@numMovimientos+1)^0,w,c
 16700  004FDC  5811               	subwfb	(combinarArreglos@i+1)^0,w,c
 16701  004FDE  A0D8               	btfss	status,0,c
 16702  004FE0  EFF4  F027         	goto	u11111
 16703  004FE4  EFF6  F027         	goto	u11110
 16704  004FE8                     u11111:
 16705  004FE8  EFCC  F027         	goto	l9803
 16706  004FEC                     u11110:
 16707  004FEC  0012               	return		;funcret
 16708  004FEE                     __end_of_combinarArreglos:
 16709                           	opt callstack 0
 16710                           
 16711 ;; *************** function _UART_init *****************
 16712 ;; Defined at:
 16713 ;;		line 13 in file "./UART.h"
 16714 ;; Parameters:    Size  Location     Type
 16715 ;;  BAUD            4   31[COMRAM] long 
 16716 ;; Auto vars:     Size  Location     Type
 16717 ;;  frecuenciaCr    4    0        long 
 16718 ;; Return value:  Size  Location     Type
 16719 ;;                  1    wreg      void 
 16720 ;; Registers used:
 16721 ;;		wreg, status,2, status,0, cstack
 16722 ;; Tracked objects:
 16723 ;;		On entry : 0/0
 16724 ;;		On exit  : 0/0
 16725 ;;		Unchanged: 0/0
 16726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16727 ;;      Params:         4       0       0       0       0       0       0       0       0
 16728 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16730 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16731 ;;Total ram usage:       12 bytes
 16732 ;; Hardware stack levels used:    1
 16733 ;; Hardware stack levels required when called:    3
 16734 ;; This function calls:
 16735 ;;		___aldiv
 16736 ;; This function is called by:
 16737 ;;		_main
 16738 ;; This function uses a non-reentrant model
 16739 ;;
 16740                           
 16741                           	psect	text75
 16742  004DE0                     __ptext75:
 16743                           	opt callstack 0
 16744  004DE0                     _UART_init:
 16745                           	opt callstack 27
 16746  004DE0                     
 16747                           ;./UART.h: 16:     TRISC6 = 0;
 16748  004DE0  9C94               	bcf	3988,6,c	;volatile
 16749  004DE2                     
 16750                           ;./UART.h: 17:     TRISC7 = 1;
 16751  004DE2  8E94               	bsf	3988,7,c	;volatile
 16752  004DE4                     
 16753                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16754  004DE4  0E10               	movlw	16
 16755  004DE6  6E16               	movwf	___aldiv@divisor^0,c
 16756  004DE8  0E00               	movlw	0
 16757  004DEA  6E17               	movwf	(___aldiv@divisor+1)^0,c
 16758  004DEC  0E00               	movlw	0
 16759  004DEE  6E18               	movwf	(___aldiv@divisor+2)^0,c
 16760  004DF0  0E00               	movlw	0
 16761  004DF2  6E19               	movwf	(___aldiv@divisor+3)^0,c
 16762  004DF4  0E00               	movlw	0
 16763  004DF6  6E12               	movwf	___aldiv@dividend^0,c
 16764  004DF8  0E09               	movlw	9
 16765  004DFA  6E13               	movwf	(___aldiv@dividend+1)^0,c
 16766  004DFC  0E3D               	movlw	61
 16767  004DFE  6E14               	movwf	(___aldiv@dividend+2)^0,c
 16768  004E00  0E00               	movlw	0
 16769  004E02  6E15               	movwf	(___aldiv@dividend+3)^0,c
 16770  004E04  EC83  F01F         	call	___aldiv	;wreg free
 16771  004E08  C012  F028         	movff	?___aldiv,_UART_init$1842
 16772  004E0C  C013  F029         	movff	?___aldiv+1,_UART_init$1842+1
 16773  004E10  C014  F02A         	movff	?___aldiv+2,_UART_init$1842+2
 16774  004E14  C015  F02B         	movff	?___aldiv+3,_UART_init$1842+3
 16775  004E18                     
 16776                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16777  004E18  C028  F012         	movff	_UART_init$1842,___aldiv@dividend
 16778  004E1C  C029  F013         	movff	_UART_init$1842+1,___aldiv@dividend+1
 16779  004E20  C02A  F014         	movff	_UART_init$1842+2,___aldiv@dividend+2
 16780  004E24  C02B  F015         	movff	_UART_init$1842+3,___aldiv@dividend+3
 16781  004E28  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 16782  004E2C  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 16783  004E30  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 16784  004E34  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 16785  004E38  EC83  F01F         	call	___aldiv	;wreg free
 16786  004E3C  0412               	decf	?___aldiv^0,w,c
 16787  004E3E  6EAF               	movwf	175,c	;volatile
 16788  004E40                     
 16789                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 16790  004E40  84AC               	bsf	172,2,c	;volatile
 16791  004E42                     
 16792                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 16793  004E42  98AC               	bcf	172,4,c	;volatile
 16794  004E44                     
 16795                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 16796  004E44  8EAB               	bsf	171,7,c	;volatile
 16797  004E46                     
 16798                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 16799  004E46  9CAC               	bcf	172,6,c	;volatile
 16800  004E48                     
 16801                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 16802  004E48  8AAC               	bsf	172,5,c	;volatile
 16803  004E4A                     
 16804                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 16805  004E4A  9CAB               	bcf	171,6,c	;volatile
 16806  004E4C                     
 16807                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 16808  004E4C  88AB               	bsf	171,4,c	;volatile
 16809  004E4E  0012               	return		;funcret
 16810  004E50                     __end_of_UART_init:
 16811                           	opt callstack 0
 16812                           
 16813 ;; *************** function ___aldiv *****************
 16814 ;; Defined at:
 16815 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 16816 ;; Parameters:    Size  Location     Type
 16817 ;;  dividend        4   17[COMRAM] long 
 16818 ;;  divisor         4   21[COMRAM] long 
 16819 ;; Auto vars:     Size  Location     Type
 16820 ;;  quotient        4   27[COMRAM] long 
 16821 ;;  sign            1   26[COMRAM] unsigned char 
 16822 ;;  counter         1   25[COMRAM] unsigned char 
 16823 ;; Return value:  Size  Location     Type
 16824 ;;                  4   17[COMRAM] long 
 16825 ;; Registers used:
 16826 ;;		wreg, status,2, status,0
 16827 ;; Tracked objects:
 16828 ;;		On entry : 0/0
 16829 ;;		On exit  : 0/0
 16830 ;;		Unchanged: 0/0
 16831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16832 ;;      Params:         8       0       0       0       0       0       0       0       0
 16833 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16834 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16835 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16836 ;;Total ram usage:       14 bytes
 16837 ;; Hardware stack levels used:    1
 16838 ;; Hardware stack levels required when called:    2
 16839 ;; This function calls:
 16840 ;;		Nothing
 16841 ;; This function is called by:
 16842 ;;		_map
 16843 ;;		_UART_init
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847                           	psect	text76
 16848  003F06                     __ptext76:
 16849                           	opt callstack 0
 16850  003F06                     ___aldiv:
 16851                           	opt callstack 24
 16852  003F06  0E00               	movlw	0
 16853  003F08  6E1B               	movwf	___aldiv@sign^0,c
 16854  003F0A  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 16855  003F0C  EF8C  F01F         	goto	u8140
 16856  003F10  EF8A  F01F         	goto	u8141
 16857  003F14                     u8141:
 16858  003F14  EF96  F01F         	goto	l8115
 16859  003F18                     u8140:
 16860  003F18  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 16861  003F1A  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 16862  003F1C  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 16863  003F1E  6C16               	negf	___aldiv@divisor^0,c
 16864  003F20  0E00               	movlw	0
 16865  003F22  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 16866  003F24  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 16867  003F26  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 16868  003F28  0E01               	movlw	1
 16869  003F2A  6E1B               	movwf	___aldiv@sign^0,c
 16870  003F2C                     l8115:
 16871  003F2C  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 16872  003F2E  EF9D  F01F         	goto	u8150
 16873  003F32  EF9B  F01F         	goto	u8151
 16874  003F36                     u8151:
 16875  003F36  EFA7  F01F         	goto	l8121
 16876  003F3A                     u8150:
 16877  003F3A  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 16878  003F3C  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 16879  003F3E  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 16880  003F40  6C12               	negf	___aldiv@dividend^0,c
 16881  003F42  0E00               	movlw	0
 16882  003F44  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 16883  003F46  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 16884  003F48  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 16885  003F4A  0E01               	movlw	1
 16886  003F4C  1A1B               	xorwf	___aldiv@sign^0,f,c
 16887  003F4E                     l8121:
 16888  003F4E  0E00               	movlw	0
 16889  003F50  6E1C               	movwf	___aldiv@quotient^0,c
 16890  003F52  0E00               	movlw	0
 16891  003F54  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 16892  003F56  0E00               	movlw	0
 16893  003F58  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 16894  003F5A  0E00               	movlw	0
 16895  003F5C  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 16896  003F5E  5016               	movf	___aldiv@divisor^0,w,c
 16897  003F60  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 16898  003F62  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 16899  003F64  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 16900  003F66  B4D8               	btfsc	status,2,c
 16901  003F68  EFB8  F01F         	goto	u8161
 16902  003F6C  EFBA  F01F         	goto	u8160
 16903  003F70                     u8161:
 16904  003F70  EFF0  F01F         	goto	l8143
 16905  003F74                     u8160:
 16906  003F74  0E01               	movlw	1
 16907  003F76  6E1A               	movwf	___aldiv@counter^0,c
 16908  003F78  EFC4  F01F         	goto	l8129
 16909  003F7C                     l8127:
 16910  003F7C  90D8               	bcf	status,0,c
 16911  003F7E  3616               	rlcf	___aldiv@divisor^0,f,c
 16912  003F80  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 16913  003F82  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 16914  003F84  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 16915  003F86  2A1A               	incf	___aldiv@counter^0,f,c
 16916  003F88                     l8129:
 16917  003F88  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 16918  003F8A  EFC9  F01F         	goto	u8171
 16919  003F8E  EFCB  F01F         	goto	u8170
 16920  003F92                     u8171:
 16921  003F92  EFBE  F01F         	goto	l8127
 16922  003F96                     u8170:
 16923  003F96                     l8131:
 16924  003F96  90D8               	bcf	status,0,c
 16925  003F98  361C               	rlcf	___aldiv@quotient^0,f,c
 16926  003F9A  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 16927  003F9C  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 16928  003F9E  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 16929  003FA0  5016               	movf	___aldiv@divisor^0,w,c
 16930  003FA2  5C12               	subwf	___aldiv@dividend^0,w,c
 16931  003FA4  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16932  003FA6  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 16933  003FA8  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16934  003FAA  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 16935  003FAC  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16936  003FAE  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 16937  003FB0  A0D8               	btfss	status,0,c
 16938  003FB2  EFDD  F01F         	goto	u8181
 16939  003FB6  EFDF  F01F         	goto	u8180
 16940  003FBA                     u8181:
 16941  003FBA  EFE8  F01F         	goto	l8139
 16942  003FBE                     u8180:
 16943  003FBE  5016               	movf	___aldiv@divisor^0,w,c
 16944  003FC0  5E12               	subwf	___aldiv@dividend^0,f,c
 16945  003FC2  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16946  003FC4  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 16947  003FC6  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16948  003FC8  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 16949  003FCA  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16950  003FCC  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 16951  003FCE  801C               	bsf	___aldiv@quotient^0,0,c
 16952  003FD0                     l8139:
 16953  003FD0  90D8               	bcf	status,0,c
 16954  003FD2  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 16955  003FD4  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 16956  003FD6  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 16957  003FD8  3216               	rrcf	___aldiv@divisor^0,f,c
 16958  003FDA  2E1A               	decfsz	___aldiv@counter^0,f,c
 16959  003FDC  EFCB  F01F         	goto	l8131
 16960  003FE0                     l8143:
 16961  003FE0  501B               	movf	___aldiv@sign^0,w,c
 16962  003FE2  B4D8               	btfsc	status,2,c
 16963  003FE4  EFF6  F01F         	goto	u8191
 16964  003FE8  EFF8  F01F         	goto	u8190
 16965  003FEC                     u8191:
 16966  003FEC  EF00  F020         	goto	l8147
 16967  003FF0                     u8190:
 16968  003FF0  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 16969  003FF2  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 16970  003FF4  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 16971  003FF6  6C1C               	negf	___aldiv@quotient^0,c
 16972  003FF8  0E00               	movlw	0
 16973  003FFA  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 16974  003FFC  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 16975  003FFE  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 16976  004000                     l8147:
 16977  004000  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 16978  004004  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 16979  004008  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 16980  00400C  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 16981  004010  0012               	return		;funcret
 16982  004012                     __end_of___aldiv:
 16983                           	opt callstack 0
 16984                           
 16985 ;; *************** function _boton *****************
 16986 ;; Defined at:
 16987 ;;		line 108 in file "main.c"
 16988 ;; Parameters:    Size  Location     Type
 16989 ;;		None
 16990 ;; Auto vars:     Size  Location     Type
 16991 ;;		None
 16992 ;; Return value:  Size  Location     Type
 16993 ;;                  1    wreg      void 
 16994 ;; Registers used:
 16995 ;;		wreg, status,2, status,0, cstack
 16996 ;; Tracked objects:
 16997 ;;		On entry : 0/0
 16998 ;;		On exit  : 0/0
 16999 ;;		Unchanged: 0/0
 17000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17001 ;;      Params:         0       0       0       0       0       0       0       0       0
 17002 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17003 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17004 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17005 ;;Total ram usage:        2 bytes
 17006 ;; Hardware stack levels used:    1
 17007 ;; Hardware stack levels required when called:    1
 17008 ;; This function calls:
 17009 ;;		_antiRebote
 17010 ;; This function is called by:
 17011 ;;		Interrupt level 2
 17012 ;; This function uses a non-reentrant model
 17013 ;;
 17014                           
 17015                           	psect	intcode
 17016  000008                     __pintcode:
 17017                           	opt callstack 0
 17018  000008                     _boton:
 17019                           	opt callstack 19
 17020                           
 17021                           ;incstack = 0
 17022  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17023  00000A  EDDD  F028         	call	int_func,f	;refresh shadow registers
 17024                           
 17025                           	psect	intcode_body
 17026  0051BA                     __pintcode_body:
 17027                           	opt callstack 19
 17028  0051BA                     int_func:
 17029                           	opt callstack 19
 17030  0051BA  0006               	pop		; remove dummy address from shadow register refresh
 17031  0051BC                     
 17032                           ;main.c: 110:     if (INT0IF)
 17033  0051BC  A2F2               	btfss	4082,1,c	;volatile
 17034  0051BE  EFE3  F028         	goto	i2u788_41
 17035  0051C2  EFE5  F028         	goto	i2u788_40
 17036  0051C6                     i2u788_41:
 17037  0051C6  EF05  F029         	goto	i2l284
 17038  0051CA                     i2u788_40:
 17039  0051CA                     
 17040                           ;main.c: 111:     {;main.c: 112:         antiRebote(1);
 17041  0051CA  0E01               	movlw	1
 17042  0051CC  ECB1  F028         	call	_antiRebote
 17043  0051D0                     
 17044                           ;main.c: 113:         if (pausa) {
 17045  0051D0  0101               	movlb	1	; () banked
 17046  0051D2  51E9               	movf	_pausa& (0+255),w,b
 17047  0051D4  B4D8               	btfsc	status,2,c
 17048  0051D6  EFEF  F028         	goto	i2u789_41
 17049  0051DA  EFF1  F028         	goto	i2u789_40
 17050  0051DE                     i2u789_41:
 17051  0051DE  EF01  F029         	goto	i2l282
 17052  0051E2                     i2u789_40:
 17053  0051E2                     
 17054                           ; BSR set to: 1
 17055                           ;main.c: 114:             pausa = 0;
 17056  0051E2  0E00               	movlw	0
 17057  0051E4  6FE9               	movwf	_pausa& (0+255),b
 17058  0051E6                     
 17059                           ; BSR set to: 1
 17060                           ;main.c: 115:             LATD2 = 1;
 17061  0051E6  848C               	bsf	3980,2,c	;volatile
 17062  0051E8                     
 17063                           ; BSR set to: 1
 17064                           ;main.c: 116:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 17065  0051E8  0E10               	movlw	16
 17066  0051EA  6E05               	movwf	(??_boton+1)^0,c
 17067  0051EC  0E39               	movlw	57
 17068  0051EE  6E04               	movwf	??_boton^0,c
 17069  0051F0  0E0E               	movlw	14
 17070  0051F2                     i2u1215_47:
 17071  0051F2  2EE8               	decfsz	wreg,f,c
 17072  0051F4  D7FE               	bra	i2u1215_47
 17073  0051F6  2E04               	decfsz	??_boton^0,f,c
 17074  0051F8  D7FC               	bra	i2u1215_47
 17075  0051FA  2E05               	decfsz	(??_boton+1)^0,f,c
 17076  0051FC  D7FA               	bra	i2u1215_47
 17077                           
 17078                           ;main.c: 117:         } else {
 17079  0051FE  EF04  F029         	goto	i2l7541
 17080  005202                     i2l282:
 17081                           
 17082                           ; BSR set to: 1
 17083                           ;main.c: 118:             LATD2 = 0;
 17084  005202  948C               	bcf	3980,2,c	;volatile
 17085  005204                     
 17086                           ; BSR set to: 1
 17087                           ;main.c: 119:             pausa = 1;
 17088  005204  0E01               	movlw	1
 17089  005206  6FE9               	movwf	_pausa& (0+255),b
 17090  005208                     i2l7541:
 17091                           
 17092                           ;main.c: 122:         INT0IF = 0;
 17093  005208  92F2               	bcf	4082,1,c	;volatile
 17094  00520A                     i2l284:
 17095  00520A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17096  00520C  0011               	retfie		f
 17097  00520E                     __end_of_boton:
 17098                           	opt callstack 0
 17099                           
 17100 ;; *************** function _antiRebote *****************
 17101 ;; Defined at:
 17102 ;;		line 220 in file "main.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;  pin             1    wreg     unsigned char 
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;  pin             1    2[COMRAM] unsigned char 
 17107 ;; Return value:  Size  Location     Type
 17108 ;;                  1    wreg      void 
 17109 ;; Registers used:
 17110 ;;		wreg, status,2, status,0
 17111 ;; Tracked objects:
 17112 ;;		On entry : 0/0
 17113 ;;		On exit  : 0/0
 17114 ;;		Unchanged: 0/0
 17115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17116 ;;      Params:         0       0       0       0       0       0       0       0       0
 17117 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17118 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17119 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17120 ;;Total ram usage:        3 bytes
 17121 ;; Hardware stack levels used:    1
 17122 ;; This function calls:
 17123 ;;		Nothing
 17124 ;; This function is called by:
 17125 ;;		_boton
 17126 ;; This function uses a non-reentrant model
 17127 ;;
 17128                           
 17129                           	psect	text78
 17130  005162                     __ptext78:
 17131                           	opt callstack 0
 17132  005162                     _antiRebote:
 17133                           	opt callstack 19
 17134                           
 17135                           ;incstack = 0
 17136                           ;antiRebote@pin stored from wreg
 17137  005162  6E03               	movwf	antiRebote@pin^0,c
 17138  005164                     
 17139                           ;main.c: 222:     switch (pin) {
 17140  005164  EFCB  F028         	goto	i2l7331
 17141  005168                     i2l318:
 17142  005168  A081               	btfss	129,0,c	;volatile
 17143  00516A  EFB9  F028         	goto	i2u767_41
 17144  00516E  EFBB  F028         	goto	i2u767_40
 17145  005172                     i2u767_41:
 17146  005172  EFB4  F028         	goto	i2l318
 17147  005176                     i2u767_40:
 17148  005176                     i2l321:
 17149  005176  B081               	btfsc	129,0,c	;volatile
 17150  005178  EFC0  F028         	goto	i2u768_41
 17151  00517C  EFC2  F028         	goto	i2u768_40
 17152  005180                     i2u768_41:
 17153  005180  EFBB  F028         	goto	i2l321
 17154  005184                     i2u768_40:
 17155  005184                     
 17156                           ;main.c: 226:             _delay((unsigned long)((100)*(4000000/4000.0)));
 17157  005184  0E82               	movlw	130
 17158  005186  6E01               	movwf	??_antiRebote^0,c
 17159  005188  0EDE               	movlw	222
 17160  00518A                     i2u1216_47:
 17161  00518A  2EE8               	decfsz	wreg,f,c
 17162  00518C  D7FE               	bra	i2u1216_47
 17163  00518E  2E01               	decfsz	??_antiRebote^0,f,c
 17164  005190  D7FC               	bra	i2u1216_47
 17165                           
 17166                           ;main.c: 227:             break;
 17167  005192  EFDC  F028         	goto	i2l326
 17168  005196                     i2l7331:
 17169  005196  5003               	movf	antiRebote@pin^0,w,c
 17170  005198  6E01               	movwf	??_antiRebote^0,c
 17171  00519A  6A02               	clrf	(??_antiRebote+1)^0,c
 17172                           
 17173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17174                           ; Switch size 1, requested type "simple"
 17175                           ; Number of cases is 1, Range of values is 0 to 0
 17176                           ; switch strategies available:
 17177                           ; Name         Instructions Cycles
 17178                           ; simple_byte            4     3 (average)
 17179                           ;	Chosen strategy is simple_byte
 17180  00519C  5002               	movf	(??_antiRebote+1)^0,w,c
 17181  00519E  0A00               	xorlw	0	; case 0
 17182  0051A0  B4D8               	btfsc	status,2,c
 17183  0051A2  EFD5  F028         	goto	i2l11191
 17184  0051A6  EFDC  F028         	goto	i2l326
 17185  0051AA                     i2l11191:
 17186                           
 17187                           ; Switch size 1, requested type "simple"
 17188                           ; Number of cases is 1, Range of values is 1 to 1
 17189                           ; switch strategies available:
 17190                           ; Name         Instructions Cycles
 17191                           ; simple_byte            4     3 (average)
 17192                           ;	Chosen strategy is simple_byte
 17193  0051AA  5001               	movf	??_antiRebote^0,w,c
 17194  0051AC  0A01               	xorlw	1	; case 1
 17195  0051AE  B4D8               	btfsc	status,2,c
 17196  0051B0  EFB4  F028         	goto	i2l318
 17197  0051B4  EFDC  F028         	goto	i2l326
 17198  0051B8                     i2l326:
 17199  0051B8  0012               	return		;funcret
 17200  0051BA                     __end_of_antiRebote:
 17201                           	opt callstack 0
 17202                           
 17203                           	psect	rparam
 17204  0000                     
 17205                           	psect	temp
 17206  00005A                     btemp:
 17207                           	opt callstack 0
 17208  00005A                     	ds	1
 17209  0000                     int$flags	set	btemp
 17210  0000                     wtemp8	set	btemp+1
 17211  0000                     ttemp5	set	btemp+1
 17212  0000                     ttemp6	set	btemp+4
 17213  0000                     ttemp7	set	btemp+8
 17214                           tosu	equ	0xFFF
 17215                           tosh	equ	0xFFE
 17216                           tosl	equ	0xFFD
 17217                           stkptr	equ	0xFFC
 17218                           pclatu	equ	0xFFB
 17219                           pclath	equ	0xFFA
 17220                           pcl	equ	0xFF9
 17221                           tblptru	equ	0xFF8
 17222                           tblptrh	equ	0xFF7
 17223                           tblptrl	equ	0xFF6
 17224                           tablat	equ	0xFF5
 17225                           prodh	equ	0xFF4
 17226                           prodl	equ	0xFF3
 17227                           indf0	equ	0xFEF
 17228                           postinc0	equ	0xFEE
 17229                           postdec0	equ	0xFED
 17230                           preinc0	equ	0xFEC
 17231                           plusw0	equ	0xFEB
 17232                           fsr0h	equ	0xFEA
 17233                           fsr0l	equ	0xFE9
 17234                           wreg	equ	0xFE8
 17235                           indf1	equ	0xFE7
 17236                           postinc1	equ	0xFE6
 17237                           postdec1	equ	0xFE5
 17238                           preinc1	equ	0xFE4
 17239                           plusw1	equ	0xFE3
 17240                           fsr1h	equ	0xFE2
 17241                           fsr1l	equ	0xFE1
 17242                           bsr	equ	0xFE0
 17243                           indf2	equ	0xFDF
 17244                           postinc2	equ	0xFDE
 17245                           postdec2	equ	0xFDD
 17246                           preinc2	equ	0xFDC
 17247                           plusw2	equ	0xFDB
 17248                           fsr2h	equ	0xFDA
 17249                           fsr2l	equ	0xFD9
 17250                           status	equ	0xFD8


Data Sizes:
    Strings     562
    Constant    4
    Data        4
    BSS         1416
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    159     160
    BANK1           256     23     237
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_31(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_31(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_26(CODE[4]), STR_25(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_26(CODE[4]), STR_25(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1488_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_20(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    combinarArreglos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    combinarArreglos@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    combinarArreglos@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    decidirDireccion@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    decidirDireccion@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    decidirDireccion@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), caminoCorrecto@numMovimientos(COMRAM[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    recorrerCaminoEncontrado@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    regresarPuntoPartida@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(COMRAM[1]), 

    moverCarrito@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    caminoCorrecto@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    caminoCorrecto@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    caminoCorrecto@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 63
		 -> STR_19(CODE[32]), STR_18(CODE[31]), STR_17(CODE[33]), STR_16(CODE[32]), 
		 -> STR_15(CODE[23]), STR_14(CODE[34]), STR_13(CODE[63]), STR_12(CODE[56]), 
		 -> STR_10(CODE[6]), STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), 
		 -> buffer(BANK1[50]), STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _comportamientoBasico->_decidirDireccion
    _comportamientoBasico->_moverCarrito
    _comportamientoBasico->_recorrerCaminoEncontrado
    _comportamientoBasico->_regresarAlCruce
    _comportamientoBasico->_regresarPuntoPartida
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    _map->___aldiv
    ___xxtofl->___lwdiv
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->_roundf
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _seLlegoAlDestino->_dameLecturaAdc
    _mostrarDireccionElegida->_UART_printf
    _UART_printf->_UART_write
    _hayCruce->___flge
    ___flge->___flmul
    _caminoCorrecto->_combinarArreglos
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _main->_comportamientoBasico
    _main->_visualizarPasosRealizados
    _visualizarPasosRealizados->_sprintf
    _comportamientoBasico->_decidirDireccion
    _regresarPuntoPartida->_PID
    _regresarAlCruce->_PID
    _recorrerCaminoEncontrado->_PID
    _PID->_pwmDuty
    _leerSensores->___fldiv
    _velocidadEstandar->_pwmDuty
    _decidirDireccion->_sprintf
    _velocidadBaja->_pwmDuty
    _pwmDuty->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_comportamientoBasico
    _comportamientoBasico->_decidirDireccion

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  534040
                                             20 BANK1      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   61323
                                            155 BANK0      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  457606
                                            158 BANK0      1     1      0
                                             18 BANK1      2     2      0
                                _PID
                        _UART_printf
                     _caminoCorrecto
                   _decidirDireccion
                 _finalizarRecorrido
                      _forzarEspejeo
                     _forzarParoAuto
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
           _recorrerCaminoEncontrado
                    _regresarAlCruce
               _regresarPuntoPartida
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarPuntoPartida                                 7     3      4   64212
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64032
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _recorrerCaminoEncontrado                             7     3      4   64001
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         7     3      4   29092
                                             83 COMRAM     1     1      0
                                             40 BANK0      6     2      4
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _finalizarRecorrido                                   0     0      0   28788
                      _forzarEspejeo
                     _forzarParoAuto
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               0     0      0   12461
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 0     0      0   12461
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    22     4     18   88254
                                             83 COMRAM     1     1      0
                                            155 BANK0      3     3      0
                                              0 BANK1     18     0     18
                        _UART_printf
                             ___flge
                           _hayCruce
            _mostrarDireccionElegida
                   _seLlegoAlDestino
                            _sprintf
                      _velocidadBaja
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   59486
                                            135 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58070
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   57522
                                             97 BANK0     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38677
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6763
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1665
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     562
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _mostrarDireccionElegida                              3     3      0    1747
                                              8 COMRAM     3     3      0
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1716
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _hayCruce                                             4     1      3    4709
                                             63 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _caminoCorrecto                                       9     0      9    1811
                                             17 COMRAM     9     0      9
                   _combinarArreglos
                 _limpiarMovimientos
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     521
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _combinarArreglos                                    12     4      8     583
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _caminoCorrecto
       _combinarArreglos
       _limpiarMovimientos
     _decidirDireccion
       _UART_printf
         _UART_write
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _hayCruce
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       _mostrarDireccionElegida
         _UART_printf
           _UART_write
       _seLlegoAlDestino
         _dameLecturaAdc
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _velocidadBaja
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _finalizarRecorrido
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
       _forzarParoAuto
     _forzarEspejeo
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _forzarEspejeoDerecha
         _forzarGiroDerecha
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
       _forzarEspejeoIzquierda
         _forzarGiroIzquierda
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
     _forzarParoAuto
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _recorrerCaminoEncontrado
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarPuntoPartida
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     3E8      21       48.9%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AE      20        0.0%
DATA                 0      0     696       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 19 14:26:51 2020

                              ___fldiv@aexp 006C                                ___fldiv@bexp 006B  
                    __end_of_caminoCorrecto 5470                                ___fldiv@sign 0064  
                              ___awdiv@sign 000B                              ?_configurarAdc 0001  
                       ___wmul@multiplicand 0008                                 __CFG_BORV$3 000000  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
           comportamientoBasico@caminoFinal 02C8                                         l202 3E24  
                                       l212 3F04                                         l204 3E32  
                                       l205 3E34                                         l215 4E4E  
                                       l224 578A                                         l160 52B4  
                                       l233 50AA                                         l241 5414  
                                       l313 4964                                         l242 5428  
                                       l410 5782                                         l227 5798  
                                       l147 4D6A                                         l155 3466  
                                       l403 1FEC                                         l163 52C0  
                                       l332 546E                                         l164 52FE  
                                       l236 57B2                                         l413 56F4  
                                       l165 52CA                                         l422 5734  
                                       l406 57A8                                         l166 5300  
                                       l239 5406                                         l191 3E86  
                                       l183 3DC4                                         l416 56D2  
                                       l425 574E                                         l433 54F2  
                                       l193 3DF4                                         l185 3DD2  
                                       l329 539C                                         l186 3DD4  
                                       l442 41A0                                         l450 4ABA  
                                       l523 393A                                         l419 5714  
                                       l195 3E02                                         l612 1400  
                                       l428 5768                                         l196 3E04  
                                       l444 41CA                                         l445 41D6  
                                       l437 4120                                         l453 4AD6  
                                       l542 563C                                         l446 421E  
                                       l454 4AFC                                         l543 563E  
                                       l455 4B08                                         l456 4B4E  
                                       l553 4CF0                                         l465 4AB4  
                                       l730 5664                                         l474 4746  
                                       l539 5350                                         l387 1F96  
                                       l812 2C06                                         l708 3094  
                                       l484 4C6E                                         l733 568A  
                                       l565 12DC                                         l806 5160  
                                       l814 2C0E                                         l832 2E42  
                                       l672 16FE                                         l664 15B6  
                                       l680 3C2E                                         l681 3C1E  
                                       l850 0BCA                                         l739 4FEC  
                                       l659 16FC                                         l595 137C  
                                       l675 3C0E                                         l940 1172  
                                       l951 10B8                                         l687 3C3E  
                                       l961 56B0                                         l794 478C  
                                       l868 0402                                         l972 4EA8  
                                       l797 47CE                                         l957 4F1A  
                                       l973 4EB8                                         l894 079E  
                                       l958 4F22                                         l799 4808  
                              __CFG_CPB$OFF 000000                                         _PR2 000FCB  
                                       _PID 2E44                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         _abs 54F4  
                                       _pad 4748                                         _map 4CF2  
                              ___awmod@sign 000B                                         wreg 000FE8  
                              ___flmul@aexp 0028                                ___flmul@bexp 002D  
                  _DISTANCIA_PRIORIDAD_BAJA 010C                    _DISTANCIA_PRIORIDAD_ALTA 0114  
                              ___flmul@sign 0027                                ___flmul@temp 0032  
                              ___flmul@prod 002E                 __size_of_limpiarMovimientos 0050  
                              __CFG_LVP$OFF 000000                                        ?_PID 0001  
                              ___fltol@exp1 007B                                __CFG_WDT$OFF 000000  
                                      l1040 4010                                        ?_abs 0018  
                                      l1220 4A0E                                        l1205 48B8  
                                      l1231 4322                                        l1226 42DC  
                                      l1075 3AC2                                        l1235 55A2  
                                      l1088 3DA2                                        l1192 4684  
                                      l1506 1A08                                        l1258 4118  
                                      l1515 1AD8                                        l1531 53E2  
                                      l1516 1AC6                                        l1452 4DD6  
                                      l1630 35B2                                        l1543 2B64  
                                      l1711 556A                                        l1623 3556  
                                      l1616 34BE                                        l1705 52B0  
                                      l1545 29C4                                        l1650 5532  
                                      l1554 2A0A                                        l1490 18DC  
                                      l1642 4420                                        l1491 18A2  
                                      l1619 361A                                        l1459 4DDE  
                                      l1556 2A82                                        l1548 2988  
                                      l1557 2A70                                        l1741 525E  
                                      l1726 45C0                                        l1734 54B2  
                                      l1582 22A8                                        l1647 552A  
                                      l1575 20B2                                        l1744 57B8  
                                      l1592 23D8                                        l1584 2320  
                                      l1752 27C8                                        l1681 37AA  
                                      l1585 230E                                        l1489 18EE  
                                      l1498 1BBE                                        l1690 31EE  
                                      l1771 5610                                        l1579 2416  
                                      l1765 5106                                        l1678 37A2  
                                      l1790 504C                                        l1687 32AA  
                                      l1775 44F6                                        l1697 55DA  
                                      l1785 5044                                        ?_map 0020  
                                      ?_pad 0016                                        l8101 4E6E  
                                      l8111 3F18                                        l8103 4E7E  
                                      l8121 3F4E                                        l8113 3F28  
                                      l8201 1808                                        l9001 3540  
                                      l8105 4E88                                        l8131 3F96  
                                      l8123 3F5E                                        l8115 3F2C  
                                      l8107 3F06                                        l8211 181C  
                                      l8203 180C                                        l9011 35C0  
                                      l9003 354C                                        l8141 3FDA  
                                      l8133 3FA0                                        l8125 3F74  
                                      l8117 3F3A                                        l8109 3F0A  
                                      l8061 44F8                                        l9101 2CDA  
                                      l8301 1A6A                                        l8221 1830  
                                      l8213 1820                                        l8205 1810  
                                      l9021 3608                                        l9013 35C2  
                                      l9005 3588                                        l8135 3FBE  
                                      l8127 3F7C                                        l8143 3FE0  
                                      l8119 3F4A                                        l9031 5278  
                                      l8071 457A                                        l8063 450A  
                                      l9111 2D96                                        l9103 2CE0  
                                      l8303 1A72                                        l8311 1A96  
                                      l8231 1844                                        l8223 1834  
                                      l8215 1824                                        l8207 1814  
                                      l8151 1700                                        l9023 360A  
                                      l9015 35C6                                        l9007 3594  
                                      l8145 3FF0                                        l8137 3FCE  
                                      l8129 3F88                                        l9033 52A6  
                                      l8065 451C                                        l8081 5492  
                                      l9121 2DE4                                        l9113 2DB0  
                                      l9105 2D44                                        l8321 1AE8  
                                      l8313 1A9A                                        l8305 1A76  
                                      l8241 18BC                                        l8233 186E  
                                      l8225 1838                                        l8217 1828  
                                      l8209 1818                                        l8161 173C  
                                      l8153 170C                                        l8401 4418  
                                      l9201 0260                                        l9017 35EA  
                                      l9009 35A2                                        l9041 330C  
                                      l8147 4000                                        l8139 3FD0  
                                      l9035 52AA                                        l9027 5260  
                                      l8067 4526                                        l8075 5470  
                                      l8083 55DC                                        l9123 2DF6  
                                      l9107 2D5E                                        l9115 2DBE  
                                      l8331 1B4E                                        l8323 1AF4  
                                      l8315 1AA8                                        l8307 1A86  
                                      l8251 18FC                                        l8243 18C0  
                                      l8235 188A                                        l8227 183C  
                                      l8219 182C                                        l8171 176C  
                                      l8163 174C                                        l8155 171A  
                                      l9211 032A                                        l9019 35FA  
                                      l9051 343A                                        l9043 332C  
                                      l9029 5264                                        l8069 4544  
                                      l8077 547C                                        l8085 55E8  
                                      l9061 5128                                        l8501 3C40  
                                      l9125 2E02                                        l9117 2DD0  
                                      l9109 2D7C                                        l8341 1B96  
                                      l8333 1B5E                                        l8325 1B02  
                                      l8317 1ABE                                        l8309 1A88  
                                      l8261 193E                                        l8253 190C  
                                      l8245 18CE                                        l8237 189A  
                                      l8229 1840                                        l8181 1796  
                                      l8173 177E                                        l8165 174E  
                                      l8157 171C                                        l8421 30B6  
                                      l8405 50AC                                        l8093 5534  
                                      l8413 5024                                        l9301 078A  
                                      l9221 03AC                                        l9213 035E  
                                      l9205 0296                                        l9141 0042  
                                      l9133 0012                                        l9045 33B2  
                                      l8079 548E                                        l8087 55EC  
                                      l9063 5134                                        l8511 3C84  
                                      l8503 3C44                                        l9127 2E0A  
                                      l9119 2DDE                                        l9071 2B66  
                                      l8343 1B98                                        l8335 1B7E  
                                      l8327 1B3C                                        l8271 196C  
                                      l8263 194C                                        l8247 18D0  
                                      l8239 18B0                                        l8183 17A6  
                                      l8191 17D0                                        l8175 1780  
                                      l8159 172C                                        l8167 1756  
                                      l8431 31A2                                        l8423 310E  
                                      l8407 50BC                                        l8415 5036  
                                      l9311 0840                                        l9303 0796  
                                      l9223 03BE                                        l9231 040E  
                                      l9215 0366                                        l9207 02CA  
                                      l9151 0098                                        l9143 0066  
                                      l9135 001C                                        l9047 33F6  
                                      l9039 32AC                                        l8089 5604  
                                      l8361 476A                                        l9065 5138  
                                      l9057 5108                                        l8521 3CEC  
                                      l8513 3CA4                                        l8505 3C52  
                                      l9129 2E1A                                        l9081 2BE0  
                                      l9073 2B86                                        l8601 293C  
                                      l8345 1B9E                                        l8337 1B82  
                                      l8329 1B3E                                        l8281 19D8  
                                      l8273 1976                                        l8265 1958  
                                      l8257 1920                                        l8249 18DA  
                                      l8193 17E0                                        l8185 17B6  
                                      l8177 1786                                        l8169 1766  
                                      l8441 328A                                        l8433 31DE  
                                      l8425 3122                                        l8409 4FEE  
                                      l9401 0B0A                                        l9321 088A  
                                      l9313 0852                                        l9305 07BA  
                                      l9241 0452                                        l9225 03D2  
                                      l9209 02D0                                        l9217 0398  
                                      l9161 00C6                                        l9153 00AA  
                                      l9145 0070                                        l9137 002C  
                                      l8097 4E50                                        l8353 4CF2  
                                      l8451 568C                                        l8371 47B0  
                                      l8363 4778                                        l9067 513C  
                                      l9059 511C                                        l8531 3D62  
                                      l8523 3D1A                                        l8515 3CC2  
                                      l8507 3C72                                        l9091 2C3C  
                                      l9083 2BFA                                        l9075 2BAE  
                                      l8611 2986                                        l8603 294C  
                                      l8347 1BAC                                        l8339 1B90  
                                      l8283 19E8                                        l8267 195C  
                                      l8259 1930                                        l8275 197C  
                                      l8195 17F2                                        l8187 17C6  
                                      l8179 1794                                        l8443 329A  
                                      l8427 3130                                        l8435 3212  
                                      l8419 3096                                        l9411 0B3A  
                                      l9403 0B16                                        l9331 08C0  
                                      l9323 089A                                        l9315 0860  
                                      l9307 081E                                        l9251 04AE  
                                      l9243 0488                                        l9227 03DA  
                                      l9219 03A8                                        l9171 013A  
                                      l9155 00B6                                        l9163 00CC  
                                      l9147 0078                                        l9139 003A  
                                      l8099 4E60                                        l8453 56A8  
                                      l8373 47DC                                        l8365 4784  
                                      l8357 4748                                        l8461 394E  
                                      l8533 3D82                                        l8525 3D3A  
                                      l8517 3CCA                                        l8509 3C76  
                                      l8381 550E                                        l9093 2C44  
                                      l9085 2C16                                        l9077 2BCE  
                                      l8621 29D4                                        l8613 2992  
                                      l8605 2954                                        l8541 27E6  
                                      l8701 207C                                        l8349 1BAE  
                                      l8293 1A42                                        l8277 19A2  
                                      l8285 19F8                                        l8269 196A  
                                      l8197 1800                                        l8189 17C8  
                                      l8437 324E                                        l9421 0B94  
                                      l9405 0B1E                                        l9341 08F4  
                                      l9333 08C4                                        l9325 089E  
                                      l9309 082C                                        l9317 0868  
                                      l9261 04F2                                        l9253 04C0  
                                      l9245 0490                                        l9237 0422  
                                      l9229 03F4                                        l9173 0156  
                                      l9165 00F2                                        l9181 01A0  
                                      l9157 00BE                                        l9149 008A  
                                      l9501 56D4                                        l8447 55A4  
                                      l9431 361C                                        l8375 47F0  
                                      l8367 4798                                        l8359 4756  
                                      l8471 39A4                                        l8463 396E  
                                      l8527 3D4C                                        l8519 3CDE  
                                      l9095 2C4C                                        l9087 2C28  
                                      l9079 2BDE                                        l8623 29EA  
                                      l8631 2A1A                                        l8615 29B0  
                                      l8607 2964                                        l8551 281A  
                                      l8543 27E8                                        l8711 20D2  
                                      l8703 208C                                        l8295 1A4C  
                                      l8287 1A1E                                        l8279 19D6  
                                      l8199 1804                                        l8391 43B6  
                                      l8383 4324                                        l8439 3262  
                                      l9423 0BA4                                        l9415 0B6E  
                                      l9407 0B2E                                        l9351 0992  
                                      l9343 08F8                                        l9335 08CA  
                                      l9327 08A4                                        l9319 087C  
                                      l9271 053C                                        l9263 050A  
                                      l9255 04CE                                        l9239 0436  
                                      l9247 0494                                        l9191 022A  
                                      l9183 01C6                                        l9175 016E  
                                      l9159 00C2                                        l9511 571E  
                                      l9503 56DC                                        l9441 368A  
                                      l9433 3630                                        l8369 47AC  
                                      l8481 39F8                                        l8473 39B0  
                                      l8465 3972                                        l8457 393C  
                                      l8529 3D52                                        l9097 2C52  
                                      l9089 2C36                                        l8633 2A28  
                                      l8625 29F0                                        l8617 29B2  
                                      l8609 2978                                        l8561 284C  
                                      l8545 27F8                                        l8553 2822  
                                      l8537 27CA                                        l8801 2406  
                                      l8721 2112                                        l8705 209C  
                                      l8297 1A5A                                        l8289 1A2E  
                                      l8385 4344                                        l9425 0BAA  
                                      l9417 0B80                                        l9409 0B34  
                                      l9361 09F0                                        l9329 08B0  
                                      l9337 08D0                                        l9345 08FE  
                                      l9353 0996                                        l9273 0550  
                                      l9281 0646                                        l9265 051C  
                                      l9257 04D2                                        l9249 049C  
                                      l9177 0178                                        l9169 0128  
                                      l9601 10FE                                        l9521 0C14  
                                      l9513 0BCC                                        l9505 56F6  
                                      l9451 36B2                                        l9443 368E  
                                      l9435 3634                                        l8491 3A6C  
                                      l8483 3A0A                                        l8475 39CE  
                                      l8467 3980                                        l8459 3940  
                                      l8379 54F4                                        l9099 2CD4  
                                      l8811 45C2                                        l8643 2A92  
                                      l8651 2ADA                                        l8635 2A2C  
                                      l8627 29FA                                        l8619 29C2  
                                      l8571 2880                                        l8563 284E  
                                      l8555 2832                                        l8547 2808  
                                      l8539 27D8                                        l8731 215C  
                                      l8723 211E                                        l8715 20E6  
                                      l8707 20A2                                        l8299 1A5C  
                                      l8387 4382                                        l8395 43C2  
                                      l9419 0B8C                                        l9371 0A2E  
                                      l9363 0A00                                        l9355 09B4  
                                      l9347 0956                                        l9339 08E2  
                                      l9291 0712                                        l9283 0664  
                                      l9275 05B4                                        l9259 04E4  
                                      l9267 0524                                        l9187 01FC  
                                      l9603 1112                                        l9531 0CAC  
                                      l9523 0C38                                        l9515 0BF0  
                                      l9507 56FE                                        l9621 504E  
                                      l9453 36BA                                        l9437 3638  
                                      l8485 3A38                                        l8477 39D6  
                                      l8493 3A72                                        l8469 39A0  
                                      l8821 45EE                                        l8813 45C6  
                                      l8661 2B44                                        l8653 2AF4  
                                      l8645 2A9E                                        l8637 2A3A  
                                      l8629 2A08                                        l8581 28C6  
                                      l8565 285E                                        l8573 2888  
                                      l8557 2838                                        l8549 2818  
                                      l8901 4A06                                        l8741 21AE  
                                      l8733 2168                                        l8725 2136  
                                      l8717 20F2                                        l8709 20C2  
                                      l8805 539E                                        l8397 43D4  
                                      l8389 43AA                                        l9381 0A64  
                                      l9373 0A3E                                        l9365 0A04  
                                      l9357 09D0                                        l9349 098A  
                                      l9293 0722                                        l9285 0698  
                                      l9277 060C                                        l9269 052C  
                                      l9189 020E                                        l9533 0CCC  
                                      l9525 0C40                                        l9541 0D34  
                                      l9517 0BFE                                        l9613 113C  
                                      l9509 5716                                        l9701 27B8  
                                      l8911 425E                                        l9623 5052  
                                      l9631 53EE                                        l9463 3762  
                                      l9455 36EE                                        l9447 3694  
                                      l9439 3654                                        l8495 3A82  
                                      l8487 3A58                                        l8479 39EA  
                                      l8831 461C                                        l8823 45F6  
                                      l8815 45D4                                        l8663 2B52  
                                      l8655 2B0A                                        l8647 2AAC  
                                      l8639 2A68                                        l8591 28EE  
                                      l8583 28CA                                        l8575 2898  
                                      l8567 286E                                        l8559 283E  
                                      l8903 4A0C                                        l8751 222C  
                                      l8743 21BE                                        l8735 2178  
                                      l8727 2142                                        l8719 20FC  
                                      l8807 53AE                                        l9391 0AC0  
                                      l9383 0A70                                        l9375 0A46  
                                      l9367 0A14                                        l9359 09E2  
                                      l9295 0732                                        l9287 06CA  
                                      l9279 0640                                        l9199 0246  
                                      l9615 1160                                        l9607 1120  
                                      l9551 0DDA                                        l9543 0D56  
                                      l9535 0CDA                                        l9527 0C4E  
                                      l9519 0C10                                        l9711 4EFE  
                                      l9801 4F8C                                        l8921 42CA  
                                      l8913 428C                                        l9625 5076  
                                      l9633 53F0                                        l9465 3774  
                                      l9449 36AA                                        l8497 3AA2  
                                      l8489 3A5A                                        l8841 4656  
                                      l8833 4624                                        l8825 45FA  
                                      l8817 45DC                                        l8665 2B58  
                                      l8657 2B24                                        l8649 2AD6  
                                      l8577 28AE                                        l8569 287E  
                                      l8761 22A6                                        l8753 2262  
                                      l8745 21DA                                        l8737 2184  
                                      l8729 214E                                        l8681 200A  
                                      l9385 0A76                                        l9393 0AC6  
                                      l9377 0A54                                        l9369 0A26  
                                      l9297 0766                                        l9289 06E0  
                                      l9481 4466                                        l9473 4422  
                                      l9609 112E                                        l9561 0E70  
                                      l9553 0DFE                                        l9545 0D66  
                                      l9529 0C72                                        l9705 4EBA  
                                      l9721 4D96                                        l9713 4D6C  
                                      l9803 4F98                                        l9811 5302  
                                      l8923 431A                                        l8915 429C  
                                      l8907 4220                                        l9627 507A  
                                      l9635 5402                                        l9467 3786  
                                      l9459 3724                                        l8851 467C  
                                      l8843 4658                                        l8835 4632  
                                      l8827 4602                                        l8819 45E0  
                                      l8667 2B5A                                        l8659 2B40  
                                      l8595 2902                                        l8579 28BE  
                                      l8587 28DE                                        l8771 2306  
                                      l8763 22B8                                        l8755 2270  
                                      l8747 21E6                                        l8739 2194  
                                      l8691 2050                                        l8683 201A  
                                      l8675 1FEE                                        l8931 5582  
                                      l9395 0AD8                                        l9387 0A9C  
                                      l9379 0A5C                                        l9299 0776  
                                      l9483 447E                                        l9475 444C  
                                      l9571 0F26                                        l9563 0E94  
                                      l9555 0E30                                        l9547 0D98  
                                      l9539 0D22                                        l9707 4EC2  
                                      l9651 573E                                        l9731 4DCA  
                                      l9723 4DA4                                        l9715 4D74  
                                      l9643 56B2                                        l9805 4FC4  
                                      l9813 530E                                        l8925 4320  
                                      l8917 42AA                                        l8909 424E  
                                      l9901 38B2                                        l9493 5786  
                                      l9637 5404                                        l9629 53E6  
                                      l8845 465E                                        l8837 4638  
                                      l8829 4614                                        l8861 4824  
                                      l8597 291C                                        l8589 28EE  
                                      l8781 2374                                        l8765 22C6  
                                      l8757 228E                                        l8749 2202  
                                      l8693 2056                                        l8685 202A  
                                      l8677 1FFA                                        l8933 5592  
                                      l9397 0AF2                                        l9389 0AB8  
                                      l9485 449A                                        l9573 0F3C  
                                      l9581 0FA6                                        l9565 0EDC  
                                      l9549 0DA8                                        l9709 4ED0  
                                      l9821 5666                                        l9661 5754  
                                      l9653 5742                                        l9733 4DD0  
                                      l9725 4DAA                                        l9717 4D86  
                                      l9741 3DBE                                        l9645 56BA  
                                      l9807 4FD2                                        l9815 531E  
                                      l8919 42BC                                        l9639 5416  
                                      l8839 464E                                        l8847 4664  
                                      l8871 4858                                        l8863 4828  
                                      l8855 480A                                        l8599 292C  
                                      l8791 23DC                                        l8775 2330  
                                      l8783 2378                                        l8767 22CA  
                                      l8759 2298                                        l8695 205C  
                                      l8687 203A                                        l8679 2008  
                                      l8951 407E                                        l8943 403E  
                                      l9399 0AF8                                        l9487 44AC  
                                      l9479 4458                                        l9591 1088  
                                      l9583 0FD4                                        l9575 0F4A  
                                      l9559 0E4C                                        l9495 5640  
                                      l9663 5758                                        l9655 5746  
                                      l9647 5736                                        l9727 4DC0  
                                      l9719 4D8E                                        l9743 3DE2  
                                      l9751 3E54                                        l9735 3DA6  
                                      l9671 2418                                        l9831 2F80  
                                      l9823 2E44                                        l9809 4FD6  
                                      l9817 5322                                        l9921 38C2  
                                      l8849 4674                                        l8881 4892  
                                      l8873 4860                                        l8865 4836  
                                      l8857 480E                                        l8793 23EC  
                                      l8785 2392                                        l8777 233C  
                                      l8769 22D8                                        l8697 206A  
                                      l8689 2040                                        l8929 556C  
                                      l8961 40AE                                        l8953 408C  
                                      l8945 4068                                        l8937 4012  
                                      l9489 44D4                                        l9577 0F7A  
                                      l9569 0F14                                        l9497 576A  
                                      l9665 575C                                        l9657 574A  
                                      l9649 573A                                        l9729 4DC8  
                                      l9761 3EF4                                        l9753 3E96  
                                      l9745 3E12                                        l9737 3DB6  
                                      l9681 24F6                                        l9673 2438  
                                      l9841 2FF2                                        l9833 2F88  
                                      l9825 2E4E                                        l9819 5340  
                                      l9931 3916                                        l9923 38D2  
                                      l8875 486E                                        l8883 4898  
                                      l8867 483E                                        l8859 481C  
                                      l8891 4966                                        l8795 23FA  
                                      l8787 23A6                                        l8779 234A  
                                      l8699 206C                                        l8971 40D8  
                                      l8963 40B8                                        l8947 406A  
                                      l8939 402A                                        l9587 1042  
                                      l9771 5220                                        l9499 5772  
                                      l9667 5760                                        l9659 5750  
                                      l9755 3EA8                                        l9747 3E42  
                                      l9739 3DB8                                        l9691 2686  
                                      l9683 2514                                        l9675 2482  
                                      l9851 3056                                        l9835 2FAA  
                                      l9843 2FFE                                        l9827 2E8E  
                                      l9925 38E6                                        l8885 48A8  
                                      l8877 4884                                        l8869 4850  
                                      l8893 4994                                        l8797 23FC  
                                      l8789 23C0                                        l8973 40E8  
                                      l8949 407A                                        l9589 1054  
                                      l9597 10CC                                        l9773 5228  
                                      l8981 346A                                        l9669 5764  
                                      l9861 54B4                                        l9757 3EE2  
                                      l9693 26B8                                        l9677 2496  
                                      l9853 305E                                        l9845 3006  
                                      l9837 2FD6                                        l9829 2F50  
                                      l9781 4AB6                                        l9927 38F6  
                                      l9871 3800                                        l8887 48B0  
                                      l8879 488C                                        l8895 49A4  
                                      l8799 2402                                        l8975 40F8  
                                      l8959 40A4                                        l9599 10F0  
                                      l9775 5230                                        l8983 347A  
                                      l9863 54E6                                        l9759 3EE2  
                                      l9695 2724                                        l9687 254C  
                                      l9679 24D2                                        l9847 301E  
                                      l9855 306A                                        l9839 2FEA  
                                      l9783 4AC2                                        STR_1 7F63  
                                      STR_2 7F4A                                        l9953 3938  
                                      l9929 3906                                        l9881 3842  
                                      l9873 3806                                        l9945 3922  
                                      l9961 5638                                        l8897 49D2  
                                      l8977 4108                                        l8969 40CC  
                                      l9777 524C                                        l9769 520E  
                                      l8993 34F8                                        l8985 3488  
                                      l9865 54EE                                        l9697 2758  
                                      l9689 261A                                        l9857 3072  
                                      l9849 3046                                        l9785 4ADE  
                                      STR_3 7E44                                        STR_4 7FA5  
                                      l9947 3932                                        l9883 3874  
                                      l9875 3808                                        l9867 37AC  
                                      l9971 4C96                                        l8899 49E2  
                                      l8995 3500                                        l8987 34CE  
                                      l9699 2794                                        l9859 3082  
                                      l9787 4AF4                                        l9795 4B14  
                                      STR_5 7F92                                        STR_6 7FB7  
                                      l9885 387A                                        l9877 383A  
                                      l9869 37CE                                        l9973 4CA6  
                                      l9965 4C72                                        l9957 5612  
                                      l8997 350C                                        l8989 34E4  
                                      STR_7 7FD3                                        STR_8 7FC8  
                                      l9887 387C                                        l9879 3840  
                                      l9967 4C76                                        l9959 5616  
                                      l8999 353E                                        l9983 3AC4  
                                      STR_9 7FDD                                        l9897 388C  
                                      l9969 4C86                                        l9977 4CB6  
                                      l9985 3BDE                                        l9899 389E  
                                      l9987 3BEE                                        l9989 3BFE  
                                      l9999 542A                                        u8100 5564  
                                      _RCIF 007CF5                                        u8101 555E  
                                      u8110 5566                                        u8040 450A  
                                      u9000 3D62                                        u8200 171A  
                                      u8120 4E6E                                        u8041 4506  
                                      u9001 3D5E                                        u8201 1716  
                                      u8121 4E6A                                        u8050 451C  
                                      u9010 27E6                                        u8210 172C  
                                      u8130 4EA8                                        u8051 4518  
                                      u9011 27E2                                        u8211 1728  
                                      u8131 4EA4                                        u8140 3F18  
                                      u8060 4544                                        u9100 2986  
                                      u9020 27F8                                        u8300 1886  
                                      u8220 173C                                        u8141 3F14  
                                      u8061 4540                                        u9101 2982  
                                      u9021 27F4                                        u8301 1880  
                                      u8221 1738                                        u8150 3F3A  
                                      u8070 457A                                        u9110 29B0  
                                      u9030 2808                                        u8310 1888  
                                      u8230 177E                                        u8151 3F36  
                                      u8071 4576                                        u9111 29AC  
                                      u9031 2804                                        u8231 177A  
                                      u8160 3F74                                        u8080 54B2  
                                      u9200 2AAC                                        u9120 29D4  
                                      u9040 284C                                        u8400 19A2  
                                      u8320 18B0                                        u8240 1794  
                                      u8161 3F70                                        u8081 54AE  
                                      u9201 2AA8                                        u9121 29D0  
                                      u9041 2848                                        u8401 199E  
                                      u8321 18AC                                        u8241 1790  
                                      u8170 3F96                                        u8090 5604  
                                      u9210 2AF4                                        u9130 29EA  
                                      u9050 285E                                        u8410 19E8  
                                      u8330 18CE                                        u8250 17A6  
                                      u8171 3F92                                        u8091 5600  
                                      u9211 2AF0                                        u9131 29E6  
                                      u9051 285A                                        u8411 19E4  
                                      u8331 18CA                                        u8251 17A2  
                                      u8180 3FBE                                        u9220 2B24  
                                      u9140 2A08                                        u9060 286E  
                                      u9300 20C2                                        u8500 1AD4  
                                      u8420 1A1E                                        u8340 18EE  
                                      u8260 17B6                                        u8181 3FBA  
                                      u9221 2B20                                        u9141 2A04  
                                      u9061 286A                                        u9301 20BE  
                                      u8501 1AD0                                        u8421 1A1A  
                                      u8341 18EA                                        u8261 17B2  
                                      u8190 3FF0                                        u9230 2B52  
                                      u9150 2A28                                        u9070 28AE  
                                      u9310 20D2                                        u8510 1AE8  
                                      u8430 1A2E                                        u8350 18FC  
                                      u8270 17F2                                        u8191 3FEC  
                                      u9231 2B4E                                        u9151 2A24  
                                      u9071 28AA                                        u9311 20CE  
                                      u8511 1AE4                                        u8431 1A2A  
                                      u8351 18F8                                        u8271 17EE  
                                      u8600 4778                                        u9160 2A3A  
                                      u9080 28EE                                        u9400 2392  
                                      u9320 224C                                        u9240 2008  
                                      u8520 1B02                                        u8440 1A5A  
                                      u8360 190C                                        u8280 1800  
                                      u8601 4774                                        u9161 2A36  
                                      u9081 28EA                                        u9401 238E  
                                      u9241 2004                                        u8521 1AFE  
                                      u8441 1A56                                        u8361 1908  
                                      u8281 17FC                                        u8610 47CE  
                                      u9170 2A68                                        u9090 2964  
                                      u9410 23C0                                        u9330 22A6  
                                      u9250 201A                                        u8530 1B3C  
                                      u8450 1A6A                                        u8370 193E  
                                      u8290 186E                                        u8611 47CA  
                                      u9171 2A64                                        u9091 2960  
                                      u9411 23BC                                        u9331 22A2  
                                      u9251 2016                                        u8531 1B38  
                                      u8451 1A66                                        u8371 193A  
                                      u8291 186A                                        u8620 47DC  
                                      u9500 4836                                        u9180 2A7E  
                                      u9420 23FA                                        u9340 22C6  
                                      u9260 202A                                        u8540 1B4E  
                                      u8460 1A86                                        u8380 194C  
                                      u8700 4410                                        u8621 47D8  
                                      u9501 4832                                        u9181 2A7A  
                                      u9421 23F6                                        u9341 22C2  
                                      u9325 2242                                        u9261 2026  
                                      u8541 1B4A                                        u8461 1A82  
                                      u8381 1948                                        u8630 550E  
                                      u9430 45D4                                        u9510 4850  
                                      u9190 2A92                                        u9350 22D8  
                                      u9270 206A                                        u8550 1B5E  
                                      u8470 1A96                                        u8390 196A  
                                      u8710 50F4                                        u8631 550A  
                                      u9431 45D0                                        u9511 484C  
                                      u9191 2A8E                                        u9351 22D4  
                                      u9271 2066                                        u8551 1B5A  
                                      u8471 1A92                                        u8391 1966  
                                      u9600 42AA                                        u9440 45EE  
                                      u9520 486E                                        u9360 2306  
                                      u9280 207C                                        u8560 1B7E  
                                      u8480 1AA8                                        u8640 4364  
                                      u8800 319E                                        u8720 5106  
                                      u9601 42A6                                        u9441 45EA  
                                      u9521 486A                                        u9361 2302  
                                      u9281 2078                                        u8561 1B7A  
                                      u8481 1AA4                                        u8801 319A  
                                      u8721 5102                                        u9610 42CA  
                                      u9450 4614                                        u9530 4884  
                                      u9370 231C                                        u9290 208C  
                                      u8570 1B90                                        u8490 1ABE  
                                      u8650 4382                                        u8810 31C2  
                                      u8730 501E                                        u9611 42C6  
                                      u9451 4610                                        u9531 4880  
                                      u9371 2318                                        u9291 2088  
                                      u8571 1B8C                                        u8491 1ABA  
                                      u8651 437E                                        u8731 5018  
                                      u9620 431A                                        u9460 4632  
                                      u9540 48A8                                        u9380 2330  
                                      u8580 1BAC                                        u9700 40F8  
                                      u8660 43AA                                        u8820 31DE  
                                      u8740 5020                                        u9621 4316  
                                      u8901 39AA                                        u9461 462E  
                                      u9541 48A4                                        u9381 232C  
                                      u8581 1BA8                                        u9701 40F4  
                                      u8661 43A6                                        u8645 435A  
                                      u8821 31DA                                        u8717 50EA  
                                      u8590 4756                                        u8910 39CE  
                                      u9470 464E                                        u9550 4994  
                                      u9390 234A                                        u9630 5582  
                                      u8670 43D4                                        u8830 3232  
                                      u8750 5036                                        u9710 347A  
                                      u8591 4752                                        u8911 39CA  
                                      u9471 464A                                        u9551 4990  
                                      u9391 2346                                        u9631 557E  
                                      u8671 43D0                                        u8815 31B8  
                                      u8751 5032                                        u9711 3476  
                                      u8920 39F8                                        u9480 4674  
                                      u9560 49D2                                        u9640 402A  
                                      u8840 324E                                        u8760 30E0  
                                      u9800 3608                                        u9720 3488  
                                      u8921 39F4                                        u9481 4670  
                                      u9561 49CE                                        u9641 4026  
                                      u8841 324A                                        u9801 3604  
                                      u9721 3484                                        u9810 5278  
                                      u8930 3A38                                        u9490 481C  
                                      u9570 4A06                                        u9650 405E  
                                      u8690 440E                                        u8850 328A  
                                      u8770 310E                                        u9730 34E4  
                                      u9811 5274                                        u8931 3A34  
                                      u9491 4818                                        u9571 4A02  
                                      u8691 4408                                        u8851 3286  
                                      u8835 3228                                        u8771 310A  
                                      u9731 34E0                                        u9580 424E  
                                      u8860 55D4                                        u9820 52A6  
                                      u8940 3A82                                        u9900 2BDE  
                                      u9660 408C                                        u8780 3130  
                                      u9740 353A                                        u9581 424A  
                                      u8861 55CE                                        u9821 52A2  
                                      u8941 3A7E                                        u9901 2BDA  
                                      u9661 4088                                        u8685 43E6  
                                      u8781 312C                                        u8765 30D6  
                                      u9741 3536                                        u9590 428C  
                                      u8870 55D6                                        u8950 3C52  
                                      u9910 2BFA                                        u9670 40A0  
                                      u9750 3584                                        u9830 332C  
                                      u9591 4288                                        u8951 3C4E  
                                      u9911 2BF6                                        u9671 409C  
                                      u9655 4054                                        u9751 3580  
                                      u9831 3328                                        u8880 394E  
                                      u8960 3C84                                        u9920 2C28  
                                      u9680 40C8                                        u9760 35A2  
                                      u8881 394A                                        u8961 3C80  
                                      u9921 2C24                                        u9681 40C4  
                                      u9761 359E                                        u8890 3980  
                                      u8970 3CC2                                        u9930 2C36  
                                      u9690 40E8                                        u9770 35B2  
                                      u8891 397C                                        u8971 3CBE  
                                      u9931 2C32                                        u9691 40E4  
                                      u8795 3144                                        u9771 35AE  
                                      u9860 511C                                        u8980 3CEC  
                                      u9940 2D5E                                        u8796 314E  
                                      u9780 35C0                                        u9861 5118  
                                      u8981 3CE8                                        u9941 2D5A  
                                      u8797 315E                                        u9781 35BC  
                                      u9845 33C6                                        u8990 3D1A  
                                      u9950 2D7C                                        u9870 2B96  
                                      u9790 35FA                                        u9846 33D0  
                                      u8991 3D16                                        u9951 2D78  
                                      u9871 2B90                                        u9791 35F6  
                                      u9855 340A                                        u9847 33E0  
                                      u9960 2D96                                        u9880 2B98  
                                      u9856 3414                                        u9961 2D92  
                                      u9857 3424                                        u9970 2DB0  
                                      u9890 2BAE                                        u9971 2DAC  
                                      u9891 2BAA                                        u9980 2DBE  
                                      u9981 2DBA                                        u9990 2DD0  
                                      u9991 2DCC        comportamientoBasico@caminoEncontrado 0138  
                          ??_forzarParoAuto 0006                                        abs@a 0018  
                                      _dbuf 0141                                        _atoi 361C  
                                      _ctoa 5108                                        _main 4B50  
                                      _dtoa 2B66                                        _prec 0134  
                                      _nout 0130                                        pad@i 001D  
                                      pad@p 001A                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf1 000FE7                                        indf2 000FDF  
                                      fsr1l 000FE1                                        pad@w 001F  
                                      map@x 0020                                        fsr2l 000FD9  
                                      btemp 005A                               ___fpclassifyf 4324  
                  __end_of_decidirDireccion 1700                                        prodh 000FF4  
                                      prodl 000FF3                                        start 000E  
                             __CFG_IESO$OFF 000000                             ___fldiv@new_exp 0065  
                              _tolower$1574 0012                               __CFG_MCLRE$ON 000000  
                             ?_leerSensores 0001                                ___param_bank 000000  
                                     ??_PID 0088                             ?_caminoCorrecto 0012  
                                     ??_abs 001A                                       ??_map 0034  
                                     ??_pad 001C                             ??_velocidadBaja 0054  
                             __CFG_PLLDIV$1 000000                              __CFG_CCP2MX$ON 000000  
                                     l10001 5436                                       l10003 545A  
                                     l10011 414C                                       l10021 41A8  
                                     l10013 4166                                       l10005 411C  
                                     l10023 41C2                                       l10015 417C  
                                     l10007 4128                                       l10031 41E2  
                                     l10041 117C                                       l10017 418C  
                                     l10009 4140                                       l10051 11E0  
                                     l10043 1194                                       l10019 4190  
                                     l10301 157A                                       l10061 1246  
                                     l10053 11E8                                       l10045 11AC  
                                     l10311 163A                                       l10303 1592  
                                     l10151 13BA                                       l10055 1202  
                                     l10047 11C4                                       l10039 1174  
                                     l10321 16BE                                       l10305 15AA  
                                     l10313 164A                                       l10153 13C6  
                                     l10081 1316                                       l10065 126A  
                                     l10057 1212                                       l10073 12A2  
                                     l10049 11D0                                       l10401 4BF4  
                                     l10323 16F0                                       l10315 167C  
                                     l10307 15DA                                       l10235 1456  
                                     l10171 13F8                                       l10147 1380  
                                     l10091 136C                                       l10083 1336  
                                     l10067 127E                                       l10059 1232  
                                     l10075 12DC                                       l10411 4C4E  
                                     l10403 4C12                                       l10325 16F8  
                                     l10317 1684                                       l10309 15DE  
                                     l10237 1476                                       l10149 139A  
                                     l10085 133E                                       l10077 12F4  
                                     l10413 4C52                                       l10405 4C30  
                                     l10341 4686                                       l10501 1C2C  
                                     l10319 16B6                                       l10191 1424  
                                     l10167 13CE                                       l10087 135C  
                                     l10079 130E                                       l10407 4C38  
                                     l10415 4C58                                       l10351 46DE  
                                     l10503 1C3C                                       l10511 1C5E  
                                     l10423 52B8                                       l10441 4E18  
                                     l10433 4DE0                                       l10281 14CC  
                                     l10249 1498                                       l10193 1442  
                                     l10169 13EC                                       l10089 1360  
                                     l10409 4C3C                                       l10353 46FC  
                                     l10361 471E                                       l10345 46B4  
                                     l10601 1EB2                                       l10513 1C6E  
                                     l10505 1C44                                       l10417 52B4  
                                     l10451 4E48                                       l10443 4E40  
                                     l10435 4DE0                                       l10291 152C  
                                     l10195 144E                                       l10363 4722  
                                     l10355 4700                                       l10347 46D2  
                                     l10371 4A30                                       l10611 1F0C  
                                     l10603 1EC2                                       l11171 1D72  
                                     l10531 1D16                                       l10515 1C84  
                                     l10507 1C50                                       l10427 52D4  
                                     l10453 4E4A                                       l10445 4E42  
                                     l10437 4DE2                                       l10189 1404  
                                     l10285 14D4                                       l11181 12BE  
                                     l10293 1536                                       l10365 472A  
                                     l10357 4708                                       l10349 46D6  
                                     l10381 4A7C                                       l10373 4A4E  
                                     l11173 1F70                                       l10621 1F52  
                                     l10605 1ED2                                       l10541 1D3E  
                                     l10533 1D26                                       l10517 1C94  
                                     l10509 1C54                                       l10525 1CAC  
                                     l10461 48BE                                       l10455 4E4C  
                                     l10447 4E44                                       l10439 4DE4  
                                     l10295 1546                                       l11183 14F2  
                                     l10279 14A8                                       l10287 1510  
                                     l11175 4B28                                       l10359 470C  
                                     l10391 4AA6                                       l10383 4A84  
                                     l10375 4A52                                       l10367 4A10  
                                     l10631 1FCE                                       l10607 1EFA  
                                     l10615 1F2A                                       l10551 1D5A  
                                     l10543 1D46                                       l10535 1D2E  
                                     l10527 1CB0                                       l10519 1C9C  
                                     l11167 4914                                       l10463 48CE  
                                     l10471 48FE                                       l10449 4E46  
                                     l11185 3450                                       l10297 154E  
                                     l10289 1520                                       l10393 579A  
                                     l11177 41F8                                       l10385 4A88  
                                     l10377 4A5A                                       l10633 1FD2  
                                     l10617 1F3C                                       l10609 1F00  
                                     l10561 1DDC                                       l10553 1DA0  
                                     l10545 1D4A                                       l10537 1D32  
                                     l10529 1D06                                       l10625 1F5A  
                                     l11169 52E8                                       l10457 57AA  
                                     l10481 5352                                       l10465 48DE  
                                     l10473 493A                                       l10801 4B5E  
                                     l11187 36D8                                       l10299 1576  
                                     l10395 579E                                       l11179 3E68  
                                     l10379 4A78                                       l10387 4A9A  
                                     l10635 1FE8                                       l10619 1F4E  
                                     l10563 1DF2                                       l10555 1DB0  
                                     l10547 1D52                                       l10539 1D3A  
                                     l10627 1F9E                                       l10491 1BC0  
                                     l10483 5356                                       l10475 4958  
                                     l10467 48EE                                       l10459 48BA  
                                     l10811 4B68                                       l10803 4B60  
                                     l11189 4CCA                                       l10397 57A2  
                                     l10389 4A9E                                       l10629 1FB4  
                                     l10565 1E06                                       l10557 1DC0  
                                     l10573 1E16                                       l10493 1BD8  
                                     l10485 536C                                       l10821 4B72  
                                     l10813 4B6A                                       l10805 4B62  
                                     l10399 4BE6                                       l10591 1E7E  
                                     l10575 1E28                                       l10567 1E0C  
                                     l10559 1DD2                                       l10495 1BF2  
                                     l10487 5382                                       l10831 4B80  
                                     l10823 4B74                                       l10815 4B6C  
                                     l10807 4B64                                       l10593 1E92  
                                     l10585 1E58                                       l10577 1E38  
                                     l10569 1E10                                       l10497 1C04  
                                     l10489 5398                                       l10841 4BB6  
                                     l10833 4B86                                       l10825 4B76  
                                     l10817 4B6E                                       l10809 4B66  
                                     l10595 1E98                                       l10587 1E6A  
                                     l10579 1E4A                                       l10499 1C16  
                                     l10843 4BC6                                       l10851 4BCE  
                                     l10835 4B8C                                       l10827 4B78  
                                     l10819 4B70                                       l10597 1E9E  
                                     l10589 1E7A                                       l10853 4BD2  
                                     l10845 4BCA                                       l10837 4B90  
                                     l10829 4B7A                                       l10599 1EA2  
                                     l10855 4BDA                                       l10839 4BA4  
                                     l10791 4B50                                       l10793 4B56  
                                     l10795 4B58                                       l10797 4B5A  
                                     l10799 4B5C                               ___fltol@sign1 007A  
                           __end_of___aldiv 4012                             __end_of___aodiv 3AC4  
                                     ?_atoi 000D                                       ?_ctoa 0021  
                           __end_of___fladd 1BC0                                       ?_main 0001  
                                     ?_dtoa 0021                             __end_of___aomod 3DA4  
                           __end_of___fldiv 2B66                             __end_of___awdiv 4686  
                           __end_of___flneg 55A4                                       STR_10 7FE6  
                                     STR_11 7ECB                                       STR_20 7E88  
                                     STR_12 7E0C                                       STR_21 7FEC  
                                     STR_13 7DCD                                       STR_22 7FF4  
                                     STR_14 7E66                                       STR_31 7FFC  
                                     STR_15 7F7B                                       STR_16 7EEB  
                                     STR_25 7FF0                                       STR_17 7EAA  
                                     STR_26 7FF8                                       STR_18 7F2B  
                                     STR_19 7F0B                             __end_of___awmod 48BA  
                                     STR_29 7FFC                             __end_of___flmul 2418  
                           __end_of___flsub 53E4                             __end_of___fltol 411A  
                                     u10000 2DDE                                       u10001 2DDA  
                                     u10010 2DF6                                       u10011 2DF2  
                                     u10100 01C6                                       u10020 003A  
                                     u10101 01C2                                       u10021 0036  
                                     u10110 01F6                                       u10030 008A  
                                     u10111 01F0                                       u10031 0086  
                                     u10200 041E                                       u10120 01F8  
                                     u10040 0098                                       u11000 4DC0  
                                     u10201 041A                                       u10041 0094  
                                     u11001 4DBC                                       u10210 0436  
                                     u10130 020E                                       u10050 00AA  
                                     u11010 3DD2                                       u10211 0432  
                                     u10131 020A                                       u10051 00A6  
                                     u11011 3DCE                                       u10300 0664  
                                     u10220 0452                                       u10140 0292  
                                     u10060 00F2                                       u11100 3E96  
                                     u11020 3DE2                                       u10301 0660  
                                     u10221 044E                                       u10141 028E  
                                     u10061 00EE                                       u11101 3E92  
                                     u11021 3DDE                                       u11110 4FEC  
                                     u10310 06CA                                       u10230 0488  
                                     u10150 0326                                       u10070 0122  
                                     u11030 3DF0                                       u11111 4FE8  
                                     u10311 06C6                                       u10231 0484  
                                     u10151 0322                                       u10071 011C  
                                     u11031 3DEC                                       u11120 5340  
                                     u11200 383A                                       u10400 088A  
                                     u10320 0712                                       u10240 04AE  
                                     u10160 0398                                       u10080 0124  
                                     u11040 3E02                                       u12000 4BC6  
                                     u11121 533C                                       u11201 3836  
                                     u10401 0886                                       u10321 070E  
                                     u10241 04AA                                       u10161 0394  
                                     u11041 3DFE                                       u12001 4BC2  
                                     u11210 3874                                       u10410 08E2  
                                     u10330 0722                                       u10250 04C0  
                                     u10170 03BE                                       u10090 013A  
                                     u11050 3E12                                       u11130 2FAA  
                                     u11211 3870                                       u10411 08DE  
                                     u10331 071E                                       u10251 04BC  
                                     u10171 03BA                                       u10091 0136  
                                     u11051 3E0E                                       u11131 2FA6  
                                     u11220 388C                                       u10500 0B0A  
                                     u10420 09B4                                       u10340 078A  
                                     u10260 04CE                                       u10180 03D2  
                                     u11300 1194                                       u11060 3E20  
                                     u11140 2FD6                                       u11221 3888  
                                     u10501 0B06                                       u10421 09B0  
                                     u10341 0786                                       u10261 04CA  
                                     u10181 03CE                                       u11301 1190  
                                     u11061 3E1C                                       u11141 2FD2  
                                     u11230 389E                                       u10510 0B68  
                                     u10430 09D0                                       u10350 082C  
                                     u10270 04E4                                       u10190 03F4  
                                     u11310 11AC                                       u11070 3E32  
                                     u11150 301E                                       u11231 389A  
                                     u10511 0B62                                       u10431 09CC  
                                     u10351 0828                                       u10271 04E0  
                                     u10191 03F0                                       u11311 11A8  
                                     u11071 3E2E                                       u11151 301A  
                                     u11240 38D2                                       u10600 3786  
                                     u10520 0B6A                                       u10440 09E2  
                                     u10360 0840                                       u10280 04F2  
                                     u11400 1336                                       u11320 11C4  
                                     u11080 3E42                                       u11160 3046  
                                     u11241 38CE                                       u10601 3782  
                                     u10441 09DE                                       u10361 083C  
                                     u10281 04EE                                       u11401 1332  
                                     u11321 11C0                                       u11081 3E3E  
                                     u11161 3042                                       u12017 1F18  
                                     u11250 3906                                       u10530 0B80  
                                     u10450 09F0                                       u10370 0852  
                                     u10290 051C                                       u10610 444C  
                                     u11410 135C                                       u11330 11E0  
                                     u11170 54E6                                       u11090 3E50  
                                     u11251 3902                                       u10531 0B7C  
                                     u10451 09EC                                       u10371 084E  
                                     u10291 0518                                       u10611 4448  
                                     u11411 1358                                       u11331 11DC  
                                     u12107 5708                                       u11171 54E2  
                                     u11091 3E4C                                       u12027 1FC0  
                                     u11260 3932                                       u11180 37CE  
                                     u10540 3654                                       u10460 0A26  
                                     u10380 0860                                       u10620 447E  
                                     u10700 0D1C                                       u11500 1546  
                                     u11420 139A                                       u11340 1202  
                           ___awdiv@divisor 0008                                       u11261 392E  
                                     u11181 37CA                                       u10541 3650  
                                     u10461 0A22                                       u10381 085C  
                                     u10621 447A                                       u10701 0D16  
                                     u11501 1542                                       u11421 1396  
                                     u11341 11FE                                       u12117 56E6  
                                     u12037 4AC8                                       u11190 3800  
                                     u11270 5638                                       u10550 368A  
                                     u10470 0A54                                       u10390 087C  
                                     u10630 449A                                       u10710 0D1E  
                                     u11510 1576                                       u11430 13BA  
                                     u11350 1232                                       u11191 37FC  
                                     u11271 5634                                       u10551 3686  
                                     u10471 0A50                                       u10391 0878  
                                     u10631 4496                                       u11511 1572  
                                     u11431 13B6                                       u11351 122E  
                                     u12127 5778                                       u12047 4AE8  
                                     u10560 36A6                                       u10480 0AD8  
                                     u10640 44AC                                       u10800 103C  
                                     u10720 0D34                                       u11520 1592  
                                     u11440 13EC                                       u11360 1266  
                                     u11280 4140                                       u11600 4746  
                                     _T1CON 000FCD                                       u10561 36A2  
                                     u10481 0AD4                                       u10641 44A8  
                                     u10801 1036                                       u10721 0D30  
                                     u11521 158E                                       u11441 13E8  
                                     u11361 1262                                       u12137 5728  
                                     u12057 4158                                       u11281 413C  
                                     u11601 4742                                       u10570 375C  
                                     u10490 0AF2                                       u10650 44D4  
                                     u10810 103E                                       u10730 0D66  
                                     u11530 15AA                                       u11450 1424  
                                     u11370 129E                                       u11290 418C  
                                     u11610 4A2C                                       u12147 53E8  
                                     u10571 3756                                       u10491 0AEE  
                                     u10651 44D0                                       u10731 0D62  
                                     u11531 15A6                                       u11451 1420  
                                     u11371 129A                                       u11291 4188  
                                     u12067 416E                                       u11611 4A28  
                                     u10660 5798                                       u10580 375E  
                                     u10820 1054                                       u10740 0DA8  
                                     u11540 167C                                       u11460 1442  
                                     u11380 12F4                                       u10900 24B6  
                                     u11620 4A4E                                       u11700 1C16  
                                     u10661 5794                                       u10821 1050  
                                     u10741 0DA4                                       u11541 1678  
                                     u11461 143E                                       u11381 12F0  
                                     u12077 41B4                                       u11621 4A4A  
                                     u11701 1C12                                       u10590 3774  
                                     u10830 10F0                                       u10750 0DFE  
                                     u10670 0BF0                                       u11550 16B6  
                                     u11470 1476                                       u11390 130E  
                                     u10910 24D2                                       u11630 4A78  
                                     u11710 1C2C                                       u10591 3770  
                                     u10831 10EC                                       u10751 0DFA  
                                     u10671 0BEC                                       u11551 16B2  
                                     u11471 1472                                       u11391 130A  
                                     u12087 56C4                                       u10911 24CE  
                                     u11631 4A74                                       u11711 1C28  
                                     u10840 5072                                       u10760 0E70  
                                     u10680 0C38                                       u11560 16F0  
                                     u11480 1494                                       u10920 2514  
                                     u11640 4AB4                                       u11800 1E4A  
                                     u11720 1C6E                                       u10761 0E6C  
                                     u10681 0C34                                       u11561 16EC  
                                     u11481 1490                                       u12097 3DBA  
                                     u10921 2510                                       u10905 24AC  
                                     u11641 4AB0                                       u11801 1E46  
                                     u11721 1C6A                                       u10850 509A  
                                     u10770 0E94                                       u10690 0C72  
                                     u11490 1520                                       u10930 261A  
                                     u11650 4C12                                       u11570 46B0  
                                     u11810 1E6A                                       u11730 1C84  
                                     u10771 0E90                                       u10691 0C6E  
                                     u11491 151C                                       u10931 2616  
                                     u11651 4C0E                                       u11571 46AC  
                                     u11811 1E66                                       u11731 1C80  
                                     u10860 50AA                                       u10780 0F26  
                                     u10940 26B8                                       u11660 4C30  
                                     u11580 46D2                                       u11820 1E7A  
                                     u11740 1D26                                       u10861 50A6  
                                     u10781 0F22                                       u10941 26B4  
                                     u11661 4C2C                                       u11581 46CE  
                                     u11821 1E76                                       u11741 1D22  
                                     u10870 5414                                       u10790 0FD4  
                                     u10950 2778                                       u11670 4C6E  
                                     u11590 46FC                                       u11830 1EC2  
                                     u11750 1DB0                                       u10847 5068  
                                     u10871 5410                                       u10791 0FD0  
                                     u11671 4C6A                                       u11591 46F8  
                                     u11831 1EBE                                       u11751 1DAC  
                                     u10960 2794                                       u10880 2458  
                                     u11840 1ED2                                       u11760 1DC0  
                                     u11680 1BD8                                       _LATB4 007C54  
                                     u10857 5090                                       u10961 2790  
                                     u11841 1ECE                                       u11761 1DBC  
                                     u11681 1BD4                                       _LATB5 007C55  
                                     u10970 4F1A                                       u10890 2482  
                                     u11850 1F3C                                       u11770 1DD2  
                                     u11690 1C04                                       _LATD2 007C62  
                                     _LATB6 007C56                                       u10971 4F16  
                                     u10955 276E                                       u10891 247E  
                                     u11851 1F38                                       u11771 1DCE  
                                     u11691 1C00                                       _LATD3 007C63  
                                     _LATB7 007C57                                       u10980 4D86  
                                     u11860 1F4E                                       u11780 1E28  
                                     u10981 4D82                                       u10885 244E  
                                     u11861 1F4A                                       u11781 1E24  
                                     u10990 4DA4                                       u11790 1E38  
                                     u10991 4DA0                                       u11791 1E34  
                                     u11990 4BB6                                       u11991 4BB2  
                           __end_of___lwdiv 4DE0                                       i2l321 5176  
                                     i2l326 51B8                                       i2l318 5168  
                                     i2l282 5202                                       i2l284 520A  
                              main@iniciado 01E8                             ___awdiv@counter 000A  
                                     _RCREG 000FAE                                vfpfcnvrt@fmt 00C3  
                ??_recorrerCaminoEncontrado 0054                                       _TMR1H 000FCF  
                                     _TMR1L 000FCE                                       _SPBRG 000FAF  
          decidirDireccion@posicionInvCruce 01D6                               __CFG_USBDIV$1 000000  
                                     _TXREG 000FAD                               __CFG_PWRT$OFF 000000  
                             __CFG_WRT0$OFF 000000                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                         ___lmul@multiplicand 000A  
                             __CFG_WRT3$OFF 000000                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              __CFG_EBTR1$OFF 000000  
                            __CFG_EBTR2$OFF 000000                            _combinarArreglos 4F8C  
                            __CFG_EBTR3$OFF 000000                   hayCruce@investigandoCruce 0042  
                             __CFG_WRTB$OFF 000000                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                              __CFG_EBTRB$OFF 000000  
                        __size_of_UART_init 0070                                       _flags 0055  
                                     _boton 0008                                       _fputc 44F8  
                                     _fputs 5470                             __end_of_isdigit 55DC  
                                     _pausa 01E9                                       _mover 4AB6  
                                     _mouse 0057                                 ?_UART_write 0001  
                                     atoi@n 001A                                       pad@fp 0016  
                                     atoi@s 000D                                       _width 0132  
                                     ctoa@c 0023                                       _putch 57B8  
                                     _toint 7DC9                                       ctoa@w 0024  
                                     dtoa@d 0023                                       dtoa@i 0043  
                                     dtoa@n 003B                                       dtoa@p 0035  
                                     dtoa@s 0039                                       dtoa@w 0037  
                         ??_regresarAlCruce 0054                             __end_of_isspace 52B2  
                           __end_of_isupper 556C                                       tablat 000FF5  
                           __end_of_pwmDuty 3468                                       ttemp5 005B  
                                     ttemp6 005E                                       ttemp7 0062  
                                     status 000FD8                                       wtemp8 005B  
                           __end_of_sprintf 5260                              ?___fpclassifyf 0006  
                           __end_of_tolower 504E                             __end_of_strncmp 44F8  
                            __CFG_ICPRT$OFF 000000                              ??_leerSensores 0050  
                           __initialization 4F24                            ??_dameLecturaAdc 0008  
                              __end_of_atoi 37AC                                __end_of_ctoa 5162  
                              __end_of_main 4BE6                                __end_of_dtoa 2E44  
                           ??_configurarAdc 0006                         dameDistancia@conteo 0026  
                    dameDistancia@distancia 0022            limpiarMovimientos@numMovimientos 0008  
                                    ??_atoi 000F                                      ??_ctoa 0024  
                                    ??_main 0055                                      ??_dtoa 002B  
               combinarArreglos@movimientos 0006         comportamientoBasico@caminosRecorrer 01C3  
                             __activetblptr 000002                caminoCorrecto@numMovimientos 0016  
                                    PID@dif 0096                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                                      ?_boton 0001  
                                    _CCP1M2 007DEA                                      _CCP1M3 007DEB  
                                    _CCP2M2 007DD2                                      _CCP2M3 007DD3  
                                    ?_fputc 0006                                      ?_fputs 000F  
                                    _ADRESH 000FC4                                      _ADRESL 000FC3  
                                    _CCPR1L 000FBE                                      _CCPR2L 000FBB  
                          ___awdiv@dividend 0006                                      ?_mover 0001  
                                    ?_putch 0001                                      _INT0IF 007F91  
                                    i2l7331 5196                                      i2l7325 5164  
                                    i2l7327 5184                __end_of_regresarPuntoPartida 4AB6  
                                    i2l7531 51D0                                      i2l7541 5208  
                                    i2l7533 51E2                                      i2l7535 51E6  
                                    i2l7527 51BC                                      i2l7537 51E8  
                                    i2l7529 51CA                                      i2l7539 5204  
                   _mostrarDireccionElegida 4C70                                      _TMR1IF 007CF0  
                                    _TMR1ON 007E68                                      _TMR2ON 007E52  
                                    _TRISB0 007C98                                      _TRISB1 007C99  
                                    _TRISB2 007C9A                                      _TRISC1 007CA1  
                                    _TRISB3 007C9B                                      _TRISC2 007CA2  
                                    _TRISB4 007C9C                                      _TRISB5 007C9D  
                                    _TRISB6 007C9E                                      _TRISD3 007CAB  
                                    _TRISB7 007C9F                                      _TRISC6 007CA6  
                                    _TRISC7 007CA7                            __end_of___xxtofl 361C  
                          __end_of_hayCruce 393C                              __CFG_XINST$OFF 000000  
                  __end_of_seLlegoAlDestino 5640          comportamientoBasico@numMovimientos 01C8  
                              vfprintf@cfmt 00E5                   dameDistancia@numeroSensor 0021  
                                    ___flge 4220                                      ___fleq 4966  
                                    ___lmul 4E50                                   ??___aldiv 001A  
                                 ??___aodiv 0016                                   ??___fladd 003C  
                                 ??___aomod 0016                                      ___wmul 568C  
                         __end_of_UART_init 4E50                                   ??___fldiv 004C  
                                 ??___awdiv 000A                                   ??___flneg 000A  
        comportamientoBasico@espejearCarroY 0139                                   ??___awmod 000A  
                                 ??___flmul 0023                                   ??___flsub 004C  
                                 ??___fltol 0076                                      _efgtoa 0012  
                                 ??___lwdiv 000A                  moverCarrito@espejearCarroY 0054  
                                    _buffer 0191                         _forzarGiroIzquierda 56F6  
                                    _floorf 3096                         __size_of_UART_write 0016  
                              ?_UART_printf 0007                                      clear_0 4F4C  
                                    clear_1 4F5E                                      clear_2 4F6A  
                          ___awdiv@quotient 000C                             ___awmod@divisor 0008  
                           ___awmod@counter 000A                                      pad@buf 0018  
                                    ctoa@fp 0021                                      _roundf 2418  
                                    dtoa@fp 0021                                      _strcpy 50AC  
               ??_visualizarPasosRealizados 00FD                                      _strlen 55DC  
                 recorrerCaminoEncontrado@i 009E                           _oldSensorEnfrente 0118  
                                    fputc@c 0006                                      fputs@c 0013  
                                    fputs@i 0014                                      fputs@s 000F  
                                 ??_isdigit 0008                       _SENSOR_PRIORIDAD_BAJA 01EA  
                     _SENSOR_PRIORIDAD_ALTA 01EC                             ___fpclassifyf@e 000E  
   mostrarDireccionElegida@direccionElegida 000B                             ___fpclassifyf@u 0010  
                           ___fpclassifyf@x 0006                                __mediumconst 7DC8  
                                 ??_isspace 0008                     ?_forzarEspejeoIzquierda 0001  
                                    tblptrh 000FF7                                   ??_isupper 0008  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                    __size_of_forzarEspejeo 0040                                   ??_pwmDuty 007F  
                                    putch@c 0001                            __end_of_vfprintf 4F24  
                          _posicionDestinoX 013E                            _posicionDestinoY 013D  
                                 ??_sprintf 0054                                   ??_tolower 000E  
           regresarPuntoPartida@movimientos 009A                                   ??_strncmp 000C  
                      ?_forzarGiroIzquierda 0001                           _forzarAvanceRecto 56B2  
                    __size_of_forzarReversa 0022                                  ___flge@ff1 0034  
                         _velocidadEstandar 5640                                  ___flge@ff2 0038  
                           ??___fpclassifyf 000A                                ___xxtofl@arg 0017  
                              ___xxtofl@exp 0016                                ___xxtofl@val 000D  
                                ___fleq@ff1 0006                                  ___fleq@ff2 000A  
                                __accesstop 0060                     __end_of__initialization 4F7E  
                        ?_forzarAvanceRecto 0001                             __CFG_PBADEN$OFF 000000  
                                ___flneg@f1 0006                             __CFG_FOSC$XT_XT 000000  
                        ?_velocidadEstandar 0001     visualizarPasosRealizados@numMovimientos 00FB  
                __end_of_finalizarRecorrido 57AA                               ___rparam_used 000001  
             __size_of_forzarEspejeoDerecha 001A                                  ___fltol@f1 0072  
                       ??_forzarAvanceRecto 0006                      __size_of_dameDistancia 0162  
                            __pcstackCOMRAM 0001                         ??_velocidadEstandar 0054  
                              __pidataBANK1 57B4                             _sensorIzquierda 0128  
       combinarArreglos@numMovimientosFinal 000C                               __end_of_boton 520E  
                             __end_of_fputc 45C2                               __end_of_fputs 54B4  
                             __end_of_mover 4B50                               __end_of_putch 57BA  
                             __end_of_toint 7DCD                           _forzarGiroDerecha 5716  
          __end_of_recorrerCaminoEncontrado 4C70                          ?_forzarGiroDerecha 0001  
            __end_of_forzarEspejeoIzquierda 5750   comportamientoBasico@numMovimientosTotales 01C6  
        regresarPuntoPartida@numMovimientos 009C   comportamientoBasico@movimientosRealizados 0200  
                      __end_of_leerSensores 3C40                          __size_of_configPwm 0050  
                 __end_of_forzarAvanceRecto 56D4                                   PID@difAnt 0136  
                 __end_of_velocidadEstandar 5666                                     ??_boton 0004  
                 ??_mostrarDireccionElegida 0009                       ??_forzarGiroIzquierda 0006  
                                   ??_fputc 000A                                     ??_fputs 0013  
                       ??_forzarGiroDerecha 0006                                     ??_mover 0008  
                                   ??_putch 0006                                  __pbssBANK0 00FF  
                                __pbssBANK1 0100                                  __pbssBANK2 0200  
              moverCarrito@avanceRectoLargo 008A                               _paredEnfrente 013C  
             __size_of_comportamientoBasico 042E                   _visualizarPasosRealizados 48BA  
                          ??_caminoCorrecto 001B                           ?_decidirDireccion 01D2  
                     PID@velocidadIzquierda 008E                                  _efgtoa$940 008D  
                                _efgtoa$941 008F                                  _efgtoa$950 0095  
                                _efgtoa$951 0097                                  _efgtoa$945 0091  
                                _efgtoa$949 0093                    __end_of_combinarArreglos 4FEE  
                             _forzarEspejeo 54B4                          ??_decidirDireccion 00FB  
                                   ?___flge 0034                                     ?___fleq 0006  
                                   ?___lmul 0006                                     ?___wmul 0006  
                 __end_of_forzarGiroDerecha 5736                                     ?_efgtoa 007D  
                             _forzarReversa 56D4                                     _CCP1CON 000FBD  
                                   _CCP2CON 000FBA                                     ?_floorf 0050  
             limpiarMovimientos@movimientos 0006                              ___lmul@product 000E  
    decidirDireccion@cambioOrientacionCarro 01DC                                  _antiRebote 5162  
                      _regresarPuntoPartida 4A10                                     ?_roundf 004C  
                                   ?_strcpy 0006                                     ?_strlen 0006  
                                   _T2CKPS0 007E50                                     _T2CKPS1 007E51  
                           _regresarAlCruce 4686                                     _PID$761 0090  
                                   _PID$763 0094                                     i2l11191 51AA  
                                 ?___xxtofl 000D                  __end_of_limpiarMovimientos 5352  
                             _dameDistancia 3DA4                          __size_of_vfpfcnvrt 05A8  
                                 ?_hayCruce 0040                                ??_UART_write 0006  
                             ?_moverCarrito 0088                             __CFG_VREGEN$OFF 000000  
 comportamientoBasico@contCaminosRecorridos 01CD                                     __Hparam 0000  
                            ?_forzarEspejeo 0001                                     __Lparam 0000  
                         __end_of_configPwm 5302             __end_of_mostrarDireccionElegida 4CF2  
                                   ___aldiv 3F06                             __size_of___flge 0104  
                            ?_forzarReversa 0001                             __size_of___fleq 00AA  
                                   ___aodiv 393C                                     ___fladd 1700  
                                   ___aomod 3C40                                     ___fldiv 27CA  
                                   ___awdiv 45C2                                     ___flneg 556C  
                           __size_of___lmul 006A                                     ___awmod 480A  
                                   ___flmul 1FEE                                     ___flsub 539E  
                                   ___fltol 4012                             __size_of___wmul 0026  
                                   ___lwdiv 4D6C                                   ?_vfprintf 00DF  
                           __size_of_efgtoa 0BBA         recorrerCaminoEncontrado@movimientos 009A  
                           __CFG_STVREN$OFF 000000                             __size_of_floorf 0216  
                                   __pcinit 4F24                       ?_regresarPuntoPartida 009A  
                                   __ramtop 0800                          __end_of_UART_write 579A  
                     __end_of_velocidadBaja 568C                                     __ptext0 4B50  
                                   __ptext1 48BA                                     __ptext2 5352  
                                   __ptext3 57AA                                     __ptext4 52B2  
                                   __ptext5 1BC0                                     __ptext6 4A10  
                                   __ptext7 4686                                     __ptext8 4BE6  
                                   __ptext9 4AB6                             __size_of_roundf 03B2  
                              __size_of_PID 0252                             __size_of_strcpy 005C  
                           __size_of_strlen 0036                        __size_of_UART_printf 005E  
                              __size_of_abs 0040                                __size_of_pad 00C2  
                              __size_of_map 007A                                     _isdigit 55A4  
                                ??___xxtofl 0011                            ___awmod@dividend 0006  
                            ?_dameDistancia 001B                            ___aldiv@dividend 0012  
                                   _isspace 5260                                     _isupper 5534  
                                   efgtoa@c 0083                                     efgtoa@d 00A1  
                                   efgtoa@e 00B9                                     efgtoa@f 007F  
                                   efgtoa@g 00B5                                     efgtoa@h 00AB  
                                   efgtoa@i 00B3                                     efgtoa@l 00AF  
                                   efgtoa@m 009D                                     efgtoa@n 00BB  
                                   efgtoa@p 00A5                                     efgtoa@t 0099  
                                   efgtoa@u 00BD                                     efgtoa@w 00A8  
                __size_of_forzarAvanceRecto 0022                                  ??_hayCruce 0043  
                                   _pwmDuty 32AC                                     atoi@neg 0013  
                __size_of_velocidadEstandar 0026                                     _sprintf 520E  
                                   _tolower 4FEE                                     _strncmp 4422  
                            __pintcode_body 51BA                        end_of_initialization 4F7E  
                            ??_moverCarrito 008C                                     floorf@e 0077  
                                   floorf@m 0073                                     floorf@u 0079  
                                   floorf@x 0050            decidirDireccion@direccionElegida 0054  
                                   fputc@fp 0008                               __Lmediumconst 7DC8  
                                   int_func 51BA                                     fputs@fp 0011  
         __size_of_recorrerCaminoEncontrado 008A                                   i2u1215_47 51F2  
                                 i2u1216_47 518A                      _SENSOR_PRIORIDAD_MEDIA 01EB  
                 ?_recorrerCaminoEncontrado 009A                           ?_seLlegoAlDestino 0001  
                         __end_of_vfpfcnvrt 1174                                  efgtoa@mode 00AA  
                                efgtoa@sign 00A3                                   _RCSTAbits 000FAB  
                          ___aldiv@quotient 001C            decidirDireccion@avanceRectoLargo 01E2  
                                   postdec1 000FE5                                     postdec2 000FDD  
                   __end_of_regresarAlCruce 4748                                     postinc0 000FEE  
                                   postinc1 000FE6                                     postinc2 000FDE  
                   __size_of_forzarParoAuto 001A                                     roundf@e 0064  
                                   roundf@u 006A                                     roundf@x 004C  
                                   roundf@y 006E                  __size_of_forzarGiroDerecha 0020  
                        ??_seLlegoAlDestino 000B                                  ??_vfprintf 0054  
                     __end_of_configurarAdc 57B4                                     strcpy@d 000E  
                                   strlen@a 0008                                     strcpy@s 000C  
                                   strlen@s 0006                                 ?_antiRebote 0001  
                                 _PORTBbits 000F81                                   _UART_init 4DE0  
                     __size_of_leerSensores 017C                                 ___fladd@grs 0043  
                               pwmDuty@duty 0084      recorrerCaminoEncontrado@numMovimientos 009C  
                             ___xxtofl@sign 0015                                   _TRISDbits 000F95  
                               ___fldiv@grs 0067                          _oldSensorIzquierda 011C  
                               ___fldiv@rem 0060        comportamientoBasico@posicionInvCruce 01CE  
                                map@out_max 0030                                  map@out_min 002C  
                               ___flmul@grs 0029                              _UART_init$1842 0028  
                                 _TXSTAbits 000FAC                             ??_forzarEspejeo 0054  
                           ??_forzarReversa 0006               regresarAlCruce@numMovimientos 009C  
                              _leerSensores 3AC4          __size_of_visualizarPasosRealizados 00AC  
                            __end_of___flge 4324                              __end_of___fleq 4A10  
                    ??_regresarPuntoPartida 0054                              __end_of___lmul 4EBA  
                               vfpfcnvrt@ap 00C5                                 vfpfcnvrt@ct 00DB  
                               vfpfcnvrt@fp 00C1                                 vfpfcnvrt@ll 00CB  
                            __end_of___wmul 56B2                       regresarPuntoPartida@i 009E  
                            __end_of_efgtoa 0BCC                          _finalizarRecorrido 579A  
                            __end_of_floorf 32AC                                  ?_UART_init 0020  
                                floorf@F524 0104                __end_of_forzarEspejeoDerecha 576A  
                           ??_dameDistancia 001F       comportamientoBasico@investigandoCruce 01CF  
                            __end_of_roundf 27CA                     __size_of_dameLecturaAdc 0046  
                            __end_of_strcpy 5108                              __end_of_strlen 5612  
                       start_initialization 4F24                         PID@velocidadDerecha 0092  
                               __end_of_PID 3096                         ?_finalizarRecorrido 0001  
                               __end_of_abs 5534                                 __end_of_pad 480A  
                               __end_of_map 4D6C                            regresarAlCruce@i 009E  
                       __size_of_antiRebote 0058                       __end_of___fpclassifyf 4422  
                       pwmDuty@cicloTrabajo 007C                        ??_finalizarRecorrido 0054  
                               vfprintf@fmt 00E1                                    ??___flge 003C  
                                  ??___fleq 000E                           ?_combinarArreglos 0006  
                                  ??___lmul 000E                                    ??___wmul 000A  
                          ?_regresarAlCruce 009A                            _oldSensorDerecha 0120  
                comportamientoBasico@mapear 01D1                              _sensorEnfrente 0124  
                                  ??_efgtoa 0084                                 __pdataBANK1 01E9  
                        ??_combinarArreglos 000E                                    ??_floorf 006D  
                          __CFG_LPT1OSC$OFF 000000                __end_of_comportamientoBasico 1FEE  
         __end_of_visualizarPasosRealizados 4966                        __end_of_moverCarrito 4220  
                                  ??_roundf 0050                                    ??_strcpy 000A  
                                  ??_strlen 0008                                   ___fladd@a 0038  
                                 ___fladd@b 0034                   __size_of_decidirDireccion 058C  
               __end_of_forzarGiroIzquierda 5716                                   ___fldiv@a 0048  
                                 ___fldiv@b 0044                                 __pbssBIGRAM 02C8  
                              _llegoDestino 00FF                                   ___flmul@a 001F  
                                 ___flmul@b 001B                                 __pbssCOMRAM 0055  
                                 ___flsub@a 0048                                   ___flsub@b 0044  
          comportamientoBasico@caminoActual 01CC                               __pcstackBANK0 0060  
                             __pcstackBANK1 01D2                            ___aodiv@dividend 0006  
                         __size_of___xxtofl 01B4                     hayCruce@caminosRecorrer 0040  
                         __size_of_hayCruce 0190             decidirDireccion@caminosRecorrer 01D2  
                              _paredDerecha 013B                          _limpiarMovimientos 5302  
                         UART_printf@cadena 0007                                    PID@error 0098  
                                 _atoi$1444 0015                                   _atoi$1445 0019  
                                 _atoi$1446 0017                   _DISTANCIA_PRIORIDAD_MEDIA 0110  
                 caminoCorrecto@caminoFinal 0014                            ___lwdiv@dividend 0006  
                                 __pintcode 0008                         ?_limpiarMovimientos 0006  
                             __pmediumconst 7DC8                              _forzarParoAuto 576A  
                                  ?___aldiv 0012                                    ?___aodiv 0006  
                                  ?___fladd 0034                                    ?___aomod 0006  
                                  ?___fldiv 0044                                    ?___awdiv 0006  
                          ___aodiv@quotient 0018                                    ?___flneg 0006  
                                  ?___awmod 0006                                    ?___flmul 001B  
                                  ?___flsub 0044                                    ?___fltol 0072  
                                  ?___lwdiv 0006                                   _configPwm 52B2  
                            _paredIzquierda 013A                                 ??_UART_init 0024  
                         __size_of_vfprintf 006A                                    ?_isdigit 0006  
                  ?_mostrarDireccionElegida 0001                                    ?_isspace 0006  
                                  ?_isupper 0006  comportamientoBasico@cambioOrientacionCarro 01CB  
         caminoCorrecto@numMovimientosFinal 0018                                    ?_pwmDuty 007C  
                      ??_limpiarMovimientos 000A                            ___lwdiv@quotient 000B  
                            __size_of_boton 5206                                    ?_sprintf 00E7  
                                  ?_tolower 000C                              __size_of_fputc 00CA  
                            __size_of_fputs 0044                                    _PID$1843 008A  
                                  ?_strncmp 0006                              __size_of_mover 009A  
     decidirDireccion@contCaminosRecorridos 01D8                              __size_of_putch 0002  
                           ___aldiv@divisor 0016                           combinarArreglos@i 0010  
                           ___aldiv@counter 001A                              ___wmul@product 000A  
         decidirDireccion@investigandoCruce 01D4                seLlegoAlDestino@llegoDestino 000B  
                      _forzarEspejeoDerecha 5750                      __end_of_forzarParoAuto 5784  
                                  i2u767_40 5176                                    i2u767_41 5172  
                                  i2u768_40 5184                                    i2u768_41 5180  
                                  i2u788_40 51CA                                    i2u788_41 51C6  
                                  i2u789_40 51E2                                    i2u789_41 51DE  
                          __CFG_WDTPS$32768 000000                    ??_forzarEspejeoIzquierda 0054  
                             ??_UART_printf 0009                                ??_antiRebote 0001  
                                 _vfpfcnvrt 0BCC                                  ?_configPwm 0001  
                                 map@in_max 0028                                   map@in_min 0024  
                    decidirDireccion@mapear 01DE                     __size_of_caminoCorrecto 0046  
                                _ADCON0bits 000FC2                           ___wmul@multiplier 0006  
                          configPwm@channel 0008                              _dameLecturaAdc 53E4  
                            UART_write@dato 0006                   __size_of_seLlegoAlDestino 002E  
                              _isspace$1475 000C                                  vfpfcnvrt@c 00DE  
                                vfpfcnvrt@f 00D7                           ___lmul@multiplier 0006  
                               _INTCON2bits 000FF1                                   copy_data0 4F38  
                      _comportamientoBasico 1BC0                       ?_forzarEspejeoDerecha 0001  
                    __size_of_velocidadBaja 0026                          __end_of_antiRebote 51BA  
                                roundf@F525 0100                                    __Hrparam 0000  
                           ?_forzarParoAuto 0001                               UART_init@BAUD 0020  
                             _sensorDerecha 012C                                  vfprintf@ap 00E3  
                                  __Lrparam 0000                                  vfprintf@fp 00DF  
                     __size_of_moverCarrito 0106                              _posicionCarroX 0140  
                            _posicionCarroY 013F                            __size_of___aldiv 010C  
                          __size_of___aodiv 0188                            __size_of___fladd 04C0  
                          __size_of___aomod 0164                            __size_of___fldiv 039C  
                          __size_of___awdiv 00C4                            __size_of___flneg 0038  
                          __size_of___awmod 00B0                            __size_of___flmul 042A  
                          __size_of___flsub 0046                            __size_of___fltol 0108  
                                ?_vfpfcnvrt 00C1                            __size_of___lwdiv 0074  
                    __end_of_dameLecturaAdc 542A                             ___aodiv@divisor 000E  
                           ___aodiv@counter 0016                          ___fpclassifyf@F463 0108  
                       hayCruce@contCaminos 0043                 combinarArreglos@caminoFinal 0008  
                          _decidirDireccion 1174                                  sprintf@fmt 00E9  
                                  ___xxtofl 3468                         __end_of_UART_printf 50AC  
                          __size_of_isdigit 0038                                    _dtoa$917 0033  
                           ___lwdiv@divisor 0008                                    _hayCruce 37AC  
                          __size_of_isspace 0052                             ___lwdiv@counter 000A  
                                  __ptext10 2E44                                    __ptext11 2418  
                                  __ptext20 56F6                                    __ptext12 411A  
                                  __ptext21 5750                                    __ptext13 56B2  
                                  __ptext30 4E50                                    __ptext22 5640  
                                  __ptext14 3AC4                                    __ptext31 3468  
                                  __ptext23 56D4                                    __ptext15 3DA4  
                                  __ptext40 3096                                    __ptext32 520E  
                                  __ptext24 576A                                    __ptext16 4D6C  
                                  __ptext41 4324                                    __ptext33 4EBA  
                                  __ptext25 5716                                    __ptext17 579A  
                                  __ptext50 45C2                                    __ptext42 4012  
                                  __ptext34 0BCC                                    __ptext26 1174  
                                  __ptext18 54B4                                    __ptext51 2B66  
                                  __ptext43 539E                                    __ptext35 4422  
                                  __ptext27 5666                                    __ptext19 5736  
                                  __ptext60 57B8                                    __ptext52 54F4  
                                  __ptext44 1700                                    __ptext36 0012  
                                  __ptext28 32AC                                    __ptext61 361C  
                                  __ptext53 3C40                                    __ptext45 556C  
                                  __ptext37 4FEE                                    __ptext29 4CF2  
                                  __ptext70 37AC                                    __ptext62 5260  
                                  __ptext54 393C                                    __ptext46 1FEE  
                                  __ptext38 5534                                    __ptext71 4220  
                                  __ptext63 55A4                                    __ptext55 5108  
                                  __ptext47 4966                                    __ptext39 50AC  
                                  __ptext72 542A                                    __ptext64 568C  
                                  __ptext56 4748                                    __ptext48 27CA  
                                  __ptext73 5302                                    __ptext65 5612  
                                  __ptext57 55DC                                    __ptext49 480A  
                                  __ptext74 4F8C                                    __ptext66 53E4  
                                  __ptext58 5470                                    __ptext75 4DE0  
                                  __ptext67 4C70                                    __ptext59 44F8  
                                  __ptext76 3F06                                    __ptext68 504E  
                                  __ptext69 5784                                    __ptext78 5162  
                          __size_of_isupper 0038                            __size_of_pwmDuty 01BC  
   __end_of_inicializarComportamientoBasico 539E    __size_of_inicializarComportamientoBasico 004C  
         ??_inicializarComportamientoBasico 0054            ?_inicializarComportamientoBasico 0001  
           _inicializarComportamientoBasico 5352                            __size_of_sprintf 0052  
                          __size_of_tolower 0060                               antiRebote@pin 0003  
                  _recorrerCaminoEncontrado 4BE6                                  strcpy@dest 0006  
                          __size_of_strncmp 00D6              combinarArreglos@numMovimientos 000A  
                     ?_comportamientoBasico 0001          comportamientoBasico@cruceDetectado 01D0  
                              _moverCarrito 411A                      __size_of_configurarAdc 000A  
                             __size_of_atoi 0190                               __size_of_ctoa 005A  
                             __size_of_main 0096                               __size_of_dtoa 02DE  
                     __end_of_forzarEspejeo 54F4                                    efgtoa@fp 007D  
                                  efgtoa@ne 009F                                    efgtoa@pp 009B  
                                  efgtoa@ou 0089        comportamientoBasico@direccionElegida 00FE  
                     __end_of_forzarReversa 56F6                                    int$flags 005A  
                   dameLecturaAdc@canalLeer 000A                                    _vfprintf 4EBA  
           __size_of_forzarEspejeoIzquierda 001A                                 ??_configPwm 0006  
                           ?_dameLecturaAdc 0006               __size_of_regresarPuntoPartida 00A6  
                          ___aomod@dividend 0006                       __CFG_CPUDIV$OSC1_PLL2 000000  
                             _velocidadBaja 5666        comportamientoBasico@avanceRectoLargo 01CA  
              decidirDireccion@caminoActual 01DA              decidirDireccion@cruceDetectado 01E0  
                                _INTCONbits 000FF2                       __end_of_dameDistancia 3F06  
                 __size_of_combinarArreglos 0062                         limpiarMovimientos@i 000C  
                                  isdigit@c 0006                                    intlevel2 0000  
                                 sprintf@ap 00F3                  caminoCorrecto@caminoActual 001A  
                    ??_forzarEspejeoDerecha 0054                                    isspace@c 0006  
                                 strcpy@src 0008                                    isupper@c 0006  
                                 strncmp@_l 0006                                   strncmp@_r 0008  
               __size_of_finalizarRecorrido 0010                                 efgtoa@nmode 00A7  
                           ___aomod@divisor 000E                                 ??_vfpfcnvrt 00C7  
                           ___aomod@counter 0016                               _vfpfcnvrt$971 00D5  
                             _vfpfcnvrt$965 00D3                                 _UART_printf 504E  
                             _configurarAdc 57AA                              _caminoCorrecto 542A  
                            ?_velocidadBaja 0001                  ?_visualizarPasosRealizados 00FB  
                            pwmDuty@channel 007E                                    sprintf@f 00F5  
                                  tolower@c 000C                                    sprintf@s 00E7  
                    __size_of___fpclassifyf 00FE                    __size_of_regresarAlCruce 00C2  
                          _seLlegoAlDestino 5612                                    strncmp@l 000D  
                                  strncmp@n 000A                                    strncmp@r 000F  
        comportamientoBasico@carroEspejeado 0059                                ___aldiv@sign 001B  
                moverCarrito@carroEspejeado 0088                               ___fladd@signs 0040  
                    ??_comportamientoBasico 01E4                                  _UART_write 5784  
                    _forzarEspejeoIzquierda 5736                __size_of_forzarGiroIzquierda 0020  
                              ___aodiv@sign 0017                                ___fladd@aexp 0041  
                              ___fladd@bexp 0042            __size_of_mostrarDireccionElegida 0082  
                regresarAlCruce@movimientos 009A                                ___aomod@sign 0017  
                 caminoCorrecto@movimientos 0012                                 _roundf$1844 0066  
                               _roundf$1845 0060  
