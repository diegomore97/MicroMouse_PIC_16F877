

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Aug 02 01:49:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           ; Version 2.10
    69                           ; Generated 31/07/2019 GMT
    70                           ; 
    71                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F4550 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataBANK0
   104  003EA0                     __pidataBANK0:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for _pausa
   108  003EA0  01                 	db	1
   109                           
   110                           	psect	smallconst
   111  000800                     __psmallconst:
   112                           	opt callstack 0
   113  000800  00                 	db	0
   114  000801  0000               	dw	0
   115  000803  4B00               	dw	19200
   116  000805                     __end_of_toint:
   117                           	opt callstack 0
   118  0000                     _T1CON	set	4045
   119  0000                     _TRISDbits	set	3989
   120  0000                     _INTCON2bits	set	4081
   121  0000                     _INTCONbits	set	4082
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADRESH	set	4036
   124  0000                     _ADCON0bits	set	4034
   125  0000                     _ADCON2	set	4032
   126  0000                     _ADCON1	set	4033
   127  0000                     _TXREG	set	4013
   128  0000                     _RCREG	set	4014
   129  0000                     _RCSTAbits	set	4011
   130  0000                     _TXSTAbits	set	4012
   131  0000                     _SPBRG	set	4015
   132  0000                     _PORTBbits	set	3969
   133  0000                     _TMR1L	set	4046
   134  0000                     _TMR1H	set	4047
   135  0000                     _PR2	set	4043
   136  0000                     _CCP2CON	set	4026
   137  0000                     _CCPR2L	set	4027
   138  0000                     _CCP1CON	set	4029
   139  0000                     _CCPR1L	set	4030
   140  0000                     _TRISB0	set	31896
   141  0000                     _TRISB7	set	31903
   142  0000                     _TRISB6	set	31902
   143  0000                     _TRISB5	set	31901
   144  0000                     _TRISB4	set	31900
   145  0000                     _TRISB3	set	31899
   146  0000                     _TRISB2	set	31898
   147  0000                     _TRISB1	set	31897
   148  0000                     _TRISD3	set	31915
   149  0000                     _LATB7	set	31831
   150  0000                     _LATB6	set	31830
   151  0000                     _LATB5	set	31829
   152  0000                     _LATB4	set	31828
   153  0000                     _LATD2	set	31842
   154  0000                     _INT0IF	set	32657
   155  0000                     _RCIF	set	31989
   156  0000                     _TRISC7	set	31911
   157  0000                     _TRISC6	set	31910
   158  0000                     _TMR1IF	set	31984
   159  0000                     _TMR1ON	set	32360
   160  0000                     _LATD3	set	31843
   161  0000                     _TMR2ON	set	32338
   162  0000                     _CCP2M2	set	32210
   163  0000                     _CCP2M3	set	32211
   164  0000                     _TRISC1	set	31905
   165  0000                     _CCP1M2	set	32234
   166  0000                     _CCP1M3	set	32235
   167  0000                     _TRISC2	set	31906
   168  0000                     _T2CKPS1	set	32337
   169  0000                     _T2CKPS0	set	32336
   170  000805                     STR_4:
   171  000805  0D                 	db	13
   172  000806  44                 	db	68	;'D'
   173  000807  69                 	db	105	;'i'
   174  000808  73                 	db	115	;'s'
   175  000809  74                 	db	116	;'t'
   176  00080A  61                 	db	97	;'a'
   177  00080B  6E                 	db	110	;'n'
   178  00080C  63                 	db	99	;'c'
   179  00080D  69                 	db	105	;'i'
   180  00080E  61                 	db	97	;'a'
   181  00080F  3A                 	db	58	;':'
   182  000810  20                 	db	32
   183  000811  25                 	db	37
   184  000812  2E                 	db	46
   185  000813  32                 	db	50	;'2'
   186  000814  66                 	db	102	;'f'
   187  000815  20                 	db	32
   188  000816  63                 	db	99	;'c'
   189  000817  6D                 	db	109	;'m'
   190  000818  0D                 	db	13
   191  000819  0A                 	db	10
   192  00081A  0A                 	db	10
   193  00081B  00                 	db	0
   194  00081C                     STR_2:
   195  00081C  0D                 	db	13
   196  00081D  49                 	db	73	;'I'
   197  00081E  7A                 	db	122	;'z'
   198  00081F  71                 	db	113	;'q'
   199  000820  75                 	db	117	;'u'
   200  000821  69                 	db	105	;'i'
   201  000822  65                 	db	101	;'e'
   202  000823  72                 	db	114	;'r'
   203  000824  64                 	db	100	;'d'
   204  000825  61                 	db	97	;'a'
   205  000826  3A                 	db	58	;':'
   206  000827  20                 	db	32
   207  000828  0D                 	db	13
   208  000829  0A                 	db	10
   209  00082A  00                 	db	0
   210  00082B                     STR_1:
   211  00082B  0D                 	db	13
   212  00082C  45                 	db	69	;'E'
   213  00082D  6E                 	db	110	;'n'
   214  00082E  66                 	db	102	;'f'
   215  00082F  72                 	db	114	;'r'
   216  000830  65                 	db	101	;'e'
   217  000831  6E                 	db	110	;'n'
   218  000832  74                 	db	116	;'t'
   219  000833  65                 	db	101	;'e'
   220  000834  3A                 	db	58	;':'
   221  000835  20                 	db	32
   222  000836  0D                 	db	13
   223  000837  0A                 	db	10
   224  000838  00                 	db	0
   225  000839                     STR_3:
   226  000839  0D                 	db	13
   227  00083A  44                 	db	68	;'D'
   228  00083B  65                 	db	101	;'e'
   229  00083C  72                 	db	114	;'r'
   230  00083D  65                 	db	101	;'e'
   231  00083E  63                 	db	99	;'c'
   232  00083F  68                 	db	104	;'h'
   233  000840  61                 	db	97	;'a'
   234  000841  3A                 	db	58	;':'
   235  000842  20                 	db	32
   236  000843  0D                 	db	13
   237  000844  0A                 	db	10
   238  000845  00                 	db	0
   239  000846                     STR_5:
   240  000846  49                 	db	73	;'I'
   241  000847  4E                 	db	78	;'N'
   242  000848  46                 	db	70	;'F'
   243  000849  00                 	db	0
   244  00084A                     STR_9:
   245  00084A  4E                 	db	78	;'N'
   246  00084B  41                 	db	65	;'A'
   247  00084C  4E                 	db	78	;'N'
   248  00084D  00                 	db	0
   249  00084E                     STR_6:
   250  00084E  69                 	db	105	;'i'
   251  00084F  6E                 	db	110	;'n'
   252  000850  66                 	db	102	;'f'
   253  000851  00                 	db	0
   254  000852                     STR_10:
   255  000852  6E                 	db	110	;'n'
   256  000853  61                 	db	97	;'a'
   257  000854  6E                 	db	110	;'n'
   258  000855  00                 	db	0
   259  000856                     STR_13:
   260  000856  6C                 	db	108	;'l'
   261  000857  66                 	db	102	;'f'
   262  000858  00                 	db	0
   263  0000                     
   264                           ; #config settings
   265  000859  00                 	db	0	; dummy byte at the end
   266  0000                     
   267                           	psect	cinit
   268  003CFE                     __pcinit:
   269                           	opt callstack 0
   270  003CFE                     start_initialization:
   271                           	opt callstack 0
   272  003CFE                     __initialization:
   273                           	opt callstack 0
   274                           
   275                           ; Initialize objects allocated to BANK0 (1 bytes)
   276                           ; load TBLPTR registers with __pidataBANK0
   277  003CFE  0EA0               	movlw	low __pidataBANK0
   278  003D00  6EF6               	movwf	tblptrl,c
   279  003D02  0E3E               	movlw	high __pidataBANK0
   280  003D04  6EF7               	movwf	tblptrh,c
   281  003D06  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   282  003D08  6EF8               	movwf	tblptru,c
   283  003D0A  0009               	tblrd		*+	;fetch initializer
   284  003D0C  CFF5 F0F9          	movff	tablat,__pdataBANK0
   285                           
   286                           ; Clear objects allocated to BANK1 (208 bytes)
   287  003D10  EE01  F000         	lfsr	0,__pbssBANK1
   288  003D14  0ED0               	movlw	208
   289  003D16                     clear_0:
   290  003D16  6AEE               	clrf	postinc0,c
   291  003D18  06E8               	decf	wreg,f,c
   292  003D1A  E1FD               	bnz	clear_0
   293                           
   294                           ; Clear objects allocated to BANK0 (40 bytes)
   295  003D1C  EE00  F0D1         	lfsr	0,__pbssBANK0
   296  003D20  0E28               	movlw	40
   297  003D22                     clear_1:
   298  003D22  6AEE               	clrf	postinc0,c
   299  003D24  06E8               	decf	wreg,f,c
   300  003D26  E1FD               	bnz	clear_1
   301                           
   302                           ; Clear objects allocated to COMRAM (5 bytes)
   303  003D28  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   304  003D2A  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   305  003D2C  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   306  003D2E  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   307  003D30  6A55               	clrf	__pbssCOMRAM& (0+255),c
   308  003D32                     end_of_initialization:
   309                           	opt callstack 0
   310  003D32                     __end_of__initialization:
   311                           	opt callstack 0
   312  003D32  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   313  003D34  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   314  003D36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   315  003D38  6EF8               	movwf	tblptru,c
   316  003D3A  0100               	movlb	0
   317  003D3C  EFDD  F01B         	goto	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMRAM
   320  000055                     __pbssCOMRAM:
   321                           	opt callstack 0
   322  000055                     _mouse:
   323                           	opt callstack 0
   324  000055                     	ds	2
   325  000057                     comportamientoBasico@contRepeticiones:
   326                           	opt callstack 0
   327  000057                     	ds	1
   328  000058                     comportamientoBasico@espejearCarroY:
   329                           	opt callstack 0
   330  000058                     	ds	1
   331  000059                     comportamientoBasico@numMovimientos:
   332                           	opt callstack 0
   333  000059                     	ds	1
   334                           
   335                           	psect	bssBANK0
   336  0000D1                     __pbssBANK0:
   337                           	opt callstack 0
   338  0000D1                     _oldSensorIzquierda:
   339                           	opt callstack 0
   340  0000D1                     	ds	4
   341  0000D5                     _oldSensorDerecha:
   342                           	opt callstack 0
   343  0000D5                     	ds	4
   344  0000D9                     _sensorEnfrente:
   345                           	opt callstack 0
   346  0000D9                     	ds	4
   347  0000DD                     _sensorIzquierda:
   348                           	opt callstack 0
   349  0000DD                     	ds	4
   350  0000E1                     _sensorDerecha:
   351                           	opt callstack 0
   352  0000E1                     	ds	4
   353  0000E5                     _nout:
   354                           	opt callstack 0
   355  0000E5                     	ds	2
   356  0000E7                     _width:
   357                           	opt callstack 0
   358  0000E7                     	ds	2
   359  0000E9                     _prec:
   360                           	opt callstack 0
   361  0000E9                     	ds	2
   362  0000EB                     _flags:
   363                           	opt callstack 0
   364  0000EB                     	ds	2
   365  0000ED                     PID@difAnt:
   366                           	opt callstack 0
   367  0000ED                     	ds	2
   368  0000EF                     decidirDireccion@cambioOrientacionCarro:
   369                           	opt callstack 0
   370  0000EF                     	ds	1
   371  0000F0                     comportamientoBasico@carroRotado:
   372                           	opt callstack 0
   373  0000F0                     	ds	1
   374  0000F1                     comportamientoBasico@cruceDetectado:
   375                           	opt callstack 0
   376  0000F1                     	ds	1
   377  0000F2                     comportamientoBasico@mapear:
   378                           	opt callstack 0
   379  0000F2                     	ds	1
   380  0000F3                     comportamientoBasico@caminosRecorrer:
   381                           	opt callstack 0
   382  0000F3                     	ds	3
   383  0000F6                     comportamientoBasico@contCaminosRecorridos:
   384                           	opt callstack 0
   385  0000F6                     	ds	1
   386  0000F7                     comportamientoBasico@posicionInvCruce:
   387                           	opt callstack 0
   388  0000F7                     	ds	1
   389  0000F8                     comportamientoBasico@investigandoCruce:
   390                           	opt callstack 0
   391  0000F8                     	ds	1
   392                           
   393                           	psect	dataBANK0
   394  0000F9                     __pdataBANK0:
   395                           	opt callstack 0
   396  0000F9                     _pausa:
   397                           	opt callstack 0
   398  0000F9                     	ds	1
   399                           
   400                           	psect	bssBANK1
   401  000100                     __pbssBANK1:
   402                           	opt callstack 0
   403  000100                     roundf@F525:
   404                           	opt callstack 0
   405  000100                     	ds	4
   406  000104                     floorf@F524:
   407                           	opt callstack 0
   408  000104                     	ds	4
   409  000108                     ___fpclassifyf@F463:
   410                           	opt callstack 0
   411  000108                     	ds	4
   412  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   413                           	opt callstack 0
   414  00010C                     	ds	4
   415  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   416                           	opt callstack 0
   417  000110                     	ds	4
   418  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   419                           	opt callstack 0
   420  000114                     	ds	4
   421  000118                     _oldSensorEnfrente:
   422                           	opt callstack 0
   423  000118                     	ds	4
   424  00011C                     _dbuf:
   425                           	opt callstack 0
   426  00011C                     	ds	80
   427  00016C                     comportamientoBasico@movimientosRealizados:
   428                           	opt callstack 0
   429  00016C                     	ds	50
   430  00019E                     _buffer:
   431                           	opt callstack 0
   432  00019E                     	ds	50
   433                           
   434                           	psect	cstackBANK1
   435  0001D0                     __pcstackBANK1:
   436                           	opt callstack 0
   437  0001D0                     	ds	2
   438  0001D2                     sprintf@ap:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x2
   442  0001D2                     	ds	2
   443  0001D4                     sprintf@f:
   444                           	opt callstack 0
   445                           
   446                           ; 6 bytes @ 0x4
   447  0001D4                     	ds	6
   448                           
   449                           	psect	cstackBANK0
   450  000060                     __pcstackBANK0:
   451                           	opt callstack 0
   452  000060                     ??___flge:
   453  000060                     ___fltol@sign1:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x0
   457  000060                     	ds	1
   458  000061                     ___fltol@exp1:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x1
   462  000061                     	ds	1
   463  000062                     pwmDuty@cicloTrabajo:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x2
   467  000062                     	ds	2
   468  000064                     ?_efgtoa:
   469                           	opt callstack 0
   470  000064                     pwmDuty@channel:
   471                           	opt callstack 0
   472  000064                     efgtoa@fp:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x4
   476  000064                     	ds	1
   477  000065                     ??_pwmDuty:
   478                           
   479                           ; 1 bytes @ 0x5
   480  000065                     	ds	1
   481  000066                     efgtoa@f:
   482                           	opt callstack 0
   483                           
   484                           ; 4 bytes @ 0x6
   485  000066                     	ds	4
   486  00006A                     efgtoa@c:
   487                           	opt callstack 0
   488  00006A                     pwmDuty@duty:
   489                           	opt callstack 0
   490                           
   491                           ; 4 bytes @ 0xA
   492  00006A                     	ds	1
   493  00006B                     ??_efgtoa:
   494                           
   495                           ; 1 bytes @ 0xB
   496  00006B                     	ds	5
   497  000070                     efgtoa@ou:
   498                           	opt callstack 0
   499                           
   500                           ; 4 bytes @ 0x10
   501  000070                     	ds	4
   502  000074                     _efgtoa$783:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x14
   506  000074                     	ds	2
   507  000076                     _efgtoa$784:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x16
   511  000076                     	ds	2
   512  000078                     _efgtoa$789:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x18
   516  000078                     	ds	2
   517  00007A                     _efgtoa$793:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x1A
   521  00007A                     	ds	2
   522  00007C                     _efgtoa$794:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526  00007C                     	ds	2
   527  00007E                     _efgtoa$795:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x1E
   531  00007E                     	ds	2
   532  000080                     efgtoa@t:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x20
   536  000080                     	ds	2
   537  000082                     efgtoa@pp:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x22
   541  000082                     	ds	2
   542  000084                     efgtoa@m:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x24
   546  000084                     	ds	2
   547  000086                     efgtoa@ne:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x26
   551  000086                     	ds	2
   552  000088                     efgtoa@d:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x28
   556  000088                     	ds	2
   557  00008A                     efgtoa@sign:
   558                           	opt callstack 0
   559                           
   560                           ; 2 bytes @ 0x2A
   561  00008A                     	ds	2
   562  00008C                     efgtoa@p:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x2C
   566  00008C                     	ds	2
   567  00008E                     efgtoa@nmode:
   568                           	opt callstack 0
   569                           
   570                           ; 1 bytes @ 0x2E
   571  00008E                     	ds	1
   572  00008F                     efgtoa@w:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x2F
   576  00008F                     	ds	2
   577  000091                     efgtoa@mode:
   578                           	opt callstack 0
   579                           
   580                           ; 1 bytes @ 0x31
   581  000091                     	ds	1
   582  000092                     efgtoa@h:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0x32
   586  000092                     	ds	4
   587  000096                     efgtoa@l:
   588                           	opt callstack 0
   589                           
   590                           ; 4 bytes @ 0x36
   591  000096                     	ds	4
   592  00009A                     efgtoa@i:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x3A
   596  00009A                     	ds	2
   597  00009C                     efgtoa@g:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0x3C
   601  00009C                     	ds	4
   602  0000A0                     efgtoa@e:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0x40
   606  0000A0                     	ds	2
   607  0000A2                     efgtoa@n:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x42
   611  0000A2                     	ds	2
   612  0000A4                     efgtoa@u:
   613                           	opt callstack 0
   614                           
   615                           ; 4 bytes @ 0x44
   616  0000A4                     	ds	4
   617  0000A8                     ?_vfpfcnvrt:
   618                           	opt callstack 0
   619  0000A8                     vfpfcnvrt@fp:
   620                           	opt callstack 0
   621                           
   622                           ; 2 bytes @ 0x48
   623  0000A8                     	ds	2
   624  0000AA                     vfpfcnvrt@fmt:
   625                           	opt callstack 0
   626                           
   627                           ; 2 bytes @ 0x4A
   628  0000AA                     	ds	2
   629  0000AC                     vfpfcnvrt@ap:
   630                           	opt callstack 0
   631                           
   632                           ; 2 bytes @ 0x4C
   633  0000AC                     	ds	2
   634  0000AE                     ??_vfpfcnvrt:
   635                           
   636                           ; 1 bytes @ 0x4E
   637  0000AE                     	ds	4
   638  0000B2                     _vfpfcnvrt$809:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x52
   642  0000B2                     	ds	2
   643  0000B4                     _vfpfcnvrt$813:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x54
   647  0000B4                     	ds	2
   648  0000B6                     vfpfcnvrt@f:
   649                           	opt callstack 0
   650                           
   651                           ; 4 bytes @ 0x56
   652  0000B6                     	ds	4
   653  0000BA                     vfpfcnvrt@ct:
   654                           	opt callstack 0
   655                           
   656                           ; 3 bytes @ 0x5A
   657  0000BA                     	ds	3
   658  0000BD                     vfpfcnvrt@c:
   659                           	opt callstack 0
   660                           
   661                           ; 1 bytes @ 0x5D
   662  0000BD                     	ds	1
   663  0000BE                     ?_vfprintf:
   664                           	opt callstack 0
   665  0000BE                     vfprintf@fp:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0x5E
   669  0000BE                     	ds	2
   670  0000C0                     vfprintf@fmt:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0x60
   674  0000C0                     	ds	2
   675  0000C2                     vfprintf@ap:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x62
   679  0000C2                     	ds	2
   680  0000C4                     vfprintf@cfmt:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x64
   684  0000C4                     	ds	2
   685  0000C6                     ?_sprintf:
   686                           	opt callstack 0
   687  0000C6                     sprintf@s:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x66
   691  0000C6                     	ds	2
   692  0000C8                     sprintf@fmt:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x68
   696  0000C8                     	ds	6
   697  0000CE                     ??_probarUltrasonico:
   698                           
   699                           ; 1 bytes @ 0x6E
   700  0000CE                     	ds	2
   701  0000D0                     probarUltrasonico@numeroSensor:
   702                           	opt callstack 0
   703                           
   704                           ; 1 bytes @ 0x70
   705  0000D0                     	ds	1
   706                           
   707                           	psect	cstackCOMRAM
   708  000001                     __pcstackCOMRAM:
   709                           	opt callstack 0
   710  000001                     ??_antiRebote:
   711  000001                     
   712                           ; 1 bytes @ 0x0
   713  000001                     	ds	2
   714  000003                     antiRebote@pin:
   715                           	opt callstack 0
   716                           
   717                           ; 1 bytes @ 0x2
   718  000003                     	ds	1
   719  000004                     ??_boton:
   720                           
   721                           ; 1 bytes @ 0x3
   722  000004                     	ds	2
   723  000006                     ??_configPwm:
   724  000006                     ?_strlen:
   725                           	opt callstack 0
   726  000006                     ?___fpclassifyf:
   727                           	opt callstack 0
   728  000006                     ?_isupper:
   729                           	opt callstack 0
   730  000006                     ?_isdigit:
   731                           	opt callstack 0
   732  000006                     ?_strncmp:
   733                           	opt callstack 0
   734  000006                     ?_isspace:
   735                           	opt callstack 0
   736  000006                     ?___wmul:
   737                           	opt callstack 0
   738  000006                     ?___awdiv:
   739                           	opt callstack 0
   740  000006                     ?___awmod:
   741                           	opt callstack 0
   742  000006                     ?___lwdiv:
   743                           	opt callstack 0
   744  000006                     ?___fladd:
   745                           	opt callstack 0
   746  000006                     ?___lmul:
   747                           	opt callstack 0
   748  000006                     ?___flneg:
   749                           	opt callstack 0
   750  000006                     UART_write@dato:
   751                           	opt callstack 0
   752  000006                     ___wmul@multiplier:
   753                           	opt callstack 0
   754  000006                     ___awdiv@dividend:
   755                           	opt callstack 0
   756  000006                     ___awmod@dividend:
   757                           	opt callstack 0
   758  000006                     ___lwdiv@dividend:
   759                           	opt callstack 0
   760  000006                     isdigit@c:
   761                           	opt callstack 0
   762  000006                     isspace@c:
   763                           	opt callstack 0
   764  000006                     isupper@c:
   765                           	opt callstack 0
   766  000006                     fputc@c:
   767                           	opt callstack 0
   768  000006                     strcpy@dest:
   769                           	opt callstack 0
   770  000006                     strlen@s:
   771                           	opt callstack 0
   772  000006                     strncmp@_l:
   773                           	opt callstack 0
   774  000006                     ___lmul@multiplier:
   775                           	opt callstack 0
   776  000006                     ___fleq@ff1:
   777                           	opt callstack 0
   778  000006                     ___flneg@f1:
   779                           	opt callstack 0
   780  000006                     ___fladd@b:
   781                           	opt callstack 0
   782  000006                     ___fpclassifyf@x:
   783                           	opt callstack 0
   784                           
   785                           ; 4 bytes @ 0x5
   786  000006                     	ds	1
   787  000007                     UART_printf@cadena:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x6
   791  000007                     	ds	1
   792  000008                     ??_isupper:
   793  000008                     ??_isdigit:
   794  000008                     ??_isspace:
   795  000008                     configPwm@channel:
   796                           	opt callstack 0
   797  000008                     ___wmul@multiplicand:
   798                           	opt callstack 0
   799  000008                     ___awdiv@divisor:
   800                           	opt callstack 0
   801  000008                     ___awmod@divisor:
   802                           	opt callstack 0
   803  000008                     ___lwdiv@divisor:
   804                           	opt callstack 0
   805  000008                     fputc@fp:
   806                           	opt callstack 0
   807  000008                     strcpy@src:
   808                           	opt callstack 0
   809  000008                     strlen@a:
   810                           	opt callstack 0
   811  000008                     strncmp@_r:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x7
   815  000008                     	ds	1
   816  000009                     
   817                           ; 1 bytes @ 0x8
   818  000009                     	ds	1
   819  00000A                     ??_fputc:
   820  00000A                     ??___fpclassifyf:
   821  00000A                     ??_strcpy:
   822  00000A                     ___awdiv@counter:
   823                           	opt callstack 0
   824  00000A                     ___awmod@counter:
   825                           	opt callstack 0
   826  00000A                     ___lwdiv@counter:
   827                           	opt callstack 0
   828  00000A                     ___wmul@product:
   829                           	opt callstack 0
   830  00000A                     strncmp@n:
   831                           	opt callstack 0
   832  00000A                     ___lmul@multiplicand:
   833                           	opt callstack 0
   834  00000A                     ___fleq@ff2:
   835                           	opt callstack 0
   836  00000A                     ___fladd@a:
   837                           	opt callstack 0
   838                           
   839                           ; 4 bytes @ 0x9
   840  00000A                     	ds	1
   841  00000B                     ___awdiv@sign:
   842                           	opt callstack 0
   843  00000B                     ___awmod@sign:
   844                           	opt callstack 0
   845  00000B                     ___lwdiv@quotient:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0xA
   849  00000B                     	ds	1
   850  00000C                     ??_strncmp:
   851  00000C                     ?_tolower:
   852                           	opt callstack 0
   853  00000C                     _isspace$1315:
   854                           	opt callstack 0
   855  00000C                     ___awdiv@quotient:
   856                           	opt callstack 0
   857  00000C                     strcpy@s:
   858                           	opt callstack 0
   859  00000C                     tolower@c:
   860                           	opt callstack 0
   861                           
   862                           ; 2 bytes @ 0xB
   863  00000C                     	ds	1
   864  00000D                     ?_atoi:
   865                           	opt callstack 0
   866  00000D                     ?___xxtofl:
   867                           	opt callstack 0
   868  00000D                     atoi@s:
   869                           	opt callstack 0
   870  00000D                     strncmp@l:
   871                           	opt callstack 0
   872  00000D                     ___xxtofl@val:
   873                           	opt callstack 0
   874                           
   875                           ; 4 bytes @ 0xC
   876  00000D                     	ds	1
   877  00000E                     ??_tolower:
   878  00000E                     ??___fladd:
   879  00000E                     ??___fleq:
   880  00000E                     ___fpclassifyf@e:
   881                           	opt callstack 0
   882  00000E                     strcpy@d:
   883                           	opt callstack 0
   884  00000E                     ___lmul@product:
   885                           	opt callstack 0
   886                           
   887                           ; 4 bytes @ 0xD
   888  00000E                     	ds	1
   889  00000F                     ??_atoi:
   890  00000F                     fputs@s:
   891                           	opt callstack 0
   892  00000F                     strncmp@r:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0xE
   896  00000F                     	ds	1
   897  000010                     ___fpclassifyf@u:
   898                           	opt callstack 0
   899                           
   900                           ; 4 bytes @ 0xF
   901  000010                     	ds	1
   902  000011                     ??___xxtofl:
   903  000011                     fputs@fp:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x10
   907  000011                     	ds	1
   908  000012                     ?___aldiv:
   909                           	opt callstack 0
   910  000012                     ___fladd@signs:
   911                           	opt callstack 0
   912  000012                     _tolower$1414:
   913                           	opt callstack 0
   914  000012                     ___aldiv@dividend:
   915                           	opt callstack 0
   916                           
   917                           ; 4 bytes @ 0x11
   918  000012                     	ds	1
   919  000013                     ___fladd@aexp:
   920                           	opt callstack 0
   921  000013                     fputs@c:
   922                           	opt callstack 0
   923  000013                     atoi@neg:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0x12
   927  000013                     	ds	1
   928  000014                     ___fladd@bexp:
   929                           	opt callstack 0
   930  000014                     fputs@i:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x13
   934  000014                     	ds	1
   935  000015                     ___fladd@grs:
   936                           	opt callstack 0
   937  000015                     ___xxtofl@sign:
   938                           	opt callstack 0
   939  000015                     _atoi$1284:
   940                           	opt callstack 0
   941                           
   942                           ; 2 bytes @ 0x14
   943  000015                     	ds	1
   944  000016                     ?_pad:
   945                           	opt callstack 0
   946  000016                     ___xxtofl@exp:
   947                           	opt callstack 0
   948  000016                     pad@fp:
   949                           	opt callstack 0
   950  000016                     ___aldiv@divisor:
   951                           	opt callstack 0
   952                           
   953                           ; 4 bytes @ 0x15
   954  000016                     	ds	1
   955  000017                     _atoi$1286:
   956                           	opt callstack 0
   957  000017                     ___xxtofl@arg:
   958                           	opt callstack 0
   959                           
   960                           ; 4 bytes @ 0x16
   961  000017                     	ds	1
   962  000018                     pad@buf:
   963                           	opt callstack 0
   964                           
   965                           ; 2 bytes @ 0x17
   966  000018                     	ds	1
   967  000019                     _atoi$1285:
   968                           	opt callstack 0
   969                           
   970                           ; 1 bytes @ 0x18
   971  000019                     	ds	1
   972  00001A                     ___aldiv@counter:
   973                           	opt callstack 0
   974  00001A                     pad@p:
   975                           	opt callstack 0
   976  00001A                     atoi@n:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x19
   980  00001A                     	ds	1
   981  00001B                     ?___fldiv:
   982                           	opt callstack 0
   983  00001B                     ?_dameDistancia:
   984                           	opt callstack 0
   985  00001B                     ___aldiv@sign:
   986                           	opt callstack 0
   987  00001B                     ___fldiv@b:
   988                           	opt callstack 0
   989                           
   990                           ; 4 bytes @ 0x1A
   991  00001B                     	ds	1
   992  00001C                     ??_pad:
   993  00001C                     ___aldiv@quotient:
   994                           	opt callstack 0
   995                           
   996                           ; 4 bytes @ 0x1B
   997  00001C                     	ds	1
   998  00001D                     pad@i:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x1C
  1002  00001D                     	ds	2
  1003  00001F                     ??_dameDistancia:
  1004  00001F                     pad@w:
  1005                           	opt callstack 0
  1006  00001F                     ___fldiv@a:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x1E
  1010  00001F                     	ds	1
  1011  000020                     ?_map:
  1012                           	opt callstack 0
  1013  000020                     map@x:
  1014                           	opt callstack 0
  1015  000020                     UART_init@BAUD:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x1F
  1019  000020                     	ds	1
  1020  000021                     dameDistancia@numeroSensor:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x20
  1024  000021                     	ds	1
  1025  000022                     dameDistancia@distancia:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x21
  1029  000022                     	ds	1
  1030  000023                     ??___fldiv:
  1031                           
  1032                           ; 1 bytes @ 0x22
  1033  000023                     	ds	1
  1034  000024                     map@in_min:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x23
  1038  000024                     	ds	2
  1039  000026                     dameDistancia@conteo:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x25
  1043  000026                     	ds	1
  1044  000027                     ___fldiv@rem:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x26
  1048  000027                     	ds	1
  1049  000028                     map@in_max:
  1050                           	opt callstack 0
  1051  000028                     _UART_init$1640:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x27
  1055  000028                     	ds	3
  1056  00002B                     ___fldiv@sign:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x2A
  1060  00002B                     	ds	1
  1061  00002C                     ___fldiv@new_exp:
  1062                           	opt callstack 0
  1063  00002C                     map@out_min:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x2B
  1067  00002C                     	ds	2
  1068  00002E                     ___fldiv@grs:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x2D
  1072  00002E                     	ds	2
  1073  000030                     map@out_max:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 4 bytes @ 0x2F
  1077  000030                     	ds	2
  1078  000032                     ___fldiv@bexp:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x31
  1082  000032                     	ds	1
  1083  000033                     ___fldiv@aexp:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x32
  1087  000033                     	ds	1
  1088  000034                     ?_floorf:
  1089                           	opt callstack 0
  1090  000034                     ?___flmul:
  1091                           	opt callstack 0
  1092  000034                     ___flmul@b:
  1093                           	opt callstack 0
  1094  000034                     floorf@x:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x33
  1098  000034                     	ds	4
  1099  000038                     ??_floorf:
  1100  000038                     ___flmul@a:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x37
  1104  000038                     	ds	4
  1105  00003C                     ??___flmul:
  1106                           
  1107                           ; 1 bytes @ 0x3B
  1108  00003C                     	ds	2
  1109  00003E                     floorf@m:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x3D
  1113  00003E                     	ds	2
  1114  000040                     ___flmul@sign:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x3F
  1118  000040                     	ds	1
  1119  000041                     ___flmul@aexp:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x40
  1123  000041                     	ds	1
  1124  000042                     floorf@e:
  1125                           	opt callstack 0
  1126  000042                     ___flmul@grs:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x41
  1130  000042                     	ds	2
  1131  000044                     floorf@u:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x43
  1135  000044                     	ds	2
  1136  000046                     ___flmul@bexp:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x45
  1140  000046                     	ds	1
  1141  000047                     ___flmul@prod:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x46
  1145  000047                     	ds	4
  1146  00004B                     ___flmul@temp:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x4A
  1150  00004B                     	ds	2
  1151  00004D                     ?___flsub:
  1152                           	opt callstack 0
  1153  00004D                     ?___fltol:
  1154                           	opt callstack 0
  1155  00004D                     ___flge@ff1:
  1156                           	opt callstack 0
  1157  00004D                     ___fltol@f1:
  1158                           	opt callstack 0
  1159  00004D                     ___flsub@b:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x4C
  1163  00004D                     	ds	4
  1164  000051                     ??___fltol:
  1165  000051                     ___flge@ff2:
  1166                           	opt callstack 0
  1167  000051                     ___flsub@a:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x50
  1171  000051                     	ds	4
  1172  000055                     
  1173                           ; 1 bytes @ 0x54
  1174 ;;
  1175 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1176 ;;
  1177 ;; *************** function _main *****************
  1178 ;; Defined at:
  1179 ;;		line 761 in file "main.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1196 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels required when called:   12
  1199 ;; This function calls:
  1200 ;;		_UART_init
  1201 ;;		_configPwm
  1202 ;;		_configurarAdc
  1203 ;;		_inicializarComportamientoBasico
  1204 ;;		_probarSensores
  1205 ;; This function is called by:
  1206 ;;		Startup code after reset
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text0
  1211  0037BA                     __ptext0:
  1212                           	opt callstack 0
  1213  0037BA                     _main:
  1214                           	opt callstack 19
  1215  0037BA                     
  1216                           ;main.c: 764:     INTCONbits.GIE = 1;
  1217  0037BA  8EF2               	bsf	242,7,c	;volatile
  1218                           
  1219                           ;main.c: 765:     INTCONbits.INT0IE = 1;
  1220  0037BC  88F2               	bsf	242,4,c	;volatile
  1221                           
  1222                           ;main.c: 766:     INTCON2bits.INTEDG0 = 1;
  1223  0037BE  8CF1               	bsf	241,6,c	;volatile
  1224                           
  1225                           ;main.c: 768:     TRISD3 = 0;
  1226  0037C0  9695               	bcf	3989,3,c	;volatile
  1227                           
  1228                           ;main.c: 769:     TRISB1 = 1;
  1229  0037C2  8293               	bsf	3987,1,c	;volatile
  1230                           
  1231                           ;main.c: 770:     TRISB2 = 1;
  1232  0037C4  8493               	bsf	3987,2,c	;volatile
  1233                           
  1234                           ;main.c: 771:     TRISB3 = 1;
  1235  0037C6  8693               	bsf	3987,3,c	;volatile
  1236                           
  1237                           ;main.c: 773:     TRISB4 = 0;
  1238  0037C8  9893               	bcf	3987,4,c	;volatile
  1239                           
  1240                           ;main.c: 774:     TRISB5 = 0;
  1241  0037CA  9A93               	bcf	3987,5,c	;volatile
  1242                           
  1243                           ;main.c: 775:     TRISB6 = 0;
  1244  0037CC  9C93               	bcf	3987,6,c	;volatile
  1245                           
  1246                           ;main.c: 776:     TRISB7 = 0;
  1247  0037CE  9E93               	bcf	3987,7,c	;volatile
  1248                           
  1249                           ;main.c: 778:     TRISDbits.RD2 = 0;
  1250  0037D0  9495               	bcf	149,2,c	;volatile
  1251                           
  1252                           ;main.c: 779:     TRISB0 = 1;
  1253  0037D2  8093               	bsf	3987,0,c	;volatile
  1254                           
  1255                           ;main.c: 781:     LATD3 = 0;
  1256  0037D4  968C               	bcf	3980,3,c	;volatile
  1257                           
  1258                           ;main.c: 782:     LATB4 = 0;
  1259  0037D6  988A               	bcf	3978,4,c	;volatile
  1260                           
  1261                           ;main.c: 783:     LATB5 = 0;
  1262  0037D8  9A8A               	bcf	3978,5,c	;volatile
  1263                           
  1264                           ;main.c: 784:     LATB6 = 0;
  1265  0037DA  9C8A               	bcf	3978,6,c	;volatile
  1266                           
  1267                           ;main.c: 785:     LATB7 = 0;
  1268  0037DC  9E8A               	bcf	3978,7,c	;volatile
  1269                           
  1270                           ;main.c: 786:     LATD2 = 0;
  1271  0037DE  948C               	bcf	3980,2,c	;volatile
  1272  0037E0                     
  1273                           ;main.c: 789:     T1CON = 0b00000000;
  1274  0037E0  0E00               	movlw	0
  1275  0037E2  6ECD               	movwf	205,c	;volatile
  1276  0037E4                     
  1277                           ;main.c: 791:     configPwm(1);
  1278  0037E4  0E01               	movlw	1
  1279  0037E6  ECEC  F01D         	call	_configPwm
  1280  0037EA                     
  1281                           ;main.c: 792:     configPwm(2);
  1282  0037EA  0E02               	movlw	2
  1283  0037EC  ECEC  F01D         	call	_configPwm
  1284  0037F0                     
  1285                           ;main.c: 793:     configurarAdc();
  1286  0037F0  EC4A  F01F         	call	_configurarAdc	;wreg free
  1287  0037F4                     
  1288                           ;main.c: 795:     UART_init(9600);
  1289  0037F4  0E80               	movlw	128
  1290  0037F6  6E20               	movwf	UART_init@BAUD^0,c
  1291  0037F8  0E25               	movlw	37
  1292  0037FA  6E21               	movwf	(UART_init@BAUD+1)^0,c
  1293  0037FC  0E00               	movlw	0
  1294  0037FE  6E22               	movwf	(UART_init@BAUD+2)^0,c
  1295  003800  0E00               	movlw	0
  1296  003802  6E23               	movwf	(UART_init@BAUD+3)^0,c
  1297  003804  EC15  F01C         	call	_UART_init	;wreg free
  1298  003808                     l7867:
  1299                           
  1300                           ;main.c: 799:         if (!pausa) {
  1301  003808  0100               	movlb	0	; () banked
  1302  00380A  51F9               	movf	_pausa& (0+255),w,b
  1303  00380C  A4D8               	btfss	status,2,c
  1304  00380E  EF0B  F01C         	goto	u9641
  1305  003812  EF0D  F01C         	goto	u9640
  1306  003816                     u9641:
  1307  003816  EF04  F01C         	goto	l7867
  1308  00381A                     u9640:
  1309  00381A                     
  1310                           ; BSR set to: 0
  1311                           ;main.c: 801:             probarSensores();
  1312  00381A  EC40  F01F         	call	_probarSensores	;wreg free
  1313  00381E                     
  1314                           ;main.c: 802:             inicializarComportamientoBasico();
  1315  00381E  EC14  F01E         	call	_inicializarComportamientoBasico	;wreg free
  1316                           
  1317                           ;main.c: 805:         } else {
  1318  003822  EF04  F01C         	goto	l7867
  1319  003826  EF07  F000         	goto	start
  1320  00382A                     __end_of_main:
  1321                           	opt callstack 0
  1322                           
  1323 ;; *************** function _probarSensores *****************
  1324 ;; Defined at:
  1325 ;;		line 98 in file "main.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         0       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:   11
  1346 ;; This function calls:
  1347 ;;		_probarUltrasonico
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text1
  1354  003E80                     __ptext1:
  1355                           	opt callstack 0
  1356  003E80                     _probarSensores:
  1357                           	opt callstack 19
  1358  003E80                     
  1359                           ;main.c: 99:     probarUltrasonico(ENFRENTE);
  1360  003E80  0E01               	movlw	1
  1361  003E82  EC59  F01A         	call	_probarUltrasonico
  1362                           
  1363                           ;main.c: 100:     probarUltrasonico(IZQUIERDA);
  1364  003E86  0E02               	movlw	2
  1365  003E88  EC59  F01A         	call	_probarUltrasonico
  1366                           
  1367                           ;main.c: 101:     probarUltrasonico(DERECHA);
  1368  003E8C  0E03               	movlw	3
  1369  003E8E  EC59  F01A         	call	_probarUltrasonico
  1370  003E92  0012               	return		;funcret
  1371  003E94                     __end_of_probarSensores:
  1372                           	opt callstack 0
  1373                           
  1374 ;; *************** function _probarUltrasonico *****************
  1375 ;; Defined at:
  1376 ;;		line 104 in file "main.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  numeroSensor    1    wreg     unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  numeroSensor    1  112[BANK0 ] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0
  1391 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1392 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1393 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1394 ;;Total ram usage:        3 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:   10
  1397 ;; This function calls:
  1398 ;;		_UART_printf
  1399 ;;		_dameDistancia
  1400 ;;		_sprintf
  1401 ;; This function is called by:
  1402 ;;		_probarSensores
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text2
  1407  0034B2                     __ptext2:
  1408                           	opt callstack 0
  1409  0034B2                     _probarUltrasonico:
  1410                           	opt callstack 19
  1411                           
  1412                           ;incstack = 0
  1413                           ;probarUltrasonico@numeroSensor stored from wreg
  1414  0034B2  0100               	movlb	0	; () banked
  1415  0034B4  6FD0               	movwf	probarUltrasonico@numeroSensor& (0+255),b
  1416  0034B6                     
  1417                           ;main.c: 106:     switch (numeroSensor) {
  1418  0034B6  EF75  F01A         	goto	l7339
  1419  0034BA                     l7331:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;main.c: 109:             UART_printf("\rEnfrente: \r\n");
  1423  0034BA  0E2B               	movlw	low STR_1
  1424  0034BC  6E07               	movwf	UART_printf@cadena^0,c
  1425  0034BE  0E08               	movlw	high STR_1
  1426  0034C0  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1427  0034C2  ECE3  F01C         	call	_UART_printf	;wreg free
  1428                           
  1429                           ;main.c: 110:             break;
  1430  0034C6  EF8F  F01A         	goto	l7341
  1431  0034CA                     l7333:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;main.c: 113:             UART_printf("\rIzquierda: \r\n");
  1435  0034CA  0E1C               	movlw	low STR_2
  1436  0034CC  6E07               	movwf	UART_printf@cadena^0,c
  1437  0034CE  0E08               	movlw	high STR_2
  1438  0034D0  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1439  0034D2  ECE3  F01C         	call	_UART_printf	;wreg free
  1440                           
  1441                           ;main.c: 114:             break;
  1442  0034D6  EF8F  F01A         	goto	l7341
  1443  0034DA                     l7335:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;main.c: 117:             UART_printf("\rDerecha: \r\n");
  1447  0034DA  0E39               	movlw	low STR_3
  1448  0034DC  6E07               	movwf	UART_printf@cadena^0,c
  1449  0034DE  0E08               	movlw	high STR_3
  1450  0034E0  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1451  0034E2  ECE3  F01C         	call	_UART_printf	;wreg free
  1452                           
  1453                           ;main.c: 118:             break;
  1454  0034E6  EF8F  F01A         	goto	l7341
  1455  0034EA                     l7339:
  1456  0034EA  0100               	movlb	0	; () banked
  1457  0034EC  51D0               	movf	probarUltrasonico@numeroSensor& (0+255),w,b
  1458  0034EE  6FCE               	movwf	??_probarUltrasonico& (0+255),b
  1459  0034F0  6BCF               	clrf	(??_probarUltrasonico+1)& (0+255),b
  1460                           
  1461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 1, Range of values is 0 to 0
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte            4     3 (average)
  1467                           ;	Chosen strategy is simple_byte
  1468  0034F2  51CF               	movf	(??_probarUltrasonico+1)& (0+255),w,b
  1469  0034F4  0A00               	xorlw	0	; case 0
  1470  0034F6  B4D8               	btfsc	status,2,c
  1471  0034F8  EF80  F01A         	goto	l7993
  1472  0034FC  EF8F  F01A         	goto	l7341
  1473  003500                     l7993:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ; Switch size 1, requested type "simple"
  1477                           ; Number of cases is 3, Range of values is 1 to 3
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; simple_byte           10     6 (average)
  1481                           ;	Chosen strategy is simple_byte
  1482  003500  51CE               	movf	??_probarUltrasonico& (0+255),w,b
  1483  003502  0A01               	xorlw	1	; case 1
  1484  003504  B4D8               	btfsc	status,2,c
  1485  003506  EF5D  F01A         	goto	l7331
  1486  00350A  0A03               	xorlw	3	; case 2
  1487  00350C  B4D8               	btfsc	status,2,c
  1488  00350E  EF65  F01A         	goto	l7333
  1489  003512  0A01               	xorlw	1	; case 3
  1490  003514  B4D8               	btfsc	status,2,c
  1491  003516  EF6D  F01A         	goto	l7335
  1492  00351A  EF8F  F01A         	goto	l7341
  1493  00351E                     l7341:
  1494                           
  1495                           ;main.c: 122:     sprintf(buffer, "\rDistancia: %.2f cm\r\n\n", dameDistancia(numeroSens
      +                          or));
  1496  00351E  0E9E               	movlw	low _buffer
  1497  003520  0100               	movlb	0	; () banked
  1498  003522  6FC6               	movwf	sprintf@s& (0+255),b
  1499  003524  0E01               	movlw	high _buffer
  1500  003526  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1501  003528  0E05               	movlw	low STR_4
  1502  00352A  6FC8               	movwf	sprintf@fmt& (0+255),b
  1503  00352C  0E08               	movlw	high STR_4
  1504  00352E  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1505  003530  51D0               	movf	probarUltrasonico@numeroSensor& (0+255),w,b
  1506  003532  EC07  F016         	call	_dameDistancia
  1507  003536  C01B  F0CA         	movff	?_dameDistancia,?_sprintf+4
  1508  00353A  C01C  F0CB         	movff	?_dameDistancia+1,?_sprintf+5
  1509  00353E  C01D  F0CC         	movff	?_dameDistancia+2,?_sprintf+6
  1510  003542  C01E  F0CD         	movff	?_dameDistancia+3,?_sprintf+7
  1511  003546  EC40  F01D         	call	_sprintf	;wreg free
  1512  00354A                     
  1513                           ;main.c: 123:     UART_printf(buffer);
  1514  00354A  0E9E               	movlw	low _buffer
  1515  00354C  6E07               	movwf	UART_printf@cadena^0,c
  1516  00354E  0E01               	movlw	high _buffer
  1517  003550  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1518  003552  ECE3  F01C         	call	_UART_printf	;wreg free
  1519  003556                     
  1520                           ;main.c: 124:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1521  003556  0E06               	movlw	6
  1522  003558  0100               	movlb	0	; () banked
  1523  00355A  6FCF               	movwf	(??_probarUltrasonico+1)& (0+255),b
  1524  00355C  0E13               	movlw	19
  1525  00355E  6FCE               	movwf	??_probarUltrasonico& (0+255),b
  1526  003560  0EAD               	movlw	173
  1527  003562                     u9657:
  1528  003562  2EE8               	decfsz	wreg,f,c
  1529  003564  D7FE               	bra	u9657
  1530  003566  2FCE               	decfsz	??_probarUltrasonico& (0+255),f,b
  1531  003568  D7FC               	bra	u9657
  1532  00356A  2FCF               	decfsz	(??_probarUltrasonico+1)& (0+255),f,b
  1533  00356C  D7FA               	bra	u9657
  1534  00356E  D000               	nop2	
  1535  003570  0012               	return		;funcret
  1536  003572                     __end_of_probarUltrasonico:
  1537                           	opt callstack 0
  1538                           
  1539 ;; *************** function _sprintf *****************
  1540 ;; Defined at:
  1541 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  s               2  102[BANK0 ] PTR unsigned char 
  1544 ;;		 -> buffer(50), 
  1545 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  1546 ;;		 -> STR_4(23), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  f               6    4[BANK1 ] struct _IO_FILE
  1549 ;;  ap              2    2[BANK1 ] PTR void [1]
  1550 ;;		 -> ?_sprintf(2), 
  1551 ;;  ret             2    0        int 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  2  102[BANK0 ] int 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1561 ;;      Params:         0       8       0       0       0       0       0       0       0
  1562 ;;      Locals:         0       0      10       0       0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1564 ;;      Totals:         0       8      10       0       0       0       0       0       0
  1565 ;;Total ram usage:       18 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    9
  1568 ;; This function calls:
  1569 ;;		_vfprintf
  1570 ;; This function is called by:
  1571 ;;		_probarUltrasonico
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text3
  1576  003A80                     __ptext3:
  1577                           	opt callstack 0
  1578  003A80                     _sprintf:
  1579                           	opt callstack 19
  1580  003A80  0ECA               	movlw	low (?_sprintf+4)
  1581  003A82  0101               	movlb	1	; () banked
  1582  003A84  6FD2               	movwf	sprintf@ap& (0+255),b
  1583  003A86  0E00               	movlw	high (?_sprintf+4)
  1584  003A88  6FD3               	movwf	(sprintf@ap+1)& (0+255),b
  1585  003A8A  C0C6  F1D4         	movff	sprintf@s,sprintf@f
  1586  003A8E  C0C7  F1D5         	movff	sprintf@s+1,sprintf@f+1
  1587  003A92                     
  1588                           ; BSR set to: 1
  1589  003A92  0E00               	movlw	0
  1590  003A94  6FD7               	movwf	(sprintf@f+3)& (0+255),b
  1591  003A96  0E00               	movlw	0
  1592  003A98  6FD6               	movwf	(sprintf@f+2)& (0+255),b
  1593  003A9A                     
  1594                           ; BSR set to: 1
  1595  003A9A  0E00               	movlw	0
  1596  003A9C  6FD9               	movwf	(sprintf@f+5)& (0+255),b
  1597  003A9E  0E00               	movlw	0
  1598  003AA0  6FD8               	movwf	(sprintf@f+4)& (0+255),b
  1599  003AA2                     
  1600                           ; BSR set to: 1
  1601  003AA2  0ED4               	movlw	low sprintf@f
  1602  003AA4  0100               	movlb	0	; () banked
  1603  003AA6  6FBE               	movwf	vfprintf@fp& (0+255),b
  1604  003AA8  0E01               	movlw	high sprintf@f
  1605  003AAA  6FBF               	movwf	(vfprintf@fp+1)& (0+255),b
  1606  003AAC  C0C8  F0C0         	movff	sprintf@fmt,vfprintf@fmt
  1607  003AB0  C0C9  F0C1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1608  003AB4  0ED2               	movlw	low sprintf@ap
  1609  003AB6  6FC2               	movwf	vfprintf@ap& (0+255),b
  1610  003AB8  0E01               	movlw	high sprintf@ap
  1611  003ABA  6FC3               	movwf	(vfprintf@ap+1)& (0+255),b
  1612  003ABC  EC82  F01C         	call	_vfprintf	;wreg free
  1613  003AC0  0101               	movlb	1	; () banked
  1614  003AC2  51D6               	movf	(sprintf@f+2)& (0+255),w,b
  1615  003AC4  0100               	movlb	0	; () banked
  1616  003AC6  25C6               	addwf	sprintf@s& (0+255),w,b
  1617  003AC8  6ED9               	movwf	fsr2l,c
  1618  003ACA  0101               	movlb	1	; () banked
  1619  003ACC  51D7               	movf	(sprintf@f+3)& (0+255),w,b
  1620  003ACE  0100               	movlb	0	; () banked
  1621  003AD0  21C7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1622  003AD2  6EDA               	movwf	fsr2h,c
  1623  003AD4  0E00               	movlw	0
  1624  003AD6  6EDF               	movwf	indf2,c
  1625  003AD8                     
  1626                           ; BSR set to: 0
  1627  003AD8  0012               	return		;funcret
  1628  003ADA                     __end_of_sprintf:
  1629                           	opt callstack 0
  1630                           
  1631 ;; *************** function _vfprintf *****************
  1632 ;; Defined at:
  1633 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  fp              2   94[BANK0 ] PTR struct _IO_FILE
  1636 ;;		 -> sprintf@f(6), 
  1637 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  1638 ;;		 -> STR_4(23), 
  1639 ;;  ap              2   98[BANK0 ] PTR PTR void 
  1640 ;;		 -> sprintf@ap(2), 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  cfmt            2  100[BANK0 ] PTR unsigned char 
  1643 ;;		 -> STR_4(23), 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  2   94[BANK0 ] int 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1653 ;;      Params:         0       6       0       0       0       0       0       0       0
  1654 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1656 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1657 ;;Total ram usage:        8 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    8
  1660 ;; This function calls:
  1661 ;;		_vfpfcnvrt
  1662 ;; This function is called by:
  1663 ;;		_sprintf
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text4
  1668  003904                     __ptext4:
  1669                           	opt callstack 0
  1670  003904                     _vfprintf:
  1671                           	opt callstack 19
  1672  003904                     
  1673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1674  003904  C0C0  F0C4         	movff	vfprintf@fmt,vfprintf@cfmt
  1675  003908  C0C1  F0C5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1676  00390C                     
  1677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1678  00390C  0E00               	movlw	0
  1679  00390E  0100               	movlb	0	; () banked
  1680  003910  6FE6               	movwf	(_nout+1)& (0+255),b
  1681  003912  0E00               	movlw	0
  1682  003914  6FE5               	movwf	_nout& (0+255),b
  1683                           
  1684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1685  003916  EFA0  F01C         	goto	l7187
  1686  00391A                     l7185:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1690  00391A  C0BE  F0A8         	movff	vfprintf@fp,vfpfcnvrt@fp
  1691  00391E  C0BF  F0A9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1692  003922  0EC4               	movlw	low vfprintf@cfmt
  1693  003924  6FAA               	movwf	vfpfcnvrt@fmt& (0+255),b
  1694  003926  0E00               	movlw	high vfprintf@cfmt
  1695  003928  6FAB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1696  00392A  C0C2  F0AC         	movff	vfprintf@ap,vfpfcnvrt@ap
  1697  00392E  C0C3  F0AD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1698  003932  EC65  F00C         	call	_vfpfcnvrt	;wreg free
  1699  003936  0100               	movlb	0	; () banked
  1700  003938  51A8               	movf	?_vfpfcnvrt& (0+255),w,b
  1701  00393A  27E5               	addwf	_nout& (0+255),f,b
  1702  00393C  51A9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1703  00393E  23E6               	addwfc	(_nout+1)& (0+255),f,b
  1704  003940                     l7187:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1708  003940  C0C4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1709  003944  C0C5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1710  003948                     	if	0	;tblptru may be non-zero
  1711  003948                     	endif
  1712  003948                     	if	0	;tblptru may be non-zero
  1713  003948                     	endif
  1714  003948  0008               	tblrd		*
  1715  00394A  50F5               	movf	tablat,w,c
  1716  00394C  0900               	iorlw	0
  1717  00394E  A4D8               	btfss	status,2,c
  1718  003950  EFAC  F01C         	goto	u8771
  1719  003954  EFAE  F01C         	goto	u8770
  1720  003958                     u8771:
  1721  003958  EF8D  F01C         	goto	l7185
  1722  00395C                     u8770:
  1723  00395C                     
  1724                           ; BSR set to: 0
  1725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1726  00395C  C0E5  F0BE         	movff	_nout,?_vfprintf
  1727  003960  C0E6  F0BF         	movff	_nout+1,?_vfprintf+1
  1728  003964                     
  1729                           ; BSR set to: 0
  1730  003964  0012               	return		;funcret
  1731  003966                     __end_of_vfprintf:
  1732                           	opt callstack 0
  1733                           
  1734 ;; *************** function _vfpfcnvrt *****************
  1735 ;; Defined at:
  1736 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  1739 ;;		 -> sprintf@f(6), 
  1740 ;;  fmt             2   74[BANK0 ] PTR PTR unsigned char 
  1741 ;;		 -> vfprintf@cfmt(2), 
  1742 ;;  ap              2   76[BANK0 ] PTR PTR void 
  1743 ;;		 -> sprintf@ap(2), 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  llu             8    0        unsigned long long 
  1746 ;;  ll              8    0        long long 
  1747 ;;  f               4   86[BANK0 ] long long 
  1748 ;;  ct              3   90[BANK0 ] unsigned char [3]
  1749 ;;  vp              3    0        PTR void 
  1750 ;;  cp              3    0        PTR unsigned char 
  1751 ;;  i               2    0        int 
  1752 ;;  done            2    0        int 
  1753 ;;  c               1   93[BANK0 ] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  2   72[BANK0 ] int 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1763 ;;      Params:         0       6       0       0       0       0       0       0       0
  1764 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1765 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1766 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1767 ;;Total ram usage:       22 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    7
  1770 ;; This function calls:
  1771 ;;		_atoi
  1772 ;;		_efgtoa
  1773 ;;		_fputc
  1774 ;;		_isdigit
  1775 ;;		_isupper
  1776 ;;		_strncmp
  1777 ;;		_tolower
  1778 ;; This function is called by:
  1779 ;;		_vfprintf
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text5
  1784  0018CA                     __ptext5:
  1785                           	opt callstack 0
  1786  0018CA                     _vfpfcnvrt:
  1787                           	opt callstack 19
  1788  0018CA                     
  1789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1790  0018CA  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1791  0018CE  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1792  0018D2  CFDE FFF6          	movff	postinc2,tblptrl
  1793  0018D6  CFDD FFF7          	movff	postdec2,tblptrh
  1794  0018DA                     	if	0	;tblptru may be non-zero
  1795  0018DA                     	endif
  1796  0018DA                     	if	0	;tblptru may be non-zero
  1797  0018DA                     	endif
  1798  0018DA  0008               	tblrd		*
  1799  0018DC  50F5               	movf	tablat,w,c
  1800  0018DE  0A25               	xorlw	37
  1801  0018E0  A4D8               	btfss	status,2,c
  1802  0018E2  EF75  F00C         	goto	u8621
  1803  0018E6  EF77  F00C         	goto	u8620
  1804  0018EA                     u8621:
  1805  0018EA  EF80  F00E         	goto	l7171
  1806  0018EE                     u8620:
  1807  0018EE                     
  1808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1809  0018EE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1810  0018F2  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1811  0018F6  2ADE               	incf	postinc2,f,c
  1812  0018F8  0E00               	movlw	0
  1813  0018FA  22DD               	addwfc	postdec2,f,c
  1814  0018FC                     
  1815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1816  0018FC  0E00               	movlw	0
  1817  0018FE  0100               	movlb	0	; () banked
  1818  001900  6FE8               	movwf	(_width+1)& (0+255),b
  1819  001902  0E00               	movlw	0
  1820  001904  6FE7               	movwf	_width& (0+255),b
  1821  001906  C0E7  F0EB         	movff	_width,_flags
  1822  00190A  C0E8  F0EC         	movff	_width+1,_flags+1
  1823  00190E                     
  1824                           ; BSR set to: 0
  1825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1826  00190E  69E9               	setf	_prec& (0+255),b
  1827  001910  69EA               	setf	(_prec+1)& (0+255),b
  1828  001912                     
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1831  001912  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1832  001916  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1833  00191A  CFDE FFF6          	movff	postinc2,tblptrl
  1834  00191E  CFDD FFF7          	movff	postdec2,tblptrh
  1835  001922                     	if	0	;tblptru may be non-zero
  1836  001922                     	endif
  1837  001922                     	if	0	;tblptru may be non-zero
  1838  001922                     	endif
  1839  001922  0008               	tblrd		*
  1840  001924  50F5               	movf	tablat,w,c
  1841  001926  0A2E               	xorlw	46
  1842  001928  A4D8               	btfss	status,2,c
  1843  00192A  EF99  F00C         	goto	u8631
  1844  00192E  EF9B  F00C         	goto	u8630
  1845  001932                     u8631:
  1846  001932  EF19  F00D         	goto	l7117
  1847  001936                     u8630:
  1848  001936                     
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1851  001936  0E00               	movlw	0
  1852  001938  6FEA               	movwf	(_prec+1)& (0+255),b
  1853  00193A  0E00               	movlw	0
  1854  00193C  6FE9               	movwf	_prec& (0+255),b
  1855  00193E                     
  1856                           ; BSR set to: 0
  1857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1858  00193E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1859  001942  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1860  001946  2ADE               	incf	postinc2,f,c
  1861  001948  0E00               	movlw	0
  1862  00194A  22DD               	addwfc	postdec2,f,c
  1863  00194C                     
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1866  00194C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1867  001950  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1868  001954  CFDE FFF6          	movff	postinc2,tblptrl
  1869  001958  CFDD FFF7          	movff	postdec2,tblptrh
  1870  00195C                     	if	0	;tblptru may be non-zero
  1871  00195C                     	endif
  1872  00195C                     	if	0	;tblptru may be non-zero
  1873  00195C                     	endif
  1874  00195C  0008               	tblrd		*
  1875  00195E  50F5               	movf	tablat,w,c
  1876  001960  0A2A               	xorlw	42
  1877  001962  A4D8               	btfss	status,2,c
  1878  001964  EFB6  F00C         	goto	u8641
  1879  001968  EFB8  F00C         	goto	u8640
  1880  00196C                     u8641:
  1881  00196C  EFD5  F00C         	goto	l7107
  1882  001970                     u8640:
  1883  001970                     
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1886  001970  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1887  001974  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1888  001978  2ADE               	incf	postinc2,f,c
  1889  00197A  0E00               	movlw	0
  1890  00197C  22DD               	addwfc	postdec2,f,c
  1891                           
  1892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1893  00197E  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1894  001982  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1895  001986  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  1896  00198A  0E02               	movlw	2
  1897  00198C  26DE               	addwf	postinc2,f,c
  1898  00198E  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  1899  001992  0E00               	movlw	0
  1900  001994  22DD               	addwfc	postdec2,f,c
  1901  001996  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1902  00199A  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1903  00199E  CFDE F0E9          	movff	postinc2,_prec
  1904  0019A2  CFDD F0EA          	movff	postdec2,_prec+1
  1905                           
  1906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1907  0019A6  EF19  F00D         	goto	l7117
  1908  0019AA                     l7107:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1912  0019AA  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  0019AE  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  0019B2  CFDE F00D          	movff	postinc2,atoi@s
  1915  0019B6  CFDD F00E          	movff	postdec2,atoi@s+1
  1916  0019BA  EC3F  F015         	call	_atoi	;wreg free
  1917  0019BE  C00D  F0E9         	movff	?_atoi,_prec
  1918  0019C2  C00E  F0EA         	movff	?_atoi+1,_prec+1
  1919                           
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1921  0019C6  EFEC  F00C         	goto	l7111
  1922  0019CA                     l7109:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1926  0019CA  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1927  0019CE  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1928  0019D2  2ADE               	incf	postinc2,f,c
  1929  0019D4  0E00               	movlw	0
  1930  0019D6  22DD               	addwfc	postdec2,f,c
  1931  0019D8                     l7111:
  1932  0019D8  0ED0               	movlw	208
  1933  0019DA  0100               	movlb	0	; () banked
  1934  0019DC  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  1935  0019DE  0EFF               	movlw	255
  1936  0019E0  6FAF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1937  0019E2  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1938  0019E6  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1939  0019EA  CFDE FFF6          	movff	postinc2,tblptrl
  1940  0019EE  CFDD FFF7          	movff	postdec2,tblptrh
  1941  0019F2                     	if	0	;tblptru may be non-zero
  1942  0019F2                     	endif
  1943  0019F2                     	if	0	;tblptru may be non-zero
  1944  0019F2                     	endif
  1945  0019F2  0008               	tblrd		*
  1946  0019F4  50F5               	movf	tablat,w,c
  1947  0019F6  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1948  0019F8  6BB1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1949  0019FA  51AE               	movf	??_vfpfcnvrt& (0+255),w,b
  1950  0019FC  27B0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1951  0019FE  51AF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1952  001A00  23B1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1953  001A02  51B1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1954  001A04  E10A               	bnz	u8650
  1955  001A06  0E0A               	movlw	10
  1956  001A08  5DB0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1957  001A0A  A0D8               	btfss	status,0,c
  1958  001A0C  EF0A  F00D         	goto	u8651
  1959  001A10  EF0D  F00D         	goto	u8650
  1960  001A14                     u8651:
  1961  001A14  0E01               	movlw	1
  1962  001A16  EF0E  F00D         	goto	u8660
  1963  001A1A                     u8650:
  1964  001A1A  0E00               	movlw	0
  1965  001A1C                     u8660:
  1966  001A1C  6FB2               	movwf	_vfpfcnvrt$809& (0+255),b
  1967  001A1E  6BB3               	clrf	(_vfpfcnvrt$809+1)& (0+255),b
  1968  001A20                     
  1969                           ; BSR set to: 0
  1970  001A20  51B2               	movf	_vfpfcnvrt$809& (0+255),w,b
  1971  001A22  11B3               	iorwf	(_vfpfcnvrt$809+1)& (0+255),w,b
  1972  001A24  A4D8               	btfss	status,2,c
  1973  001A26  EF17  F00D         	goto	u8671
  1974  001A2A  EF19  F00D         	goto	u8670
  1975  001A2E                     u8671:
  1976  001A2E  EFE5  F00C         	goto	l7109
  1977  001A32                     u8670:
  1978  001A32                     l7117:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1982  001A32  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1983  001A36  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1984  001A3A  CFDE FFF6          	movff	postinc2,tblptrl
  1985  001A3E  CFDD FFF7          	movff	postdec2,tblptrh
  1986  001A42                     	if	0	;tblptru may be non-zero
  1987  001A42                     	endif
  1988  001A42                     	if	0	;tblptru may be non-zero
  1989  001A42                     	endif
  1990  001A42  0008               	tblrd		*
  1991  001A44  50F5               	movf	tablat,w,c
  1992  001A46  6E0C               	movwf	tolower@c^0,c
  1993  001A48  6A0D               	clrf	(tolower@c+1)^0,c
  1994  001A4A  ECB3  F01C         	call	_tolower	;wreg free
  1995  001A4E  500C               	movf	?_tolower^0,w,c
  1996  001A50  0100               	movlb	0	; () banked
  1997  001A52  6FBA               	movwf	vfpfcnvrt@ct& (0+255),b
  1998  001A54                     
  1999                           ; BSR set to: 0
  2000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2001  001A54  51BA               	movf	vfpfcnvrt@ct& (0+255),w,b
  2002  001A56  B4D8               	btfsc	status,2,c
  2003  001A58  EF30  F00D         	goto	u8681
  2004  001A5C  EF32  F00D         	goto	u8680
  2005  001A60                     u8681:
  2006  001A60  EF6C  F00D         	goto	l7127
  2007  001A64                     u8680:
  2008  001A64                     
  2009                           ; BSR set to: 0
  2010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2011  001A64  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2012  001A68  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2013  001A6C  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  2014  001A70  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  2015  001A74  0E01               	movlw	1
  2016  001A76  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  2017  001A78  0E00               	movlw	0
  2018  001A7A  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2019  001A7C  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2020  001A80  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2021  001A84                     	if	0	;tblptru may be non-zero
  2022  001A84                     	endif
  2023  001A84                     	if	0	;tblptru may be non-zero
  2024  001A84                     	endif
  2025  001A84  0008               	tblrd		*
  2026  001A86  50F5               	movf	tablat,w,c
  2027  001A88  6E0C               	movwf	tolower@c^0,c
  2028  001A8A  6A0D               	clrf	(tolower@c+1)^0,c
  2029  001A8C  ECB3  F01C         	call	_tolower	;wreg free
  2030  001A90  500C               	movf	?_tolower^0,w,c
  2031  001A92  0100               	movlb	0	; () banked
  2032  001A94  6FBB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2033  001A96                     
  2034                           ; BSR set to: 0
  2035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2036  001A96  51BB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2037  001A98  B4D8               	btfsc	status,2,c
  2038  001A9A  EF51  F00D         	goto	u8691
  2039  001A9E  EF53  F00D         	goto	u8690
  2040  001AA2                     u8691:
  2041  001AA2  EF6C  F00D         	goto	l7127
  2042  001AA6                     u8690:
  2043  001AA6                     
  2044                           ; BSR set to: 0
  2045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2046  001AA6  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2047  001AAA  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2048  001AAE  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  2049  001AB2  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  2050  001AB6  0E02               	movlw	2
  2051  001AB8  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  2052  001ABA  0E00               	movlw	0
  2053  001ABC  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2054  001ABE  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2055  001AC2  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2056  001AC6                     	if	0	;tblptru may be non-zero
  2057  001AC6                     	endif
  2058  001AC6                     	if	0	;tblptru may be non-zero
  2059  001AC6                     	endif
  2060  001AC6  0008               	tblrd		*
  2061  001AC8  50F5               	movf	tablat,w,c
  2062  001ACA  6E0C               	movwf	tolower@c^0,c
  2063  001ACC  6A0D               	clrf	(tolower@c+1)^0,c
  2064  001ACE  ECB3  F01C         	call	_tolower	;wreg free
  2065  001AD2  500C               	movf	?_tolower^0,w,c
  2066  001AD4  0100               	movlb	0	; () banked
  2067  001AD6  6FBC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2068  001AD8                     l7127:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2072  001AD8  0E66               	movlw	102
  2073  001ADA  19BA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2074  001ADC  A4D8               	btfss	status,2,c
  2075  001ADE  EF73  F00D         	goto	u8701
  2076  001AE2  EF75  F00D         	goto	u8700
  2077  001AE6                     u8701:
  2078  001AE6  EFB5  F00D         	goto	l7139
  2079  001AEA                     u8700:
  2080  001AEA                     
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2083  001AEA  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  001AEE  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  001AF2  CFDE FFF6          	movff	postinc2,tblptrl
  2086  001AF6  CFDD FFF7          	movff	postdec2,tblptrh
  2087  001AFA                     	if	0	;tblptru may be non-zero
  2088  001AFA                     	endif
  2089  001AFA                     	if	0	;tblptru may be non-zero
  2090  001AFA                     	endif
  2091  001AFA  0008               	tblrd		*
  2092  001AFC  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  2093  001B00                     
  2094                           ; BSR set to: 0
  2095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2096  001B00  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2097  001B04  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2098  001B08  2ADE               	incf	postinc2,f,c
  2099  001B0A  0E00               	movlw	0
  2100  001B0C  22DD               	addwfc	postdec2,f,c
  2101  001B0E                     
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2104  001B0E  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2105  001B12  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2106  001B16  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  2107  001B1A  0E04               	movlw	4
  2108  001B1C  26DE               	addwf	postinc2,f,c
  2109  001B1E  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  2110  001B22  0E00               	movlw	0
  2111  001B24  22DD               	addwfc	postdec2,f,c
  2112  001B26  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2113  001B2A  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2114  001B2E  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2115  001B32  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2116  001B36  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2117  001B3A  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2118  001B3E                     l7135:
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2122  001B3E  C0A8  F064         	movff	vfpfcnvrt@fp,efgtoa@fp
  2123  001B42  C0A9  F065         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2124  001B46  C0B6  F066         	movff	vfpfcnvrt@f,efgtoa@f
  2125  001B4A  C0B7  F067         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2126  001B4E  C0B8  F068         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2127  001B52  C0B9  F069         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2128  001B56  C0BD  F06A         	movff	vfpfcnvrt@c,efgtoa@c
  2129  001B5A  EC2D  F004         	call	_efgtoa	;wreg free
  2130  001B5E  C064  F0A8         	movff	?_efgtoa,?_vfpfcnvrt
  2131  001B62  C065  F0A9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2132  001B66  EF9B  F00E         	goto	l687
  2133  001B6A                     l7139:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2137  001B6A  0EBA               	movlw	low vfpfcnvrt@ct
  2138  001B6C  6E06               	movwf	strncmp@_l^0,c
  2139  001B6E  0E00               	movlw	high vfpfcnvrt@ct
  2140  001B70  6E07               	movwf	(strncmp@_l+1)^0,c
  2141  001B72  0E56               	movlw	low STR_13
  2142  001B74  6E08               	movwf	strncmp@_r^0,c
  2143  001B76  0E08               	movlw	high STR_13
  2144  001B78  6E09               	movwf	(strncmp@_r+1)^0,c
  2145  001B7A  0E00               	movlw	0
  2146  001B7C  6E0B               	movwf	(strncmp@n+1)^0,c
  2147  001B7E  0E02               	movlw	2
  2148  001B80  6E0A               	movwf	strncmp@n^0,c
  2149  001B82  ECC4  F018         	call	_strncmp	;wreg free
  2150  001B86  5006               	movf	?_strncmp^0,w,c
  2151  001B88  1007               	iorwf	(?_strncmp+1)^0,w,c
  2152  001B8A  A4D8               	btfss	status,2,c
  2153  001B8C  EFCA  F00D         	goto	u8711
  2154  001B90  EFCC  F00D         	goto	u8710
  2155  001B94                     u8711:
  2156  001B94  EF48  F00E         	goto	l7155
  2157  001B98                     u8710:
  2158  001B98                     
  2159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2160  001B98  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2161  001B9C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2162  001BA0  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  2163  001BA4  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  2164  001BA8  0E01               	movlw	1
  2165  001BAA  0100               	movlb	0	; () banked
  2166  001BAC  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  2167  001BAE  0E00               	movlw	0
  2168  001BB0  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2169  001BB2  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2170  001BB6  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2171  001BBA                     	if	0	;tblptru may be non-zero
  2172  001BBA                     	endif
  2173  001BBA                     	if	0	;tblptru may be non-zero
  2174  001BBA                     	endif
  2175  001BBA  0008               	tblrd		*
  2176  001BBC  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  2177  001BC0  0EBF               	movlw	191
  2178  001BC2  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  2179  001BC4  0EFF               	movlw	255
  2180  001BC6  6FAF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2181  001BC8  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2182  001BCC  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2183  001BD0  CFDE FFF6          	movff	postinc2,tblptrl
  2184  001BD4  CFDD FFF7          	movff	postdec2,tblptrh
  2185  001BD8                     	if	0	;tblptru may be non-zero
  2186  001BD8                     	endif
  2187  001BD8                     	if	0	;tblptru may be non-zero
  2188  001BD8                     	endif
  2189  001BD8  0008               	tblrd		*
  2190  001BDA  50F5               	movf	tablat,w,c
  2191  001BDC  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2192  001BDE  6BB1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2193  001BE0  51AE               	movf	??_vfpfcnvrt& (0+255),w,b
  2194  001BE2  27B0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2195  001BE4  51AF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2196  001BE6  23B1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2197  001BE8  51B1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2198  001BEA  E10A               	bnz	u8720
  2199  001BEC  0E1A               	movlw	26
  2200  001BEE  5DB0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2201  001BF0  A0D8               	btfss	status,0,c
  2202  001BF2  EFFD  F00D         	goto	u8721
  2203  001BF6  EF00  F00E         	goto	u8720
  2204  001BFA                     u8721:
  2205  001BFA  0E01               	movlw	1
  2206  001BFC  EF01  F00E         	goto	u8730
  2207  001C00                     u8720:
  2208  001C00  0E00               	movlw	0
  2209  001C02                     u8730:
  2210  001C02  6FB4               	movwf	_vfpfcnvrt$813& (0+255),b
  2211  001C04  6BB5               	clrf	(_vfpfcnvrt$813+1)& (0+255),b
  2212  001C06                     
  2213                           ; BSR set to: 0
  2214  001C06  51B4               	movf	_vfpfcnvrt$813& (0+255),w,b
  2215  001C08  11B5               	iorwf	(_vfpfcnvrt$813+1)& (0+255),w,b
  2216  001C0A  B4D8               	btfsc	status,2,c
  2217  001C0C  EF0A  F00E         	goto	u8741
  2218  001C10  EF0C  F00E         	goto	u8740
  2219  001C14                     u8741:
  2220  001C14  EF26  F00E         	goto	l7149
  2221  001C18                     u8740:
  2222  001C18                     
  2223                           ; BSR set to: 0
  2224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2225  001C18  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2226  001C1C  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2227  001C20  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  2228  001C24  0E04               	movlw	4
  2229  001C26  26DE               	addwf	postinc2,f,c
  2230  001C28  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  2231  001C2C  0E00               	movlw	0
  2232  001C2E  22DD               	addwfc	postdec2,f,c
  2233  001C30  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2234  001C34  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2235  001C38  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2236  001C3C  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2237  001C40  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2238  001C44  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2239                           
  2240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2241  001C48  EF3E  F00E         	goto	l694
  2242  001C4C                     l7149:
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2246  001C4C  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2247  001C50  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2248  001C54  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  2249  001C58  0E04               	movlw	4
  2250  001C5A  26DE               	addwf	postinc2,f,c
  2251  001C5C  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  2252  001C60  0E00               	movlw	0
  2253  001C62  22DD               	addwfc	postdec2,f,c
  2254  001C64  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2255  001C68  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2256  001C6C  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2257  001C70  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2258  001C74  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2259  001C78  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2260  001C7C                     l694:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2264  001C7C  0E02               	movlw	2
  2265  001C7E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2266  001C82  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2267  001C86  26DE               	addwf	postinc2,f,c
  2268  001C88  0E00               	movlw	0
  2269  001C8A  22DD               	addwfc	postdec2,f,c
  2270  001C8C  EF9F  F00D         	goto	l7135
  2271  001C90                     l7155:
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2274  001C90  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2275  001C94  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2276  001C98  CFDE FFF6          	movff	postinc2,tblptrl
  2277  001C9C  CFDD FFF7          	movff	postdec2,tblptrh
  2278  001CA0                     	if	0	;tblptru may be non-zero
  2279  001CA0                     	endif
  2280  001CA0                     	if	0	;tblptru may be non-zero
  2281  001CA0                     	endif
  2282  001CA0  0008               	tblrd		*
  2283  001CA2  50F5               	movf	tablat,w,c
  2284  001CA4  0A25               	xorlw	37
  2285  001CA6  A4D8               	btfss	status,2,c
  2286  001CA8  EF58  F00E         	goto	u8751
  2287  001CAC  EF5A  F00E         	goto	u8750
  2288  001CB0                     u8751:
  2289  001CB0  EF72  F00E         	goto	l7165
  2290  001CB4                     u8750:
  2291  001CB4                     
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2293  001CB4  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2294  001CB8  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2295  001CBC  2ADE               	incf	postinc2,f,c
  2296  001CBE  0E00               	movlw	0
  2297  001CC0  22DD               	addwfc	postdec2,f,c
  2298  001CC2                     
  2299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2300  001CC2  0E00               	movlw	0
  2301  001CC4  6E07               	movwf	(fputc@c+1)^0,c
  2302  001CC6  0E25               	movlw	37
  2303  001CC8  6E06               	movwf	fputc@c^0,c
  2304  001CCA  C0A8  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2305  001CCE  C0A9  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2306  001CD2  EC2F  F019         	call	_fputc	;wreg free
  2307  001CD6                     l7161:
  2308                           
  2309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2310  001CD6  0E00               	movlw	0
  2311  001CD8  0100               	movlb	0	; () banked
  2312  001CDA  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2313  001CDC  0E01               	movlw	1
  2314  001CDE  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
  2315  001CE0  EF9B  F00E         	goto	l687
  2316  001CE4                     l7165:
  2317                           
  2318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2319  001CE4  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2320  001CE8  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2321  001CEC  2ADE               	incf	postinc2,f,c
  2322  001CEE  0E00               	movlw	0
  2323  001CF0  22DD               	addwfc	postdec2,f,c
  2324  001CF2                     
  2325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2326  001CF2  0E00               	movlw	0
  2327  001CF4  0100               	movlb	0	; () banked
  2328  001CF6  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2329  001CF8  0E00               	movlw	0
  2330  001CFA  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
  2331  001CFC  EF9B  F00E         	goto	l687
  2332  001D00                     l7171:
  2333                           
  2334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2335  001D00  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2336  001D04  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2337  001D08  CFDE FFF6          	movff	postinc2,tblptrl
  2338  001D0C  CFDD FFF7          	movff	postdec2,tblptrh
  2339  001D10                     	if	0	;tblptru may be non-zero
  2340  001D10                     	endif
  2341  001D10                     	if	0	;tblptru may be non-zero
  2342  001D10                     	endif
  2343  001D10  0008               	tblrd		*
  2344  001D12  50F5               	movf	tablat,w,c
  2345  001D14  6E06               	movwf	fputc@c^0,c
  2346  001D16  6A07               	clrf	(fputc@c+1)^0,c
  2347  001D18  C0A8  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2348  001D1C  C0A9  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2349  001D20  EC2F  F019         	call	_fputc	;wreg free
  2350  001D24                     
  2351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2352  001D24  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2353  001D28  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2354  001D2C  2ADE               	incf	postinc2,f,c
  2355  001D2E  0E00               	movlw	0
  2356  001D30  22DD               	addwfc	postdec2,f,c
  2357  001D32  EF6B  F00E         	goto	l7161
  2358  001D36                     l687:
  2359  001D36  0012               	return		;funcret
  2360  001D38                     __end_of_vfpfcnvrt:
  2361                           	opt callstack 0
  2362                           
  2363 ;; *************** function _strncmp *****************
  2364 ;; Defined at:
  2365 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  2368 ;;		 -> vfpfcnvrt@ct(3), 
  2369 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  2370 ;;		 -> STR_15(3), 
  2371 ;;  n               2    9[COMRAM] unsigned int 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  r               2   14[COMRAM] PTR const unsigned char 
  2374 ;;		 -> STR_15(3), 
  2375 ;;  l               2   12[COMRAM] PTR const unsigned char 
  2376 ;;		 -> vfpfcnvrt@ct(3), 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2    5[COMRAM] int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2386 ;;      Params:         6       0       0       0       0       0       0       0       0
  2387 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2388 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2389 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2390 ;;Total ram usage:       11 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    2
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_vfpfcnvrt
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text6
  2401  003188                     __ptext6:
  2402                           	opt callstack 0
  2403  003188                     _strncmp:
  2404                           	opt callstack 23
  2405  003188  C006  F00D         	movff	strncmp@_l,strncmp@l
  2406  00318C  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  2407  003190  C008  F00F         	movff	strncmp@_r,strncmp@r
  2408  003194  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  2409  003198  060A               	decf	strncmp@n^0,f,c
  2410  00319A  A0D8               	btfss	status,0,c
  2411  00319C  060B               	decf	(strncmp@n+1)^0,f,c
  2412  00319E  280A               	incf	strncmp@n^0,w,c
  2413  0031A0  E106               	bnz	u8571
  2414  0031A2  280B               	incf	(strncmp@n+1)^0,w,c
  2415  0031A4  A4D8               	btfss	status,2,c
  2416  0031A6  EFD7  F018         	goto	u8571
  2417  0031AA  EFD9  F018         	goto	u8570
  2418  0031AE                     u8571:
  2419  0031AE  EFE6  F018         	goto	l7077
  2420  0031B2                     u8570:
  2421  0031B2  0E00               	movlw	0
  2422  0031B4  6E07               	movwf	(?_strncmp+1)^0,c
  2423  0031B6  0E00               	movlw	0
  2424  0031B8  6E06               	movwf	?_strncmp^0,c
  2425  0031BA  EF2E  F019         	goto	l1511
  2426  0031BE                     l7075:
  2427  0031BE  4A0D               	infsnz	strncmp@l^0,f,c
  2428  0031C0  2A0E               	incf	(strncmp@l+1)^0,f,c
  2429  0031C2  4A0F               	infsnz	strncmp@r^0,f,c
  2430  0031C4  2A10               	incf	(strncmp@r+1)^0,f,c
  2431  0031C6  060A               	decf	strncmp@n^0,f,c
  2432  0031C8  A0D8               	btfss	status,0,c
  2433  0031CA  060B               	decf	(strncmp@n+1)^0,f,c
  2434  0031CC                     l7077:
  2435  0031CC  C00D  FFD9         	movff	strncmp@l,fsr2l
  2436  0031D0  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2437  0031D4  50DF               	movf	indf2,w,c
  2438  0031D6  B4D8               	btfsc	status,2,c
  2439  0031D8  EFF0  F018         	goto	u8581
  2440  0031DC  EFF2  F018         	goto	u8580
  2441  0031E0                     u8581:
  2442  0031E0  EF1D  F019         	goto	l7085
  2443  0031E4                     u8580:
  2444  0031E4  C00F  FFF6         	movff	strncmp@r,tblptrl
  2445  0031E8  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2446  0031EC                     	if	0	;tblptru may be non-zero
  2447  0031EC                     	endif
  2448  0031EC                     	if	0	;tblptru may be non-zero
  2449  0031EC                     	endif
  2450  0031EC  0008               	tblrd		*
  2451  0031EE  50F5               	movf	tablat,w,c
  2452  0031F0  0900               	iorlw	0
  2453  0031F2  B4D8               	btfsc	status,2,c
  2454  0031F4  EFFE  F018         	goto	u8591
  2455  0031F8  EF00  F019         	goto	u8590
  2456  0031FC                     u8591:
  2457  0031FC  EF1D  F019         	goto	l7085
  2458  003200                     u8590:
  2459  003200  500A               	movf	strncmp@n^0,w,c
  2460  003202  100B               	iorwf	(strncmp@n+1)^0,w,c
  2461  003204  B4D8               	btfsc	status,2,c
  2462  003206  EF07  F019         	goto	u8601
  2463  00320A  EF09  F019         	goto	u8600
  2464  00320E                     u8601:
  2465  00320E  EF1D  F019         	goto	l7085
  2466  003212                     u8600:
  2467  003212  C00D  FFD9         	movff	strncmp@l,fsr2l
  2468  003216  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2469  00321A  50DF               	movf	indf2,w,c
  2470  00321C  6E0C               	movwf	??_strncmp^0,c
  2471  00321E  C00F  FFF6         	movff	strncmp@r,tblptrl
  2472  003222  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2473  003226                     	if	0	;tblptru may be non-zero
  2474  003226                     	endif
  2475  003226                     	if	0	;tblptru may be non-zero
  2476  003226                     	endif
  2477  003226  0008               	tblrd		*
  2478  003228  50F5               	movf	tablat,w,c
  2479  00322A  180C               	xorwf	??_strncmp^0,w,c
  2480  00322C  B4D8               	btfsc	status,2,c
  2481  00322E  EF1B  F019         	goto	u8611
  2482  003232  EF1D  F019         	goto	u8610
  2483  003236                     u8611:
  2484  003236  EFDF  F018         	goto	l7075
  2485  00323A                     u8610:
  2486  00323A                     l7085:
  2487  00323A  C00D  FFD9         	movff	strncmp@l,fsr2l
  2488  00323E  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2489  003242  50DF               	movf	indf2,w,c
  2490  003244  6E0C               	movwf	??_strncmp^0,c
  2491  003246  C00F  FFF6         	movff	strncmp@r,tblptrl
  2492  00324A  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2493  00324E                     	if	0	;tblptru may be non-zero
  2494  00324E                     	endif
  2495  00324E                     	if	0	;tblptru may be non-zero
  2496  00324E                     	endif
  2497  00324E  0008               	tblrd		*
  2498  003250  50F5               	movf	tablat,w,c
  2499  003252  5C0C               	subwf	??_strncmp^0,w,c
  2500  003254  6E06               	movwf	?_strncmp^0,c
  2501  003256  6A07               	clrf	(?_strncmp+1)^0,c
  2502  003258  A0D8               	btfss	status,0,c
  2503  00325A  0607               	decf	(?_strncmp+1)^0,f,c
  2504  00325C                     l1511:
  2505  00325C  0012               	return		;funcret
  2506  00325E                     __end_of_strncmp:
  2507                           	opt callstack 0
  2508                           
  2509 ;; *************** function _efgtoa *****************
  2510 ;; Defined at:
  2511 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  2514 ;;		 -> sprintf@f(6), 
  2515 ;;  f               4    6[BANK0 ] PTR struct _IO_FILE
  2516 ;;  c               1   10[BANK0 ] unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  u               4   68[BANK0 ] unsigned char 
  2519 ;;  g               4   60[BANK0 ] unsigned char 
  2520 ;;  l               4   54[BANK0 ] unsigned char 
  2521 ;;  h               4   50[BANK0 ] unsigned char 
  2522 ;;  ou              4   16[BANK0 ] unsigned char 
  2523 ;;  n               2   66[BANK0 ] int 
  2524 ;;  e               2   64[BANK0 ] int 
  2525 ;;  i               2   58[BANK0 ] int 
  2526 ;;  w               2   47[BANK0 ] int 
  2527 ;;  p               2   44[BANK0 ] int 
  2528 ;;  sign            2   42[BANK0 ] int 
  2529 ;;  d               2   40[BANK0 ] int 
  2530 ;;  ne              2   38[BANK0 ] int 
  2531 ;;  m               2   36[BANK0 ] int 
  2532 ;;  pp              2   34[BANK0 ] int 
  2533 ;;  t               2   32[BANK0 ] int 
  2534 ;;  mode            1   49[BANK0 ] unsigned char 
  2535 ;;  nmode           1   46[BANK0 ] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  2    4[BANK0 ] int 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2545 ;;      Params:         0       7       0       0       0       0       0       0       0
  2546 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2547 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2548 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2549 ;;Total ram usage:       68 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    6
  2552 ;; This function calls:
  2553 ;;		___awdiv
  2554 ;;		___awmod
  2555 ;;		___fladd
  2556 ;;		___fldiv
  2557 ;;		___fleq
  2558 ;;		___flge
  2559 ;;		___flmul
  2560 ;;		___flneg
  2561 ;;		___flsub
  2562 ;;		___fltol
  2563 ;;		___fpclassifyf
  2564 ;;		_floorf
  2565 ;;		_isupper
  2566 ;;		_pad
  2567 ;;		_strcpy
  2568 ;;		_tolower
  2569 ;; This function is called by:
  2570 ;;		_vfpfcnvrt
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text7
  2575  00085A                     __ptext7:
  2576                           	opt callstack 0
  2577  00085A                     _efgtoa:
  2578                           	opt callstack 19
  2579  00085A                     
  2580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2581  00085A  0E00               	movlw	0
  2582  00085C  0100               	movlb	0	; () banked
  2583  00085E  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  2584  000860  0E00               	movlw	0
  2585  000862  6F8A               	movwf	efgtoa@sign& (0+255),b
  2586  000864                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2589  000864  C066  F09C         	movff	efgtoa@f,efgtoa@g
  2590  000868  C067  F09D         	movff	efgtoa@f+1,efgtoa@g+1
  2591  00086C  C068  F09E         	movff	efgtoa@f+2,efgtoa@g+2
  2592  000870  C069  F09F         	movff	efgtoa@f+3,efgtoa@g+3
  2593  000874                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2596  000874  BF9F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2597  000876  EF41  F004         	goto	u7980
  2598  00087A  EF3F  F004         	goto	u7981
  2599  00087E                     u7981:
  2600  00087E  EF57  F004         	goto	l6739
  2601  000882                     u7980:
  2602  000882                     
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2605  000882  0E00               	movlw	0
  2606  000884  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  2607  000886  0E01               	movlw	1
  2608  000888  6F8A               	movwf	efgtoa@sign& (0+255),b
  2609  00088A                     
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2612  00088A  C09C  F006         	movff	efgtoa@g,___flneg@f1
  2613  00088E  C09D  F007         	movff	efgtoa@g+1,___flneg@f1+1
  2614  000892  C09E  F008         	movff	efgtoa@g+2,___flneg@f1+2
  2615  000896  C09F  F009         	movff	efgtoa@g+3,___flneg@f1+3
  2616  00089A  ECBC  F01E         	call	___flneg	;wreg free
  2617  00089E  C006  F09C         	movff	?___flneg,efgtoa@g
  2618  0008A2  C007  F09D         	movff	?___flneg+1,efgtoa@g+1
  2619  0008A6  C008  F09E         	movff	?___flneg+2,efgtoa@g+2
  2620  0008AA  C009  F09F         	movff	?___flneg+3,efgtoa@g+3
  2621  0008AE                     l6739:
  2622                           
  2623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2624  0008AE  0E00               	movlw	0
  2625  0008B0  0100               	movlb	0	; () banked
  2626  0008B2  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  2627  0008B4  0E00               	movlw	0
  2628  0008B6  6FA2               	movwf	efgtoa@n& (0+255),b
  2629  0008B8                     
  2630                           ; BSR set to: 0
  2631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2632  0008B8  C0E7  F08F         	movff	_width,efgtoa@w
  2633  0008BC  C0E8  F090         	movff	_width+1,efgtoa@w+1
  2634  0008C0                     
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2637  0008C0  518A               	movf	efgtoa@sign& (0+255),w,b
  2638  0008C2  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2639  0008C4  A4D8               	btfss	status,2,c
  2640  0008C6  EF67  F004         	goto	u7991
  2641  0008CA  EF69  F004         	goto	u7990
  2642  0008CE                     u7991:
  2643  0008CE  EF70  F004         	goto	l6747
  2644  0008D2                     u7990:
  2645  0008D2                     
  2646                           ; BSR set to: 0
  2647  0008D2  A5EB               	btfss	_flags& (0+255),2,b
  2648  0008D4  EF6E  F004         	goto	u8001
  2649  0008D8  EF70  F004         	goto	u8000
  2650  0008DC                     u8001:
  2651  0008DC  EF8A  F004         	goto	l6759
  2652  0008E0                     u8000:
  2653  0008E0                     l6747:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2657  0008E0  518A               	movf	efgtoa@sign& (0+255),w,b
  2658  0008E2  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2659  0008E4  A4D8               	btfss	status,2,c
  2660  0008E6  EF77  F004         	goto	u8011
  2661  0008EA  EF79  F004         	goto	u8010
  2662  0008EE                     u8011:
  2663  0008EE  EF7F  F004         	goto	l6751
  2664  0008F2                     u8010:
  2665  0008F2                     
  2666                           ; BSR set to: 0
  2667  0008F2  0E00               	movlw	0
  2668  0008F4  6F75               	movwf	(_efgtoa$783+1)& (0+255),b
  2669  0008F6  0E2B               	movlw	43
  2670  0008F8  6F74               	movwf	_efgtoa$783& (0+255),b
  2671  0008FA  EF83  F004         	goto	l6753
  2672  0008FE                     l6751:
  2673                           
  2674                           ; BSR set to: 0
  2675  0008FE  0E00               	movlw	0
  2676  000900  6F75               	movwf	(_efgtoa$783+1)& (0+255),b
  2677  000902  0E2D               	movlw	45
  2678  000904  6F74               	movwf	_efgtoa$783& (0+255),b
  2679  000906                     l6753:
  2680                           
  2681                           ; BSR set to: 0
  2682  000906  C074  F11C         	movff	_efgtoa$783,_dbuf
  2683  00090A                     
  2684                           ; BSR set to: 0
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2686  00090A  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  2687  00090C  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  2688  00090E                     
  2689                           ; BSR set to: 0
  2690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2691  00090E  078F               	decf	efgtoa@w& (0+255),f,b
  2692  000910  A0D8               	btfss	status,0,c
  2693  000912  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  2694  000914                     l6759:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2698  000914  C09C  F006         	movff	efgtoa@g,___fpclassifyf@x
  2699  000918  C09D  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2700  00091C  C09E  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2701  000920  C09F  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2702  000924  EC45  F018         	call	___fpclassifyf	;wreg free
  2703  000928  0406               	decf	?___fpclassifyf^0,w,c
  2704  00092A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  2705  00092C  A4D8               	btfss	status,2,c
  2706  00092E  EF9B  F004         	goto	u8021
  2707  000932  EF9D  F004         	goto	u8020
  2708  000936                     u8021:
  2709  000936  EFF4  F004         	goto	l6777
  2710  00093A                     u8020:
  2711  00093A  0EBF               	movlw	191
  2712  00093C  0100               	movlb	0	; () banked
  2713  00093E  6F6B               	movwf	??_efgtoa& (0+255),b
  2714  000940  0EFF               	movlw	255
  2715  000942  6F6C               	movwf	(??_efgtoa+1)& (0+255),b
  2716  000944  516A               	movf	efgtoa@c& (0+255),w,b
  2717  000946  6F6D               	movwf	(??_efgtoa+2)& (0+255),b
  2718  000948  6B6E               	clrf	(??_efgtoa+3)& (0+255),b
  2719  00094A  516B               	movf	??_efgtoa& (0+255),w,b
  2720  00094C  276D               	addwf	(??_efgtoa+2)& (0+255),f,b
  2721  00094E  516C               	movf	(??_efgtoa+1)& (0+255),w,b
  2722  000950  236E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2723  000952  516E               	movf	(??_efgtoa+3)& (0+255),w,b
  2724  000954  E10A               	bnz	u8030
  2725  000956  0E1A               	movlw	26
  2726  000958  5D6D               	subwf	(??_efgtoa+2)& (0+255),w,b
  2727  00095A  A0D8               	btfss	status,0,c
  2728  00095C  EFB2  F004         	goto	u8031
  2729  000960  EFB5  F004         	goto	u8030
  2730  000964                     u8031:
  2731  000964  0E01               	movlw	1
  2732  000966  EFB6  F004         	goto	u8040
  2733  00096A                     u8030:
  2734  00096A  0E00               	movlw	0
  2735  00096C                     u8040:
  2736  00096C  6F76               	movwf	_efgtoa$784& (0+255),b
  2737  00096E  6B77               	clrf	(_efgtoa$784+1)& (0+255),b
  2738  000970                     
  2739                           ; BSR set to: 0
  2740  000970  5176               	movf	_efgtoa$784& (0+255),w,b
  2741  000972  1177               	iorwf	(_efgtoa$784+1)& (0+255),w,b
  2742  000974  B4D8               	btfsc	status,2,c
  2743  000976  EFBF  F004         	goto	u8051
  2744  00097A  EFC1  F004         	goto	u8050
  2745  00097E                     u8051:
  2746  00097E  EFCF  F004         	goto	l6769
  2747  000982                     u8050:
  2748  000982                     
  2749                           ; BSR set to: 0
  2750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2751  000982  0E1C               	movlw	low _dbuf
  2752  000984  25A2               	addwf	efgtoa@n& (0+255),w,b
  2753  000986  6E06               	movwf	strcpy@dest^0,c
  2754  000988  0E01               	movlw	high _dbuf
  2755  00098A  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2756  00098C  6E07               	movwf	(strcpy@dest+1)^0,c
  2757  00098E  0E46               	movlw	low STR_5
  2758  000990  6E08               	movwf	strcpy@src^0,c
  2759  000992  0E08               	movlw	high STR_5
  2760  000994  6E09               	movwf	(strcpy@src+1)^0,c
  2761  000996  EC12  F01D         	call	_strcpy	;wreg free
  2762                           
  2763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2764  00099A  EFDB  F004         	goto	l6771
  2765  00099E                     l6769:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2769  00099E  0E1C               	movlw	low _dbuf
  2770  0009A0  25A2               	addwf	efgtoa@n& (0+255),w,b
  2771  0009A2  6E06               	movwf	strcpy@dest^0,c
  2772  0009A4  0E01               	movlw	high _dbuf
  2773  0009A6  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2774  0009A8  6E07               	movwf	(strcpy@dest+1)^0,c
  2775  0009AA  0E4E               	movlw	low STR_6
  2776  0009AC  6E08               	movwf	strcpy@src^0,c
  2777  0009AE  0E08               	movlw	high STR_6
  2778  0009B0  6E09               	movwf	(strcpy@src+1)^0,c
  2779  0009B2  EC12  F01D         	call	_strcpy	;wreg free
  2780  0009B6                     l6771:
  2781                           
  2782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2783  0009B6  0100               	movlb	0	; () banked
  2784  0009B8  0EFD               	movlw	253
  2785  0009BA  278F               	addwf	efgtoa@w& (0+255),f,b
  2786  0009BC  0EFF               	movlw	255
  2787  0009BE  2390               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2788  0009C0                     l6773:
  2789                           
  2790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2791  0009C0  C064  F016         	movff	efgtoa@fp,pad@fp
  2792  0009C4  C065  F017         	movff	efgtoa@fp+1,pad@fp+1
  2793  0009C8  0E1C               	movlw	low _dbuf
  2794  0009CA  6E18               	movwf	pad@buf^0,c
  2795  0009CC  0E01               	movlw	high _dbuf
  2796  0009CE  6E19               	movwf	(pad@buf+1)^0,c
  2797  0009D0  C08F  F01A         	movff	efgtoa@w,pad@p
  2798  0009D4  C090  F01B         	movff	efgtoa@w+1,pad@p+1
  2799  0009D8  EC94  F019         	call	_pad	;wreg free
  2800  0009DC  C016  F064         	movff	?_pad,?_efgtoa
  2801  0009E0  C017  F065         	movff	?_pad+1,?_efgtoa+1
  2802  0009E4  EF04  F00A         	goto	l597
  2803  0009E8                     l6777:
  2804                           
  2805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2806  0009E8  C09C  F006         	movff	efgtoa@g,___fpclassifyf@x
  2807  0009EC  C09D  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2808  0009F0  C09E  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2809  0009F4  C09F  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2810  0009F8  EC45  F018         	call	___fpclassifyf	;wreg free
  2811  0009FC  5006               	movf	?___fpclassifyf^0,w,c
  2812  0009FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  2813  000A00  A4D8               	btfss	status,2,c
  2814  000A02  EF05  F005         	goto	u8061
  2815  000A06  EF07  F005         	goto	u8060
  2816  000A0A                     u8061:
  2817  000A0A  EF47  F005         	goto	l6795
  2818  000A0E                     u8060:
  2819  000A0E  0EBF               	movlw	191
  2820  000A10  0100               	movlb	0	; () banked
  2821  000A12  6F6B               	movwf	??_efgtoa& (0+255),b
  2822  000A14  0EFF               	movlw	255
  2823  000A16  6F6C               	movwf	(??_efgtoa+1)& (0+255),b
  2824  000A18  516A               	movf	efgtoa@c& (0+255),w,b
  2825  000A1A  6F6D               	movwf	(??_efgtoa+2)& (0+255),b
  2826  000A1C  6B6E               	clrf	(??_efgtoa+3)& (0+255),b
  2827  000A1E  516B               	movf	??_efgtoa& (0+255),w,b
  2828  000A20  276D               	addwf	(??_efgtoa+2)& (0+255),f,b
  2829  000A22  516C               	movf	(??_efgtoa+1)& (0+255),w,b
  2830  000A24  236E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2831  000A26  516E               	movf	(??_efgtoa+3)& (0+255),w,b
  2832  000A28  E10A               	bnz	u8070
  2833  000A2A  0E1A               	movlw	26
  2834  000A2C  5D6D               	subwf	(??_efgtoa+2)& (0+255),w,b
  2835  000A2E  A0D8               	btfss	status,0,c
  2836  000A30  EF1C  F005         	goto	u8071
  2837  000A34  EF1F  F005         	goto	u8070
  2838  000A38                     u8071:
  2839  000A38  0E01               	movlw	1
  2840  000A3A  EF20  F005         	goto	u8080
  2841  000A3E                     u8070:
  2842  000A3E  0E00               	movlw	0
  2843  000A40                     u8080:
  2844  000A40  6F78               	movwf	_efgtoa$789& (0+255),b
  2845  000A42  6B79               	clrf	(_efgtoa$789+1)& (0+255),b
  2846  000A44                     
  2847                           ; BSR set to: 0
  2848  000A44  5178               	movf	_efgtoa$789& (0+255),w,b
  2849  000A46  1179               	iorwf	(_efgtoa$789+1)& (0+255),w,b
  2850  000A48  B4D8               	btfsc	status,2,c
  2851  000A4A  EF29  F005         	goto	u8091
  2852  000A4E  EF2B  F005         	goto	u8090
  2853  000A52                     u8091:
  2854  000A52  EF39  F005         	goto	l6787
  2855  000A56                     u8090:
  2856  000A56                     
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2859  000A56  0E1C               	movlw	low _dbuf
  2860  000A58  25A2               	addwf	efgtoa@n& (0+255),w,b
  2861  000A5A  6E06               	movwf	strcpy@dest^0,c
  2862  000A5C  0E01               	movlw	high _dbuf
  2863  000A5E  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2864  000A60  6E07               	movwf	(strcpy@dest+1)^0,c
  2865  000A62  0E4A               	movlw	low STR_9
  2866  000A64  6E08               	movwf	strcpy@src^0,c
  2867  000A66  0E08               	movlw	high STR_9
  2868  000A68  6E09               	movwf	(strcpy@src+1)^0,c
  2869  000A6A  EC12  F01D         	call	_strcpy	;wreg free
  2870                           
  2871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2872  000A6E  EFDB  F004         	goto	l6771
  2873  000A72                     l6787:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2877  000A72  0E1C               	movlw	low _dbuf
  2878  000A74  25A2               	addwf	efgtoa@n& (0+255),w,b
  2879  000A76  6E06               	movwf	strcpy@dest^0,c
  2880  000A78  0E01               	movlw	high _dbuf
  2881  000A7A  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2882  000A7C  6E07               	movwf	(strcpy@dest+1)^0,c
  2883  000A7E  0E52               	movlw	low STR_10
  2884  000A80  6E08               	movwf	strcpy@src^0,c
  2885  000A82  0E08               	movlw	high STR_10
  2886  000A84  6E09               	movwf	(strcpy@src+1)^0,c
  2887  000A86  EC12  F01D         	call	_strcpy	;wreg free
  2888  000A8A  EFDB  F004         	goto	l6771
  2889  000A8E                     l6795:
  2890                           
  2891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2892  000A8E  0E00               	movlw	0
  2893  000A90  0100               	movlb	0	; () banked
  2894  000A92  6FA4               	movwf	efgtoa@u& (0+255),b
  2895  000A94  0E00               	movlw	0
  2896  000A96  6FA5               	movwf	(efgtoa@u+1)& (0+255),b
  2897  000A98  0E80               	movlw	128
  2898  000A9A  6FA6               	movwf	(efgtoa@u+2)& (0+255),b
  2899  000A9C  0E3F               	movlw	63
  2900  000A9E  6FA7               	movwf	(efgtoa@u+3)& (0+255),b
  2901                           
  2902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2903  000AA0  0E00               	movlw	0
  2904  000AA2  6FA1               	movwf	(efgtoa@e+1)& (0+255),b
  2905  000AA4  0E00               	movlw	0
  2906  000AA6  6FA0               	movwf	efgtoa@e& (0+255),b
  2907  000AA8                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2910  000AA8  C09C  F006         	movff	efgtoa@g,___fleq@ff1
  2911  000AAC  C09D  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  2912  000AB0  C09E  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  2913  000AB4  C09F  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  2914  000AB8  0E00               	movlw	0
  2915  000ABA  6E0A               	movwf	___fleq@ff2^0,c
  2916  000ABC  0E00               	movlw	0
  2917  000ABE  6E0B               	movwf	(___fleq@ff2+1)^0,c
  2918  000AC0  0E00               	movlw	0
  2919  000AC2  6E0C               	movwf	(___fleq@ff2+2)^0,c
  2920  000AC4  0E00               	movlw	0
  2921  000AC6  6E0D               	movwf	(___fleq@ff2+3)^0,c
  2922  000AC8  EC11  F01B         	call	___fleq	;wreg free
  2923  000ACC  B0D8               	btfsc	status,0,c
  2924  000ACE  EF6B  F005         	goto	u8101
  2925  000AD2  EF6D  F005         	goto	u8100
  2926  000AD6                     u8101:
  2927  000AD6  EFF0  F005         	goto	l6813
  2928  000ADA                     u8100:
  2929  000ADA  EF8C  F005         	goto	l6805
  2930  000ADE                     l6801:
  2931                           
  2932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2933  000ADE  C0A4  F034         	movff	efgtoa@u,___flmul@b
  2934  000AE2  C0A5  F035         	movff	efgtoa@u+1,___flmul@b+1
  2935  000AE6  C0A6  F036         	movff	efgtoa@u+2,___flmul@b+2
  2936  000AEA  C0A7  F037         	movff	efgtoa@u+3,___flmul@b+3
  2937  000AEE  0E00               	movlw	0
  2938  000AF0  6E38               	movwf	___flmul@a^0,c
  2939  000AF2  0E00               	movlw	0
  2940  000AF4  6E39               	movwf	(___flmul@a+1)^0,c
  2941  000AF6  0E20               	movlw	32
  2942  000AF8  6E3A               	movwf	(___flmul@a+2)^0,c
  2943  000AFA  0E41               	movlw	65
  2944  000AFC  6E3B               	movwf	(___flmul@a+3)^0,c
  2945  000AFE  EC9C  F00E         	call	___flmul	;wreg free
  2946  000B02  C034  F0A4         	movff	?___flmul,efgtoa@u
  2947  000B06  C035  F0A5         	movff	?___flmul+1,efgtoa@u+1
  2948  000B0A  C036  F0A6         	movff	?___flmul+2,efgtoa@u+2
  2949  000B0E  C037  F0A7         	movff	?___flmul+3,efgtoa@u+3
  2950  000B12                     
  2951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2952  000B12  0100               	movlb	0	; () banked
  2953  000B14  4BA0               	infsnz	efgtoa@e& (0+255),f,b
  2954  000B16  2BA1               	incf	(efgtoa@e+1)& (0+255),f,b
  2955  000B18                     l6805:
  2956                           
  2957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2958  000B18  C09C  F04D         	movff	efgtoa@g,___flge@ff1
  2959  000B1C  C09D  F04E         	movff	efgtoa@g+1,___flge@ff1+1
  2960  000B20  C09E  F04F         	movff	efgtoa@g+2,___flge@ff1+2
  2961  000B24  C09F  F050         	movff	efgtoa@g+3,___flge@ff1+3
  2962  000B28  0E00               	movlw	0
  2963  000B2A  6E38               	movwf	___flmul@a^0,c
  2964  000B2C  0E00               	movlw	0
  2965  000B2E  6E39               	movwf	(___flmul@a+1)^0,c
  2966  000B30  0E20               	movlw	32
  2967  000B32  6E3A               	movwf	(___flmul@a+2)^0,c
  2968  000B34  0E41               	movlw	65
  2969  000B36  6E3B               	movwf	(___flmul@a+3)^0,c
  2970  000B38  C0A4  F034         	movff	efgtoa@u,___flmul@b
  2971  000B3C  C0A5  F035         	movff	efgtoa@u+1,___flmul@b+1
  2972  000B40  C0A6  F036         	movff	efgtoa@u+2,___flmul@b+2
  2973  000B44  C0A7  F037         	movff	efgtoa@u+3,___flmul@b+3
  2974  000B48  EC9C  F00E         	call	___flmul	;wreg free
  2975  000B4C  C034  F051         	movff	?___flmul,___flge@ff2
  2976  000B50  C035  F052         	movff	?___flmul+1,___flge@ff2+1
  2977  000B54  C036  F053         	movff	?___flmul+2,___flge@ff2+2
  2978  000B58  C037  F054         	movff	?___flmul+3,___flge@ff2+3
  2979  000B5C  ECC2  F017         	call	___flge	;wreg free
  2980  000B60  B0D8               	btfsc	status,0,c
  2981  000B62  EFB5  F005         	goto	u8111
  2982  000B66  EFB7  F005         	goto	u8110
  2983  000B6A                     u8111:
  2984  000B6A  EF6F  F005         	goto	l6801
  2985  000B6E                     u8110:
  2986  000B6E  EFD7  F005         	goto	l6811
  2987  000B72                     l6807:
  2988                           
  2989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2990  000B72  C0A4  F01B         	movff	efgtoa@u,___fldiv@b
  2991  000B76  C0A5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  2992  000B7A  C0A6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  2993  000B7E  C0A7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  2994  000B82  0E00               	movlw	0
  2995  000B84  6E1F               	movwf	___fldiv@a^0,c
  2996  000B86  0E00               	movlw	0
  2997  000B88  6E20               	movwf	(___fldiv@a+1)^0,c
  2998  000B8A  0E20               	movlw	32
  2999  000B8C  6E21               	movwf	(___fldiv@a+2)^0,c
  3000  000B8E  0E41               	movlw	65
  3001  000B90  6E22               	movwf	(___fldiv@a+3)^0,c
  3002  000B92  ECB1  F010         	call	___fldiv	;wreg free
  3003  000B96  C01B  F0A4         	movff	?___fldiv,efgtoa@u
  3004  000B9A  C01C  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  3005  000B9E  C01D  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  3006  000BA2  C01E  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  3007  000BA6                     
  3008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3009  000BA6  0100               	movlb	0	; () banked
  3010  000BA8  07A0               	decf	efgtoa@e& (0+255),f,b
  3011  000BAA  A0D8               	btfss	status,0,c
  3012  000BAC  07A1               	decf	(efgtoa@e+1)& (0+255),f,b
  3013  000BAE                     l6811:
  3014                           
  3015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3016  000BAE  C09C  F04D         	movff	efgtoa@g,___flge@ff1
  3017  000BB2  C09D  F04E         	movff	efgtoa@g+1,___flge@ff1+1
  3018  000BB6  C09E  F04F         	movff	efgtoa@g+2,___flge@ff1+2
  3019  000BBA  C09F  F050         	movff	efgtoa@g+3,___flge@ff1+3
  3020  000BBE  C0A4  F051         	movff	efgtoa@u,___flge@ff2
  3021  000BC2  C0A5  F052         	movff	efgtoa@u+1,___flge@ff2+1
  3022  000BC6  C0A6  F053         	movff	efgtoa@u+2,___flge@ff2+2
  3023  000BCA  C0A7  F054         	movff	efgtoa@u+3,___flge@ff2+3
  3024  000BCE  ECC2  F017         	call	___flge	;wreg free
  3025  000BD2  A0D8               	btfss	status,0,c
  3026  000BD4  EFEE  F005         	goto	u8121
  3027  000BD8  EFF0  F005         	goto	u8120
  3028  000BDC                     u8121:
  3029  000BDC  EFB9  F005         	goto	l6807
  3030  000BE0                     u8120:
  3031  000BE0                     l6813:
  3032                           
  3033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3034  000BE0  C06A  F00C         	movff	efgtoa@c,tolower@c
  3035  000BE4  6A0D               	clrf	(tolower@c+1)^0,c
  3036  000BE6  ECB3  F01C         	call	_tolower	;wreg free
  3037  000BEA  500C               	movf	?_tolower^0,w,c
  3038  000BEC  0100               	movlb	0	; () banked
  3039  000BEE  6F91               	movwf	efgtoa@mode& (0+255),b
  3040  000BF0                     
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3043  000BF0  C091  F08E         	movff	efgtoa@mode,efgtoa@nmode
  3044  000BF4                     
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3047  000BF4  0E67               	movlw	103
  3048  000BF6  1991               	xorwf	efgtoa@mode& (0+255),w,b
  3049  000BF8  A4D8               	btfss	status,2,c
  3050  000BFA  EF01  F006         	goto	u8131
  3051  000BFE  EF03  F006         	goto	u8130
  3052  000C02                     u8131:
  3053  000C02  EF29  F006         	goto	l6827
  3054  000C06                     u8130:
  3055  000C06                     
  3056                           ; BSR set to: 0
  3057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3058  000C06  51E9               	movf	_prec& (0+255),w,b
  3059  000C08  11EA               	iorwf	(_prec+1)& (0+255),w,b
  3060  000C0A  A4D8               	btfss	status,2,c
  3061  000C0C  EF0A  F006         	goto	u8141
  3062  000C10  EF0C  F006         	goto	u8140
  3063  000C14                     u8141:
  3064  000C14  EF10  F006         	goto	l6823
  3065  000C18                     u8140:
  3066  000C18                     
  3067                           ; BSR set to: 0
  3068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3069  000C18  0E00               	movlw	0
  3070  000C1A  6FEA               	movwf	(_prec+1)& (0+255),b
  3071  000C1C  0E01               	movlw	1
  3072  000C1E  6FE9               	movwf	_prec& (0+255),b
  3073  000C20                     l6823:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3077  000C20  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3078  000C22  EF1D  F006         	goto	u8150
  3079  000C26  51EA               	movf	(_prec+1)& (0+255),w,b
  3080  000C28  E106               	bnz	u8151
  3081  000C2A  05E9               	decf	_prec& (0+255),w,b
  3082  000C2C  B0D8               	btfsc	status,0,c
  3083  000C2E  EF1B  F006         	goto	u8151
  3084  000C32  EF1D  F006         	goto	u8150
  3085  000C36                     u8151:
  3086  000C36  EF23  F006         	goto	l615
  3087  000C3A                     u8150:
  3088  000C3A                     l6825:
  3089                           
  3090                           ; BSR set to: 0
  3091  000C3A  0E00               	movlw	0
  3092  000C3C  6F8D               	movwf	(efgtoa@p+1)& (0+255),b
  3093  000C3E  0E06               	movlw	6
  3094  000C40  6F8C               	movwf	efgtoa@p& (0+255),b
  3095  000C42  EF32  F006         	goto	l6833
  3096  000C46                     l615:
  3097                           
  3098                           ; BSR set to: 0
  3099  000C46  C0E9  F08C         	movff	_prec,efgtoa@p
  3100  000C4A  C0EA  F08D         	movff	_prec+1,efgtoa@p+1
  3101  000C4E  EF32  F006         	goto	l6833
  3102  000C52                     l6827:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3106  000C52  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3107  000C54  EF2E  F006         	goto	u8161
  3108  000C58  EF30  F006         	goto	u8160
  3109  000C5C                     u8161:
  3110  000C5C  EF1D  F006         	goto	l6825
  3111  000C60                     u8160:
  3112  000C60  EF23  F006         	goto	l615
  3113  000C64                     l6833:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3117  000C64  0E67               	movlw	103
  3118  000C66  1991               	xorwf	efgtoa@mode& (0+255),w,b
  3119  000C68  A4D8               	btfss	status,2,c
  3120  000C6A  EF39  F006         	goto	u8171
  3121  000C6E  EF3B  F006         	goto	u8170
  3122  000C72                     u8171:
  3123  000C72  EF6A  F006         	goto	l6843
  3124  000C76                     u8170:
  3125  000C76                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3128  000C76  AFA1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3129  000C78  EF49  F006         	goto	u8180
  3130  000C7C  0EFC               	movlw	252
  3131  000C7E  5DA0               	subwf	efgtoa@e& (0+255),w,b
  3132  000C80  0EFF               	movlw	255
  3133  000C82  59A1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3134  000C84  A0D8               	btfss	status,0,c
  3135  000C86  EF47  F006         	goto	u8181
  3136  000C8A  EF49  F006         	goto	u8180
  3137  000C8E                     u8181:
  3138  000C8E  EF68  F006         	goto	l6841
  3139  000C92                     u8180:
  3140  000C92                     
  3141                           ; BSR set to: 0
  3142  000C92  0EFF               	movlw	255
  3143  000C94  6F6B               	movwf	??_efgtoa& (0+255),b
  3144  000C96  0EFF               	movlw	255
  3145  000C98  6F6C               	movwf	(??_efgtoa+1)& (0+255),b
  3146  000C9A  C08C  F06D         	movff	efgtoa@p,??_efgtoa+2
  3147  000C9E  C08D  F06E         	movff	efgtoa@p+1,??_efgtoa+3
  3148  000CA2  516B               	movf	??_efgtoa& (0+255),w,b
  3149  000CA4  276D               	addwf	(??_efgtoa+2)& (0+255),f,b
  3150  000CA6  516C               	movf	(??_efgtoa+1)& (0+255),w,b
  3151  000CA8  236E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3152  000CAA  51A0               	movf	efgtoa@e& (0+255),w,b
  3153  000CAC  5D6D               	subwf	(??_efgtoa+2)& (0+255),w,b
  3154  000CAE  516E               	movf	(??_efgtoa+3)& (0+255),w,b
  3155  000CB0  0A80               	xorlw	128
  3156  000CB2  6F6F               	movwf	(??_efgtoa+4)& (0+255),b
  3157  000CB4  51A1               	movf	(efgtoa@e+1)& (0+255),w,b
  3158  000CB6  0A80               	xorlw	128
  3159  000CB8  596F               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3160  000CBA  A0D8               	btfss	status,0,c
  3161  000CBC  EF62  F006         	goto	u8191
  3162  000CC0  EF64  F006         	goto	u8190
  3163  000CC4                     u8191:
  3164  000CC4  EF68  F006         	goto	l6841
  3165  000CC8                     u8190:
  3166  000CC8                     
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3169  000CC8  0E66               	movlw	102
  3170  000CCA  6F8E               	movwf	efgtoa@nmode& (0+255),b
  3171                           
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3173  000CCC  EF6A  F006         	goto	l6843
  3174  000CD0                     l6841:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3178  000CD0  0E65               	movlw	101
  3179  000CD2  6F8E               	movwf	efgtoa@nmode& (0+255),b
  3180  000CD4                     l6843:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3184  000CD4  C08C  F084         	movff	efgtoa@p,efgtoa@m
  3185  000CD8  C08D  F085         	movff	efgtoa@p+1,efgtoa@m+1
  3186  000CDC                     
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3189  000CDC  0E67               	movlw	103
  3190  000CDE  1991               	xorwf	efgtoa@mode& (0+255),w,b
  3191  000CE0  A4D8               	btfss	status,2,c
  3192  000CE2  EF75  F006         	goto	u8201
  3193  000CE6  EF77  F006         	goto	u8200
  3194  000CEA                     u8201:
  3195  000CEA  EF87  F006         	goto	l6851
  3196  000CEE                     u8200:
  3197  000CEE                     
  3198                           ; BSR set to: 0
  3199  000CEE  0E66               	movlw	102
  3200  000CF0  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3201  000CF2  A4D8               	btfss	status,2,c
  3202  000CF4  EF7E  F006         	goto	u8211
  3203  000CF8  EF80  F006         	goto	u8210
  3204  000CFC                     u8211:
  3205  000CFC  EF89  F006         	goto	l6853
  3206  000D00                     u8210:
  3207  000D00                     
  3208                           ; BSR set to: 0
  3209  000D00  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3210  000D02  EF87  F006         	goto	u8220
  3211  000D06  EF85  F006         	goto	u8221
  3212  000D0A                     u8221:
  3213  000D0A  EF89  F006         	goto	l6853
  3214  000D0E                     u8220:
  3215  000D0E                     l6851:
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3219  000D0E  4B84               	infsnz	efgtoa@m& (0+255),f,b
  3220  000D10  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  3221  000D12                     l6853:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3225  000D12  0E66               	movlw	102
  3226  000D14  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3227  000D16  A4D8               	btfss	status,2,c
  3228  000D18  EF90  F006         	goto	u8231
  3229  000D1C  EF92  F006         	goto	u8230
  3230  000D20                     u8231:
  3231  000D20  EFB2  F006         	goto	l6863
  3232  000D24                     u8230:
  3233  000D24                     
  3234                           ; BSR set to: 0
  3235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3236  000D24  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3237  000D26  EF99  F006         	goto	u8240
  3238  000D2A  EF97  F006         	goto	u8241
  3239  000D2E                     u8241:
  3240  000D2E  EFA5  F006         	goto	l6859
  3241  000D32                     u8240:
  3242  000D32                     
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3245  000D32  0E00               	movlw	0
  3246  000D34  6FA4               	movwf	efgtoa@u& (0+255),b
  3247  000D36  0E00               	movlw	0
  3248  000D38  6FA5               	movwf	(efgtoa@u+1)& (0+255),b
  3249  000D3A  0E80               	movlw	128
  3250  000D3C  6FA6               	movwf	(efgtoa@u+2)& (0+255),b
  3251  000D3E  0E3F               	movlw	63
  3252  000D40  6FA7               	movwf	(efgtoa@u+3)& (0+255),b
  3253                           
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3255  000D42  0E00               	movlw	0
  3256  000D44  6FA1               	movwf	(efgtoa@e+1)& (0+255),b
  3257  000D46  0E00               	movlw	0
  3258  000D48  6FA0               	movwf	efgtoa@e& (0+255),b
  3259  000D4A                     l6859:
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3263  000D4A  0E67               	movlw	103
  3264  000D4C  1991               	xorwf	efgtoa@mode& (0+255),w,b
  3265  000D4E  B4D8               	btfsc	status,2,c
  3266  000D50  EFAC  F006         	goto	u8251
  3267  000D54  EFAE  F006         	goto	u8250
  3268  000D58                     u8251:
  3269  000D58  EFB2  F006         	goto	l6863
  3270  000D5C                     u8250:
  3271  000D5C                     
  3272                           ; BSR set to: 0
  3273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3274  000D5C  51A0               	movf	efgtoa@e& (0+255),w,b
  3275  000D5E  2784               	addwf	efgtoa@m& (0+255),f,b
  3276  000D60  51A1               	movf	(efgtoa@e+1)& (0+255),w,b
  3277  000D62  2385               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3278  000D64                     l6863:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3282  000D64  0E00               	movlw	0
  3283  000D66  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
  3284  000D68  0E00               	movlw	0
  3285  000D6A  6F9A               	movwf	efgtoa@i& (0+255),b
  3286  000D6C                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3289  000D6C  C09C  F092         	movff	efgtoa@g,efgtoa@h
  3290  000D70  C09D  F093         	movff	efgtoa@g+1,efgtoa@h+1
  3291  000D74  C09E  F094         	movff	efgtoa@g+2,efgtoa@h+2
  3292  000D78  C09F  F095         	movff	efgtoa@g+3,efgtoa@h+3
  3293  000D7C                     
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3296  000D7C  C0A4  F070         	movff	efgtoa@u,efgtoa@ou
  3297  000D80  C0A5  F071         	movff	efgtoa@u+1,efgtoa@ou+1
  3298  000D84  C0A6  F072         	movff	efgtoa@u+2,efgtoa@ou+2
  3299  000D88  C0A7  F073         	movff	efgtoa@u+3,efgtoa@ou+3
  3300                           
  3301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3302  000D8C  EF43  F007         	goto	l6877
  3303  000D90                     l6869:
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3307  000D90  C092  F01B         	movff	efgtoa@h,___fldiv@b
  3308  000D94  C093  F01C         	movff	efgtoa@h+1,___fldiv@b+1
  3309  000D98  C094  F01D         	movff	efgtoa@h+2,___fldiv@b+2
  3310  000D9C  C095  F01E         	movff	efgtoa@h+3,___fldiv@b+3
  3311  000DA0  C0A4  F01F         	movff	efgtoa@u,___fldiv@a
  3312  000DA4  C0A5  F020         	movff	efgtoa@u+1,___fldiv@a+1
  3313  000DA8  C0A6  F021         	movff	efgtoa@u+2,___fldiv@a+2
  3314  000DAC  C0A7  F022         	movff	efgtoa@u+3,___fldiv@a+3
  3315  000DB0  ECB1  F010         	call	___fldiv	;wreg free
  3316  000DB4  C01B  F034         	movff	?___fldiv,floorf@x
  3317  000DB8  C01C  F035         	movff	?___fldiv+1,floorf@x+1
  3318  000DBC  C01D  F036         	movff	?___fldiv+2,floorf@x+2
  3319  000DC0  C01E  F037         	movff	?___fldiv+3,floorf@x+3
  3320  000DC4  EC7E  F012         	call	_floorf	;wreg free
  3321  000DC8  C034  F096         	movff	?_floorf,efgtoa@l
  3322  000DCC  C035  F097         	movff	?_floorf+1,efgtoa@l+1
  3323  000DD0  C036  F098         	movff	?_floorf+2,efgtoa@l+2
  3324  000DD4  C037  F099         	movff	?_floorf+3,efgtoa@l+3
  3325                           
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3327  000DD8  C096  F04D         	movff	efgtoa@l,___fltol@f1
  3328  000DDC  C097  F04E         	movff	efgtoa@l+1,___fltol@f1+1
  3329  000DE0  C098  F04F         	movff	efgtoa@l+2,___fltol@f1+2
  3330  000DE4  C099  F050         	movff	efgtoa@l+3,___fltol@f1+3
  3331  000DE8  EC3E  F017         	call	___fltol	;wreg free
  3332  000DEC  C04D  F088         	movff	?___fltol,efgtoa@d
  3333  000DF0  C04E  F089         	movff	?___fltol+1,efgtoa@d+1
  3334  000DF4                     
  3335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3336  000DF4  C092  F04D         	movff	efgtoa@h,___flsub@b
  3337  000DF8  C093  F04E         	movff	efgtoa@h+1,___flsub@b+1
  3338  000DFC  C094  F04F         	movff	efgtoa@h+2,___flsub@b+2
  3339  000E00  C095  F050         	movff	efgtoa@h+3,___flsub@b+3
  3340  000E04  C0A4  F038         	movff	efgtoa@u,___flmul@a
  3341  000E08  C0A5  F039         	movff	efgtoa@u+1,___flmul@a+1
  3342  000E0C  C0A6  F03A         	movff	efgtoa@u+2,___flmul@a+2
  3343  000E10  C0A7  F03B         	movff	efgtoa@u+3,___flmul@a+3
  3344  000E14  C096  F034         	movff	efgtoa@l,___flmul@b
  3345  000E18  C097  F035         	movff	efgtoa@l+1,___flmul@b+1
  3346  000E1C  C098  F036         	movff	efgtoa@l+2,___flmul@b+2
  3347  000E20  C099  F037         	movff	efgtoa@l+3,___flmul@b+3
  3348  000E24  EC9C  F00E         	call	___flmul	;wreg free
  3349  000E28  C034  F051         	movff	?___flmul,___flsub@a
  3350  000E2C  C035  F052         	movff	?___flmul+1,___flsub@a+1
  3351  000E30  C036  F053         	movff	?___flmul+2,___flsub@a+2
  3352  000E34  C037  F054         	movff	?___flmul+3,___flsub@a+3
  3353  000E38  EC3A  F01E         	call	___flsub	;wreg free
  3354  000E3C  C04D  F092         	movff	?___flsub,efgtoa@h
  3355  000E40  C04E  F093         	movff	?___flsub+1,efgtoa@h+1
  3356  000E44  C04F  F094         	movff	?___flsub+2,efgtoa@h+2
  3357  000E48  C050  F095         	movff	?___flsub+3,efgtoa@h+3
  3358  000E4C                     
  3359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3360  000E4C  C0A4  F01B         	movff	efgtoa@u,___fldiv@b
  3361  000E50  C0A5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  3362  000E54  C0A6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  3363  000E58  C0A7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  3364  000E5C  0E00               	movlw	0
  3365  000E5E  6E1F               	movwf	___fldiv@a^0,c
  3366  000E60  0E00               	movlw	0
  3367  000E62  6E20               	movwf	(___fldiv@a+1)^0,c
  3368  000E64  0E20               	movlw	32
  3369  000E66  6E21               	movwf	(___fldiv@a+2)^0,c
  3370  000E68  0E41               	movlw	65
  3371  000E6A  6E22               	movwf	(___fldiv@a+3)^0,c
  3372  000E6C  ECB1  F010         	call	___fldiv	;wreg free
  3373  000E70  C01B  F0A4         	movff	?___fldiv,efgtoa@u
  3374  000E74  C01C  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  3375  000E78  C01D  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  3376  000E7C  C01E  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  3377  000E80                     
  3378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3379  000E80  0100               	movlb	0	; () banked
  3380  000E82  4B9A               	infsnz	efgtoa@i& (0+255),f,b
  3381  000E84  2B9B               	incf	(efgtoa@i+1)& (0+255),f,b
  3382  000E86                     l6877:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3386  000E86  5184               	movf	efgtoa@m& (0+255),w,b
  3387  000E88  5D9A               	subwf	efgtoa@i& (0+255),w,b
  3388  000E8A  519B               	movf	(efgtoa@i+1)& (0+255),w,b
  3389  000E8C  0A80               	xorlw	128
  3390  000E8E  6F6B               	movwf	??_efgtoa& (0+255),b
  3391  000E90  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  3392  000E92  0A80               	xorlw	128
  3393  000E94  596B               	subwfb	??_efgtoa& (0+255),w,b
  3394  000E96  A0D8               	btfss	status,0,c
  3395  000E98  EF50  F007         	goto	u8261
  3396  000E9C  EF52  F007         	goto	u8260
  3397  000EA0                     u8261:
  3398  000EA0  EFC8  F006         	goto	l6869
  3399  000EA4                     u8260:
  3400  000EA4                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3403  000EA4  C0A4  F034         	movff	efgtoa@u,___flmul@b
  3404  000EA8  C0A5  F035         	movff	efgtoa@u+1,___flmul@b+1
  3405  000EAC  C0A6  F036         	movff	efgtoa@u+2,___flmul@b+2
  3406  000EB0  C0A7  F037         	movff	efgtoa@u+3,___flmul@b+3
  3407  000EB4  0E00               	movlw	0
  3408  000EB6  6E38               	movwf	___flmul@a^0,c
  3409  000EB8  0E00               	movlw	0
  3410  000EBA  6E39               	movwf	(___flmul@a+1)^0,c
  3411  000EBC  0EA0               	movlw	160
  3412  000EBE  6E3A               	movwf	(___flmul@a+2)^0,c
  3413  000EC0  0E40               	movlw	64
  3414  000EC2  6E3B               	movwf	(___flmul@a+3)^0,c
  3415  000EC4  EC9C  F00E         	call	___flmul	;wreg free
  3416  000EC8  C034  F096         	movff	?___flmul,efgtoa@l
  3417  000ECC  C035  F097         	movff	?___flmul+1,efgtoa@l+1
  3418  000ED0  C036  F098         	movff	?___flmul+2,efgtoa@l+2
  3419  000ED4  C037  F099         	movff	?___flmul+3,efgtoa@l+3
  3420  000ED8                     
  3421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3422  000ED8  C092  F04D         	movff	efgtoa@h,___flge@ff1
  3423  000EDC  C093  F04E         	movff	efgtoa@h+1,___flge@ff1+1
  3424  000EE0  C094  F04F         	movff	efgtoa@h+2,___flge@ff1+2
  3425  000EE4  C095  F050         	movff	efgtoa@h+3,___flge@ff1+3
  3426  000EE8  C096  F051         	movff	efgtoa@l,___flge@ff2
  3427  000EEC  C097  F052         	movff	efgtoa@l+1,___flge@ff2+1
  3428  000EF0  C098  F053         	movff	efgtoa@l+2,___flge@ff2+2
  3429  000EF4  C099  F054         	movff	efgtoa@l+3,___flge@ff2+3
  3430  000EF8  ECC2  F017         	call	___flge	;wreg free
  3431  000EFC  B0D8               	btfsc	status,0,c
  3432  000EFE  EF83  F007         	goto	u8271
  3433  000F02  EF85  F007         	goto	u8270
  3434  000F06                     u8271:
  3435  000F06  EF90  F007         	goto	l6885
  3436  000F0A                     u8270:
  3437  000F0A                     
  3438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3439  000F0A  0E00               	movlw	0
  3440  000F0C  0100               	movlb	0	; () banked
  3441  000F0E  6F96               	movwf	efgtoa@l& (0+255),b
  3442  000F10  0E00               	movlw	0
  3443  000F12  6F97               	movwf	(efgtoa@l+1)& (0+255),b
  3444  000F14  0E00               	movlw	0
  3445  000F16  6F98               	movwf	(efgtoa@l+2)& (0+255),b
  3446  000F18  0E00               	movlw	0
  3447  000F1A  6F99               	movwf	(efgtoa@l+3)& (0+255),b
  3448                           
  3449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3450  000F1C  EFB9  F007         	goto	l6891
  3451  000F20                     l6885:
  3452                           
  3453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3454  000F20  C092  F006         	movff	efgtoa@h,___fleq@ff1
  3455  000F24  C093  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  3456  000F28  C094  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  3457  000F2C  C095  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  3458  000F30  C096  F00A         	movff	efgtoa@l,___fleq@ff2
  3459  000F34  C097  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  3460  000F38  C098  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  3461  000F3C  C099  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  3462  000F40  EC11  F01B         	call	___fleq	;wreg free
  3463  000F44  A0D8               	btfss	status,0,c
  3464  000F46  EFA7  F007         	goto	u8281
  3465  000F4A  EFA9  F007         	goto	u8280
  3466  000F4E                     u8281:
  3467  000F4E  EFB9  F007         	goto	l6891
  3468  000F52                     u8280:
  3469  000F52  0100               	movlb	0	; () banked
  3470  000F54  B188               	btfsc	efgtoa@d& (0+255),0,b
  3471  000F56  EFAF  F007         	goto	u8291
  3472  000F5A  EFB1  F007         	goto	u8290
  3473  000F5E                     u8291:
  3474  000F5E  EFB9  F007         	goto	l6891
  3475  000F62                     u8290:
  3476  000F62                     
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3479  000F62  0E00               	movlw	0
  3480  000F64  6F96               	movwf	efgtoa@l& (0+255),b
  3481  000F66  0E00               	movlw	0
  3482  000F68  6F97               	movwf	(efgtoa@l+1)& (0+255),b
  3483  000F6A  0E00               	movlw	0
  3484  000F6C  6F98               	movwf	(efgtoa@l+2)& (0+255),b
  3485  000F6E  0E00               	movlw	0
  3486  000F70  6F99               	movwf	(efgtoa@l+3)& (0+255),b
  3487  000F72                     l6891:
  3488                           
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3490  000F72  C09C  F006         	movff	efgtoa@g,___fladd@b
  3491  000F76  C09D  F007         	movff	efgtoa@g+1,___fladd@b+1
  3492  000F7A  C09E  F008         	movff	efgtoa@g+2,___fladd@b+2
  3493  000F7E  C09F  F009         	movff	efgtoa@g+3,___fladd@b+3
  3494  000F82  C096  F00A         	movff	efgtoa@l,___fladd@a
  3495  000F86  C097  F00B         	movff	efgtoa@l+1,___fladd@a+1
  3496  000F8A  C098  F00C         	movff	efgtoa@l+2,___fladd@a+2
  3497  000F8E  C099  F00D         	movff	efgtoa@l+3,___fladd@a+3
  3498  000F92  EC05  F00A         	call	___fladd	;wreg free
  3499  000F96  C006  F092         	movff	?___fladd,efgtoa@h
  3500  000F9A  C007  F093         	movff	?___fladd+1,efgtoa@h+1
  3501  000F9E  C008  F094         	movff	?___fladd+2,efgtoa@h+2
  3502  000FA2  C009  F095         	movff	?___fladd+3,efgtoa@h+3
  3503  000FA6                     
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3505  000FA6  C070  F0A4         	movff	efgtoa@ou,efgtoa@u
  3506  000FAA  C071  F0A5         	movff	efgtoa@ou+1,efgtoa@u+1
  3507  000FAE  C072  F0A6         	movff	efgtoa@ou+2,efgtoa@u+2
  3508  000FB2  C073  F0A7         	movff	efgtoa@ou+3,efgtoa@u+3
  3509  000FB6                     
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3511  000FB6  0E65               	movlw	101
  3512  000FB8  0100               	movlb	0	; () banked
  3513  000FBA  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3514  000FBC  B4D8               	btfsc	status,2,c
  3515  000FBE  EFE3  F007         	goto	u8301
  3516  000FC2  EFE5  F007         	goto	u8300
  3517  000FC6                     u8301:
  3518  000FC6  EFEB  F007         	goto	l6899
  3519  000FCA                     u8300:
  3520  000FCA                     
  3521                           ; BSR set to: 0
  3522  000FCA  C0A0  F086         	movff	efgtoa@e,efgtoa@ne
  3523  000FCE  C0A1  F087         	movff	efgtoa@e+1,efgtoa@ne+1
  3524  000FD2  EFEF  F007         	goto	l641
  3525  000FD6                     l6899:
  3526                           
  3527                           ; BSR set to: 0
  3528  000FD6  0E00               	movlw	0
  3529  000FD8  6F87               	movwf	(efgtoa@ne+1)& (0+255),b
  3530  000FDA  0E00               	movlw	0
  3531  000FDC  6F86               	movwf	efgtoa@ne& (0+255),b
  3532  000FDE                     l641:
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3536  000FDE  0E00               	movlw	0
  3537  000FE0  6F83               	movwf	(efgtoa@pp+1)& (0+255),b
  3538  000FE2  0E00               	movlw	0
  3539  000FE4  6F82               	movwf	efgtoa@pp& (0+255),b
  3540                           
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3542  000FE6  0E00               	movlw	0
  3543  000FE8  6F81               	movwf	(efgtoa@t+1)& (0+255),b
  3544  000FEA  0E00               	movlw	0
  3545  000FEC  6F80               	movwf	efgtoa@t& (0+255),b
  3546                           
  3547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3548  000FEE  0E00               	movlw	0
  3549  000FF0  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
  3550  000FF2  0E00               	movlw	0
  3551  000FF4  6F9A               	movwf	efgtoa@i& (0+255),b
  3552                           
  3553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3554  000FF6  EFEA  F008         	goto	l6949
  3555  000FFA                     l6901:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3559  000FFA  C092  F01B         	movff	efgtoa@h,___fldiv@b
  3560  000FFE  C093  F01C         	movff	efgtoa@h+1,___fldiv@b+1
  3561  001002  C094  F01D         	movff	efgtoa@h+2,___fldiv@b+2
  3562  001006  C095  F01E         	movff	efgtoa@h+3,___fldiv@b+3
  3563  00100A  C0A4  F01F         	movff	efgtoa@u,___fldiv@a
  3564  00100E  C0A5  F020         	movff	efgtoa@u+1,___fldiv@a+1
  3565  001012  C0A6  F021         	movff	efgtoa@u+2,___fldiv@a+2
  3566  001016  C0A7  F022         	movff	efgtoa@u+3,___fldiv@a+3
  3567  00101A  ECB1  F010         	call	___fldiv	;wreg free
  3568  00101E  C01B  F034         	movff	?___fldiv,floorf@x
  3569  001022  C01C  F035         	movff	?___fldiv+1,floorf@x+1
  3570  001026  C01D  F036         	movff	?___fldiv+2,floorf@x+2
  3571  00102A  C01E  F037         	movff	?___fldiv+3,floorf@x+3
  3572  00102E  EC7E  F012         	call	_floorf	;wreg free
  3573  001032  C034  F096         	movff	?_floorf,efgtoa@l
  3574  001036  C035  F097         	movff	?_floorf+1,efgtoa@l+1
  3575  00103A  C036  F098         	movff	?_floorf+2,efgtoa@l+2
  3576  00103E  C037  F099         	movff	?_floorf+3,efgtoa@l+3
  3577                           
  3578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3579  001042  C096  F04D         	movff	efgtoa@l,___fltol@f1
  3580  001046  C097  F04E         	movff	efgtoa@l+1,___fltol@f1+1
  3581  00104A  C098  F04F         	movff	efgtoa@l+2,___fltol@f1+2
  3582  00104E  C099  F050         	movff	efgtoa@l+3,___fltol@f1+3
  3583  001052  EC3E  F017         	call	___fltol	;wreg free
  3584  001056  C04D  F088         	movff	?___fltol,efgtoa@d
  3585  00105A  C04E  F089         	movff	?___fltol+1,efgtoa@d+1
  3586  00105E                     
  3587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3588  00105E  0100               	movlb	0	; () banked
  3589  001060  B9EB               	btfsc	_flags& (0+255),4,b
  3590  001062  EF35  F008         	goto	u8311
  3591  001066  EF37  F008         	goto	u8310
  3592  00106A                     u8311:
  3593  00106A  EF54  F008         	goto	l6913
  3594  00106E                     u8310:
  3595  00106E                     
  3596                           ; BSR set to: 0
  3597  00106E  5188               	movf	efgtoa@d& (0+255),w,b
  3598  001070  1189               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3599  001072  A4D8               	btfss	status,2,c
  3600  001074  EF3E  F008         	goto	u8321
  3601  001078  EF40  F008         	goto	u8320
  3602  00107C                     u8321:
  3603  00107C  EF54  F008         	goto	l6913
  3604  001080                     u8320:
  3605  001080                     
  3606                           ; BSR set to: 0
  3607  001080  0E67               	movlw	103
  3608  001082  1991               	xorwf	efgtoa@mode& (0+255),w,b
  3609  001084  A4D8               	btfss	status,2,c
  3610  001086  EF47  F008         	goto	u8331
  3611  00108A  EF49  F008         	goto	u8330
  3612  00108E                     u8331:
  3613  00108E  EF54  F008         	goto	l6913
  3614  001092                     u8330:
  3615  001092                     
  3616                           ; BSR set to: 0
  3617  001092  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3618  001094  EF50  F008         	goto	u8340
  3619  001098  EF4E  F008         	goto	u8341
  3620  00109C                     u8341:
  3621  00109C  EF54  F008         	goto	l6913
  3622  0010A0                     u8340:
  3623  0010A0                     
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3626  0010A0  4B80               	infsnz	efgtoa@t& (0+255),f,b
  3627  0010A2  2B81               	incf	(efgtoa@t+1)& (0+255),f,b
  3628                           
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3630  0010A4  EF9E  F008         	goto	l6941
  3631  0010A8                     l6913:
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3635  0010A8  5182               	movf	efgtoa@pp& (0+255),w,b
  3636  0010AA  1183               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3637  0010AC  A4D8               	btfss	status,2,c
  3638  0010AE  EF5B  F008         	goto	u8351
  3639  0010B2  EF5D  F008         	goto	u8350
  3640  0010B6                     u8351:
  3641  0010B6  EF87  F008         	goto	l6933
  3642  0010BA                     u8350:
  3643  0010BA                     
  3644                           ; BSR set to: 0
  3645  0010BA  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3646  0010BC  EF64  F008         	goto	u8360
  3647  0010C0  EF62  F008         	goto	u8361
  3648  0010C4                     u8361:
  3649  0010C4  EF87  F008         	goto	l6933
  3650  0010C8                     u8360:
  3651  0010C8                     
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3654  0010C8  0E1C               	movlw	low _dbuf
  3655  0010CA  25A2               	addwf	efgtoa@n& (0+255),w,b
  3656  0010CC  6ED9               	movwf	fsr2l,c
  3657  0010CE  0E01               	movlw	high _dbuf
  3658  0010D0  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3659  0010D2  6EDA               	movwf	fsr2h,c
  3660  0010D4  0E2E               	movlw	46
  3661  0010D6  6EDF               	movwf	indf2,c
  3662  0010D8                     
  3663                           ; BSR set to: 0
  3664  0010D8  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3665  0010DA  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3666  0010DC                     
  3667                           ; BSR set to: 0
  3668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3669  0010DC  078F               	decf	efgtoa@w& (0+255),f,b
  3670  0010DE  A0D8               	btfss	status,0,c
  3671  0010E0  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  3672  0010E2                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3675  0010E2  0E00               	movlw	0
  3676  0010E4  6F83               	movwf	(efgtoa@pp+1)& (0+255),b
  3677  0010E6  0E01               	movlw	1
  3678  0010E8  6F82               	movwf	efgtoa@pp& (0+255),b
  3679  0010EA  EF87  F008         	goto	l6933
  3680  0010EE                     l6925:
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3684  0010EE  0E1C               	movlw	low _dbuf
  3685  0010F0  25A2               	addwf	efgtoa@n& (0+255),w,b
  3686  0010F2  6ED9               	movwf	fsr2l,c
  3687  0010F4  0E01               	movlw	high _dbuf
  3688  0010F6  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3689  0010F8  6EDA               	movwf	fsr2h,c
  3690  0010FA  0E30               	movlw	48
  3691  0010FC  6EDF               	movwf	indf2,c
  3692  0010FE                     
  3693                           ; BSR set to: 0
  3694  0010FE  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3695  001100  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3696  001102                     
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3699  001102  078F               	decf	efgtoa@w& (0+255),f,b
  3700  001104  A0D8               	btfss	status,0,c
  3701  001106  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  3702  001108                     
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3705  001108  0780               	decf	efgtoa@t& (0+255),f,b
  3706  00110A  A0D8               	btfss	status,0,c
  3707  00110C  0781               	decf	(efgtoa@t+1)& (0+255),f,b
  3708  00110E                     l6933:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3712  00110E  5180               	movf	efgtoa@t& (0+255),w,b
  3713  001110  1181               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3714  001112  A4D8               	btfss	status,2,c
  3715  001114  EF8E  F008         	goto	u8371
  3716  001118  EF90  F008         	goto	u8370
  3717  00111C                     u8371:
  3718  00111C  EF77  F008         	goto	l6925
  3719  001120                     u8370:
  3720  001120                     
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3723  001120  0E1C               	movlw	low _dbuf
  3724  001122  25A2               	addwf	efgtoa@n& (0+255),w,b
  3725  001124  6ED9               	movwf	fsr2l,c
  3726  001126  0E01               	movlw	high _dbuf
  3727  001128  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3728  00112A  6EDA               	movwf	fsr2h,c
  3729  00112C  5188               	movf	efgtoa@d& (0+255),w,b
  3730  00112E  0F30               	addlw	48
  3731  001130  6EDF               	movwf	indf2,c
  3732  001132                     
  3733                           ; BSR set to: 0
  3734  001132  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3735  001134  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3736  001136                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3739  001136  078F               	decf	efgtoa@w& (0+255),f,b
  3740  001138  A0D8               	btfss	status,0,c
  3741  00113A  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  3742  00113C                     l6941:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3746  00113C  C092  F04D         	movff	efgtoa@h,___flsub@b
  3747  001140  C093  F04E         	movff	efgtoa@h+1,___flsub@b+1
  3748  001144  C094  F04F         	movff	efgtoa@h+2,___flsub@b+2
  3749  001148  C095  F050         	movff	efgtoa@h+3,___flsub@b+3
  3750  00114C  C0A4  F038         	movff	efgtoa@u,___flmul@a
  3751  001150  C0A5  F039         	movff	efgtoa@u+1,___flmul@a+1
  3752  001154  C0A6  F03A         	movff	efgtoa@u+2,___flmul@a+2
  3753  001158  C0A7  F03B         	movff	efgtoa@u+3,___flmul@a+3
  3754  00115C  C096  F034         	movff	efgtoa@l,___flmul@b
  3755  001160  C097  F035         	movff	efgtoa@l+1,___flmul@b+1
  3756  001164  C098  F036         	movff	efgtoa@l+2,___flmul@b+2
  3757  001168  C099  F037         	movff	efgtoa@l+3,___flmul@b+3
  3758  00116C  EC9C  F00E         	call	___flmul	;wreg free
  3759  001170  C034  F051         	movff	?___flmul,___flsub@a
  3760  001174  C035  F052         	movff	?___flmul+1,___flsub@a+1
  3761  001178  C036  F053         	movff	?___flmul+2,___flsub@a+2
  3762  00117C  C037  F054         	movff	?___flmul+3,___flsub@a+3
  3763  001180  EC3A  F01E         	call	___flsub	;wreg free
  3764  001184  C04D  F092         	movff	?___flsub,efgtoa@h
  3765  001188  C04E  F093         	movff	?___flsub+1,efgtoa@h+1
  3766  00118C  C04F  F094         	movff	?___flsub+2,efgtoa@h+2
  3767  001190  C050  F095         	movff	?___flsub+3,efgtoa@h+3
  3768  001194                     
  3769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3770  001194  C0A4  F01B         	movff	efgtoa@u,___fldiv@b
  3771  001198  C0A5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  3772  00119C  C0A6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  3773  0011A0  C0A7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  3774  0011A4  0E00               	movlw	0
  3775  0011A6  6E1F               	movwf	___fldiv@a^0,c
  3776  0011A8  0E00               	movlw	0
  3777  0011AA  6E20               	movwf	(___fldiv@a+1)^0,c
  3778  0011AC  0E20               	movlw	32
  3779  0011AE  6E21               	movwf	(___fldiv@a+2)^0,c
  3780  0011B0  0E41               	movlw	65
  3781  0011B2  6E22               	movwf	(___fldiv@a+3)^0,c
  3782  0011B4  ECB1  F010         	call	___fldiv	;wreg free
  3783  0011B8  C01B  F0A4         	movff	?___fldiv,efgtoa@u
  3784  0011BC  C01C  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  3785  0011C0  C01D  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  3786  0011C4  C01E  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  3787  0011C8                     
  3788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3789  0011C8  0100               	movlb	0	; () banked
  3790  0011CA  0786               	decf	efgtoa@ne& (0+255),f,b
  3791  0011CC  A0D8               	btfss	status,0,c
  3792  0011CE  0787               	decf	(efgtoa@ne+1)& (0+255),f,b
  3793  0011D0                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3796  0011D0  4B9A               	infsnz	efgtoa@i& (0+255),f,b
  3797  0011D2  2B9B               	incf	(efgtoa@i+1)& (0+255),f,b
  3798  0011D4                     l6949:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3802  0011D4  5184               	movf	efgtoa@m& (0+255),w,b
  3803  0011D6  5D9A               	subwf	efgtoa@i& (0+255),w,b
  3804  0011D8  519B               	movf	(efgtoa@i+1)& (0+255),w,b
  3805  0011DA  0A80               	xorlw	128
  3806  0011DC  6F6B               	movwf	??_efgtoa& (0+255),b
  3807  0011DE  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  3808  0011E0  0A80               	xorlw	128
  3809  0011E2  596B               	subwfb	??_efgtoa& (0+255),w,b
  3810  0011E4  B0D8               	btfsc	status,0,c
  3811  0011E6  EFF7  F008         	goto	u8381
  3812  0011EA  EFF9  F008         	goto	u8380
  3813  0011EE                     u8381:
  3814  0011EE  EF07  F009         	goto	l6953
  3815  0011F2                     u8380:
  3816  0011F2                     
  3817                           ; BSR set to: 0
  3818  0011F2  BFA3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3819  0011F4  EF05  F009         	goto	u8391
  3820  0011F8  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  3821  0011FA  E109               	bnz	u8390
  3822  0011FC  0E4B               	movlw	75
  3823  0011FE  5DA2               	subwf	efgtoa@n& (0+255),w,b
  3824  001200  A0D8               	btfss	status,0,c
  3825  001202  EF05  F009         	goto	u8391
  3826  001206  EF07  F009         	goto	u8390
  3827  00120A                     u8391:
  3828  00120A  EFFD  F007         	goto	l6901
  3829  00120E                     u8390:
  3830  00120E                     l6953:
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3834  00120E  5182               	movf	efgtoa@pp& (0+255),w,b
  3835  001210  1183               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3836  001212  A4D8               	btfss	status,2,c
  3837  001214  EF0E  F009         	goto	u8401
  3838  001218  EF10  F009         	goto	u8400
  3839  00121C                     u8401:
  3840  00121C  EF21  F009         	goto	l6961
  3841  001220                     u8400:
  3842  001220                     
  3843                           ; BSR set to: 0
  3844  001220  A9EB               	btfss	_flags& (0+255),4,b
  3845  001222  EF15  F009         	goto	u8411
  3846  001226  EF17  F009         	goto	u8410
  3847  00122A                     u8411:
  3848  00122A  EF21  F009         	goto	l6961
  3849  00122E                     u8410:
  3850  00122E                     
  3851                           ; BSR set to: 0
  3852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3853  00122E  0E1C               	movlw	low _dbuf
  3854  001230  25A2               	addwf	efgtoa@n& (0+255),w,b
  3855  001232  6ED9               	movwf	fsr2l,c
  3856  001234  0E01               	movlw	high _dbuf
  3857  001236  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3858  001238  6EDA               	movwf	fsr2h,c
  3859  00123A  0E2E               	movlw	46
  3860  00123C  6EDF               	movwf	indf2,c
  3861  00123E                     
  3862                           ; BSR set to: 0
  3863  00123E  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3864  001240  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3865  001242                     l6961:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3869  001242  0E1C               	movlw	low _dbuf
  3870  001244  25A2               	addwf	efgtoa@n& (0+255),w,b
  3871  001246  6ED9               	movwf	fsr2l,c
  3872  001248  0E01               	movlw	high _dbuf
  3873  00124A  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3874  00124C  6EDA               	movwf	fsr2h,c
  3875  00124E  0E00               	movlw	0
  3876  001250  6EDF               	movwf	indf2,c
  3877  001252                     
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3880  001252  0E65               	movlw	101
  3881  001254  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3882  001256  A4D8               	btfss	status,2,c
  3883  001258  EF30  F009         	goto	u8421
  3884  00125C  EF32  F009         	goto	u8420
  3885  001260                     u8421:
  3886  001260  EFE0  F004         	goto	l6773
  3887  001264                     u8420:
  3888  001264                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3891  001264  0E00               	movlw	0
  3892  001266  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
  3893  001268  0E4F               	movlw	79
  3894  00126A  6F9A               	movwf	efgtoa@i& (0+255),b
  3895  00126C                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3898  00126C  0E1C               	movlw	low _dbuf
  3899  00126E  259A               	addwf	efgtoa@i& (0+255),w,b
  3900  001270  6ED9               	movwf	fsr2l,c
  3901  001272  0E01               	movlw	high _dbuf
  3902  001274  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3903  001276  6EDA               	movwf	fsr2h,c
  3904  001278  0E00               	movlw	0
  3905  00127A  6EDF               	movwf	indf2,c
  3906  00127C                     
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3909  00127C  0E00               	movlw	0
  3910  00127E  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  3911  001280  0E00               	movlw	0
  3912  001282  6F8A               	movwf	efgtoa@sign& (0+255),b
  3913  001284                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3916  001284  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3917  001286  EF49  F009         	goto	u8430
  3918  00128A  EF47  F009         	goto	u8431
  3919  00128E                     u8431:
  3920  00128E  EF51  F009         	goto	l6977
  3921  001292                     u8430:
  3922  001292                     
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3925  001292  0E00               	movlw	0
  3926  001294  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  3927  001296  0E01               	movlw	1
  3928  001298  6F8A               	movwf	efgtoa@sign& (0+255),b
  3929  00129A                     
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3932  00129A  6DA0               	negf	efgtoa@e& (0+255),b
  3933  00129C  1FA1               	comf	(efgtoa@e+1)& (0+255),f,b
  3934  00129E  B0D8               	btfsc	status,0,c
  3935  0012A0  2BA1               	incf	(efgtoa@e+1)& (0+255),f,b
  3936  0012A2                     l6977:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3940  0012A2  0E00               	movlw	0
  3941  0012A4  6F8D               	movwf	(efgtoa@p+1)& (0+255),b
  3942  0012A6  0E02               	movlw	2
  3943  0012A8  6F8C               	movwf	efgtoa@p& (0+255),b
  3944                           
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3946  0012AA  EF82  F009         	goto	l6989
  3947  0012AE                     l6979:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3951  0012AE  079A               	decf	efgtoa@i& (0+255),f,b
  3952  0012B0  A0D8               	btfss	status,0,c
  3953  0012B2  079B               	decf	(efgtoa@i+1)& (0+255),f,b
  3954  0012B4                     
  3955                           ; BSR set to: 0
  3956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3957  0012B4  0E1C               	movlw	low _dbuf
  3958  0012B6  259A               	addwf	efgtoa@i& (0+255),w,b
  3959  0012B8  6ED9               	movwf	fsr2l,c
  3960  0012BA  0E01               	movlw	high _dbuf
  3961  0012BC  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3962  0012BE  6EDA               	movwf	fsr2h,c
  3963  0012C0  C0A0  F006         	movff	efgtoa@e,___awmod@dividend
  3964  0012C4  C0A1  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  3965  0012C8  0E00               	movlw	0
  3966  0012CA  6E09               	movwf	(___awmod@divisor+1)^0,c
  3967  0012CC  0E0A               	movlw	10
  3968  0012CE  6E08               	movwf	___awmod@divisor^0,c
  3969  0012D0  ECB9  F01A         	call	___awmod	;wreg free
  3970  0012D4  5006               	movf	?___awmod^0,w,c
  3971  0012D6  0F30               	addlw	48
  3972  0012D8  6EDF               	movwf	indf2,c
  3973  0012DA                     
  3974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3975  0012DA  C0A0  F006         	movff	efgtoa@e,___awdiv@dividend
  3976  0012DE  C0A1  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  3977  0012E2  0E00               	movlw	0
  3978  0012E4  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3979  0012E6  0E0A               	movlw	10
  3980  0012E8  6E08               	movwf	___awdiv@divisor^0,c
  3981  0012EA  ECF7  F019         	call	___awdiv	;wreg free
  3982  0012EE  C006  F0A0         	movff	?___awdiv,efgtoa@e
  3983  0012F2  C007  F0A1         	movff	?___awdiv+1,efgtoa@e+1
  3984  0012F6                     
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3986  0012F6  0100               	movlb	0	; () banked
  3987  0012F8  078C               	decf	efgtoa@p& (0+255),f,b
  3988  0012FA  A0D8               	btfss	status,0,c
  3989  0012FC  078D               	decf	(efgtoa@p+1)& (0+255),f,b
  3990  0012FE                     
  3991                           ; BSR set to: 0
  3992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3993  0012FE  078F               	decf	efgtoa@w& (0+255),f,b
  3994  001300  A0D8               	btfss	status,0,c
  3995  001302  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  3996  001304                     l6989:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4000  001304  51A0               	movf	efgtoa@e& (0+255),w,b
  4001  001306  11A1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4002  001308  A4D8               	btfss	status,2,c
  4003  00130A  EF89  F009         	goto	u8441
  4004  00130E  EF8B  F009         	goto	u8440
  4005  001312                     u8441:
  4006  001312  EF57  F009         	goto	l6979
  4007  001316                     u8440:
  4008  001316                     
  4009                           ; BSR set to: 0
  4010  001316  BF8D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4011  001318  EF98  F009         	goto	u8450
  4012  00131C  518D               	movf	(efgtoa@p+1)& (0+255),w,b
  4013  00131E  E106               	bnz	u8451
  4014  001320  058C               	decf	efgtoa@p& (0+255),w,b
  4015  001322  B0D8               	btfsc	status,0,c
  4016  001324  EF96  F009         	goto	u8451
  4017  001328  EF98  F009         	goto	u8450
  4018  00132C                     u8451:
  4019  00132C  EF57  F009         	goto	l6979
  4020  001330                     u8450:
  4021  001330                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4024  001330  079A               	decf	efgtoa@i& (0+255),f,b
  4025  001332  A0D8               	btfss	status,0,c
  4026  001334  079B               	decf	(efgtoa@i+1)& (0+255),f,b
  4027  001336                     
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4030  001336  518A               	movf	efgtoa@sign& (0+255),w,b
  4031  001338  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4032  00133A  A4D8               	btfss	status,2,c
  4033  00133C  EFA2  F009         	goto	u8461
  4034  001340  EFA4  F009         	goto	u8460
  4035  001344                     u8461:
  4036  001344  EFAA  F009         	goto	l6999
  4037  001348                     u8460:
  4038  001348                     
  4039                           ; BSR set to: 0
  4040  001348  0E00               	movlw	0
  4041  00134A  6F7B               	movwf	(_efgtoa$793+1)& (0+255),b
  4042  00134C  0E2B               	movlw	43
  4043  00134E  6F7A               	movwf	_efgtoa$793& (0+255),b
  4044  001350  EFAE  F009         	goto	l7001
  4045  001354                     l6999:
  4046                           
  4047                           ; BSR set to: 0
  4048  001354  0E00               	movlw	0
  4049  001356  6F7B               	movwf	(_efgtoa$793+1)& (0+255),b
  4050  001358  0E2D               	movlw	45
  4051  00135A  6F7A               	movwf	_efgtoa$793& (0+255),b
  4052  00135C                     l7001:
  4053                           
  4054                           ; BSR set to: 0
  4055  00135C  0E1C               	movlw	low _dbuf
  4056  00135E  259A               	addwf	efgtoa@i& (0+255),w,b
  4057  001360  6ED9               	movwf	fsr2l,c
  4058  001362  0E01               	movlw	high _dbuf
  4059  001364  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4060  001366  6EDA               	movwf	fsr2h,c
  4061  001368  C07A  FFDF         	movff	_efgtoa$793,indf2
  4062  00136C                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4065  00136C  078F               	decf	efgtoa@w& (0+255),f,b
  4066  00136E  A0D8               	btfss	status,0,c
  4067  001370  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  4068  001372                     
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4071  001372  079A               	decf	efgtoa@i& (0+255),f,b
  4072  001374  A0D8               	btfss	status,0,c
  4073  001376  079B               	decf	(efgtoa@i+1)& (0+255),f,b
  4074  001378                     
  4075                           ; BSR set to: 0
  4076  001378  0EBF               	movlw	191
  4077  00137A  6F6B               	movwf	??_efgtoa& (0+255),b
  4078  00137C  0EFF               	movlw	255
  4079  00137E  6F6C               	movwf	(??_efgtoa+1)& (0+255),b
  4080  001380  516A               	movf	efgtoa@c& (0+255),w,b
  4081  001382  6F6D               	movwf	(??_efgtoa+2)& (0+255),b
  4082  001384  6B6E               	clrf	(??_efgtoa+3)& (0+255),b
  4083  001386  516B               	movf	??_efgtoa& (0+255),w,b
  4084  001388  276D               	addwf	(??_efgtoa+2)& (0+255),f,b
  4085  00138A  516C               	movf	(??_efgtoa+1)& (0+255),w,b
  4086  00138C  236E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4087  00138E  516E               	movf	(??_efgtoa+3)& (0+255),w,b
  4088  001390  E10A               	bnz	u8470
  4089  001392  0E1A               	movlw	26
  4090  001394  5D6D               	subwf	(??_efgtoa+2)& (0+255),w,b
  4091  001396  A0D8               	btfss	status,0,c
  4092  001398  EFD0  F009         	goto	u8471
  4093  00139C  EFD3  F009         	goto	u8470
  4094  0013A0                     u8471:
  4095  0013A0  0E01               	movlw	1
  4096  0013A2  EFD4  F009         	goto	u8480
  4097  0013A6                     u8470:
  4098  0013A6  0E00               	movlw	0
  4099  0013A8                     u8480:
  4100  0013A8  6F7E               	movwf	_efgtoa$795& (0+255),b
  4101  0013AA  6B7F               	clrf	(_efgtoa$795+1)& (0+255),b
  4102  0013AC                     
  4103                           ; BSR set to: 0
  4104  0013AC  517E               	movf	_efgtoa$795& (0+255),w,b
  4105  0013AE  117F               	iorwf	(_efgtoa$795+1)& (0+255),w,b
  4106  0013B0  A4D8               	btfss	status,2,c
  4107  0013B2  EFDD  F009         	goto	u8491
  4108  0013B6  EFDF  F009         	goto	u8490
  4109  0013BA                     u8491:
  4110  0013BA  EFE5  F009         	goto	l7015
  4111  0013BE                     u8490:
  4112  0013BE                     
  4113                           ; BSR set to: 0
  4114  0013BE  0E00               	movlw	0
  4115  0013C0  6F7D               	movwf	(_efgtoa$794+1)& (0+255),b
  4116  0013C2  0E65               	movlw	101
  4117  0013C4  6F7C               	movwf	_efgtoa$794& (0+255),b
  4118  0013C6  EFE9  F009         	goto	l7017
  4119  0013CA                     l7015:
  4120                           
  4121                           ; BSR set to: 0
  4122  0013CA  0E00               	movlw	0
  4123  0013CC  6F7D               	movwf	(_efgtoa$794+1)& (0+255),b
  4124  0013CE  0E45               	movlw	69
  4125  0013D0  6F7C               	movwf	_efgtoa$794& (0+255),b
  4126  0013D2                     l7017:
  4127                           
  4128                           ; BSR set to: 0
  4129  0013D2  0E1C               	movlw	low _dbuf
  4130  0013D4  259A               	addwf	efgtoa@i& (0+255),w,b
  4131  0013D6  6ED9               	movwf	fsr2l,c
  4132  0013D8  0E01               	movlw	high _dbuf
  4133  0013DA  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4134  0013DC  6EDA               	movwf	fsr2h,c
  4135  0013DE  C07C  FFDF         	movff	_efgtoa$794,indf2
  4136  0013E2                     
  4137                           ; BSR set to: 0
  4138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4139  0013E2  078F               	decf	efgtoa@w& (0+255),f,b
  4140  0013E4  A0D8               	btfss	status,0,c
  4141  0013E6  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  4142  0013E8                     
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4145  0013E8  0E1C               	movlw	low _dbuf
  4146  0013EA  25A2               	addwf	efgtoa@n& (0+255),w,b
  4147  0013EC  6E06               	movwf	strcpy@dest^0,c
  4148  0013EE  0E01               	movlw	high _dbuf
  4149  0013F0  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4150  0013F2  6E07               	movwf	(strcpy@dest+1)^0,c
  4151  0013F4  0E1C               	movlw	low _dbuf
  4152  0013F6  259A               	addwf	efgtoa@i& (0+255),w,b
  4153  0013F8  6E08               	movwf	strcpy@src^0,c
  4154  0013FA  0E01               	movlw	high _dbuf
  4155  0013FC  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4156  0013FE  6E09               	movwf	(strcpy@src+1)^0,c
  4157  001400  EC12  F01D         	call	_strcpy	;wreg free
  4158  001404  EFE0  F004         	goto	l6773
  4159  001408                     l597:
  4160  001408  0012               	return		;funcret
  4161  00140A                     __end_of_efgtoa:
  4162                           	opt callstack 0
  4163                           
  4164 ;; *************** function _tolower *****************
  4165 ;; Defined at:
  4166 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  c               2   11[COMRAM] int 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  2   11[COMRAM] int 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4180 ;;      Params:         2       0       0       0       0       0       0       0       0
  4181 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4182 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4183 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4184 ;;Total ram usage:        8 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    3
  4187 ;; This function calls:
  4188 ;;		_isupper
  4189 ;; This function is called by:
  4190 ;;		_efgtoa
  4191 ;;		_vfpfcnvrt
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text8
  4196  003966                     __ptext8:
  4197                           	opt callstack 0
  4198  003966                     _tolower:
  4199                           	opt callstack 22
  4200  003966  0EBF               	movlw	191
  4201  003968  6E0E               	movwf	??_tolower^0,c
  4202  00396A  0EFF               	movlw	255
  4203  00396C  6E0F               	movwf	(??_tolower+1)^0,c
  4204  00396E  C00C  F010         	movff	tolower@c,??_tolower+2
  4205  003972  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4206  003976  500E               	movf	??_tolower^0,w,c
  4207  003978  2610               	addwf	(??_tolower+2)^0,f,c
  4208  00397A  500F               	movf	(??_tolower+1)^0,w,c
  4209  00397C  2211               	addwfc	(??_tolower+3)^0,f,c
  4210  00397E  5011               	movf	(??_tolower+3)^0,w,c
  4211  003980  E10A               	bnz	u7110
  4212  003982  0E1A               	movlw	26
  4213  003984  5C10               	subwf	(??_tolower+2)^0,w,c
  4214  003986  A0D8               	btfss	status,0,c
  4215  003988  EFC8  F01C         	goto	u7111
  4216  00398C  EFCB  F01C         	goto	u7110
  4217  003990                     u7111:
  4218  003990  0E01               	movlw	1
  4219  003992  EFCC  F01C         	goto	u7120
  4220  003996                     u7110:
  4221  003996  0E00               	movlw	0
  4222  003998                     u7120:
  4223  003998  6E12               	movwf	_tolower$1414^0,c
  4224  00399A  6A13               	clrf	(_tolower$1414+1)^0,c
  4225  00399C  5012               	movf	_tolower$1414^0,w,c
  4226  00399E  1013               	iorwf	(_tolower$1414+1)^0,w,c
  4227  0039A0  B4D8               	btfsc	status,2,c
  4228  0039A2  EFD5  F01C         	goto	u7131
  4229  0039A6  EFD7  F01C         	goto	u7130
  4230  0039AA                     u7131:
  4231  0039AA  EFDE  F01C         	goto	l1521
  4232  0039AE                     u7130:
  4233  0039AE  0E20               	movlw	32
  4234  0039B0  100C               	iorwf	tolower@c^0,w,c
  4235  0039B2  6E0C               	movwf	?_tolower^0,c
  4236  0039B4  500D               	movf	(tolower@c+1)^0,w,c
  4237  0039B6  6E0D               	movwf	(?_tolower+1)^0,c
  4238  0039B8  EFE2  F01C         	goto	l1526
  4239  0039BC                     l1521:
  4240  0039BC  C00C  F00C         	movff	tolower@c,?_tolower
  4241  0039C0  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  4242  0039C4                     l1526:
  4243  0039C4  0012               	return		;funcret
  4244  0039C6                     __end_of_tolower:
  4245                           	opt callstack 0
  4246                           
  4247 ;; *************** function _isupper *****************
  4248 ;; Defined at:
  4249 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  c               2    5[COMRAM] int 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  2    5[COMRAM] int 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4263 ;;      Params:         2       0       0       0       0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4265 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4266 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4267 ;;Total ram usage:        6 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    2
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_efgtoa
  4274 ;;		_vfpfcnvrt
  4275 ;;		_tolower
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text9
  4280  003D40                     __ptext9:
  4281                           	opt callstack 0
  4282  003D40                     _isupper:
  4283                           	opt callstack 22
  4284  003D40  0EBF               	movlw	191
  4285  003D42  6E08               	movwf	??_isupper^0,c
  4286  003D44  0EFF               	movlw	255
  4287  003D46  6E09               	movwf	(??_isupper+1)^0,c
  4288  003D48  C006  F00A         	movff	isupper@c,??_isupper+2
  4289  003D4C  C007  F00B         	movff	isupper@c+1,??_isupper+3
  4290  003D50  5008               	movf	??_isupper^0,w,c
  4291  003D52  260A               	addwf	(??_isupper+2)^0,f,c
  4292  003D54  5009               	movf	(??_isupper+1)^0,w,c
  4293  003D56  220B               	addwfc	(??_isupper+3)^0,f,c
  4294  003D58  500B               	movf	(??_isupper+3)^0,w,c
  4295  003D5A  E10A               	bnz	u6570
  4296  003D5C  0E1A               	movlw	26
  4297  003D5E  5C0A               	subwf	(??_isupper+2)^0,w,c
  4298  003D60  A0D8               	btfss	status,0,c
  4299  003D62  EFB5  F01E         	goto	u6571
  4300  003D66  EFB8  F01E         	goto	u6570
  4301  003D6A                     u6571:
  4302  003D6A  0E01               	movlw	1
  4303  003D6C  EFB9  F01E         	goto	u6580
  4304  003D70                     u6570:
  4305  003D70  0E00               	movlw	0
  4306  003D72                     u6580:
  4307  003D72  6E06               	movwf	?_isupper^0,c
  4308  003D74  6A07               	clrf	(?_isupper+1)^0,c
  4309  003D76  0012               	return		;funcret
  4310  003D78                     __end_of_isupper:
  4311                           	opt callstack 0
  4312                           
  4313 ;; *************** function _strcpy *****************
  4314 ;; Defined at:
  4315 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4318 ;;		 -> dbuf(80), 
  4319 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4320 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4321 ;;		 -> dbuf(80), 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  d               2   13[COMRAM] PTR unsigned char 
  4324 ;;		 -> dbuf(80), 
  4325 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4326 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4327 ;;		 -> dbuf(80), 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  2    5[COMRAM] PTR unsigned char 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4337 ;;      Params:         4       0       0       0       0       0       0       0       0
  4338 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4339 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4340 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4341 ;;Total ram usage:       10 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    2
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_efgtoa
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text10
  4352  003A24                     __ptext10:
  4353                           	opt callstack 0
  4354  003A24                     _strcpy:
  4355                           	opt callstack 22
  4356  003A24  C008  F00C         	movff	strcpy@src,strcpy@s
  4357  003A28  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  4358  003A2C  C006  F00E         	movff	strcpy@dest,strcpy@d
  4359  003A30  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  4360  003A34                     l6223:
  4361  003A34  500C               	movf	strcpy@s^0,w,c
  4362  003A36  6E0A               	movwf	??_strcpy^0,c
  4363  003A38  500D               	movf	(strcpy@s+1)^0,w,c
  4364  003A3A  6E0B               	movwf	(??_strcpy+1)^0,c
  4365  003A3C  4A0C               	infsnz	strcpy@s^0,f,c
  4366  003A3E  2A0D               	incf	(strcpy@s+1)^0,f,c
  4367  003A40  C00A  FFF6         	movff	??_strcpy,tblptrl
  4368  003A44  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  4369  003A48  6AF8               	clrf	tblptru,c
  4370  003A4A  C00E  FFD9         	movff	strcpy@d,fsr2l
  4371  003A4E  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  4372  003A52  4A0E               	infsnz	strcpy@d^0,f,c
  4373  003A54  2A0F               	incf	(strcpy@d+1)^0,f,c
  4374  003A56  0E07               	movlw	(high __ramtop+-1)
  4375  003A58  64F7               	cpfsgt	tblptrh,c
  4376  003A5A  D003               	bra	u7097
  4377  003A5C  0008               	tblrd		*
  4378  003A5E  50F5               	movf	tablat,w,c
  4379  003A60  D005               	bra	u7090
  4380  003A62                     u7097:
  4381  003A62  CFF6 FFE9          	movff	tblptrl,fsr0l
  4382  003A66  CFF7 FFEA          	movff	tblptrh,fsr0h
  4383  003A6A  50EF               	movf	indf0,w,c
  4384  003A6C                     u7090:
  4385  003A6C  6EDF               	movwf	indf2,c
  4386  003A6E  50DF               	movf	indf2,w,c
  4387  003A70  A4D8               	btfss	status,2,c
  4388  003A72  EF3D  F01D         	goto	u7101
  4389  003A76  EF3F  F01D         	goto	u7100
  4390  003A7A                     u7101:
  4391  003A7A  EF1A  F01D         	goto	l6223
  4392  003A7E                     u7100:
  4393  003A7E  0012               	return		;funcret
  4394  003A80                     __end_of_strcpy:
  4395                           	opt callstack 0
  4396                           
  4397 ;; *************** function _pad *****************
  4398 ;; Defined at:
  4399 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  4402 ;;		 -> sprintf@f(6), 
  4403 ;;  buf             2   23[COMRAM] PTR unsigned char 
  4404 ;;		 -> dbuf(80), 
  4405 ;;  p               2   25[COMRAM] int 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  w               2   30[COMRAM] int 
  4408 ;;  i               2   28[COMRAM] int 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  2   21[COMRAM] int 
  4411 ;; Registers used:
  4412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4418 ;;      Params:         6       0       0       0       0       0       0       0       0
  4419 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4420 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4421 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4422 ;;Total ram usage:       11 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:    5
  4425 ;; This function calls:
  4426 ;;		_fputc
  4427 ;;		_fputs
  4428 ;;		_strlen
  4429 ;; This function is called by:
  4430 ;;		_efgtoa
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text11
  4435  003328                     __ptext11:
  4436                           	opt callstack 0
  4437  003328                     _pad:
  4438                           	opt callstack 19
  4439  003328                     
  4440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4441  003328  0100               	movlb	0	; () banked
  4442  00332A  A1EB               	btfss	_flags& (0+255),0,b
  4443  00332C  EF9A  F019         	goto	u6981
  4444  003330  EF9C  F019         	goto	u6980
  4445  003334                     u6981:
  4446  003334  EFA6  F019         	goto	l6181
  4447  003338                     u6980:
  4448  003338                     
  4449                           ; BSR set to: 0
  4450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4451  003338  C018  F00F         	movff	pad@buf,fputs@s
  4452  00333C  C019  F010         	movff	pad@buf+1,fputs@s+1
  4453  003340  C016  F011         	movff	pad@fp,fputs@fp
  4454  003344  C017  F012         	movff	pad@fp+1,fputs@fp+1
  4455  003348  EC5D  F01E         	call	_fputs	;wreg free
  4456  00334C                     l6181:
  4457                           
  4458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4459  00334C  BE1B               	btfsc	(pad@p+1)^0,7,c
  4460  00334E  EFAB  F019         	goto	u6991
  4461  003352  EFAD  F019         	goto	u6990
  4462  003356                     u6991:
  4463  003356  EFB3  F019         	goto	l6185
  4464  00335A                     u6990:
  4465  00335A  C01A  F01F         	movff	pad@p,pad@w
  4466  00335E  C01B  F020         	movff	pad@p+1,pad@w+1
  4467  003362  EFB7  F019         	goto	l574
  4468  003366                     l6185:
  4469  003366  0E00               	movlw	0
  4470  003368  6E20               	movwf	(pad@w+1)^0,c
  4471  00336A  0E00               	movlw	0
  4472  00336C  6E1F               	movwf	pad@w^0,c
  4473  00336E                     l574:
  4474                           
  4475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4476  00336E  0E00               	movlw	0
  4477  003370  6E1E               	movwf	(pad@i+1)^0,c
  4478  003372  0E00               	movlw	0
  4479  003374  6E1D               	movwf	pad@i^0,c
  4480                           
  4481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4482  003376  EFC9  F019         	goto	l6191
  4483  00337A                     l6187:
  4484                           
  4485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4486  00337A  0E00               	movlw	0
  4487  00337C  6E07               	movwf	(fputc@c+1)^0,c
  4488  00337E  0E20               	movlw	32
  4489  003380  6E06               	movwf	fputc@c^0,c
  4490  003382  C016  F008         	movff	pad@fp,fputc@fp
  4491  003386  C017  F009         	movff	pad@fp+1,fputc@fp+1
  4492  00338A  EC2F  F019         	call	_fputc	;wreg free
  4493  00338E                     
  4494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4495  00338E  4A1D               	infsnz	pad@i^0,f,c
  4496  003390  2A1E               	incf	(pad@i+1)^0,f,c
  4497  003392                     l6191:
  4498                           
  4499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4500  003392  501F               	movf	pad@w^0,w,c
  4501  003394  5C1D               	subwf	pad@i^0,w,c
  4502  003396  501E               	movf	(pad@i+1)^0,w,c
  4503  003398  0A80               	xorlw	128
  4504  00339A  6E1C               	movwf	??_pad^0,c
  4505  00339C  5020               	movf	(pad@w+1)^0,w,c
  4506  00339E  0A80               	xorlw	128
  4507  0033A0  581C               	subwfb	??_pad^0,w,c
  4508  0033A2  A0D8               	btfss	status,0,c
  4509  0033A4  EFD6  F019         	goto	u7001
  4510  0033A8  EFD8  F019         	goto	u7000
  4511  0033AC                     u7001:
  4512  0033AC  EFBD  F019         	goto	l6187
  4513  0033B0                     u7000:
  4514  0033B0                     
  4515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4516  0033B0  0100               	movlb	0	; () banked
  4517  0033B2  B1EB               	btfsc	_flags& (0+255),0,b
  4518  0033B4  EFDE  F019         	goto	u7011
  4519  0033B8  EFE0  F019         	goto	u7010
  4520  0033BC                     u7011:
  4521  0033BC  EFEA  F019         	goto	l6195
  4522  0033C0                     u7010:
  4523  0033C0                     
  4524                           ; BSR set to: 0
  4525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4526  0033C0  C018  F00F         	movff	pad@buf,fputs@s
  4527  0033C4  C019  F010         	movff	pad@buf+1,fputs@s+1
  4528  0033C8  C016  F011         	movff	pad@fp,fputs@fp
  4529  0033CC  C017  F012         	movff	pad@fp+1,fputs@fp+1
  4530  0033D0  EC5D  F01E         	call	_fputs	;wreg free
  4531  0033D4                     l6195:
  4532                           
  4533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4534  0033D4  C018  F006         	movff	pad@buf,strlen@s
  4535  0033D8  C019  F007         	movff	pad@buf+1,strlen@s+1
  4536  0033DC  ECF4  F01E         	call	_strlen	;wreg free
  4537  0033E0  501F               	movf	pad@w^0,w,c
  4538  0033E2  2406               	addwf	?_strlen^0,w,c
  4539  0033E4  6E16               	movwf	?_pad^0,c
  4540  0033E6  5020               	movf	(pad@w+1)^0,w,c
  4541  0033E8  2007               	addwfc	(?_strlen+1)^0,w,c
  4542  0033EA  6E17               	movwf	(?_pad+1)^0,c
  4543  0033EC  0012               	return		;funcret
  4544  0033EE                     __end_of_pad:
  4545                           	opt callstack 0
  4546                           
  4547 ;; *************** function _strlen *****************
  4548 ;; Defined at:
  4549 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  s               2    5[COMRAM] PTR const unsigned char 
  4552 ;;		 -> dbuf(80), 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  a               2    7[COMRAM] PTR const unsigned char 
  4555 ;;		 -> dbuf(80), 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2    5[COMRAM] unsigned int 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4565 ;;      Params:         2       0       0       0       0       0       0       0       0
  4566 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4568 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4569 ;;Total ram usage:        4 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    2
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_pad
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text12
  4580  003DE8                     __ptext12:
  4581                           	opt callstack 0
  4582  003DE8                     _strlen:
  4583                           	opt callstack 21
  4584  003DE8  C006  F008         	movff	strlen@s,strlen@a
  4585  003DEC  C007  F009         	movff	strlen@s+1,strlen@a+1
  4586  003DF0  EFFC  F01E         	goto	l5965
  4587  003DF4                     l5963:
  4588  003DF4  4A06               	infsnz	strlen@s^0,f,c
  4589  003DF6  2A07               	incf	(strlen@s+1)^0,f,c
  4590  003DF8                     l5965:
  4591  003DF8  C006  FFD9         	movff	strlen@s,fsr2l
  4592  003DFC  C007  FFDA         	movff	strlen@s+1,fsr2h
  4593  003E00  50DF               	movf	indf2,w,c
  4594  003E02  A4D8               	btfss	status,2,c
  4595  003E04  EF06  F01F         	goto	u6561
  4596  003E08  EF08  F01F         	goto	u6560
  4597  003E0C                     u6561:
  4598  003E0C  EFFA  F01E         	goto	l5963
  4599  003E10                     u6560:
  4600  003E10  5008               	movf	strlen@a^0,w,c
  4601  003E12  5C06               	subwf	strlen@s^0,w,c
  4602  003E14  6E06               	movwf	?_strlen^0,c
  4603  003E16  5009               	movf	(strlen@a+1)^0,w,c
  4604  003E18  5807               	subwfb	(strlen@s+1)^0,w,c
  4605  003E1A  6E07               	movwf	(?_strlen+1)^0,c
  4606  003E1C  0012               	return		;funcret
  4607  003E1E                     __end_of_strlen:
  4608                           	opt callstack 0
  4609                           
  4610 ;; *************** function _fputs *****************
  4611 ;; Defined at:
  4612 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4615 ;;		 -> dbuf(80), 
  4616 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4617 ;;		 -> sprintf@f(6), 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  i               2   19[COMRAM] int 
  4620 ;;  c               1   18[COMRAM] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2   14[COMRAM] int 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4630 ;;      Params:         4       0       0       0       0       0       0       0       0
  4631 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4633 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4634 ;;Total ram usage:        7 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    4
  4637 ;; This function calls:
  4638 ;;		_fputc
  4639 ;; This function is called by:
  4640 ;;		_pad
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text13
  4645  003CBA                     __ptext13:
  4646                           	opt callstack 0
  4647  003CBA                     _fputs:
  4648                           	opt callstack 19
  4649  003CBA  0E00               	movlw	0
  4650  003CBC  6E15               	movwf	(fputs@i+1)^0,c
  4651  003CBE  0E00               	movlw	0
  4652  003CC0  6E14               	movwf	fputs@i^0,c
  4653  003CC2  EF6E  F01E         	goto	l5959
  4654  003CC6                     l5955:
  4655  003CC6  C013  F006         	movff	fputs@c,fputc@c
  4656  003CCA  6A07               	clrf	(fputc@c+1)^0,c
  4657  003CCC  C011  F008         	movff	fputs@fp,fputc@fp
  4658  003CD0  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  4659  003CD4  EC2F  F019         	call	_fputc	;wreg free
  4660  003CD8  4A14               	infsnz	fputs@i^0,f,c
  4661  003CDA  2A15               	incf	(fputs@i+1)^0,f,c
  4662  003CDC                     l5959:
  4663  003CDC  5014               	movf	fputs@i^0,w,c
  4664  003CDE  240F               	addwf	fputs@s^0,w,c
  4665  003CE0  6ED9               	movwf	fsr2l,c
  4666  003CE2  5015               	movf	(fputs@i+1)^0,w,c
  4667  003CE4  2010               	addwfc	(fputs@s+1)^0,w,c
  4668  003CE6  6EDA               	movwf	fsr2h,c
  4669  003CE8  50DF               	movf	indf2,w,c
  4670  003CEA  6E13               	movwf	fputs@c^0,c
  4671  003CEC  5013               	movf	fputs@c^0,w,c
  4672  003CEE  A4D8               	btfss	status,2,c
  4673  003CF0  EF7C  F01E         	goto	u6551
  4674  003CF4  EF7E  F01E         	goto	u6550
  4675  003CF8                     u6551:
  4676  003CF8  EF63  F01E         	goto	l5955
  4677  003CFC                     u6550:
  4678  003CFC  0012               	return		;funcret
  4679  003CFE                     __end_of_fputs:
  4680                           	opt callstack 0
  4681                           
  4682 ;; *************** function _fputc *****************
  4683 ;; Defined at:
  4684 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  c               2    5[COMRAM] int 
  4687 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  4688 ;;		 -> sprintf@f(6), 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2    5[COMRAM] int 
  4693 ;; Registers used:
  4694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4700 ;;      Params:         4       0       0       0       0       0       0       0       0
  4701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4702 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4703 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4704 ;;Total ram usage:        9 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    3
  4707 ;; This function calls:
  4708 ;;		_putch
  4709 ;; This function is called by:
  4710 ;;		_pad
  4711 ;;		_vfpfcnvrt
  4712 ;;		_fputs
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text14
  4717  00325E                     __ptext14:
  4718                           	opt callstack 0
  4719  00325E                     _fputc:
  4720                           	opt callstack 22
  4721  00325E  5008               	movf	fputc@fp^0,w,c
  4722  003260  1009               	iorwf	(fputc@fp+1)^0,w,c
  4723  003262  B4D8               	btfsc	status,2,c
  4724  003264  EF36  F019         	goto	u6511
  4725  003268  EF38  F019         	goto	u6510
  4726  00326C                     u6511:
  4727  00326C  EF41  F019         	goto	l5943
  4728  003270                     u6510:
  4729  003270  5008               	movf	fputc@fp^0,w,c
  4730  003272  1009               	iorwf	(fputc@fp+1)^0,w,c
  4731  003274  A4D8               	btfss	status,2,c
  4732  003276  EF3F  F019         	goto	u6521
  4733  00327A  EF41  F019         	goto	u6520
  4734  00327E                     u6521:
  4735  00327E  EF46  F019         	goto	l5945
  4736  003282                     u6520:
  4737  003282                     l5943:
  4738  003282  5006               	movf	fputc@c^0,w,c
  4739  003284  EC4F  F01F         	call	_putch
  4740  003288  EF93  F019         	goto	l1462
  4741  00328C                     l5945:
  4742  00328C  EE20 F004          	lfsr	2,4
  4743  003290  5008               	movf	fputc@fp^0,w,c
  4744  003292  26D9               	addwf	fsr2l,f,c
  4745  003294  5009               	movf	(fputc@fp+1)^0,w,c
  4746  003296  22DA               	addwfc	fsr2h,f,c
  4747  003298  50DE               	movf	postinc2,w,c
  4748  00329A  10DE               	iorwf	postinc2,w,c
  4749  00329C  B4D8               	btfsc	status,2,c
  4750  00329E  EF53  F019         	goto	u6531
  4751  0032A2  EF55  F019         	goto	u6530
  4752  0032A6                     u6531:
  4753  0032A6  EF70  F019         	goto	l5949
  4754  0032AA                     u6530:
  4755  0032AA  EE20 F004          	lfsr	2,4
  4756  0032AE  5008               	movf	fputc@fp^0,w,c
  4757  0032B0  26D9               	addwf	fsr2l,f,c
  4758  0032B2  5009               	movf	(fputc@fp+1)^0,w,c
  4759  0032B4  22DA               	addwfc	fsr2h,f,c
  4760  0032B6  EE10 F002          	lfsr	1,2
  4761  0032BA  5008               	movf	fputc@fp^0,w,c
  4762  0032BC  26E1               	addwf	fsr1l,f,c
  4763  0032BE  5009               	movf	(fputc@fp+1)^0,w,c
  4764  0032C0  22E2               	addwfc	fsr1h,f,c
  4765  0032C2  50DE               	movf	postinc2,w,c
  4766  0032C4  5CE6               	subwf	postinc1,w,c
  4767  0032C6  50E6               	movf	postinc1,w,c
  4768  0032C8  0A80               	xorlw	128
  4769  0032CA  6E0E               	movwf	(??_fputc+4)^0,c
  4770  0032CC  50DE               	movf	postinc2,w,c
  4771  0032CE  0A80               	xorlw	128
  4772  0032D0  580E               	subwfb	(??_fputc+4)^0,w,c
  4773  0032D2  B0D8               	btfsc	status,0,c
  4774  0032D4  EF6E  F019         	goto	u6541
  4775  0032D8  EF70  F019         	goto	u6540
  4776  0032DC                     u6541:
  4777  0032DC  EF93  F019         	goto	l1462
  4778  0032E0                     u6540:
  4779  0032E0                     l5949:
  4780  0032E0  EE20 F002          	lfsr	2,2
  4781  0032E4  5008               	movf	fputc@fp^0,w,c
  4782  0032E6  26D9               	addwf	fsr2l,f,c
  4783  0032E8  5009               	movf	(fputc@fp+1)^0,w,c
  4784  0032EA  22DA               	addwfc	fsr2h,f,c
  4785  0032EC  CFDE F00A          	movff	postinc2,??_fputc
  4786  0032F0  CFDD F00B          	movff	postdec2,??_fputc+1
  4787  0032F4  C008  FFD9         	movff	fputc@fp,fsr2l
  4788  0032F8  C009  FFDA         	movff	fputc@fp+1,fsr2h
  4789  0032FC  CFDE F00C          	movff	postinc2,??_fputc+2
  4790  003300  CFDD F00D          	movff	postdec2,??_fputc+3
  4791  003304  500A               	movf	??_fputc^0,w,c
  4792  003306  240C               	addwf	(??_fputc+2)^0,w,c
  4793  003308  6ED9               	movwf	fsr2l,c
  4794  00330A  500B               	movf	(??_fputc+1)^0,w,c
  4795  00330C  200D               	addwfc	(??_fputc+3)^0,w,c
  4796  00330E  6EDA               	movwf	fsr2h,c
  4797  003310  C006  FFDF         	movff	fputc@c,indf2
  4798  003314  EE20 F002          	lfsr	2,2
  4799  003318  5008               	movf	fputc@fp^0,w,c
  4800  00331A  26D9               	addwf	fsr2l,f,c
  4801  00331C  5009               	movf	(fputc@fp+1)^0,w,c
  4802  00331E  22DA               	addwfc	fsr2h,f,c
  4803  003320  2ADE               	incf	postinc2,f,c
  4804  003322  0E00               	movlw	0
  4805  003324  22DD               	addwfc	postdec2,f,c
  4806  003326                     l1462:
  4807  003326  0012               	return		;funcret
  4808  003328                     __end_of_fputc:
  4809                           	opt callstack 0
  4810                           
  4811 ;; *************** function _putch *****************
  4812 ;; Defined at:
  4813 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  c               1    wreg     unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  c               1    0[COMRAM] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    2
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_fputc
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text15
  4842  003E9E                     __ptext15:
  4843                           	opt callstack 0
  4844  003E9E                     _putch:
  4845                           	opt callstack 22
  4846  003E9E  0012               	return		;funcret
  4847  003EA0                     __end_of_putch:
  4848                           	opt callstack 0
  4849                           
  4850 ;; *************** function _floorf *****************
  4851 ;; Defined at:
  4852 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  x               4   51[COMRAM] float 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  u               4   67[COMRAM] struct .
  4857 ;;  m               4   61[COMRAM] unsigned long 
  4858 ;;  e               2   65[COMRAM] int 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  4   51[COMRAM] float 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4868 ;;      Params:         4       0       0       0       0       0       0       0       0
  4869 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4870 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4871 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:       20 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    2
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_efgtoa
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text16
  4883  0024FC                     __ptext16:
  4884                           	opt callstack 0
  4885  0024FC                     _floorf:
  4886                           	opt callstack 22
  4887  0024FC  C104  F044         	movff	floorf@F524,floorf@u
  4888  002500  C105  F045         	movff	floorf@F524+1,floorf@u+1
  4889  002504  C106  F046         	movff	floorf@F524+2,floorf@u+2
  4890  002508  C107  F047         	movff	floorf@F524+3,floorf@u+3
  4891  00250C  C034  F044         	movff	floorf@x,floorf@u
  4892  002510  C035  F045         	movff	floorf@x+1,floorf@u+1
  4893  002514  C036  F046         	movff	floorf@x+2,floorf@u+2
  4894  002518  C037  F047         	movff	floorf@x+3,floorf@u+3
  4895  00251C  0E81               	movlw	129
  4896  00251E  6E38               	movwf	??_floorf^0,c
  4897  002520  0EFF               	movlw	255
  4898  002522  6E39               	movwf	(??_floorf+1)^0,c
  4899  002524  C044  F03A         	movff	floorf@u,??_floorf+2
  4900  002528  C045  F03B         	movff	floorf@u+1,??_floorf+3
  4901  00252C  C046  F03C         	movff	floorf@u+2,??_floorf+4
  4902  002530  C047  F03D         	movff	floorf@u+3,??_floorf+5
  4903  002534  0E18               	movlw	24
  4904  002536  EFA2  F012         	goto	u7140
  4905  00253A                     u7145:
  4906  00253A  90D8               	bcf	status,0,c
  4907  00253C  323D               	rrcf	(??_floorf+5)^0,f,c
  4908  00253E  323C               	rrcf	(??_floorf+4)^0,f,c
  4909  002540  323B               	rrcf	(??_floorf+3)^0,f,c
  4910  002542  323A               	rrcf	(??_floorf+2)^0,f,c
  4911  002544                     u7140:
  4912  002544  2EE8               	decfsz	wreg,f,c
  4913  002546  EF9D  F012         	goto	u7145
  4914  00254A  503A               	movf	(??_floorf+2)^0,w,c
  4915  00254C  2438               	addwf	??_floorf^0,w,c
  4916  00254E  6E42               	movwf	floorf@e^0,c
  4917  002550  0E00               	movlw	0
  4918  002552  2039               	addwfc	(??_floorf+1)^0,w,c
  4919  002554  6E43               	movwf	(floorf@e+1)^0,c
  4920  002556  BE43               	btfsc	(floorf@e+1)^0,7,c
  4921  002558  EFB7  F012         	goto	u7151
  4922  00255C  5043               	movf	(floorf@e+1)^0,w,c
  4923  00255E  E109               	bnz	u7150
  4924  002560  0E17               	movlw	23
  4925  002562  5C42               	subwf	floorf@e^0,w,c
  4926  002564  A0D8               	btfss	status,0,c
  4927  002566  EFB7  F012         	goto	u7151
  4928  00256A  EFB9  F012         	goto	u7150
  4929  00256E                     u7151:
  4930  00256E  EFC3  F012         	goto	l6241
  4931  002572                     u7150:
  4932  002572                     l6239:
  4933  002572  C034  F034         	movff	floorf@x,?_floorf
  4934  002576  C035  F035         	movff	floorf@x+1,?_floorf+1
  4935  00257A  C036  F036         	movff	floorf@x+2,?_floorf+2
  4936  00257E  C037  F037         	movff	floorf@x+3,?_floorf+3
  4937  002582  EF86  F013         	goto	l1423
  4938  002586                     l6241:
  4939  002586  BE43               	btfsc	(floorf@e+1)^0,7,c
  4940  002588  EFC8  F012         	goto	u7161
  4941  00258C  EFCA  F012         	goto	u7160
  4942  002590                     u7161:
  4943  002590  EF3A  F013         	goto	l6251
  4944  002594                     u7160:
  4945  002594  C042  F038         	movff	floorf@e,??_floorf
  4946  002598  0EFF               	movlw	255
  4947  00259A  6E39               	movwf	(??_floorf+1)^0,c
  4948  00259C  0EFF               	movlw	255
  4949  00259E  6E3A               	movwf	(??_floorf+2)^0,c
  4950  0025A0  0E7F               	movlw	127
  4951  0025A2  6E3B               	movwf	(??_floorf+3)^0,c
  4952  0025A4  0E00               	movlw	0
  4953  0025A6  6E3C               	movwf	(??_floorf+4)^0,c
  4954  0025A8                     u7175:
  4955  0025A8  6638               	tstfsz	??_floorf^0,c
  4956  0025AA  EFD9  F012         	goto	u7176
  4957  0025AE  EFE1  F012         	goto	u7177
  4958  0025B2                     u7176:
  4959  0025B2  343C               	rlcf	(??_floorf+4)^0,w,c
  4960  0025B4  323C               	rrcf	(??_floorf+4)^0,f,c
  4961  0025B6  323B               	rrcf	(??_floorf+3)^0,f,c
  4962  0025B8  323A               	rrcf	(??_floorf+2)^0,f,c
  4963  0025BA  3239               	rrcf	(??_floorf+1)^0,f,c
  4964  0025BC  2E38               	decfsz	??_floorf^0,f,c
  4965  0025BE  EFD4  F012         	goto	u7175
  4966  0025C2                     u7177:
  4967  0025C2  C039  F03E         	movff	??_floorf+1,floorf@m
  4968  0025C6  C03A  F03F         	movff	??_floorf+2,floorf@m+1
  4969  0025CA  C03B  F040         	movff	??_floorf+3,floorf@m+2
  4970  0025CE  C03C  F041         	movff	??_floorf+4,floorf@m+3
  4971  0025D2  503E               	movf	floorf@m^0,w,c
  4972  0025D4  1444               	andwf	floorf@u^0,w,c
  4973  0025D6  6E38               	movwf	??_floorf^0,c
  4974  0025D8  503F               	movf	(floorf@m+1)^0,w,c
  4975  0025DA  1445               	andwf	(floorf@u+1)^0,w,c
  4976  0025DC  6E39               	movwf	(??_floorf+1)^0,c
  4977  0025DE  5040               	movf	(floorf@m+2)^0,w,c
  4978  0025E0  1446               	andwf	(floorf@u+2)^0,w,c
  4979  0025E2  6E3A               	movwf	(??_floorf+2)^0,c
  4980  0025E4  5041               	movf	(floorf@m+3)^0,w,c
  4981  0025E6  1447               	andwf	(floorf@u+3)^0,w,c
  4982  0025E8  6E3B               	movwf	(??_floorf+3)^0,c
  4983  0025EA  5038               	movf	??_floorf^0,w,c
  4984  0025EC  1039               	iorwf	(??_floorf+1)^0,w,c
  4985  0025EE  103A               	iorwf	(??_floorf+2)^0,w,c
  4986  0025F0  103B               	iorwf	(??_floorf+3)^0,w,c
  4987  0025F2  A4D8               	btfss	status,2,c
  4988  0025F4  EFFE  F012         	goto	u7181
  4989  0025F8  EF00  F013         	goto	u7180
  4990  0025FC                     u7181:
  4991  0025FC  EF02  F013         	goto	l6247
  4992  002600                     u7180:
  4993  002600  EFB9  F012         	goto	l6239
  4994  002604                     l6247:
  4995  002604  C044  F038         	movff	floorf@u,??_floorf
  4996  002608  C045  F039         	movff	floorf@u+1,??_floorf+1
  4997  00260C  C046  F03A         	movff	floorf@u+2,??_floorf+2
  4998  002610  C047  F03B         	movff	floorf@u+3,??_floorf+3
  4999  002614  0E20               	movlw	32
  5000  002616  EF12  F013         	goto	u7190
  5001  00261A                     u7195:
  5002  00261A  90D8               	bcf	status,0,c
  5003  00261C  323B               	rrcf	(??_floorf+3)^0,f,c
  5004  00261E  323A               	rrcf	(??_floorf+2)^0,f,c
  5005  002620  3239               	rrcf	(??_floorf+1)^0,f,c
  5006  002622  3238               	rrcf	??_floorf^0,f,c
  5007  002624                     u7190:
  5008  002624  2EE8               	decfsz	wreg,f,c
  5009  002626  EF0D  F013         	goto	u7195
  5010  00262A  5038               	movf	??_floorf^0,w,c
  5011  00262C  1039               	iorwf	(??_floorf+1)^0,w,c
  5012  00262E  103A               	iorwf	(??_floorf+2)^0,w,c
  5013  002630  103B               	iorwf	(??_floorf+3)^0,w,c
  5014  002632  B4D8               	btfsc	status,2,c
  5015  002634  EF1E  F013         	goto	u7201
  5016  002638  EF20  F013         	goto	u7200
  5017  00263C                     u7201:
  5018  00263C  EF28  F013         	goto	l1426
  5019  002640                     u7200:
  5020  002640  503E               	movf	floorf@m^0,w,c
  5021  002642  2644               	addwf	floorf@u^0,f,c
  5022  002644  503F               	movf	(floorf@m+1)^0,w,c
  5023  002646  2245               	addwfc	(floorf@u+1)^0,f,c
  5024  002648  5040               	movf	(floorf@m+2)^0,w,c
  5025  00264A  2246               	addwfc	(floorf@u+2)^0,f,c
  5026  00264C  5041               	movf	(floorf@m+3)^0,w,c
  5027  00264E  2247               	addwfc	(floorf@u+3)^0,f,c
  5028  002650                     l1426:
  5029  002650  1C3E               	comf	floorf@m^0,w,c
  5030  002652  6E38               	movwf	??_floorf^0,c
  5031  002654  1C3F               	comf	(floorf@m+1)^0,w,c
  5032  002656  6E39               	movwf	(??_floorf+1)^0,c
  5033  002658  1C40               	comf	(floorf@m+2)^0,w,c
  5034  00265A  6E3A               	movwf	(??_floorf+2)^0,c
  5035  00265C  1C41               	comf	(floorf@m+3)^0,w,c
  5036  00265E  6E3B               	movwf	(??_floorf+3)^0,c
  5037  002660  5038               	movf	??_floorf^0,w,c
  5038  002662  1644               	andwf	floorf@u^0,f,c
  5039  002664  5039               	movf	(??_floorf+1)^0,w,c
  5040  002666  1645               	andwf	(floorf@u+1)^0,f,c
  5041  002668  503A               	movf	(??_floorf+2)^0,w,c
  5042  00266A  1646               	andwf	(floorf@u+2)^0,f,c
  5043  00266C  503B               	movf	(??_floorf+3)^0,w,c
  5044  00266E  1647               	andwf	(floorf@u+3)^0,f,c
  5045  002670  EF7E  F013         	goto	l6259
  5046  002674                     l6251:
  5047  002674  C044  F038         	movff	floorf@u,??_floorf
  5048  002678  C045  F039         	movff	floorf@u+1,??_floorf+1
  5049  00267C  C046  F03A         	movff	floorf@u+2,??_floorf+2
  5050  002680  C047  F03B         	movff	floorf@u+3,??_floorf+3
  5051  002684  0E20               	movlw	32
  5052  002686  EF4A  F013         	goto	u7210
  5053  00268A                     u7215:
  5054  00268A  90D8               	bcf	status,0,c
  5055  00268C  323B               	rrcf	(??_floorf+3)^0,f,c
  5056  00268E  323A               	rrcf	(??_floorf+2)^0,f,c
  5057  002690  3239               	rrcf	(??_floorf+1)^0,f,c
  5058  002692  3238               	rrcf	??_floorf^0,f,c
  5059  002694                     u7210:
  5060  002694  2EE8               	decfsz	wreg,f,c
  5061  002696  EF45  F013         	goto	u7215
  5062  00269A  5038               	movf	??_floorf^0,w,c
  5063  00269C  1039               	iorwf	(??_floorf+1)^0,w,c
  5064  00269E  103A               	iorwf	(??_floorf+2)^0,w,c
  5065  0026A0  103B               	iorwf	(??_floorf+3)^0,w,c
  5066  0026A2  A4D8               	btfss	status,2,c
  5067  0026A4  EF56  F013         	goto	u7221
  5068  0026A8  EF58  F013         	goto	u7220
  5069  0026AC                     u7221:
  5070  0026AC  EF62  F013         	goto	l6255
  5071  0026B0                     u7220:
  5072  0026B0  0E00               	movlw	0
  5073  0026B2  6E44               	movwf	floorf@u^0,c
  5074  0026B4  0E00               	movlw	0
  5075  0026B6  6E45               	movwf	(floorf@u+1)^0,c
  5076  0026B8  0E00               	movlw	0
  5077  0026BA  6E46               	movwf	(floorf@u+2)^0,c
  5078  0026BC  0E00               	movlw	0
  5079  0026BE  6E47               	movwf	(floorf@u+3)^0,c
  5080  0026C0  EF7E  F013         	goto	l6259
  5081  0026C4                     l6255:
  5082  0026C4  90D8               	bcf	status,0,c
  5083  0026C6  3444               	rlcf	floorf@u^0,w,c
  5084  0026C8  6E38               	movwf	??_floorf^0,c
  5085  0026CA  3445               	rlcf	(floorf@u+1)^0,w,c
  5086  0026CC  6E39               	movwf	(??_floorf+1)^0,c
  5087  0026CE  3446               	rlcf	(floorf@u+2)^0,w,c
  5088  0026D0  6E3A               	movwf	(??_floorf+2)^0,c
  5089  0026D2  3447               	rlcf	(floorf@u+3)^0,w,c
  5090  0026D4  6E3B               	movwf	(??_floorf+3)^0,c
  5091  0026D6  5038               	movf	??_floorf^0,w,c
  5092  0026D8  1039               	iorwf	(??_floorf+1)^0,w,c
  5093  0026DA  103A               	iorwf	(??_floorf+2)^0,w,c
  5094  0026DC  103B               	iorwf	(??_floorf+3)^0,w,c
  5095  0026DE  B4D8               	btfsc	status,2,c
  5096  0026E0  EF74  F013         	goto	u7231
  5097  0026E4  EF76  F013         	goto	u7230
  5098  0026E8                     u7231:
  5099  0026E8  EF7E  F013         	goto	l6259
  5100  0026EC                     u7230:
  5101  0026EC  0E00               	movlw	0
  5102  0026EE  6E44               	movwf	floorf@u^0,c
  5103  0026F0  0E00               	movlw	0
  5104  0026F2  6E45               	movwf	(floorf@u+1)^0,c
  5105  0026F4  0E80               	movlw	128
  5106  0026F6  6E46               	movwf	(floorf@u+2)^0,c
  5107  0026F8  0EBF               	movlw	191
  5108  0026FA  6E47               	movwf	(floorf@u+3)^0,c
  5109  0026FC                     l6259:
  5110  0026FC  C044  F034         	movff	floorf@u,?_floorf
  5111  002700  C045  F035         	movff	floorf@u+1,?_floorf+1
  5112  002704  C046  F036         	movff	floorf@u+2,?_floorf+2
  5113  002708  C047  F037         	movff	floorf@u+3,?_floorf+3
  5114  00270C                     l1423:
  5115  00270C  0012               	return		;funcret
  5116  00270E                     __end_of_floorf:
  5117                           	opt callstack 0
  5118                           
  5119 ;; *************** function ___fpclassifyf *****************
  5120 ;; Defined at:
  5121 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  x               4    5[COMRAM] float 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  u               4   15[COMRAM] struct .
  5126 ;;  e               2   13[COMRAM] int 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  2    5[COMRAM] int 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5136 ;;      Params:         4       0       0       0       0       0       0       0       0
  5137 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5138 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5139 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5140 ;;Total ram usage:       14 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    2
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_efgtoa
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text17
  5151  00308A                     __ptext17:
  5152                           	opt callstack 0
  5153  00308A                     ___fpclassifyf:
  5154                           	opt callstack 22
  5155  00308A  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5156  00308E  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5157  003092  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5158  003096  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5159  00309A  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5160  00309E  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5161  0030A2  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5162  0030A6  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5163  0030AA  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5164  0030AE  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5165  0030B2  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5166  0030B6  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5167  0030BA  0E18               	movlw	24
  5168  0030BC  EF65  F018         	goto	u7020
  5169  0030C0                     u7025:
  5170  0030C0  90D8               	bcf	status,0,c
  5171  0030C2  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5172  0030C4  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5173  0030C6  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5174  0030C8  320A               	rrcf	??___fpclassifyf^0,f,c
  5175  0030CA                     u7020:
  5176  0030CA  2EE8               	decfsz	wreg,f,c
  5177  0030CC  EF60  F018         	goto	u7025
  5178  0030D0  500A               	movf	??___fpclassifyf^0,w,c
  5179  0030D2  6E0E               	movwf	___fpclassifyf@e^0,c
  5180  0030D4  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5181  0030D6  500E               	movf	___fpclassifyf@e^0,w,c
  5182  0030D8  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5183  0030DA  A4D8               	btfss	status,2,c
  5184  0030DC  EF72  F018         	goto	u7031
  5185  0030E0  EF74  F018         	goto	u7030
  5186  0030E4                     u7031:
  5187  0030E4  EF94  F018         	goto	l6211
  5188  0030E8                     u7030:
  5189  0030E8  90D8               	bcf	status,0,c
  5190  0030EA  3410               	rlcf	___fpclassifyf@u^0,w,c
  5191  0030EC  6E0A               	movwf	??___fpclassifyf^0,c
  5192  0030EE  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5193  0030F0  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5194  0030F2  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5195  0030F4  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5196  0030F6  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5197  0030F8  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5198  0030FA  500A               	movf	??___fpclassifyf^0,w,c
  5199  0030FC  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5200  0030FE  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5201  003100  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5202  003102  A4D8               	btfss	status,2,c
  5203  003104  EF86  F018         	goto	u7041
  5204  003108  EF88  F018         	goto	u7040
  5205  00310C                     u7041:
  5206  00310C  EF8E  F018         	goto	l6207
  5207  003110                     u7040:
  5208  003110  0E00               	movlw	0
  5209  003112  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5210  003114  0E02               	movlw	2
  5211  003116  6E06               	movwf	?___fpclassifyf^0,c
  5212  003118  EFC3  F018         	goto	l1385
  5213  00311C                     l6207:
  5214  00311C  0E00               	movlw	0
  5215  00311E  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5216  003120  0E03               	movlw	3
  5217  003122  6E06               	movwf	?___fpclassifyf^0,c
  5218  003124  EFC3  F018         	goto	l1385
  5219  003128                     l6211:
  5220  003128  280E               	incf	___fpclassifyf@e^0,w,c
  5221  00312A  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5222  00312C  A4D8               	btfss	status,2,c
  5223  00312E  EF9B  F018         	goto	u7051
  5224  003132  EF9D  F018         	goto	u7050
  5225  003136                     u7051:
  5226  003136  EFBF  F018         	goto	l6217
  5227  00313A                     u7050:
  5228  00313A  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5229  00313E  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5230  003142  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5231  003146  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5232  00314A  0E09               	movlw	9
  5233  00314C                     u7065:
  5234  00314C  90D8               	bcf	status,0,c
  5235  00314E  360A               	rlcf	??___fpclassifyf^0,f,c
  5236  003150  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5237  003152  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5238  003154  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5239  003156  2EE8               	decfsz	wreg,f,c
  5240  003158  EFA6  F018         	goto	u7065
  5241  00315C  500A               	movf	??___fpclassifyf^0,w,c
  5242  00315E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5243  003160  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5244  003162  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5245  003164  B4D8               	btfsc	status,2,c
  5246  003166  EFB7  F018         	goto	u7071
  5247  00316A  EFBA  F018         	goto	u7070
  5248  00316E                     u7071:
  5249  00316E  0E01               	movlw	1
  5250  003170  EFBB  F018         	goto	u7080
  5251  003174                     u7070:
  5252  003174  0E00               	movlw	0
  5253  003176                     u7080:
  5254  003176  6E06               	movwf	?___fpclassifyf^0,c
  5255  003178  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5256  00317A  EFC3  F018         	goto	l1385
  5257  00317E                     l6217:
  5258  00317E  0E00               	movlw	0
  5259  003180  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5260  003182  0E04               	movlw	4
  5261  003184  6E06               	movwf	?___fpclassifyf^0,c
  5262  003186                     l1385:
  5263  003186  0012               	return		;funcret
  5264  003188                     __end_of___fpclassifyf:
  5265                           	opt callstack 0
  5266                           
  5267 ;; *************** function ___flsub *****************
  5268 ;; Defined at:
  5269 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  b               4   76[COMRAM] int 
  5272 ;;  a               4   80[COMRAM] int 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  4   76[COMRAM] int 
  5277 ;; Registers used:
  5278 ;;		wreg, status,2, status,0, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5284 ;;      Params:         8       0       0       0       0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5287 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5288 ;;Total ram usage:        8 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    3
  5291 ;; This function calls:
  5292 ;;		___fladd
  5293 ;; This function is called by:
  5294 ;;		_efgtoa
  5295 ;;		_PID
  5296 ;;		_roundf
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text18
  5301  003C74                     __ptext18:
  5302                           	opt callstack 0
  5303  003C74                     ___flsub:
  5304                           	opt callstack 21
  5305  003C74  0E00               	movlw	0
  5306  003C76  1A51               	xorwf	___flsub@a^0,f,c
  5307  003C78  0E00               	movlw	0
  5308  003C7A  1A52               	xorwf	(___flsub@a+1)^0,f,c
  5309  003C7C  0E00               	movlw	0
  5310  003C7E  1A53               	xorwf	(___flsub@a+2)^0,f,c
  5311  003C80  0E80               	movlw	128
  5312  003C82  1A54               	xorwf	(___flsub@a+3)^0,f,c
  5313  003C84  C04D  F006         	movff	___flsub@b,___fladd@b
  5314  003C88  C04E  F007         	movff	___flsub@b+1,___fladd@b+1
  5315  003C8C  C04F  F008         	movff	___flsub@b+2,___fladd@b+2
  5316  003C90  C050  F009         	movff	___flsub@b+3,___fladd@b+3
  5317  003C94  C051  F00A         	movff	___flsub@a,___fladd@a
  5318  003C98  C052  F00B         	movff	___flsub@a+1,___fladd@a+1
  5319  003C9C  C053  F00C         	movff	___flsub@a+2,___fladd@a+2
  5320  003CA0  C054  F00D         	movff	___flsub@a+3,___fladd@a+3
  5321  003CA4  EC05  F00A         	call	___fladd	;wreg free
  5322  003CA8  C006  F04D         	movff	?___fladd,?___flsub
  5323  003CAC  C007  F04E         	movff	?___fladd+1,?___flsub+1
  5324  003CB0  C008  F04F         	movff	?___fladd+2,?___flsub+2
  5325  003CB4  C009  F050         	movff	?___fladd+3,?___flsub+3
  5326  003CB8  0012               	return		;funcret
  5327  003CBA                     __end_of___flsub:
  5328                           	opt callstack 0
  5329                           
  5330 ;; *************** function ___fladd *****************
  5331 ;; Defined at:
  5332 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  b               4    5[COMRAM] int 
  5335 ;;  a               4    9[COMRAM] int 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  grs             1   20[COMRAM] unsigned char 
  5338 ;;  bexp            1   19[COMRAM] unsigned char 
  5339 ;;  aexp            1   18[COMRAM] unsigned char 
  5340 ;;  signs           1   17[COMRAM] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  4    5[COMRAM] unsigned char 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5350 ;;      Params:         8       0       0       0       0       0       0       0       0
  5351 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5352 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5353 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5354 ;;Total ram usage:       16 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    2
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_efgtoa
  5361 ;;		___flsub
  5362 ;;		_leerSensores
  5363 ;;		_PID
  5364 ;;		_roundf
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text19
  5369  00140A                     __ptext19:
  5370                           	opt callstack 0
  5371  00140A                     ___fladd:
  5372                           	opt callstack 21
  5373  00140A  5009               	movf	(___fladd@b+3)^0,w,c
  5374  00140C  0B80               	andlw	128
  5375  00140E  6E12               	movwf	___fladd@signs^0,c
  5376  001410  5009               	movf	(___fladd@b+3)^0,w,c
  5377  001412  2409               	addwf	(___fladd@b+3)^0,w,c
  5378  001414  6E14               	movwf	___fladd@bexp^0,c
  5379  001416  AE08               	btfss	(___fladd@b+2)^0,7,c
  5380  001418  EF10  F00A         	goto	u6591
  5381  00141C  EF12  F00A         	goto	u6590
  5382  001420                     u6591:
  5383  001420  EF13  F00A         	goto	l5981
  5384  001424                     u6590:
  5385  001424  8014               	bsf	___fladd@bexp^0,0,c
  5386  001426                     l5981:
  5387  001426  5014               	movf	___fladd@bexp^0,w,c
  5388  001428  B4D8               	btfsc	status,2,c
  5389  00142A  EF19  F00A         	goto	u6601
  5390  00142E  EF1B  F00A         	goto	u6600
  5391  001432                     u6601:
  5392  001432  EF30  F00A         	goto	l5991
  5393  001436                     u6600:
  5394  001436  2814               	incf	___fladd@bexp^0,w,c
  5395  001438  A4D8               	btfss	status,2,c
  5396  00143A  EF21  F00A         	goto	u6611
  5397  00143E  EF23  F00A         	goto	u6610
  5398  001442                     u6611:
  5399  001442  EF2B  F00A         	goto	l5987
  5400  001446                     u6610:
  5401  001446  0E00               	movlw	0
  5402  001448  6E06               	movwf	___fladd@b^0,c
  5403  00144A  0E00               	movlw	0
  5404  00144C  6E07               	movwf	(___fladd@b+1)^0,c
  5405  00144E  0E00               	movlw	0
  5406  001450  6E08               	movwf	(___fladd@b+2)^0,c
  5407  001452  0E00               	movlw	0
  5408  001454  6E09               	movwf	(___fladd@b+3)^0,c
  5409  001456                     l5987:
  5410  001456  8E08               	bsf	(___fladd@b+2)^0,7,c
  5411  001458  0E00               	movlw	0
  5412  00145A  6E09               	movwf	(___fladd@b+3)^0,c
  5413  00145C  EF38  F00A         	goto	l5993
  5414  001460                     l5991:
  5415  001460  0E00               	movlw	0
  5416  001462  6E06               	movwf	___fladd@b^0,c
  5417  001464  0E00               	movlw	0
  5418  001466  6E07               	movwf	(___fladd@b+1)^0,c
  5419  001468  0E00               	movlw	0
  5420  00146A  6E08               	movwf	(___fladd@b+2)^0,c
  5421  00146C  0E00               	movlw	0
  5422  00146E  6E09               	movwf	(___fladd@b+3)^0,c
  5423  001470                     l5993:
  5424  001470  500D               	movf	(___fladd@a+3)^0,w,c
  5425  001472  0B80               	andlw	128
  5426  001474  6E13               	movwf	___fladd@aexp^0,c
  5427  001476  5012               	movf	___fladd@signs^0,w,c
  5428  001478  1813               	xorwf	___fladd@aexp^0,w,c
  5429  00147A  B4D8               	btfsc	status,2,c
  5430  00147C  EF42  F00A         	goto	u6621
  5431  001480  EF44  F00A         	goto	u6620
  5432  001484                     u6621:
  5433  001484  EF45  F00A         	goto	l5999
  5434  001488                     u6620:
  5435  001488  8C12               	bsf	___fladd@signs^0,6,c
  5436  00148A                     l5999:
  5437  00148A  500D               	movf	(___fladd@a+3)^0,w,c
  5438  00148C  240D               	addwf	(___fladd@a+3)^0,w,c
  5439  00148E  6E13               	movwf	___fladd@aexp^0,c
  5440  001490  AE0C               	btfss	(___fladd@a+2)^0,7,c
  5441  001492  EF4D  F00A         	goto	u6631
  5442  001496  EF4F  F00A         	goto	u6630
  5443  00149A                     u6631:
  5444  00149A  EF50  F00A         	goto	l6005
  5445  00149E                     u6630:
  5446  00149E  8013               	bsf	___fladd@aexp^0,0,c
  5447  0014A0                     l6005:
  5448  0014A0  5013               	movf	___fladd@aexp^0,w,c
  5449  0014A2  B4D8               	btfsc	status,2,c
  5450  0014A4  EF56  F00A         	goto	u6641
  5451  0014A8  EF58  F00A         	goto	u6640
  5452  0014AC                     u6641:
  5453  0014AC  EF6D  F00A         	goto	l6015
  5454  0014B0                     u6640:
  5455  0014B0  2813               	incf	___fladd@aexp^0,w,c
  5456  0014B2  A4D8               	btfss	status,2,c
  5457  0014B4  EF5E  F00A         	goto	u6651
  5458  0014B8  EF60  F00A         	goto	u6650
  5459  0014BC                     u6651:
  5460  0014BC  EF68  F00A         	goto	l6011
  5461  0014C0                     u6650:
  5462  0014C0  0E00               	movlw	0
  5463  0014C2  6E0A               	movwf	___fladd@a^0,c
  5464  0014C4  0E00               	movlw	0
  5465  0014C6  6E0B               	movwf	(___fladd@a+1)^0,c
  5466  0014C8  0E00               	movlw	0
  5467  0014CA  6E0C               	movwf	(___fladd@a+2)^0,c
  5468  0014CC  0E00               	movlw	0
  5469  0014CE  6E0D               	movwf	(___fladd@a+3)^0,c
  5470  0014D0                     l6011:
  5471  0014D0  8E0C               	bsf	(___fladd@a+2)^0,7,c
  5472  0014D2  0E00               	movlw	0
  5473  0014D4  6E0D               	movwf	(___fladd@a+3)^0,c
  5474  0014D6  EF75  F00A         	goto	l6017
  5475  0014DA                     l6015:
  5476  0014DA  0E00               	movlw	0
  5477  0014DC  6E0A               	movwf	___fladd@a^0,c
  5478  0014DE  0E00               	movlw	0
  5479  0014E0  6E0B               	movwf	(___fladd@a+1)^0,c
  5480  0014E2  0E00               	movlw	0
  5481  0014E4  6E0C               	movwf	(___fladd@a+2)^0,c
  5482  0014E6  0E00               	movlw	0
  5483  0014E8  6E0D               	movwf	(___fladd@a+3)^0,c
  5484  0014EA                     l6017:
  5485  0014EA  5014               	movf	___fladd@bexp^0,w,c
  5486  0014EC  5C13               	subwf	___fladd@aexp^0,w,c
  5487  0014EE  B0D8               	btfsc	status,0,c
  5488  0014F0  EF7C  F00A         	goto	u6661
  5489  0014F4  EF7E  F00A         	goto	u6660
  5490  0014F8                     u6661:
  5491  0014F8  EFA5  F00A         	goto	l6053
  5492  0014FC                     u6660:
  5493  0014FC  AC12               	btfss	___fladd@signs^0,6,c
  5494  0014FE  EF83  F00A         	goto	u6671
  5495  001502  EF85  F00A         	goto	u6670
  5496  001506                     u6671:
  5497  001506  EF87  F00A         	goto	l6023
  5498  00150A                     u6670:
  5499  00150A  0E80               	movlw	128
  5500  00150C  1A12               	xorwf	___fladd@signs^0,f,c
  5501  00150E                     l6023:
  5502  00150E  C014  F015         	movff	___fladd@bexp,___fladd@grs
  5503  001512  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  5504  001516  C015  F013         	movff	___fladd@grs,___fladd@aexp
  5505  00151A  C006  F015         	movff	___fladd@b,___fladd@grs
  5506  00151E  C00A  F006         	movff	___fladd@a,___fladd@b
  5507  001522  C015  F00A         	movff	___fladd@grs,___fladd@a
  5508  001526  C007  F015         	movff	___fladd@b+1,___fladd@grs
  5509  00152A  C00B  F007         	movff	___fladd@a+1,___fladd@b+1
  5510  00152E  C015  F00B         	movff	___fladd@grs,___fladd@a+1
  5511  001532  C008  F015         	movff	___fladd@b+2,___fladd@grs
  5512  001536  C00C  F008         	movff	___fladd@a+2,___fladd@b+2
  5513  00153A  C015  F00C         	movff	___fladd@grs,___fladd@a+2
  5514  00153E  C009  F015         	movff	___fladd@b+3,___fladd@grs
  5515  001542  C00D  F009         	movff	___fladd@a+3,___fladd@b+3
  5516  001546  C015  F00D         	movff	___fladd@grs,___fladd@a+3
  5517  00154A                     l6053:
  5518  00154A  0E00               	movlw	0
  5519  00154C  6E15               	movwf	___fladd@grs^0,c
  5520  00154E  5014               	movf	___fladd@bexp^0,w,c
  5521  001550  C013  F00E         	movff	___fladd@aexp,??___fladd
  5522  001554  6A0F               	clrf	(??___fladd+1)^0,c
  5523  001556  5E0E               	subwf	??___fladd^0,f,c
  5524  001558  0E00               	movlw	0
  5525  00155A  5A0F               	subwfb	(??___fladd+1)^0,f,c
  5526  00155C  BE0F               	btfsc	(??___fladd+1)^0,7,c
  5527  00155E  EFBA  F00A         	goto	u6681
  5528  001562  500F               	movf	(??___fladd+1)^0,w,c
  5529  001564  E109               	bnz	u6680
  5530  001566  0E1A               	movlw	26
  5531  001568  5C0E               	subwf	??___fladd^0,w,c
  5532  00156A  A0D8               	btfss	status,0,c
  5533  00156C  EFBA  F00A         	goto	u6681
  5534  001570  EFBC  F00A         	goto	u6680
  5535  001574                     u6681:
  5536  001574  EFF3  F00A         	goto	l1233
  5537  001578                     u6680:
  5538  001578  5006               	movf	___fladd@b^0,w,c
  5539  00157A  1007               	iorwf	(___fladd@b+1)^0,w,c
  5540  00157C  1008               	iorwf	(___fladd@b+2)^0,w,c
  5541  00157E  1009               	iorwf	(___fladd@b+3)^0,w,c
  5542  001580  A4D8               	btfss	status,2,c
  5543  001582  EFC5  F00A         	goto	u6691
  5544  001586  EFC8  F00A         	goto	u6690
  5545  00158A                     u6691:
  5546  00158A  0E01               	movlw	1
  5547  00158C  EFC9  F00A         	goto	u6700
  5548  001590                     u6690:
  5549  001590  0E00               	movlw	0
  5550  001592                     u6700:
  5551  001592  6E15               	movwf	___fladd@grs^0,c
  5552  001594  0E00               	movlw	0
  5553  001596  6E06               	movwf	___fladd@b^0,c
  5554  001598  0E00               	movlw	0
  5555  00159A  6E07               	movwf	(___fladd@b+1)^0,c
  5556  00159C  0E00               	movlw	0
  5557  00159E  6E08               	movwf	(___fladd@b+2)^0,c
  5558  0015A0  0E00               	movlw	0
  5559  0015A2  6E09               	movwf	(___fladd@b+3)^0,c
  5560  0015A4  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  5561  0015A8  EFFC  F00A         	goto	l1232
  5562  0015AC                     l1234:
  5563  0015AC  A015               	btfss	___fladd@grs^0,0,c
  5564  0015AE  EFDB  F00A         	goto	u6711
  5565  0015B2  EFDD  F00A         	goto	u6710
  5566  0015B6                     u6711:
  5567  0015B6  EFE3  F00A         	goto	l6065
  5568  0015BA                     u6710:
  5569  0015BA  90D8               	bcf	status,0,c
  5570  0015BC  3015               	rrcf	___fladd@grs^0,w,c
  5571  0015BE  0901               	iorlw	1
  5572  0015C0  6E15               	movwf	___fladd@grs^0,c
  5573  0015C2  EFE5  F00A         	goto	l6067
  5574  0015C6                     l6065:
  5575  0015C6  90D8               	bcf	status,0,c
  5576  0015C8  3215               	rrcf	___fladd@grs^0,f,c
  5577  0015CA                     l6067:
  5578  0015CA  A006               	btfss	___fladd@b^0,0,c
  5579  0015CC  EFEA  F00A         	goto	u6721
  5580  0015D0  EFEC  F00A         	goto	u6720
  5581  0015D4                     u6721:
  5582  0015D4  EFED  F00A         	goto	l6071
  5583  0015D8                     u6720:
  5584  0015D8  8E15               	bsf	___fladd@grs^0,7,c
  5585  0015DA                     l6071:
  5586  0015DA  3409               	rlcf	(___fladd@b+3)^0,w,c
  5587  0015DC  3209               	rrcf	(___fladd@b+3)^0,f,c
  5588  0015DE  3208               	rrcf	(___fladd@b+2)^0,f,c
  5589  0015E0  3207               	rrcf	(___fladd@b+1)^0,f,c
  5590  0015E2  3206               	rrcf	___fladd@b^0,f,c
  5591  0015E4  2A14               	incf	___fladd@bexp^0,f,c
  5592  0015E6                     l1233:
  5593  0015E6  5013               	movf	___fladd@aexp^0,w,c
  5594  0015E8  5C14               	subwf	___fladd@bexp^0,w,c
  5595  0015EA  A0D8               	btfss	status,0,c
  5596  0015EC  EFFA  F00A         	goto	u6731
  5597  0015F0  EFFC  F00A         	goto	u6730
  5598  0015F4                     u6731:
  5599  0015F4  EFD6  F00A         	goto	l1234
  5600  0015F8                     u6730:
  5601  0015F8                     l1232:
  5602  0015F8  BC12               	btfsc	___fladd@signs^0,6,c
  5603  0015FA  EF01  F00B         	goto	u6741
  5604  0015FE  EF03  F00B         	goto	u6740
  5605  001602                     u6741:
  5606  001602  EF43  F00B         	goto	l6099
  5607  001606                     u6740:
  5608  001606  5014               	movf	___fladd@bexp^0,w,c
  5609  001608  A4D8               	btfss	status,2,c
  5610  00160A  EF09  F00B         	goto	u6751
  5611  00160E  EF0B  F00B         	goto	u6750
  5612  001612                     u6751:
  5613  001612  EF15  F00B         	goto	l6081
  5614  001616                     u6750:
  5615  001616  0E00               	movlw	0
  5616  001618  6E06               	movwf	?___fladd^0,c
  5617  00161A  0E00               	movlw	0
  5618  00161C  6E07               	movwf	(?___fladd+1)^0,c
  5619  00161E  0E00               	movlw	0
  5620  001620  6E08               	movwf	(?___fladd+2)^0,c
  5621  001622  0E00               	movlw	0
  5622  001624  6E09               	movwf	(?___fladd+3)^0,c
  5623  001626  EF64  F00C         	goto	l1241
  5624  00162A                     l6081:
  5625  00162A  500A               	movf	___fladd@a^0,w,c
  5626  00162C  2606               	addwf	___fladd@b^0,f,c
  5627  00162E  500B               	movf	(___fladd@a+1)^0,w,c
  5628  001630  2207               	addwfc	(___fladd@b+1)^0,f,c
  5629  001632  500C               	movf	(___fladd@a+2)^0,w,c
  5630  001634  2208               	addwfc	(___fladd@b+2)^0,f,c
  5631  001636  500D               	movf	(___fladd@a+3)^0,w,c
  5632  001638  2209               	addwfc	(___fladd@b+3)^0,f,c
  5633  00163A  A009               	btfss	(___fladd@b+3)^0,0,c
  5634  00163C  EF22  F00B         	goto	u6761
  5635  001640  EF24  F00B         	goto	u6760
  5636  001644                     u6761:
  5637  001644  EFD0  F00B         	goto	l6135
  5638  001648                     u6760:
  5639  001648  A015               	btfss	___fladd@grs^0,0,c
  5640  00164A  EF29  F00B         	goto	u6771
  5641  00164E  EF2B  F00B         	goto	u6770
  5642  001652                     u6771:
  5643  001652  EF31  F00B         	goto	l6089
  5644  001656                     u6770:
  5645  001656  90D8               	bcf	status,0,c
  5646  001658  3015               	rrcf	___fladd@grs^0,w,c
  5647  00165A  0901               	iorlw	1
  5648  00165C  6E15               	movwf	___fladd@grs^0,c
  5649  00165E  EF33  F00B         	goto	l6091
  5650  001662                     l6089:
  5651  001662  90D8               	bcf	status,0,c
  5652  001664  3215               	rrcf	___fladd@grs^0,f,c
  5653  001666                     l6091:
  5654  001666  A006               	btfss	___fladd@b^0,0,c
  5655  001668  EF38  F00B         	goto	u6781
  5656  00166C  EF3A  F00B         	goto	u6780
  5657  001670                     u6781:
  5658  001670  EF3B  F00B         	goto	l6095
  5659  001674                     u6780:
  5660  001674  8E15               	bsf	___fladd@grs^0,7,c
  5661  001676                     l6095:
  5662  001676  3409               	rlcf	(___fladd@b+3)^0,w,c
  5663  001678  3209               	rrcf	(___fladd@b+3)^0,f,c
  5664  00167A  3208               	rrcf	(___fladd@b+2)^0,f,c
  5665  00167C  3207               	rrcf	(___fladd@b+1)^0,f,c
  5666  00167E  3206               	rrcf	___fladd@b^0,f,c
  5667  001680  2A14               	incf	___fladd@bexp^0,f,c
  5668  001682  EFD0  F00B         	goto	l6135
  5669  001686                     l6099:
  5670  001686  500A               	movf	___fladd@a^0,w,c
  5671  001688  5C06               	subwf	___fladd@b^0,w,c
  5672  00168A  500B               	movf	(___fladd@a+1)^0,w,c
  5673  00168C  5807               	subwfb	(___fladd@b+1)^0,w,c
  5674  00168E  500C               	movf	(___fladd@a+2)^0,w,c
  5675  001690  5808               	subwfb	(___fladd@b+2)^0,w,c
  5676  001692  5009               	movf	(___fladd@b+3)^0,w,c
  5677  001694  0A80               	xorlw	128
  5678  001696  6E0E               	movwf	??___fladd^0,c
  5679  001698  500D               	movf	(___fladd@a+3)^0,w,c
  5680  00169A  0A80               	xorlw	128
  5681  00169C  580E               	subwfb	??___fladd^0,w,c
  5682  00169E  B0D8               	btfsc	status,0,c
  5683  0016A0  EF54  F00B         	goto	u6791
  5684  0016A4  EF56  F00B         	goto	u6790
  5685  0016A8                     u6791:
  5686  0016A8  EF81  F00B         	goto	l6109
  5687  0016AC                     u6790:
  5688  0016AC  5006               	movf	___fladd@b^0,w,c
  5689  0016AE  5C0A               	subwf	___fladd@a^0,w,c
  5690  0016B0  6E0E               	movwf	??___fladd^0,c
  5691  0016B2  5007               	movf	(___fladd@b+1)^0,w,c
  5692  0016B4  580B               	subwfb	(___fladd@a+1)^0,w,c
  5693  0016B6  6E0F               	movwf	(??___fladd+1)^0,c
  5694  0016B8  5008               	movf	(___fladd@b+2)^0,w,c
  5695  0016BA  580C               	subwfb	(___fladd@a+2)^0,w,c
  5696  0016BC  6E10               	movwf	(??___fladd+2)^0,c
  5697  0016BE  5009               	movf	(___fladd@b+3)^0,w,c
  5698  0016C0  580D               	subwfb	(___fladd@a+3)^0,w,c
  5699  0016C2  6E11               	movwf	(??___fladd+3)^0,c
  5700  0016C4  0EFF               	movlw	255
  5701  0016C6  240E               	addwf	??___fladd^0,w,c
  5702  0016C8  6E06               	movwf	___fladd@b^0,c
  5703  0016CA  0EFF               	movlw	255
  5704  0016CC  200F               	addwfc	(??___fladd+1)^0,w,c
  5705  0016CE  6E07               	movwf	(___fladd@b+1)^0,c
  5706  0016D0  0EFF               	movlw	255
  5707  0016D2  2010               	addwfc	(??___fladd+2)^0,w,c
  5708  0016D4  6E08               	movwf	(___fladd@b+2)^0,c
  5709  0016D6  0EFF               	movlw	255
  5710  0016D8  2011               	addwfc	(??___fladd+3)^0,w,c
  5711  0016DA  6E09               	movwf	(___fladd@b+3)^0,c
  5712  0016DC  0E80               	movlw	128
  5713  0016DE  1A12               	xorwf	___fladd@signs^0,f,c
  5714  0016E0  6C15               	negf	___fladd@grs^0,c
  5715  0016E2  5015               	movf	___fladd@grs^0,w,c
  5716  0016E4  A4D8               	btfss	status,2,c
  5717  0016E6  EF77  F00B         	goto	u6801
  5718  0016EA  EF79  F00B         	goto	u6800
  5719  0016EE                     u6801:
  5720  0016EE  EF89  F00B         	goto	l1249
  5721  0016F2                     u6800:
  5722  0016F2  0E01               	movlw	1
  5723  0016F4  2606               	addwf	___fladd@b^0,f,c
  5724  0016F6  0E00               	movlw	0
  5725  0016F8  2207               	addwfc	(___fladd@b+1)^0,f,c
  5726  0016FA  2208               	addwfc	(___fladd@b+2)^0,f,c
  5727  0016FC  2209               	addwfc	(___fladd@b+3)^0,f,c
  5728  0016FE  EF89  F00B         	goto	l1249
  5729  001702                     l6109:
  5730  001702  500A               	movf	___fladd@a^0,w,c
  5731  001704  5E06               	subwf	___fladd@b^0,f,c
  5732  001706  500B               	movf	(___fladd@a+1)^0,w,c
  5733  001708  5A07               	subwfb	(___fladd@b+1)^0,f,c
  5734  00170A  500C               	movf	(___fladd@a+2)^0,w,c
  5735  00170C  5A08               	subwfb	(___fladd@b+2)^0,f,c
  5736  00170E  500D               	movf	(___fladd@a+3)^0,w,c
  5737  001710  5A09               	subwfb	(___fladd@b+3)^0,f,c
  5738  001712                     l1249:
  5739  001712  5006               	movf	___fladd@b^0,w,c
  5740  001714  1007               	iorwf	(___fladd@b+1)^0,w,c
  5741  001716  1008               	iorwf	(___fladd@b+2)^0,w,c
  5742  001718  1009               	iorwf	(___fladd@b+3)^0,w,c
  5743  00171A  A4D8               	btfss	status,2,c
  5744  00171C  EF92  F00B         	goto	u6811
  5745  001720  EF94  F00B         	goto	u6810
  5746  001724                     u6811:
  5747  001724  EFC9  F00B         	goto	l6133
  5748  001728                     u6810:
  5749  001728  5015               	movf	___fladd@grs^0,w,c
  5750  00172A  A4D8               	btfss	status,2,c
  5751  00172C  EF9A  F00B         	goto	u6821
  5752  001730  EF9C  F00B         	goto	u6820
  5753  001734                     u6821:
  5754  001734  EFC9  F00B         	goto	l6133
  5755  001738                     u6820:
  5756  001738  0E00               	movlw	0
  5757  00173A  6E06               	movwf	?___fladd^0,c
  5758  00173C  0E00               	movlw	0
  5759  00173E  6E07               	movwf	(?___fladd+1)^0,c
  5760  001740  0E00               	movlw	0
  5761  001742  6E08               	movwf	(?___fladd+2)^0,c
  5762  001744  0E00               	movlw	0
  5763  001746  6E09               	movwf	(?___fladd+3)^0,c
  5764  001748  EF64  F00C         	goto	l1241
  5765  00174C                     l6117:
  5766  00174C  90D8               	bcf	status,0,c
  5767  00174E  3606               	rlcf	___fladd@b^0,f,c
  5768  001750  3607               	rlcf	(___fladd@b+1)^0,f,c
  5769  001752  3608               	rlcf	(___fladd@b+2)^0,f,c
  5770  001754  3609               	rlcf	(___fladd@b+3)^0,f,c
  5771  001756  AE15               	btfss	___fladd@grs^0,7,c
  5772  001758  EFB0  F00B         	goto	u6831
  5773  00175C  EFB2  F00B         	goto	u6830
  5774  001760                     u6831:
  5775  001760  EFB3  F00B         	goto	l6123
  5776  001764                     u6830:
  5777  001764  8006               	bsf	___fladd@b^0,0,c
  5778  001766                     l6123:
  5779  001766  A015               	btfss	___fladd@grs^0,0,c
  5780  001768  EFB8  F00B         	goto	u6841
  5781  00176C  EFBA  F00B         	goto	u6840
  5782  001770                     u6841:
  5783  001770  EFBE  F00B         	goto	l6127
  5784  001774                     u6840:
  5785  001774  80D8               	bsf	status,0,c
  5786  001776  3615               	rlcf	___fladd@grs^0,f,c
  5787  001778  EFC0  F00B         	goto	l6129
  5788  00177C                     l6127:
  5789  00177C  90D8               	bcf	status,0,c
  5790  00177E  3615               	rlcf	___fladd@grs^0,f,c
  5791  001780                     l6129:
  5792  001780  5014               	movf	___fladd@bexp^0,w,c
  5793  001782  B4D8               	btfsc	status,2,c
  5794  001784  EFC6  F00B         	goto	u6851
  5795  001788  EFC8  F00B         	goto	u6850
  5796  00178C                     u6851:
  5797  00178C  EFC9  F00B         	goto	l6133
  5798  001790                     u6850:
  5799  001790  0614               	decf	___fladd@bexp^0,f,c
  5800  001792                     l6133:
  5801  001792  AE08               	btfss	(___fladd@b+2)^0,7,c
  5802  001794  EFCE  F00B         	goto	u6861
  5803  001798  EFD0  F00B         	goto	u6860
  5804  00179C                     u6861:
  5805  00179C  EFA6  F00B         	goto	l6117
  5806  0017A0                     u6860:
  5807  0017A0                     l6135:
  5808  0017A0  0E00               	movlw	0
  5809  0017A2  6E13               	movwf	___fladd@aexp^0,c
  5810  0017A4  AE15               	btfss	___fladd@grs^0,7,c
  5811  0017A6  EFD7  F00B         	goto	u6871
  5812  0017AA  EFD9  F00B         	goto	u6870
  5813  0017AE                     u6871:
  5814  0017AE  EFF1  F00B         	goto	l1258
  5815  0017B2                     u6870:
  5816  0017B2  C015  F00E         	movff	___fladd@grs,??___fladd
  5817  0017B6  0E7F               	movlw	127
  5818  0017B8  160E               	andwf	??___fladd^0,f,c
  5819  0017BA  B4D8               	btfsc	status,2,c
  5820  0017BC  EFE2  F00B         	goto	u6881
  5821  0017C0  EFE4  F00B         	goto	u6880
  5822  0017C4                     u6881:
  5823  0017C4  EFE8  F00B         	goto	l1259
  5824  0017C8                     u6880:
  5825  0017C8                     l6141:
  5826  0017C8  0E01               	movlw	1
  5827  0017CA  6E13               	movwf	___fladd@aexp^0,c
  5828  0017CC  EFF1  F00B         	goto	l1258
  5829  0017D0                     l1259:
  5830  0017D0  A006               	btfss	___fladd@b^0,0,c
  5831  0017D2  EFED  F00B         	goto	u6891
  5832  0017D6  EFEF  F00B         	goto	u6890
  5833  0017DA                     u6891:
  5834  0017DA  EFF1  F00B         	goto	l1258
  5835  0017DE                     u6890:
  5836  0017DE  EFE4  F00B         	goto	l6141
  5837  0017E2                     l1258:
  5838  0017E2  5013               	movf	___fladd@aexp^0,w,c
  5839  0017E4  B4D8               	btfsc	status,2,c
  5840  0017E6  EFF7  F00B         	goto	u6901
  5841  0017EA  EFF9  F00B         	goto	u6900
  5842  0017EE                     u6901:
  5843  0017EE  EF24  F00C         	goto	l6153
  5844  0017F2                     u6900:
  5845  0017F2  0E01               	movlw	1
  5846  0017F4  2606               	addwf	___fladd@b^0,f,c
  5847  0017F6  0E00               	movlw	0
  5848  0017F8  2207               	addwfc	(___fladd@b+1)^0,f,c
  5849  0017FA  2208               	addwfc	(___fladd@b+2)^0,f,c
  5850  0017FC  2209               	addwfc	(___fladd@b+3)^0,f,c
  5851  0017FE  A009               	btfss	(___fladd@b+3)^0,0,c
  5852  001800  EF04  F00C         	goto	u6911
  5853  001804  EF06  F00C         	goto	u6910
  5854  001808                     u6911:
  5855  001808  EF24  F00C         	goto	l6153
  5856  00180C                     u6910:
  5857  00180C  C006  F00E         	movff	___fladd@b,??___fladd
  5858  001810  C007  F00F         	movff	___fladd@b+1,??___fladd+1
  5859  001814  C008  F010         	movff	___fladd@b+2,??___fladd+2
  5860  001818  C009  F011         	movff	___fladd@b+3,??___fladd+3
  5861  00181C  3411               	rlcf	(??___fladd+3)^0,w,c
  5862  00181E  3211               	rrcf	(??___fladd+3)^0,f,c
  5863  001820  3210               	rrcf	(??___fladd+2)^0,f,c
  5864  001822  320F               	rrcf	(??___fladd+1)^0,f,c
  5865  001824  320E               	rrcf	??___fladd^0,f,c
  5866  001826  C00E  F006         	movff	??___fladd,___fladd@b
  5867  00182A  C00F  F007         	movff	??___fladd+1,___fladd@b+1
  5868  00182E  C010  F008         	movff	??___fladd+2,___fladd@b+2
  5869  001832  C011  F009         	movff	??___fladd+3,___fladd@b+3
  5870  001836  2814               	incf	___fladd@bexp^0,w,c
  5871  001838  B4D8               	btfsc	status,2,c
  5872  00183A  EF21  F00C         	goto	u6921
  5873  00183E  EF23  F00C         	goto	u6920
  5874  001842                     u6921:
  5875  001842  EF24  F00C         	goto	l6153
  5876  001846                     u6920:
  5877  001846  2A14               	incf	___fladd@bexp^0,f,c
  5878  001848                     l6153:
  5879  001848  2814               	incf	___fladd@bexp^0,w,c
  5880  00184A  B4D8               	btfsc	status,2,c
  5881  00184C  EF2A  F00C         	goto	u6931
  5882  001850  EF2C  F00C         	goto	u6930
  5883  001854                     u6931:
  5884  001854  EF34  F00C         	goto	l6157
  5885  001858                     u6930:
  5886  001858  5014               	movf	___fladd@bexp^0,w,c
  5887  00185A  A4D8               	btfss	status,2,c
  5888  00185C  EF32  F00C         	goto	u6941
  5889  001860  EF34  F00C         	goto	u6940
  5890  001864                     u6941:
  5891  001864  EF46  F00C         	goto	l6161
  5892  001868                     u6940:
  5893  001868                     l6157:
  5894  001868  0E00               	movlw	0
  5895  00186A  6E06               	movwf	___fladd@b^0,c
  5896  00186C  0E00               	movlw	0
  5897  00186E  6E07               	movwf	(___fladd@b+1)^0,c
  5898  001870  0E00               	movlw	0
  5899  001872  6E08               	movwf	(___fladd@b+2)^0,c
  5900  001874  0E00               	movlw	0
  5901  001876  6E09               	movwf	(___fladd@b+3)^0,c
  5902  001878  5014               	movf	___fladd@bexp^0,w,c
  5903  00187A  A4D8               	btfss	status,2,c
  5904  00187C  EF42  F00C         	goto	u6951
  5905  001880  EF44  F00C         	goto	u6950
  5906  001884                     u6951:
  5907  001884  EF46  F00C         	goto	l6161
  5908  001888                     u6950:
  5909  001888  0E00               	movlw	0
  5910  00188A  6E12               	movwf	___fladd@signs^0,c
  5911  00188C                     l6161:
  5912  00188C  A014               	btfss	___fladd@bexp^0,0,c
  5913  00188E  EF4B  F00C         	goto	u6961
  5914  001892  EF4D  F00C         	goto	u6960
  5915  001896                     u6961:
  5916  001896  EF50  F00C         	goto	l6165
  5917  00189A                     u6960:
  5918  00189A  8E08               	bsf	(___fladd@b+2)^0,7,c
  5919  00189C  EF51  F00C         	goto	l6167
  5920  0018A0                     l6165:
  5921  0018A0  9E08               	bcf	(___fladd@b+2)^0,7,c
  5922  0018A2                     l6167:
  5923  0018A2  90D8               	bcf	status,0,c
  5924  0018A4  3014               	rrcf	___fladd@bexp^0,w,c
  5925  0018A6  6E09               	movwf	(___fladd@b+3)^0,c
  5926  0018A8  AE12               	btfss	___fladd@signs^0,7,c
  5927  0018AA  EF59  F00C         	goto	u6971
  5928  0018AE  EF5B  F00C         	goto	u6970
  5929  0018B2                     u6971:
  5930  0018B2  EF5C  F00C         	goto	l6173
  5931  0018B6                     u6970:
  5932  0018B6  8E09               	bsf	(___fladd@b+3)^0,7,c
  5933  0018B8                     l6173:
  5934  0018B8  C006  F006         	movff	___fladd@b,?___fladd
  5935  0018BC  C007  F007         	movff	___fladd@b+1,?___fladd+1
  5936  0018C0  C008  F008         	movff	___fladd@b+2,?___fladd+2
  5937  0018C4  C009  F009         	movff	___fladd@b+3,?___fladd+3
  5938  0018C8                     l1241:
  5939  0018C8  0012               	return		;funcret
  5940  0018CA                     __end_of___fladd:
  5941                           	opt callstack 0
  5942                           
  5943 ;; *************** function ___flneg *****************
  5944 ;; Defined at:
  5945 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  f1              4    5[COMRAM] unsigned char 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  4    5[COMRAM] unsigned char 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5959 ;;      Params:         4       0       0       0       0       0       0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5962 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5963 ;;Total ram usage:        4 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    2
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_efgtoa
  5970 ;;		_roundf
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text20
  5975  003D78                     __ptext20:
  5976                           	opt callstack 0
  5977  003D78                     ___flneg:
  5978                           	opt callstack 22
  5979  003D78  5006               	movf	___flneg@f1^0,w,c
  5980  003D7A  1007               	iorwf	(___flneg@f1+1)^0,w,c
  5981  003D7C  1008               	iorwf	(___flneg@f1+2)^0,w,c
  5982  003D7E  1009               	iorwf	(___flneg@f1+3)^0,w,c
  5983  003D80  B4D8               	btfsc	status,2,c
  5984  003D82  EFC5  F01E         	goto	u7881
  5985  003D86  EFC7  F01E         	goto	u7880
  5986  003D8A                     u7881:
  5987  003D8A  EFCF  F01E         	goto	l6669
  5988  003D8E                     u7880:
  5989  003D8E  0E00               	movlw	0
  5990  003D90  1A06               	xorwf	___flneg@f1^0,f,c
  5991  003D92  0E00               	movlw	0
  5992  003D94  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  5993  003D96  0E00               	movlw	0
  5994  003D98  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  5995  003D9A  0E80               	movlw	128
  5996  003D9C  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  5997  003D9E                     l6669:
  5998  003D9E  C006  F006         	movff	___flneg@f1,?___flneg
  5999  003DA2  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  6000  003DA6  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  6001  003DAA  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  6002  003DAE  0012               	return		;funcret
  6003  003DB0                     __end_of___flneg:
  6004                           	opt callstack 0
  6005                           
  6006 ;; *************** function ___flge *****************
  6007 ;; Defined at:
  6008 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  ff1             4   76[COMRAM] unsigned char 
  6011 ;;  ff2             4   80[COMRAM] unsigned char 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;		None               void
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6023 ;;      Params:         8       0       0       0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6025 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6026 ;;      Totals:         8       4       0       0       0       0       0       0       0
  6027 ;;Total ram usage:       12 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    2
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_efgtoa
  6034 ;;		_hayCruce
  6035 ;;		_decidirDireccion
  6036 ;;		_roundf
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text21
  6041  002F84                     __ptext21:
  6042                           	opt callstack 0
  6043  002F84                     ___flge:
  6044                           	opt callstack 22
  6045  002F84  0E00               	movlw	0
  6046  002F86  144D               	andwf	___flge@ff1^0,w,c
  6047  002F88  0100               	movlb	0	; () banked
  6048  002F8A  6F60               	movwf	??___flge& (0+255),b
  6049  002F8C  0E00               	movlw	0
  6050  002F8E  144E               	andwf	(___flge@ff1+1)^0,w,c
  6051  002F90  6F61               	movwf	(??___flge+1)& (0+255),b
  6052  002F92  0E80               	movlw	128
  6053  002F94  144F               	andwf	(___flge@ff1+2)^0,w,c
  6054  002F96  6F62               	movwf	(??___flge+2)& (0+255),b
  6055  002F98  0E7F               	movlw	127
  6056  002F9A  1450               	andwf	(___flge@ff1+3)^0,w,c
  6057  002F9C  6F63               	movwf	(??___flge+3)& (0+255),b
  6058  002F9E  5160               	movf	??___flge& (0+255),w,b
  6059  002FA0  1161               	iorwf	(??___flge+1)& (0+255),w,b
  6060  002FA2  1162               	iorwf	(??___flge+2)& (0+255),w,b
  6061  002FA4  1163               	iorwf	(??___flge+3)& (0+255),w,b
  6062  002FA6  A4D8               	btfss	status,2,c
  6063  002FA8  EFD8  F017         	goto	u7831
  6064  002FAC  EFDA  F017         	goto	u7830
  6065  002FB0                     u7831:
  6066  002FB0  EFE2  F017         	goto	l6647
  6067  002FB4                     u7830:
  6068  002FB4                     
  6069                           ; BSR set to: 0
  6070  002FB4  0E00               	movlw	0
  6071  002FB6  6E4D               	movwf	___flge@ff1^0,c
  6072  002FB8  0E00               	movlw	0
  6073  002FBA  6E4E               	movwf	(___flge@ff1+1)^0,c
  6074  002FBC  0E00               	movlw	0
  6075  002FBE  6E4F               	movwf	(___flge@ff1+2)^0,c
  6076  002FC0  0E00               	movlw	0
  6077  002FC2  6E50               	movwf	(___flge@ff1+3)^0,c
  6078  002FC4                     l6647:
  6079                           
  6080                           ; BSR set to: 0
  6081  002FC4  0E00               	movlw	0
  6082  002FC6  1451               	andwf	___flge@ff2^0,w,c
  6083  002FC8  6F60               	movwf	??___flge& (0+255),b
  6084  002FCA  0E00               	movlw	0
  6085  002FCC  1452               	andwf	(___flge@ff2+1)^0,w,c
  6086  002FCE  6F61               	movwf	(??___flge+1)& (0+255),b
  6087  002FD0  0E80               	movlw	128
  6088  002FD2  1453               	andwf	(___flge@ff2+2)^0,w,c
  6089  002FD4  6F62               	movwf	(??___flge+2)& (0+255),b
  6090  002FD6  0E7F               	movlw	127
  6091  002FD8  1454               	andwf	(___flge@ff2+3)^0,w,c
  6092  002FDA  6F63               	movwf	(??___flge+3)& (0+255),b
  6093  002FDC  5160               	movf	??___flge& (0+255),w,b
  6094  002FDE  1161               	iorwf	(??___flge+1)& (0+255),w,b
  6095  002FE0  1162               	iorwf	(??___flge+2)& (0+255),w,b
  6096  002FE2  1163               	iorwf	(??___flge+3)& (0+255),w,b
  6097  002FE4  A4D8               	btfss	status,2,c
  6098  002FE6  EFF7  F017         	goto	u7841
  6099  002FEA  EFF9  F017         	goto	u7840
  6100  002FEE                     u7841:
  6101  002FEE  EF01  F018         	goto	l6651
  6102  002FF2                     u7840:
  6103  002FF2                     
  6104                           ; BSR set to: 0
  6105  002FF2  0E00               	movlw	0
  6106  002FF4  6E51               	movwf	___flge@ff2^0,c
  6107  002FF6  0E00               	movlw	0
  6108  002FF8  6E52               	movwf	(___flge@ff2+1)^0,c
  6109  002FFA  0E00               	movlw	0
  6110  002FFC  6E53               	movwf	(___flge@ff2+2)^0,c
  6111  002FFE  0E00               	movlw	0
  6112  003000  6E54               	movwf	(___flge@ff2+3)^0,c
  6113  003002                     l6651:
  6114                           
  6115                           ; BSR set to: 0
  6116  003002  AE50               	btfss	(___flge@ff1+3)^0,7,c
  6117  003004  EF06  F018         	goto	u7851
  6118  003008  EF08  F018         	goto	u7850
  6119  00300C                     u7851:
  6120  00300C  EF11  F018         	goto	l6655
  6121  003010                     u7850:
  6122  003010                     
  6123                           ; BSR set to: 0
  6124  003010  6C4D               	negf	___flge@ff1^0,c
  6125  003012  1E4E               	comf	(___flge@ff1+1)^0,f,c
  6126  003014  B0D8               	btfsc	status,0,c
  6127  003016  2A4E               	incf	(___flge@ff1+1)^0,f,c
  6128  003018  1E4F               	comf	(___flge@ff1+2)^0,f,c
  6129  00301A  B0D8               	btfsc	status,0,c
  6130  00301C  2A4F               	incf	(___flge@ff1+2)^0,f,c
  6131  00301E  0E80               	movlw	128
  6132  003020  5650               	subfwb	(___flge@ff1+3)^0,f,c
  6133  003022                     l6655:
  6134                           
  6135                           ; BSR set to: 0
  6136  003022  AE54               	btfss	(___flge@ff2+3)^0,7,c
  6137  003024  EF16  F018         	goto	u7861
  6138  003028  EF18  F018         	goto	u7860
  6139  00302C                     u7861:
  6140  00302C  EF21  F018         	goto	l969
  6141  003030                     u7860:
  6142  003030                     
  6143                           ; BSR set to: 0
  6144  003030  6C51               	negf	___flge@ff2^0,c
  6145  003032  1E52               	comf	(___flge@ff2+1)^0,f,c
  6146  003034  B0D8               	btfsc	status,0,c
  6147  003036  2A52               	incf	(___flge@ff2+1)^0,f,c
  6148  003038  1E53               	comf	(___flge@ff2+2)^0,f,c
  6149  00303A  B0D8               	btfsc	status,0,c
  6150  00303C  2A53               	incf	(___flge@ff2+2)^0,f,c
  6151  00303E  0E80               	movlw	128
  6152  003040  5654               	subfwb	(___flge@ff2+3)^0,f,c
  6153  003042                     l969:
  6154                           
  6155                           ; BSR set to: 0
  6156  003042  0E00               	movlw	0
  6157  003044  1A4D               	xorwf	___flge@ff1^0,f,c
  6158  003046  0E00               	movlw	0
  6159  003048  1A4E               	xorwf	(___flge@ff1+1)^0,f,c
  6160  00304A  0E00               	movlw	0
  6161  00304C  1A4F               	xorwf	(___flge@ff1+2)^0,f,c
  6162  00304E  0E80               	movlw	128
  6163  003050  1A50               	xorwf	(___flge@ff1+3)^0,f,c
  6164  003052  0E00               	movlw	0
  6165  003054  1A51               	xorwf	___flge@ff2^0,f,c
  6166  003056  0E00               	movlw	0
  6167  003058  1A52               	xorwf	(___flge@ff2+1)^0,f,c
  6168  00305A  0E00               	movlw	0
  6169  00305C  1A53               	xorwf	(___flge@ff2+2)^0,f,c
  6170  00305E  0E80               	movlw	128
  6171  003060  1A54               	xorwf	(___flge@ff2+3)^0,f,c
  6172  003062  5051               	movf	___flge@ff2^0,w,c
  6173  003064  5C4D               	subwf	___flge@ff1^0,w,c
  6174  003066  5052               	movf	(___flge@ff2+1)^0,w,c
  6175  003068  584E               	subwfb	(___flge@ff1+1)^0,w,c
  6176  00306A  5053               	movf	(___flge@ff2+2)^0,w,c
  6177  00306C  584F               	subwfb	(___flge@ff1+2)^0,w,c
  6178  00306E  5054               	movf	(___flge@ff2+3)^0,w,c
  6179  003070  5850               	subwfb	(___flge@ff1+3)^0,w,c
  6180  003072  B0D8               	btfsc	status,0,c
  6181  003074  EF3E  F018         	goto	u7871
  6182  003078  EF40  F018         	goto	u7870
  6183  00307C                     u7871:
  6184  00307C  EF43  F018         	goto	l6661
  6185  003080                     u7870:
  6186  003080                     
  6187                           ; BSR set to: 0
  6188  003080  90D8               	bcf	status,0,c
  6189  003082  EF44  F018         	goto	l974
  6190  003086                     l6661:
  6191                           
  6192                           ; BSR set to: 0
  6193  003086  80D8               	bsf	status,0,c
  6194  003088                     l974:
  6195                           
  6196                           ; BSR set to: 0
  6197  003088  0012               	return		;funcret
  6198  00308A                     __end_of___flge:
  6199                           	opt callstack 0
  6200                           
  6201 ;; *************** function ___fleq *****************
  6202 ;; Defined at:
  6203 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  ff1             4    5[COMRAM] unsigned char 
  6206 ;;  ff2             4    9[COMRAM] unsigned char 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;		None               void
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6218 ;;      Params:         8       0       0       0       0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6220 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6221 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6222 ;;Total ram usage:       12 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    2
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_efgtoa
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text22
  6233  003622                     __ptext22:
  6234                           	opt callstack 0
  6235  003622                     ___fleq:
  6236                           	opt callstack 22
  6237  003622  0E00               	movlw	0
  6238  003624  1406               	andwf	___fleq@ff1^0,w,c
  6239  003626  6E0E               	movwf	??___fleq^0,c
  6240  003628  0E00               	movlw	0
  6241  00362A  1407               	andwf	(___fleq@ff1+1)^0,w,c
  6242  00362C  6E0F               	movwf	(??___fleq+1)^0,c
  6243  00362E  0E80               	movlw	128
  6244  003630  1408               	andwf	(___fleq@ff1+2)^0,w,c
  6245  003632  6E10               	movwf	(??___fleq+2)^0,c
  6246  003634  0E7F               	movlw	127
  6247  003636  1409               	andwf	(___fleq@ff1+3)^0,w,c
  6248  003638  6E11               	movwf	(??___fleq+3)^0,c
  6249  00363A  500E               	movf	??___fleq^0,w,c
  6250  00363C  100F               	iorwf	(??___fleq+1)^0,w,c
  6251  00363E  1010               	iorwf	(??___fleq+2)^0,w,c
  6252  003640  1011               	iorwf	(??___fleq+3)^0,w,c
  6253  003642  A4D8               	btfss	status,2,c
  6254  003644  EF26  F01B         	goto	u7801
  6255  003648  EF28  F01B         	goto	u7800
  6256  00364C                     u7801:
  6257  00364C  EF30  F01B         	goto	l6631
  6258  003650                     u7800:
  6259  003650  0E00               	movlw	0
  6260  003652  6E06               	movwf	___fleq@ff1^0,c
  6261  003654  0E00               	movlw	0
  6262  003656  6E07               	movwf	(___fleq@ff1+1)^0,c
  6263  003658  0E00               	movlw	0
  6264  00365A  6E08               	movwf	(___fleq@ff1+2)^0,c
  6265  00365C  0E00               	movlw	0
  6266  00365E  6E09               	movwf	(___fleq@ff1+3)^0,c
  6267  003660                     l6631:
  6268  003660  0E00               	movlw	0
  6269  003662  140A               	andwf	___fleq@ff2^0,w,c
  6270  003664  6E0E               	movwf	??___fleq^0,c
  6271  003666  0E00               	movlw	0
  6272  003668  140B               	andwf	(___fleq@ff2+1)^0,w,c
  6273  00366A  6E0F               	movwf	(??___fleq+1)^0,c
  6274  00366C  0E80               	movlw	128
  6275  00366E  140C               	andwf	(___fleq@ff2+2)^0,w,c
  6276  003670  6E10               	movwf	(??___fleq+2)^0,c
  6277  003672  0E7F               	movlw	127
  6278  003674  140D               	andwf	(___fleq@ff2+3)^0,w,c
  6279  003676  6E11               	movwf	(??___fleq+3)^0,c
  6280  003678  500E               	movf	??___fleq^0,w,c
  6281  00367A  100F               	iorwf	(??___fleq+1)^0,w,c
  6282  00367C  1010               	iorwf	(??___fleq+2)^0,w,c
  6283  00367E  1011               	iorwf	(??___fleq+3)^0,w,c
  6284  003680  A4D8               	btfss	status,2,c
  6285  003682  EF45  F01B         	goto	u7811
  6286  003686  EF47  F01B         	goto	u7810
  6287  00368A                     u7811:
  6288  00368A  EF4F  F01B         	goto	l6635
  6289  00368E                     u7810:
  6290  00368E  0E00               	movlw	0
  6291  003690  6E0A               	movwf	___fleq@ff2^0,c
  6292  003692  0E00               	movlw	0
  6293  003694  6E0B               	movwf	(___fleq@ff2+1)^0,c
  6294  003696  0E00               	movlw	0
  6295  003698  6E0C               	movwf	(___fleq@ff2+2)^0,c
  6296  00369A  0E00               	movlw	0
  6297  00369C  6E0D               	movwf	(___fleq@ff2+3)^0,c
  6298  00369E                     l6635:
  6299  00369E  500A               	movf	___fleq@ff2^0,w,c
  6300  0036A0  1806               	xorwf	___fleq@ff1^0,w,c
  6301  0036A2  E10F               	bnz	u7820
  6302  0036A4  500B               	movf	(___fleq@ff2+1)^0,w,c
  6303  0036A6  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  6304  0036A8  E10C               	bnz	u7820
  6305  0036AA  500C               	movf	(___fleq@ff2+2)^0,w,c
  6306  0036AC  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  6307  0036AE  E109               	bnz	u7820
  6308  0036B0  500D               	movf	(___fleq@ff2+3)^0,w,c
  6309  0036B2  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  6310  0036B4  B4D8               	btfsc	status,2,c
  6311  0036B6  EF5F  F01B         	goto	u7821
  6312  0036BA  EF61  F01B         	goto	u7820
  6313  0036BE                     u7821:
  6314  0036BE  EF64  F01B         	goto	l6639
  6315  0036C2                     u7820:
  6316  0036C2  90D8               	bcf	status,0,c
  6317  0036C4  EF65  F01B         	goto	l963
  6318  0036C8                     l6639:
  6319  0036C8  80D8               	bsf	status,0,c
  6320  0036CA                     l963:
  6321  0036CA  0012               	return		;funcret
  6322  0036CC                     __end_of___fleq:
  6323                           	opt callstack 0
  6324                           
  6325 ;; *************** function ___awmod *****************
  6326 ;; Defined at:
  6327 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  dividend        2    5[COMRAM] int 
  6330 ;;  divisor         2    7[COMRAM] int 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  sign            1   10[COMRAM] unsigned char 
  6333 ;;  counter         1    9[COMRAM] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  2    5[COMRAM] int 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6343 ;;      Params:         4       0       0       0       0       0       0       0       0
  6344 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6346 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6347 ;;Total ram usage:        6 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    2
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		_efgtoa
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text23
  6358  003572                     __ptext23:
  6359                           	opt callstack 0
  6360  003572                     ___awmod:
  6361                           	opt callstack 22
  6362  003572  0E00               	movlw	0
  6363  003574  6E0B               	movwf	___awmod@sign^0,c
  6364  003576  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  6365  003578  EFC2  F01A         	goto	u7740
  6366  00357C  EFC0  F01A         	goto	u7741
  6367  003580                     u7741:
  6368  003580  EFC8  F01A         	goto	l6599
  6369  003584                     u7740:
  6370  003584  6C06               	negf	___awmod@dividend^0,c
  6371  003586  1E07               	comf	(___awmod@dividend+1)^0,f,c
  6372  003588  B0D8               	btfsc	status,0,c
  6373  00358A  2A07               	incf	(___awmod@dividend+1)^0,f,c
  6374  00358C  0E01               	movlw	1
  6375  00358E  6E0B               	movwf	___awmod@sign^0,c
  6376  003590                     l6599:
  6377  003590  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  6378  003592  EFCF  F01A         	goto	u7750
  6379  003596  EFCD  F01A         	goto	u7751
  6380  00359A                     u7751:
  6381  00359A  EFD3  F01A         	goto	l6603
  6382  00359E                     u7750:
  6383  00359E  6C08               	negf	___awmod@divisor^0,c
  6384  0035A0  1E09               	comf	(___awmod@divisor+1)^0,f,c
  6385  0035A2  B0D8               	btfsc	status,0,c
  6386  0035A4  2A09               	incf	(___awmod@divisor+1)^0,f,c
  6387  0035A6                     l6603:
  6388  0035A6  5008               	movf	___awmod@divisor^0,w,c
  6389  0035A8  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  6390  0035AA  B4D8               	btfsc	status,2,c
  6391  0035AC  EFDA  F01A         	goto	u7761
  6392  0035B0  EFDC  F01A         	goto	u7760
  6393  0035B4                     u7761:
  6394  0035B4  EF00  F01B         	goto	l6619
  6395  0035B8                     u7760:
  6396  0035B8  0E01               	movlw	1
  6397  0035BA  6E0A               	movwf	___awmod@counter^0,c
  6398  0035BC  EFE4  F01A         	goto	l6609
  6399  0035C0                     l6607:
  6400  0035C0  90D8               	bcf	status,0,c
  6401  0035C2  3608               	rlcf	___awmod@divisor^0,f,c
  6402  0035C4  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  6403  0035C6  2A0A               	incf	___awmod@counter^0,f,c
  6404  0035C8                     l6609:
  6405  0035C8  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  6406  0035CA  EFE9  F01A         	goto	u7771
  6407  0035CE  EFEB  F01A         	goto	u7770
  6408  0035D2                     u7771:
  6409  0035D2  EFE0  F01A         	goto	l6607
  6410  0035D6                     u7770:
  6411  0035D6                     l6611:
  6412  0035D6  5008               	movf	___awmod@divisor^0,w,c
  6413  0035D8  5C06               	subwf	___awmod@dividend^0,w,c
  6414  0035DA  5009               	movf	(___awmod@divisor+1)^0,w,c
  6415  0035DC  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  6416  0035DE  A0D8               	btfss	status,0,c
  6417  0035E0  EFF4  F01A         	goto	u7781
  6418  0035E4  EFF6  F01A         	goto	u7780
  6419  0035E8                     u7781:
  6420  0035E8  EFFA  F01A         	goto	l6615
  6421  0035EC                     u7780:
  6422  0035EC  5008               	movf	___awmod@divisor^0,w,c
  6423  0035EE  5E06               	subwf	___awmod@dividend^0,f,c
  6424  0035F0  5009               	movf	(___awmod@divisor+1)^0,w,c
  6425  0035F2  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  6426  0035F4                     l6615:
  6427  0035F4  90D8               	bcf	status,0,c
  6428  0035F6  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  6429  0035F8  3208               	rrcf	___awmod@divisor^0,f,c
  6430  0035FA  2E0A               	decfsz	___awmod@counter^0,f,c
  6431  0035FC  EFEB  F01A         	goto	l6611
  6432  003600                     l6619:
  6433  003600  500B               	movf	___awmod@sign^0,w,c
  6434  003602  B4D8               	btfsc	status,2,c
  6435  003604  EF06  F01B         	goto	u7791
  6436  003608  EF08  F01B         	goto	u7790
  6437  00360C                     u7791:
  6438  00360C  EF0C  F01B         	goto	l6623
  6439  003610                     u7790:
  6440  003610  6C06               	negf	___awmod@dividend^0,c
  6441  003612  1E07               	comf	(___awmod@dividend+1)^0,f,c
  6442  003614  B0D8               	btfsc	status,0,c
  6443  003616  2A07               	incf	(___awmod@dividend+1)^0,f,c
  6444  003618                     l6623:
  6445  003618  C006  F006         	movff	___awmod@dividend,?___awmod
  6446  00361C  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  6447  003620  0012               	return		;funcret
  6448  003622                     __end_of___awmod:
  6449                           	opt callstack 0
  6450                           
  6451 ;; *************** function ___awdiv *****************
  6452 ;; Defined at:
  6453 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  dividend        2    5[COMRAM] int 
  6456 ;;  divisor         2    7[COMRAM] int 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  quotient        2   11[COMRAM] int 
  6459 ;;  sign            1   10[COMRAM] unsigned char 
  6460 ;;  counter         1    9[COMRAM] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  2    5[COMRAM] int 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2, status,0
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6470 ;;      Params:         4       0       0       0       0       0       0       0       0
  6471 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6473 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6474 ;;Total ram usage:        8 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    2
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_efgtoa
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text24
  6485  0033EE                     __ptext24:
  6486                           	opt callstack 0
  6487  0033EE                     ___awdiv:
  6488                           	opt callstack 22
  6489  0033EE  0E00               	movlw	0
  6490  0033F0  6E0B               	movwf	___awdiv@sign^0,c
  6491  0033F2  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  6492  0033F4  EF00  F01A         	goto	u7680
  6493  0033F8  EFFE  F019         	goto	u7681
  6494  0033FC                     u7681:
  6495  0033FC  EF06  F01A         	goto	l6555
  6496  003400                     u7680:
  6497  003400  6C08               	negf	___awdiv@divisor^0,c
  6498  003402  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  6499  003404  B0D8               	btfsc	status,0,c
  6500  003406  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  6501  003408  0E01               	movlw	1
  6502  00340A  6E0B               	movwf	___awdiv@sign^0,c
  6503  00340C                     l6555:
  6504  00340C  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  6505  00340E  EF0D  F01A         	goto	u7690
  6506  003412  EF0B  F01A         	goto	u7691
  6507  003416                     u7691:
  6508  003416  EF13  F01A         	goto	l6561
  6509  00341A                     u7690:
  6510  00341A  6C06               	negf	___awdiv@dividend^0,c
  6511  00341C  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  6512  00341E  B0D8               	btfsc	status,0,c
  6513  003420  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  6514  003422  0E01               	movlw	1
  6515  003424  1A0B               	xorwf	___awdiv@sign^0,f,c
  6516  003426                     l6561:
  6517  003426  0E00               	movlw	0
  6518  003428  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  6519  00342A  0E00               	movlw	0
  6520  00342C  6E0C               	movwf	___awdiv@quotient^0,c
  6521  00342E  5008               	movf	___awdiv@divisor^0,w,c
  6522  003430  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  6523  003432  B4D8               	btfsc	status,2,c
  6524  003434  EF1E  F01A         	goto	u7701
  6525  003438  EF20  F01A         	goto	u7700
  6526  00343C                     u7701:
  6527  00343C  EF48  F01A         	goto	l6583
  6528  003440                     u7700:
  6529  003440  0E01               	movlw	1
  6530  003442  6E0A               	movwf	___awdiv@counter^0,c
  6531  003444  EF28  F01A         	goto	l6569
  6532  003448                     l6567:
  6533  003448  90D8               	bcf	status,0,c
  6534  00344A  3608               	rlcf	___awdiv@divisor^0,f,c
  6535  00344C  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  6536  00344E  2A0A               	incf	___awdiv@counter^0,f,c
  6537  003450                     l6569:
  6538  003450  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  6539  003452  EF2D  F01A         	goto	u7711
  6540  003456  EF2F  F01A         	goto	u7710
  6541  00345A                     u7711:
  6542  00345A  EF24  F01A         	goto	l6567
  6543  00345E                     u7710:
  6544  00345E                     l6571:
  6545  00345E  90D8               	bcf	status,0,c
  6546  003460  360C               	rlcf	___awdiv@quotient^0,f,c
  6547  003462  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  6548  003464  5008               	movf	___awdiv@divisor^0,w,c
  6549  003466  5C06               	subwf	___awdiv@dividend^0,w,c
  6550  003468  5009               	movf	(___awdiv@divisor+1)^0,w,c
  6551  00346A  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  6552  00346C  A0D8               	btfss	status,0,c
  6553  00346E  EF3B  F01A         	goto	u7721
  6554  003472  EF3D  F01A         	goto	u7720
  6555  003476                     u7721:
  6556  003476  EF42  F01A         	goto	l6579
  6557  00347A                     u7720:
  6558  00347A  5008               	movf	___awdiv@divisor^0,w,c
  6559  00347C  5E06               	subwf	___awdiv@dividend^0,f,c
  6560  00347E  5009               	movf	(___awdiv@divisor+1)^0,w,c
  6561  003480  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  6562  003482  800C               	bsf	___awdiv@quotient^0,0,c
  6563  003484                     l6579:
  6564  003484  90D8               	bcf	status,0,c
  6565  003486  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  6566  003488  3208               	rrcf	___awdiv@divisor^0,f,c
  6567  00348A  2E0A               	decfsz	___awdiv@counter^0,f,c
  6568  00348C  EF2F  F01A         	goto	l6571
  6569  003490                     l6583:
  6570  003490  500B               	movf	___awdiv@sign^0,w,c
  6571  003492  B4D8               	btfsc	status,2,c
  6572  003494  EF4E  F01A         	goto	u7731
  6573  003498  EF50  F01A         	goto	u7730
  6574  00349C                     u7731:
  6575  00349C  EF54  F01A         	goto	l6587
  6576  0034A0                     u7730:
  6577  0034A0  6C0C               	negf	___awdiv@quotient^0,c
  6578  0034A2  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  6579  0034A4  B0D8               	btfsc	status,0,c
  6580  0034A6  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  6581  0034A8                     l6587:
  6582  0034A8  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  6583  0034AC  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  6584  0034B0  0012               	return		;funcret
  6585  0034B2                     __end_of___awdiv:
  6586                           	opt callstack 0
  6587                           
  6588 ;; *************** function _atoi *****************
  6589 ;; Defined at:
  6590 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6593 ;;		 -> STR_4(23), 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  n               2   25[COMRAM] int 
  6596 ;;  neg             2   18[COMRAM] int 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  2   12[COMRAM] int 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6606 ;;      Params:         2       0       0       0       0       0       0       0       0
  6607 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6608 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6609 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6610 ;;Total ram usage:       15 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    3
  6613 ;; This function calls:
  6614 ;;		___wmul
  6615 ;;		_isdigit
  6616 ;;		_isspace
  6617 ;; This function is called by:
  6618 ;;		_vfpfcnvrt
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text25
  6623  002A7E                     __ptext25:
  6624                           	opt callstack 0
  6625  002A7E                     _atoi:
  6626                           	opt callstack 22
  6627  002A7E  0E00               	movlw	0
  6628  002A80  6E1B               	movwf	(atoi@n+1)^0,c
  6629  002A82  0E00               	movlw	0
  6630  002A84  6E1A               	movwf	atoi@n^0,c
  6631  002A86  0E00               	movlw	0
  6632  002A88  6E14               	movwf	(atoi@neg+1)^0,c
  6633  002A8A  0E00               	movlw	0
  6634  002A8C  6E13               	movwf	atoi@neg^0,c
  6635  002A8E  EF4B  F015         	goto	l7031
  6636  002A92                     l7029:
  6637  002A92  4A0D               	infsnz	atoi@s^0,f,c
  6638  002A94  2A0E               	incf	(atoi@s+1)^0,f,c
  6639  002A96                     l7031:
  6640  002A96  0E01               	movlw	1
  6641  002A98  6E19               	movwf	_atoi$1285^0,c
  6642  002A9A  C00D  FFF6         	movff	atoi@s,tblptrl
  6643  002A9E  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6644  002AA2                     	if	0	;tblptru may be non-zero
  6645  002AA2                     	endif
  6646  002AA2                     	if	0	;tblptru may be non-zero
  6647  002AA2                     	endif
  6648  002AA2  0008               	tblrd		*
  6649  002AA4  50F5               	movf	tablat,w,c
  6650  002AA6  0A20               	xorlw	32
  6651  002AA8  B4D8               	btfsc	status,2,c
  6652  002AAA  EF59  F015         	goto	u8501
  6653  002AAE  EF5B  F015         	goto	u8500
  6654  002AB2                     u8501:
  6655  002AB2  EF78  F015         	goto	l7039
  6656  002AB6                     u8500:
  6657  002AB6  0EF7               	movlw	247
  6658  002AB8  6E0F               	movwf	??_atoi^0,c
  6659  002ABA  0EFF               	movlw	255
  6660  002ABC  6E10               	movwf	(??_atoi+1)^0,c
  6661  002ABE  C00D  FFF6         	movff	atoi@s,tblptrl
  6662  002AC2  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6663  002AC6                     	if	0	;tblptru may be non-zero
  6664  002AC6                     	endif
  6665  002AC6                     	if	0	;tblptru may be non-zero
  6666  002AC6                     	endif
  6667  002AC6  0008               	tblrd		*
  6668  002AC8  50F5               	movf	tablat,w,c
  6669  002ACA  6E11               	movwf	(??_atoi+2)^0,c
  6670  002ACC  6A12               	clrf	(??_atoi+3)^0,c
  6671  002ACE  500F               	movf	??_atoi^0,w,c
  6672  002AD0  2611               	addwf	(??_atoi+2)^0,f,c
  6673  002AD2  5010               	movf	(??_atoi+1)^0,w,c
  6674  002AD4  2212               	addwfc	(??_atoi+3)^0,f,c
  6675  002AD6  5012               	movf	(??_atoi+3)^0,w,c
  6676  002AD8  E109               	bnz	u8510
  6677  002ADA  0E05               	movlw	5
  6678  002ADC  5C11               	subwf	(??_atoi+2)^0,w,c
  6679  002ADE  A0D8               	btfss	status,0,c
  6680  002AE0  EF74  F015         	goto	u8511
  6681  002AE4  EF76  F015         	goto	u8510
  6682  002AE8                     u8511:
  6683  002AE8  EF78  F015         	goto	l7039
  6684  002AEC                     u8510:
  6685  002AEC  0E00               	movlw	0
  6686  002AEE  6E19               	movwf	_atoi$1285^0,c
  6687  002AF0                     l7039:
  6688  002AF0  C019  F015         	movff	_atoi$1285,_atoi$1284
  6689  002AF4  6A16               	clrf	(_atoi$1284+1)^0,c
  6690  002AF6  5015               	movf	_atoi$1284^0,w,c
  6691  002AF8  1016               	iorwf	(_atoi$1284+1)^0,w,c
  6692  002AFA  A4D8               	btfss	status,2,c
  6693  002AFC  EF82  F015         	goto	u8521
  6694  002B00  EF84  F015         	goto	u8520
  6695  002B04                     u8521:
  6696  002B04  EF49  F015         	goto	l7029
  6697  002B08                     u8520:
  6698  002B08  EF8E  F015         	goto	l7049
  6699  002B0C                     l7045:
  6700  002B0C  0E00               	movlw	0
  6701  002B0E  6E14               	movwf	(atoi@neg+1)^0,c
  6702  002B10  0E01               	movlw	1
  6703  002B12  6E13               	movwf	atoi@neg^0,c
  6704  002B14                     l7047:
  6705  002B14  4A0D               	infsnz	atoi@s^0,f,c
  6706  002B16  2A0E               	incf	(atoi@s+1)^0,f,c
  6707  002B18  EFC3  F015         	goto	l7055
  6708  002B1C                     l7049:
  6709  002B1C  C00D  FFF6         	movff	atoi@s,tblptrl
  6710  002B20  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6711  002B24                     	if	0	;tblptru may be non-zero
  6712  002B24                     	endif
  6713  002B24                     	if	0	;tblptru may be non-zero
  6714  002B24                     	endif
  6715  002B24  0008               	tblrd		*
  6716  002B26  50F5               	movf	tablat,w,c
  6717  002B28  6E0F               	movwf	??_atoi^0,c
  6718  002B2A  6A10               	clrf	(??_atoi+1)^0,c
  6719                           
  6720                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6721                           ; Switch size 1, requested type "simple"
  6722                           ; Number of cases is 1, Range of values is 0 to 0
  6723                           ; switch strategies available:
  6724                           ; Name         Instructions Cycles
  6725                           ; simple_byte            4     3 (average)
  6726                           ;	Chosen strategy is simple_byte
  6727  002B2C  5010               	movf	(??_atoi+1)^0,w,c
  6728  002B2E  0A00               	xorlw	0	; case 0
  6729  002B30  B4D8               	btfsc	status,2,c
  6730  002B32  EF9D  F015         	goto	l7995
  6731  002B36  EFC3  F015         	goto	l7055
  6732  002B3A                     l7995:
  6733                           
  6734                           ; Switch size 1, requested type "simple"
  6735                           ; Number of cases is 2, Range of values is 43 to 45
  6736                           ; switch strategies available:
  6737                           ; Name         Instructions Cycles
  6738                           ; simple_byte            7     4 (average)
  6739                           ;	Chosen strategy is simple_byte
  6740  002B3A  500F               	movf	??_atoi^0,w,c
  6741  002B3C  0A2B               	xorlw	43	; case 43
  6742  002B3E  B4D8               	btfsc	status,2,c
  6743  002B40  EF8A  F015         	goto	l7047
  6744  002B44  0A06               	xorlw	6	; case 45
  6745  002B46  B4D8               	btfsc	status,2,c
  6746  002B48  EF86  F015         	goto	l7045
  6747  002B4C  EFC3  F015         	goto	l7055
  6748  002B50                     l7051:
  6749  002B50  C01A  F006         	movff	atoi@n,___wmul@multiplier
  6750  002B54  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  6751  002B58  0E00               	movlw	0
  6752  002B5A  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  6753  002B5C  0E0A               	movlw	10
  6754  002B5E  6E08               	movwf	___wmul@multiplicand^0,c
  6755  002B60  EC0F  F01F         	call	___wmul	;wreg free
  6756  002B64  C00D  FFF6         	movff	atoi@s,tblptrl
  6757  002B68  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6758  002B6C                     	if	0	;tblptru may be non-zero
  6759  002B6C                     	endif
  6760  002B6C                     	if	0	;tblptru may be non-zero
  6761  002B6C                     	endif
  6762  002B6C  0008               	tblrd		*
  6763  002B6E  50F5               	movf	tablat,w,c
  6764  002B70  5E06               	subwf	?___wmul^0,f,c
  6765  002B72  0E00               	movlw	0
  6766  002B74  5A07               	subwfb	(?___wmul+1)^0,f,c
  6767  002B76  0E30               	movlw	48
  6768  002B78  2406               	addwf	?___wmul^0,w,c
  6769  002B7A  6E1A               	movwf	atoi@n^0,c
  6770  002B7C  0E00               	movlw	0
  6771  002B7E  2007               	addwfc	(?___wmul+1)^0,w,c
  6772  002B80  6E1B               	movwf	(atoi@n+1)^0,c
  6773  002B82  EF8A  F015         	goto	l7047
  6774  002B86                     l7055:
  6775  002B86  0ED0               	movlw	208
  6776  002B88  6E0F               	movwf	??_atoi^0,c
  6777  002B8A  0EFF               	movlw	255
  6778  002B8C  6E10               	movwf	(??_atoi+1)^0,c
  6779  002B8E  C00D  FFF6         	movff	atoi@s,tblptrl
  6780  002B92  C00E  FFF7         	movff	atoi@s+1,tblptrh
  6781  002B96                     	if	0	;tblptru may be non-zero
  6782  002B96                     	endif
  6783  002B96                     	if	0	;tblptru may be non-zero
  6784  002B96                     	endif
  6785  002B96  0008               	tblrd		*
  6786  002B98  50F5               	movf	tablat,w,c
  6787  002B9A  6E11               	movwf	(??_atoi+2)^0,c
  6788  002B9C  6A12               	clrf	(??_atoi+3)^0,c
  6789  002B9E  500F               	movf	??_atoi^0,w,c
  6790  002BA0  2611               	addwf	(??_atoi+2)^0,f,c
  6791  002BA2  5010               	movf	(??_atoi+1)^0,w,c
  6792  002BA4  2212               	addwfc	(??_atoi+3)^0,f,c
  6793  002BA6  5012               	movf	(??_atoi+3)^0,w,c
  6794  002BA8  E10A               	bnz	u8530
  6795  002BAA  0E0A               	movlw	10
  6796  002BAC  5C11               	subwf	(??_atoi+2)^0,w,c
  6797  002BAE  A0D8               	btfss	status,0,c
  6798  002BB0  EFDC  F015         	goto	u8531
  6799  002BB4  EFDF  F015         	goto	u8530
  6800  002BB8                     u8531:
  6801  002BB8  0E01               	movlw	1
  6802  002BBA  EFE0  F015         	goto	u8540
  6803  002BBE                     u8530:
  6804  002BBE  0E00               	movlw	0
  6805  002BC0                     u8540:
  6806  002BC0  6E17               	movwf	_atoi$1286^0,c
  6807  002BC2  6A18               	clrf	(_atoi$1286+1)^0,c
  6808  002BC4  5017               	movf	_atoi$1286^0,w,c
  6809  002BC6  1018               	iorwf	(_atoi$1286+1)^0,w,c
  6810  002BC8  A4D8               	btfss	status,2,c
  6811  002BCA  EFE9  F015         	goto	u8551
  6812  002BCE  EFEB  F015         	goto	u8550
  6813  002BD2                     u8551:
  6814  002BD2  EFA8  F015         	goto	l7051
  6815  002BD6                     u8550:
  6816  002BD6  5013               	movf	atoi@neg^0,w,c
  6817  002BD8  1014               	iorwf	(atoi@neg+1)^0,w,c
  6818  002BDA  A4D8               	btfss	status,2,c
  6819  002BDC  EFF2  F015         	goto	u8561
  6820  002BE0  EFF4  F015         	goto	u8560
  6821  002BE4                     u8561:
  6822  002BE4  EF02  F016         	goto	l1414
  6823  002BE8                     u8560:
  6824  002BE8  C01A  F00F         	movff	atoi@n,??_atoi
  6825  002BEC  C01B  F010         	movff	atoi@n+1,??_atoi+1
  6826  002BF0  1E0F               	comf	??_atoi^0,f,c
  6827  002BF2  1E10               	comf	(??_atoi+1)^0,f,c
  6828  002BF4  4A0F               	infsnz	??_atoi^0,f,c
  6829  002BF6  2A10               	incf	(??_atoi+1)^0,f,c
  6830  002BF8  C00F  F00D         	movff	??_atoi,?_atoi
  6831  002BFC  C010  F00E         	movff	??_atoi+1,?_atoi+1
  6832  002C00  EF06  F016         	goto	l1417
  6833  002C04                     l1414:
  6834  002C04  C01A  F00D         	movff	atoi@n,?_atoi
  6835  002C08  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  6836  002C0C                     l1417:
  6837  002C0C  0012               	return		;funcret
  6838  002C0E                     __end_of_atoi:
  6839                           	opt callstack 0
  6840                           
  6841 ;; *************** function _isspace *****************
  6842 ;; Defined at:
  6843 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  c               2    5[COMRAM] int 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2    5[COMRAM] int 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6857 ;;      Params:         2       0       0       0       0       0       0       0       0
  6858 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6859 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6860 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6861 ;;Total ram usage:        7 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    2
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_atoi
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text26
  6872  003B86                     __ptext26:
  6873                           	opt callstack 0
  6874  003B86                     _isspace:
  6875                           	opt callstack 22
  6876  003B86  0E01               	movlw	1
  6877  003B88  6E0C               	movwf	_isspace$1315^0,c
  6878  003B8A  0E20               	movlw	32
  6879  003B8C  1806               	xorwf	isspace@c^0,w,c
  6880  003B8E  1007               	iorwf	(isspace@c+1)^0,w,c
  6881  003B90  B4D8               	btfsc	status,2,c
  6882  003B92  EFCD  F01D         	goto	u7961
  6883  003B96  EFCF  F01D         	goto	u7960
  6884  003B9A                     u7961:
  6885  003B9A  EFE8  F01D         	goto	l6725
  6886  003B9E                     u7960:
  6887  003B9E  0EF7               	movlw	247
  6888  003BA0  6E08               	movwf	??_isspace^0,c
  6889  003BA2  0EFF               	movlw	255
  6890  003BA4  6E09               	movwf	(??_isspace+1)^0,c
  6891  003BA6  C006  F00A         	movff	isspace@c,??_isspace+2
  6892  003BAA  C007  F00B         	movff	isspace@c+1,??_isspace+3
  6893  003BAE  5008               	movf	??_isspace^0,w,c
  6894  003BB0  260A               	addwf	(??_isspace+2)^0,f,c
  6895  003BB2  5009               	movf	(??_isspace+1)^0,w,c
  6896  003BB4  220B               	addwfc	(??_isspace+3)^0,f,c
  6897  003BB6  500B               	movf	(??_isspace+3)^0,w,c
  6898  003BB8  E109               	bnz	u7970
  6899  003BBA  0E05               	movlw	5
  6900  003BBC  5C0A               	subwf	(??_isspace+2)^0,w,c
  6901  003BBE  A0D8               	btfss	status,0,c
  6902  003BC0  EFE4  F01D         	goto	u7971
  6903  003BC4  EFE6  F01D         	goto	u7970
  6904  003BC8                     u7971:
  6905  003BC8  EFE8  F01D         	goto	l6725
  6906  003BCC                     u7970:
  6907  003BCC  0E00               	movlw	0
  6908  003BCE  6E0C               	movwf	_isspace$1315^0,c
  6909  003BD0                     l6725:
  6910  003BD0  C00C  F006         	movff	_isspace$1315,?_isspace
  6911  003BD4  6A07               	clrf	(?_isspace+1)^0,c
  6912  003BD6  0012               	return		;funcret
  6913  003BD8                     __end_of_isspace:
  6914                           	opt callstack 0
  6915                           
  6916 ;; *************** function _isdigit *****************
  6917 ;; Defined at:
  6918 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  c               2    5[COMRAM] int 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  2    5[COMRAM] int 
  6925 ;; Registers used:
  6926 ;;		wreg, status,2, status,0
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6932 ;;      Params:         2       0       0       0       0       0       0       0       0
  6933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6934 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6935 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6936 ;;Total ram usage:        6 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    2
  6939 ;; This function calls:
  6940 ;;		Nothing
  6941 ;; This function is called by:
  6942 ;;		_vfpfcnvrt
  6943 ;;		_atoi
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text27
  6948  003DB0                     __ptext27:
  6949                           	opt callstack 0
  6950  003DB0                     _isdigit:
  6951                           	opt callstack 23
  6952  003DB0  0ED0               	movlw	208
  6953  003DB2  6E08               	movwf	??_isdigit^0,c
  6954  003DB4  0EFF               	movlw	255
  6955  003DB6  6E09               	movwf	(??_isdigit+1)^0,c
  6956  003DB8  C006  F00A         	movff	isdigit@c,??_isdigit+2
  6957  003DBC  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  6958  003DC0  5008               	movf	??_isdigit^0,w,c
  6959  003DC2  260A               	addwf	(??_isdigit+2)^0,f,c
  6960  003DC4  5009               	movf	(??_isdigit+1)^0,w,c
  6961  003DC6  220B               	addwfc	(??_isdigit+3)^0,f,c
  6962  003DC8  500B               	movf	(??_isdigit+3)^0,w,c
  6963  003DCA  E10A               	bnz	u7240
  6964  003DCC  0E0A               	movlw	10
  6965  003DCE  5C0A               	subwf	(??_isdigit+2)^0,w,c
  6966  003DD0  A0D8               	btfss	status,0,c
  6967  003DD2  EFED  F01E         	goto	u7241
  6968  003DD6  EFF0  F01E         	goto	u7240
  6969  003DDA                     u7241:
  6970  003DDA  0E01               	movlw	1
  6971  003DDC  EFF1  F01E         	goto	u7250
  6972  003DE0                     u7240:
  6973  003DE0  0E00               	movlw	0
  6974  003DE2                     u7250:
  6975  003DE2  6E06               	movwf	?_isdigit^0,c
  6976  003DE4  6A07               	clrf	(?_isdigit+1)^0,c
  6977  003DE6  0012               	return		;funcret
  6978  003DE8                     __end_of_isdigit:
  6979                           	opt callstack 0
  6980                           
  6981 ;; *************** function ___wmul *****************
  6982 ;; Defined at:
  6983 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  multiplier      2    5[COMRAM] unsigned int 
  6986 ;;  multiplicand    2    7[COMRAM] unsigned int 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  product         2    9[COMRAM] unsigned int 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  2    5[COMRAM] unsigned int 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0, prodl, prodh
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6998 ;;      Params:         4       0       0       0       0       0       0       0       0
  6999 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7001 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7002 ;;Total ram usage:        6 bytes
  7003 ;; Hardware stack levels used:    1
  7004 ;; Hardware stack levels required when called:    2
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_atoi
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text28
  7013  003E1E                     __ptext28:
  7014                           	opt callstack 0
  7015  003E1E                     ___wmul:
  7016                           	opt callstack 22
  7017  003E1E  5006               	movf	___wmul@multiplier^0,w,c
  7018  003E20  0208               	mulwf	___wmul@multiplicand^0,c
  7019  003E22  CFF3 F00A          	movff	prodl,___wmul@product
  7020  003E26  CFF4 F00B          	movff	prodh,___wmul@product+1
  7021  003E2A  5006               	movf	___wmul@multiplier^0,w,c
  7022  003E2C  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7023  003E2E  50F3               	movf	243,w,c
  7024  003E30  260B               	addwf	(___wmul@product+1)^0,f,c
  7025  003E32  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7026  003E34  0208               	mulwf	___wmul@multiplicand^0,c
  7027  003E36  50F3               	movf	243,w,c
  7028  003E38  260B               	addwf	(___wmul@product+1)^0,f,c
  7029  003E3A  C00A  F006         	movff	___wmul@product,?___wmul
  7030  003E3E  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7031  003E42  0012               	return		;funcret
  7032  003E44                     __end_of___wmul:
  7033                           	opt callstack 0
  7034                           
  7035 ;; *************** function _UART_printf *****************
  7036 ;; Defined at:
  7037 ;;		line 47 in file "./UART.h"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  cadena          2    6[COMRAM] PTR unsigned char 
  7040 ;;		 -> buffer(50), STR_3(13), STR_2(15), STR_1(14), 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1    wreg      void 
  7045 ;; Registers used:
  7046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7052 ;;      Params:         2       0       0       0       0       0       0       0       0
  7053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7055 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7056 ;;Total ram usage:        2 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:    3
  7059 ;; This function calls:
  7060 ;;		_UART_write
  7061 ;; This function is called by:
  7062 ;;		_probarUltrasonico
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text29
  7067  0039C6                     __ptext29:
  7068                           	opt callstack 0
  7069  0039C6                     _UART_printf:
  7070                           	opt callstack 25
  7071  0039C6                     
  7072                           ;./UART.h: 48:     while (*cadena) {
  7073  0039C6  EFF9  F01C         	goto	l7315
  7074  0039CA                     l7311:
  7075                           
  7076                           ;./UART.h: 49:         UART_write(*cadena++);
  7077  0039CA  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7078  0039CE  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7079  0039D2  6AF8               	clrf	tblptru,c
  7080  0039D4  0E07               	movlw	(high __ramtop+-1)
  7081  0039D6  64F7               	cpfsgt	tblptrh,c
  7082  0039D8  D003               	bra	u9047
  7083  0039DA  0008               	tblrd		*
  7084  0039DC  50F5               	movf	tablat,w,c
  7085  0039DE  D005               	bra	u9040
  7086  0039E0                     u9047:
  7087  0039E0  CFF6 FFE9          	movff	tblptrl,fsr0l
  7088  0039E4  CFF7 FFEA          	movff	tblptrh,fsr0h
  7089  0039E8  50EF               	movf	indf0,w,c
  7090  0039EA                     u9040:
  7091  0039EA  EC35  F01F         	call	_UART_write
  7092  0039EE  4A07               	infsnz	UART_printf@cadena^0,f,c
  7093  0039F0  2A08               	incf	(UART_printf@cadena+1)^0,f,c
  7094  0039F2                     l7315:
  7095                           
  7096                           ;./UART.h: 48:     while (*cadena) {
  7097  0039F2  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7098  0039F6  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7099  0039FA  6AF8               	clrf	tblptru,c
  7100  0039FC  0E07               	movlw	(high __ramtop+-1)
  7101  0039FE  64F7               	cpfsgt	tblptrh,c
  7102  003A00  D003               	bra	u9057
  7103  003A02  0008               	tblrd		*
  7104  003A04  50F5               	movf	tablat,w,c
  7105  003A06  D005               	bra	u9050
  7106  003A08                     u9057:
  7107  003A08  CFF6 FFE9          	movff	tblptrl,fsr0l
  7108  003A0C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7109  003A10  50EF               	movf	indf0,w,c
  7110  003A12                     u9050:
  7111  003A12  0900               	iorlw	0
  7112  003A14  A4D8               	btfss	status,2,c
  7113  003A16  EF0F  F01D         	goto	u9061
  7114  003A1A  EF11  F01D         	goto	u9060
  7115  003A1E                     u9061:
  7116  003A1E  EFE5  F01C         	goto	l7311
  7117  003A22                     u9060:
  7118  003A22  0012               	return		;funcret
  7119  003A24                     __end_of_UART_printf:
  7120                           	opt callstack 0
  7121                           
  7122 ;; *************** function _UART_write *****************
  7123 ;; Defined at:
  7124 ;;		line 42 in file "./UART.h"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  dato            1    wreg     unsigned char 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  dato            1    5[COMRAM] unsigned char 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1    wreg      void 
  7131 ;; Registers used:
  7132 ;;		wreg
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7138 ;;      Params:         0       0       0       0       0       0       0       0       0
  7139 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7141 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7142 ;;Total ram usage:        1 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    2
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_UART_printf
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text30
  7153  003E6A                     __ptext30:
  7154                           	opt callstack 0
  7155  003E6A                     _UART_write:
  7156                           	opt callstack 25
  7157                           
  7158                           ;incstack = 0
  7159                           ;UART_write@dato stored from wreg
  7160  003E6A  6E06               	movwf	UART_write@dato^0,c
  7161  003E6C                     
  7162                           ;./UART.h: 43:     TXREG = dato;
  7163  003E6C  C006  FFAD         	movff	UART_write@dato,4013	;volatile
  7164  003E70                     l210:
  7165  003E70  A2AC               	btfss	172,1,c	;volatile
  7166  003E72  EF3D  F01F         	goto	u8761
  7167  003E76  EF3F  F01F         	goto	u8760
  7168  003E7A                     u8761:
  7169  003E7A  EF38  F01F         	goto	l210
  7170  003E7E                     u8760:
  7171  003E7E  0012               	return		;funcret
  7172  003E80                     __end_of_UART_write:
  7173                           	opt callstack 0
  7174                           
  7175 ;; *************** function _inicializarComportamientoBasico *****************
  7176 ;; Defined at:
  7177 ;;		line 143 in file "main.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;		None
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;		None
  7182 ;; Return value:  Size  Location     Type
  7183 ;;                  1    wreg      void 
  7184 ;; Registers used:
  7185 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7186 ;; Tracked objects:
  7187 ;;		On entry : 0/0
  7188 ;;		On exit  : 0/0
  7189 ;;		Unchanged: 0/0
  7190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7191 ;;      Params:         0       0       0       0       0       0       0       0       0
  7192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7195 ;;Total ram usage:        0 bytes
  7196 ;; Hardware stack levels used:    1
  7197 ;; Hardware stack levels required when called:    6
  7198 ;; This function calls:
  7199 ;;		_dameDistancia
  7200 ;;		_velocidadEstandar
  7201 ;; This function is called by:
  7202 ;;		_main
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text31
  7207  003C28                     __ptext31:
  7208                           	opt callstack 0
  7209  003C28                     _inicializarComportamientoBasico:
  7210                           	opt callstack 24
  7211  003C28                     
  7212                           ;main.c: 145:     mouse.curr_state = ENFRENTE;
  7213  003C28  0E01               	movlw	1
  7214  003C2A  6E55               	movwf	_mouse^0,c
  7215  003C2C                     
  7216                           ;main.c: 147:     oldSensorDerecha = dameDistancia(DERECHA);
  7217  003C2C  0E03               	movlw	3
  7218  003C2E  EC07  F016         	call	_dameDistancia
  7219  003C32  C01B  F0D5         	movff	?_dameDistancia,_oldSensorDerecha
  7220  003C36  C01C  F0D6         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  7221  003C3A  C01D  F0D7         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  7222  003C3E  C01E  F0D8         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  7223  003C42                     
  7224                           ;main.c: 148:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  7225  003C42  0E02               	movlw	2
  7226  003C44  EC07  F016         	call	_dameDistancia
  7227  003C48  C01B  F0D1         	movff	?_dameDistancia,_oldSensorIzquierda
  7228  003C4C  C01C  F0D2         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  7229  003C50  C01D  F0D3         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  7230  003C54  C01E  F0D4         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  7231  003C58                     
  7232                           ;main.c: 149:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  7233  003C58  0E01               	movlw	1
  7234  003C5A  EC07  F016         	call	_dameDistancia
  7235  003C5E  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  7236  003C62  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  7237  003C66  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  7238  003C6A  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  7239  003C6E                     
  7240                           ;main.c: 151:     velocidadEstandar();
  7241  003C6E  EC22  F01F         	call	_velocidadEstandar	;wreg free
  7242  003C72  0012               	return		;funcret
  7243  003C74                     __end_of_inicializarComportamientoBasico:
  7244                           	opt callstack 0
  7245                           
  7246 ;; *************** function _velocidadEstandar *****************
  7247 ;; Defined at:
  7248 ;;		line 755 in file "main.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;		None
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7262 ;;      Params:         0       0       0       0       0       0       0       0       0
  7263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7265 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7266 ;;Total ram usage:        0 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:    5
  7269 ;; This function calls:
  7270 ;;		_pwmDuty
  7271 ;; This function is called by:
  7272 ;;		_inicializarComportamientoBasico
  7273 ;;		_comportamientoBasico
  7274 ;;		_regresarCruceAnterior
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text32
  7279  003E44                     __ptext32:
  7280                           	opt callstack 0
  7281  003E44                     _velocidadEstandar:
  7282                           	opt callstack 24
  7283  003E44                     
  7284                           ;main.c: 756:     pwmDuty(70, 1);
  7285  003E44  0E00               	movlw	0
  7286  003E46  0100               	movlb	0	; () banked
  7287  003E48  6F63               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7288  003E4A  0E46               	movlw	70
  7289  003E4C  6F62               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7290  003E4E  0E01               	movlw	1
  7291  003E50  6F64               	movwf	pwmDuty@channel& (0+255),b
  7292  003E52  EC87  F013         	call	_pwmDuty	;wreg free
  7293                           
  7294                           ;main.c: 757:     pwmDuty(70, 2);
  7295  003E56  0E00               	movlw	0
  7296  003E58  0100               	movlb	0	; () banked
  7297  003E5A  6F63               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7298  003E5C  0E46               	movlw	70
  7299  003E5E  6F62               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7300  003E60  0E02               	movlw	2
  7301  003E62  6F64               	movwf	pwmDuty@channel& (0+255),b
  7302  003E64  EC87  F013         	call	_pwmDuty	;wreg free
  7303  003E68  0012               	return		;funcret
  7304  003E6A                     __end_of_velocidadEstandar:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function _pwmDuty *****************
  7308 ;; Defined at:
  7309 ;;		line 20 in file "./pwm.h"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  cicloTrabajo    2    2[BANK0 ] unsigned int 
  7312 ;;  channel         1    4[BANK0 ] unsigned char 
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;  duty            4   10[BANK0 ] long 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7324 ;;      Params:         0       3       0       0       0       0       0       0       0
  7325 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7326 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7327 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7328 ;;Total ram usage:       12 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    4
  7331 ;; This function calls:
  7332 ;;		___fldiv
  7333 ;;		___flmul
  7334 ;;		___fltol
  7335 ;;		___xxtofl
  7336 ;;		_map
  7337 ;; This function is called by:
  7338 ;;		_velocidadEstandar
  7339 ;;		_PID
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           	psect	text33
  7344  00270E                     __ptext33:
  7345                           	opt callstack 0
  7346  00270E                     _pwmDuty:
  7347                           	opt callstack 24
  7348  00270E                     
  7349                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  7350  00270E  C062  F020         	movff	pwmDuty@cicloTrabajo,map@x
  7351  002712  C063  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  7352  002716  6A22               	clrf	(map@x+2)^0,c
  7353  002718  6A23               	clrf	(map@x+3)^0,c
  7354  00271A  0E00               	movlw	0
  7355  00271C  6E24               	movwf	map@in_min^0,c
  7356  00271E  0E00               	movlw	0
  7357  002720  6E25               	movwf	(map@in_min+1)^0,c
  7358  002722  0E00               	movlw	0
  7359  002724  6E26               	movwf	(map@in_min+2)^0,c
  7360  002726  0E00               	movlw	0
  7361  002728  6E27               	movwf	(map@in_min+3)^0,c
  7362  00272A  0E64               	movlw	100
  7363  00272C  6E28               	movwf	map@in_max^0,c
  7364  00272E  0E00               	movlw	0
  7365  002730  6E29               	movwf	(map@in_max+1)^0,c
  7366  002732  0E00               	movlw	0
  7367  002734  6E2A               	movwf	(map@in_max+2)^0,c
  7368  002736  0E00               	movlw	0
  7369  002738  6E2B               	movwf	(map@in_max+3)^0,c
  7370  00273A  0E00               	movlw	0
  7371  00273C  6E2C               	movwf	map@out_min^0,c
  7372  00273E  0E00               	movlw	0
  7373  002740  6E2D               	movwf	(map@out_min+1)^0,c
  7374  002742  0E00               	movlw	0
  7375  002744  6E2E               	movwf	(map@out_min+2)^0,c
  7376  002746  0E00               	movlw	0
  7377  002748  6E2F               	movwf	(map@out_min+3)^0,c
  7378  00274A  0EFF               	movlw	255
  7379  00274C  6E30               	movwf	map@out_max^0,c
  7380  00274E  0E03               	movlw	3
  7381  002750  6E31               	movwf	(map@out_max+1)^0,c
  7382  002752  0E00               	movlw	0
  7383  002754  6E32               	movwf	(map@out_max+2)^0,c
  7384  002756  0E00               	movlw	0
  7385  002758  6E33               	movwf	(map@out_max+3)^0,c
  7386  00275A  EC66  F01B         	call	_map	;wreg free
  7387  00275E  C020  F06A         	movff	?_map,pwmDuty@duty
  7388  002762  C021  F06B         	movff	?_map+1,pwmDuty@duty+1
  7389  002766  C022  F06C         	movff	?_map+2,pwmDuty@duty+2
  7390  00276A  C023  F06D         	movff	?_map+3,pwmDuty@duty+3
  7391  00276E                     
  7392                           ;./pwm.h: 24:     if (duty < 1024) {
  7393  00276E  0100               	movlb	0	; () banked
  7394  002770  BF6D               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  7395  002772  EFC7  F013         	goto	u8910
  7396  002776  516D               	movf	(pwmDuty@duty+3)& (0+255),w,b
  7397  002778  116C               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  7398  00277A  E107               	bnz	u8911
  7399  00277C  0E04               	movlw	4
  7400  00277E  5D6B               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  7401  002780  B0D8               	btfsc	status,0,c
  7402  002782  EFC5  F013         	goto	u8911
  7403  002786  EFC7  F013         	goto	u8910
  7404  00278A                     u8911:
  7405  00278A  EF64  F014         	goto	l141
  7406  00278E                     u8910:
  7407  00278E                     
  7408                           ; BSR set to: 0
  7409                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  7410  00278E  0E00               	movlw	0
  7411  002790  6E38               	movwf	___flmul@a^0,c
  7412  002792  0E00               	movlw	0
  7413  002794  6E39               	movwf	(___flmul@a+1)^0,c
  7414  002796  0EFA               	movlw	250
  7415  002798  6E3A               	movwf	(___flmul@a+2)^0,c
  7416  00279A  0E43               	movlw	67
  7417  00279C  6E3B               	movwf	(___flmul@a+3)^0,c
  7418  00279E  0E00               	movlw	0
  7419  0027A0  6E1F               	movwf	___fldiv@a^0,c
  7420  0027A2  0EC0               	movlw	192
  7421  0027A4  6E20               	movwf	(___fldiv@a+1)^0,c
  7422  0027A6  0E7F               	movlw	127
  7423  0027A8  6E21               	movwf	(___fldiv@a+2)^0,c
  7424  0027AA  0E44               	movlw	68
  7425  0027AC  6E22               	movwf	(___fldiv@a+3)^0,c
  7426  0027AE  C06A  F00D         	movff	pwmDuty@duty,___xxtofl@val
  7427  0027B2  C06B  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  7428  0027B6  C06C  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  7429  0027BA  C06D  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  7430  0027BE  0E01               	movlw	1
  7431  0027C0  EC65  F014         	call	___xxtofl
  7432  0027C4  C00D  F01B         	movff	?___xxtofl,___fldiv@b
  7433  0027C8  C00E  F01C         	movff	?___xxtofl+1,___fldiv@b+1
  7434  0027CC  C00F  F01D         	movff	?___xxtofl+2,___fldiv@b+2
  7435  0027D0  C010  F01E         	movff	?___xxtofl+3,___fldiv@b+3
  7436  0027D4  ECB1  F010         	call	___fldiv	;wreg free
  7437  0027D8  C01B  F034         	movff	?___fldiv,___flmul@b
  7438  0027DC  C01C  F035         	movff	?___fldiv+1,___flmul@b+1
  7439  0027E0  C01D  F036         	movff	?___fldiv+2,___flmul@b+2
  7440  0027E4  C01E  F037         	movff	?___fldiv+3,___flmul@b+3
  7441  0027E8  EC9C  F00E         	call	___flmul	;wreg free
  7442  0027EC  C034  F04D         	movff	?___flmul,___fltol@f1
  7443  0027F0  C035  F04E         	movff	?___flmul+1,___fltol@f1+1
  7444  0027F4  C036  F04F         	movff	?___flmul+2,___fltol@f1+2
  7445  0027F8  C037  F050         	movff	?___flmul+3,___fltol@f1+3
  7446  0027FC  EC3E  F017         	call	___fltol	;wreg free
  7447  002800  C04D  F06A         	movff	?___fltol,pwmDuty@duty
  7448  002804  C04E  F06B         	movff	?___fltol+1,pwmDuty@duty+1
  7449  002808  C04F  F06C         	movff	?___fltol+2,pwmDuty@duty+2
  7450  00280C  C050  F06D         	movff	?___fltol+3,pwmDuty@duty+3
  7451                           
  7452                           ;./pwm.h: 28:         switch (channel) {
  7453  002810  EF4E  F014         	goto	l7269
  7454  002814                     l7263:
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  7458  002814  0E02               	movlw	2
  7459  002816  6F65               	movwf	??_pwmDuty& (0+255),b
  7460  002818  C06A  F066         	movff	pwmDuty@duty,??_pwmDuty+1
  7461  00281C  C06B  F067         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7462  002820  C06C  F068         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7463  002824  C06D  F069         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7464  002828                     u8925:
  7465  002828  6765               	tstfsz	??_pwmDuty& (0+255),b
  7466  00282A  EF19  F014         	goto	u8926
  7467  00282E  EF21  F014         	goto	u8927
  7468  002832                     u8926:
  7469  002832  3569               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7470  002834  3369               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7471  002836  3368               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7472  002838  3367               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7473  00283A  3366               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7474  00283C  2F65               	decfsz	??_pwmDuty& (0+255),f,b
  7475  00283E  EF14  F014         	goto	u8925
  7476  002842                     u8927:
  7477  002842  0100               	movlb	0	; () banked
  7478  002844  5166               	movf	(??_pwmDuty+1)& (0+255),w,b
  7479  002846  6EBE               	movwf	190,c	;volatile
  7480                           
  7481                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  7482  002848  0ECF               	movlw	207
  7483  00284A  16BD               	andwf	189,f,c	;volatile
  7484                           
  7485                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  7486  00284C  396A               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7487  00284E  0BF0               	andlw	240
  7488  002850  0B30               	andlw	48
  7489  002852  12BD               	iorwf	189,f,c	;volatile
  7490                           
  7491                           ;./pwm.h: 34:                 break;
  7492  002854  EF64  F014         	goto	l141
  7493  002858                     l7265:
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  7497  002858  0E02               	movlw	2
  7498  00285A  6F65               	movwf	??_pwmDuty& (0+255),b
  7499  00285C  C06A  F066         	movff	pwmDuty@duty,??_pwmDuty+1
  7500  002860  C06B  F067         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7501  002864  C06C  F068         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7502  002868  C06D  F069         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7503  00286C                     u8935:
  7504  00286C  6765               	tstfsz	??_pwmDuty& (0+255),b
  7505  00286E  EF3B  F014         	goto	u8936
  7506  002872  EF43  F014         	goto	u8937
  7507  002876                     u8936:
  7508  002876  3569               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7509  002878  3369               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7510  00287A  3368               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7511  00287C  3367               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7512  00287E  3366               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7513  002880  2F65               	decfsz	??_pwmDuty& (0+255),f,b
  7514  002882  EF36  F014         	goto	u8935
  7515  002886                     u8937:
  7516  002886  0100               	movlb	0	; () banked
  7517  002888  5166               	movf	(??_pwmDuty+1)& (0+255),w,b
  7518  00288A  6EBB               	movwf	187,c	;volatile
  7519                           
  7520                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  7521  00288C  0ECF               	movlw	207
  7522  00288E  16BA               	andwf	186,f,c	;volatile
  7523                           
  7524                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  7525  002890  396A               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7526  002892  0BF0               	andlw	240
  7527  002894  0B30               	andlw	48
  7528  002896  12BA               	iorwf	186,f,c	;volatile
  7529                           
  7530                           ;./pwm.h: 40:                 break;
  7531  002898  EF64  F014         	goto	l141
  7532  00289C                     l7269:
  7533  00289C  0100               	movlb	0	; () banked
  7534  00289E  5164               	movf	pwmDuty@channel& (0+255),w,b
  7535  0028A0  6F65               	movwf	??_pwmDuty& (0+255),b
  7536  0028A2  6B66               	clrf	(??_pwmDuty+1)& (0+255),b
  7537                           
  7538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7539                           ; Switch size 1, requested type "simple"
  7540                           ; Number of cases is 1, Range of values is 0 to 0
  7541                           ; switch strategies available:
  7542                           ; Name         Instructions Cycles
  7543                           ; simple_byte            4     3 (average)
  7544                           ;	Chosen strategy is simple_byte
  7545  0028A4  5166               	movf	(??_pwmDuty+1)& (0+255),w,b
  7546  0028A6  0A00               	xorlw	0	; case 0
  7547  0028A8  B4D8               	btfsc	status,2,c
  7548  0028AA  EF59  F014         	goto	l7997
  7549  0028AE  EF64  F014         	goto	l141
  7550  0028B2                     l7997:
  7551                           
  7552                           ; BSR set to: 0
  7553                           ; Switch size 1, requested type "simple"
  7554                           ; Number of cases is 2, Range of values is 1 to 2
  7555                           ; switch strategies available:
  7556                           ; Name         Instructions Cycles
  7557                           ; simple_byte            7     4 (average)
  7558                           ;	Chosen strategy is simple_byte
  7559  0028B2  5165               	movf	??_pwmDuty& (0+255),w,b
  7560  0028B4  0A01               	xorlw	1	; case 1
  7561  0028B6  B4D8               	btfsc	status,2,c
  7562  0028B8  EF0A  F014         	goto	l7263
  7563  0028BC  0A03               	xorlw	3	; case 2
  7564  0028BE  B4D8               	btfsc	status,2,c
  7565  0028C0  EF2C  F014         	goto	l7265
  7566  0028C4  EF64  F014         	goto	l141
  7567  0028C8                     l141:
  7568                           
  7569                           ; BSR set to: 0
  7570  0028C8  0012               	return		;funcret
  7571  0028CA                     __end_of_pwmDuty:
  7572                           	opt callstack 0
  7573                           
  7574 ;; *************** function _map *****************
  7575 ;; Defined at:
  7576 ;;		line 16 in file "./pwm.h"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  x               4   31[COMRAM] long 
  7579 ;;  in_min          4   35[COMRAM] long 
  7580 ;;  in_max          4   39[COMRAM] long 
  7581 ;;  out_min         4   43[COMRAM] long 
  7582 ;;  out_max         4   47[COMRAM] long 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;		None
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  4   31[COMRAM] long 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0, cstack
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7594 ;;      Params:        20       0       0       0       0       0       0       0       0
  7595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7597 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7598 ;;Total ram usage:       20 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; Hardware stack levels required when called:    3
  7601 ;; This function calls:
  7602 ;;		___aldiv
  7603 ;;		___lmul
  7604 ;; This function is called by:
  7605 ;;		_pwmDuty
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text34
  7610  0036CC                     __ptext34:
  7611                           	opt callstack 0
  7612  0036CC                     _map:
  7613                           	opt callstack 24
  7614  0036CC                     
  7615                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  7616  0036CC  5024               	movf	map@in_min^0,w,c
  7617  0036CE  5C20               	subwf	map@x^0,w,c
  7618  0036D0  6E06               	movwf	___lmul@multiplier^0,c
  7619  0036D2  5025               	movf	(map@in_min+1)^0,w,c
  7620  0036D4  5821               	subwfb	(map@x+1)^0,w,c
  7621  0036D6  6E07               	movwf	(___lmul@multiplier+1)^0,c
  7622  0036D8  5026               	movf	(map@in_min+2)^0,w,c
  7623  0036DA  5822               	subwfb	(map@x+2)^0,w,c
  7624  0036DC  6E08               	movwf	(___lmul@multiplier+2)^0,c
  7625  0036DE  5027               	movf	(map@in_min+3)^0,w,c
  7626  0036E0  5823               	subwfb	(map@x+3)^0,w,c
  7627  0036E2  6E09               	movwf	(___lmul@multiplier+3)^0,c
  7628  0036E4  502C               	movf	map@out_min^0,w,c
  7629  0036E6  5C30               	subwf	map@out_max^0,w,c
  7630  0036E8  6E0A               	movwf	___lmul@multiplicand^0,c
  7631  0036EA  502D               	movf	(map@out_min+1)^0,w,c
  7632  0036EC  5831               	subwfb	(map@out_max+1)^0,w,c
  7633  0036EE  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  7634  0036F0  502E               	movf	(map@out_min+2)^0,w,c
  7635  0036F2  5832               	subwfb	(map@out_max+2)^0,w,c
  7636  0036F4  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  7637  0036F6  502F               	movf	(map@out_min+3)^0,w,c
  7638  0036F8  5833               	subwfb	(map@out_max+3)^0,w,c
  7639  0036FA  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  7640  0036FC  EC4D  F01C         	call	___lmul	;wreg free
  7641  003700  C006  F012         	movff	?___lmul,___aldiv@dividend
  7642  003704  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  7643  003708  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  7644  00370C  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  7645  003710  5024               	movf	map@in_min^0,w,c
  7646  003712  5C28               	subwf	map@in_max^0,w,c
  7647  003714  6E16               	movwf	___aldiv@divisor^0,c
  7648  003716  5025               	movf	(map@in_min+1)^0,w,c
  7649  003718  5829               	subwfb	(map@in_max+1)^0,w,c
  7650  00371A  6E17               	movwf	(___aldiv@divisor+1)^0,c
  7651  00371C  5026               	movf	(map@in_min+2)^0,w,c
  7652  00371E  582A               	subwfb	(map@in_max+2)^0,w,c
  7653  003720  6E18               	movwf	(___aldiv@divisor+2)^0,c
  7654  003722  5027               	movf	(map@in_min+3)^0,w,c
  7655  003724  582B               	subwfb	(map@in_max+3)^0,w,c
  7656  003726  6E19               	movwf	(___aldiv@divisor+3)^0,c
  7657  003728  ECB8  F016         	call	___aldiv	;wreg free
  7658  00372C  502C               	movf	map@out_min^0,w,c
  7659  00372E  2412               	addwf	?___aldiv^0,w,c
  7660  003730  6E20               	movwf	?_map^0,c
  7661  003732  502D               	movf	(map@out_min+1)^0,w,c
  7662  003734  2013               	addwfc	(?___aldiv+1)^0,w,c
  7663  003736  6E21               	movwf	(?_map+1)^0,c
  7664  003738  502E               	movf	(map@out_min+2)^0,w,c
  7665  00373A  2014               	addwfc	(?___aldiv+2)^0,w,c
  7666  00373C  6E22               	movwf	(?_map+2)^0,c
  7667  00373E  502F               	movf	(map@out_min+3)^0,w,c
  7668  003740  2015               	addwfc	(?___aldiv+3)^0,w,c
  7669  003742  6E23               	movwf	(?_map+3)^0,c
  7670  003744  0012               	return		;funcret
  7671  003746                     __end_of_map:
  7672                           	opt callstack 0
  7673                           
  7674 ;; *************** function ___lmul *****************
  7675 ;; Defined at:
  7676 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  multiplier      4    5[COMRAM] unsigned long 
  7679 ;;  multiplicand    4    9[COMRAM] unsigned long 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;  product         4   13[COMRAM] unsigned long 
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  4    5[COMRAM] unsigned long 
  7684 ;; Registers used:
  7685 ;;		wreg, status,2, status,0
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7691 ;;      Params:         8       0       0       0       0       0       0       0       0
  7692 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7694 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7695 ;;Total ram usage:       12 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:    2
  7698 ;; This function calls:
  7699 ;;		Nothing
  7700 ;; This function is called by:
  7701 ;;		_map
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text35
  7706  00389A                     __ptext35:
  7707                           	opt callstack 0
  7708  00389A                     ___lmul:
  7709                           	opt callstack 24
  7710  00389A  0E00               	movlw	0
  7711  00389C  6E0E               	movwf	___lmul@product^0,c
  7712  00389E  0E00               	movlw	0
  7713  0038A0  6E0F               	movwf	(___lmul@product+1)^0,c
  7714  0038A2  0E00               	movlw	0
  7715  0038A4  6E10               	movwf	(___lmul@product+2)^0,c
  7716  0038A6  0E00               	movlw	0
  7717  0038A8  6E11               	movwf	(___lmul@product+3)^0,c
  7718  0038AA                     l4957:
  7719  0038AA  A006               	btfss	___lmul@multiplier^0,0,c
  7720  0038AC  EF5A  F01C         	goto	u5471
  7721  0038B0  EF5C  F01C         	goto	u5470
  7722  0038B4                     u5471:
  7723  0038B4  EF64  F01C         	goto	l4961
  7724  0038B8                     u5470:
  7725  0038B8  500A               	movf	___lmul@multiplicand^0,w,c
  7726  0038BA  260E               	addwf	___lmul@product^0,f,c
  7727  0038BC  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  7728  0038BE  220F               	addwfc	(___lmul@product+1)^0,f,c
  7729  0038C0  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  7730  0038C2  2210               	addwfc	(___lmul@product+2)^0,f,c
  7731  0038C4  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  7732  0038C6  2211               	addwfc	(___lmul@product+3)^0,f,c
  7733  0038C8                     l4961:
  7734  0038C8  90D8               	bcf	status,0,c
  7735  0038CA  360A               	rlcf	___lmul@multiplicand^0,f,c
  7736  0038CC  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7737  0038CE  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7738  0038D0  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7739  0038D2  90D8               	bcf	status,0,c
  7740  0038D4  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  7741  0038D6  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  7742  0038D8  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  7743  0038DA  3206               	rrcf	___lmul@multiplier^0,f,c
  7744  0038DC  5006               	movf	___lmul@multiplier^0,w,c
  7745  0038DE  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  7746  0038E0  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  7747  0038E2  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  7748  0038E4  A4D8               	btfss	status,2,c
  7749  0038E6  EF77  F01C         	goto	u5481
  7750  0038EA  EF79  F01C         	goto	u5480
  7751  0038EE                     u5481:
  7752  0038EE  EF55  F01C         	goto	l4957
  7753  0038F2                     u5480:
  7754  0038F2  C00E  F006         	movff	___lmul@product,?___lmul
  7755  0038F6  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  7756  0038FA  C010  F008         	movff	___lmul@product+2,?___lmul+2
  7757  0038FE  C011  F009         	movff	___lmul@product+3,?___lmul+3
  7758  003902  0012               	return		;funcret
  7759  003904                     __end_of___lmul:
  7760                           	opt callstack 0
  7761                           
  7762 ;; *************** function ___fltol *****************
  7763 ;; Defined at:
  7764 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  f1              4   76[COMRAM] unsigned long 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  exp1            1    1[BANK0 ] unsigned char 
  7769 ;;  sign1           1    0[BANK0 ] unsigned char 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  4   76[COMRAM] long 
  7772 ;; Registers used:
  7773 ;;		wreg, status,2, status,0
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7779 ;;      Params:         4       0       0       0       0       0       0       0       0
  7780 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7781 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7782 ;;      Totals:         8       2       0       0       0       0       0       0       0
  7783 ;;Total ram usage:       10 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    2
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_pwmDuty
  7790 ;;		_efgtoa
  7791 ;;		_PID
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text36
  7796  002E7C                     __ptext36:
  7797                           	opt callstack 0
  7798  002E7C                     ___fltol:
  7799                           	opt callstack 22
  7800  002E7C  344F               	rlcf	(___fltol@f1+2)^0,w,c
  7801  002E7E  3450               	rlcf	(___fltol@f1+3)^0,w,c
  7802  002E80  0100               	movlb	0	; () banked
  7803  002E82  6F61               	movwf	___fltol@exp1& (0+255),b
  7804  002E84  5161               	movf	___fltol@exp1& (0+255),w,b
  7805  002E86  A4D8               	btfss	status,2,c
  7806  002E88  EF48  F017         	goto	u7891
  7807  002E8C  EF4A  F017         	goto	u7890
  7808  002E90                     u7891:
  7809  002E90  EF54  F017         	goto	l6679
  7810  002E94                     u7890:
  7811  002E94                     l6675:
  7812                           
  7813                           ; BSR set to: 0
  7814  002E94  0E00               	movlw	0
  7815  002E96  6E4D               	movwf	?___fltol^0,c
  7816  002E98  0E00               	movlw	0
  7817  002E9A  6E4E               	movwf	(?___fltol+1)^0,c
  7818  002E9C  0E00               	movlw	0
  7819  002E9E  6E4F               	movwf	(?___fltol+2)^0,c
  7820  002EA0  0E00               	movlw	0
  7821  002EA2  6E50               	movwf	(?___fltol+3)^0,c
  7822  002EA4  EFC1  F017         	goto	l1001
  7823  002EA8                     l6679:
  7824                           
  7825                           ; BSR set to: 0
  7826  002EA8  C04D  F051         	movff	___fltol@f1,??___fltol
  7827  002EAC  C04E  F052         	movff	___fltol@f1+1,??___fltol+1
  7828  002EB0  C04F  F053         	movff	___fltol@f1+2,??___fltol+2
  7829  002EB4  C050  F054         	movff	___fltol@f1+3,??___fltol+3
  7830  002EB8  0E20               	movlw	32
  7831  002EBA  EF64  F017         	goto	u7900
  7832  002EBE                     u7905:
  7833  002EBE  90D8               	bcf	status,0,c
  7834  002EC0  3254               	rrcf	(??___fltol+3)^0,f,c
  7835  002EC2  3253               	rrcf	(??___fltol+2)^0,f,c
  7836  002EC4  3252               	rrcf	(??___fltol+1)^0,f,c
  7837  002EC6  3251               	rrcf	??___fltol^0,f,c
  7838  002EC8                     u7900:
  7839  002EC8  2EE8               	decfsz	wreg,f,c
  7840  002ECA  EF5F  F017         	goto	u7905
  7841  002ECE  5051               	movf	??___fltol^0,w,c
  7842  002ED0  6F60               	movwf	___fltol@sign1& (0+255),b
  7843  002ED2                     
  7844                           ; BSR set to: 0
  7845  002ED2  8E4F               	bsf	(___fltol@f1+2)^0,7,c
  7846  002ED4                     
  7847                           ; BSR set to: 0
  7848  002ED4  0EFF               	movlw	255
  7849  002ED6  164D               	andwf	___fltol@f1^0,f,c
  7850  002ED8  0EFF               	movlw	255
  7851  002EDA  164E               	andwf	(___fltol@f1+1)^0,f,c
  7852  002EDC  0EFF               	movlw	255
  7853  002EDE  164F               	andwf	(___fltol@f1+2)^0,f,c
  7854  002EE0  0E00               	movlw	0
  7855  002EE2  1650               	andwf	(___fltol@f1+3)^0,f,c
  7856  002EE4                     
  7857                           ; BSR set to: 0
  7858  002EE4  0E96               	movlw	150
  7859  002EE6  5F61               	subwf	___fltol@exp1& (0+255),f,b
  7860  002EE8                     
  7861                           ; BSR set to: 0
  7862  002EE8  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  7863  002EEA  EF7B  F017         	goto	u7910
  7864  002EEE  EF79  F017         	goto	u7911
  7865  002EF2                     u7911:
  7866  002EF2  EF91  F017         	goto	l6699
  7867  002EF6                     u7910:
  7868  002EF6                     
  7869                           ; BSR set to: 0
  7870  002EF6  5161               	movf	___fltol@exp1& (0+255),w,b
  7871  002EF8  0A80               	xorlw	128
  7872  002EFA  0F97               	addlw	151
  7873  002EFC  B0D8               	btfsc	status,0,c
  7874  002EFE  EF83  F017         	goto	u7921
  7875  002F02  EF85  F017         	goto	u7920
  7876  002F06                     u7921:
  7877  002F06  EF87  F017         	goto	l6695
  7878  002F0A                     u7920:
  7879  002F0A  EF4A  F017         	goto	l6675
  7880  002F0E                     l6695:
  7881                           
  7882                           ; BSR set to: 0
  7883  002F0E  90D8               	bcf	status,0,c
  7884  002F10  3250               	rrcf	(___fltol@f1+3)^0,f,c
  7885  002F12  324F               	rrcf	(___fltol@f1+2)^0,f,c
  7886  002F14  324E               	rrcf	(___fltol@f1+1)^0,f,c
  7887  002F16  324D               	rrcf	___fltol@f1^0,f,c
  7888  002F18                     
  7889                           ; BSR set to: 0
  7890  002F18  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  7891  002F1A  EF87  F017         	goto	l6695
  7892  002F1E  EFA9  F017         	goto	l6709
  7893  002F22                     l6699:
  7894                           
  7895                           ; BSR set to: 0
  7896  002F22  0E1F               	movlw	31
  7897  002F24  6561               	cpfsgt	___fltol@exp1& (0+255),b
  7898  002F26  EF97  F017         	goto	u7931
  7899  002F2A  EF99  F017         	goto	u7930
  7900  002F2E                     u7931:
  7901  002F2E  EFA1  F017         	goto	l6707
  7902  002F32                     u7930:
  7903  002F32  EF4A  F017         	goto	l6675
  7904  002F36                     l6705:
  7905                           
  7906                           ; BSR set to: 0
  7907  002F36  90D8               	bcf	status,0,c
  7908  002F38  364D               	rlcf	___fltol@f1^0,f,c
  7909  002F3A  364E               	rlcf	(___fltol@f1+1)^0,f,c
  7910  002F3C  364F               	rlcf	(___fltol@f1+2)^0,f,c
  7911  002F3E  3650               	rlcf	(___fltol@f1+3)^0,f,c
  7912  002F40  0761               	decf	___fltol@exp1& (0+255),f,b
  7913  002F42                     l6707:
  7914                           
  7915                           ; BSR set to: 0
  7916  002F42  5161               	movf	___fltol@exp1& (0+255),w,b
  7917  002F44  A4D8               	btfss	status,2,c
  7918  002F46  EFA7  F017         	goto	u7941
  7919  002F4A  EFA9  F017         	goto	u7940
  7920  002F4E                     u7941:
  7921  002F4E  EF9B  F017         	goto	l6705
  7922  002F52                     u7940:
  7923  002F52                     l6709:
  7924                           
  7925                           ; BSR set to: 0
  7926  002F52  5160               	movf	___fltol@sign1& (0+255),w,b
  7927  002F54  B4D8               	btfsc	status,2,c
  7928  002F56  EFAF  F017         	goto	u7951
  7929  002F5A  EFB1  F017         	goto	u7950
  7930  002F5E                     u7951:
  7931  002F5E  EFB9  F017         	goto	l6713
  7932  002F62                     u7950:
  7933  002F62                     
  7934                           ; BSR set to: 0
  7935  002F62  1E50               	comf	(___fltol@f1+3)^0,f,c
  7936  002F64  1E4F               	comf	(___fltol@f1+2)^0,f,c
  7937  002F66  1E4E               	comf	(___fltol@f1+1)^0,f,c
  7938  002F68  6C4D               	negf	___fltol@f1^0,c
  7939  002F6A  0E00               	movlw	0
  7940  002F6C  224E               	addwfc	(___fltol@f1+1)^0,f,c
  7941  002F6E  224F               	addwfc	(___fltol@f1+2)^0,f,c
  7942  002F70  2250               	addwfc	(___fltol@f1+3)^0,f,c
  7943  002F72                     l6713:
  7944                           
  7945                           ; BSR set to: 0
  7946  002F72  C04D  F04D         	movff	___fltol@f1,?___fltol
  7947  002F76  C04E  F04E         	movff	___fltol@f1+1,?___fltol+1
  7948  002F7A  C04F  F04F         	movff	___fltol@f1+2,?___fltol+2
  7949  002F7E  C050  F050         	movff	___fltol@f1+3,?___fltol+3
  7950  002F82                     l1001:
  7951                           
  7952                           ; BSR set to: 0
  7953  002F82  0012               	return		;funcret
  7954  002F84                     __end_of___fltol:
  7955                           	opt callstack 0
  7956                           
  7957 ;; *************** function ___flmul *****************
  7958 ;; Defined at:
  7959 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  b               4   51[COMRAM] long 
  7962 ;;  a               4   55[COMRAM] long 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  prod            4   70[COMRAM] struct .
  7965 ;;  grs             4   65[COMRAM] unsigned long 
  7966 ;;  temp            2   74[COMRAM] struct .
  7967 ;;  bexp            1   69[COMRAM] unsigned char 
  7968 ;;  aexp            1   64[COMRAM] unsigned char 
  7969 ;;  sign            1   63[COMRAM] unsigned char 
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  4   51[COMRAM] unsigned char 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0, prodl, prodh
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7979 ;;      Params:         8       0       0       0       0       0       0       0       0
  7980 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7981 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7982 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7983 ;;Total ram usage:       25 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    2
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_pwmDuty
  7990 ;;		_efgtoa
  7991 ;;		_PID
  7992 ;;		_roundf
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           	psect	text37
  7997  001D38                     __ptext37:
  7998                           	opt callstack 0
  7999  001D38                     ___flmul:
  8000                           	opt callstack 22
  8001  001D38  5037               	movf	(___flmul@b+3)^0,w,c
  8002  001D3A  0B80               	andlw	128
  8003  001D3C  6E40               	movwf	___flmul@sign^0,c
  8004  001D3E  5037               	movf	(___flmul@b+3)^0,w,c
  8005  001D40  2437               	addwf	(___flmul@b+3)^0,w,c
  8006  001D42  6E46               	movwf	___flmul@bexp^0,c
  8007  001D44  AE36               	btfss	(___flmul@b+2)^0,7,c
  8008  001D46  EFA7  F00E         	goto	u7491
  8009  001D4A  EFA9  F00E         	goto	u7490
  8010  001D4E                     u7491:
  8011  001D4E  EFAA  F00E         	goto	l6417
  8012  001D52                     u7490:
  8013  001D52  8046               	bsf	___flmul@bexp^0,0,c
  8014  001D54                     l6417:
  8015  001D54  5046               	movf	___flmul@bexp^0,w,c
  8016  001D56  B4D8               	btfsc	status,2,c
  8017  001D58  EFB0  F00E         	goto	u7501
  8018  001D5C  EFB2  F00E         	goto	u7500
  8019  001D60                     u7501:
  8020  001D60  EFC5  F00E         	goto	l6425
  8021  001D64                     u7500:
  8022  001D64  2846               	incf	___flmul@bexp^0,w,c
  8023  001D66  A4D8               	btfss	status,2,c
  8024  001D68  EFB8  F00E         	goto	u7511
  8025  001D6C  EFBA  F00E         	goto	u7510
  8026  001D70                     u7511:
  8027  001D70  EFC2  F00E         	goto	l6423
  8028  001D74                     u7510:
  8029  001D74  0E00               	movlw	0
  8030  001D76  6E34               	movwf	___flmul@b^0,c
  8031  001D78  0E00               	movlw	0
  8032  001D7A  6E35               	movwf	(___flmul@b+1)^0,c
  8033  001D7C  0E00               	movlw	0
  8034  001D7E  6E36               	movwf	(___flmul@b+2)^0,c
  8035  001D80  0E00               	movlw	0
  8036  001D82  6E37               	movwf	(___flmul@b+3)^0,c
  8037  001D84                     l6423:
  8038  001D84  8E36               	bsf	(___flmul@b+2)^0,7,c
  8039  001D86  EFCD  F00E         	goto	l6427
  8040  001D8A                     l6425:
  8041  001D8A  0E00               	movlw	0
  8042  001D8C  6E34               	movwf	___flmul@b^0,c
  8043  001D8E  0E00               	movlw	0
  8044  001D90  6E35               	movwf	(___flmul@b+1)^0,c
  8045  001D92  0E00               	movlw	0
  8046  001D94  6E36               	movwf	(___flmul@b+2)^0,c
  8047  001D96  0E00               	movlw	0
  8048  001D98  6E37               	movwf	(___flmul@b+3)^0,c
  8049  001D9A                     l6427:
  8050  001D9A  503B               	movf	(___flmul@a+3)^0,w,c
  8051  001D9C  0B80               	andlw	128
  8052  001D9E  1A40               	xorwf	___flmul@sign^0,f,c
  8053  001DA0  503B               	movf	(___flmul@a+3)^0,w,c
  8054  001DA2  243B               	addwf	(___flmul@a+3)^0,w,c
  8055  001DA4  6E41               	movwf	___flmul@aexp^0,c
  8056  001DA6  AE3A               	btfss	(___flmul@a+2)^0,7,c
  8057  001DA8  EFD8  F00E         	goto	u7521
  8058  001DAC  EFDA  F00E         	goto	u7520
  8059  001DB0                     u7521:
  8060  001DB0  EFDB  F00E         	goto	l6435
  8061  001DB4                     u7520:
  8062  001DB4  8041               	bsf	___flmul@aexp^0,0,c
  8063  001DB6                     l6435:
  8064  001DB6  5041               	movf	___flmul@aexp^0,w,c
  8065  001DB8  B4D8               	btfsc	status,2,c
  8066  001DBA  EFE1  F00E         	goto	u7531
  8067  001DBE  EFE3  F00E         	goto	u7530
  8068  001DC2                     u7531:
  8069  001DC2  EFF6  F00E         	goto	l6443
  8070  001DC6                     u7530:
  8071  001DC6  2841               	incf	___flmul@aexp^0,w,c
  8072  001DC8  A4D8               	btfss	status,2,c
  8073  001DCA  EFE9  F00E         	goto	u7541
  8074  001DCE  EFEB  F00E         	goto	u7540
  8075  001DD2                     u7541:
  8076  001DD2  EFF3  F00E         	goto	l6441
  8077  001DD6                     u7540:
  8078  001DD6  0E00               	movlw	0
  8079  001DD8  6E38               	movwf	___flmul@a^0,c
  8080  001DDA  0E00               	movlw	0
  8081  001DDC  6E39               	movwf	(___flmul@a+1)^0,c
  8082  001DDE  0E00               	movlw	0
  8083  001DE0  6E3A               	movwf	(___flmul@a+2)^0,c
  8084  001DE2  0E00               	movlw	0
  8085  001DE4  6E3B               	movwf	(___flmul@a+3)^0,c
  8086  001DE6                     l6441:
  8087  001DE6  8E3A               	bsf	(___flmul@a+2)^0,7,c
  8088  001DE8  EFFE  F00E         	goto	l1318
  8089  001DEC                     l6443:
  8090  001DEC  0E00               	movlw	0
  8091  001DEE  6E38               	movwf	___flmul@a^0,c
  8092  001DF0  0E00               	movlw	0
  8093  001DF2  6E39               	movwf	(___flmul@a+1)^0,c
  8094  001DF4  0E00               	movlw	0
  8095  001DF6  6E3A               	movwf	(___flmul@a+2)^0,c
  8096  001DF8  0E00               	movlw	0
  8097  001DFA  6E3B               	movwf	(___flmul@a+3)^0,c
  8098  001DFC                     l1318:
  8099  001DFC  5041               	movf	___flmul@aexp^0,w,c
  8100  001DFE  B4D8               	btfsc	status,2,c
  8101  001E00  EF04  F00F         	goto	u7551
  8102  001E04  EF06  F00F         	goto	u7550
  8103  001E08                     u7551:
  8104  001E08  EF0E  F00F         	goto	l6447
  8105  001E0C                     u7550:
  8106  001E0C  5046               	movf	___flmul@bexp^0,w,c
  8107  001E0E  A4D8               	btfss	status,2,c
  8108  001E10  EF0C  F00F         	goto	u7561
  8109  001E14  EF0E  F00F         	goto	u7560
  8110  001E18                     u7561:
  8111  001E18  EF18  F00F         	goto	l6451
  8112  001E1C                     u7560:
  8113  001E1C                     l6447:
  8114  001E1C  0E00               	movlw	0
  8115  001E1E  6E34               	movwf	?___flmul^0,c
  8116  001E20  0E00               	movlw	0
  8117  001E22  6E35               	movwf	(?___flmul+1)^0,c
  8118  001E24  0E00               	movlw	0
  8119  001E26  6E36               	movwf	(?___flmul+2)^0,c
  8120  001E28  0E00               	movlw	0
  8121  001E2A  6E37               	movwf	(?___flmul+3)^0,c
  8122  001E2C  EFB0  F010         	goto	l1322
  8123  001E30                     l6451:
  8124  001E30  503A               	movf	(___flmul@a+2)^0,w,c
  8125  001E32  0234               	mulwf	___flmul@b^0,c
  8126  001E34  CFF3 F04B          	movff	prodl,___flmul@temp
  8127  001E38  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8128  001E3C  504B               	movf	___flmul@temp^0,w,c
  8129  001E3E  6E42               	movwf	___flmul@grs^0,c
  8130  001E40  6A43               	clrf	(___flmul@grs+1)^0,c
  8131  001E42  6A44               	clrf	(___flmul@grs+2)^0,c
  8132  001E44  6A45               	clrf	(___flmul@grs+3)^0,c
  8133  001E46  504C               	movf	(___flmul@temp+1)^0,w,c
  8134  001E48  6E47               	movwf	___flmul@prod^0,c
  8135  001E4A  6A48               	clrf	(___flmul@prod+1)^0,c
  8136  001E4C  6A49               	clrf	(___flmul@prod+2)^0,c
  8137  001E4E  6A4A               	clrf	(___flmul@prod+3)^0,c
  8138  001E50  5039               	movf	(___flmul@a+1)^0,w,c
  8139  001E52  0235               	mulwf	(___flmul@b+1)^0,c
  8140  001E54  CFF3 F04B          	movff	prodl,___flmul@temp
  8141  001E58  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8142  001E5C  504B               	movf	___flmul@temp^0,w,c
  8143  001E5E  2642               	addwf	___flmul@grs^0,f,c
  8144  001E60  0E00               	movlw	0
  8145  001E62  2243               	addwfc	(___flmul@grs+1)^0,f,c
  8146  001E64  2244               	addwfc	(___flmul@grs+2)^0,f,c
  8147  001E66  2245               	addwfc	(___flmul@grs+3)^0,f,c
  8148  001E68  504C               	movf	(___flmul@temp+1)^0,w,c
  8149  001E6A  2647               	addwf	___flmul@prod^0,f,c
  8150  001E6C  0E00               	movlw	0
  8151  001E6E  2248               	addwfc	(___flmul@prod+1)^0,f,c
  8152  001E70  2249               	addwfc	(___flmul@prod+2)^0,f,c
  8153  001E72  224A               	addwfc	(___flmul@prod+3)^0,f,c
  8154  001E74  5038               	movf	___flmul@a^0,w,c
  8155  001E76  0236               	mulwf	(___flmul@b+2)^0,c
  8156  001E78  CFF3 F04B          	movff	prodl,___flmul@temp
  8157  001E7C  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8158  001E80  504B               	movf	___flmul@temp^0,w,c
  8159  001E82  2642               	addwf	___flmul@grs^0,f,c
  8160  001E84  0E00               	movlw	0
  8161  001E86  2243               	addwfc	(___flmul@grs+1)^0,f,c
  8162  001E88  2244               	addwfc	(___flmul@grs+2)^0,f,c
  8163  001E8A  2245               	addwfc	(___flmul@grs+3)^0,f,c
  8164  001E8C  504C               	movf	(___flmul@temp+1)^0,w,c
  8165  001E8E  2647               	addwf	___flmul@prod^0,f,c
  8166  001E90  0E00               	movlw	0
  8167  001E92  2248               	addwfc	(___flmul@prod+1)^0,f,c
  8168  001E94  2249               	addwfc	(___flmul@prod+2)^0,f,c
  8169  001E96  224A               	addwfc	(___flmul@prod+3)^0,f,c
  8170  001E98  C044  F045         	movff	___flmul@grs+2,___flmul@grs+3
  8171  001E9C  C043  F044         	movff	___flmul@grs+1,___flmul@grs+2
  8172  001EA0  C042  F043         	movff	___flmul@grs,___flmul@grs+1
  8173  001EA4  6A42               	clrf	___flmul@grs^0,c
  8174  001EA6  5038               	movf	___flmul@a^0,w,c
  8175  001EA8  0235               	mulwf	(___flmul@b+1)^0,c
  8176  001EAA  CFF3 F04B          	movff	prodl,___flmul@temp
  8177  001EAE  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8178  001EB2  504B               	movf	___flmul@temp^0,w,c
  8179  001EB4  2642               	addwf	___flmul@grs^0,f,c
  8180  001EB6  504C               	movf	(___flmul@temp+1)^0,w,c
  8181  001EB8  2243               	addwfc	(___flmul@grs+1)^0,f,c
  8182  001EBA  0E00               	movlw	0
  8183  001EBC  2244               	addwfc	(___flmul@grs+2)^0,f,c
  8184  001EBE  0E00               	movlw	0
  8185  001EC0  2245               	addwfc	(___flmul@grs+3)^0,f,c
  8186  001EC2  5039               	movf	(___flmul@a+1)^0,w,c
  8187  001EC4  0234               	mulwf	___flmul@b^0,c
  8188  001EC6  CFF3 F04B          	movff	prodl,___flmul@temp
  8189  001ECA  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8190  001ECE  504B               	movf	___flmul@temp^0,w,c
  8191  001ED0  2642               	addwf	___flmul@grs^0,f,c
  8192  001ED2  504C               	movf	(___flmul@temp+1)^0,w,c
  8193  001ED4  2243               	addwfc	(___flmul@grs+1)^0,f,c
  8194  001ED6  0E00               	movlw	0
  8195  001ED8  2244               	addwfc	(___flmul@grs+2)^0,f,c
  8196  001EDA  0E00               	movlw	0
  8197  001EDC  2245               	addwfc	(___flmul@grs+3)^0,f,c
  8198  001EDE  C044  F045         	movff	___flmul@grs+2,___flmul@grs+3
  8199  001EE2  C043  F044         	movff	___flmul@grs+1,___flmul@grs+2
  8200  001EE6  C042  F043         	movff	___flmul@grs,___flmul@grs+1
  8201  001EEA  6A42               	clrf	___flmul@grs^0,c
  8202  001EEC  5038               	movf	___flmul@a^0,w,c
  8203  001EEE  0234               	mulwf	___flmul@b^0,c
  8204  001EF0  CFF3 F04B          	movff	prodl,___flmul@temp
  8205  001EF4  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8206  001EF8  504B               	movf	___flmul@temp^0,w,c
  8207  001EFA  2642               	addwf	___flmul@grs^0,f,c
  8208  001EFC  504C               	movf	(___flmul@temp+1)^0,w,c
  8209  001EFE  2243               	addwfc	(___flmul@grs+1)^0,f,c
  8210  001F00  0E00               	movlw	0
  8211  001F02  2244               	addwfc	(___flmul@grs+2)^0,f,c
  8212  001F04  0E00               	movlw	0
  8213  001F06  2245               	addwfc	(___flmul@grs+3)^0,f,c
  8214  001F08  503A               	movf	(___flmul@a+2)^0,w,c
  8215  001F0A  0235               	mulwf	(___flmul@b+1)^0,c
  8216  001F0C  CFF3 F04B          	movff	prodl,___flmul@temp
  8217  001F10  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8218  001F14  504B               	movf	___flmul@temp^0,w,c
  8219  001F16  2647               	addwf	___flmul@prod^0,f,c
  8220  001F18  504C               	movf	(___flmul@temp+1)^0,w,c
  8221  001F1A  2248               	addwfc	(___flmul@prod+1)^0,f,c
  8222  001F1C  0E00               	movlw	0
  8223  001F1E  2249               	addwfc	(___flmul@prod+2)^0,f,c
  8224  001F20  0E00               	movlw	0
  8225  001F22  224A               	addwfc	(___flmul@prod+3)^0,f,c
  8226  001F24  5039               	movf	(___flmul@a+1)^0,w,c
  8227  001F26  0236               	mulwf	(___flmul@b+2)^0,c
  8228  001F28  CFF3 F04B          	movff	prodl,___flmul@temp
  8229  001F2C  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8230  001F30  504B               	movf	___flmul@temp^0,w,c
  8231  001F32  2647               	addwf	___flmul@prod^0,f,c
  8232  001F34  504C               	movf	(___flmul@temp+1)^0,w,c
  8233  001F36  2248               	addwfc	(___flmul@prod+1)^0,f,c
  8234  001F38  0E00               	movlw	0
  8235  001F3A  2249               	addwfc	(___flmul@prod+2)^0,f,c
  8236  001F3C  0E00               	movlw	0
  8237  001F3E  224A               	addwfc	(___flmul@prod+3)^0,f,c
  8238  001F40  503A               	movf	(___flmul@a+2)^0,w,c
  8239  001F42  0236               	mulwf	(___flmul@b+2)^0,c
  8240  001F44  CFF3 F04B          	movff	prodl,___flmul@temp
  8241  001F48  CFF4 F04C          	movff	prodh,___flmul@temp+1
  8242  001F4C  504B               	movf	___flmul@temp^0,w,c
  8243  001F4E  6E3C               	movwf	??___flmul^0,c
  8244  001F50  504C               	movf	(___flmul@temp+1)^0,w,c
  8245  001F52  6E3D               	movwf	(??___flmul+1)^0,c
  8246  001F54  6A3E               	clrf	(??___flmul+2)^0,c
  8247  001F56  6A3F               	clrf	(??___flmul+3)^0,c
  8248  001F58  C03E  F03F         	movff	??___flmul+2,??___flmul+3
  8249  001F5C  C03D  F03E         	movff	??___flmul+1,??___flmul+2
  8250  001F60  C03C  F03D         	movff	??___flmul,??___flmul+1
  8251  001F64  6A3C               	clrf	??___flmul^0,c
  8252  001F66  503C               	movf	??___flmul^0,w,c
  8253  001F68  2647               	addwf	___flmul@prod^0,f,c
  8254  001F6A  503D               	movf	(??___flmul+1)^0,w,c
  8255  001F6C  2248               	addwfc	(___flmul@prod+1)^0,f,c
  8256  001F6E  503E               	movf	(??___flmul+2)^0,w,c
  8257  001F70  2249               	addwfc	(___flmul@prod+2)^0,f,c
  8258  001F72  503F               	movf	(??___flmul+3)^0,w,c
  8259  001F74  224A               	addwfc	(___flmul@prod+3)^0,f,c
  8260  001F76  C042  F03C         	movff	___flmul@grs,??___flmul
  8261  001F7A  C043  F03D         	movff	___flmul@grs+1,??___flmul+1
  8262  001F7E  C044  F03E         	movff	___flmul@grs+2,??___flmul+2
  8263  001F82  C045  F03F         	movff	___flmul@grs+3,??___flmul+3
  8264  001F86  0E19               	movlw	25
  8265  001F88  EFCB  F00F         	goto	u7570
  8266  001F8C                     u7575:
  8267  001F8C  90D8               	bcf	status,0,c
  8268  001F8E  323F               	rrcf	(??___flmul+3)^0,f,c
  8269  001F90  323E               	rrcf	(??___flmul+2)^0,f,c
  8270  001F92  323D               	rrcf	(??___flmul+1)^0,f,c
  8271  001F94  323C               	rrcf	??___flmul^0,f,c
  8272  001F96                     u7570:
  8273  001F96  2EE8               	decfsz	wreg,f,c
  8274  001F98  EFC6  F00F         	goto	u7575
  8275  001F9C  503C               	movf	??___flmul^0,w,c
  8276  001F9E  2647               	addwf	___flmul@prod^0,f,c
  8277  001FA0  503D               	movf	(??___flmul+1)^0,w,c
  8278  001FA2  2248               	addwfc	(___flmul@prod+1)^0,f,c
  8279  001FA4  503E               	movf	(??___flmul+2)^0,w,c
  8280  001FA6  2249               	addwfc	(___flmul@prod+2)^0,f,c
  8281  001FA8  503F               	movf	(??___flmul+3)^0,w,c
  8282  001FAA  224A               	addwfc	(___flmul@prod+3)^0,f,c
  8283  001FAC  C044  F045         	movff	___flmul@grs+2,___flmul@grs+3
  8284  001FB0  C043  F044         	movff	___flmul@grs+1,___flmul@grs+2
  8285  001FB4  C042  F043         	movff	___flmul@grs,___flmul@grs+1
  8286  001FB8  6A42               	clrf	___flmul@grs^0,c
  8287  001FBA  5041               	movf	___flmul@aexp^0,w,c
  8288  001FBC  C046  F03C         	movff	___flmul@bexp,??___flmul
  8289  001FC0  6A3D               	clrf	(??___flmul+1)^0,c
  8290  001FC2  263C               	addwf	??___flmul^0,f,c
  8291  001FC4  0E00               	movlw	0
  8292  001FC6  223D               	addwfc	(??___flmul+1)^0,f,c
  8293  001FC8  0E82               	movlw	130
  8294  001FCA  243C               	addwf	??___flmul^0,w,c
  8295  001FCC  6E4B               	movwf	___flmul@temp^0,c
  8296  001FCE  0EFF               	movlw	255
  8297  001FD0  203D               	addwfc	(??___flmul+1)^0,w,c
  8298  001FD2  6E4C               	movwf	(___flmul@temp+1)^0,c
  8299  001FD4  EF01  F010         	goto	l6499
  8300  001FD8                     l6493:
  8301  001FD8  90D8               	bcf	status,0,c
  8302  001FDA  3647               	rlcf	___flmul@prod^0,f,c
  8303  001FDC  3648               	rlcf	(___flmul@prod+1)^0,f,c
  8304  001FDE  3649               	rlcf	(___flmul@prod+2)^0,f,c
  8305  001FE0  364A               	rlcf	(___flmul@prod+3)^0,f,c
  8306  001FE2  AE45               	btfss	(___flmul@grs+3)^0,7,c
  8307  001FE4  EFF6  F00F         	goto	u7581
  8308  001FE8  EFF8  F00F         	goto	u7580
  8309  001FEC                     u7581:
  8310  001FEC  EFF9  F00F         	goto	l1325
  8311  001FF0                     u7580:
  8312  001FF0  8047               	bsf	___flmul@prod^0,0,c
  8313  001FF2                     l1325:
  8314  001FF2  90D8               	bcf	status,0,c
  8315  001FF4  3642               	rlcf	___flmul@grs^0,f,c
  8316  001FF6  3643               	rlcf	(___flmul@grs+1)^0,f,c
  8317  001FF8  3644               	rlcf	(___flmul@grs+2)^0,f,c
  8318  001FFA  3645               	rlcf	(___flmul@grs+3)^0,f,c
  8319  001FFC  064B               	decf	___flmul@temp^0,f,c
  8320  001FFE  A0D8               	btfss	status,0,c
  8321  002000  064C               	decf	(___flmul@temp+1)^0,f,c
  8322  002002                     l6499:
  8323  002002  AE49               	btfss	(___flmul@prod+2)^0,7,c
  8324  002004  EF06  F010         	goto	u7591
  8325  002008  EF08  F010         	goto	u7590
  8326  00200C                     u7591:
  8327  00200C  EFEC  F00F         	goto	l6493
  8328  002010                     u7590:
  8329  002010  0E00               	movlw	0
  8330  002012  6E41               	movwf	___flmul@aexp^0,c
  8331  002014  AE45               	btfss	(___flmul@grs+3)^0,7,c
  8332  002016  EF0F  F010         	goto	u7601
  8333  00201A  EF11  F010         	goto	u7600
  8334  00201E                     u7601:
  8335  00201E  EF35  F010         	goto	l1327
  8336  002022                     u7600:
  8337  002022  0EFF               	movlw	255
  8338  002024  1442               	andwf	___flmul@grs^0,w,c
  8339  002026  6E3C               	movwf	??___flmul^0,c
  8340  002028  0EFF               	movlw	255
  8341  00202A  1443               	andwf	(___flmul@grs+1)^0,w,c
  8342  00202C  6E3D               	movwf	(??___flmul+1)^0,c
  8343  00202E  0EFF               	movlw	255
  8344  002030  1444               	andwf	(___flmul@grs+2)^0,w,c
  8345  002032  6E3E               	movwf	(??___flmul+2)^0,c
  8346  002034  0E7F               	movlw	127
  8347  002036  1445               	andwf	(___flmul@grs+3)^0,w,c
  8348  002038  6E3F               	movwf	(??___flmul+3)^0,c
  8349  00203A  503C               	movf	??___flmul^0,w,c
  8350  00203C  103D               	iorwf	(??___flmul+1)^0,w,c
  8351  00203E  103E               	iorwf	(??___flmul+2)^0,w,c
  8352  002040  103F               	iorwf	(??___flmul+3)^0,w,c
  8353  002042  B4D8               	btfsc	status,2,c
  8354  002044  EF26  F010         	goto	u7611
  8355  002048  EF28  F010         	goto	u7610
  8356  00204C                     u7611:
  8357  00204C  EF2C  F010         	goto	l1328
  8358  002050                     u7610:
  8359  002050                     l6507:
  8360  002050  0E01               	movlw	1
  8361  002052  6E41               	movwf	___flmul@aexp^0,c
  8362  002054  EF35  F010         	goto	l1327
  8363  002058                     l1328:
  8364  002058  A047               	btfss	___flmul@prod^0,0,c
  8365  00205A  EF31  F010         	goto	u7621
  8366  00205E  EF33  F010         	goto	u7620
  8367  002062                     u7621:
  8368  002062  EF35  F010         	goto	l1327
  8369  002066                     u7620:
  8370  002066  EF28  F010         	goto	l6507
  8371  00206A                     l1327:
  8372  00206A  5041               	movf	___flmul@aexp^0,w,c
  8373  00206C  B4D8               	btfsc	status,2,c
  8374  00206E  EF3B  F010         	goto	u7631
  8375  002072  EF3D  F010         	goto	u7630
  8376  002076                     u7631:
  8377  002076  EF61  F010         	goto	l6519
  8378  00207A                     u7630:
  8379  00207A  0E01               	movlw	1
  8380  00207C  2647               	addwf	___flmul@prod^0,f,c
  8381  00207E  0E00               	movlw	0
  8382  002080  2248               	addwfc	(___flmul@prod+1)^0,f,c
  8383  002082  2249               	addwfc	(___flmul@prod+2)^0,f,c
  8384  002084  224A               	addwfc	(___flmul@prod+3)^0,f,c
  8385  002086  A04A               	btfss	(___flmul@prod+3)^0,0,c
  8386  002088  EF48  F010         	goto	u7641
  8387  00208C  EF4A  F010         	goto	u7640
  8388  002090                     u7641:
  8389  002090  EF61  F010         	goto	l6519
  8390  002094                     u7640:
  8391  002094  C047  F03C         	movff	___flmul@prod,??___flmul
  8392  002098  C048  F03D         	movff	___flmul@prod+1,??___flmul+1
  8393  00209C  C049  F03E         	movff	___flmul@prod+2,??___flmul+2
  8394  0020A0  C04A  F03F         	movff	___flmul@prod+3,??___flmul+3
  8395  0020A4  343F               	rlcf	(??___flmul+3)^0,w,c
  8396  0020A6  323F               	rrcf	(??___flmul+3)^0,f,c
  8397  0020A8  323E               	rrcf	(??___flmul+2)^0,f,c
  8398  0020AA  323D               	rrcf	(??___flmul+1)^0,f,c
  8399  0020AC  323C               	rrcf	??___flmul^0,f,c
  8400  0020AE  C03C  F047         	movff	??___flmul,___flmul@prod
  8401  0020B2  C03D  F048         	movff	??___flmul+1,___flmul@prod+1
  8402  0020B6  C03E  F049         	movff	??___flmul+2,___flmul@prod+2
  8403  0020BA  C03F  F04A         	movff	??___flmul+3,___flmul@prod+3
  8404  0020BE  4A4B               	infsnz	___flmul@temp^0,f,c
  8405  0020C0  2A4C               	incf	(___flmul@temp+1)^0,f,c
  8406  0020C2                     l6519:
  8407  0020C2  BE4C               	btfsc	(___flmul@temp+1)^0,7,c
  8408  0020C4  EF6C  F010         	goto	u7651
  8409  0020C8  504C               	movf	(___flmul@temp+1)^0,w,c
  8410  0020CA  E108               	bnz	u7650
  8411  0020CC  284B               	incf	___flmul@temp^0,w,c
  8412  0020CE  A0D8               	btfss	status,0,c
  8413  0020D0  EF6C  F010         	goto	u7651
  8414  0020D4  EF6E  F010         	goto	u7650
  8415  0020D8                     u7651:
  8416  0020D8  EF78  F010         	goto	l6523
  8417  0020DC                     u7650:
  8418  0020DC  0E00               	movlw	0
  8419  0020DE  6E47               	movwf	___flmul@prod^0,c
  8420  0020E0  0E00               	movlw	0
  8421  0020E2  6E48               	movwf	(___flmul@prod+1)^0,c
  8422  0020E4  0E80               	movlw	128
  8423  0020E6  6E49               	movwf	(___flmul@prod+2)^0,c
  8424  0020E8  0E7F               	movlw	127
  8425  0020EA  6E4A               	movwf	(___flmul@prod+3)^0,c
  8426  0020EC  EFA6  F010         	goto	l6535
  8427  0020F0                     l6523:
  8428  0020F0  BE4C               	btfsc	(___flmul@temp+1)^0,7,c
  8429  0020F2  EF85  F010         	goto	u7660
  8430  0020F6  504C               	movf	(___flmul@temp+1)^0,w,c
  8431  0020F8  E106               	bnz	u7661
  8432  0020FA  044B               	decf	___flmul@temp^0,w,c
  8433  0020FC  B0D8               	btfsc	status,0,c
  8434  0020FE  EF83  F010         	goto	u7661
  8435  002102  EF85  F010         	goto	u7660
  8436  002106                     u7661:
  8437  002106  EF91  F010         	goto	l1335
  8438  00210A                     u7660:
  8439  00210A  0E00               	movlw	0
  8440  00210C  6E47               	movwf	___flmul@prod^0,c
  8441  00210E  0E00               	movlw	0
  8442  002110  6E48               	movwf	(___flmul@prod+1)^0,c
  8443  002112  0E00               	movlw	0
  8444  002114  6E49               	movwf	(___flmul@prod+2)^0,c
  8445  002116  0E00               	movlw	0
  8446  002118  6E4A               	movwf	(___flmul@prod+3)^0,c
  8447  00211A  0E00               	movlw	0
  8448  00211C  6E40               	movwf	___flmul@sign^0,c
  8449  00211E  EFA6  F010         	goto	l6535
  8450  002122                     l1335:
  8451  002122  C04B  F046         	movff	___flmul@temp,___flmul@bexp
  8452  002126  0EFF               	movlw	255
  8453  002128  1647               	andwf	___flmul@prod^0,f,c
  8454  00212A  0EFF               	movlw	255
  8455  00212C  1648               	andwf	(___flmul@prod+1)^0,f,c
  8456  00212E  0E7F               	movlw	127
  8457  002130  1649               	andwf	(___flmul@prod+2)^0,f,c
  8458  002132  0E00               	movlw	0
  8459  002134  164A               	andwf	(___flmul@prod+3)^0,f,c
  8460  002136  A046               	btfss	___flmul@bexp^0,0,c
  8461  002138  EFA0  F010         	goto	u7671
  8462  00213C  EFA2  F010         	goto	u7670
  8463  002140                     u7671:
  8464  002140  EFA3  F010         	goto	l6533
  8465  002144                     u7670:
  8466  002144  8E49               	bsf	(___flmul@prod+2)^0,7,c
  8467  002146                     l6533:
  8468  002146  90D8               	bcf	status,0,c
  8469  002148  3046               	rrcf	___flmul@bexp^0,w,c
  8470  00214A  6E4A               	movwf	(___flmul@prod+3)^0,c
  8471  00214C                     l6535:
  8472  00214C  5040               	movf	___flmul@sign^0,w,c
  8473  00214E  124A               	iorwf	(___flmul@prod+3)^0,f,c
  8474  002150  C047  F034         	movff	___flmul@prod,?___flmul
  8475  002154  C048  F035         	movff	___flmul@prod+1,?___flmul+1
  8476  002158  C049  F036         	movff	___flmul@prod+2,?___flmul+2
  8477  00215C  C04A  F037         	movff	___flmul@prod+3,?___flmul+3
  8478  002160                     l1322:
  8479  002160  0012               	return		;funcret
  8480  002162                     __end_of___flmul:
  8481                           	opt callstack 0
  8482                           
  8483 ;; *************** function ___fldiv *****************
  8484 ;; Defined at:
  8485 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  b               4   26[COMRAM] unsigned char 
  8488 ;;  a               4   30[COMRAM] unsigned char 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  grs             4   45[COMRAM] unsigned long 
  8491 ;;  rem             4   38[COMRAM] unsigned long 
  8492 ;;  new_exp         2   43[COMRAM] short 
  8493 ;;  aexp            1   50[COMRAM] unsigned char 
  8494 ;;  bexp            1   49[COMRAM] unsigned char 
  8495 ;;  sign            1   42[COMRAM] unsigned char 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  4   26[COMRAM] unsigned char 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8505 ;;      Params:         8       0       0       0       0       0       0       0       0
  8506 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8507 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8508 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8509 ;;Total ram usage:       25 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    2
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		_pwmDuty
  8516 ;;		_efgtoa
  8517 ;;		_leerSensores
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text38
  8522  002162                     __ptext38:
  8523                           	opt callstack 0
  8524  002162                     ___fldiv:
  8525                           	opt callstack 22
  8526  002162  501E               	movf	(___fldiv@b+3)^0,w,c
  8527  002164  0B80               	andlw	128
  8528  002166  6E2B               	movwf	___fldiv@sign^0,c
  8529  002168  501E               	movf	(___fldiv@b+3)^0,w,c
  8530  00216A  241E               	addwf	(___fldiv@b+3)^0,w,c
  8531  00216C  6E32               	movwf	___fldiv@bexp^0,c
  8532  00216E  AE1D               	btfss	(___fldiv@b+2)^0,7,c
  8533  002170  EFBC  F010         	goto	u7261
  8534  002174  EFBE  F010         	goto	u7260
  8535  002178                     u7261:
  8536  002178  EFBF  F010         	goto	l6279
  8537  00217C                     u7260:
  8538  00217C  8032               	bsf	___fldiv@bexp^0,0,c
  8539  00217E                     l6279:
  8540  00217E  5032               	movf	___fldiv@bexp^0,w,c
  8541  002180  B4D8               	btfsc	status,2,c
  8542  002182  EFC5  F010         	goto	u7271
  8543  002186  EFC7  F010         	goto	u7270
  8544  00218A                     u7271:
  8545  00218A  EFDC  F010         	goto	l6289
  8546  00218E                     u7270:
  8547  00218E  2832               	incf	___fldiv@bexp^0,w,c
  8548  002190  A4D8               	btfss	status,2,c
  8549  002192  EFCD  F010         	goto	u7281
  8550  002196  EFCF  F010         	goto	u7280
  8551  00219A                     u7281:
  8552  00219A  EFD7  F010         	goto	l6285
  8553  00219E                     u7280:
  8554  00219E  0E00               	movlw	0
  8555  0021A0  6E1B               	movwf	___fldiv@b^0,c
  8556  0021A2  0E00               	movlw	0
  8557  0021A4  6E1C               	movwf	(___fldiv@b+1)^0,c
  8558  0021A6  0E00               	movlw	0
  8559  0021A8  6E1D               	movwf	(___fldiv@b+2)^0,c
  8560  0021AA  0E00               	movlw	0
  8561  0021AC  6E1E               	movwf	(___fldiv@b+3)^0,c
  8562  0021AE                     l6285:
  8563  0021AE  8E1D               	bsf	(___fldiv@b+2)^0,7,c
  8564  0021B0  0E00               	movlw	0
  8565  0021B2  6E1E               	movwf	(___fldiv@b+3)^0,c
  8566  0021B4  EFE4  F010         	goto	l6291
  8567  0021B8                     l6289:
  8568  0021B8  0E00               	movlw	0
  8569  0021BA  6E1B               	movwf	___fldiv@b^0,c
  8570  0021BC  0E00               	movlw	0
  8571  0021BE  6E1C               	movwf	(___fldiv@b+1)^0,c
  8572  0021C0  0E00               	movlw	0
  8573  0021C2  6E1D               	movwf	(___fldiv@b+2)^0,c
  8574  0021C4  0E00               	movlw	0
  8575  0021C6  6E1E               	movwf	(___fldiv@b+3)^0,c
  8576  0021C8                     l6291:
  8577  0021C8  5022               	movf	(___fldiv@a+3)^0,w,c
  8578  0021CA  0B80               	andlw	128
  8579  0021CC  1A2B               	xorwf	___fldiv@sign^0,f,c
  8580  0021CE  5022               	movf	(___fldiv@a+3)^0,w,c
  8581  0021D0  2422               	addwf	(___fldiv@a+3)^0,w,c
  8582  0021D2  6E33               	movwf	___fldiv@aexp^0,c
  8583  0021D4  AE21               	btfss	(___fldiv@a+2)^0,7,c
  8584  0021D6  EFEF  F010         	goto	u7291
  8585  0021DA  EFF1  F010         	goto	u7290
  8586  0021DE                     u7291:
  8587  0021DE  EFF2  F010         	goto	l6299
  8588  0021E2                     u7290:
  8589  0021E2  8033               	bsf	___fldiv@aexp^0,0,c
  8590  0021E4                     l6299:
  8591  0021E4  5033               	movf	___fldiv@aexp^0,w,c
  8592  0021E6  B4D8               	btfsc	status,2,c
  8593  0021E8  EFF8  F010         	goto	u7301
  8594  0021EC  EFFA  F010         	goto	u7300
  8595  0021F0                     u7301:
  8596  0021F0  EF0F  F011         	goto	l6309
  8597  0021F4                     u7300:
  8598  0021F4  2833               	incf	___fldiv@aexp^0,w,c
  8599  0021F6  A4D8               	btfss	status,2,c
  8600  0021F8  EF00  F011         	goto	u7311
  8601  0021FC  EF02  F011         	goto	u7310
  8602  002200                     u7311:
  8603  002200  EF0A  F011         	goto	l6305
  8604  002204                     u7310:
  8605  002204  0E00               	movlw	0
  8606  002206  6E1F               	movwf	___fldiv@a^0,c
  8607  002208  0E00               	movlw	0
  8608  00220A  6E20               	movwf	(___fldiv@a+1)^0,c
  8609  00220C  0E00               	movlw	0
  8610  00220E  6E21               	movwf	(___fldiv@a+2)^0,c
  8611  002210  0E00               	movlw	0
  8612  002212  6E22               	movwf	(___fldiv@a+3)^0,c
  8613  002214                     l6305:
  8614  002214  8E21               	bsf	(___fldiv@a+2)^0,7,c
  8615  002216  0E00               	movlw	0
  8616  002218  6E22               	movwf	(___fldiv@a+3)^0,c
  8617  00221A  EF17  F011         	goto	l6311
  8618  00221E                     l6309:
  8619  00221E  0E00               	movlw	0
  8620  002220  6E1F               	movwf	___fldiv@a^0,c
  8621  002222  0E00               	movlw	0
  8622  002224  6E20               	movwf	(___fldiv@a+1)^0,c
  8623  002226  0E00               	movlw	0
  8624  002228  6E21               	movwf	(___fldiv@a+2)^0,c
  8625  00222A  0E00               	movlw	0
  8626  00222C  6E22               	movwf	(___fldiv@a+3)^0,c
  8627  00222E                     l6311:
  8628  00222E  501F               	movf	___fldiv@a^0,w,c
  8629  002230  1020               	iorwf	(___fldiv@a+1)^0,w,c
  8630  002232  1021               	iorwf	(___fldiv@a+2)^0,w,c
  8631  002234  1022               	iorwf	(___fldiv@a+3)^0,w,c
  8632  002236  A4D8               	btfss	status,2,c
  8633  002238  EF20  F011         	goto	u7321
  8634  00223C  EF22  F011         	goto	u7320
  8635  002240                     u7321:
  8636  002240  EF3A  F011         	goto	l6323
  8637  002244                     u7320:
  8638  002244  0E00               	movlw	0
  8639  002246  6E1B               	movwf	___fldiv@b^0,c
  8640  002248  0E00               	movlw	0
  8641  00224A  6E1C               	movwf	(___fldiv@b+1)^0,c
  8642  00224C  0E00               	movlw	0
  8643  00224E  6E1D               	movwf	(___fldiv@b+2)^0,c
  8644  002250  0E00               	movlw	0
  8645  002252  6E1E               	movwf	(___fldiv@b+3)^0,c
  8646  002254  0E80               	movlw	128
  8647  002256  121D               	iorwf	(___fldiv@b+2)^0,f,c
  8648  002258  0E7F               	movlw	127
  8649  00225A  121E               	iorwf	(___fldiv@b+3)^0,f,c
  8650  00225C                     l6317:
  8651  00225C  502B               	movf	___fldiv@sign^0,w,c
  8652  00225E  121E               	iorwf	(___fldiv@b+3)^0,f,c
  8653  002260  C01B  F01B         	movff	___fldiv@b,?___fldiv
  8654  002264  C01C  F01C         	movff	___fldiv@b+1,?___fldiv+1
  8655  002268  C01D  F01D         	movff	___fldiv@b+2,?___fldiv+2
  8656  00226C  C01E  F01E         	movff	___fldiv@b+3,?___fldiv+3
  8657  002270  EF7D  F012         	goto	l1286
  8658  002274                     l6323:
  8659  002274  5032               	movf	___fldiv@bexp^0,w,c
  8660  002276  A4D8               	btfss	status,2,c
  8661  002278  EF40  F011         	goto	u7331
  8662  00227C  EF42  F011         	goto	u7330
  8663  002280                     u7331:
  8664  002280  EF4C  F011         	goto	l6331
  8665  002284                     u7330:
  8666  002284  0E00               	movlw	0
  8667  002286  6E1B               	movwf	?___fldiv^0,c
  8668  002288  0E00               	movlw	0
  8669  00228A  6E1C               	movwf	(?___fldiv+1)^0,c
  8670  00228C  0E00               	movlw	0
  8671  00228E  6E1D               	movwf	(?___fldiv+2)^0,c
  8672  002290  0E00               	movlw	0
  8673  002292  6E1E               	movwf	(?___fldiv+3)^0,c
  8674  002294  EF7D  F012         	goto	l1286
  8675  002298                     l6331:
  8676  002298  5033               	movf	___fldiv@aexp^0,w,c
  8677  00229A  C032  F023         	movff	___fldiv@bexp,??___fldiv
  8678  00229E  6A24               	clrf	(??___fldiv+1)^0,c
  8679  0022A0  5E23               	subwf	??___fldiv^0,f,c
  8680  0022A2  0E00               	movlw	0
  8681  0022A4  5A24               	subwfb	(??___fldiv+1)^0,f,c
  8682  0022A6  0E7F               	movlw	127
  8683  0022A8  2423               	addwf	??___fldiv^0,w,c
  8684  0022AA  6E2C               	movwf	___fldiv@new_exp^0,c
  8685  0022AC  0E00               	movlw	0
  8686  0022AE  2024               	addwfc	(??___fldiv+1)^0,w,c
  8687  0022B0  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
  8688  0022B2  C01B  F027         	movff	___fldiv@b,___fldiv@rem
  8689  0022B6  C01C  F028         	movff	___fldiv@b+1,___fldiv@rem+1
  8690  0022BA  C01D  F029         	movff	___fldiv@b+2,___fldiv@rem+2
  8691  0022BE  C01E  F02A         	movff	___fldiv@b+3,___fldiv@rem+3
  8692  0022C2  0E00               	movlw	0
  8693  0022C4  6E1B               	movwf	___fldiv@b^0,c
  8694  0022C6  0E00               	movlw	0
  8695  0022C8  6E1C               	movwf	(___fldiv@b+1)^0,c
  8696  0022CA  0E00               	movlw	0
  8697  0022CC  6E1D               	movwf	(___fldiv@b+2)^0,c
  8698  0022CE  0E00               	movlw	0
  8699  0022D0  6E1E               	movwf	(___fldiv@b+3)^0,c
  8700  0022D2  0E00               	movlw	0
  8701  0022D4  6E2E               	movwf	___fldiv@grs^0,c
  8702  0022D6  0E00               	movlw	0
  8703  0022D8  6E2F               	movwf	(___fldiv@grs+1)^0,c
  8704  0022DA  0E00               	movlw	0
  8705  0022DC  6E30               	movwf	(___fldiv@grs+2)^0,c
  8706  0022DE  0E00               	movlw	0
  8707  0022E0  6E31               	movwf	(___fldiv@grs+3)^0,c
  8708  0022E2  0E00               	movlw	0
  8709  0022E4  6E33               	movwf	___fldiv@aexp^0,c
  8710  0022E6  EFAD  F011         	goto	l1288
  8711  0022EA                     l6341:
  8712  0022EA  5033               	movf	___fldiv@aexp^0,w,c
  8713  0022EC  B4D8               	btfsc	status,2,c
  8714  0022EE  EF7B  F011         	goto	u7341
  8715  0022F2  EF7D  F011         	goto	u7340
  8716  0022F6                     u7341:
  8717  0022F6  EF94  F011         	goto	l6349
  8718  0022FA                     u7340:
  8719  0022FA  90D8               	bcf	status,0,c
  8720  0022FC  3627               	rlcf	___fldiv@rem^0,f,c
  8721  0022FE  3628               	rlcf	(___fldiv@rem+1)^0,f,c
  8722  002300  3629               	rlcf	(___fldiv@rem+2)^0,f,c
  8723  002302  362A               	rlcf	(___fldiv@rem+3)^0,f,c
  8724  002304  90D8               	bcf	status,0,c
  8725  002306  361B               	rlcf	___fldiv@b^0,f,c
  8726  002308  361C               	rlcf	(___fldiv@b+1)^0,f,c
  8727  00230A  361D               	rlcf	(___fldiv@b+2)^0,f,c
  8728  00230C  361E               	rlcf	(___fldiv@b+3)^0,f,c
  8729  00230E  AE31               	btfss	(___fldiv@grs+3)^0,7,c
  8730  002310  EF8C  F011         	goto	u7351
  8731  002314  EF8E  F011         	goto	u7350
  8732  002318                     u7351:
  8733  002318  EF8F  F011         	goto	l1291
  8734  00231C                     u7350:
  8735  00231C  801B               	bsf	___fldiv@b^0,0,c
  8736  00231E                     l1291:
  8737  00231E  90D8               	bcf	status,0,c
  8738  002320  362E               	rlcf	___fldiv@grs^0,f,c
  8739  002322  362F               	rlcf	(___fldiv@grs+1)^0,f,c
  8740  002324  3630               	rlcf	(___fldiv@grs+2)^0,f,c
  8741  002326  3631               	rlcf	(___fldiv@grs+3)^0,f,c
  8742  002328                     l6349:
  8743  002328  501F               	movf	___fldiv@a^0,w,c
  8744  00232A  5C27               	subwf	___fldiv@rem^0,w,c
  8745  00232C  5020               	movf	(___fldiv@a+1)^0,w,c
  8746  00232E  5828               	subwfb	(___fldiv@rem+1)^0,w,c
  8747  002330  5021               	movf	(___fldiv@a+2)^0,w,c
  8748  002332  5829               	subwfb	(___fldiv@rem+2)^0,w,c
  8749  002334  5022               	movf	(___fldiv@a+3)^0,w,c
  8750  002336  582A               	subwfb	(___fldiv@rem+3)^0,w,c
  8751  002338  A0D8               	btfss	status,0,c
  8752  00233A  EFA1  F011         	goto	u7361
  8753  00233E  EFA3  F011         	goto	u7360
  8754  002342                     u7361:
  8755  002342  EFAC  F011         	goto	l6355
  8756  002346                     u7360:
  8757  002346  8C31               	bsf	(___fldiv@grs+3)^0,6,c
  8758  002348  501F               	movf	___fldiv@a^0,w,c
  8759  00234A  5E27               	subwf	___fldiv@rem^0,f,c
  8760  00234C  5020               	movf	(___fldiv@a+1)^0,w,c
  8761  00234E  5A28               	subwfb	(___fldiv@rem+1)^0,f,c
  8762  002350  5021               	movf	(___fldiv@a+2)^0,w,c
  8763  002352  5A29               	subwfb	(___fldiv@rem+2)^0,f,c
  8764  002354  5022               	movf	(___fldiv@a+3)^0,w,c
  8765  002356  5A2A               	subwfb	(___fldiv@rem+3)^0,f,c
  8766  002358                     l6355:
  8767  002358  2A33               	incf	___fldiv@aexp^0,f,c
  8768  00235A                     l1288:
  8769  00235A  0E19               	movlw	25
  8770  00235C  6433               	cpfsgt	___fldiv@aexp^0,c
  8771  00235E  EFB3  F011         	goto	u7371
  8772  002362  EFB5  F011         	goto	u7370
  8773  002366                     u7371:
  8774  002366  EF75  F011         	goto	l6341
  8775  00236A                     u7370:
  8776  00236A  5027               	movf	___fldiv@rem^0,w,c
  8777  00236C  1028               	iorwf	(___fldiv@rem+1)^0,w,c
  8778  00236E  1029               	iorwf	(___fldiv@rem+2)^0,w,c
  8779  002370  102A               	iorwf	(___fldiv@rem+3)^0,w,c
  8780  002372  B4D8               	btfsc	status,2,c
  8781  002374  EFBE  F011         	goto	u7381
  8782  002378  EFC0  F011         	goto	u7380
  8783  00237C                     u7381:
  8784  00237C  EFD8  F011         	goto	l6367
  8785  002380                     u7380:
  8786  002380  802E               	bsf	___fldiv@grs^0,0,c
  8787  002382  EFD8  F011         	goto	l6367
  8788  002386                     l6361:
  8789  002386  90D8               	bcf	status,0,c
  8790  002388  361B               	rlcf	___fldiv@b^0,f,c
  8791  00238A  361C               	rlcf	(___fldiv@b+1)^0,f,c
  8792  00238C  361D               	rlcf	(___fldiv@b+2)^0,f,c
  8793  00238E  361E               	rlcf	(___fldiv@b+3)^0,f,c
  8794  002390  AE31               	btfss	(___fldiv@grs+3)^0,7,c
  8795  002392  EFCD  F011         	goto	u7391
  8796  002396  EFCF  F011         	goto	u7390
  8797  00239A                     u7391:
  8798  00239A  EFD0  F011         	goto	l1297
  8799  00239E                     u7390:
  8800  00239E  801B               	bsf	___fldiv@b^0,0,c
  8801  0023A0                     l1297:
  8802  0023A0  90D8               	bcf	status,0,c
  8803  0023A2  362E               	rlcf	___fldiv@grs^0,f,c
  8804  0023A4  362F               	rlcf	(___fldiv@grs+1)^0,f,c
  8805  0023A6  3630               	rlcf	(___fldiv@grs+2)^0,f,c
  8806  0023A8  3631               	rlcf	(___fldiv@grs+3)^0,f,c
  8807  0023AA  062C               	decf	___fldiv@new_exp^0,f,c
  8808  0023AC  A0D8               	btfss	status,0,c
  8809  0023AE  062D               	decf	(___fldiv@new_exp+1)^0,f,c
  8810  0023B0                     l6367:
  8811  0023B0  AE1D               	btfss	(___fldiv@b+2)^0,7,c
  8812  0023B2  EFDD  F011         	goto	u7401
  8813  0023B6  EFDF  F011         	goto	u7400
  8814  0023BA                     u7401:
  8815  0023BA  EFC3  F011         	goto	l6361
  8816  0023BE                     u7400:
  8817  0023BE  0E00               	movlw	0
  8818  0023C0  6E33               	movwf	___fldiv@aexp^0,c
  8819  0023C2  AE31               	btfss	(___fldiv@grs+3)^0,7,c
  8820  0023C4  EFE6  F011         	goto	u7411
  8821  0023C8  EFE8  F011         	goto	u7410
  8822  0023CC                     u7411:
  8823  0023CC  EF0C  F012         	goto	l1299
  8824  0023D0                     u7410:
  8825  0023D0  0EFF               	movlw	255
  8826  0023D2  142E               	andwf	___fldiv@grs^0,w,c
  8827  0023D4  6E23               	movwf	??___fldiv^0,c
  8828  0023D6  0EFF               	movlw	255
  8829  0023D8  142F               	andwf	(___fldiv@grs+1)^0,w,c
  8830  0023DA  6E24               	movwf	(??___fldiv+1)^0,c
  8831  0023DC  0EFF               	movlw	255
  8832  0023DE  1430               	andwf	(___fldiv@grs+2)^0,w,c
  8833  0023E0  6E25               	movwf	(??___fldiv+2)^0,c
  8834  0023E2  0E7F               	movlw	127
  8835  0023E4  1431               	andwf	(___fldiv@grs+3)^0,w,c
  8836  0023E6  6E26               	movwf	(??___fldiv+3)^0,c
  8837  0023E8  5023               	movf	??___fldiv^0,w,c
  8838  0023EA  1024               	iorwf	(??___fldiv+1)^0,w,c
  8839  0023EC  1025               	iorwf	(??___fldiv+2)^0,w,c
  8840  0023EE  1026               	iorwf	(??___fldiv+3)^0,w,c
  8841  0023F0  B4D8               	btfsc	status,2,c
  8842  0023F2  EFFD  F011         	goto	u7421
  8843  0023F6  EFFF  F011         	goto	u7420
  8844  0023FA                     u7421:
  8845  0023FA  EF03  F012         	goto	l1300
  8846  0023FE                     u7420:
  8847  0023FE                     l6375:
  8848  0023FE  0E01               	movlw	1
  8849  002400  6E33               	movwf	___fldiv@aexp^0,c
  8850  002402  EF0C  F012         	goto	l1299
  8851  002406                     l1300:
  8852  002406  A01B               	btfss	___fldiv@b^0,0,c
  8853  002408  EF08  F012         	goto	u7431
  8854  00240C  EF0A  F012         	goto	u7430
  8855  002410                     u7431:
  8856  002410  EF0C  F012         	goto	l1299
  8857  002414                     u7430:
  8858  002414  EFFF  F011         	goto	l6375
  8859  002418                     l1299:
  8860  002418  5033               	movf	___fldiv@aexp^0,w,c
  8861  00241A  B4D8               	btfsc	status,2,c
  8862  00241C  EF12  F012         	goto	u7441
  8863  002420  EF14  F012         	goto	u7440
  8864  002424                     u7441:
  8865  002424  EF38  F012         	goto	l6387
  8866  002428                     u7440:
  8867  002428  0E01               	movlw	1
  8868  00242A  261B               	addwf	___fldiv@b^0,f,c
  8869  00242C  0E00               	movlw	0
  8870  00242E  221C               	addwfc	(___fldiv@b+1)^0,f,c
  8871  002430  221D               	addwfc	(___fldiv@b+2)^0,f,c
  8872  002432  221E               	addwfc	(___fldiv@b+3)^0,f,c
  8873  002434  A01E               	btfss	(___fldiv@b+3)^0,0,c
  8874  002436  EF1F  F012         	goto	u7451
  8875  00243A  EF21  F012         	goto	u7450
  8876  00243E                     u7451:
  8877  00243E  EF38  F012         	goto	l6387
  8878  002442                     u7450:
  8879  002442  C01B  F023         	movff	___fldiv@b,??___fldiv
  8880  002446  C01C  F024         	movff	___fldiv@b+1,??___fldiv+1
  8881  00244A  C01D  F025         	movff	___fldiv@b+2,??___fldiv+2
  8882  00244E  C01E  F026         	movff	___fldiv@b+3,??___fldiv+3
  8883  002452  3426               	rlcf	(??___fldiv+3)^0,w,c
  8884  002454  3226               	rrcf	(??___fldiv+3)^0,f,c
  8885  002456  3225               	rrcf	(??___fldiv+2)^0,f,c
  8886  002458  3224               	rrcf	(??___fldiv+1)^0,f,c
  8887  00245A  3223               	rrcf	??___fldiv^0,f,c
  8888  00245C  C023  F01B         	movff	??___fldiv,___fldiv@b
  8889  002460  C024  F01C         	movff	??___fldiv+1,___fldiv@b+1
  8890  002464  C025  F01D         	movff	??___fldiv+2,___fldiv@b+2
  8891  002468  C026  F01E         	movff	??___fldiv+3,___fldiv@b+3
  8892  00246C  4A2C               	infsnz	___fldiv@new_exp^0,f,c
  8893  00246E  2A2D               	incf	(___fldiv@new_exp+1)^0,f,c
  8894  002470                     l6387:
  8895  002470  BE2D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8896  002472  EF43  F012         	goto	u7461
  8897  002476  502D               	movf	(___fldiv@new_exp+1)^0,w,c
  8898  002478  E108               	bnz	u7460
  8899  00247A  282C               	incf	___fldiv@new_exp^0,w,c
  8900  00247C  A0D8               	btfss	status,0,c
  8901  00247E  EF43  F012         	goto	u7461
  8902  002482  EF45  F012         	goto	u7460
  8903  002486                     u7461:
  8904  002486  EF50  F012         	goto	l6391
  8905  00248A                     u7460:
  8906  00248A  0E00               	movlw	0
  8907  00248C  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
  8908  00248E  682C               	setf	___fldiv@new_exp^0,c
  8909  002490  0E00               	movlw	0
  8910  002492  6E1B               	movwf	___fldiv@b^0,c
  8911  002494  0E00               	movlw	0
  8912  002496  6E1C               	movwf	(___fldiv@b+1)^0,c
  8913  002498  0E00               	movlw	0
  8914  00249A  6E1D               	movwf	(___fldiv@b+2)^0,c
  8915  00249C  0E00               	movlw	0
  8916  00249E  6E1E               	movwf	(___fldiv@b+3)^0,c
  8917  0024A0                     l6391:
  8918  0024A0  BE2D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8919  0024A2  EF5D  F012         	goto	u7470
  8920  0024A6  502D               	movf	(___fldiv@new_exp+1)^0,w,c
  8921  0024A8  E106               	bnz	u7471
  8922  0024AA  042C               	decf	___fldiv@new_exp^0,w,c
  8923  0024AC  B0D8               	btfsc	status,0,c
  8924  0024AE  EF5B  F012         	goto	u7471
  8925  0024B2  EF5D  F012         	goto	u7470
  8926  0024B6                     u7471:
  8927  0024B6  EF6B  F012         	goto	l6395
  8928  0024BA                     u7470:
  8929  0024BA  0E00               	movlw	0
  8930  0024BC  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
  8931  0024BE  0E00               	movlw	0
  8932  0024C0  6E2C               	movwf	___fldiv@new_exp^0,c
  8933  0024C2  0E00               	movlw	0
  8934  0024C4  6E1B               	movwf	___fldiv@b^0,c
  8935  0024C6  0E00               	movlw	0
  8936  0024C8  6E1C               	movwf	(___fldiv@b+1)^0,c
  8937  0024CA  0E00               	movlw	0
  8938  0024CC  6E1D               	movwf	(___fldiv@b+2)^0,c
  8939  0024CE  0E00               	movlw	0
  8940  0024D0  6E1E               	movwf	(___fldiv@b+3)^0,c
  8941  0024D2  0E00               	movlw	0
  8942  0024D4  6E2B               	movwf	___fldiv@sign^0,c
  8943  0024D6                     l6395:
  8944  0024D6  C02C  F032         	movff	___fldiv@new_exp,___fldiv@bexp
  8945  0024DA  A032               	btfss	___fldiv@bexp^0,0,c
  8946  0024DC  EF72  F012         	goto	u7481
  8947  0024E0  EF74  F012         	goto	u7480
  8948  0024E4                     u7481:
  8949  0024E4  EF77  F012         	goto	l6401
  8950  0024E8                     u7480:
  8951  0024E8  8E1D               	bsf	(___fldiv@b+2)^0,7,c
  8952  0024EA  EF78  F012         	goto	l6403
  8953  0024EE                     l6401:
  8954  0024EE  9E1D               	bcf	(___fldiv@b+2)^0,7,c
  8955  0024F0                     l6403:
  8956  0024F0  90D8               	bcf	status,0,c
  8957  0024F2  3032               	rrcf	___fldiv@bexp^0,w,c
  8958  0024F4  6E1E               	movwf	(___fldiv@b+3)^0,c
  8959  0024F6  EF2E  F011         	goto	l6317
  8960  0024FA                     l1286:
  8961  0024FA  0012               	return		;funcret
  8962  0024FC                     __end_of___fldiv:
  8963                           	opt callstack 0
  8964                           
  8965 ;; *************** function _dameDistancia *****************
  8966 ;; Defined at:
  8967 ;;		line 26 in file "./ultrasonico.h"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  numeroSensor    1    wreg     unsigned char 
  8970 ;; Auto vars:     Size  Location     Type
  8971 ;;  numeroSensor    1   32[COMRAM] unsigned char 
  8972 ;;  distancia       4   33[COMRAM] float 
  8973 ;;  conteo          2   37[COMRAM] unsigned int 
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  4   26[COMRAM] float 
  8976 ;; Registers used:
  8977 ;;		wreg, status,2, status,0, cstack
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8983 ;;      Params:         4       0       0       0       0       0       0       0       0
  8984 ;;      Locals:         7       0       0       0       0       0       0       0       0
  8985 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8986 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8987 ;;Total ram usage:       13 bytes
  8988 ;; Hardware stack levels used:    1
  8989 ;; Hardware stack levels required when called:    3
  8990 ;; This function calls:
  8991 ;;		___lwdiv
  8992 ;;		___xxtofl
  8993 ;; This function is called by:
  8994 ;;		_probarUltrasonico
  8995 ;;		_inicializarComportamientoBasico
  8996 ;;		_leerSensores
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text39
  9001  002C0E                     __ptext39:
  9002                           	opt callstack 0
  9003  002C0E                     _dameDistancia:
  9004                           	opt callstack 25
  9005                           
  9006                           ;incstack = 0
  9007                           ;dameDistancia@numeroSensor stored from wreg
  9008  002C0E  6E21               	movwf	dameDistancia@numeroSensor^0,c
  9009  002C10                     
  9010                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
  9011  002C10  0E00               	movlw	0
  9012  002C12  6ECF               	movwf	207,c	;volatile
  9013                           
  9014                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
  9015  002C14  0E00               	movlw	0
  9016  002C16  6ECE               	movwf	206,c	;volatile
  9017                           
  9018                           ;./ultrasonico.h: 33:     conteo = 0;
  9019  002C18  0E00               	movlw	0
  9020  002C1A  6E27               	movwf	(dameDistancia@conteo+1)^0,c
  9021  002C1C  0E00               	movlw	0
  9022  002C1E  6E26               	movwf	dameDistancia@conteo^0,c
  9023  002C20                     
  9024                           ;./ultrasonico.h: 34:     LATD3 = 1;
  9025  002C20  868C               	bsf	3980,3,c	;volatile
  9026  002C22                     
  9027                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
  9028  002C22  0E04               	movlw	4
  9029  002C24                     u9667:
  9030  002C24  2EE8               	decfsz	wreg,f,c
  9031  002C26  D7FE               	bra	u9667
  9032  002C28                     
  9033                           ;./ultrasonico.h: 36:     LATD3 = 0;
  9034  002C28  968C               	bcf	3980,3,c	;volatile
  9035                           
  9036                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
  9037  002C2A  EF5F  F016         	goto	l7291
  9038  002C2E                     l169:
  9039  002C2E  A281               	btfss	129,1,c	;volatile
  9040  002C30  EF1C  F016         	goto	u8941
  9041  002C34  EF1E  F016         	goto	u8940
  9042  002C38                     u8941:
  9043  002C38  EF17  F016         	goto	l169
  9044  002C3C                     u8940:
  9045  002C3C                     
  9046                           ;./ultrasonico.h: 43:             TMR1ON = 1;
  9047  002C3C  80CD               	bsf	4045,0,c	;volatile
  9048  002C3E                     l172:
  9049  002C3E  A281               	btfss	129,1,c	;volatile
  9050  002C40  EF24  F016         	goto	u8951
  9051  002C44  EF26  F016         	goto	u8950
  9052  002C48                     u8951:
  9053  002C48  EF78  F016         	goto	l177
  9054  002C4C                     u8950:
  9055  002C4C  A09E               	btfss	3998,0,c	;volatile
  9056  002C4E  EF2B  F016         	goto	u8961
  9057  002C52  EF2D  F016         	goto	u8960
  9058  002C56                     u8961:
  9059  002C56  EF1F  F016         	goto	l172
  9060  002C5A                     u8960:
  9061  002C5A  EF78  F016         	goto	l177
  9062  002C5E                     l179:
  9063  002C5E  A481               	btfss	129,2,c	;volatile
  9064  002C60  EF34  F016         	goto	u8971
  9065  002C64  EF36  F016         	goto	u8970
  9066  002C68                     u8971:
  9067  002C68  EF2F  F016         	goto	l179
  9068  002C6C                     u8970:
  9069  002C6C                     
  9070                           ;./ultrasonico.h: 51:             TMR1ON = 1;
  9071  002C6C  80CD               	bsf	4045,0,c	;volatile
  9072  002C6E                     l182:
  9073  002C6E  A481               	btfss	129,2,c	;volatile
  9074  002C70  EF3C  F016         	goto	u8981
  9075  002C74  EF3E  F016         	goto	u8980
  9076  002C78                     u8981:
  9077  002C78  EF78  F016         	goto	l177
  9078  002C7C                     u8980:
  9079  002C7C  A09E               	btfss	3998,0,c	;volatile
  9080  002C7E  EF43  F016         	goto	u8991
  9081  002C82  EF45  F016         	goto	u8990
  9082  002C86                     u8991:
  9083  002C86  EF37  F016         	goto	l182
  9084  002C8A                     u8990:
  9085  002C8A  EF78  F016         	goto	l177
  9086  002C8E                     l188:
  9087  002C8E  A681               	btfss	129,3,c	;volatile
  9088  002C90  EF4C  F016         	goto	u9001
  9089  002C94  EF4E  F016         	goto	u9000
  9090  002C98                     u9001:
  9091  002C98  EF47  F016         	goto	l188
  9092  002C9C                     u9000:
  9093  002C9C                     
  9094                           ;./ultrasonico.h: 59:             TMR1ON = 1;
  9095  002C9C  80CD               	bsf	4045,0,c	;volatile
  9096  002C9E                     l191:
  9097  002C9E  A681               	btfss	129,3,c	;volatile
  9098  002CA0  EF54  F016         	goto	u9011
  9099  002CA4  EF56  F016         	goto	u9010
  9100  002CA8                     u9011:
  9101  002CA8  EF78  F016         	goto	l177
  9102  002CAC                     u9010:
  9103  002CAC  A09E               	btfss	3998,0,c	;volatile
  9104  002CAE  EF5B  F016         	goto	u9021
  9105  002CB2  EF5D  F016         	goto	u9020
  9106  002CB6                     u9021:
  9107  002CB6  EF4F  F016         	goto	l191
  9108  002CBA                     u9020:
  9109  002CBA  EF78  F016         	goto	l177
  9110  002CBE                     l7291:
  9111  002CBE  5021               	movf	dameDistancia@numeroSensor^0,w,c
  9112  002CC0  6E1F               	movwf	??_dameDistancia^0,c
  9113  002CC2  6A20               	clrf	(??_dameDistancia+1)^0,c
  9114                           
  9115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9116                           ; Switch size 1, requested type "simple"
  9117                           ; Number of cases is 1, Range of values is 0 to 0
  9118                           ; switch strategies available:
  9119                           ; Name         Instructions Cycles
  9120                           ; simple_byte            4     3 (average)
  9121                           ;	Chosen strategy is simple_byte
  9122  002CC4  5020               	movf	(??_dameDistancia+1)^0,w,c
  9123  002CC6  0A00               	xorlw	0	; case 0
  9124  002CC8  B4D8               	btfsc	status,2,c
  9125  002CCA  EF69  F016         	goto	l7999
  9126  002CCE  EF78  F016         	goto	l177
  9127  002CD2                     l7999:
  9128                           
  9129                           ; Switch size 1, requested type "simple"
  9130                           ; Number of cases is 3, Range of values is 1 to 3
  9131                           ; switch strategies available:
  9132                           ; Name         Instructions Cycles
  9133                           ; simple_byte           10     6 (average)
  9134                           ;	Chosen strategy is simple_byte
  9135  002CD2  501F               	movf	??_dameDistancia^0,w,c
  9136  002CD4  0A01               	xorlw	1	; case 1
  9137  002CD6  B4D8               	btfsc	status,2,c
  9138  002CD8  EF17  F016         	goto	l169
  9139  002CDC  0A03               	xorlw	3	; case 2
  9140  002CDE  B4D8               	btfsc	status,2,c
  9141  002CE0  EF2F  F016         	goto	l179
  9142  002CE4  0A01               	xorlw	1	; case 3
  9143  002CE6  B4D8               	btfsc	status,2,c
  9144  002CE8  EF47  F016         	goto	l188
  9145  002CEC  EF78  F016         	goto	l177
  9146  002CF0                     l177:
  9147                           
  9148                           ;./ultrasonico.h: 66:     TMR1ON = 0;
  9149  002CF0  90CD               	bcf	4045,0,c	;volatile
  9150                           
  9151                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
  9152  002CF2  B09E               	btfsc	3998,0,c	;volatile
  9153  002CF4  EF7E  F016         	goto	u9031
  9154  002CF8  EF80  F016         	goto	u9030
  9155  002CFC                     u9031:
  9156  002CFC  EFA6  F016         	goto	l7297
  9157  002D00                     u9030:
  9158  002D00                     
  9159                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
  9160  002D00  50CF               	movf	207,w,c	;volatile
  9161  002D02  6E20               	movwf	(??_dameDistancia+1)^0,c
  9162  002D04  6A1F               	clrf	??_dameDistancia^0,c
  9163  002D06  501F               	movf	??_dameDistancia^0,w,c
  9164  002D08  1226               	iorwf	dameDistancia@conteo^0,f,c
  9165  002D0A  5020               	movf	(??_dameDistancia+1)^0,w,c
  9166  002D0C  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
  9167                           
  9168                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
  9169  002D0E  50CE               	movf	206,w,c	;volatile
  9170  002D10  1226               	iorwf	dameDistancia@conteo^0,f,c
  9171  002D12                     
  9172                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
  9173  002D12  0E00               	movlw	0
  9174  002D14  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  9175  002D16  0E3A               	movlw	58
  9176  002D18  6E08               	movwf	___lwdiv@divisor^0,c
  9177  002D1A  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
  9178  002D1E  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
  9179  002D22  ECA3  F01B         	call	___lwdiv	;wreg free
  9180  002D26  C006  F00D         	movff	?___lwdiv,___xxtofl@val
  9181  002D2A  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
  9182  002D2E  6A0F               	clrf	(___xxtofl@val+2)^0,c
  9183  002D30  6A10               	clrf	(___xxtofl@val+3)^0,c
  9184  002D32  0E00               	movlw	0
  9185  002D34  EC65  F014         	call	___xxtofl
  9186  002D38  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
  9187  002D3C  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
  9188  002D40  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
  9189  002D44  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
  9190                           
  9191                           ;./ultrasonico.h: 73:     } else {
  9192  002D48  EFAF  F016         	goto	l7301
  9193  002D4C                     l7297:
  9194  002D4C                     
  9195                           ;./ultrasonico.h: 75:         TMR1IF = 0;
  9196  002D4C  909E               	bcf	3998,0,c	;volatile
  9197                           
  9198                           ;./ultrasonico.h: 76:         distancia = 0;
  9199  002D4E  0E00               	movlw	0
  9200  002D50  6E22               	movwf	dameDistancia@distancia^0,c
  9201  002D52  0E00               	movlw	0
  9202  002D54  6E23               	movwf	(dameDistancia@distancia+1)^0,c
  9203  002D56  0E00               	movlw	0
  9204  002D58  6E24               	movwf	(dameDistancia@distancia+2)^0,c
  9205  002D5A  0E00               	movlw	0
  9206  002D5C  6E25               	movwf	(dameDistancia@distancia+3)^0,c
  9207  002D5E                     l7301:
  9208                           
  9209                           ;./ultrasonico.h: 80:     return distancia;
  9210  002D5E  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
  9211  002D62  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
  9212  002D66  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
  9213  002D6A  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
  9214  002D6E  0012               	return		;funcret
  9215  002D70                     __end_of_dameDistancia:
  9216                           	opt callstack 0
  9217                           
  9218 ;; *************** function ___xxtofl *****************
  9219 ;; Defined at:
  9220 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  sign            1    wreg     unsigned char 
  9223 ;;  val             4   12[COMRAM] long 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  sign            1   20[COMRAM] unsigned char 
  9226 ;;  arg             4   22[COMRAM] unsigned long 
  9227 ;;  exp             1   21[COMRAM] unsigned char 
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  4   12[COMRAM] unsigned char 
  9230 ;; Registers used:
  9231 ;;		wreg, status,2, status,0
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9237 ;;      Params:         4       0       0       0       0       0       0       0       0
  9238 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9239 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9240 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9241 ;;Total ram usage:       14 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:    2
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_pwmDuty
  9248 ;;		_dameDistancia
  9249 ;;		_PID
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text40
  9254  0028CA                     __ptext40:
  9255                           	opt callstack 0
  9256  0028CA                     ___xxtofl:
  9257                           	opt callstack 25
  9258                           
  9259                           ;incstack = 0
  9260                           ;___xxtofl@sign stored from wreg
  9261  0028CA  6E15               	movwf	___xxtofl@sign^0,c
  9262  0028CC  5015               	movf	___xxtofl@sign^0,w,c
  9263  0028CE  B4D8               	btfsc	status,2,c
  9264  0028D0  EF6C  F014         	goto	u8811
  9265  0028D4  EF6E  F014         	goto	u8810
  9266  0028D8                     u8811:
  9267  0028D8  EF90  F014         	goto	l1359
  9268  0028DC                     u8810:
  9269  0028DC  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  9270  0028DE  EF75  F014         	goto	u8820
  9271  0028E2  EF73  F014         	goto	u8821
  9272  0028E6                     u8821:
  9273  0028E6  EF90  F014         	goto	l1359
  9274  0028EA                     u8820:
  9275  0028EA  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  9276  0028EE  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  9277  0028F2  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  9278  0028F6  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  9279  0028FA  1E11               	comf	??___xxtofl^0,f,c
  9280  0028FC  1E12               	comf	(??___xxtofl+1)^0,f,c
  9281  0028FE  1E13               	comf	(??___xxtofl+2)^0,f,c
  9282  002900  1E14               	comf	(??___xxtofl+3)^0,f,c
  9283  002902  2A11               	incf	??___xxtofl^0,f,c
  9284  002904  0E00               	movlw	0
  9285  002906  2212               	addwfc	(??___xxtofl+1)^0,f,c
  9286  002908  2213               	addwfc	(??___xxtofl+2)^0,f,c
  9287  00290A  2214               	addwfc	(??___xxtofl+3)^0,f,c
  9288  00290C  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  9289  002910  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  9290  002914  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  9291  002918  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  9292  00291C  EF98  F014         	goto	l7217
  9293  002920                     l1359:
  9294  002920  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  9295  002924  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9296  002928  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9297  00292C  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9298  002930                     l7217:
  9299  002930  500D               	movf	___xxtofl@val^0,w,c
  9300  002932  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  9301  002934  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  9302  002936  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  9303  002938  A4D8               	btfss	status,2,c
  9304  00293A  EFA1  F014         	goto	u8831
  9305  00293E  EFA3  F014         	goto	u8830
  9306  002942                     u8831:
  9307  002942  EFAD  F014         	goto	l7223
  9308  002946                     u8830:
  9309  002946  0E00               	movlw	0
  9310  002948  6E0D               	movwf	?___xxtofl^0,c
  9311  00294A  0E00               	movlw	0
  9312  00294C  6E0E               	movwf	(?___xxtofl+1)^0,c
  9313  00294E  0E00               	movlw	0
  9314  002950  6E0F               	movwf	(?___xxtofl+2)^0,c
  9315  002952  0E00               	movlw	0
  9316  002954  6E10               	movwf	(?___xxtofl+3)^0,c
  9317  002956  EF3E  F015         	goto	l1362
  9318  00295A                     l7223:
  9319  00295A  0E96               	movlw	150
  9320  00295C  6E16               	movwf	___xxtofl@exp^0,c
  9321  00295E  EFB7  F014         	goto	l7227
  9322  002962                     l7225:
  9323  002962  2A16               	incf	___xxtofl@exp^0,f,c
  9324  002964  90D8               	bcf	status,0,c
  9325  002966  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  9326  002968  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  9327  00296A  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  9328  00296C  3217               	rrcf	___xxtofl@arg^0,f,c
  9329  00296E                     l7227:
  9330  00296E  0E00               	movlw	0
  9331  002970  1417               	andwf	___xxtofl@arg^0,w,c
  9332  002972  6E11               	movwf	??___xxtofl^0,c
  9333  002974  0E00               	movlw	0
  9334  002976  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  9335  002978  6E12               	movwf	(??___xxtofl+1)^0,c
  9336  00297A  0E00               	movlw	0
  9337  00297C  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  9338  00297E  6E13               	movwf	(??___xxtofl+2)^0,c
  9339  002980  0EFE               	movlw	254
  9340  002982  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  9341  002984  6E14               	movwf	(??___xxtofl+3)^0,c
  9342  002986  5011               	movf	??___xxtofl^0,w,c
  9343  002988  1012               	iorwf	(??___xxtofl+1)^0,w,c
  9344  00298A  1013               	iorwf	(??___xxtofl+2)^0,w,c
  9345  00298C  1014               	iorwf	(??___xxtofl+3)^0,w,c
  9346  00298E  A4D8               	btfss	status,2,c
  9347  002990  EFCC  F014         	goto	u8841
  9348  002994  EFCE  F014         	goto	u8840
  9349  002998                     u8841:
  9350  002998  EFB1  F014         	goto	l7225
  9351  00299C                     u8840:
  9352  00299C  EFDC  F014         	goto	l1366
  9353  0029A0                     l7229:
  9354  0029A0  2A16               	incf	___xxtofl@exp^0,f,c
  9355  0029A2  0E01               	movlw	1
  9356  0029A4  2617               	addwf	___xxtofl@arg^0,f,c
  9357  0029A6  0E00               	movlw	0
  9358  0029A8  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  9359  0029AA  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  9360  0029AC  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  9361  0029AE  90D8               	bcf	status,0,c
  9362  0029B0  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  9363  0029B2  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  9364  0029B4  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  9365  0029B6  3217               	rrcf	___xxtofl@arg^0,f,c
  9366  0029B8                     l1366:
  9367  0029B8  0E00               	movlw	0
  9368  0029BA  1417               	andwf	___xxtofl@arg^0,w,c
  9369  0029BC  6E11               	movwf	??___xxtofl^0,c
  9370  0029BE  0E00               	movlw	0
  9371  0029C0  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  9372  0029C2  6E12               	movwf	(??___xxtofl+1)^0,c
  9373  0029C4  0E00               	movlw	0
  9374  0029C6  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  9375  0029C8  6E13               	movwf	(??___xxtofl+2)^0,c
  9376  0029CA  0EFF               	movlw	255
  9377  0029CC  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  9378  0029CE  6E14               	movwf	(??___xxtofl+3)^0,c
  9379  0029D0  5011               	movf	??___xxtofl^0,w,c
  9380  0029D2  1012               	iorwf	(??___xxtofl+1)^0,w,c
  9381  0029D4  1013               	iorwf	(??___xxtofl+2)^0,w,c
  9382  0029D6  1014               	iorwf	(??___xxtofl+3)^0,w,c
  9383  0029D8  A4D8               	btfss	status,2,c
  9384  0029DA  EFF1  F014         	goto	u8851
  9385  0029DE  EFF3  F014         	goto	u8850
  9386  0029E2                     u8851:
  9387  0029E2  EFD0  F014         	goto	l7229
  9388  0029E6                     u8850:
  9389  0029E6  EFFB  F014         	goto	l7237
  9390  0029EA                     l7235:
  9391  0029EA  0616               	decf	___xxtofl@exp^0,f,c
  9392  0029EC  90D8               	bcf	status,0,c
  9393  0029EE  3617               	rlcf	___xxtofl@arg^0,f,c
  9394  0029F0  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  9395  0029F2  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  9396  0029F4  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  9397  0029F6                     l7237:
  9398  0029F6  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  9399  0029F8  EF00  F015         	goto	u8861
  9400  0029FC  EF02  F015         	goto	u8860
  9401  002A00                     u8861:
  9402  002A00  EF0A  F015         	goto	l1373
  9403  002A04                     u8860:
  9404  002A04  0E02               	movlw	2
  9405  002A06  6016               	cpfslt	___xxtofl@exp^0,c
  9406  002A08  EF08  F015         	goto	u8871
  9407  002A0C  EF0A  F015         	goto	u8870
  9408  002A10                     u8871:
  9409  002A10  EFF5  F014         	goto	l7235
  9410  002A14                     u8870:
  9411  002A14                     l1373:
  9412  002A14  B016               	btfsc	___xxtofl@exp^0,0,c
  9413  002A16  EF0F  F015         	goto	u8881
  9414  002A1A  EF11  F015         	goto	u8880
  9415  002A1E                     u8881:
  9416  002A1E  EF12  F015         	goto	l7243
  9417  002A22                     u8880:
  9418  002A22  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  9419  002A24                     l7243:
  9420  002A24  90D8               	bcf	status,0,c
  9421  002A26  3216               	rrcf	___xxtofl@exp^0,f,c
  9422  002A28  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  9423  002A2C  6A12               	clrf	(??___xxtofl+1)^0,c
  9424  002A2E  6A13               	clrf	(??___xxtofl+2)^0,c
  9425  002A30  6A14               	clrf	(??___xxtofl+3)^0,c
  9426  002A32  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  9427  002A36  6A13               	clrf	(??___xxtofl+2)^0,c
  9428  002A38  6A12               	clrf	(??___xxtofl+1)^0,c
  9429  002A3A  6A11               	clrf	??___xxtofl^0,c
  9430  002A3C  5011               	movf	??___xxtofl^0,w,c
  9431  002A3E  1217               	iorwf	___xxtofl@arg^0,f,c
  9432  002A40  5012               	movf	(??___xxtofl+1)^0,w,c
  9433  002A42  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  9434  002A44  5013               	movf	(??___xxtofl+2)^0,w,c
  9435  002A46  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  9436  002A48  5014               	movf	(??___xxtofl+3)^0,w,c
  9437  002A4A  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  9438  002A4C  5015               	movf	___xxtofl@sign^0,w,c
  9439  002A4E  B4D8               	btfsc	status,2,c
  9440  002A50  EF2C  F015         	goto	u8891
  9441  002A54  EF2E  F015         	goto	u8890
  9442  002A58                     u8891:
  9443  002A58  EF36  F015         	goto	l7253
  9444  002A5C                     u8890:
  9445  002A5C  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  9446  002A5E  EF35  F015         	goto	u8900
  9447  002A62  EF33  F015         	goto	u8901
  9448  002A66                     u8901:
  9449  002A66  EF36  F015         	goto	l7253
  9450  002A6A                     u8900:
  9451  002A6A  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  9452  002A6C                     l7253:
  9453  002A6C  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  9454  002A70  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  9455  002A74  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  9456  002A78  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  9457  002A7C                     l1362:
  9458  002A7C  0012               	return		;funcret
  9459  002A7E                     __end_of___xxtofl:
  9460                           	opt callstack 0
  9461                           
  9462 ;; *************** function ___lwdiv *****************
  9463 ;; Defined at:
  9464 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  dividend        2    5[COMRAM] unsigned int 
  9467 ;;  divisor         2    7[COMRAM] unsigned int 
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;  quotient        2   10[COMRAM] unsigned int 
  9470 ;;  counter         1    9[COMRAM] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  2    5[COMRAM] unsigned int 
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9480 ;;      Params:         4       0       0       0       0       0       0       0       0
  9481 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9483 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9484 ;;Total ram usage:        7 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:    2
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_dameDistancia
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           	psect	text41
  9495  003746                     __ptext41:
  9496                           	opt callstack 0
  9497  003746                     ___lwdiv:
  9498                           	opt callstack 25
  9499  003746  0E00               	movlw	0
  9500  003748  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9501  00374A  0E00               	movlw	0
  9502  00374C  6E0B               	movwf	___lwdiv@quotient^0,c
  9503  00374E  5008               	movf	___lwdiv@divisor^0,w,c
  9504  003750  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9505  003752  B4D8               	btfsc	status,2,c
  9506  003754  EFAE  F01B         	goto	u8781
  9507  003758  EFB0  F01B         	goto	u8780
  9508  00375C                     u8781:
  9509  00375C  EFD8  F01B         	goto	l1195
  9510  003760                     u8780:
  9511  003760  0E01               	movlw	1
  9512  003762  6E0A               	movwf	___lwdiv@counter^0,c
  9513  003764  EFB8  F01B         	goto	l7197
  9514  003768                     l7195:
  9515  003768  90D8               	bcf	status,0,c
  9516  00376A  3608               	rlcf	___lwdiv@divisor^0,f,c
  9517  00376C  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9518  00376E  2A0A               	incf	___lwdiv@counter^0,f,c
  9519  003770                     l7197:
  9520  003770  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  9521  003772  EFBD  F01B         	goto	u8791
  9522  003776  EFBF  F01B         	goto	u8790
  9523  00377A                     u8791:
  9524  00377A  EFB4  F01B         	goto	l7195
  9525  00377E                     u8790:
  9526  00377E                     l7199:
  9527  00377E  90D8               	bcf	status,0,c
  9528  003780  360B               	rlcf	___lwdiv@quotient^0,f,c
  9529  003782  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9530  003784  5008               	movf	___lwdiv@divisor^0,w,c
  9531  003786  5C06               	subwf	___lwdiv@dividend^0,w,c
  9532  003788  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9533  00378A  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9534  00378C  A0D8               	btfss	status,0,c
  9535  00378E  EFCB  F01B         	goto	u8801
  9536  003792  EFCD  F01B         	goto	u8800
  9537  003796                     u8801:
  9538  003796  EFD2  F01B         	goto	l7207
  9539  00379A                     u8800:
  9540  00379A  5008               	movf	___lwdiv@divisor^0,w,c
  9541  00379C  5E06               	subwf	___lwdiv@dividend^0,f,c
  9542  00379E  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9543  0037A0  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9544  0037A2  800B               	bsf	___lwdiv@quotient^0,0,c
  9545  0037A4                     l7207:
  9546  0037A4  90D8               	bcf	status,0,c
  9547  0037A6  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9548  0037A8  3208               	rrcf	___lwdiv@divisor^0,f,c
  9549  0037AA  2E0A               	decfsz	___lwdiv@counter^0,f,c
  9550  0037AC  EFBF  F01B         	goto	l7199
  9551  0037B0                     l1195:
  9552  0037B0  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  9553  0037B4  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9554  0037B8  0012               	return		;funcret
  9555  0037BA                     __end_of___lwdiv:
  9556                           	opt callstack 0
  9557                           
  9558 ;; *************** function _configurarAdc *****************
  9559 ;; Defined at:
  9560 ;;		line 7 in file "./adc.h"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		wreg, status,2
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9574 ;;      Params:         0       0       0       0       0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9577 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:    2
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_main
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text42
  9589  003E94                     __ptext42:
  9590                           	opt callstack 0
  9591  003E94                     _configurarAdc:
  9592                           	opt callstack 28
  9593  003E94                     
  9594                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  9595  003E94  0E0E               	movlw	14
  9596  003E96  6EC1               	movwf	193,c	;volatile
  9597                           
  9598                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  9599  003E98  0EA5               	movlw	165
  9600  003E9A  6EC0               	movwf	192,c	;volatile
  9601  003E9C  0012               	return		;funcret
  9602  003E9E                     __end_of_configurarAdc:
  9603                           	opt callstack 0
  9604                           
  9605 ;; *************** function _configPwm *****************
  9606 ;; Defined at:
  9607 ;;		line 47 in file "./pwm.h"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  channel         1    wreg     unsigned char 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  channel         1    7[COMRAM] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, status,2, status,0
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9621 ;;      Params:         0       0       0       0       0       0       0       0       0
  9622 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9623 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9624 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9625 ;;Total ram usage:        3 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    2
  9628 ;; This function calls:
  9629 ;;		Nothing
  9630 ;; This function is called by:
  9631 ;;		_main
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text43
  9636  003BD8                     __ptext43:
  9637                           	opt callstack 0
  9638  003BD8                     _configPwm:
  9639                           	opt callstack 28
  9640                           
  9641                           ;incstack = 0
  9642                           ;configPwm@channel stored from wreg
  9643  003BD8  6E08               	movwf	configPwm@channel^0,c
  9644  003BDA                     
  9645                           ;./pwm.h: 56:         T2CKPS0 = 1;
  9646  003BDA  80CA               	bsf	4042,0,c	;volatile
  9647                           
  9648                           ;./pwm.h: 57:         T2CKPS1 = 1;
  9649  003BDC  82CA               	bsf	4042,1,c	;volatile
  9650  003BDE                     
  9651                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  9652  003BDE  0E7C               	movlw	124
  9653  003BE0  6ECB               	movwf	203,c	;volatile
  9654                           
  9655                           ;./pwm.h: 63:     switch (channel) {
  9656  003BE2  EFFD  F01D         	goto	l5211
  9657  003BE6                     l149:
  9658                           
  9659                           ;./pwm.h: 66:             TRISC2 = 0;
  9660  003BE6  9494               	bcf	3988,2,c	;volatile
  9661                           
  9662                           ;./pwm.h: 67:             CCP1M3 = 1;
  9663  003BE8  86BD               	bsf	4029,3,c	;volatile
  9664                           
  9665                           ;./pwm.h: 68:             CCP1M2 = 1;
  9666  003BEA  84BD               	bsf	4029,2,c	;volatile
  9667                           
  9668                           ;./pwm.h: 71:             break;
  9669  003BEC  EF12  F01E         	goto	l150
  9670  003BF0                     l151:
  9671                           
  9672                           ;./pwm.h: 74:             TRISC1 = 0;
  9673  003BF0  9294               	bcf	3988,1,c	;volatile
  9674                           
  9675                           ;./pwm.h: 75:             CCP2M3 = 1;
  9676  003BF2  86BA               	bsf	4026,3,c	;volatile
  9677                           
  9678                           ;./pwm.h: 76:             CCP2M2 = 1;
  9679  003BF4  84BA               	bsf	4026,2,c	;volatile
  9680                           
  9681                           ;./pwm.h: 77:             break;
  9682  003BF6  EF12  F01E         	goto	l150
  9683  003BFA                     l5211:
  9684  003BFA  5008               	movf	configPwm@channel^0,w,c
  9685  003BFC  6E06               	movwf	??_configPwm^0,c
  9686  003BFE  6A07               	clrf	(??_configPwm+1)^0,c
  9687                           
  9688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9689                           ; Switch size 1, requested type "simple"
  9690                           ; Number of cases is 1, Range of values is 0 to 0
  9691                           ; switch strategies available:
  9692                           ; Name         Instructions Cycles
  9693                           ; simple_byte            4     3 (average)
  9694                           ;	Chosen strategy is simple_byte
  9695  003C00  5007               	movf	(??_configPwm+1)^0,w,c
  9696  003C02  0A00               	xorlw	0	; case 0
  9697  003C04  B4D8               	btfsc	status,2,c
  9698  003C06  EF07  F01E         	goto	l8001
  9699  003C0A  EF12  F01E         	goto	l150
  9700  003C0E                     l8001:
  9701                           
  9702                           ; Switch size 1, requested type "simple"
  9703                           ; Number of cases is 2, Range of values is 1 to 2
  9704                           ; switch strategies available:
  9705                           ; Name         Instructions Cycles
  9706                           ; simple_byte            7     4 (average)
  9707                           ;	Chosen strategy is simple_byte
  9708  003C0E  5006               	movf	??_configPwm^0,w,c
  9709  003C10  0A01               	xorlw	1	; case 1
  9710  003C12  B4D8               	btfsc	status,2,c
  9711  003C14  EFF3  F01D         	goto	l149
  9712  003C18  0A03               	xorlw	3	; case 2
  9713  003C1A  B4D8               	btfsc	status,2,c
  9714  003C1C  EFF8  F01D         	goto	l151
  9715  003C20  EF12  F01E         	goto	l150
  9716  003C24                     l150:
  9717                           
  9718                           ;./pwm.h: 81:     TMR2ON = 1;
  9719  003C24  84CA               	bsf	4042,2,c	;volatile
  9720  003C26  0012               	return		;funcret
  9721  003C28                     __end_of_configPwm:
  9722                           	opt callstack 0
  9723                           
  9724 ;; *************** function _UART_init *****************
  9725 ;; Defined at:
  9726 ;;		line 13 in file "./UART.h"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  BAUD            4   31[COMRAM] long 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  frecuenciaCr    4    0        long 
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg, status,2, status,0, cstack
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9740 ;;      Params:         4       0       0       0       0       0       0       0       0
  9741 ;;      Locals:         8       0       0       0       0       0       0       0       0
  9742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9743 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9744 ;;Total ram usage:       12 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:    3
  9747 ;; This function calls:
  9748 ;;		___aldiv
  9749 ;; This function is called by:
  9750 ;;		_main
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text44
  9755  00382A                     __ptext44:
  9756                           	opt callstack 0
  9757  00382A                     _UART_init:
  9758                           	opt callstack 27
  9759  00382A                     
  9760                           ;./UART.h: 16:     TRISC6 = 0;
  9761  00382A  9C94               	bcf	3988,6,c	;volatile
  9762  00382C                     
  9763                           ;./UART.h: 17:     TRISC7 = 1;
  9764  00382C  8E94               	bsf	3988,7,c	;volatile
  9765  00382E                     
  9766                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9767  00382E  0E10               	movlw	16
  9768  003830  6E16               	movwf	___aldiv@divisor^0,c
  9769  003832  0E00               	movlw	0
  9770  003834  6E17               	movwf	(___aldiv@divisor+1)^0,c
  9771  003836  0E00               	movlw	0
  9772  003838  6E18               	movwf	(___aldiv@divisor+2)^0,c
  9773  00383A  0E00               	movlw	0
  9774  00383C  6E19               	movwf	(___aldiv@divisor+3)^0,c
  9775  00383E  0E00               	movlw	0
  9776  003840  6E12               	movwf	___aldiv@dividend^0,c
  9777  003842  0E09               	movlw	9
  9778  003844  6E13               	movwf	(___aldiv@dividend+1)^0,c
  9779  003846  0E3D               	movlw	61
  9780  003848  6E14               	movwf	(___aldiv@dividend+2)^0,c
  9781  00384A  0E00               	movlw	0
  9782  00384C  6E15               	movwf	(___aldiv@dividend+3)^0,c
  9783  00384E  ECB8  F016         	call	___aldiv	;wreg free
  9784  003852  C012  F028         	movff	?___aldiv,_UART_init$1640
  9785  003856  C013  F029         	movff	?___aldiv+1,_UART_init$1640+1
  9786  00385A  C014  F02A         	movff	?___aldiv+2,_UART_init$1640+2
  9787  00385E  C015  F02B         	movff	?___aldiv+3,_UART_init$1640+3
  9788  003862                     
  9789                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9790  003862  C028  F012         	movff	_UART_init$1640,___aldiv@dividend
  9791  003866  C029  F013         	movff	_UART_init$1640+1,___aldiv@dividend+1
  9792  00386A  C02A  F014         	movff	_UART_init$1640+2,___aldiv@dividend+2
  9793  00386E  C02B  F015         	movff	_UART_init$1640+3,___aldiv@dividend+3
  9794  003872  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
  9795  003876  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  9796  00387A  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  9797  00387E  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  9798  003882  ECB8  F016         	call	___aldiv	;wreg free
  9799  003886  0412               	decf	?___aldiv^0,w,c
  9800  003888  6EAF               	movwf	175,c	;volatile
  9801  00388A                     
  9802                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
  9803  00388A  84AC               	bsf	172,2,c	;volatile
  9804  00388C                     
  9805                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
  9806  00388C  98AC               	bcf	172,4,c	;volatile
  9807  00388E                     
  9808                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
  9809  00388E  8EAB               	bsf	171,7,c	;volatile
  9810  003890                     
  9811                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
  9812  003890  9CAC               	bcf	172,6,c	;volatile
  9813  003892                     
  9814                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
  9815  003892  8AAC               	bsf	172,5,c	;volatile
  9816  003894                     
  9817                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
  9818  003894  9CAB               	bcf	171,6,c	;volatile
  9819  003896                     
  9820                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
  9821  003896  88AB               	bsf	171,4,c	;volatile
  9822  003898  0012               	return		;funcret
  9823  00389A                     __end_of_UART_init:
  9824                           	opt callstack 0
  9825                           
  9826 ;; *************** function ___aldiv *****************
  9827 ;; Defined at:
  9828 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  dividend        4   17[COMRAM] long 
  9831 ;;  divisor         4   21[COMRAM] long 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;  quotient        4   27[COMRAM] long 
  9834 ;;  sign            1   26[COMRAM] unsigned char 
  9835 ;;  counter         1   25[COMRAM] unsigned char 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  4   17[COMRAM] long 
  9838 ;; Registers used:
  9839 ;;		wreg, status,2, status,0
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9845 ;;      Params:         8       0       0       0       0       0       0       0       0
  9846 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9848 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9849 ;;Total ram usage:       14 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:    2
  9852 ;; This function calls:
  9853 ;;		Nothing
  9854 ;; This function is called by:
  9855 ;;		_map
  9856 ;;		_UART_init
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text45
  9861  002D70                     __ptext45:
  9862                           	opt callstack 0
  9863  002D70                     ___aldiv:
  9864                           	opt callstack 24
  9865  002D70  0E00               	movlw	0
  9866  002D72  6E1B               	movwf	___aldiv@sign^0,c
  9867  002D74  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
  9868  002D76  EFC1  F016         	goto	u5490
  9869  002D7A  EFBF  F016         	goto	u5491
  9870  002D7E                     u5491:
  9871  002D7E  EFCB  F016         	goto	l4973
  9872  002D82                     u5490:
  9873  002D82  1E19               	comf	(___aldiv@divisor+3)^0,f,c
  9874  002D84  1E18               	comf	(___aldiv@divisor+2)^0,f,c
  9875  002D86  1E17               	comf	(___aldiv@divisor+1)^0,f,c
  9876  002D88  6C16               	negf	___aldiv@divisor^0,c
  9877  002D8A  0E00               	movlw	0
  9878  002D8C  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
  9879  002D8E  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
  9880  002D90  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
  9881  002D92  0E01               	movlw	1
  9882  002D94  6E1B               	movwf	___aldiv@sign^0,c
  9883  002D96                     l4973:
  9884  002D96  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
  9885  002D98  EFD2  F016         	goto	u5500
  9886  002D9C  EFD0  F016         	goto	u5501
  9887  002DA0                     u5501:
  9888  002DA0  EFDC  F016         	goto	l4979
  9889  002DA4                     u5500:
  9890  002DA4  1E15               	comf	(___aldiv@dividend+3)^0,f,c
  9891  002DA6  1E14               	comf	(___aldiv@dividend+2)^0,f,c
  9892  002DA8  1E13               	comf	(___aldiv@dividend+1)^0,f,c
  9893  002DAA  6C12               	negf	___aldiv@dividend^0,c
  9894  002DAC  0E00               	movlw	0
  9895  002DAE  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
  9896  002DB0  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
  9897  002DB2  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
  9898  002DB4  0E01               	movlw	1
  9899  002DB6  1A1B               	xorwf	___aldiv@sign^0,f,c
  9900  002DB8                     l4979:
  9901  002DB8  0E00               	movlw	0
  9902  002DBA  6E1C               	movwf	___aldiv@quotient^0,c
  9903  002DBC  0E00               	movlw	0
  9904  002DBE  6E1D               	movwf	(___aldiv@quotient+1)^0,c
  9905  002DC0  0E00               	movlw	0
  9906  002DC2  6E1E               	movwf	(___aldiv@quotient+2)^0,c
  9907  002DC4  0E00               	movlw	0
  9908  002DC6  6E1F               	movwf	(___aldiv@quotient+3)^0,c
  9909  002DC8  5016               	movf	___aldiv@divisor^0,w,c
  9910  002DCA  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
  9911  002DCC  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
  9912  002DCE  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
  9913  002DD0  B4D8               	btfsc	status,2,c
  9914  002DD2  EFED  F016         	goto	u5511
  9915  002DD6  EFEF  F016         	goto	u5510
  9916  002DDA                     u5511:
  9917  002DDA  EF25  F017         	goto	l5001
  9918  002DDE                     u5510:
  9919  002DDE  0E01               	movlw	1
  9920  002DE0  6E1A               	movwf	___aldiv@counter^0,c
  9921  002DE2  EFF9  F016         	goto	l4987
  9922  002DE6                     l4985:
  9923  002DE6  90D8               	bcf	status,0,c
  9924  002DE8  3616               	rlcf	___aldiv@divisor^0,f,c
  9925  002DEA  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
  9926  002DEC  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
  9927  002DEE  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
  9928  002DF0  2A1A               	incf	___aldiv@counter^0,f,c
  9929  002DF2                     l4987:
  9930  002DF2  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
  9931  002DF4  EFFE  F016         	goto	u5521
  9932  002DF8  EF00  F017         	goto	u5520
  9933  002DFC                     u5521:
  9934  002DFC  EFF3  F016         	goto	l4985
  9935  002E00                     u5520:
  9936  002E00                     l4989:
  9937  002E00  90D8               	bcf	status,0,c
  9938  002E02  361C               	rlcf	___aldiv@quotient^0,f,c
  9939  002E04  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
  9940  002E06  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
  9941  002E08  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
  9942  002E0A  5016               	movf	___aldiv@divisor^0,w,c
  9943  002E0C  5C12               	subwf	___aldiv@dividend^0,w,c
  9944  002E0E  5017               	movf	(___aldiv@divisor+1)^0,w,c
  9945  002E10  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
  9946  002E12  5018               	movf	(___aldiv@divisor+2)^0,w,c
  9947  002E14  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
  9948  002E16  5019               	movf	(___aldiv@divisor+3)^0,w,c
  9949  002E18  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
  9950  002E1A  A0D8               	btfss	status,0,c
  9951  002E1C  EF12  F017         	goto	u5531
  9952  002E20  EF14  F017         	goto	u5530
  9953  002E24                     u5531:
  9954  002E24  EF1D  F017         	goto	l4997
  9955  002E28                     u5530:
  9956  002E28  5016               	movf	___aldiv@divisor^0,w,c
  9957  002E2A  5E12               	subwf	___aldiv@dividend^0,f,c
  9958  002E2C  5017               	movf	(___aldiv@divisor+1)^0,w,c
  9959  002E2E  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
  9960  002E30  5018               	movf	(___aldiv@divisor+2)^0,w,c
  9961  002E32  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
  9962  002E34  5019               	movf	(___aldiv@divisor+3)^0,w,c
  9963  002E36  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
  9964  002E38  801C               	bsf	___aldiv@quotient^0,0,c
  9965  002E3A                     l4997:
  9966  002E3A  90D8               	bcf	status,0,c
  9967  002E3C  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
  9968  002E3E  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
  9969  002E40  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
  9970  002E42  3216               	rrcf	___aldiv@divisor^0,f,c
  9971  002E44  2E1A               	decfsz	___aldiv@counter^0,f,c
  9972  002E46  EF00  F017         	goto	l4989
  9973  002E4A                     l5001:
  9974  002E4A  501B               	movf	___aldiv@sign^0,w,c
  9975  002E4C  B4D8               	btfsc	status,2,c
  9976  002E4E  EF2B  F017         	goto	u5541
  9977  002E52  EF2D  F017         	goto	u5540
  9978  002E56                     u5541:
  9979  002E56  EF35  F017         	goto	l5005
  9980  002E5A                     u5540:
  9981  002E5A  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
  9982  002E5C  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
  9983  002E5E  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
  9984  002E60  6C1C               	negf	___aldiv@quotient^0,c
  9985  002E62  0E00               	movlw	0
  9986  002E64  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
  9987  002E66  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
  9988  002E68  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
  9989  002E6A                     l5005:
  9990  002E6A  C01C  F012         	movff	___aldiv@quotient,?___aldiv
  9991  002E6E  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
  9992  002E72  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
  9993  002E76  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
  9994  002E7A  0012               	return		;funcret
  9995  002E7C                     __end_of___aldiv:
  9996                           	opt callstack 0
  9997                           
  9998 ;; *************** function _boton *****************
  9999 ;; Defined at:
 10000 ;;		line 80 in file "main.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;		None
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		wreg, status,2, status,0, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10014 ;;      Params:         0       0       0       0       0       0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10016 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10017 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10018 ;;Total ram usage:        2 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:    1
 10021 ;; This function calls:
 10022 ;;		_antiRebote
 10023 ;; This function is called by:
 10024 ;;		Interrupt level 2
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	intcode
 10029  000008                     __pintcode:
 10030                           	opt callstack 0
 10031  000008                     _boton:
 10032                           	opt callstack 19
 10033                           
 10034                           ;incstack = 0
 10035  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10036  00000A  ED99  F01D         	call	int_func,f	;refresh shadow registers
 10037                           
 10038                           	psect	intcode_body
 10039  003B32                     __pintcode_body:
 10040                           	opt callstack 19
 10041  003B32                     int_func:
 10042                           	opt callstack 19
 10043  003B32  0006               	pop		; remove dummy address from shadow register refresh
 10044  003B34                     
 10045                           ;main.c: 82:     if (INT0IF)
 10046  003B34  A2F2               	btfss	4082,1,c	;volatile
 10047  003B36  EF9F  F01D         	goto	i2u590_41
 10048  003B3A  EFA1  F01D         	goto	i2u590_40
 10049  003B3E                     i2u590_41:
 10050  003B3E  EFC1  F01D         	goto	i2l248
 10051  003B42                     i2u590_40:
 10052  003B42                     
 10053                           ;main.c: 83:     {;main.c: 84:         antiRebote(1);
 10054  003B42  0E01               	movlw	1
 10055  003B44  EC6D  F01D         	call	_antiRebote
 10056  003B48                     
 10057                           ;main.c: 85:         if (pausa) {
 10058  003B48  0100               	movlb	0	; () banked
 10059  003B4A  51F9               	movf	_pausa& (0+255),w,b
 10060  003B4C  B4D8               	btfsc	status,2,c
 10061  003B4E  EFAB  F01D         	goto	i2u591_41
 10062  003B52  EFAD  F01D         	goto	i2u591_40
 10063  003B56                     i2u591_41:
 10064  003B56  EFBD  F01D         	goto	i2l246
 10065  003B5A                     i2u591_40:
 10066  003B5A                     
 10067                           ; BSR set to: 0
 10068                           ;main.c: 86:             pausa = 0;
 10069  003B5A  0E00               	movlw	0
 10070  003B5C  6FF9               	movwf	_pausa& (0+255),b
 10071  003B5E                     
 10072                           ; BSR set to: 0
 10073                           ;main.c: 87:             LATD2 = 1;
 10074  003B5E  848C               	bsf	3980,2,c	;volatile
 10075  003B60                     
 10076                           ; BSR set to: 0
 10077                           ;main.c: 88:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 10078  003B60  0E10               	movlw	16
 10079  003B62  6E05               	movwf	(??_boton+1)^0,c
 10080  003B64  0E39               	movlw	57
 10081  003B66  6E04               	movwf	??_boton^0,c
 10082  003B68  0E0E               	movlw	14
 10083  003B6A                     i2u967_47:
 10084  003B6A  2EE8               	decfsz	wreg,f,c
 10085  003B6C  D7FE               	bra	i2u967_47
 10086  003B6E  2E04               	decfsz	??_boton^0,f,c
 10087  003B70  D7FC               	bra	i2u967_47
 10088  003B72  2E05               	decfsz	(??_boton+1)^0,f,c
 10089  003B74  D7FA               	bra	i2u967_47
 10090                           
 10091                           ;main.c: 89:         } else {
 10092  003B76  EFC0  F01D         	goto	i2l5299
 10093  003B7A                     i2l246:
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;main.c: 90:             LATD2 = 0;
 10097  003B7A  948C               	bcf	3980,2,c	;volatile
 10098  003B7C                     
 10099                           ; BSR set to: 0
 10100                           ;main.c: 91:             pausa = 1;
 10101  003B7C  0E01               	movlw	1
 10102  003B7E  6FF9               	movwf	_pausa& (0+255),b
 10103  003B80                     i2l5299:
 10104                           
 10105                           ;main.c: 94:         INT0IF = 0;
 10106  003B80  92F2               	bcf	4082,1,c	;volatile
 10107  003B82                     i2l248:
 10108  003B82  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10109  003B84  0011               	retfie		f
 10110  003B86                     __end_of_boton:
 10111                           	opt callstack 0
 10112                           
 10113 ;; *************** function _antiRebote *****************
 10114 ;; Defined at:
 10115 ;;		line 128 in file "main.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;  pin             1    wreg     unsigned char 
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;  pin             1    2[COMRAM] unsigned char 
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      void 
 10122 ;; Registers used:
 10123 ;;		wreg, status,2, status,0
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0
 10130 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10131 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10132 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10133 ;;Total ram usage:        3 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; This function calls:
 10136 ;;		Nothing
 10137 ;; This function is called by:
 10138 ;;		_boton
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text47
 10143  003ADA                     __ptext47:
 10144                           	opt callstack 0
 10145  003ADA                     _antiRebote:
 10146                           	opt callstack 19
 10147                           
 10148                           ;incstack = 0
 10149                           ;antiRebote@pin stored from wreg
 10150  003ADA  6E03               	movwf	antiRebote@pin^0,c
 10151  003ADC                     
 10152                           ;main.c: 130:     switch (pin) {
 10153  003ADC  EF87  F01D         	goto	i2l5249
 10154  003AE0                     i2l264:
 10155  003AE0  A081               	btfss	129,0,c	;volatile
 10156  003AE2  EF75  F01D         	goto	i2u587_41
 10157  003AE6  EF77  F01D         	goto	i2u587_40
 10158  003AEA                     i2u587_41:
 10159  003AEA  EF70  F01D         	goto	i2l264
 10160  003AEE                     i2u587_40:
 10161  003AEE                     i2l267:
 10162  003AEE  B081               	btfsc	129,0,c	;volatile
 10163  003AF0  EF7C  F01D         	goto	i2u588_41
 10164  003AF4  EF7E  F01D         	goto	i2u588_40
 10165  003AF8                     i2u588_41:
 10166  003AF8  EF77  F01D         	goto	i2l267
 10167  003AFC                     i2u588_40:
 10168  003AFC                     
 10169                           ;main.c: 134:             _delay((unsigned long)((100)*(4000000/4000.0)));
 10170  003AFC  0E82               	movlw	130
 10171  003AFE  6E01               	movwf	??_antiRebote^0,c
 10172  003B00  0EDE               	movlw	222
 10173  003B02                     i2u968_47:
 10174  003B02  2EE8               	decfsz	wreg,f,c
 10175  003B04  D7FE               	bra	i2u968_47
 10176  003B06  2E01               	decfsz	??_antiRebote^0,f,c
 10177  003B08  D7FC               	bra	i2u968_47
 10178                           
 10179                           ;main.c: 135:             break;
 10180  003B0A  EF98  F01D         	goto	i2l272
 10181  003B0E                     i2l5249:
 10182  003B0E  5003               	movf	antiRebote@pin^0,w,c
 10183  003B10  6E01               	movwf	??_antiRebote^0,c
 10184  003B12  6A02               	clrf	(??_antiRebote+1)^0,c
 10185                           
 10186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10187                           ; Switch size 1, requested type "simple"
 10188                           ; Number of cases is 1, Range of values is 0 to 0
 10189                           ; switch strategies available:
 10190                           ; Name         Instructions Cycles
 10191                           ; simple_byte            4     3 (average)
 10192                           ;	Chosen strategy is simple_byte
 10193  003B14  5002               	movf	(??_antiRebote+1)^0,w,c
 10194  003B16  0A00               	xorlw	0	; case 0
 10195  003B18  B4D8               	btfsc	status,2,c
 10196  003B1A  EF91  F01D         	goto	i2l8003
 10197  003B1E  EF98  F01D         	goto	i2l272
 10198  003B22                     i2l8003:
 10199                           
 10200                           ; Switch size 1, requested type "simple"
 10201                           ; Number of cases is 1, Range of values is 1 to 1
 10202                           ; switch strategies available:
 10203                           ; Name         Instructions Cycles
 10204                           ; simple_byte            4     3 (average)
 10205                           ;	Chosen strategy is simple_byte
 10206  003B22  5001               	movf	??_antiRebote^0,w,c
 10207  003B24  0A01               	xorlw	1	; case 1
 10208  003B26  B4D8               	btfsc	status,2,c
 10209  003B28  EF70  F01D         	goto	i2l264
 10210  003B2C  EF98  F01D         	goto	i2l272
 10211  003B30                     i2l272:
 10212  003B30  0012               	return		;funcret
 10213  003B32                     __end_of_antiRebote:
 10214                           	opt callstack 0
 10215                           
 10216                           	psect	rparam
 10217  0000                     
 10218                           	psect	temp
 10219  00005A                     btemp:
 10220                           	opt callstack 0
 10221  00005A                     	ds	1
 10222  0000                     int$flags	set	btemp
 10223  0000                     wtemp8	set	btemp+1
 10224  0000                     ttemp5	set	btemp+1
 10225  0000                     ttemp6	set	btemp+4
 10226  0000                     ttemp7	set	btemp+8
 10227                           tosu	equ	0xFFF
 10228                           tosh	equ	0xFFE
 10229                           tosl	equ	0xFFD
 10230                           stkptr	equ	0xFFC
 10231                           pclatu	equ	0xFFB
 10232                           pclath	equ	0xFFA
 10233                           pcl	equ	0xFF9
 10234                           tblptru	equ	0xFF8
 10235                           tblptrh	equ	0xFF7
 10236                           tblptrl	equ	0xFF6
 10237                           tablat	equ	0xFF5
 10238                           prodh	equ	0xFF4
 10239                           prodl	equ	0xFF3
 10240                           indf0	equ	0xFEF
 10241                           postinc0	equ	0xFEE
 10242                           postdec0	equ	0xFED
 10243                           preinc0	equ	0xFEC
 10244                           plusw0	equ	0xFEB
 10245                           fsr0h	equ	0xFEA
 10246                           fsr0l	equ	0xFE9
 10247                           wreg	equ	0xFE8
 10248                           indf1	equ	0xFE7
 10249                           postinc1	equ	0xFE6
 10250                           postdec1	equ	0xFE5
 10251                           preinc1	equ	0xFE4
 10252                           plusw1	equ	0xFE3
 10253                           fsr1h	equ	0xFE2
 10254                           fsr1l	equ	0xFE1
 10255                           bsr	equ	0xFE0
 10256                           indf2	equ	0xFDF
 10257                           postinc2	equ	0xFDE
 10258                           postdec2	equ	0xFDD
 10259                           preinc2	equ	0xFDC
 10260                           plusw2	equ	0xFDB
 10261                           fsr2h	equ	0xFDA
 10262                           fsr2l	equ	0xFD9
 10263                           status	equ	0xFD8


Data Sizes:
    Strings     84
    Constant    4
    Data        1
    BSS         253
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    113     154
    BANK1           256     10     218
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1328_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), STR_3(CODE[13]), STR_2(CODE[15]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _efgtoa->___flge
    _efgtoa->___flsub
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _UART_printf->_UART_write
    _pwmDuty->___fltol
    _map->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _dameDistancia->___xxtofl
    ___xxtofl->___lwdiv
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _probarSensores->_probarUltrasonico
    _probarUltrasonico->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _probarUltrasonico->_sprintf

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   59546
                          _UART_init
                          _configPwm
                      _configurarAdc
    _inicializarComportamientoBasico
                     _probarSensores
 ---------------------------------------------------------------------------------
 (1) _probarSensores                                       0     0      0   45635
                  _probarUltrasonico
 ---------------------------------------------------------------------------------
 (2) _probarUltrasonico                                    3     3      0   45635
                                            110 BANK0      3     3      0
                        _UART_printf
                      _dameDistancia
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   43749
                                            102 BANK0      8     0      8
                                              0 BANK1     10    10      0
                      _dameDistancia (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   43245
                                             94 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           48    42      6   42718
                                             72 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   35909
                                              4 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3957
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             51 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    6091
                                             76 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    5198
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     303
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    2182
                                             76 COMRAM     8     0      8
                                              0 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1515
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     412
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _UART_printf                                          2     0      2     456
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (4) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   12989
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   11621
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   11621
                                              2 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    1660
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     787
                                             76 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3921
                                             51 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3443
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      22
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     900
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     756
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configPwm
   _configurarAdc
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flmul
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _probarSensores
     _probarUltrasonico
       _UART_printf
         _UART_write
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
       _sprintf
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      DA       7       85.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      9A       5       96.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CD      20        0.0%
DATA                 0      0     1CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Aug 02 01:49:22 2020

                       ?_probarUltrasonico 0001                               ___fldiv@aexp 0033  
                             ___fldiv@bexp 0032                               ___fldiv@sign 002B  
                             ___awdiv@sign 000B                             ?_configurarAdc 0001  
                      ___wmul@multiplicand 0008                                __CFG_BORV$3 000000  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                      ??_probarUltrasonico 00CE                                        l201 3898  
                                      l210 3E70                                        l133 3744  
                                      l141 28C8                                        l213 3E7E  
                                      l150 3C24                                        l222 3E9C  
                                      l151 3BF0                                        l152 3C26  
                                      l146 3BDA                                        l171 2C3C  
                                      l219 3A22                                        l251 3E92  
                                      l172 2C3E                                        l149 3BE6  
                                      l181 2C6C                                        l190 2C9C  
                                      l182 2C6E                                        l191 2C9E  
                                      l177 2CF0                                        l169 2C2E  
                                      l179 2C5E                                        l523 3E68  
                                      l275 3C72                                        l259 3570  
                                      l188 2C8E                                        l700 395C  
                                      l701 3964                                        l198 2D6E  
                                      l615 0C46                                        l704 3E42  
                                      l641 0FDE                                        l715 38F2  
                                      l716 3902                                        l574 336E  
                                      l577 33B0                                        l579 33EC  
                                      l597 1408                                        l694 1C7C  
                                      l783 2E7A                                        l935 34B0  
                                      l687 1D36                                        l963 36CA  
                                      l948 3620                                        l974 3088  
                                      l969 3042                                        l978 3DAE  
                             __CFG_CPB$OFF 000000                                        _PR2 000FCB  
                             __CFG_CPD$OFF 000000                               __CFG_BOR$OFF 000000  
                                      _map 36CC                                        _pad 3328  
                             ___awmod@sign 000B                                        wreg 000FE8  
                             ___flmul@aexp 0041                               ___flmul@bexp 0046  
                 _DISTANCIA_PRIORIDAD_BAJA 010C                   _DISTANCIA_PRIORIDAD_ALTA 0114  
                             ___flmul@sign 0040                               ___flmul@temp 004B  
                             ___flmul@prod 0047                               __CFG_LVP$OFF 000000  
                             ___fltol@exp1 0061                               __CFG_WDT$OFF 000000  
                                     l1001 2F82                                       l1202 37B8  
                                     l1300 2406                                       l1232 15F8  
                                     l1241 18C8                                       l1233 15E6  
                                     l1322 2160                                       l1234 15AC  
                                     l1325 1FF2                                       l1501 3A7E  
                                     l1318 1DFC                                       l1414 2C04  
                                     l1335 2122                                       l1327 206A  
                                     l1423 270C                                       l1511 325C  
                                     l1328 2058                                       l1433 3DE6  
                                     l1441 3BD6                                       l1417 2C0C  
                                     l1249 1712                                       l1521 39BC  
                                     l1362 2A7C                                       l1258 17E2  
                                     l1274 3CB8                                       l1426 2650  
                                     l1195 37B0                                       l1291 231E  
                                     l1259 17D0                                       l1507 3E1C  
                                     l1373 2A14                                       l1366 29B8  
                                     l1286 24FA                                       l1462 3326  
                                     l1470 3CFC                                       l1526 39C4  
                                     l1359 2920                                       l1447 3D76  
                                     l1288 235A                                       l1480 3E9E  
                                     l5001 2E4A                                       l1297 23A0  
                                     l1385 3186                                       l5003 2E5A  
                                     l1299 2418                                       l5005 2E6A  
                                     l1477 3AD8                                       l5201 3BDA  
                                     l5009 36CC                                       l6001 1490  
                                     l5211 3BFA                                       l6011 14D0  
                                     l6003 149E                                       l5221 382C  
                                     l6101 16AC                                       l6021 150A  
                                     l6013 14D2                                       l6005 14A0  
                                     l5231 388E                                       l5223 382E  
                                     l5207 3BDE                                       l6111 1728  
                                     l6103 16E0                                       l6031 151E  
                                     l6023 150E                                       l6007 14B0  
                                     l6015 14DA                                       l5233 3890  
                                     l5225 3862                                       l5217 382A  
                                     l5241 3E94                                       l6121 1764  
                                     l6113 1738                                       l6105 16E2  
                                     l6041 1532                                       l6033 1522  
                                     l6025 1512                                       l6017 14EA  
                                     l6009 14C0                                       l6201 30AA  
                                     l7001 135C                                       l5235 3892  
                                     l5227 388A                                       l5219 382A  
                                     l6131 1790                                       l6123 1766  
                                     l6107 16F2                                       l6051 1546  
                                     l6043 1536                                       l6035 1526  
                                     l6027 1516                                       l6019 14FC  
                                     l6203 30E8                                       l6211 3128  
                                     l7011 13AC                                       l7003 136C  
                                     l5237 3894                                       l5229 388C  
                                     l6301 21F4                                       l6141 17C8  
                                     l6125 1774                                       l6117 174C  
                                     l6133 1792                                       l6109 1702  
                                     l6061 15A4                                       l6045 153A  
                                     l6037 152A                                       l6029 151A  
                                     l6053 154A                                       l6213 313A  
                                     l6205 3110                                       l6221 3A24  
                                     l7021 13E8                                       l7013 13BE  
                                     l7005 1372                                       l7101 193E  
                                     ?_map 0020                                       ?_pad 0016  
                                     l5239 3896                                       l6311 222E  
                                     l6303 2204                                       l7031 2A96  
                                     l6151 1846                                       l6127 177C  
                                     l6119 1756                                       l6135 17A0  
                                     l6071 15DA                                       l6063 15BA  
                                     l6055 154E                                       l6047 153E  
                                     l6039 152E                                       l6207 311C  
                                     l6223 3A34                                       l6231 39AE  
                                     l7015 13CA                                       l7007 1378  
                                     l7111 19D8                                       l7103 194C  
                                     l8001 3C0E                                       l7201 3784  
                                     l6401 24EE                                       l6313 2244  
                                     l6305 2214                                       l7033 2A9A  
                                     l6161 188C                                       l6145 17F2  
                                     l6153 1848                                       l6137 17A4  
                                     l6129 1780                                       l6081 162A  
                                     l6073 15E4                                       l6065 15C6  
                                     l6057 1578                                       l6049 1542  
                                     l6217 317E                                       l6241 2586  
                                     l6225 3966                                       l7017 13D2  
                                     l7121 1A64                                       l7105 1970  
                                     l7203 379A                                       l7211 28CC  
                                     l6403 24F0                                       l6331 2298  
                                     l6315 2254                                       l6323 2274  
                                     l6307 2216                                       l6411 1D38  
                                     l7051 2B50                                       l7043 2AF6  
                                     l7035 2AB6                                       l7027 2A7E  
                                     l6171 18B6                                       l6163 189A  
                                     l6155 1858                                       l6147 17FE  
                                     l6139 17B2                                       l6091 1666  
                                     l6083 163A                                       l6075 1606  
                                     l6067 15CA                                       l6059 1594  
                                     l6243 2594                                       l6251 2674  
                                     l6235 24FC                                       l7019 13E2  
                                     l7131 1B00                                       l7123 1A96  
                                     l7115 1A20                                       l7107 19AA  
                                     l7205 37A2                                       l7213 28DC  
                                     l7301 2D5E                                       l6341 22EA  
                                     l6333 22B2                                       l6325 2284  
                                     l6317 225C                                       l6309 221E  
                                     l6501 2010                                       l6421 1D74  
                                     l6413 1D44                                       l7061 2BD6  
                                     l7045 2B0C                                       l7037 2AEC  
                                     l7029 2A92                                       l6173 18B8  
                                     l6165 18A0                                       l6157 1868  
                                     l6149 180C                                       l6093 1674  
                                     l6085 1648                                       l6077 1616  
                                     l6069 15D8                                       l6253 26B0  
                                     l6237 251C                                       l6181 334C  
                                     l6229 399C                                       l7141 1B98  
                                     l7133 1B0E                                       l7125 1AA6  
                                     l7109 19CA                                       l7117 1A32  
                                     l7207 37A4                                       l7231 29A2  
                                     l7223 295A                                       l7215 28EA  
                                     l6351 2346                                       l6343 22FA  
                                     l6335 22C2                                       l6327 2284  
                                     l6319 2260                                       l6511 207A  
                                     l6503 2014                                       l6431 1DA6  
                                     l6423 1D84                                       l6415 1D52  
                                     l7311 39CA                                       l6263 3DB0  
                                     l7063 2BE8                                       l7055 2B86  
                                     l7047 2B14                                       l7039 2AF0  
                                     l6167 18A2                                       l6159 1888  
                                     l6095 1676                                       l6087 1656  
                                     l6255 26C4                                       l6247 2604  
                                     l6239 2572                                       l6191 3392  
                                     l6183 335A                                       l7071 31B2  
                                     l7135 1B3E                                       l7127 1AD8  
                                     l7119 1A54                                       l7209 37AA  
                                     l7241 2A22                                       l7233 29AE  
                                     l7225 2962                                       l7217 2930  
                                     l6361 2386                                       l6353 2348  
                                     l6345 230E                                       l6337 22D2  
                                     l6281 218E                                       l6273 2162  
                                     l6521 20DC                                       l6513 2086  
                                     l6505 2022                                       l6441 1DE6  
                                     l6433 1DB4                                       l6425 1D8A  
                                     l6417 1D54                                       l7313 39EE  
                                     l7049 2B1C                                       l6601 359E  
                                     l6169 18A8                                       l6097 1680  
                                     l6089 1662                                       l6257 26EC  
                                     l6249 2640                                       l6193 33C0  
                                     l6185 3366                                       l6177 3328  
                                     l7081 3200                                       l7161 1CD6  
                                     l7145 1C06                                       l7129 1AEA  
                                     l7321 3A9A                                       l7251 2A6A  
                                     l7243 2A24                                       l7235 29EA  
                                     l7227 296E                                       l7219 2946  
                                     l6371 23C2                                       l6363 2390  
                                     l6355 2358                                       l6347 231C  
                                     l6339 22E2                                       l6291 21C8  
                                     l6283 219E                                       l6275 216E  
                                     l6531 2144                                       l6523 20F0  
                                     l6515 2094                                       l6507 2050  
                                     l6451 1E30                                       l6443 1DEC  
                                     l6435 1DB6                                       l6427 1D9A  
                                     l6419 1D64                                       l7315 39F2  
                                     l6267 3E1E                                       l7059 2BC4  
                                     l6611 35D6                                       l6603 35A6  
                                     l6099 1686                                       l6259 26FC  
                                     l6195 33D4                                       l6187 337A  
                                     l6179 3338                                       l7083 3212  
                                     l7075 31BE                                       l7147 1C18  
                                     l7155 1C90                                       l7139 1B6A  
                                     l7091 18EE                                       l7171 1D00  
                                     l7323 3AA2                                       l7331 34BA  
                                     l7253 2A6C                                       l7245 2A28  
                                     l7237 29F6                                       l7229 29A0  
                                     l6381 2434                                       l6373 23D0  
                                     l6365 239E                                       l6357 236A  
                                     l6349 2328                                       l6293 21CE  
                                     l6285 21AE                                       l6277 217C  
                                     l6533 2146                                       l6525 210A  
                                     l6517 20BE                                       l6461 1E80  
                                     l6453 1E3C                                       l6445 1E0C  
                                     l6437 1DC6                                       l6429 1DA0  
                                     l7261 278E                                       l7309 39C6  
                                     l6269 3E3A                                       l6621 3610  
                                     l6613 35EC                                       l6605 35B8  
                                     l6541 3C74                                       l6189 338E  
                                     l7085 323A                                       l7077 31CC  
                                     l7069 3188                                       l7173 1D24  
                                     l7157 1CB4                                       l7165 1CE4  
                                     l7149 1C4C                                       l7093 18FC  
                                     l7181 3904                                       l7325 3AC0  
                                     l7317 3A80                                       l7333 34CA  
                                     l7341 351E                                       l7191 374E  
                                     l7247 2A4C                                       l7239 2A04  
                                     l6391 24A0                                       l6383 2442  
                                     l6375 23FE                                       l6359 2380  
                                     l6367 23B0                                       l6295 21D4  
                                     l6287 21B0                                       l6279 217E  
                                     l6527 2126                                       l6535 214C  
                                     l6519 20C2                                       l6471 1EC2  
                                     l6463 1E8C                                       l6455 1E46  
                                     l6447 1E1C                                       l6439 1DD6  
                                     l6711 2F62                                       l7263 2814  
                                     l7351 3E44                                       l6551 3400  
                                     l6623 3618                                       l6615 35F4  
                                     l6607 35C0                                       l6631 3660  
                                     l6543 3C84                                       l6199 308A  
                                     l7079 31E4                                       l7167 1CF2  
                                     l7159 1CC2                                       l7095 190E  
                                     l7183 390C                                       l7319 3A92  
                                     l7343 354A                                       l7335 34DA  
                                     l7193 3760                                       l7249 2A5C  
                                     l7281 2C28                                       l6393 24BA  
                                     l6385 246C                                       l6369 23BE  
                                     l6297 21E2                                       l6289 21B8  
                                     l6537 2150                                       l6529 2136  
                                     l6481 1F24                                       l6473 1ECE  
                                     l6465 1E98                                       l6457 1E5C  
                                     l6713 2F72                                       l6705 2F36  
                                     l4961 38C8                                       l7265 2858  
                                     l7257 270E                                       l7361 3C58  
                                     l6721 3B9E                                       l6561 3426  
                                     l6553 3408                                       l6617 35FA  
                                     l6609 35C8                                       l6633 368E  
                                     l6801 0ADE                                       l7097 1912  
                                     l7089 18CA                                       l7185 391A  
                                     l7345 3556                                       l7329 34B6  
                                     l7353 3E80                                       l4971 2D92  
                                     l7195 3768                                       l7283 2C4C  
                                     l7291 2CBE                                       l7275 2C10  
                                     l6395 24D6                                       l6379 2428  
                                     l6387 2470                                       l6299 21E4  
                                     l6491 1FBA                                       l6483 1F30  
                                     l6475 1EDE                                       l6467 1EA6  
                                     l6459 1E68                                       l6707 2F42  
                                     l4963 38D2                                       l4955 389A  
                                     l7259 276E                                       l7363 3C6E  
                                     l7355 3C28                                       l7179 3E6C  
                                     l6723 3BCC                                       l6571 345E  
                                     l6563 342E                                       l6555 340C  
                                     l6547 33EE                                       l6619 3600  
                                     l6635 369E                                       l6627 3622  
                                     l6651 3002                                       l6643 2F84  
                                     l6811 0BAE                                       l6803 0B12  
                                     l6731 0864                                       l7099 1936  
                                     l7187 3940                                       l7339 34EA  
                                     l4981 2DC8                                       l4973 2D96  
                                     l4965 2D70                                       l7197 3770  
                                     l7189 3746                                       l7293 2D00  
                                     l7285 2C7C                                       l7277 2C20  
                                     l6397 24DA                                       l6389 248A  
                                     l6493 1FD8                                       l6485 1F4C  
                                     l6477 1EF8                                       l6469 1EB2  
                                     l6709 2F52                                       l4957 38AA  
                                     l7269 289C                                       l7357 3C2C  
                                     l6725 3BD0                                       l6717 3B86  
                                     l6581 348A                                       l6573 3464  
                                     l6565 3440                                       l6557 341A  
                                     l6549 33F2                                       l6637 36C2  
                                     l6629 3650                                       l6661 3086  
                                     l6653 3010                                       l6645 2FB4  
                                     l5941 3270                                       l6901 0FFA  
                                     l6821 0C18                                       l6805 0B18  
                                     l6813 0BE0                                       l6741 08B8  
                                     l6733 0874                                       l4991 2E0A  
                                     l4983 2DDE                                       l4975 2DA4  
                                     l4967 2D74                                       l7199 377E  
                                     l7295 2D12                                       l7287 2CAC  
                                     l7279 2C22                                       l6399 24E8  
                                     l6495 1FE2                                       l6487 1F76  
                                     l6479 1F08                                       l4959 38B8  
                                     l7359 3C42                                       l6719 3B8A  
                                     l6575 347A                                       l6567 3448  
                                     l6583 3490                                       l6559 3422  
                                     l6591 3572                                       l6639 36C8  
                                     l6655 3022                                       l6647 2FC4  
                                     l5943 3282                                       l6911 10A0  
                                     l6903 105E                                       l6823 0C20  
                                     l6815 0BF0                                       l6807 0B72  
                                     l6751 08FE                                       l6743 08C0  
                                     l6735 0882                                       l4993 2E28  
                                     l4985 2DE6                                       l4977 2DB4  
                                     l4969 2D82                                       l7297 2D4C  
                                     l6497 1FF0                                       l6489 1FAC  
                                     l6681 2ED2                                       l6673 2E7C  
                                     l6585 34A0                                       l6577 3482  
                                     l6569 3450                                       l6593 3576  
                                     l6657 3030                                       l6649 2FF2  
                                     l6665 3D78                                       l5945 328C  
                                     l5953 3CBA                                       l5961 3DE8  
                                     l6921 10DC                                       l6905 106E  
                                     l6913 10A8                                       l6841 0CD0  
                                     l6833 0C64                                       l6825 0C3A  
                                     l6817 0BF4                                       l6809 0BA6  
                                     l6761 093A                                       l6753 0906  
                                     l6745 08D2                                       l6737 088A  
                                     l6729 085A                                       l4995 2E38  
                                     l4987 2DF2                                       l4979 2DB8  
                                     l7299 2D4C                                       l6499 2002  
                                     l6683 2ED4                                       l6675 2E94  
                                     l6587 34A8                                       l6579 3484  
                                     l6595 3584                                       l6659 3080  
                                     l6667 3D8E                                       l5947 32AA  
                                     l5939 325E                                       l5955 3CC6  
                                     l5963 3DF4                                       l5971 3D40  
                                     l6931 1108                                       l6923 10E2  
                                     l6915 10BA                                       l6907 1080  
                                     l6851 0D0E                                       l6835 0C76  
                                     l6843 0CD4                                       l6819 0C06  
                                     l6827 0C52                                       l6771 09B6  
                                     l6755 090A                                       l6747 08E0  
                                     l6739 08AE                                       l4997 2E3A  
                                     l4989 2E00                                       l6685 2EE4  
                                     l6597 358C                                       l6669 3D9E  
                                     l5981 1426                                       l5949 32E0  
                                     l5957 3CD8                                       l5965 3DF8  
                                     l6925 10EE                                       l6917 10C8  
                                     l6933 110E                                       l6941 113C  
                                     l6909 1092                                       l6861 0D5C  
                                     l6853 0D12                                       l6845 0CDC  
                                     l6837 0C92                                       l6773 09C0  
                                     l6765 0970                                       l6757 090E  
                                     l6749 08F2                                       l4999 2E44  
                                     l6695 2F0E                                       l6687 2EE8  
                                     l6679 2EA8                                       l6599 3590  
                                     l5983 1436                                       l5991 1460  
                                     l5975 140A                                       l5959 3CDC  
                                     l5967 3E10                                       l6951 11F2  
                                     l6943 1194                                       l6935 1120  
                                     l6927 10FE                                       l6919 10D8  
                                     l6871 0DF4                                       l6855 0D24  
                                     l6863 0D64                                       l6847 0CEE  
                                     l6839 0CC8                                       l6783 0A44  
                                     l6767 0982                                       l6759 0914  
                                     l6697 2F18                                       l6689 2EF6  
                                     l5993 1470                                       l5985 1446  
                                     l5977 1416                                       l6961 1242  
                                     l6953 120E                                       l6945 11C8  
                                     l6937 1132                                       l6929 1102  
                                     l6881 0ED8                                       l6873 0E4C  
                                     l6865 0D6C                                       l6857 0D32  
                                     l6849 0D00                                       l6785 0A56  
                                     l6769 099E                                       l6777 09E8  
                                     l6699 2F22                                       l5995 1476  
                                     l5987 1456                                       l5979 1424  
                                     l6971 1284                                       l6963 1252  
                                     l6955 1220                                       l6947 11D0  
                                     l6939 1136                                       l6891 0F72  
                                     l6883 0F0A                                       l6875 0E80  
                                     l6867 0D7C                                       l6859 0D4A  
                                     l6787 0A72                                       l6779 0A0E  
                                     l6795 0A8E                                       l5997 1488  
                                     l5989 1458                                       l6981 12B4  
                                     l6973 1292                                       l6965 1264  
                                     l6957 122E                                       l6949 11D4  
                                     l6893 0FA6                                       l6885 0F20  
                                     l6869 0D90                                       l6877 0E86  
                                     l6797 0AA8                                       l7861 37EA  
                                     l5999 148A                                       l6991 1316  
                                     l6983 12DA                                       l6975 129A  
                                     l6967 126C                                       l6959 123E  
                                     l6895 0FB6                                       l6887 0F52  
                                     l6879 0EA4                                       l7871 381E  
                                     l7863 37F0                                       l7855 37BA  
                                     l6993 1330                                       l6985 12F6  
                                     l6977 12A2                                       l6969 127C  
                                     l6897 0FCA                                       l6889 0F62  
                                     l7865 37F4                                       l7857 37E0  
                                     l6995 1336                                       l6987 12FE  
                                     l6979 12AE                                       l6899 0FD6  
                                     l7867 3808                                       l7859 37E4  
                                     l6997 1348                                       l6989 1304  
                                     l7869 381A                                       l6999 1354  
                                     l7993 3500                                       l7995 2B3A  
                                     l7997 28B2                                       l7999 2CD2  
                                     STR_1 082B                                       STR_2 081C  
                                     STR_3 0839                                       STR_4 0805  
                                     STR_5 0846                                       STR_6 084E  
                                     STR_9 084A                                       u7000 33B0  
                                     u7001 33AC                                       u7010 33C0  
                                     u7011 33BC                                       u5500 2DA4  
                                     u7020 30CA                                       u7100 3A7E  
                                     u5501 2DA0                                       u7101 3A7A  
                                     u5510 2DDE                                       u7030 30E8  
                                     u7110 3996                                       u5511 2DDA  
                                     u7031 30E4                                       u7111 3990  
                                     u5520 2E00                                       u7040 3110  
                                     u7200 2640                                       u7120 3998  
                                     u8000 08E0                                       u5521 2DFC  
                                     u7041 310C                                       u7025 30C0  
                                     u7201 263C                                       u8001 08DC  
                                     u5530 2E28                                       u7050 313A  
                                     u7210 2694                                       u7130 39AE  
                                     u8010 08F2                                       u5531 2E24  
                                     u7051 3136                                       u7131 39AA  
                                     u8011 08EE                                       u5540 2E5A  
                                     u7300 21F4                                       u7220 26B0  
                                     u7140 2544                                       u8100 0ADA  
                                     u8020 093A                                       _RCIF 007CF5  
                                     u5541 2E56                                       u7301 21F0  
                                     u7221 26AC                                       u8101 0AD6  
                                     u8021 0936                                       u7310 2204  
                                     u5470 38B8                                       u7070 3174  
                                     u7230 26EC                                       u7150 2572  
                                     u6510 3270                                       u8110 0B6E  
                                     u8030 096A                                       u7311 2200  
                                     u5471 38B4                                       u7071 316E  
                                     u7231 26E8                                       u7215 268A  
                                     u7151 256E                                       u6511 326C  
                                     u8111 0B6A                                       u8031 0964  
                                     u9000 2C9C                                       u7400 23BE  
                                     u7320 2244                                       u5480 38F2  
                                     u7240 3DE0                                       u6600 1436  
                                     u7080 3176                                       u7160 2594  
                                     u6520 3282                                       u8200 0CEE  
                                     u8120 0BE0                                       u8040 096C  
                                     u9001 2C98                                       u7401 23BA  
                                     u7321 2240                                       u5481 38EE  
                                     u7241 3DDA                                       u6601 1432  
                                     u7065 314C                                       u7161 2590  
                                     u7145 253A                                       u6521 327E  
                                     u8201 0CEA                                       u8121 0BDC  
                                     u5490 2D82                                       u9010 2CAC  
                                     u7410 23D0                                       u7330 2284  
                                     u7250 3DE2                                       u6610 1446  
                                     u6530 32AA                                       u7090 3A6C  
                                     u8210 0D00                                       u8130 0C06  
                                     u8050 0982                                       u5491 2D7E  
                                     u9011 2CA8                                       u7411 23CC  
                                     u7331 2280                                       u6611 1442  
                                     u6531 32A6                                       u8211 0CFC  
                                     u8131 0C02                                       u8051 097E  
                                     u9020 2CBA                                       u7420 23FE  
                                     u7340 22FA                                       u7260 217C  
                                     u7500 1D64                                       u6700 1592  
                                     u6620 1488                                       u7180 2600  
                                     u6540 32E0                                       u8300 0FCA  
                                     u8220 0D0E                                       u8140 0C18  
                                     u8060 0A0E                                       u9021 2CB6  
                                     u7421 23FA                                       u7341 22F6  
                                     u7261 2178                                       u7501 1D60  
                                     u6621 1484                                       u7181 25FC  
                                     u6541 32DC                                       u8301 0FC6  
                                     u8221 0D0A                                       u8141 0C14  
                                     u8061 0A0A                                       u9030 2D00  
                                     u7430 2414                                       u7350 231C  
                                     u7270 218E                                       u7510 1D74  
                                     u6710 15BA                                       u6630 149E  
                                     u7190 2624                                       u6550 3CFC  
                                     u8310 106E                                       u8230 0D24  
                                     u8150 0C3A                                       u8070 0A3E  
                                     u9031 2CFC                                       u7431 2410  
                                     u7351 2318                                       u7271 218A  
                                     u7511 1D70                                       u6711 15B6  
                                     u6631 149A                                       u7175 25A8  
                                     u6551 3CF8                                       u8311 106A  
                                     u8231 0D20                                       u8151 0C36  
                                     u8071 0A38                                       u7440 2428  
                                     u7360 2346                                       u7280 219E  
                                     u7600 2022                                       u7520 1DB4  
                                     u9040 39EA                                       u6800 16F2  
                                     u6720 15D8                                       u6640 14B0  
                                     u7176 25B2                                       u6560 3E10  
                                     u8400 1220                                       u8320 1080  
                                     u8240 0D32                                       u8160 0C60  
                                     u8080 0A40                                       u7441 2424  
                                     u7361 2342                                       u7281 219A  
                                     u7601 201E                                       u7521 1DB0  
                                     u6801 16EE                                       u6721 15D4  
                                     u6641 14AC                                       u7177 25C2  
                                     u6561 3E0C                                       u7097 3A62  
                                     u8401 121C                                       u8321 107C  
                                     u8241 0D2E                                       u8161 0C5C  
                                     u7450 2442                                       u7370 236A  
                                     u7290 21E2                                       u7610 2050  
                                     u7530 1DC6                                       u9050 3A12  
                                     u6810 1728                                       u6730 15F8  
                                     u6650 14C0                                       u6570 3D70  
                                     u8410 122E                                       u8330 1092  
                                     u8250 0D5C                                       u8170 0C76  
                                     u8090 0A56                                       u7451 243E  
                                     u7371 2366                                       u7291 21DE  
                                     u7611 204C                                       u7531 1DC2  
                                     u6811 1724                                       u6731 15F4  
                                     u6651 14BC                                       u7195 261A  
                                     u6571 3D6A                                       u8411 122A  
                                     u8331 108E                                       u8251 0D58  
                                     u8171 0C72                                       u8091 0A52  
                                     u7460 248A                                       u7380 2380  
                                     u7620 2066                                       u7540 1DD6  
                                     u9060 3A22                                       u8500 2AB6  
                                     u7700 3440                                       u6900 17F2  
                                     u6820 1738                                       u6740 1606  
                                     u6660 14FC                                       u6580 3D72  
                                     u8420 1264                                       u8340 10A0  
                                     u8260 0EA4                                       u8180 0C92  
                                     u7461 2486                                       u7381 237C  
                                     u7621 2062                                       u7541 1DD2  
                                     u9061 3A1E                                       u8501 2AB2  
                                     u7701 343C                                       u6901 17EE  
                                     u6821 1734                                       u6741 1602  
                                     u6661 14F8                                       u8421 1260  
                                     u8341 109C                                       u8261 0EA0  
                                     u8181 0C8E                                       u7470 24BA  
                                     u7390 239E                                       u7630 207A  
                                     u7550 1E0C                                       u8510 2AEC  
                                     u7710 345E                                       u6910 180C  
                                     u6830 1764                                       u6750 1616  
                                     u6670 150A                                       u6590 1424  
                                     u8430 1292                                       u8350 10BA  
                                     u8270 0F0A                                       u8190 0CC8  
                                     u7471 24B6                                       u7391 239A  
                                     u7631 2076                                       u7551 1E08  
                                     u9047 39E0                                       u8511 2AE8  
                                     u7711 345A                                       u6911 1808  
                                     u6831 1760                                       u6751 1612  
                                     u6671 1506                                       u6591 1420  
                                     u8431 128E                                       u8351 10B6  
                                     u8271 0F06                                       u8191 0CC4  
                                     u7480 24E8                                       u7640 2094  
                                     u7560 1E1C                                       u8520 2B08  
                                     u7720 347A                                       u7800 3650  
                                     u6920 1846                                       u6840 1774  
                                     u6760 1648                                       u6680 1578  
                                     u8440 1316                                       u8360 10C8  
                                     u8280 0F52                                       u8600 3212  
                                     u7481 24E4                                       u7641 2090  
                                     u7561 1E18                                       u9057 3A08  
                                     u8521 2B04                                       u7721 3476  
                                     u7801 364C                                       u6921 1842  
                                     u6841 1770                                       u6761 1644  
                                     u6681 1574                                       u8441 1312  
                                     u8361 10C4                                       u8281 0F4E  
                                     u8601 320E                                       u7650 20DC  
                                     u7570 1F96                                       u7490 1D52  
                                     u8530 2BBE                                       u7730 34A0  
                                     u7810 368E                                       u6930 1858  
                                     u6850 1790                                       u6770 1656  
                                     u6690 1590                                       u8450 1330  
                                     u8370 1120                                       u8290 0F62  
                                     u8610 323A                                       u7651 20D8  
                                     u7491 1D4E                                       u8531 2BB8  
                                     u7731 349C                                       u7811 368A  
                                     u6931 1854                                       u6851 178C  
                                     u6771 1652                                       u6691 158A  
                                     u8451 132C                                       u8371 111C  
                                     u8291 0F5E                                       u8611 3236  
                                     u7660 210A                                       u7580 1FF0  
                                     u7900 2EC8                                       u8540 2BC0  
                                     u7740 3584                                       u7820 36C2  
                                     u6940 1868                                       u6860 17A0  
                                     u6780 1674                                       u8460 1348  
                                     u8380 11F2                                       u8700 1AEA  
                                     u8620 18EE                                       u7661 2106  
                                     u7581 1FEC                                       u7741 3580  
                                     u7821 36BE                                       u6941 1864  
                                     u6861 179C                                       u6781 1670  
                                     u8461 1344                                       u8381 11EE  
                                     u8701 1AE6                                       u8621 18EA  
                                     u7670 2144                                       u7590 2010  
                                     u7910 2EF6                                       u8550 2BD6  
                                     u7750 359E                                       u7830 2FB4  
                                     u6950 1888                                       u6870 17B2  
                                     u6790 16AC                                       u8470 13A6  
                                     u8390 120E                                       u8710 1B98  
                                     u8630 1936                                       u7671 2140  
                                     u7591 200C                                       u7575 1F8C  
                                     u7911 2EF2                                       u8551 2BD2  
                                     u7751 359A                                       u7831 2FB0  
                                     u6951 1884                                       u6871 17AE  
                                     u6791 16A8                                       u8471 13A0  
                                     u8391 120A                                       u8711 1B94  
                                     u8631 1932                                       u8800 379A  
                                     u7920 2F0A                                       u8560 2BE8  
                                     u7680 3400                                       u7760 35B8  
                                     u7840 2FF2                                       u6960 189A  
                                     u6880 17C8                                       u8480 13A8  
                                     u8720 1C00                                       u8640 1970  
                                     u8801 3796                                       u7921 2F06  
                                     u7905 2EBE                                       u8561 2BE4  
                                     u7681 33FC                                       u7761 35B4  
                                     u7841 2FEE                                       u6961 1896  
                                     u6881 17C4                                       u8721 1BFA  
                                     u8641 196C                                       u8810 28DC  
                                     u7930 2F32                                       u7690 341A  
                                     u7770 35D6                                       u7850 3010  
                                     u6970 18B6                                       u6890 17DE  
                                     u8490 13BE                                       u8570 31B2  
                                     u8730 1C02                                       u8650 1A1A  
                                     u8811 28D8                                       u7931 2F2E  
                                     u7691 3416                                       u7771 35D2  
                                     u7851 300C                                       u6971 18B2  
                                     u6891 17DA                                       u8491 13BA  
                                     u8571 31AE                                       u8651 1A14  
                                     u8900 2A6A                                       u8820 28EA  
                                     u7940 2F52                                       u7780 35EC  
                                     u7860 3030                                       u6980 3338  
                                     u8580 31E4                                       u8740 1C18  
                                     u8660 1A1C                                       u8901 2A66  
                                     u8821 28E6                                       u7941 2F4E  
                                     u7781 35E8                                       u7861 302C  
                                     u6981 3334                                       u8581 31E0  
                                     u8741 1C14                                       u8830 2946  
                                     u7950 2F62                                       u8910 278E  
                                     u7790 3610                                       u7870 3080  
                                     u6990 335A                                       u8590 3200  
                                     u8750 1CB4                                       u8670 1A32  
                                     u8831 2942                                       u7951 2F5E  
                                     u8911 278A                                       u7791 360C  
                                     u7871 307C                                       u6991 3356  
                                     u8591 31FC                                       u8751 1CB0  
                                     u8671 1A2E                                       u8840 299C  
                                     u8760 3E7E                                       u7960 3B9E  
                                     u7880 3D8E                                       u8680 1A64  
                                     u9640 381A                                       u8841 2998  
                                     u8761 3E7A                                       u7961 3B9A  
                                     u7881 3D8A                                       u8681 1A60  
                                     u9641 3816                                       u8850 29E6  
                                     u7890 2E94                                       u7970 3BCC  
                                     u8690 1AA6                                       u8770 395C  
                                     u8851 29E2                                       u7891 2E90  
                                     u7971 3BC8                                       u8691 1AA2  
                                     u8771 3958                                       u8780 3760  
                                     u8860 2A04                                       u8940 2C3C  
                                     u7980 0882                                       u8781 375C  
                                     u8861 2A00                                       u8941 2C38  
                                     u8925 2828                                       u7981 087E  
                                     u8790 377E                                       u8870 2A14  
                                     u8950 2C4C                                       u8926 2832  
                                     u7990 08D2                                       u8791 377A  
                                     u8871 2A10                                       u8951 2C48  
                                     u8935 286C                                       u8927 2842  
                                     u7991 08CE                                       u8880 2A22  
                                     u8960 2C5A                                       u8936 2876  
                                     u8881 2A1E                                       u8961 2C56  
                                     u8937 2886                                       u9657 3562  
                                     u8890 2A5C                                       u8970 2C6C  
                                     u8891 2A58                                       u8971 2C68  
                                     u9667 2C24                                       u8980 2C7C  
                                     u8981 2C78                                       u8990 2C8A  
                                     u8991 2C86                                       _dbuf 011C  
                                     _atoi 2A7E                                       _main 37BA  
                                     _prec 00E9                                       _nout 00E5  
                                     pad@i 001D                  __end_of_probarUltrasonico 3572  
                                     pad@p 001A                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       indf0 000FEF  
                                     fsr2h 000FDA                                       fsr0l 000FE9  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001F                                       map@x 0020  
                                     fsr2l 000FD9                                       btemp 005A  
                            ___fpclassifyf 308A                                       prodh 000FF4  
                                     prodl 000FF3            comportamientoBasico@carroRotado 00F0  
                                     start 000E                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 002C                               _tolower$1414 0012  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                                    ??_map 0034                                      ??_pad 001C  
                            __CFG_PLLDIV$1 000000                             __CFG_CCP2MX$ON 000000  
                            ___fltol@sign1 0060                            __end_of___aldiv 2E7C  
                                    ?_atoi 000D                            __end_of___fladd 18CA  
                                    ?_main 0001                            __end_of___fldiv 24FC  
                          __end_of___awdiv 34B2                            __end_of___flneg 3DB0  
                                    STR_10 0852                                      STR_13 0856  
                                    STR_15 0856                            __end_of___awmod 3622  
                          __end_of___flmul 2162                            __end_of___flsub 3CBA  
                          __end_of___fltol 2F84                            ___awdiv@divisor 0008  
                                    _T1CON 000FCD                                      _LATB4 007C54  
                                    _LATB5 007C55                                      _LATD2 007C62  
                                    _LATB6 007C56                                      _LATD3 007C63  
                                    _LATB7 007C57                            __end_of___lwdiv 37BA  
                                    i2l246 3B7A                                      i2l272 3B30  
                                    i2l264 3AE0                                      i2l248 3B82  
                                    i2l267 3AEE                            ___awdiv@counter 000A  
                                    _RCREG 000FAE                               vfpfcnvrt@fmt 00AA  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _SPBRG 000FAF                              __CFG_USBDIV$1 000000  
                                    _TXREG 000FAD                              __CFG_PWRT$OFF 000000  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                        ___lmul@multiplicand 000A  
                            __CFG_WRT3$OFF 000000                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                             __CFG_EBTRB$OFF 000000  
                       __size_of_UART_init 0070                                      _flags 00EB  
                                    _boton 0008                                      _fputc 325E  
                                    _fputs 3CBA                            __end_of_isdigit 3DE8  
                                    _pausa 00F9                                      _mouse 0055  
                              ?_UART_write 0001                                      atoi@n 001A  
                                    pad@fp 0016                                      atoi@s 000D  
                                    _width 00E7                                      _putch 3E9E  
                                    _toint 0801                            __end_of_isspace 3BD8  
                          __end_of_isupper 3D78                                      tablat 000FF5  
                         ??_probarSensores 0055                            __end_of_pwmDuty 28CA  
                                    ttemp5 005B                                      ttemp6 005E  
                                    ttemp7 0062                                      status 000FD8  
                                    wtemp8 005B                            __end_of_sprintf 3ADA  
                           ?___fpclassifyf 0006                            __end_of_tolower 39C6  
                          __end_of_strncmp 325E                             __CFG_ICPRT$OFF 000000  
                          __initialization 3CFE                               __end_of_atoi 2C0E  
                             __end_of_main 382A                            ??_configurarAdc 0006  
                      dameDistancia@conteo 0026                     dameDistancia@distancia 0022  
                                   ??_atoi 000F                                     ??_main 0055  
      comportamientoBasico@caminosRecorrer 00F3                              __activetblptr 000002  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_boton 0001                                     _CCP1M2 007DEA  
                                   _CCP1M3 007DEB                                     _CCP2M2 007DD2  
                                   _CCP2M3 007DD3                                     ?_fputc 0006  
                                   ?_fputs 000F                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _CCPR1L 000FBE  
                                   _CCPR2L 000FBB                           ___awdiv@dividend 0006  
                                   ?_putch 0001                                     _INT0IF 007F91  
                                   i2l5243 3ADC                                     i2l5245 3AFC  
                                   i2l5249 3B0E                                     i2l8003 3B22  
                                   i2l5291 3B5A                                     i2l5293 3B5E  
                                   i2l5285 3B34                                     i2l5295 3B60  
                                   i2l5287 3B42                                     i2l5297 3B7C  
                                   i2l5289 3B48                                     i2l5299 3B80  
                                   _TMR1IF 007CF0                                     _TMR1ON 007E68  
                                   _TMR2ON 007E52                                     _TRISB0 007C98  
                                   _TRISB1 007C99                                     _TRISB2 007C9A  
                                   _TRISC1 007CA1                                     _TRISB3 007C9B  
                                   _TRISC2 007CA2                                     _TRISB4 007C9C  
                                   _TRISB5 007C9D                                     _TRISB6 007C9E  
                                   _TRISD3 007CAB                                     _TRISB7 007C9F  
                                   _TRISC6 007CA6                                     _TRISC7 007CA7  
               __size_of_probarUltrasonico 00C0                           __end_of___xxtofl 2A7E  
                           __CFG_XINST$OFF 000000         comportamientoBasico@numMovimientos 0059  
                             vfprintf@cfmt 00C4                  dameDistancia@numeroSensor 0021  
                                   ___flge 2F84                                     ___fleq 3622  
                                   ___lmul 389A                                  ??___aldiv 001A  
                                ??___fladd 000E                                     ___wmul 3E1E  
                        __end_of_UART_init 389A                                  ??___fldiv 0023  
                                ??___awdiv 000A                                  ??___flneg 000A  
       comportamientoBasico@espejearCarroY 0058                                  ??___awmod 000A  
                                ??___flmul 003C                                  ??___flsub 0055  
                                ??___fltol 0051                                     _efgtoa 085A  
                                ??___lwdiv 000A                                     _buffer 019E  
                                   _floorf 24FC                        __size_of_UART_write 0016  
                             ?_UART_printf 0007                                     clear_0 3D16  
                                   clear_1 3D22                           ___awdiv@quotient 000C  
                          ___awmod@divisor 0008                            ___awmod@counter 000A  
                                   pad@buf 0018                                     _strcpy 3A24  
                                   _strlen 3DE8                          _oldSensorEnfrente 0118  
                                   fputc@c 0006                                     fputs@c 0013  
                                   fputs@i 0014                                     fputs@s 000F  
                                ??_isdigit 0008                            ___fpclassifyf@e 000E  
                          ___fpclassifyf@u 0010                            ___fpclassifyf@x 0006  
                             __mediumconst 0000                                  ??_isspace 0008  
                                   tblptrh 000FF7                                  ??_isupper 0008  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                                ??_pwmDuty 0065                                     putch@c 0001  
                         __end_of_vfprintf 3966                                  ??_sprintf 0055  
                                ??_tolower 000E                                  ??_strncmp 000C  
                               ___flge@ff1 004D                          _velocidadEstandar 3E44  
                               ___flge@ff2 0051                            ??___fpclassifyf 000A  
                             ___xxtofl@arg 0017                               ___xxtofl@exp 0016  
                             ___xxtofl@val 000D                                 ___fleq@ff1 0006  
                               ___fleq@ff2 000A                                 __accesstop 0060  
                  __end_of__initialization 3D32                            __CFG_PBADEN$OFF 000000  
                               ___flneg@f1 0006                            __CFG_FOSC$XT_XT 000000  
                       ?_velocidadEstandar 0001                              ___rparam_used 000001  
                               ___fltol@f1 004D                     __size_of_dameDistancia 0162  
                           __pcstackCOMRAM 0001                        ??_velocidadEstandar 0055  
                             __pidataBANK0 3EA0                            _sensorIzquierda 00DD  
                            __end_of_boton 3B86                              __end_of_fputc 3328  
                            __end_of_fputs 3CFE                              __end_of_putch 3EA0  
                            __end_of_toint 0805  comportamientoBasico@movimientosRealizados 016C  
                       __size_of_configPwm 0050                                  PID@difAnt 00ED  
                __end_of_velocidadEstandar 3E6A                                    ??_boton 0004  
                                  ??_fputc 000A                                    ??_fputs 0013  
                                  ??_putch 0006                                 __pbssBANK0 00D1  
                               __pbssBANK1 0100                                 _efgtoa$783 0074  
                               _efgtoa$784 0076                                 _efgtoa$793 007A  
                               _efgtoa$794 007C                                 _efgtoa$795 007E  
                               _efgtoa$789 0078                                    ?___flge 004D  
                                  ?___fleq 0006                                    ?___lmul 0006  
                                  ?___wmul 0006                                    ?_efgtoa 0064  
                                  _CCP1CON 000FBD                                    _CCP2CON 000FBA  
                                  ?_floorf 0034                             ___lmul@product 000E  
   decidirDireccion@cambioOrientacionCarro 00EF                                 _antiRebote 3ADA  
                                  ?_strcpy 0006                                    ?_strlen 0006  
                                  _T2CKPS0 007E50                                    _T2CKPS1 007E51  
                                ?___xxtofl 000D                              _dameDistancia 2C0E  
                       __size_of_vfpfcnvrt 046E                               ??_UART_write 0006  
                          __CFG_VREGEN$OFF 000000  comportamientoBasico@contCaminosRecorridos 00F6  
                                  __Hparam 0000                                    __Lparam 0000  
                        __end_of_configPwm 3C28                                    ___aldiv 2D70  
                          __size_of___flge 0106                            __size_of___fleq 00AA  
                                  ___fladd 140A                                    ___fldiv 2162  
                                  ___awdiv 33EE                                    ___flneg 3D78  
                          __size_of___lmul 006A                                    ___awmod 3572  
                                  ___flmul 1D38                                    ___flsub 3C74  
                                  ___fltol 2E7C                            __size_of___wmul 0026  
                                  ___lwdiv 3746                                  ?_vfprintf 00BE  
                             __psmallconst 0800                            __size_of_efgtoa 0BB0  
                          __CFG_STVREN$OFF 000000                            __size_of_floorf 0212  
                                  __pcinit 3CFE                                    __ramtop 0800  
                       __end_of_UART_write 3E80                                    __ptext0 37BA  
                                  __ptext1 3E80                                    __ptext2 34B2  
                                  __ptext3 3A80                                    __ptext4 3904  
                                  __ptext5 18CA                                    __ptext6 3188  
                                  __ptext7 085A                                    __ptext8 3966  
                                  __ptext9 3D40                            __size_of_strcpy 005C  
                          __size_of_strlen 0036                       __size_of_UART_printf 005E  
                             __size_of_map 007A                               __size_of_pad 00C6  
                                  _isdigit 3DB0                                 ??___xxtofl 0011  
                         ___awmod@dividend 0006                             ?_dameDistancia 001B  
                         ___aldiv@dividend 0012                                    _isspace 3B86  
                                  _isupper 3D40                                    efgtoa@c 006A  
                                  efgtoa@d 0088                                    efgtoa@e 00A0  
                                  efgtoa@f 0066                                    efgtoa@g 009C  
                                  efgtoa@h 0092                                    efgtoa@i 009A  
                                  efgtoa@l 0096                                    efgtoa@m 0084  
                                  efgtoa@n 00A2                                    efgtoa@p 008C  
                                  efgtoa@t 0080                                    efgtoa@u 00A4  
                                  efgtoa@w 008F                                    _pwmDuty 270E  
                                  atoi@neg 0013                 __size_of_velocidadEstandar 0026  
                                  _sprintf 3A80                                    _tolower 3966  
                                  _strncmp 3188                             __pintcode_body 3B32  
                     end_of_initialization 3D32                                    floorf@e 0042  
                                  floorf@m 003E                                    floorf@u 0044  
                                  floorf@x 0034                                    fputc@fp 0008  
                            __Lmediumconst 0000                                    int_func 3B32  
                                  fputs@fp 0011                          __end_of_vfpfcnvrt 1D38  
                               efgtoa@mode 0091                                 efgtoa@sign 008A  
                                _RCSTAbits 000FAB                           ___aldiv@quotient 001C  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                               ??_vfprintf 0055                      __end_of_configurarAdc 3E9E  
                                  strcpy@d 000E                                    strlen@a 0008  
                                  strcpy@s 000C                                    strlen@s 0006  
                              ?_antiRebote 0001                                  _PORTBbits 000F81  
                                _UART_init 382A                                ___fladd@grs 0015  
                              pwmDuty@duty 006A                              ___xxtofl@sign 0015  
                                _TRISDbits 000F95                                ___fldiv@grs 002E  
                       _oldSensorIzquierda 00D1                                ___fldiv@rem 0027  
     comportamientoBasico@posicionInvCruce 00F7                                 map@out_max 0030  
                               map@out_min 002C                                ___flmul@grs 0042  
                           _UART_init$1640 0028                                  _TXSTAbits 000FAC  
                  __size_of_probarSensores 0014                             __end_of___flge 308A  
                           __end_of___fleq 36CC                             __end_of___lmul 3904  
                              vfpfcnvrt@ap 00AC                                vfpfcnvrt@ct 00BA  
                              vfpfcnvrt@fp 00A8                             __end_of___wmul 3E44  
                           __end_of_efgtoa 140A                             __end_of_floorf 270E  
                               ?_UART_init 0020                                 floorf@F524 0104  
                          ??_dameDistancia 001F      comportamientoBasico@investigandoCruce 00F8  
                           __end_of_strcpy 3A80                             __end_of_strlen 3E1E  
                      start_initialization 3CFE                                __end_of_map 3746  
                              __end_of_pad 33EE                        __size_of_antiRebote 0058  
                    __end_of___fpclassifyf 3188                        pwmDuty@cicloTrabajo 0062  
                              vfprintf@fmt 00C0                                   ??___flge 0060  
                                 ??___fleq 000E                                   ??___lmul 000E  
                                 ??___wmul 000A                           _oldSensorDerecha 00D5  
               comportamientoBasico@mapear 00F2                             _sensorEnfrente 00D9  
                                 ??_efgtoa 006B                                __pdataBANK0 00F9  
                                 ??_floorf 0038                           __CFG_LPT1OSC$OFF 000000  
                                 ??_strcpy 000A                                   ??_strlen 0008  
                                ___fladd@a 000A                                  ___fladd@b 0006  
                                ___fldiv@a 001F                                  ___fldiv@b 001B  
                                ___flmul@a 0038                                  ___flmul@b 0034  
                              __pbssCOMRAM 0055                                  ___flsub@a 0051  
                                ___flsub@b 004D                              __pcstackBANK0 0060  
                            __pcstackBANK1 01D0                          __size_of___xxtofl 01B4  
                        UART_printf@cadena 0007                                  _atoi$1284 0015  
                                _atoi$1285 0019                                  _atoi$1286 0017  
                _DISTANCIA_PRIORIDAD_MEDIA 0110                           ___lwdiv@dividend 0006  
                                __pintcode 0008                                   ?___aldiv 0012  
                                 ?___fladd 0006                                   ?___fldiv 001B  
                                 ?___awdiv 0006                                   ?___flneg 0006  
                                 ?___awmod 0006                                   ?___flmul 0034  
                                 ?___flsub 004D                                   ?___fltol 004D  
                                 ?___lwdiv 0006                                  _configPwm 3BD8  
                              ??_UART_init 0024                          __size_of_vfprintf 0062  
                              __smallconst 0800                                   ?_isdigit 0006  
                                 ?_isspace 0006                                   ?_isupper 0006  
                                 ?_pwmDuty 0062                           ___lwdiv@quotient 000B  
            probarUltrasonico@numeroSensor 00D0                             __size_of_boton 3B7E  
                                 ?_sprintf 00C6                                   ?_tolower 000C  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0006                             __size_of_putch 0002  
                          ___aldiv@divisor 0016                            ___aldiv@counter 001A  
                           ___wmul@product 000A                                   i2u590_40 3B42  
                                 i2u590_41 3B3E                                   i2u591_40 3B5A  
                                 i2u591_41 3B56                                   i2u587_40 3AEE  
                                 i2u587_41 3AEA                                   i2u588_40 3AFC  
                                 i2u588_41 3AF8                                   i2u967_47 3B6A  
                                 i2u968_47 3B02                             _probarSensores 3E80  
                         __CFG_WDTPS$32768 000000                              ??_UART_printf 0009  
                             ??_antiRebote 0001                                  _vfpfcnvrt 18CA  
                               ?_configPwm 0001                                  map@in_max 0028  
                                map@in_min 0024                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 0006                           configPwm@channel 0008  
                           UART_write@dato 0006                               _isspace$1315 000C  
                               vfpfcnvrt@c 00BD                                 vfpfcnvrt@f 00B6  
                        ___lmul@multiplier 0006                                _INTCON2bits 000FF1  
                       __end_of_antiRebote 3B32                                 roundf@F525 0100  
                   __end_of_probarSensores 3E94                                   __Hrparam 0000  
                            UART_init@BAUD 0020                              _sensorDerecha 00E1  
                               vfprintf@ap 00C2                                   __Lrparam 0000  
                               vfprintf@fp 00BE                           __size_of___aldiv 010C  
                         __size_of___fladd 04C0                           __size_of___fldiv 039A  
                         __size_of___awdiv 00C4                           __size_of___flneg 0038  
                         __size_of___awmod 00B0                           __size_of___flmul 042A  
                         __size_of___flsub 0046                           __size_of___fltol 0108  
                               ?_vfpfcnvrt 00A8                           __size_of___lwdiv 0074  
                       ___fpclassifyf@F463 0108                                 sprintf@fmt 00C8  
                                 ___xxtofl 28CA                        __end_of_UART_printf 3A24  
                         __size_of_isdigit 0038                            ___lwdiv@divisor 0008  
                         __size_of_isspace 0052                            ___lwdiv@counter 000A  
                                 __ptext10 3A24                                   __ptext11 3328  
                                 __ptext20 3D78                                   __ptext12 3DE8  
                                 __ptext21 2F84                                   __ptext13 3CBA  
                                 __ptext30 3E6A                                   __ptext22 3622  
                                 __ptext14 325E                                   __ptext31 3C28  
                                 __ptext23 3572                                   __ptext15 3E9E  
                                 __ptext40 28CA                                   __ptext32 3E44  
                                 __ptext24 33EE                                   __ptext16 24FC  
                                 __ptext41 3746                                   __ptext33 270E  
                                 __ptext25 2A7E                                   __ptext17 308A  
                                 __ptext42 3E94                                   __ptext34 36CC  
                                 __ptext26 3B86                                   __ptext18 3C74  
                                 __ptext43 3BD8                                   __ptext35 389A  
                                 __ptext27 3DB0                                   __ptext19 140A  
                                 __ptext44 382A                                   __ptext36 2E7C  
                                 __ptext28 3E1E                                   __ptext45 2D70  
                                 __ptext37 1D38                                   __ptext29 39C6  
                                 __ptext38 2162                                   __ptext47 3ADA  
                                 __ptext39 2C0E                           __size_of_isupper 0038  
                         __size_of_pwmDuty 01BC    __end_of_inicializarComportamientoBasico 3C74  
 __size_of_inicializarComportamientoBasico 004C          ??_inicializarComportamientoBasico 0055  
         ?_inicializarComportamientoBasico 0001            _inicializarComportamientoBasico 3C28  
                         __size_of_sprintf 005A                           __size_of_tolower 0060  
                            antiRebote@pin 0003                                 strcpy@dest 0006  
                         __size_of_strncmp 00D6         comportamientoBasico@cruceDetectado 00F1  
                   __size_of_configurarAdc 000A                              __size_of_atoi 0190  
                            __size_of_main 0070                            ?_probarSensores 0001  
                                 efgtoa@fp 0064                                   efgtoa@ne 0086  
                                 efgtoa@pp 0082                                   efgtoa@ou 0070  
                                 int$flags 005A                                   _vfprintf 3904  
                              ??_configPwm 0006                      __CFG_CPUDIV$OSC1_PLL2 000000  
                               _INTCONbits 000FF2                      __end_of_dameDistancia 2D70  
                                 isdigit@c 0006                                   intlevel2 0000  
                                sprintf@ap 01D2                                   isspace@c 0006  
                                strcpy@src 0008                                   isupper@c 0006  
                                strncmp@_l 0006                                  strncmp@_r 0008  
                              efgtoa@nmode 008E                                ??_vfpfcnvrt 00AE  
                            _vfpfcnvrt$813 00B4                              _vfpfcnvrt$809 00B2  
                              _UART_printf 39C6                              _configurarAdc 3E94  
     comportamientoBasico@contRepeticiones 0057                             pwmDuty@channel 0064  
                                 sprintf@f 01D4                                   tolower@c 000C  
                                 sprintf@s 00C6                     __size_of___fpclassifyf 00FE  
                                 strncmp@l 000D                                   strncmp@n 000A  
                                 strncmp@r 000F                               ___aldiv@sign 001B  
                            ___fladd@signs 0012                                 _UART_write 3E6A  
                             ___fladd@aexp 0013                               ___fladd@bexp 0014  
                        _probarUltrasonico 34B2  
