

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Aug 31 19:30:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           ; Version 2.10
    83                           ; Generated 31/07/2019 GMT
    84                           ; 
    85                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F4550 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataBANK1
   118  00461C                     __pidataBANK1:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _pausa
   122  00461C  01                 	db	1
   123                           
   124                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   125  00461D  03                 	db	3
   126                           
   127                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   128  00461E  02                 	db	2
   129                           
   130                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   131  00461F  01                 	db	1
   132                           
   133                           	psect	mediumconst
   134  007EA2                     __pmediumconst:
   135                           	opt callstack 0
   136  007EA2  00                 	db	0
   137  007EA3  0000               	dw	0
   138  007EA5  4B00               	dw	19200
   139  007EA7                     __end_of_toint:
   140                           	opt callstack 0
   141  0000                     _T1CON	set	4045
   142  0000                     _TRISDbits	set	3989
   143  0000                     _INTCON2bits	set	4081
   144  0000                     _INTCONbits	set	4082
   145  0000                     _ADRESL	set	4035
   146  0000                     _ADRESH	set	4036
   147  0000                     _ADCON0bits	set	4034
   148  0000                     _ADCON2	set	4032
   149  0000                     _ADCON1	set	4033
   150  0000                     _TXREG	set	4013
   151  0000                     _RCREG	set	4014
   152  0000                     _RCSTAbits	set	4011
   153  0000                     _TXSTAbits	set	4012
   154  0000                     _SPBRG	set	4015
   155  0000                     _PORTBbits	set	3969
   156  0000                     _TMR1L	set	4046
   157  0000                     _TMR1H	set	4047
   158  0000                     _PR2	set	4043
   159  0000                     _CCP2CON	set	4026
   160  0000                     _CCPR2L	set	4027
   161  0000                     _CCP1CON	set	4029
   162  0000                     _CCPR1L	set	4030
   163  0000                     _TRISB0	set	31896
   164  0000                     _TRISB7	set	31903
   165  0000                     _TRISB6	set	31902
   166  0000                     _TRISB5	set	31901
   167  0000                     _TRISB4	set	31900
   168  0000                     _TRISB3	set	31899
   169  0000                     _TRISB2	set	31898
   170  0000                     _TRISB1	set	31897
   171  0000                     _TRISD3	set	31915
   172  0000                     _LATB7	set	31831
   173  0000                     _LATB6	set	31830
   174  0000                     _LATB5	set	31829
   175  0000                     _LATB4	set	31828
   176  0000                     _LATD2	set	31842
   177  0000                     _INT0IF	set	32657
   178  0000                     _RCIF	set	31989
   179  0000                     _TRISC7	set	31911
   180  0000                     _TRISC6	set	31910
   181  0000                     _TMR1IF	set	31984
   182  0000                     _TMR1ON	set	32360
   183  0000                     _LATD3	set	31843
   184  0000                     _TMR2ON	set	32338
   185  0000                     _CCP2M2	set	32210
   186  0000                     _CCP2M3	set	32211
   187  0000                     _TRISC1	set	31905
   188  0000                     _CCP1M2	set	32234
   189  0000                     _CCP1M3	set	32235
   190  0000                     _TRISC2	set	31906
   191  0000                     _T2CKPS1	set	32337
   192  0000                     _T2CKPS0	set	32336
   193  007EA7  0A                 	db	10
   194  007EA8  0A                 	db	10
   195  007EA9  4F                 	db	79	;'O'
   196  007EAA  56                 	db	86	;'V'
   197  007EAB  45                 	db	69	;'E'
   198  007EAC  52                 	db	82	;'R'
   199  007EAD  46                 	db	70	;'F'
   200  007EAE  4C                 	db	76	;'L'
   201  007EAF  4F                 	db	79	;'O'
   202  007EB0  57                 	db	87	;'W'
   203  007EB1  20                 	db	32
   204  007EB2  65                 	db	101	;'e'
   205  007EB3  6E                 	db	110	;'n'
   206  007EB4  20                 	db	32
   207  007EB5  65                 	db	101	;'e'
   208  007EB6  6C                 	db	108	;'l'
   209  007EB7  20                 	db	32
   210  007EB8  6D                 	db	109	;'m'
   211  007EB9  61                 	db	97	;'a'
   212  007EBA  70                 	db	112	;'p'
   213  007EBB  65                 	db	101	;'e'
   214  007EBC  6F                 	db	111	;'o'
   215  007EBD  20                 	db	32
   216  007EBE  64                 	db	100	;'d'
   217  007EBF  65                 	db	101	;'e'
   218  007EC0  20                 	db	32
   219  007EC1  70                 	db	112	;'p'
   220  007EC2  61                 	db	97	;'a'
   221  007EC3  73                 	db	115	;'s'
   222  007EC4  6F                 	db	111	;'o'
   223  007EC5  73                 	db	115	;'s'
   224  007EC6  20                 	db	32
   225  007EC7  52                 	db	82	;'R'
   226  007EC8  65                 	db	101	;'e'
   227  007EC9  61                 	db	97	;'a'
   228  007ECA  6C                 	db	108	;'l'
   229  007ECB  69                 	db	105	;'i'
   230  007ECC  7A                 	db	122	;'z'
   231  007ECD  61                 	db	97	;'a'
   232  007ECE  64                 	db	100	;'d'
   233  007ECF  6F                 	db	111	;'o'
   234  007ED0  73                 	db	115	;'s'
   235  007ED1  20                 	db	32
   236  007ED2  70                 	db	112	;'p'
   237  007ED3  61                 	db	97	;'a'
   238  007ED4  72                 	db	114	;'r'
   239  007ED5  61                 	db	97	;'a'
   240  007ED6  20                 	db	32
   241  007ED7  63                 	db	99	;'c'
   242  007ED8  61                 	db	97	;'a'
   243  007ED9  6D                 	db	109	;'m'
   244  007EDA  69                 	db	105	;'i'
   245  007EDB  6E                 	db	110	;'n'
   246  007EDC  6F                 	db	111	;'o'
   247  007EDD  20                 	db	32
   248  007EDE  54                 	db	84	;'T'
   249  007EDF  6F                 	db	111	;'o'
   250  007EE0  74                 	db	116	;'t'
   251  007EE1  61                 	db	97	;'a'
   252  007EE2  6C                 	db	108	;'l'
   253  007EE3  0A                 	db	10
   254  007EE4  0A                 	db	10
   255  007EE5  00                 	db	0
   256  007EE6  0A                 	db	10
   257  007EE7  0A                 	db	10
   258  007EE8  4F                 	db	79	;'O'
   259  007EE9  56                 	db	86	;'V'
   260  007EEA  45                 	db	69	;'E'
   261  007EEB  52                 	db	82	;'R'
   262  007EEC  46                 	db	70	;'F'
   263  007EED  4C                 	db	76	;'L'
   264  007EEE  4F                 	db	79	;'O'
   265  007EEF  57                 	db	87	;'W'
   266  007EF0  20                 	db	32
   267  007EF1  65                 	db	101	;'e'
   268  007EF2  6E                 	db	110	;'n'
   269  007EF3  20                 	db	32
   270  007EF4  65                 	db	101	;'e'
   271  007EF5  6C                 	db	108	;'l'
   272  007EF6  20                 	db	32
   273  007EF7  6D                 	db	109	;'m'
   274  007EF8  61                 	db	97	;'a'
   275  007EF9  70                 	db	112	;'p'
   276  007EFA  65                 	db	101	;'e'
   277  007EFB  6F                 	db	111	;'o'
   278  007EFC  20                 	db	32
   279  007EFD  64                 	db	100	;'d'
   280  007EFE  65                 	db	101	;'e'
   281  007EFF  20                 	db	32
   282  007F00  70                 	db	112	;'p'
   283  007F01  61                 	db	97	;'a'
   284  007F02  73                 	db	115	;'s'
   285  007F03  6F                 	db	111	;'o'
   286  007F04  73                 	db	115	;'s'
   287  007F05  20                 	db	32
   288  007F06  52                 	db	82	;'R'
   289  007F07  65                 	db	101	;'e'
   290  007F08  61                 	db	97	;'a'
   291  007F09  6C                 	db	108	;'l'
   292  007F0A  69                 	db	105	;'i'
   293  007F0B  7A                 	db	122	;'z'
   294  007F0C  61                 	db	97	;'a'
   295  007F0D  64                 	db	100	;'d'
   296  007F0E  6F                 	db	111	;'o'
   297  007F0F  73                 	db	115	;'s'
   298  007F10  20                 	db	32
   299  007F11  70                 	db	112	;'p'
   300  007F12  61                 	db	97	;'a'
   301  007F13  72                 	db	114	;'r'
   302  007F14  61                 	db	97	;'a'
   303  007F15  20                 	db	32
   304  007F16  63                 	db	99	;'c'
   305  007F17  72                 	db	114	;'r'
   306  007F18  75                 	db	117	;'u'
   307  007F19  63                 	db	99	;'c'
   308  007F1A  65                 	db	101	;'e'
   309  007F1B  0A                 	db	10
   310  007F1C  0A                 	db	10
   311  007F1D  00                 	db	0
   312  007F1E  0D                 	db	13
   313  007F1F  4C                 	db	76	;'L'
   314  007F20  65                 	db	101	;'e'
   315  007F21  63                 	db	99	;'c'
   316  007F22  74                 	db	116	;'t'
   317  007F23  75                 	db	117	;'u'
   318  007F24  72                 	db	114	;'r'
   319  007F25  61                 	db	97	;'a'
   320  007F26  20                 	db	32
   321  007F27  64                 	db	100	;'d'
   322  007F28  65                 	db	101	;'e'
   323  007F29  20                 	db	32
   324  007F2A  73                 	db	115	;'s'
   325  007F2B  65                 	db	101	;'e'
   326  007F2C  6E                 	db	110	;'n'
   327  007F2D  73                 	db	115	;'s'
   328  007F2E  6F                 	db	111	;'o'
   329  007F2F  72                 	db	114	;'r'
   330  007F30  20                 	db	32
   331  007F31  4F                 	db	79	;'O'
   332  007F32  70                 	db	112	;'p'
   333  007F33  74                 	db	116	;'t'
   334  007F34  69                 	db	105	;'i'
   335  007F35  63                 	db	99	;'c'
   336  007F36  6F                 	db	111	;'o'
   337  007F37  20                 	db	32
   338  007F38  3D                 	db	61	;'='
   339  007F39  20                 	db	32
   340  007F3A  25                 	db	37
   341  007F3B  64                 	db	100	;'d'
   342  007F3C  0D                 	db	13
   343  007F3D  0A                 	db	10
   344  007F3E  0A                 	db	10
   345  007F3F  00                 	db	0
   346  007F40                     STR_11:
   347  007F40  0D                 	db	13
   348  007F41  4D                 	db	77	;'M'
   349  007F42  6F                 	db	111	;'o'
   350  007F43  76                 	db	118	;'v'
   351  007F44  69                 	db	105	;'i'
   352  007F45  6D                 	db	109	;'m'
   353  007F46  69                 	db	105	;'i'
   354  007F47  65                 	db	101	;'e'
   355  007F48  6E                 	db	110	;'n'
   356  007F49  74                 	db	116	;'t'
   357  007F4A  6F                 	db	111	;'o'
   358  007F4B  73                 	db	115	;'s'
   359  007F4C  20                 	db	32
   360  007F4D  52                 	db	82	;'R'
   361  007F4E  65                 	db	101	;'e'
   362  007F4F  61                 	db	97	;'a'
   363  007F50  6C                 	db	108	;'l'
   364  007F51  69                 	db	105	;'i'
   365  007F52  7A                 	db	122	;'z'
   366  007F53  61                 	db	97	;'a'
   367  007F54  64                 	db	100	;'d'
   368  007F55  6F                 	db	111	;'o'
   369  007F56  73                 	db	115	;'s'
   370  007F57  20                 	db	32
   371  007F58  3D                 	db	61	;'='
   372  007F59  20                 	db	32
   373  007F5A  25                 	db	37
   374  007F5B  64                 	db	100	;'d'
   375  007F5C  0D                 	db	13
   376  007F5D  0A                 	db	10
   377  007F5E  0A                 	db	10
   378  007F5F  00                 	db	0
   379  007F60  0D                 	db	13
   380  007F61  44                 	db	68	;'D'
   381  007F62  65                 	db	101	;'e'
   382  007F63  73                 	db	115	;'s'
   383  007F64  74                 	db	116	;'t'
   384  007F65  69                 	db	105	;'i'
   385  007F66  6E                 	db	110	;'n'
   386  007F67  6F                 	db	111	;'o'
   387  007F68  20                 	db	32
   388  007F69  6E                 	db	110	;'n'
   389  007F6A  6F                 	db	111	;'o'
   390  007F6B  20                 	db	32
   391  007F6C  64                 	db	100	;'d'
   392  007F6D  65                 	db	101	;'e'
   393  007F6E  74                 	db	116	;'t'
   394  007F6F  65                 	db	101	;'e'
   395  007F70  63                 	db	99	;'c'
   396  007F71  74                 	db	116	;'t'
   397  007F72  61                 	db	97	;'a'
   398  007F73  64                 	db	100	;'d'
   399  007F74  6F                 	db	111	;'o'
   400  007F75  20                 	db	32
   401  007F76  0D                 	db	13
   402  007F77  0A                 	db	10
   403  007F78  00                 	db	0
   404  007F79  0D                 	db	13
   405  007F7A  53                 	db	83	;'S'
   406  007F7B  65                 	db	101	;'e'
   407  007F7C  20                 	db	32
   408  007F7D  6C                 	db	108	;'l'
   409  007F7E  6C                 	db	108	;'l'
   410  007F7F  65                 	db	101	;'e'
   411  007F80  67                 	db	103	;'g'
   412  007F81  6F                 	db	111	;'o'
   413  007F82  20                 	db	32
   414  007F83  61                 	db	97	;'a'
   415  007F84  6C                 	db	108	;'l'
   416  007F85  20                 	db	32
   417  007F86  64                 	db	100	;'d'
   418  007F87  65                 	db	101	;'e'
   419  007F88  73                 	db	115	;'s'
   420  007F89  74                 	db	116	;'t'
   421  007F8A  69                 	db	105	;'i'
   422  007F8B  6E                 	db	110	;'n'
   423  007F8C  6F                 	db	111	;'o'
   424  007F8D  20                 	db	32
   425  007F8E  0D                 	db	13
   426  007F8F  0A                 	db	10
   427  007F90  00                 	db	0
   428  007F91  0D                 	db	13
   429  007F92  49                 	db	73	;'I'
   430  007F93  7A                 	db	122	;'z'
   431  007F94  71                 	db	113	;'q'
   432  007F95  75                 	db	117	;'u'
   433  007F96  69                 	db	105	;'i'
   434  007F97  65                 	db	101	;'e'
   435  007F98  72                 	db	114	;'r'
   436  007F99  64                 	db	100	;'d'
   437  007F9A  61                 	db	97	;'a'
   438  007F9B  3A                 	db	58	;':'
   439  007F9C  20                 	db	32
   440  007F9D  25                 	db	37
   441  007F9E  2E                 	db	46
   442  007F9F  32                 	db	50	;'2'
   443  007FA0  66                 	db	102	;'f'
   444  007FA1  0D                 	db	13
   445  007FA2  0A                 	db	10
   446  007FA3  00                 	db	0
   447  007FA4  0D                 	db	13
   448  007FA5  45                 	db	69	;'E'
   449  007FA6  6E                 	db	110	;'n'
   450  007FA7  66                 	db	102	;'f'
   451  007FA8  72                 	db	114	;'r'
   452  007FA9  65                 	db	101	;'e'
   453  007FAA  6E                 	db	110	;'n'
   454  007FAB  74                 	db	116	;'t'
   455  007FAC  65                 	db	101	;'e'
   456  007FAD  3A                 	db	58	;':'
   457  007FAE  20                 	db	32
   458  007FAF  25                 	db	37
   459  007FB0  2E                 	db	46
   460  007FB1  32                 	db	50	;'2'
   461  007FB2  66                 	db	102	;'f'
   462  007FB3  0D                 	db	13
   463  007FB4  0A                 	db	10
   464  007FB5  00                 	db	0
   465  007FB6  0D                 	db	13
   466  007FB7  44                 	db	68	;'D'
   467  007FB8  65                 	db	101	;'e'
   468  007FB9  72                 	db	114	;'r'
   469  007FBA  65                 	db	101	;'e'
   470  007FBB  63                 	db	99	;'c'
   471  007FBC  68                 	db	104	;'h'
   472  007FBD  61                 	db	97	;'a'
   473  007FBE  3A                 	db	58	;':'
   474  007FBF  20                 	db	32
   475  007FC0  25                 	db	37
   476  007FC1  2E                 	db	46
   477  007FC2  32                 	db	50	;'2'
   478  007FC3  66                 	db	102	;'f'
   479  007FC4  0D                 	db	13
   480  007FC5  0A                 	db	10
   481  007FC6  00                 	db	0
   482  007FC7                     STR_8:
   483  007FC7  49                 	db	73	;'I'
   484  007FC8  7A                 	db	122	;'z'
   485  007FC9  71                 	db	113	;'q'
   486  007FCA  75                 	db	117	;'u'
   487  007FCB  69                 	db	105	;'i'
   488  007FCC  65                 	db	101	;'e'
   489  007FCD  72                 	db	114	;'r'
   490  007FCE  64                 	db	100	;'d'
   491  007FCF  61                 	db	97	;'a'
   492  007FD0  0A                 	db	10
   493  007FD1  00                 	db	0
   494  007FD2                     STR_7:
   495  007FD2  45                 	db	69	;'E'
   496  007FD3  6E                 	db	110	;'n'
   497  007FD4  66                 	db	102	;'f'
   498  007FD5  72                 	db	114	;'r'
   499  007FD6  65                 	db	101	;'e'
   500  007FD7  6E                 	db	110	;'n'
   501  007FD8  74                 	db	116	;'t'
   502  007FD9  65                 	db	101	;'e'
   503  007FDA  0A                 	db	10
   504  007FDB  00                 	db	0
   505  007FDC                     STR_9:
   506  007FDC  44                 	db	68	;'D'
   507  007FDD  65                 	db	101	;'e'
   508  007FDE  72                 	db	114	;'r'
   509  007FDF  65                 	db	101	;'e'
   510  007FE0  63                 	db	99	;'c'
   511  007FE1  68                 	db	104	;'h'
   512  007FE2  61                 	db	97	;'a'
   513  007FE3  0A                 	db	10
   514  007FE4  00                 	db	0
   515  007FE5                     STR_10:
   516  007FE5  41                 	db	65	;'A'
   517  007FE6  6C                 	db	108	;'l'
   518  007FE7  74                 	db	116	;'t'
   519  007FE8  6F                 	db	111	;'o'
   520  007FE9  0A                 	db	10
   521  007FEA  00                 	db	0
   522  007FEB                     STR_14:
   523  007FEB  49                 	db	73	;'I'
   524  007FEC  4E                 	db	78	;'N'
   525  007FED  46                 	db	70	;'F'
   526  007FEE  00                 	db	0
   527  007FEF                     STR_18:
   528  007FEF  4E                 	db	78	;'N'
   529  007FF0  41                 	db	65	;'A'
   530  007FF1  4E                 	db	78	;'N'
   531  007FF2  00                 	db	0
   532  007FF3                     STR_15:
   533  007FF3  69                 	db	105	;'i'
   534  007FF4  6E                 	db	110	;'n'
   535  007FF5  66                 	db	102	;'f'
   536  007FF6  00                 	db	0
   537  007FF7                     STR_19:
   538  007FF7  6E                 	db	110	;'n'
   539  007FF8  61                 	db	97	;'a'
   540  007FF9  6E                 	db	110	;'n'
   541  007FFA  00                 	db	0
   542  007FFB                     STR_22:
   543  007FFB  6C                 	db	108	;'l'
   544  007FFC  66                 	db	102	;'f'
   545  007FFD  00                 	db	0
   546  0000                     
   547                           ; #config settings
   548  007FFE  00                 	db	0	; dummy byte at the end
   549  0000                     
   550                           	psect	cinit
   551  003E92                     __pcinit:
   552                           	opt callstack 0
   553  003E92                     start_initialization:
   554                           	opt callstack 0
   555  003E92                     __initialization:
   556                           	opt callstack 0
   557                           
   558                           ; Initialize objects allocated to BANK1 (4 bytes)
   559                           ; load TBLPTR registers with __pidataBANK1
   560  003E92  0E1C               	movlw	low __pidataBANK1
   561  003E94  6EF6               	movwf	tblptrl,c
   562  003E96  0E46               	movlw	high __pidataBANK1
   563  003E98  6EF7               	movwf	tblptrh,c
   564  003E9A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   565  003E9C  6EF8               	movwf	tblptru,c
   566  003E9E  EE01  F0D0         	lfsr	0,__pdataBANK1
   567  003EA2  EE10 F004          	lfsr	1,4
   568  003EA6                     copy_data0:
   569  003EA6  0009               	tblrd		*+
   570  003EA8  CFF5 FFEE          	movff	tablat,postinc0
   571  003EAC  50E5               	movf	postdec1,w,c
   572  003EAE  50E1               	movf	fsr1l,w,c
   573  003EB0  E1FA               	bnz	copy_data0
   574                           
   575                           ; Clear objects allocated to BIGRAM (1000 bytes)
   576  003EB2  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   577  003EB6  EE13 F0E8          	lfsr	1,1000
   578  003EBA                     clear_0:
   579  003EBA  6AEE               	clrf	postinc0,c
   580  003EBC  50E5               	movf	postdec1,w,c
   581  003EBE  50E1               	movf	fsr1l,w,c
   582  003EC0  E1FC               	bnz	clear_0
   583  003EC2  50E2               	movf	fsr1h,w,c
   584  003EC4  E1FA               	bnz	clear_0
   585                           
   586                           ; Clear objects allocated to BANK2 (200 bytes)
   587  003EC6  EE02  F000         	lfsr	0,__pbssBANK2
   588  003ECA  0EC8               	movlw	200
   589  003ECC                     clear_1:
   590  003ECC  6AEE               	clrf	postinc0,c
   591  003ECE  06E8               	decf	wreg,f,c
   592  003ED0  E1FD               	bnz	clear_1
   593                           
   594                           ; Clear objects allocated to BANK1 (201 bytes)
   595  003ED2  EE01  F000         	lfsr	0,__pbssBANK1
   596  003ED6  0EC9               	movlw	201
   597  003ED8                     clear_2:
   598  003ED8  6AEE               	clrf	postinc0,c
   599  003EDA  06E8               	decf	wreg,f,c
   600  003EDC  E1FD               	bnz	clear_2
   601                           
   602                           ; Clear objects allocated to BANK0 (6 bytes)
   603  003EDE  0100               	movlb	0
   604  003EE0  6BFE               	clrf	(__pbssBANK0+5)& (0+255),b
   605  003EE2  6BFD               	clrf	(__pbssBANK0+4)& (0+255),b
   606  003EE4  6BFC               	clrf	(__pbssBANK0+3)& (0+255),b
   607  003EE6  6BFB               	clrf	(__pbssBANK0+2)& (0+255),b
   608  003EE8  6BFA               	clrf	(__pbssBANK0+1)& (0+255),b
   609  003EEA  6BF9               	clrf	__pbssBANK0& (0+255),b
   610                           
   611                           ; Clear objects allocated to COMRAM (5 bytes)
   612  003EEC  6A58               	clrf	(__pbssCOMRAM+4)& (0+255),c
   613  003EEE  6A57               	clrf	(__pbssCOMRAM+3)& (0+255),c
   614  003EF0  6A56               	clrf	(__pbssCOMRAM+2)& (0+255),c
   615  003EF2  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   616  003EF4  6A54               	clrf	__pbssCOMRAM& (0+255),c
   617  003EF6                     end_of_initialization:
   618                           	opt callstack 0
   619  003EF6                     __end_of__initialization:
   620                           	opt callstack 0
   621  003EF6  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   622  003EF8  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   623  003EFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   624  003EFC  6EF8               	movwf	tblptru,c
   625  003EFE  0100               	movlb	0
   626  003F00  EF32  F01D         	goto	_main	;jump to C main() function
   627                           
   628                           	psect	bssCOMRAM
   629  000054                     __pbssCOMRAM:
   630                           	opt callstack 0
   631  000054                     _prec:
   632                           	opt callstack 0
   633  000054                     	ds	2
   634  000056                     _flags:
   635                           	opt callstack 0
   636  000056                     	ds	2
   637  000058                     _llegoDestino:
   638                           	opt callstack 0
   639  000058                     	ds	1
   640                           
   641                           	psect	bssBANK0
   642  0000F9                     __pbssBANK0:
   643                           	opt callstack 0
   644  0000F9                     _mouse:
   645                           	opt callstack 0
   646  0000F9                     	ds	2
   647  0000FB                     comportamientoBasico@numMovimientosTotales:
   648                           	opt callstack 0
   649  0000FB                     	ds	2
   650  0000FD                     comportamientoBasico@investigandoCruce:
   651                           	opt callstack 0
   652  0000FD                     	ds	1
   653  0000FE                     comportamientoBasico@carroEspejeado:
   654                           	opt callstack 0
   655  0000FE                     	ds	1
   656                           
   657                           	psect	bssBANK1
   658  000100                     __pbssBANK1:
   659                           	opt callstack 0
   660  000100                     roundf@F525:
   661                           	opt callstack 0
   662  000100                     	ds	4
   663  000104                     floorf@F524:
   664                           	opt callstack 0
   665  000104                     	ds	4
   666  000108                     ___fpclassifyf@F463:
   667                           	opt callstack 0
   668  000108                     	ds	4
   669  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   670                           	opt callstack 0
   671  00010C                     	ds	4
   672  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   673                           	opt callstack 0
   674  000110                     	ds	4
   675  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   676                           	opt callstack 0
   677  000114                     	ds	4
   678  000118                     _oldSensorEnfrente:
   679                           	opt callstack 0
   680  000118                     	ds	4
   681  00011C                     _oldSensorIzquierda:
   682                           	opt callstack 0
   683  00011C                     	ds	4
   684  000120                     _oldSensorDerecha:
   685                           	opt callstack 0
   686  000120                     	ds	4
   687  000124                     _sensorEnfrente:
   688                           	opt callstack 0
   689  000124                     	ds	4
   690  000128                     _sensorIzquierda:
   691                           	opt callstack 0
   692  000128                     	ds	4
   693  00012C                     _sensorDerecha:
   694                           	opt callstack 0
   695  00012C                     	ds	4
   696  000130                     _nout:
   697                           	opt callstack 0
   698  000130                     	ds	2
   699  000132                     _width:
   700                           	opt callstack 0
   701  000132                     	ds	2
   702  000134                     PID@difAnt:
   703                           	opt callstack 0
   704  000134                     	ds	2
   705  000136                     comportamientoBasico@caminoEncontrado:
   706                           	opt callstack 0
   707  000136                     	ds	1
   708  000137                     comportamientoBasico@cruceDetectado:
   709                           	opt callstack 0
   710  000137                     	ds	1
   711  000138                     comportamientoBasico@mapear:
   712                           	opt callstack 0
   713  000138                     	ds	1
   714  000139                     comportamientoBasico@espejearCarroY:
   715                           	opt callstack 0
   716  000139                     	ds	1
   717  00013A                     _posicionDestinoY:
   718                           	opt callstack 0
   719  00013A                     	ds	1
   720  00013B                     _posicionDestinoX:
   721                           	opt callstack 0
   722  00013B                     	ds	1
   723  00013C                     _posicionCarroY:
   724                           	opt callstack 0
   725  00013C                     	ds	1
   726  00013D                     _posicionCarroX:
   727                           	opt callstack 0
   728  00013D                     	ds	1
   729  00013E                     _dbuf:
   730                           	opt callstack 0
   731  00013E                     	ds	80
   732  00018E                     _buffer:
   733                           	opt callstack 0
   734  00018E                     	ds	50
   735  0001C0                     comportamientoBasico@caminosRecorrer:
   736                           	opt callstack 0
   737  0001C0                     	ds	3
   738  0001C3                     comportamientoBasico@numMovimientos:
   739                           	opt callstack 0
   740  0001C3                     	ds	2
   741  0001C5                     comportamientoBasico@cambioOrientacionCarro:
   742                           	opt callstack 0
   743  0001C5                     	ds	1
   744  0001C6                     comportamientoBasico@caminoActual:
   745                           	opt callstack 0
   746  0001C6                     	ds	1
   747  0001C7                     comportamientoBasico@contCaminosRecorridos:
   748                           	opt callstack 0
   749  0001C7                     	ds	1
   750  0001C8                     comportamientoBasico@posicionInvCruce:
   751                           	opt callstack 0
   752  0001C8                     	ds	1
   753                           
   754                           	psect	dataBANK1
   755  0001D0                     __pdataBANK1:
   756                           	opt callstack 0
   757  0001D0                     _pausa:
   758                           	opt callstack 0
   759  0001D0                     	ds	1
   760  0001D1                     _SENSOR_PRIORIDAD_BAJA:
   761                           	opt callstack 0
   762  0001D1                     	ds	1
   763  0001D2                     _SENSOR_PRIORIDAD_MEDIA:
   764                           	opt callstack 0
   765  0001D2                     	ds	1
   766  0001D3                     _SENSOR_PRIORIDAD_ALTA:
   767                           	opt callstack 0
   768  0001D3                     	ds	1
   769                           
   770                           	psect	bssBANK2
   771  000200                     __pbssBANK2:
   772                           	opt callstack 0
   773  000200                     comportamientoBasico@movimientosRealizados:
   774                           	opt callstack 0
   775  000200                     	ds	200
   776                           
   777                           	psect	bssBIGRAM
   778  0002C8                     __pbssBIGRAM:
   779                           	opt callstack 0
   780  0002C8                     comportamientoBasico@caminoFinal:
   781                           	opt callstack 0
   782  0002C8                     	ds	1000
   783                           
   784                           	psect	cstackBANK1
   785  0001C9                     __pcstackBANK1:
   786                           	opt callstack 0
   787  0001C9                     visualizarPasosRealizados@numMovimientos:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x0
   791  0001C9                     	ds	2
   792  0001CB                     ??_visualizarPasosRealizados:
   793                           
   794                           ; 1 bytes @ 0x2
   795  0001CB                     	ds	2
   796  0001CD                     main@numMovimientosTotales:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0x4
   800  0001CD                     	ds	2
   801  0001CF                     main@iniciado:
   802                           	opt callstack 0
   803                           
   804                           ; 1 bytes @ 0x6
   805  0001CF                     	ds	1
   806                           
   807                           	psect	cstackBANK0
   808  000060                     __pcstackBANK0:
   809                           	opt callstack 0
   810  000060                     ___fldiv@rem:
   811                           	opt callstack 0
   812  000060                     _roundf$1790:
   813                           	opt callstack 0
   814                           
   815                           ; 4 bytes @ 0x0
   816  000060                     	ds	4
   817  000064                     ___fldiv@sign:
   818                           	opt callstack 0
   819  000064                     roundf@e:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x4
   823  000064                     	ds	1
   824  000065                     ___fldiv@new_exp:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x5
   828  000065                     	ds	1
   829  000066                     _roundf$1789:
   830                           	opt callstack 0
   831                           
   832                           ; 4 bytes @ 0x6
   833  000066                     	ds	1
   834  000067                     ___fldiv@grs:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0x7
   838  000067                     	ds	3
   839  00006A                     roundf@u:
   840                           	opt callstack 0
   841                           
   842                           ; 4 bytes @ 0xA
   843  00006A                     	ds	1
   844  00006B                     ___fldiv@bexp:
   845                           	opt callstack 0
   846                           
   847                           ; 1 bytes @ 0xB
   848  00006B                     	ds	1
   849  00006C                     ___fldiv@aexp:
   850                           	opt callstack 0
   851                           
   852                           ; 1 bytes @ 0xC
   853  00006C                     	ds	1
   854  00006D                     ??_floorf:
   855                           
   856                           ; 1 bytes @ 0xD
   857  00006D                     	ds	1
   858  00006E                     roundf@y:
   859                           	opt callstack 0
   860                           
   861                           ; 4 bytes @ 0xE
   862  00006E                     	ds	4
   863  000072                     ?___fltol:
   864                           	opt callstack 0
   865  000072                     ___fltol@f1:
   866                           	opt callstack 0
   867                           
   868                           ; 4 bytes @ 0x12
   869  000072                     	ds	1
   870  000073                     floorf@m:
   871                           	opt callstack 0
   872                           
   873                           ; 4 bytes @ 0x13
   874  000073                     	ds	3
   875  000076                     ??___fltol:
   876                           
   877                           ; 1 bytes @ 0x16
   878  000076                     	ds	1
   879  000077                     floorf@e:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x17
   883  000077                     	ds	2
   884  000079                     floorf@u:
   885                           	opt callstack 0
   886                           
   887                           ; 4 bytes @ 0x19
   888  000079                     	ds	1
   889  00007A                     ___fltol@sign1:
   890                           	opt callstack 0
   891                           
   892                           ; 1 bytes @ 0x1A
   893  00007A                     	ds	1
   894  00007B                     ___fltol@exp1:
   895                           	opt callstack 0
   896                           
   897                           ; 1 bytes @ 0x1B
   898  00007B                     	ds	1
   899  00007C                     pwmDuty@cicloTrabajo:
   900                           	opt callstack 0
   901                           
   902                           ; 2 bytes @ 0x1C
   903  00007C                     	ds	1
   904  00007D                     ?_efgtoa:
   905                           	opt callstack 0
   906  00007D                     efgtoa@fp:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x1D
   910  00007D                     	ds	1
   911  00007E                     pwmDuty@channel:
   912                           	opt callstack 0
   913                           
   914                           ; 1 bytes @ 0x1E
   915  00007E                     	ds	1
   916  00007F                     ??_pwmDuty:
   917  00007F                     efgtoa@f:
   918                           	opt callstack 0
   919                           
   920                           ; 4 bytes @ 0x1F
   921  00007F                     	ds	4
   922  000083                     efgtoa@c:
   923                           	opt callstack 0
   924                           
   925                           ; 1 bytes @ 0x23
   926  000083                     	ds	1
   927  000084                     ??_efgtoa:
   928  000084                     pwmDuty@duty:
   929                           	opt callstack 0
   930                           
   931                           ; 4 bytes @ 0x24
   932  000084                     	ds	4
   933  000088                     ??_PID:
   934  000088                     ??_forzarEspejeoAuto:
   935                           
   936                           ; 1 bytes @ 0x28
   937  000088                     	ds	1
   938  000089                     efgtoa@ou:
   939                           	opt callstack 0
   940                           
   941                           ; 4 bytes @ 0x29
   942  000089                     	ds	1
   943  00008A                     _PID$1788:
   944                           	opt callstack 0
   945                           
   946                           ; 4 bytes @ 0x2A
   947  00008A                     	ds	3
   948  00008D                     _efgtoa$907:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x2D
   952  00008D                     	ds	1
   953  00008E                     PID@velocidadIzquierda:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x2E
   957  00008E                     	ds	1
   958  00008F                     _efgtoa$908:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x2F
   962  00008F                     	ds	1
   963  000090                     _PID$736:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x30
   967  000090                     	ds	1
   968  000091                     _efgtoa$912:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x31
   972  000091                     	ds	1
   973  000092                     PID@velocidadDerecha:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x32
   977  000092                     	ds	1
   978  000093                     _efgtoa$916:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x33
   982  000093                     	ds	1
   983  000094                     _PID$738:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x34
   987  000094                     	ds	1
   988  000095                     _efgtoa$917:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x35
   992  000095                     	ds	1
   993  000096                     PID@dif:
   994                           	opt callstack 0
   995                           
   996                           ; 2 bytes @ 0x36
   997  000096                     	ds	1
   998  000097                     _efgtoa$918:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x37
  1002  000097                     	ds	1
  1003  000098                     PID@error:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x38
  1007  000098                     	ds	1
  1008  000099                     efgtoa@t:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x39
  1012  000099                     	ds	2
  1013  00009B                     efgtoa@pp:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x3B
  1017  00009B                     	ds	2
  1018  00009D                     efgtoa@m:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x3D
  1022  00009D                     	ds	2
  1023  00009F                     efgtoa@ne:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x3F
  1027  00009F                     	ds	2
  1028  0000A1                     efgtoa@d:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x41
  1032  0000A1                     	ds	2
  1033  0000A3                     efgtoa@sign:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x43
  1037  0000A3                     	ds	2
  1038  0000A5                     efgtoa@p:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x45
  1042  0000A5                     	ds	2
  1043  0000A7                     efgtoa@nmode:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x47
  1047  0000A7                     	ds	1
  1048  0000A8                     efgtoa@w:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x48
  1052  0000A8                     	ds	2
  1053  0000AA                     efgtoa@mode:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x4A
  1057  0000AA                     	ds	1
  1058  0000AB                     efgtoa@h:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x4B
  1062  0000AB                     	ds	4
  1063  0000AF                     efgtoa@l:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x4F
  1067  0000AF                     	ds	4
  1068  0000B3                     efgtoa@i:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x53
  1072  0000B3                     	ds	2
  1073  0000B5                     efgtoa@g:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 4 bytes @ 0x55
  1077  0000B5                     	ds	4
  1078  0000B9                     efgtoa@e:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x59
  1082  0000B9                     	ds	2
  1083  0000BB                     efgtoa@n:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x5B
  1087  0000BB                     	ds	2
  1088  0000BD                     efgtoa@u:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x5D
  1092  0000BD                     	ds	4
  1093  0000C1                     ?_vfpfcnvrt:
  1094                           	opt callstack 0
  1095  0000C1                     vfpfcnvrt@fp:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x61
  1099  0000C1                     	ds	2
  1100  0000C3                     vfpfcnvrt@fmt:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x63
  1104  0000C3                     	ds	2
  1105  0000C5                     vfpfcnvrt@ap:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x65
  1109  0000C5                     	ds	2
  1110  0000C7                     ??_vfpfcnvrt:
  1111                           
  1112                           ; 1 bytes @ 0x67
  1113  0000C7                     	ds	4
  1114  0000CB                     vfpfcnvrt@ll:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 8 bytes @ 0x6B
  1118  0000CB                     	ds	8
  1119  0000D3                     _vfpfcnvrt$932:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x73
  1123  0000D3                     	ds	2
  1124  0000D5                     _vfpfcnvrt$937:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x75
  1128  0000D5                     	ds	2
  1129  0000D7                     vfpfcnvrt@f:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x77
  1133  0000D7                     	ds	4
  1134  0000DB                     vfpfcnvrt@ct:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 3 bytes @ 0x7B
  1138  0000DB                     	ds	3
  1139  0000DE                     vfpfcnvrt@c:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x7E
  1143  0000DE                     	ds	1
  1144  0000DF                     ?_vfprintf:
  1145                           	opt callstack 0
  1146  0000DF                     vfprintf@fp:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x7F
  1150  0000DF                     	ds	2
  1151  0000E1                     vfprintf@fmt:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x81
  1155  0000E1                     	ds	2
  1156  0000E3                     vfprintf@ap:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x83
  1160  0000E3                     	ds	2
  1161  0000E5                     vfprintf@cfmt:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x85
  1165  0000E5                     	ds	2
  1166  0000E7                     ?_sprintf:
  1167                           	opt callstack 0
  1168  0000E7                     sprintf@s:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x87
  1172  0000E7                     	ds	2
  1173  0000E9                     sprintf@fmt:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x89
  1177  0000E9                     	ds	8
  1178  0000F1                     sprintf@ap:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x91
  1182  0000F1                     	ds	2
  1183  0000F3                     sprintf@f:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 6 bytes @ 0x93
  1187  0000F3                     	ds	6
  1188                           
  1189                           	psect	cstackCOMRAM
  1190  000001                     __pcstackCOMRAM:
  1191                           	opt callstack 0
  1192  000001                     ??_antiRebote:
  1193  000001                     
  1194                           ; 1 bytes @ 0x0
  1195  000001                     	ds	2
  1196  000003                     antiRebote@pin:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x2
  1200  000003                     	ds	1
  1201  000004                     ??_boton:
  1202                           
  1203                           ; 1 bytes @ 0x3
  1204  000004                     	ds	2
  1205  000006                     ??_mover:
  1206  000006                     ??_forzarReversa:
  1207  000006                     ??_configPwm:
  1208  000006                     ?_strlen:
  1209                           	opt callstack 0
  1210  000006                     ?___fpclassifyf:
  1211                           	opt callstack 0
  1212  000006                     ?_isupper:
  1213                           	opt callstack 0
  1214  000006                     ?_isdigit:
  1215                           	opt callstack 0
  1216  000006                     ?_strncmp:
  1217                           	opt callstack 0
  1218  000006                     ?_isspace:
  1219                           	opt callstack 0
  1220  000006                     ?___wmul:
  1221                           	opt callstack 0
  1222  000006                     ?___awdiv:
  1223                           	opt callstack 0
  1224  000006                     ?___awmod:
  1225                           	opt callstack 0
  1226  000006                     ?___lwdiv:
  1227                           	opt callstack 0
  1228  000006                     ?___lmul:
  1229                           	opt callstack 0
  1230  000006                     ?___flneg:
  1231                           	opt callstack 0
  1232  000006                     ?___aodiv:
  1233                           	opt callstack 0
  1234  000006                     ?___aomod:
  1235                           	opt callstack 0
  1236  000006                     UART_write@dato:
  1237                           	opt callstack 0
  1238  000006                     ___wmul@multiplier:
  1239                           	opt callstack 0
  1240  000006                     ___awdiv@dividend:
  1241                           	opt callstack 0
  1242  000006                     ___awmod@dividend:
  1243                           	opt callstack 0
  1244  000006                     ___lwdiv@dividend:
  1245                           	opt callstack 0
  1246  000006                     isdigit@c:
  1247                           	opt callstack 0
  1248  000006                     isspace@c:
  1249                           	opt callstack 0
  1250  000006                     isupper@c:
  1251                           	opt callstack 0
  1252  000006                     fputc@c:
  1253                           	opt callstack 0
  1254  000006                     strcpy@dest:
  1255                           	opt callstack 0
  1256  000006                     strlen@s:
  1257                           	opt callstack 0
  1258  000006                     strncmp@_l:
  1259                           	opt callstack 0
  1260  000006                     ___lmul@multiplier:
  1261                           	opt callstack 0
  1262  000006                     ___fleq@ff1:
  1263                           	opt callstack 0
  1264  000006                     ___flneg@f1:
  1265                           	opt callstack 0
  1266  000006                     ___fpclassifyf@x:
  1267                           	opt callstack 0
  1268  000006                     ___aodiv@dividend:
  1269                           	opt callstack 0
  1270  000006                     ___aomod@dividend:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 8 bytes @ 0x5
  1274  000006                     	ds	1
  1275  000007                     UART_printf@cadena:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x6
  1279  000007                     	ds	1
  1280  000008                     ??_isupper:
  1281  000008                     ??_isdigit:
  1282  000008                     ??_isspace:
  1283  000008                     configPwm@channel:
  1284                           	opt callstack 0
  1285  000008                     ___wmul@multiplicand:
  1286                           	opt callstack 0
  1287  000008                     ___awdiv@divisor:
  1288                           	opt callstack 0
  1289  000008                     ___awmod@divisor:
  1290                           	opt callstack 0
  1291  000008                     ___lwdiv@divisor:
  1292                           	opt callstack 0
  1293  000008                     fputc@fp:
  1294                           	opt callstack 0
  1295  000008                     strcpy@src:
  1296                           	opt callstack 0
  1297  000008                     strlen@a:
  1298                           	opt callstack 0
  1299  000008                     strncmp@_r:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x7
  1303  000008                     	ds	1
  1304  000009                     
  1305                           ; 1 bytes @ 0x8
  1306  000009                     	ds	1
  1307  00000A                     ??_fputc:
  1308  00000A                     ??___fpclassifyf:
  1309  00000A                     ??_strcpy:
  1310  00000A                     ___awdiv@counter:
  1311                           	opt callstack 0
  1312  00000A                     ___awmod@counter:
  1313                           	opt callstack 0
  1314  00000A                     ___lwdiv@counter:
  1315                           	opt callstack 0
  1316  00000A                     ___wmul@product:
  1317                           	opt callstack 0
  1318  00000A                     strncmp@n:
  1319                           	opt callstack 0
  1320  00000A                     ___lmul@multiplicand:
  1321                           	opt callstack 0
  1322  00000A                     ___fleq@ff2:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x9
  1326  00000A                     	ds	1
  1327  00000B                     ___awdiv@sign:
  1328                           	opt callstack 0
  1329  00000B                     ___awmod@sign:
  1330                           	opt callstack 0
  1331  00000B                     ___lwdiv@quotient:
  1332                           	opt callstack 0
  1333                           
  1334                           ; 2 bytes @ 0xA
  1335  00000B                     	ds	1
  1336  00000C                     ??_strncmp:
  1337  00000C                     ?_tolower:
  1338                           	opt callstack 0
  1339  00000C                     _isspace$1441:
  1340                           	opt callstack 0
  1341  00000C                     ___awdiv@quotient:
  1342                           	opt callstack 0
  1343  00000C                     strcpy@s:
  1344                           	opt callstack 0
  1345  00000C                     tolower@c:
  1346                           	opt callstack 0
  1347                           
  1348                           ; 2 bytes @ 0xB
  1349  00000C                     	ds	1
  1350  00000D                     ?_atoi:
  1351                           	opt callstack 0
  1352  00000D                     ?___xxtofl:
  1353                           	opt callstack 0
  1354  00000D                     atoi@s:
  1355                           	opt callstack 0
  1356  00000D                     strncmp@l:
  1357                           	opt callstack 0
  1358  00000D                     ___xxtofl@val:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 4 bytes @ 0xC
  1362  00000D                     	ds	1
  1363  00000E                     ??_tolower:
  1364  00000E                     ??___fleq:
  1365  00000E                     ___fpclassifyf@e:
  1366                           	opt callstack 0
  1367  00000E                     strcpy@d:
  1368                           	opt callstack 0
  1369  00000E                     ___lmul@product:
  1370                           	opt callstack 0
  1371  00000E                     ___aodiv@divisor:
  1372                           	opt callstack 0
  1373  00000E                     ___aomod@divisor:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 8 bytes @ 0xD
  1377  00000E                     	ds	1
  1378  00000F                     ??_atoi:
  1379  00000F                     fputs@s:
  1380                           	opt callstack 0
  1381  00000F                     strncmp@r:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 2 bytes @ 0xE
  1385  00000F                     	ds	1
  1386  000010                     ___fpclassifyf@u:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 4 bytes @ 0xF
  1390  000010                     	ds	1
  1391  000011                     ??___xxtofl:
  1392  000011                     fputs@fp:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x10
  1396  000011                     	ds	1
  1397  000012                     ?___aldiv:
  1398                           	opt callstack 0
  1399  000012                     _tolower$1540:
  1400                           	opt callstack 0
  1401  000012                     ___aldiv@dividend:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 4 bytes @ 0x11
  1405  000012                     	ds	1
  1406  000013                     fputs@c:
  1407                           	opt callstack 0
  1408  000013                     atoi@neg:
  1409                           	opt callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x12
  1412  000013                     	ds	1
  1413  000014                     fputs@i:
  1414                           	opt callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x13
  1417  000014                     	ds	1
  1418  000015                     ___xxtofl@sign:
  1419                           	opt callstack 0
  1420  000015                     _atoi$1410:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x14
  1424  000015                     	ds	1
  1425  000016                     ?_pad:
  1426                           	opt callstack 0
  1427  000016                     ___aodiv@counter:
  1428                           	opt callstack 0
  1429  000016                     ___aomod@counter:
  1430                           	opt callstack 0
  1431  000016                     ___xxtofl@exp:
  1432                           	opt callstack 0
  1433  000016                     pad@fp:
  1434                           	opt callstack 0
  1435  000016                     ___aldiv@divisor:
  1436                           	opt callstack 0
  1437                           
  1438                           ; 4 bytes @ 0x15
  1439  000016                     	ds	1
  1440  000017                     ___aodiv@sign:
  1441                           	opt callstack 0
  1442  000017                     ___aomod@sign:
  1443                           	opt callstack 0
  1444  000017                     _atoi$1412:
  1445                           	opt callstack 0
  1446  000017                     ___xxtofl@arg:
  1447                           	opt callstack 0
  1448                           
  1449                           ; 4 bytes @ 0x16
  1450  000017                     	ds	1
  1451  000018                     ?_abs:
  1452                           	opt callstack 0
  1453  000018                     pad@buf:
  1454                           	opt callstack 0
  1455  000018                     abs@a:
  1456                           	opt callstack 0
  1457  000018                     ___aodiv@quotient:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 8 bytes @ 0x17
  1461  000018                     	ds	1
  1462  000019                     _atoi$1411:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 1 bytes @ 0x18
  1466  000019                     	ds	1
  1467  00001A                     ??_abs:
  1468  00001A                     ___aldiv@counter:
  1469                           	opt callstack 0
  1470  00001A                     pad@p:
  1471                           	opt callstack 0
  1472  00001A                     atoi@n:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x19
  1476  00001A                     	ds	1
  1477  00001B                     ?___flmul:
  1478                           	opt callstack 0
  1479  00001B                     ?_dameDistancia:
  1480                           	opt callstack 0
  1481  00001B                     ___aldiv@sign:
  1482                           	opt callstack 0
  1483  00001B                     ___flmul@b:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 4 bytes @ 0x1A
  1487  00001B                     	ds	1
  1488  00001C                     ??_pad:
  1489  00001C                     ___aldiv@quotient:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 4 bytes @ 0x1B
  1493  00001C                     	ds	1
  1494  00001D                     pad@i:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x1C
  1498  00001D                     	ds	2
  1499  00001F                     ??_dameDistancia:
  1500  00001F                     pad@w:
  1501                           	opt callstack 0
  1502  00001F                     ___flmul@a:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x1E
  1506  00001F                     	ds	1
  1507  000020                     ?_map:
  1508                           	opt callstack 0
  1509  000020                     map@x:
  1510                           	opt callstack 0
  1511  000020                     UART_init@BAUD:
  1512                           	opt callstack 0
  1513                           
  1514                           ; 4 bytes @ 0x1F
  1515  000020                     	ds	1
  1516  000021                     ?_dtoa:
  1517                           	opt callstack 0
  1518  000021                     dameDistancia@numeroSensor:
  1519                           	opt callstack 0
  1520  000021                     dtoa@fp:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x20
  1524  000021                     	ds	1
  1525  000022                     dameDistancia@distancia:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x21
  1529  000022                     	ds	1
  1530  000023                     ??___flmul:
  1531  000023                     dtoa@d:
  1532                           	opt callstack 0
  1533                           
  1534                           ; 8 bytes @ 0x22
  1535  000023                     	ds	1
  1536  000024                     map@in_min:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 4 bytes @ 0x23
  1540  000024                     	ds	2
  1541  000026                     dameDistancia@conteo:
  1542                           	opt callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x25
  1545  000026                     	ds	1
  1546  000027                     ___flmul@sign:
  1547                           	opt callstack 0
  1548                           
  1549                           ; 1 bytes @ 0x26
  1550  000027                     	ds	1
  1551  000028                     ___flmul@aexp:
  1552                           	opt callstack 0
  1553  000028                     map@in_max:
  1554                           	opt callstack 0
  1555  000028                     _UART_init$1787:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 4 bytes @ 0x27
  1559  000028                     	ds	1
  1560  000029                     ___flmul@grs:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x28
  1564  000029                     	ds	2
  1565  00002B                     ??_dtoa:
  1566                           
  1567                           ; 1 bytes @ 0x2A
  1568  00002B                     	ds	1
  1569  00002C                     map@out_min:
  1570                           	opt callstack 0
  1571                           
  1572                           ; 4 bytes @ 0x2B
  1573  00002C                     	ds	1
  1574  00002D                     ___flmul@bexp:
  1575                           	opt callstack 0
  1576                           
  1577                           ; 1 bytes @ 0x2C
  1578  00002D                     	ds	1
  1579  00002E                     ___flmul@prod:
  1580                           	opt callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x2D
  1583  00002E                     	ds	2
  1584  000030                     map@out_max:
  1585                           	opt callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x2F
  1588  000030                     	ds	2
  1589  000032                     ___flmul@temp:
  1590                           	opt callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x31
  1593  000032                     	ds	1
  1594  000033                     _dtoa$883:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x32
  1598  000033                     	ds	1
  1599  000034                     ?___fladd:
  1600                           	opt callstack 0
  1601  000034                     ___flge@ff1:
  1602                           	opt callstack 0
  1603  000034                     ___fladd@b:
  1604                           	opt callstack 0
  1605                           
  1606                           ; 4 bytes @ 0x33
  1607  000034                     	ds	1
  1608  000035                     dtoa@p:
  1609                           	opt callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x34
  1612  000035                     	ds	2
  1613  000037                     dtoa@w:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x36
  1617  000037                     	ds	1
  1618  000038                     ___flge@ff2:
  1619                           	opt callstack 0
  1620  000038                     ___fladd@a:
  1621                           	opt callstack 0
  1622                           
  1623                           ; 4 bytes @ 0x37
  1624  000038                     	ds	1
  1625  000039                     dtoa@s:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x38
  1629  000039                     	ds	2
  1630  00003B                     dtoa@n:
  1631                           	opt callstack 0
  1632                           
  1633                           ; 8 bytes @ 0x3A
  1634  00003B                     	ds	1
  1635  00003C                     ??___fladd:
  1636  00003C                     ??___flge:
  1637                           
  1638                           ; 1 bytes @ 0x3B
  1639  00003C                     	ds	4
  1640  000040                     ___fladd@signs:
  1641                           	opt callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x3F
  1644  000040                     	ds	1
  1645  000041                     ___fladd@aexp:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 1 bytes @ 0x40
  1649  000041                     	ds	1
  1650  000042                     ___fladd@bexp:
  1651                           	opt callstack 0
  1652                           
  1653                           ; 1 bytes @ 0x41
  1654  000042                     	ds	1
  1655  000043                     ___fladd@grs:
  1656                           	opt callstack 0
  1657  000043                     dtoa@i:
  1658                           	opt callstack 0
  1659                           
  1660                           ; 2 bytes @ 0x42
  1661  000043                     	ds	1
  1662  000044                     ?___fldiv:
  1663                           	opt callstack 0
  1664  000044                     ?___flsub:
  1665                           	opt callstack 0
  1666  000044                     ___flsub@b:
  1667                           	opt callstack 0
  1668  000044                     ___fldiv@b:
  1669                           	opt callstack 0
  1670                           
  1671                           ; 4 bytes @ 0x43
  1672  000044                     	ds	4
  1673  000048                     ___flsub@a:
  1674                           	opt callstack 0
  1675  000048                     ___fldiv@a:
  1676                           	opt callstack 0
  1677                           
  1678                           ; 4 bytes @ 0x47
  1679  000048                     	ds	4
  1680  00004C                     ??___fldiv:
  1681  00004C                     ?_roundf:
  1682                           	opt callstack 0
  1683  00004C                     roundf@x:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 4 bytes @ 0x4B
  1687  00004C                     	ds	4
  1688  000050                     ??_roundf:
  1689  000050                     ?_floorf:
  1690                           	opt callstack 0
  1691  000050                     floorf@x:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 4 bytes @ 0x4F
  1695  000050                     	ds	4
  1696  000054                     
  1697                           ; 1 bytes @ 0x53
  1698 ;;
  1699 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1700 ;;
  1701 ;; *************** function _main *****************
  1702 ;; Defined at:
  1703 ;;		line 1169 in file "main.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  numMovimient    2    4[BANK1 ] int 
  1708 ;;  iniciado        1    6[BANK1 ] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1722 ;;Total ram usage:        3 bytes
  1723 ;; Hardware stack levels required when called:   11
  1724 ;; This function calls:
  1725 ;;		_UART_init
  1726 ;;		_configPwm
  1727 ;;		_configurarAdc
  1728 ;;		_forzarParoAuto
  1729 ;;		_inicializarComportamientoBasico
  1730 ;;		_probarPID
  1731 ;;		_visualizarPasosRealizados
  1732 ;; This function is called by:
  1733 ;;		Startup code after reset
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text0
  1738  003A64                     __ptext0:
  1739                           	opt callstack 0
  1740  003A64                     _main:
  1741                           	opt callstack 20
  1742  003A64                     
  1743                           ;main.c: 1171:     T_BOOL iniciado = 0;
  1744  003A64  0E00               	movlw	0
  1745  003A66  0101               	movlb	1	; () banked
  1746  003A68  6FCF               	movwf	main@iniciado& (0+255),b
  1747                           
  1748                           ;main.c: 1172:     T_INT numMovimientosTotales = 0;
  1749  003A6A  0E00               	movlw	0
  1750  003A6C  6FCE               	movwf	(main@numMovimientosTotales+1)& (0+255),b
  1751  003A6E  0E00               	movlw	0
  1752  003A70  6FCD               	movwf	main@numMovimientosTotales& (0+255),b
  1753  003A72                     
  1754                           ; BSR set to: 1
  1755                           ;main.c: 1175:     INTCONbits.GIE = 1;
  1756  003A72  8EF2               	bsf	242,7,c	;volatile
  1757  003A74                     
  1758                           ; BSR set to: 1
  1759                           ;main.c: 1176:     INTCONbits.INT0IE = 1;
  1760  003A74  88F2               	bsf	242,4,c	;volatile
  1761  003A76                     
  1762                           ; BSR set to: 1
  1763                           ;main.c: 1177:     INTCON2bits.INTEDG0 = 1;
  1764  003A76  8CF1               	bsf	241,6,c	;volatile
  1765  003A78                     
  1766                           ; BSR set to: 1
  1767                           ;main.c: 1179:     TRISD3 = 0;
  1768  003A78  9695               	bcf	3989,3,c	;volatile
  1769  003A7A                     
  1770                           ; BSR set to: 1
  1771                           ;main.c: 1180:     TRISB1 = 1;
  1772  003A7A  8293               	bsf	3987,1,c	;volatile
  1773  003A7C                     
  1774                           ; BSR set to: 1
  1775                           ;main.c: 1181:     TRISB2 = 1;
  1776  003A7C  8493               	bsf	3987,2,c	;volatile
  1777  003A7E                     
  1778                           ; BSR set to: 1
  1779                           ;main.c: 1182:     TRISB3 = 1;
  1780  003A7E  8693               	bsf	3987,3,c	;volatile
  1781  003A80                     
  1782                           ; BSR set to: 1
  1783                           ;main.c: 1184:     TRISB4 = 0;
  1784  003A80  9893               	bcf	3987,4,c	;volatile
  1785  003A82                     
  1786                           ; BSR set to: 1
  1787                           ;main.c: 1185:     TRISB5 = 0;
  1788  003A82  9A93               	bcf	3987,5,c	;volatile
  1789  003A84                     
  1790                           ; BSR set to: 1
  1791                           ;main.c: 1186:     TRISB6 = 0;
  1792  003A84  9C93               	bcf	3987,6,c	;volatile
  1793  003A86                     
  1794                           ; BSR set to: 1
  1795                           ;main.c: 1187:     TRISB7 = 0;
  1796  003A86  9E93               	bcf	3987,7,c	;volatile
  1797  003A88                     
  1798                           ; BSR set to: 1
  1799                           ;main.c: 1189:     TRISDbits.RD2 = 0;
  1800  003A88  9495               	bcf	149,2,c	;volatile
  1801  003A8A                     
  1802                           ; BSR set to: 1
  1803                           ;main.c: 1190:     TRISB0 = 1;
  1804  003A8A  8093               	bsf	3987,0,c	;volatile
  1805  003A8C                     
  1806                           ; BSR set to: 1
  1807                           ;main.c: 1192:     LATD3 = 0;
  1808  003A8C  968C               	bcf	3980,3,c	;volatile
  1809  003A8E                     
  1810                           ; BSR set to: 1
  1811                           ;main.c: 1193:     LATB4 = 0;
  1812  003A8E  988A               	bcf	3978,4,c	;volatile
  1813  003A90                     
  1814                           ; BSR set to: 1
  1815                           ;main.c: 1194:     LATB5 = 0;
  1816  003A90  9A8A               	bcf	3978,5,c	;volatile
  1817  003A92                     
  1818                           ; BSR set to: 1
  1819                           ;main.c: 1195:     LATB6 = 0;
  1820  003A92  9C8A               	bcf	3978,6,c	;volatile
  1821  003A94                     
  1822                           ; BSR set to: 1
  1823                           ;main.c: 1196:     LATB7 = 0;
  1824  003A94  9E8A               	bcf	3978,7,c	;volatile
  1825  003A96                     
  1826                           ; BSR set to: 1
  1827                           ;main.c: 1197:     LATD2 = 0;
  1828  003A96  948C               	bcf	3980,2,c	;volatile
  1829                           
  1830                           ;main.c: 1200:     T1CON = 0b00000000;
  1831  003A98  0E00               	movlw	0
  1832  003A9A  6ECD               	movwf	205,c	;volatile
  1833  003A9C                     
  1834                           ; BSR set to: 1
  1835                           ;main.c: 1202:     configPwm(1);
  1836  003A9C  0E01               	movlw	1
  1837  003A9E  EC59  F021         	call	_configPwm
  1838  003AA2                     
  1839                           ;main.c: 1203:     configPwm(2);
  1840  003AA2  0E02               	movlw	2
  1841  003AA4  EC59  F021         	call	_configPwm
  1842  003AA8                     
  1843                           ;main.c: 1204:     configurarAdc();
  1844  003AA8  EC09  F023         	call	_configurarAdc	;wreg free
  1845  003AAC                     
  1846                           ;main.c: 1206:     UART_init(9600);
  1847  003AAC  0E80               	movlw	128
  1848  003AAE  6E20               	movwf	UART_init@BAUD^0,c
  1849  003AB0  0E25               	movlw	37
  1850  003AB2  6E21               	movwf	(UART_init@BAUD+1)^0,c
  1851  003AB4  0E00               	movlw	0
  1852  003AB6  6E22               	movwf	(UART_init@BAUD+2)^0,c
  1853  003AB8  0E00               	movlw	0
  1854  003ABA  6E23               	movwf	(UART_init@BAUD+3)^0,c
  1855  003ABC  EC82  F01F         	call	_UART_init	;wreg free
  1856  003AC0                     l9932:
  1857                           
  1858                           ;main.c: 1211:         if (!pausa) {
  1859  003AC0  0101               	movlb	1	; () banked
  1860  003AC2  51D0               	movf	_pausa& (0+255),w,b
  1861  003AC4  A4D8               	btfss	status,2,c
  1862  003AC6  EF67  F01D         	goto	u11491
  1863  003ACA  EF69  F01D         	goto	u11490
  1864  003ACE                     u11491:
  1865  003ACE  EF84  F01D         	goto	l9948
  1866  003AD2                     u11490:
  1867  003AD2                     
  1868                           ; BSR set to: 1
  1869                           ;main.c: 1213:             if (!iniciado) {
  1870  003AD2  51CF               	movf	main@iniciado& (0+255),w,b
  1871  003AD4  A4D8               	btfss	status,2,c
  1872  003AD6  EF6F  F01D         	goto	u11501
  1873  003ADA  EF71  F01D         	goto	u11500
  1874  003ADE                     u11501:
  1875  003ADE  EF75  F01D         	goto	l9940
  1876  003AE2                     u11500:
  1877  003AE2                     
  1878                           ; BSR set to: 1
  1879                           ;main.c: 1214:                 iniciado = 1;
  1880  003AE2  0E01               	movlw	1
  1881  003AE4  6FCF               	movwf	main@iniciado& (0+255),b
  1882  003AE6                     
  1883                           ; BSR set to: 1
  1884                           ;main.c: 1215:                 inicializarComportamientoBasico();
  1885  003AE6  ECA8  F021         	call	_inicializarComportamientoBasico	;wreg free
  1886  003AEA                     l9940:
  1887                           
  1888                           ;main.c: 1220:             probarPID();
  1889  003AEA  EC81  F021         	call	_probarPID	;wreg free
  1890  003AEE                     
  1891                           ;main.c: 1221:             visualizarPasosRealizados(numMovimientosTotales++);
  1892  003AEE  C1CD  F1C9         	movff	main@numMovimientosTotales,visualizarPasosRealizados@numMovimientos
  1893  003AF2  C1CE  F1CA         	movff	main@numMovimientosTotales+1,visualizarPasosRealizados@numMovimientos+1
  1894  003AF6  ECE2  F01D         	call	_visualizarPasosRealizados	;wreg free
  1895  003AFA  0101               	movlb	1	; () banked
  1896  003AFC  4BCD               	infsnz	main@numMovimientosTotales& (0+255),f,b
  1897  003AFE  2BCE               	incf	(main@numMovimientosTotales+1)& (0+255),f,b
  1898  003B00                     
  1899                           ; BSR set to: 1
  1900                           ;main.c: 1223:             forzarParoAuto();
  1901  003B00  EC04  F023         	call	_forzarParoAuto	;wreg free
  1902                           
  1903                           ;main.c: 1225:         } else {
  1904  003B04  EF60  F01D         	goto	l9932
  1905  003B08                     l9948:
  1906                           
  1907                           ; BSR set to: 1
  1908                           ;main.c: 1227:             iniciado = 0;
  1909  003B08  0E00               	movlw	0
  1910  003B0A  6FCF               	movwf	main@iniciado& (0+255),b
  1911  003B0C  EF60  F01D         	goto	l9932
  1912  003B10  EF07  F000         	goto	start
  1913  003B14                     __end_of_main:
  1914                           	opt callstack 0
  1915                           
  1916 ;; *************** function _visualizarPasosRealizados *****************
  1917 ;; Defined at:
  1918 ;;		line 204 in file "main.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  numMovimient    2    0[BANK1 ] unsigned int 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         0       0       2       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1935 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1936 ;;Total ram usage:        4 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:   10
  1939 ;; This function calls:
  1940 ;;		_UART_printf
  1941 ;;		_sprintf
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text1
  1948  003BC4                     __ptext1:
  1949                           	opt callstack 0
  1950  003BC4                     _visualizarPasosRealizados:
  1951                           	opt callstack 20
  1952  003BC4                     
  1953                           ;main.c: 206:     switch (mouse.curr_state) {
  1954  003BC4  EF04  F01E         	goto	l9162
  1955  003BC8                     l9152:
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;main.c: 208:             UART_printf("Enfrente\n");
  1959  003BC8  0ED2               	movlw	low STR_7
  1960  003BCA  6E07               	movwf	UART_printf@cadena^0,c
  1961  003BCC  0E7F               	movlw	high STR_7
  1962  003BCE  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1963  003BD0  EC54  F020         	call	_UART_printf	;wreg free
  1964                           
  1965                           ;main.c: 209:             break;
  1966  003BD4  EF23  F01E         	goto	l9164
  1967  003BD8                     l9154:
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;main.c: 212:             UART_printf("Izquierda\n");
  1971  003BD8  0EC7               	movlw	low STR_8
  1972  003BDA  6E07               	movwf	UART_printf@cadena^0,c
  1973  003BDC  0E7F               	movlw	high STR_8
  1974  003BDE  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1975  003BE0  EC54  F020         	call	_UART_printf	;wreg free
  1976                           
  1977                           ;main.c: 213:             break;
  1978  003BE4  EF23  F01E         	goto	l9164
  1979  003BE8                     l9156:
  1980                           
  1981                           ; BSR set to: 1
  1982                           ;main.c: 216:             UART_printf("Derecha\n");
  1983  003BE8  0EDC               	movlw	low STR_9
  1984  003BEA  6E07               	movwf	UART_printf@cadena^0,c
  1985  003BEC  0E7F               	movlw	high STR_9
  1986  003BEE  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1987  003BF0  EC54  F020         	call	_UART_printf	;wreg free
  1988                           
  1989                           ;main.c: 217:             break;
  1990  003BF4  EF23  F01E         	goto	l9164
  1991  003BF8                     l9158:
  1992                           
  1993                           ; BSR set to: 1
  1994                           ;main.c: 220:             UART_printf("Alto\n");
  1995  003BF8  0EE5               	movlw	low STR_10
  1996  003BFA  6E07               	movwf	UART_printf@cadena^0,c
  1997  003BFC  0E7F               	movlw	high STR_10
  1998  003BFE  6E08               	movwf	(UART_printf@cadena+1)^0,c
  1999  003C00  EC54  F020         	call	_UART_printf	;wreg free
  2000                           
  2001                           ;main.c: 221:             break;
  2002  003C04  EF23  F01E         	goto	l9164
  2003  003C08                     l9162:
  2004  003C08  0100               	movlb	0	; () banked
  2005  003C0A  51F9               	movf	_mouse& (0+255),w,b
  2006  003C0C  0101               	movlb	1	; () banked
  2007  003C0E  6FCB               	movwf	??_visualizarPasosRealizados& (0+255),b
  2008  003C10  6BCC               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2009                           
  2010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2011                           ; Switch size 1, requested type "simple"
  2012                           ; Number of cases is 1, Range of values is 0 to 0
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; simple_byte            4     3 (average)
  2016                           ;	Chosen strategy is simple_byte
  2017  003C12  51CC               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2018  003C14  0A00               	xorlw	0	; case 0
  2019  003C16  B4D8               	btfsc	status,2,c
  2020  003C18  EF10  F01E         	goto	l10110
  2021  003C1C  EF23  F01E         	goto	l9164
  2022  003C20                     l10110:
  2023                           
  2024                           ; BSR set to: 1
  2025                           ; Switch size 1, requested type "simple"
  2026                           ; Number of cases is 4, Range of values is 1 to 4
  2027                           ; switch strategies available:
  2028                           ; Name         Instructions Cycles
  2029                           ; simple_byte           13     7 (average)
  2030                           ;	Chosen strategy is simple_byte
  2031  003C20  51CB               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2032  003C22  0A01               	xorlw	1	; case 1
  2033  003C24  B4D8               	btfsc	status,2,c
  2034  003C26  EFE4  F01D         	goto	l9152
  2035  003C2A  0A03               	xorlw	3	; case 2
  2036  003C2C  B4D8               	btfsc	status,2,c
  2037  003C2E  EFEC  F01D         	goto	l9154
  2038  003C32  0A01               	xorlw	1	; case 3
  2039  003C34  B4D8               	btfsc	status,2,c
  2040  003C36  EFF4  F01D         	goto	l9156
  2041  003C3A  0A07               	xorlw	7	; case 4
  2042  003C3C  B4D8               	btfsc	status,2,c
  2043  003C3E  EFFC  F01D         	goto	l9158
  2044  003C42  EF23  F01E         	goto	l9164
  2045  003C46                     l9164:
  2046                           
  2047                           ;main.c: 224:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2048  003C46  0E8E               	movlw	low _buffer
  2049  003C48  0100               	movlb	0	; () banked
  2050  003C4A  6FE7               	movwf	sprintf@s& (0+255),b
  2051  003C4C  0E01               	movlw	high _buffer
  2052  003C4E  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2053  003C50  0E40               	movlw	low STR_11
  2054  003C52  6FE9               	movwf	sprintf@fmt& (0+255),b
  2055  003C54  0E7F               	movlw	high STR_11
  2056  003C56  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2057  003C58  C1C9  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2058  003C5C  C1CA  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2059  003C60  EC07  F021         	call	_sprintf	;wreg free
  2060  003C64                     
  2061                           ;main.c: 225:     UART_printf(buffer);
  2062  003C64  0E8E               	movlw	low _buffer
  2063  003C66  6E07               	movwf	UART_printf@cadena^0,c
  2064  003C68  0E01               	movlw	high _buffer
  2065  003C6A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2066  003C6C  EC54  F020         	call	_UART_printf	;wreg free
  2067  003C70  0012               	return		;funcret
  2068  003C72                     __end_of_visualizarPasosRealizados:
  2069                           	opt callstack 0
  2070                           
  2071 ;; *************** function _sprintf *****************
  2072 ;; Defined at:
  2073 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  s               2  135[BANK0 ] PTR unsigned char 
  2076 ;;		 -> buffer(50), 
  2077 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  2078 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2079 ;;		 -> STR_3(34), 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  f               6  147[BANK0 ] struct _IO_FILE
  2082 ;;  ap              2  145[BANK0 ] PTR void [1]
  2083 ;;		 -> ?_sprintf(2), 
  2084 ;;  ret             2    0        int 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2  135[BANK0 ] int 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         0       8       0       0       0       0       0       0       0
  2095 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2097 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2098 ;;Total ram usage:       18 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    9
  2101 ;; This function calls:
  2102 ;;		_vfprintf
  2103 ;; This function is called by:
  2104 ;;		_visualizarPasosRealizados
  2105 ;;		_probarSensores
  2106 ;;		_probarUltrasonico
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text2
  2111  00420E                     __ptext2:
  2112                           	opt callstack 0
  2113  00420E                     _sprintf:
  2114                           	opt callstack 20
  2115  00420E  0EEB               	movlw	low (?_sprintf+4)
  2116  004210  0100               	movlb	0	; () banked
  2117  004212  6FF1               	movwf	sprintf@ap& (0+255),b
  2118  004214  0E00               	movlw	high (?_sprintf+4)
  2119  004216  6FF2               	movwf	(sprintf@ap+1)& (0+255),b
  2120  004218  C0E7  F0F3         	movff	sprintf@s,sprintf@f
  2121  00421C  C0E8  F0F4         	movff	sprintf@s+1,sprintf@f+1
  2122  004220                     
  2123                           ; BSR set to: 0
  2124  004220  0E00               	movlw	0
  2125  004222  6FF6               	movwf	(sprintf@f+3)& (0+255),b
  2126  004224  0E00               	movlw	0
  2127  004226  6FF5               	movwf	(sprintf@f+2)& (0+255),b
  2128  004228                     
  2129                           ; BSR set to: 0
  2130  004228  0E00               	movlw	0
  2131  00422A  6FF8               	movwf	(sprintf@f+5)& (0+255),b
  2132  00422C  0E00               	movlw	0
  2133  00422E  6FF7               	movwf	(sprintf@f+4)& (0+255),b
  2134  004230                     
  2135                           ; BSR set to: 0
  2136  004230  0EF3               	movlw	low sprintf@f
  2137  004232  6FDF               	movwf	vfprintf@fp& (0+255),b
  2138  004234  0E00               	movlw	high sprintf@f
  2139  004236  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  2140  004238  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  2141  00423C  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2142  004240  0EF1               	movlw	low sprintf@ap
  2143  004242  6FE3               	movwf	vfprintf@ap& (0+255),b
  2144  004244  0E00               	movlw	high sprintf@ap
  2145  004246  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  2146  004248  ECBA  F01F         	call	_vfprintf	;wreg free
  2147  00424C  0100               	movlb	0	; () banked
  2148  00424E  51F5               	movf	(sprintf@f+2)& (0+255),w,b
  2149  004250  25E7               	addwf	sprintf@s& (0+255),w,b
  2150  004252  6ED9               	movwf	fsr2l,c
  2151  004254  51F6               	movf	(sprintf@f+3)& (0+255),w,b
  2152  004256  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  2153  004258  6EDA               	movwf	fsr2h,c
  2154  00425A  0E00               	movlw	0
  2155  00425C  6EDF               	movwf	indf2,c
  2156  00425E                     
  2157                           ; BSR set to: 0
  2158  00425E  0012               	return		;funcret
  2159  004260                     __end_of_sprintf:
  2160                           	opt callstack 0
  2161                           
  2162 ;; *************** function _vfprintf *****************
  2163 ;; Defined at:
  2164 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  2167 ;;		 -> sprintf@f(6), 
  2168 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  2169 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2170 ;;		 -> STR_3(34), 
  2171 ;;  ap              2  131[BANK0 ] PTR PTR void 
  2172 ;;		 -> sprintf@ap(2), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  2175 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2176 ;;		 -> STR_3(34), 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  2  127[BANK0 ] int 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2186 ;;      Params:         0       6       0       0       0       0       0       0       0
  2187 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2189 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2190 ;;Total ram usage:        8 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    8
  2193 ;; This function calls:
  2194 ;;		_vfpfcnvrt
  2195 ;; This function is called by:
  2196 ;;		_sprintf
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text3
  2201  003F74                     __ptext3:
  2202                           	opt callstack 0
  2203  003F74                     _vfprintf:
  2204                           	opt callstack 20
  2205  003F74                     
  2206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2207  003F74  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  2208  003F78  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2209  003F7C                     
  2210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2211  003F7C  0E00               	movlw	0
  2212  003F7E  0101               	movlb	1	; () banked
  2213  003F80  6F31               	movwf	(_nout+1)& (0+255),b
  2214  003F82  0E00               	movlw	0
  2215  003F84  6F30               	movwf	_nout& (0+255),b
  2216                           
  2217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2218  003F86  EFDC  F01F         	goto	l9006
  2219  003F8A                     l9004:
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2223  003F8A  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  2224  003F8E  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2225  003F92  0EE5               	movlw	low vfprintf@cfmt
  2226  003F94  0100               	movlb	0	; () banked
  2227  003F96  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  2228  003F98  0E00               	movlw	high vfprintf@cfmt
  2229  003F9A  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2230  003F9C  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  2231  003FA0  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2232  003FA4  ECE2  F005         	call	_vfpfcnvrt	;wreg free
  2233  003FA8  0100               	movlb	0	; () banked
  2234  003FAA  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  2235  003FAC  0101               	movlb	1	; () banked
  2236  003FAE  2730               	addwf	_nout& (0+255),f,b
  2237  003FB0  0100               	movlb	0	; () banked
  2238  003FB2  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2239  003FB4  0101               	movlb	1	; () banked
  2240  003FB6  2331               	addwfc	(_nout+1)& (0+255),f,b
  2241  003FB8                     l9006:
  2242                           
  2243                           ; BSR set to: 1
  2244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2245  003FB8  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  2246  003FBC  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2247  003FC0                     	if	0	;tblptru may be non-zero
  2248  003FC0                     	endif
  2249  003FC0                     	if	0	;tblptru may be non-zero
  2250  003FC0                     	endif
  2251  003FC0  0008               	tblrd		*
  2252  003FC2  50F5               	movf	tablat,w,c
  2253  003FC4  0900               	iorlw	0
  2254  003FC6  A4D8               	btfss	status,2,c
  2255  003FC8  EFE8  F01F         	goto	u10741
  2256  003FCC  EFEA  F01F         	goto	u10740
  2257  003FD0                     u10741:
  2258  003FD0  EFC5  F01F         	goto	l9004
  2259  003FD4                     u10740:
  2260  003FD4                     
  2261                           ; BSR set to: 1
  2262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2263  003FD4  C130  F0DF         	movff	_nout,?_vfprintf
  2264  003FD8  C131  F0E0         	movff	_nout+1,?_vfprintf+1
  2265  003FDC                     
  2266                           ; BSR set to: 1
  2267  003FDC  0012               	return		;funcret
  2268  003FDE                     __end_of_vfprintf:
  2269                           	opt callstack 0
  2270                           
  2271 ;; *************** function _vfpfcnvrt *****************
  2272 ;; Defined at:
  2273 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  2276 ;;		 -> sprintf@f(6), 
  2277 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  2278 ;;		 -> vfprintf@cfmt(2), 
  2279 ;;  ap              2  101[BANK0 ] PTR PTR void 
  2280 ;;		 -> sprintf@ap(2), 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  ll              8  107[BANK0 ] long long 
  2283 ;;  llu             8    0        unsigned long long 
  2284 ;;  f               4  119[BANK0 ] unsigned long long 
  2285 ;;  ct              3  123[BANK0 ] unsigned char [3]
  2286 ;;  vp              3    0        PTR void 
  2287 ;;  cp              3    0        PTR unsigned char 
  2288 ;;  i               2    0        int 
  2289 ;;  done            2    0        int 
  2290 ;;  c               1  126[BANK0 ] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  2   97[BANK0 ] int 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2300 ;;      Params:         0       6       0       0       0       0       0       0       0
  2301 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2302 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2303 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2304 ;;Total ram usage:       30 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    7
  2307 ;; This function calls:
  2308 ;;		_atoi
  2309 ;;		_dtoa
  2310 ;;		_efgtoa
  2311 ;;		_fputc
  2312 ;;		_isdigit
  2313 ;;		_isupper
  2314 ;;		_strncmp
  2315 ;;		_tolower
  2316 ;; This function is called by:
  2317 ;;		_vfprintf
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text4
  2322  000BC4                     __ptext4:
  2323                           	opt callstack 0
  2324  000BC4                     _vfpfcnvrt:
  2325                           	opt callstack 20
  2326  000BC4                     
  2327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2328  000BC4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329  000BC8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330  000BCC  CFDE FFF6          	movff	postinc2,tblptrl
  2331  000BD0  CFDD FFF7          	movff	postdec2,tblptrh
  2332  000BD4                     	if	0	;tblptru may be non-zero
  2333  000BD4                     	endif
  2334  000BD4                     	if	0	;tblptru may be non-zero
  2335  000BD4                     	endif
  2336  000BD4  0008               	tblrd		*
  2337  000BD6  50F5               	movf	tablat,w,c
  2338  000BD8  0A25               	xorlw	37
  2339  000BDA  A4D8               	btfss	status,2,c
  2340  000BDC  EFF2  F005         	goto	u10351
  2341  000BE0  EFF4  F005         	goto	u10350
  2342  000BE4                     u10351:
  2343  000BE4  EF61  F008         	goto	l8882
  2344  000BE8                     u10350:
  2345  000BE8                     
  2346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2347  000BE8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2348  000BEC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2349  000BF0  2ADE               	incf	postinc2,f,c
  2350  000BF2  0E00               	movlw	0
  2351  000BF4  22DD               	addwfc	postdec2,f,c
  2352  000BF6                     
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2354  000BF6  0E00               	movlw	0
  2355  000BF8  0101               	movlb	1	; () banked
  2356  000BFA  6F33               	movwf	(_width+1)& (0+255),b
  2357  000BFC  0E00               	movlw	0
  2358  000BFE  6F32               	movwf	_width& (0+255),b
  2359  000C00  C132  F056         	movff	_width,_flags
  2360  000C04  C133  F057         	movff	_width+1,_flags+1
  2361  000C08                     
  2362                           ; BSR set to: 1
  2363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2364  000C08  6854               	setf	_prec^0,c
  2365  000C0A  6855               	setf	(_prec+1)^0,c
  2366  000C0C                     
  2367                           ; BSR set to: 1
  2368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2369  000C0C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2370  000C10  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2371  000C14  CFDE FFF6          	movff	postinc2,tblptrl
  2372  000C18  CFDD FFF7          	movff	postdec2,tblptrh
  2373  000C1C                     	if	0	;tblptru may be non-zero
  2374  000C1C                     	endif
  2375  000C1C                     	if	0	;tblptru may be non-zero
  2376  000C1C                     	endif
  2377  000C1C  0008               	tblrd		*
  2378  000C1E  50F5               	movf	tablat,w,c
  2379  000C20  0A2E               	xorlw	46
  2380  000C22  A4D8               	btfss	status,2,c
  2381  000C24  EF16  F006         	goto	u10361
  2382  000C28  EF18  F006         	goto	u10360
  2383  000C2C                     u10361:
  2384  000C2C  EF96  F006         	goto	l8818
  2385  000C30                     u10360:
  2386  000C30                     
  2387                           ; BSR set to: 1
  2388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2389  000C30  0E00               	movlw	0
  2390  000C32  6E55               	movwf	(_prec+1)^0,c
  2391  000C34  0E00               	movlw	0
  2392  000C36  6E54               	movwf	_prec^0,c
  2393  000C38                     
  2394                           ; BSR set to: 1
  2395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2396  000C38  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2397  000C3C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2398  000C40  2ADE               	incf	postinc2,f,c
  2399  000C42  0E00               	movlw	0
  2400  000C44  22DD               	addwfc	postdec2,f,c
  2401  000C46                     
  2402                           ; BSR set to: 1
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2404  000C46  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2405  000C4A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2406  000C4E  CFDE FFF6          	movff	postinc2,tblptrl
  2407  000C52  CFDD FFF7          	movff	postdec2,tblptrh
  2408  000C56                     	if	0	;tblptru may be non-zero
  2409  000C56                     	endif
  2410  000C56                     	if	0	;tblptru may be non-zero
  2411  000C56                     	endif
  2412  000C56  0008               	tblrd		*
  2413  000C58  50F5               	movf	tablat,w,c
  2414  000C5A  0A2A               	xorlw	42
  2415  000C5C  A4D8               	btfss	status,2,c
  2416  000C5E  EF33  F006         	goto	u10371
  2417  000C62  EF35  F006         	goto	u10370
  2418  000C66                     u10371:
  2419  000C66  EF52  F006         	goto	l8808
  2420  000C6A                     u10370:
  2421  000C6A                     
  2422                           ; BSR set to: 1
  2423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2424  000C6A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2425  000C6E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2426  000C72  2ADE               	incf	postinc2,f,c
  2427  000C74  0E00               	movlw	0
  2428  000C76  22DD               	addwfc	postdec2,f,c
  2429                           
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2431  000C78  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2432  000C7C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2433  000C80  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2434  000C84  0E02               	movlw	2
  2435  000C86  26DE               	addwf	postinc2,f,c
  2436  000C88  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2437  000C8C  0E00               	movlw	0
  2438  000C8E  22DD               	addwfc	postdec2,f,c
  2439  000C90  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2440  000C94  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2441  000C98  CFDE F054          	movff	postinc2,_prec
  2442  000C9C  CFDD F055          	movff	postdec2,_prec+1
  2443                           
  2444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2445  000CA0  EF96  F006         	goto	l8818
  2446  000CA4                     l8808:
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2450  000CA4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2451  000CA8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2452  000CAC  CFDE F00D          	movff	postinc2,atoi@s
  2453  000CB0  CFDD F00E          	movff	postdec2,atoi@s+1
  2454  000CB4  ECE7  F015         	call	_atoi	;wreg free
  2455  000CB8  C00D  F054         	movff	?_atoi,_prec
  2456  000CBC  C00E  F055         	movff	?_atoi+1,_prec+1
  2457                           
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2459  000CC0  EF69  F006         	goto	l8812
  2460  000CC4                     l8810:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2464  000CC4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2465  000CC8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2466  000CCC  2ADE               	incf	postinc2,f,c
  2467  000CCE  0E00               	movlw	0
  2468  000CD0  22DD               	addwfc	postdec2,f,c
  2469  000CD2                     l8812:
  2470  000CD2  0ED0               	movlw	208
  2471  000CD4  0100               	movlb	0	; () banked
  2472  000CD6  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2473  000CD8  0EFF               	movlw	255
  2474  000CDA  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2475  000CDC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2476  000CE0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2477  000CE4  CFDE FFF6          	movff	postinc2,tblptrl
  2478  000CE8  CFDD FFF7          	movff	postdec2,tblptrh
  2479  000CEC                     	if	0	;tblptru may be non-zero
  2480  000CEC                     	endif
  2481  000CEC                     	if	0	;tblptru may be non-zero
  2482  000CEC                     	endif
  2483  000CEC  0008               	tblrd		*
  2484  000CEE  50F5               	movf	tablat,w,c
  2485  000CF0  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2486  000CF2  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2487  000CF4  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2488  000CF6  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2489  000CF8  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2490  000CFA  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2491  000CFC  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2492  000CFE  E10A               	bnz	u10380
  2493  000D00  0E0A               	movlw	10
  2494  000D02  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2495  000D04  A0D8               	btfss	status,0,c
  2496  000D06  EF87  F006         	goto	u10381
  2497  000D0A  EF8A  F006         	goto	u10380
  2498  000D0E                     u10381:
  2499  000D0E  0E01               	movlw	1
  2500  000D10  EF8B  F006         	goto	u10390
  2501  000D14                     u10380:
  2502  000D14  0E00               	movlw	0
  2503  000D16                     u10390:
  2504  000D16  6FD3               	movwf	_vfpfcnvrt$932& (0+255),b
  2505  000D18  6BD4               	clrf	(_vfpfcnvrt$932+1)& (0+255),b
  2506  000D1A                     
  2507                           ; BSR set to: 0
  2508  000D1A  51D3               	movf	_vfpfcnvrt$932& (0+255),w,b
  2509  000D1C  11D4               	iorwf	(_vfpfcnvrt$932+1)& (0+255),w,b
  2510  000D1E  A4D8               	btfss	status,2,c
  2511  000D20  EF94  F006         	goto	u10401
  2512  000D24  EF96  F006         	goto	u10400
  2513  000D28                     u10401:
  2514  000D28  EF62  F006         	goto	l8810
  2515  000D2C                     u10400:
  2516  000D2C                     l8818:
  2517                           
  2518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2519  000D2C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2520  000D30  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2521  000D34  CFDE FFF6          	movff	postinc2,tblptrl
  2522  000D38  CFDD FFF7          	movff	postdec2,tblptrh
  2523  000D3C                     	if	0	;tblptru may be non-zero
  2524  000D3C                     	endif
  2525  000D3C                     	if	0	;tblptru may be non-zero
  2526  000D3C                     	endif
  2527  000D3C  0008               	tblrd		*
  2528  000D3E  50F5               	movf	tablat,w,c
  2529  000D40  6E0C               	movwf	tolower@c^0,c
  2530  000D42  6A0D               	clrf	(tolower@c+1)^0,c
  2531  000D44  EC24  F020         	call	_tolower	;wreg free
  2532  000D48  500C               	movf	?_tolower^0,w,c
  2533  000D4A  0100               	movlb	0	; () banked
  2534  000D4C  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  2535  000D4E                     
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2538  000D4E  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  2539  000D50  B4D8               	btfsc	status,2,c
  2540  000D52  EFAD  F006         	goto	u10411
  2541  000D56  EFAF  F006         	goto	u10410
  2542  000D5A                     u10411:
  2543  000D5A  EFE9  F006         	goto	l8828
  2544  000D5E                     u10410:
  2545  000D5E                     
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2548  000D5E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2549  000D62  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2550  000D66  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2551  000D6A  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2552  000D6E  0E01               	movlw	1
  2553  000D70  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2554  000D72  0E00               	movlw	0
  2555  000D74  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2556  000D76  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2557  000D7A  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2558  000D7E                     	if	0	;tblptru may be non-zero
  2559  000D7E                     	endif
  2560  000D7E                     	if	0	;tblptru may be non-zero
  2561  000D7E                     	endif
  2562  000D7E  0008               	tblrd		*
  2563  000D80  50F5               	movf	tablat,w,c
  2564  000D82  6E0C               	movwf	tolower@c^0,c
  2565  000D84  6A0D               	clrf	(tolower@c+1)^0,c
  2566  000D86  EC24  F020         	call	_tolower	;wreg free
  2567  000D8A  500C               	movf	?_tolower^0,w,c
  2568  000D8C  0100               	movlb	0	; () banked
  2569  000D8E  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2570  000D90                     
  2571                           ; BSR set to: 0
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2573  000D90  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2574  000D92  B4D8               	btfsc	status,2,c
  2575  000D94  EFCE  F006         	goto	u10421
  2576  000D98  EFD0  F006         	goto	u10420
  2577  000D9C                     u10421:
  2578  000D9C  EFE9  F006         	goto	l8828
  2579  000DA0                     u10420:
  2580  000DA0                     
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2583  000DA0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2584  000DA4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2585  000DA8  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2586  000DAC  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2587  000DB0  0E02               	movlw	2
  2588  000DB2  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2589  000DB4  0E00               	movlw	0
  2590  000DB6  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2591  000DB8  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2592  000DBC  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2593  000DC0                     	if	0	;tblptru may be non-zero
  2594  000DC0                     	endif
  2595  000DC0                     	if	0	;tblptru may be non-zero
  2596  000DC0                     	endif
  2597  000DC0  0008               	tblrd		*
  2598  000DC2  50F5               	movf	tablat,w,c
  2599  000DC4  6E0C               	movwf	tolower@c^0,c
  2600  000DC6  6A0D               	clrf	(tolower@c+1)^0,c
  2601  000DC8  EC24  F020         	call	_tolower	;wreg free
  2602  000DCC  500C               	movf	?_tolower^0,w,c
  2603  000DCE  0100               	movlb	0	; () banked
  2604  000DD0  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2605  000DD2                     l8828:
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2609  000DD2  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2610  000DD6  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2611  000DDA  CFDE FFF6          	movff	postinc2,tblptrl
  2612  000DDE  CFDD FFF7          	movff	postdec2,tblptrh
  2613  000DE2                     	if	0	;tblptru may be non-zero
  2614  000DE2                     	endif
  2615  000DE2                     	if	0	;tblptru may be non-zero
  2616  000DE2                     	endif
  2617  000DE2  0008               	tblrd		*
  2618  000DE4  50F5               	movf	tablat,w,c
  2619  000DE6  0A64               	xorlw	100
  2620  000DE8  B4D8               	btfsc	status,2,c
  2621  000DEA  EFF9  F006         	goto	u10431
  2622  000DEE  EFFB  F006         	goto	u10430
  2623  000DF2                     u10431:
  2624  000DF2  EF0D  F007         	goto	l8832
  2625  000DF6                     u10430:
  2626  000DF6                     
  2627                           ; BSR set to: 0
  2628  000DF6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2629  000DFA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2630  000DFE  CFDE FFF6          	movff	postinc2,tblptrl
  2631  000E02  CFDD FFF7          	movff	postdec2,tblptrh
  2632  000E06                     	if	0	;tblptru may be non-zero
  2633  000E06                     	endif
  2634  000E06                     	if	0	;tblptru may be non-zero
  2635  000E06                     	endif
  2636  000E06  0008               	tblrd		*
  2637  000E08  50F5               	movf	tablat,w,c
  2638  000E0A  0A69               	xorlw	105
  2639  000E0C  A4D8               	btfss	status,2,c
  2640  000E0E  EF0B  F007         	goto	u10441
  2641  000E12  EF0D  F007         	goto	u10440
  2642  000E16                     u10441:
  2643  000E16  EF4D  F007         	goto	l8838
  2644  000E1A                     u10440:
  2645  000E1A                     l8832:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2649  000E1A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2650  000E1E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2651  000E22  2ADE               	incf	postinc2,f,c
  2652  000E24  0E00               	movlw	0
  2653  000E26  22DD               	addwfc	postdec2,f,c
  2654                           
  2655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2656  000E28  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2657  000E2C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2658  000E30  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2659  000E34  0E02               	movlw	2
  2660  000E36  26DE               	addwf	postinc2,f,c
  2661  000E38  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2662  000E3C  0E00               	movlw	0
  2663  000E3E  22DD               	addwfc	postdec2,f,c
  2664  000E40  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2665  000E44  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2666  000E48  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  2667  000E4C  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  2668  000E50  0E00               	movlw	0
  2669  000E52  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2670  000E54  0EFF               	movlw	-1
  2671  000E56  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2672  000E58  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2673  000E5A  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2674  000E5C  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2675  000E5E  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2676  000E60  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2677  000E62                     
  2678                           ; BSR set to: 0
  2679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2680  000E62  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  2681  000E66  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2682  000E6A  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  2683  000E6E  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2684  000E72  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2685  000E76  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2686  000E7A  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2687  000E7E  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2688  000E82  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2689  000E86  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2690  000E8A  EC99  F010         	call	_dtoa	;wreg free
  2691  000E8E  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  2692  000E92  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2693  000E96  EF7C  F008         	goto	l874
  2694  000E9A                     l8838:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2698  000E9A  0E66               	movlw	102
  2699  000E9C  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2700  000E9E  A4D8               	btfss	status,2,c
  2701  000EA0  EF54  F007         	goto	u10451
  2702  000EA4  EF56  F007         	goto	u10450
  2703  000EA8                     u10451:
  2704  000EA8  EF96  F007         	goto	l8850
  2705  000EAC                     u10450:
  2706  000EAC                     
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2709  000EAC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2710  000EB0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2711  000EB4  CFDE FFF6          	movff	postinc2,tblptrl
  2712  000EB8  CFDD FFF7          	movff	postdec2,tblptrh
  2713  000EBC                     	if	0	;tblptru may be non-zero
  2714  000EBC                     	endif
  2715  000EBC                     	if	0	;tblptru may be non-zero
  2716  000EBC                     	endif
  2717  000EBC  0008               	tblrd		*
  2718  000EBE  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2719  000EC2                     
  2720                           ; BSR set to: 0
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2722  000EC2  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2723  000EC6  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2724  000ECA  2ADE               	incf	postinc2,f,c
  2725  000ECC  0E00               	movlw	0
  2726  000ECE  22DD               	addwfc	postdec2,f,c
  2727  000ED0                     
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2730  000ED0  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2731  000ED4  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2732  000ED8  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2733  000EDC  0E04               	movlw	4
  2734  000EDE  26DE               	addwf	postinc2,f,c
  2735  000EE0  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2736  000EE4  0E00               	movlw	0
  2737  000EE6  22DD               	addwfc	postdec2,f,c
  2738  000EE8  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2739  000EEC  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2740  000EF0  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2741  000EF4  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2742  000EF8  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2743  000EFC  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2744  000F00                     l8846:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2748  000F00  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  2749  000F04  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2750  000F08  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  2751  000F0C  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2752  000F10  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2753  000F14  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2754  000F18  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  2755  000F1C  EC09  F000         	call	_efgtoa	;wreg free
  2756  000F20  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  2757  000F24  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2758  000F28  EF7C  F008         	goto	l874
  2759  000F2C                     l8850:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2763  000F2C  0EDB               	movlw	low vfpfcnvrt@ct
  2764  000F2E  6E06               	movwf	strncmp@_l^0,c
  2765  000F30  0E00               	movlw	high vfpfcnvrt@ct
  2766  000F32  6E07               	movwf	(strncmp@_l+1)^0,c
  2767  000F34  0EFB               	movlw	low STR_22
  2768  000F36  6E08               	movwf	strncmp@_r^0,c
  2769  000F38  0E7F               	movlw	high STR_22
  2770  000F3A  6E09               	movwf	(strncmp@_r+1)^0,c
  2771  000F3C  0E00               	movlw	0
  2772  000F3E  6E0B               	movwf	(strncmp@n+1)^0,c
  2773  000F40  0E02               	movlw	2
  2774  000F42  6E0A               	movwf	strncmp@n^0,c
  2775  000F44  EC9F  F01B         	call	_strncmp	;wreg free
  2776  000F48  5006               	movf	?_strncmp^0,w,c
  2777  000F4A  1007               	iorwf	(?_strncmp+1)^0,w,c
  2778  000F4C  A4D8               	btfss	status,2,c
  2779  000F4E  EFAB  F007         	goto	u10461
  2780  000F52  EFAD  F007         	goto	u10460
  2781  000F56                     u10461:
  2782  000F56  EF29  F008         	goto	l8866
  2783  000F5A                     u10460:
  2784  000F5A                     
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2786  000F5A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2787  000F5E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2788  000F62  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2789  000F66  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2790  000F6A  0E01               	movlw	1
  2791  000F6C  0100               	movlb	0	; () banked
  2792  000F6E  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2793  000F70  0E00               	movlw	0
  2794  000F72  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2795  000F74  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2796  000F78  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2797  000F7C                     	if	0	;tblptru may be non-zero
  2798  000F7C                     	endif
  2799  000F7C                     	if	0	;tblptru may be non-zero
  2800  000F7C                     	endif
  2801  000F7C  0008               	tblrd		*
  2802  000F7E  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2803  000F82  0EBF               	movlw	191
  2804  000F84  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2805  000F86  0EFF               	movlw	255
  2806  000F88  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2807  000F8A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2808  000F8E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2809  000F92  CFDE FFF6          	movff	postinc2,tblptrl
  2810  000F96  CFDD FFF7          	movff	postdec2,tblptrh
  2811  000F9A                     	if	0	;tblptru may be non-zero
  2812  000F9A                     	endif
  2813  000F9A                     	if	0	;tblptru may be non-zero
  2814  000F9A                     	endif
  2815  000F9A  0008               	tblrd		*
  2816  000F9C  50F5               	movf	tablat,w,c
  2817  000F9E  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2818  000FA0  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2819  000FA2  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2820  000FA4  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2821  000FA6  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2822  000FA8  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2823  000FAA  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2824  000FAC  E10A               	bnz	u10470
  2825  000FAE  0E1A               	movlw	26
  2826  000FB0  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2827  000FB2  A0D8               	btfss	status,0,c
  2828  000FB4  EFDE  F007         	goto	u10471
  2829  000FB8  EFE1  F007         	goto	u10470
  2830  000FBC                     u10471:
  2831  000FBC  0E01               	movlw	1
  2832  000FBE  EFE2  F007         	goto	u10480
  2833  000FC2                     u10470:
  2834  000FC2  0E00               	movlw	0
  2835  000FC4                     u10480:
  2836  000FC4  6FD5               	movwf	_vfpfcnvrt$937& (0+255),b
  2837  000FC6  6BD6               	clrf	(_vfpfcnvrt$937+1)& (0+255),b
  2838  000FC8                     
  2839                           ; BSR set to: 0
  2840  000FC8  51D5               	movf	_vfpfcnvrt$937& (0+255),w,b
  2841  000FCA  11D6               	iorwf	(_vfpfcnvrt$937+1)& (0+255),w,b
  2842  000FCC  B4D8               	btfsc	status,2,c
  2843  000FCE  EFEB  F007         	goto	u10491
  2844  000FD2  EFED  F007         	goto	u10490
  2845  000FD6                     u10491:
  2846  000FD6  EF07  F008         	goto	l8860
  2847  000FDA                     u10490:
  2848  000FDA                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2851  000FDA  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2852  000FDE  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2853  000FE2  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2854  000FE6  0E04               	movlw	4
  2855  000FE8  26DE               	addwf	postinc2,f,c
  2856  000FEA  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2857  000FEE  0E00               	movlw	0
  2858  000FF0  22DD               	addwfc	postdec2,f,c
  2859  000FF2  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2860  000FF6  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2861  000FFA  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2862  000FFE  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2863  001002  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2864  001006  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2865                           
  2866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2867  00100A  EF1F  F008         	goto	l882
  2868  00100E                     l8860:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2872  00100E  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2873  001012  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2874  001016  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2875  00101A  0E04               	movlw	4
  2876  00101C  26DE               	addwf	postinc2,f,c
  2877  00101E  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2878  001022  0E00               	movlw	0
  2879  001024  22DD               	addwfc	postdec2,f,c
  2880  001026  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2881  00102A  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2882  00102E  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2883  001032  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2884  001036  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2885  00103A  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2886  00103E                     l882:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2890  00103E  0E02               	movlw	2
  2891  001040  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  001044  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  001048  26DE               	addwf	postinc2,f,c
  2894  00104A  0E00               	movlw	0
  2895  00104C  22DD               	addwfc	postdec2,f,c
  2896  00104E  EF80  F007         	goto	l8846
  2897  001052                     l8866:
  2898                           
  2899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2900  001052  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2901  001056  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2902  00105A  CFDE FFF6          	movff	postinc2,tblptrl
  2903  00105E  CFDD FFF7          	movff	postdec2,tblptrh
  2904  001062                     	if	0	;tblptru may be non-zero
  2905  001062                     	endif
  2906  001062                     	if	0	;tblptru may be non-zero
  2907  001062                     	endif
  2908  001062  0008               	tblrd		*
  2909  001064  50F5               	movf	tablat,w,c
  2910  001066  0A25               	xorlw	37
  2911  001068  A4D8               	btfss	status,2,c
  2912  00106A  EF39  F008         	goto	u10501
  2913  00106E  EF3B  F008         	goto	u10500
  2914  001072                     u10501:
  2915  001072  EF53  F008         	goto	l8876
  2916  001076                     u10500:
  2917  001076                     
  2918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2919  001076  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2920  00107A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2921  00107E  2ADE               	incf	postinc2,f,c
  2922  001080  0E00               	movlw	0
  2923  001082  22DD               	addwfc	postdec2,f,c
  2924  001084                     
  2925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2926  001084  0E00               	movlw	0
  2927  001086  6E07               	movwf	(fputc@c+1)^0,c
  2928  001088  0E25               	movlw	37
  2929  00108A  6E06               	movwf	fputc@c^0,c
  2930  00108C  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2931  001090  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2932  001094  EC0A  F01C         	call	_fputc	;wreg free
  2933  001098                     l8872:
  2934                           
  2935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2936  001098  0E00               	movlw	0
  2937  00109A  0100               	movlb	0	; () banked
  2938  00109C  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2939  00109E  0E01               	movlw	1
  2940  0010A0  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  2941  0010A2  EF7C  F008         	goto	l874
  2942  0010A6                     l8876:
  2943                           
  2944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2945  0010A6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2946  0010AA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2947  0010AE  2ADE               	incf	postinc2,f,c
  2948  0010B0  0E00               	movlw	0
  2949  0010B2  22DD               	addwfc	postdec2,f,c
  2950  0010B4                     
  2951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2952  0010B4  0E00               	movlw	0
  2953  0010B6  0100               	movlb	0	; () banked
  2954  0010B8  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2955  0010BA  0E00               	movlw	0
  2956  0010BC  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  2957  0010BE  EF7C  F008         	goto	l874
  2958  0010C2                     l8882:
  2959                           
  2960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2961  0010C2  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2962  0010C6  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2963  0010CA  CFDE FFF6          	movff	postinc2,tblptrl
  2964  0010CE  CFDD FFF7          	movff	postdec2,tblptrh
  2965  0010D2                     	if	0	;tblptru may be non-zero
  2966  0010D2                     	endif
  2967  0010D2                     	if	0	;tblptru may be non-zero
  2968  0010D2                     	endif
  2969  0010D2  0008               	tblrd		*
  2970  0010D4  50F5               	movf	tablat,w,c
  2971  0010D6  6E06               	movwf	fputc@c^0,c
  2972  0010D8  6A07               	clrf	(fputc@c+1)^0,c
  2973  0010DA  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2974  0010DE  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2975  0010E2  EC0A  F01C         	call	_fputc	;wreg free
  2976  0010E6                     
  2977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2978  0010E6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2979  0010EA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2980  0010EE  2ADE               	incf	postinc2,f,c
  2981  0010F0  0E00               	movlw	0
  2982  0010F2  22DD               	addwfc	postdec2,f,c
  2983  0010F4  EF4C  F008         	goto	l8872
  2984  0010F8                     l874:
  2985  0010F8  0012               	return		;funcret
  2986  0010FA                     __end_of_vfpfcnvrt:
  2987                           	opt callstack 0
  2988                           
  2989 ;; *************** function _strncmp *****************
  2990 ;; Defined at:
  2991 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  2994 ;;		 -> vfpfcnvrt@ct(3), 
  2995 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  2996 ;;		 -> STR_24(3), 
  2997 ;;  n               2    9[COMRAM] unsigned int 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  r               2   14[COMRAM] PTR const unsigned char 
  3000 ;;		 -> STR_24(3), 
  3001 ;;  l               2   12[COMRAM] PTR const unsigned char 
  3002 ;;		 -> vfpfcnvrt@ct(3), 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    5[COMRAM] int 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         6       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3014 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3015 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3016 ;;Total ram usage:       11 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    2
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_vfpfcnvrt
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text5
  3027  00373E                     __ptext5:
  3028                           	opt callstack 0
  3029  00373E                     _strncmp:
  3030                           	opt callstack 24
  3031  00373E  C006  F00D         	movff	strncmp@_l,strncmp@l
  3032  003742  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  3033  003746  C008  F00F         	movff	strncmp@_r,strncmp@r
  3034  00374A  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  3035  00374E  060A               	decf	strncmp@n^0,f,c
  3036  003750  A0D8               	btfss	status,0,c
  3037  003752  060B               	decf	(strncmp@n+1)^0,f,c
  3038  003754  280A               	incf	strncmp@n^0,w,c
  3039  003756  E106               	bnz	u10301
  3040  003758  280B               	incf	(strncmp@n+1)^0,w,c
  3041  00375A  A4D8               	btfss	status,2,c
  3042  00375C  EFB2  F01B         	goto	u10301
  3043  003760  EFB4  F01B         	goto	u10300
  3044  003764                     u10301:
  3045  003764  EFC1  F01B         	goto	l8776
  3046  003768                     u10300:
  3047  003768  0E00               	movlw	0
  3048  00376A  6E07               	movwf	(?_strncmp+1)^0,c
  3049  00376C  0E00               	movlw	0
  3050  00376E  6E06               	movwf	?_strncmp^0,c
  3051  003770  EF09  F01C         	goto	l1706
  3052  003774                     l8774:
  3053  003774  4A0D               	infsnz	strncmp@l^0,f,c
  3054  003776  2A0E               	incf	(strncmp@l+1)^0,f,c
  3055  003778  4A0F               	infsnz	strncmp@r^0,f,c
  3056  00377A  2A10               	incf	(strncmp@r+1)^0,f,c
  3057  00377C  060A               	decf	strncmp@n^0,f,c
  3058  00377E  A0D8               	btfss	status,0,c
  3059  003780  060B               	decf	(strncmp@n+1)^0,f,c
  3060  003782                     l8776:
  3061  003782  C00D  FFD9         	movff	strncmp@l,fsr2l
  3062  003786  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3063  00378A  50DF               	movf	indf2,w,c
  3064  00378C  B4D8               	btfsc	status,2,c
  3065  00378E  EFCB  F01B         	goto	u10311
  3066  003792  EFCD  F01B         	goto	u10310
  3067  003796                     u10311:
  3068  003796  EFF8  F01B         	goto	l8784
  3069  00379A                     u10310:
  3070  00379A  C00F  FFF6         	movff	strncmp@r,tblptrl
  3071  00379E  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3072  0037A2                     	if	0	;tblptru may be non-zero
  3073  0037A2                     	endif
  3074  0037A2                     	if	0	;tblptru may be non-zero
  3075  0037A2                     	endif
  3076  0037A2  0008               	tblrd		*
  3077  0037A4  50F5               	movf	tablat,w,c
  3078  0037A6  0900               	iorlw	0
  3079  0037A8  B4D8               	btfsc	status,2,c
  3080  0037AA  EFD9  F01B         	goto	u10321
  3081  0037AE  EFDB  F01B         	goto	u10320
  3082  0037B2                     u10321:
  3083  0037B2  EFF8  F01B         	goto	l8784
  3084  0037B6                     u10320:
  3085  0037B6  500A               	movf	strncmp@n^0,w,c
  3086  0037B8  100B               	iorwf	(strncmp@n+1)^0,w,c
  3087  0037BA  B4D8               	btfsc	status,2,c
  3088  0037BC  EFE2  F01B         	goto	u10331
  3089  0037C0  EFE4  F01B         	goto	u10330
  3090  0037C4                     u10331:
  3091  0037C4  EFF8  F01B         	goto	l8784
  3092  0037C8                     u10330:
  3093  0037C8  C00D  FFD9         	movff	strncmp@l,fsr2l
  3094  0037CC  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3095  0037D0  50DF               	movf	indf2,w,c
  3096  0037D2  6E0C               	movwf	??_strncmp^0,c
  3097  0037D4  C00F  FFF6         	movff	strncmp@r,tblptrl
  3098  0037D8  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3099  0037DC                     	if	0	;tblptru may be non-zero
  3100  0037DC                     	endif
  3101  0037DC                     	if	0	;tblptru may be non-zero
  3102  0037DC                     	endif
  3103  0037DC  0008               	tblrd		*
  3104  0037DE  50F5               	movf	tablat,w,c
  3105  0037E0  180C               	xorwf	??_strncmp^0,w,c
  3106  0037E2  B4D8               	btfsc	status,2,c
  3107  0037E4  EFF6  F01B         	goto	u10341
  3108  0037E8  EFF8  F01B         	goto	u10340
  3109  0037EC                     u10341:
  3110  0037EC  EFBA  F01B         	goto	l8774
  3111  0037F0                     u10340:
  3112  0037F0                     l8784:
  3113  0037F0  C00D  FFD9         	movff	strncmp@l,fsr2l
  3114  0037F4  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3115  0037F8  50DF               	movf	indf2,w,c
  3116  0037FA  6E0C               	movwf	??_strncmp^0,c
  3117  0037FC  C00F  FFF6         	movff	strncmp@r,tblptrl
  3118  003800  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3119  003804                     	if	0	;tblptru may be non-zero
  3120  003804                     	endif
  3121  003804                     	if	0	;tblptru may be non-zero
  3122  003804                     	endif
  3123  003804  0008               	tblrd		*
  3124  003806  50F5               	movf	tablat,w,c
  3125  003808  5C0C               	subwf	??_strncmp^0,w,c
  3126  00380A  6E06               	movwf	?_strncmp^0,c
  3127  00380C  6A07               	clrf	(?_strncmp+1)^0,c
  3128  00380E  A0D8               	btfss	status,0,c
  3129  003810  0607               	decf	(?_strncmp+1)^0,f,c
  3130  003812                     l1706:
  3131  003812  0012               	return		;funcret
  3132  003814                     __end_of_strncmp:
  3133                           	opt callstack 0
  3134                           
  3135 ;; *************** function _efgtoa *****************
  3136 ;; Defined at:
  3137 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  3140 ;;		 -> sprintf@f(6), 
  3141 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  3142 ;;  c               1   35[BANK0 ] unsigned char 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  u               4   93[BANK0 ] unsigned char 
  3145 ;;  g               4   85[BANK0 ] unsigned char 
  3146 ;;  l               4   79[BANK0 ] unsigned char 
  3147 ;;  h               4   75[BANK0 ] unsigned char 
  3148 ;;  ou              4   41[BANK0 ] unsigned char 
  3149 ;;  n               2   91[BANK0 ] int 
  3150 ;;  e               2   89[BANK0 ] int 
  3151 ;;  i               2   83[BANK0 ] int 
  3152 ;;  w               2   72[BANK0 ] int 
  3153 ;;  p               2   69[BANK0 ] int 
  3154 ;;  sign            2   67[BANK0 ] int 
  3155 ;;  d               2   65[BANK0 ] int 
  3156 ;;  ne              2   63[BANK0 ] int 
  3157 ;;  m               2   61[BANK0 ] int 
  3158 ;;  pp              2   59[BANK0 ] int 
  3159 ;;  t               2   57[BANK0 ] int 
  3160 ;;  mode            1   74[BANK0 ] unsigned char 
  3161 ;;  nmode           1   71[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  2   29[BANK0 ] int 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3171 ;;      Params:         0       7       0       0       0       0       0       0       0
  3172 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3173 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3174 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3175 ;;Total ram usage:       68 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    6
  3178 ;; This function calls:
  3179 ;;		___awdiv
  3180 ;;		___awmod
  3181 ;;		___fladd
  3182 ;;		___fldiv
  3183 ;;		___fleq
  3184 ;;		___flge
  3185 ;;		___flmul
  3186 ;;		___flneg
  3187 ;;		___flsub
  3188 ;;		___fltol
  3189 ;;		___fpclassifyf
  3190 ;;		_floorf
  3191 ;;		_isupper
  3192 ;;		_pad
  3193 ;;		_strcpy
  3194 ;;		_tolower
  3195 ;; This function is called by:
  3196 ;;		_vfpfcnvrt
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text6
  3201  000012                     __ptext6:
  3202                           	opt callstack 0
  3203  000012                     _efgtoa:
  3204                           	opt callstack 20
  3205  000012                     
  3206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3207  000012  0E00               	movlw	0
  3208  000014  0100               	movlb	0	; () banked
  3209  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  3210  000018  0E00               	movlw	0
  3211  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  3212  00001C                     
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3215  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  3216  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  3217  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  3218  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  3219  00002C                     
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3222  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3223  00002E  EF1D  F000         	goto	u9710
  3224  000032  EF1B  F000         	goto	u9711
  3225  000036                     u9711:
  3226  000036  EF33  F000         	goto	l8438
  3227  00003A                     u9710:
  3228  00003A                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3231  00003A  0E00               	movlw	0
  3232  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  3233  00003E  0E01               	movlw	1
  3234  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  3235  000042                     
  3236                           ; BSR set to: 0
  3237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3238  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  3239  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  3240  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  3241  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  3242  000052  EC6C  F022         	call	___flneg	;wreg free
  3243  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  3244  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  3245  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  3246  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  3247  000066                     l8438:
  3248                           
  3249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3250  000066  0E00               	movlw	0
  3251  000068  0100               	movlb	0	; () banked
  3252  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  3253  00006C  0E00               	movlw	0
  3254  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  3255  000070                     
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3258  000070  C132  F0A8         	movff	_width,efgtoa@w
  3259  000074  C133  F0A9         	movff	_width+1,efgtoa@w+1
  3260  000078                     
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3263  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  3264  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3265  00007C  A4D8               	btfss	status,2,c
  3266  00007E  EF43  F000         	goto	u9721
  3267  000082  EF45  F000         	goto	u9720
  3268  000086                     u9721:
  3269  000086  EF4C  F000         	goto	l8446
  3270  00008A                     u9720:
  3271  00008A                     
  3272                           ; BSR set to: 0
  3273  00008A  A456               	btfss	_flags^0,2,c
  3274  00008C  EF4A  F000         	goto	u9731
  3275  000090  EF4C  F000         	goto	u9730
  3276  000094                     u9731:
  3277  000094  EF66  F000         	goto	l8458
  3278  000098                     u9730:
  3279  000098                     l8446:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3283  000098  51A3               	movf	efgtoa@sign& (0+255),w,b
  3284  00009A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3285  00009C  A4D8               	btfss	status,2,c
  3286  00009E  EF53  F000         	goto	u9741
  3287  0000A2  EF55  F000         	goto	u9740
  3288  0000A6                     u9741:
  3289  0000A6  EF5B  F000         	goto	l8450
  3290  0000AA                     u9740:
  3291  0000AA                     
  3292                           ; BSR set to: 0
  3293  0000AA  0E00               	movlw	0
  3294  0000AC  6F8E               	movwf	(_efgtoa$907+1)& (0+255),b
  3295  0000AE  0E2B               	movlw	43
  3296  0000B0  6F8D               	movwf	_efgtoa$907& (0+255),b
  3297  0000B2  EF5F  F000         	goto	l8452
  3298  0000B6                     l8450:
  3299                           
  3300                           ; BSR set to: 0
  3301  0000B6  0E00               	movlw	0
  3302  0000B8  6F8E               	movwf	(_efgtoa$907+1)& (0+255),b
  3303  0000BA  0E2D               	movlw	45
  3304  0000BC  6F8D               	movwf	_efgtoa$907& (0+255),b
  3305  0000BE                     l8452:
  3306                           
  3307                           ; BSR set to: 0
  3308  0000BE  C08D  F13E         	movff	_efgtoa$907,_dbuf
  3309  0000C2                     
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3312  0000C2  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  3313  0000C4  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  3314  0000C6                     
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3317  0000C6  07A8               	decf	efgtoa@w& (0+255),f,b
  3318  0000C8  A0D8               	btfss	status,0,c
  3319  0000CA  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  3320  0000CC                     l8458:
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3324  0000CC  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  3325  0000D0  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3326  0000D4  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3327  0000D8  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3328  0000DC  EC20  F01B         	call	___fpclassifyf	;wreg free
  3329  0000E0  0406               	decf	?___fpclassifyf^0,w,c
  3330  0000E2  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3331  0000E4  A4D8               	btfss	status,2,c
  3332  0000E6  EF77  F000         	goto	u9751
  3333  0000EA  EF79  F000         	goto	u9750
  3334  0000EE                     u9751:
  3335  0000EE  EFD0  F000         	goto	l8476
  3336  0000F2                     u9750:
  3337  0000F2  0EBF               	movlw	191
  3338  0000F4  0100               	movlb	0	; () banked
  3339  0000F6  6F84               	movwf	??_efgtoa& (0+255),b
  3340  0000F8  0EFF               	movlw	255
  3341  0000FA  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3342  0000FC  5183               	movf	efgtoa@c& (0+255),w,b
  3343  0000FE  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3344  000100  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3345  000102  5184               	movf	??_efgtoa& (0+255),w,b
  3346  000104  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3347  000106  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3348  000108  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3349  00010A  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3350  00010C  E10A               	bnz	u9760
  3351  00010E  0E1A               	movlw	26
  3352  000110  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3353  000112  A0D8               	btfss	status,0,c
  3354  000114  EF8E  F000         	goto	u9761
  3355  000118  EF91  F000         	goto	u9760
  3356  00011C                     u9761:
  3357  00011C  0E01               	movlw	1
  3358  00011E  EF92  F000         	goto	u9770
  3359  000122                     u9760:
  3360  000122  0E00               	movlw	0
  3361  000124                     u9770:
  3362  000124  6F8F               	movwf	_efgtoa$908& (0+255),b
  3363  000126  6B90               	clrf	(_efgtoa$908+1)& (0+255),b
  3364  000128                     
  3365                           ; BSR set to: 0
  3366  000128  518F               	movf	_efgtoa$908& (0+255),w,b
  3367  00012A  1190               	iorwf	(_efgtoa$908+1)& (0+255),w,b
  3368  00012C  B4D8               	btfsc	status,2,c
  3369  00012E  EF9B  F000         	goto	u9781
  3370  000132  EF9D  F000         	goto	u9780
  3371  000136                     u9781:
  3372  000136  EFAB  F000         	goto	l8468
  3373  00013A                     u9780:
  3374  00013A                     
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3377  00013A  0E3E               	movlw	low _dbuf
  3378  00013C  25BB               	addwf	efgtoa@n& (0+255),w,b
  3379  00013E  6E06               	movwf	strcpy@dest^0,c
  3380  000140  0E01               	movlw	high _dbuf
  3381  000142  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3382  000144  6E07               	movwf	(strcpy@dest+1)^0,c
  3383  000146  0EEB               	movlw	low STR_14
  3384  000148  6E08               	movwf	strcpy@src^0,c
  3385  00014A  0E7F               	movlw	high STR_14
  3386  00014C  6E09               	movwf	(strcpy@src+1)^0,c
  3387  00014E  EC83  F020         	call	_strcpy	;wreg free
  3388                           
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3390  000152  EFB7  F000         	goto	l8470
  3391  000156                     l8468:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3395  000156  0E3E               	movlw	low _dbuf
  3396  000158  25BB               	addwf	efgtoa@n& (0+255),w,b
  3397  00015A  6E06               	movwf	strcpy@dest^0,c
  3398  00015C  0E01               	movlw	high _dbuf
  3399  00015E  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3400  000160  6E07               	movwf	(strcpy@dest+1)^0,c
  3401  000162  0EF3               	movlw	low STR_15
  3402  000164  6E08               	movwf	strcpy@src^0,c
  3403  000166  0E7F               	movlw	high STR_15
  3404  000168  6E09               	movwf	(strcpy@src+1)^0,c
  3405  00016A  EC83  F020         	call	_strcpy	;wreg free
  3406  00016E                     l8470:
  3407                           
  3408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3409  00016E  0100               	movlb	0	; () banked
  3410  000170  0EFD               	movlw	253
  3411  000172  27A8               	addwf	efgtoa@w& (0+255),f,b
  3412  000174  0EFF               	movlw	255
  3413  000176  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3414  000178                     l8472:
  3415                           
  3416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3417  000178  C07D  F016         	movff	efgtoa@fp,pad@fp
  3418  00017C  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  3419  000180  0E3E               	movlw	low _dbuf
  3420  000182  6E18               	movwf	pad@buf^0,c
  3421  000184  0E01               	movlw	high _dbuf
  3422  000186  6E19               	movwf	(pad@buf+1)^0,c
  3423  000188  C0A8  F01A         	movff	efgtoa@w,pad@p
  3424  00018C  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  3425  000190  ECD1  F01C         	call	_pad	;wreg free
  3426  000194  C016  F07D         	movff	?_pad,?_efgtoa
  3427  000198  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  3428  00019C  EFE1  F005         	goto	l782
  3429  0001A0                     l8476:
  3430                           
  3431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3432  0001A0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  3433  0001A4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3434  0001A8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3435  0001AC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3436  0001B0  EC20  F01B         	call	___fpclassifyf	;wreg free
  3437  0001B4  5006               	movf	?___fpclassifyf^0,w,c
  3438  0001B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3439  0001B8  A4D8               	btfss	status,2,c
  3440  0001BA  EFE1  F000         	goto	u9791
  3441  0001BE  EFE3  F000         	goto	u9790
  3442  0001C2                     u9791:
  3443  0001C2  EF23  F001         	goto	l8494
  3444  0001C6                     u9790:
  3445  0001C6  0EBF               	movlw	191
  3446  0001C8  0100               	movlb	0	; () banked
  3447  0001CA  6F84               	movwf	??_efgtoa& (0+255),b
  3448  0001CC  0EFF               	movlw	255
  3449  0001CE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3450  0001D0  5183               	movf	efgtoa@c& (0+255),w,b
  3451  0001D2  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3452  0001D4  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3453  0001D6  5184               	movf	??_efgtoa& (0+255),w,b
  3454  0001D8  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3455  0001DA  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3456  0001DC  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3457  0001DE  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3458  0001E0  E10A               	bnz	u9800
  3459  0001E2  0E1A               	movlw	26
  3460  0001E4  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3461  0001E6  A0D8               	btfss	status,0,c
  3462  0001E8  EFF8  F000         	goto	u9801
  3463  0001EC  EFFB  F000         	goto	u9800
  3464  0001F0                     u9801:
  3465  0001F0  0E01               	movlw	1
  3466  0001F2  EFFC  F000         	goto	u9810
  3467  0001F6                     u9800:
  3468  0001F6  0E00               	movlw	0
  3469  0001F8                     u9810:
  3470  0001F8  6F91               	movwf	_efgtoa$912& (0+255),b
  3471  0001FA  6B92               	clrf	(_efgtoa$912+1)& (0+255),b
  3472  0001FC                     
  3473                           ; BSR set to: 0
  3474  0001FC  5191               	movf	_efgtoa$912& (0+255),w,b
  3475  0001FE  1192               	iorwf	(_efgtoa$912+1)& (0+255),w,b
  3476  000200  B4D8               	btfsc	status,2,c
  3477  000202  EF05  F001         	goto	u9821
  3478  000206  EF07  F001         	goto	u9820
  3479  00020A                     u9821:
  3480  00020A  EF15  F001         	goto	l8486
  3481  00020E                     u9820:
  3482  00020E                     
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3485  00020E  0E3E               	movlw	low _dbuf
  3486  000210  25BB               	addwf	efgtoa@n& (0+255),w,b
  3487  000212  6E06               	movwf	strcpy@dest^0,c
  3488  000214  0E01               	movlw	high _dbuf
  3489  000216  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3490  000218  6E07               	movwf	(strcpy@dest+1)^0,c
  3491  00021A  0EEF               	movlw	low STR_18
  3492  00021C  6E08               	movwf	strcpy@src^0,c
  3493  00021E  0E7F               	movlw	high STR_18
  3494  000220  6E09               	movwf	(strcpy@src+1)^0,c
  3495  000222  EC83  F020         	call	_strcpy	;wreg free
  3496                           
  3497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3498  000226  EFB7  F000         	goto	l8470
  3499  00022A                     l8486:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3503  00022A  0E3E               	movlw	low _dbuf
  3504  00022C  25BB               	addwf	efgtoa@n& (0+255),w,b
  3505  00022E  6E06               	movwf	strcpy@dest^0,c
  3506  000230  0E01               	movlw	high _dbuf
  3507  000232  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3508  000234  6E07               	movwf	(strcpy@dest+1)^0,c
  3509  000236  0EF7               	movlw	low STR_19
  3510  000238  6E08               	movwf	strcpy@src^0,c
  3511  00023A  0E7F               	movlw	high STR_19
  3512  00023C  6E09               	movwf	(strcpy@src+1)^0,c
  3513  00023E  EC83  F020         	call	_strcpy	;wreg free
  3514  000242  EFB7  F000         	goto	l8470
  3515  000246                     l8494:
  3516                           
  3517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3518  000246  0E00               	movlw	0
  3519  000248  0100               	movlb	0	; () banked
  3520  00024A  6FBD               	movwf	efgtoa@u& (0+255),b
  3521  00024C  0E00               	movlw	0
  3522  00024E  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  3523  000250  0E80               	movlw	128
  3524  000252  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  3525  000254  0E3F               	movlw	63
  3526  000256  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  3527                           
  3528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3529  000258  0E00               	movlw	0
  3530  00025A  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  3531  00025C  0E00               	movlw	0
  3532  00025E  6FB9               	movwf	efgtoa@e& (0+255),b
  3533  000260                     
  3534                           ; BSR set to: 0
  3535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3536  000260  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  3537  000264  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  3538  000268  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  3539  00026C  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  3540  000270  0E00               	movlw	0
  3541  000272  6E0A               	movwf	___fleq@ff2^0,c
  3542  000274  0E00               	movlw	0
  3543  000276  6E0B               	movwf	(___fleq@ff2+1)^0,c
  3544  000278  0E00               	movlw	0
  3545  00027A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  3546  00027C  0E00               	movlw	0
  3547  00027E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  3548  000280  EC39  F01E         	call	___fleq	;wreg free
  3549  000284  B0D8               	btfsc	status,0,c
  3550  000286  EF47  F001         	goto	u9831
  3551  00028A  EF49  F001         	goto	u9830
  3552  00028E                     u9831:
  3553  00028E  EFCC  F001         	goto	l8512
  3554  000292                     u9830:
  3555  000292  EF68  F001         	goto	l8504
  3556  000296                     l8500:
  3557                           
  3558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3559  000296  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  3560  00029A  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  3561  00029E  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  3562  0002A2  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  3563  0002A6  0E00               	movlw	0
  3564  0002A8  6E1F               	movwf	___flmul@a^0,c
  3565  0002AA  0E00               	movlw	0
  3566  0002AC  6E20               	movwf	(___flmul@a+1)^0,c
  3567  0002AE  0E20               	movlw	32
  3568  0002B0  6E21               	movwf	(___flmul@a+2)^0,c
  3569  0002B2  0E41               	movlw	65
  3570  0002B4  6E22               	movwf	(___flmul@a+3)^0,c
  3571  0002B6  ECDD  F00A         	call	___flmul	;wreg free
  3572  0002BA  C01B  F0BD         	movff	?___flmul,efgtoa@u
  3573  0002BE  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  3574  0002C2  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  3575  0002C6  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  3576  0002CA                     
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3578  0002CA  0100               	movlb	0	; () banked
  3579  0002CC  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  3580  0002CE  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  3581  0002D0                     l8504:
  3582                           
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3584  0002D0  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  3585  0002D4  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  3586  0002D8  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  3587  0002DC  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  3588  0002E0  0E00               	movlw	0
  3589  0002E2  6E1F               	movwf	___flmul@a^0,c
  3590  0002E4  0E00               	movlw	0
  3591  0002E6  6E20               	movwf	(___flmul@a+1)^0,c
  3592  0002E8  0E20               	movlw	32
  3593  0002EA  6E21               	movwf	(___flmul@a+2)^0,c
  3594  0002EC  0E41               	movlw	65
  3595  0002EE  6E22               	movwf	(___flmul@a+3)^0,c
  3596  0002F0  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  3597  0002F4  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  3598  0002F8  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  3599  0002FC  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  3600  000300  ECDD  F00A         	call	___flmul	;wreg free
  3601  000304  C01B  F038         	movff	?___flmul,___flge@ff2
  3602  000308  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  3603  00030C  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  3604  000310  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  3605  000314  EC9E  F01A         	call	___flge	;wreg free
  3606  000318  B0D8               	btfsc	status,0,c
  3607  00031A  EF91  F001         	goto	u9841
  3608  00031E  EF93  F001         	goto	u9840
  3609  000322                     u9841:
  3610  000322  EF4B  F001         	goto	l8500
  3611  000326                     u9840:
  3612  000326  EFB3  F001         	goto	l8510
  3613  00032A                     l8506:
  3614                           
  3615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3616  00032A  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  3617  00032E  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3618  000332  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3619  000336  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3620  00033A  0E00               	movlw	0
  3621  00033C  6E48               	movwf	___fldiv@a^0,c
  3622  00033E  0E00               	movlw	0
  3623  000340  6E49               	movwf	(___fldiv@a+1)^0,c
  3624  000342  0E20               	movlw	32
  3625  000344  6E4A               	movwf	(___fldiv@a+2)^0,c
  3626  000346  0E41               	movlw	65
  3627  000348  6E4B               	movwf	(___fldiv@a+3)^0,c
  3628  00034A  ECCB  F00E         	call	___fldiv	;wreg free
  3629  00034E  C044  F0BD         	movff	?___fldiv,efgtoa@u
  3630  000352  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  3631  000356  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  3632  00035A  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  3633  00035E                     
  3634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3635  00035E  0100               	movlb	0	; () banked
  3636  000360  07B9               	decf	efgtoa@e& (0+255),f,b
  3637  000362  A0D8               	btfss	status,0,c
  3638  000364  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  3639  000366                     l8510:
  3640                           
  3641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3642  000366  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  3643  00036A  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  3644  00036E  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  3645  000372  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  3646  000376  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  3647  00037A  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  3648  00037E  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  3649  000382  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  3650  000386  EC9E  F01A         	call	___flge	;wreg free
  3651  00038A  A0D8               	btfss	status,0,c
  3652  00038C  EFCA  F001         	goto	u9851
  3653  000390  EFCC  F001         	goto	u9850
  3654  000394                     u9851:
  3655  000394  EF95  F001         	goto	l8506
  3656  000398                     u9850:
  3657  000398                     l8512:
  3658                           
  3659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3660  000398  C083  F00C         	movff	efgtoa@c,tolower@c
  3661  00039C  6A0D               	clrf	(tolower@c+1)^0,c
  3662  00039E  EC24  F020         	call	_tolower	;wreg free
  3663  0003A2  500C               	movf	?_tolower^0,w,c
  3664  0003A4  0100               	movlb	0	; () banked
  3665  0003A6  6FAA               	movwf	efgtoa@mode& (0+255),b
  3666  0003A8                     
  3667                           ; BSR set to: 0
  3668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3669  0003A8  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  3670  0003AC                     
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3673  0003AC  0E67               	movlw	103
  3674  0003AE  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3675  0003B0  A4D8               	btfss	status,2,c
  3676  0003B2  EFDD  F001         	goto	u9861
  3677  0003B6  EFDF  F001         	goto	u9860
  3678  0003BA                     u9861:
  3679  0003BA  EF05  F002         	goto	l8526
  3680  0003BE                     u9860:
  3681  0003BE                     
  3682                           ; BSR set to: 0
  3683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3684  0003BE  5054               	movf	_prec^0,w,c
  3685  0003C0  1055               	iorwf	(_prec+1)^0,w,c
  3686  0003C2  A4D8               	btfss	status,2,c
  3687  0003C4  EFE6  F001         	goto	u9871
  3688  0003C8  EFE8  F001         	goto	u9870
  3689  0003CC                     u9871:
  3690  0003CC  EFEC  F001         	goto	l8522
  3691  0003D0                     u9870:
  3692  0003D0                     
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3695  0003D0  0E00               	movlw	0
  3696  0003D2  6E55               	movwf	(_prec+1)^0,c
  3697  0003D4  0E01               	movlw	1
  3698  0003D6  6E54               	movwf	_prec^0,c
  3699  0003D8                     l8522:
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3703  0003D8  BE55               	btfsc	(_prec+1)^0,7,c
  3704  0003DA  EFF9  F001         	goto	u9880
  3705  0003DE  5055               	movf	(_prec+1)^0,w,c
  3706  0003E0  E106               	bnz	u9881
  3707  0003E2  0454               	decf	_prec^0,w,c
  3708  0003E4  B0D8               	btfsc	status,0,c
  3709  0003E6  EFF7  F001         	goto	u9881
  3710  0003EA  EFF9  F001         	goto	u9880
  3711  0003EE                     u9881:
  3712  0003EE  EFFF  F001         	goto	l800
  3713  0003F2                     u9880:
  3714  0003F2                     l8524:
  3715                           
  3716                           ; BSR set to: 0
  3717  0003F2  0E00               	movlw	0
  3718  0003F4  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  3719  0003F6  0E06               	movlw	6
  3720  0003F8  6FA5               	movwf	efgtoa@p& (0+255),b
  3721  0003FA  EF0E  F002         	goto	l8532
  3722  0003FE                     l800:
  3723                           
  3724                           ; BSR set to: 0
  3725  0003FE  C054  F0A5         	movff	_prec,efgtoa@p
  3726  000402  C055  F0A6         	movff	_prec+1,efgtoa@p+1
  3727  000406  EF0E  F002         	goto	l8532
  3728  00040A                     l8526:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3732  00040A  BE55               	btfsc	(_prec+1)^0,7,c
  3733  00040C  EF0A  F002         	goto	u9891
  3734  000410  EF0C  F002         	goto	u9890
  3735  000414                     u9891:
  3736  000414  EFF9  F001         	goto	l8524
  3737  000418                     u9890:
  3738  000418  EFFF  F001         	goto	l800
  3739  00041C                     l8532:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3743  00041C  0E67               	movlw	103
  3744  00041E  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3745  000420  A4D8               	btfss	status,2,c
  3746  000422  EF15  F002         	goto	u9901
  3747  000426  EF17  F002         	goto	u9900
  3748  00042A                     u9901:
  3749  00042A  EF46  F002         	goto	l8542
  3750  00042E                     u9900:
  3751  00042E                     
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3754  00042E  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3755  000430  EF25  F002         	goto	u9910
  3756  000434  0EFC               	movlw	252
  3757  000436  5DB9               	subwf	efgtoa@e& (0+255),w,b
  3758  000438  0EFF               	movlw	255
  3759  00043A  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3760  00043C  A0D8               	btfss	status,0,c
  3761  00043E  EF23  F002         	goto	u9911
  3762  000442  EF25  F002         	goto	u9910
  3763  000446                     u9911:
  3764  000446  EF44  F002         	goto	l8540
  3765  00044A                     u9910:
  3766  00044A                     
  3767                           ; BSR set to: 0
  3768  00044A  0EFF               	movlw	255
  3769  00044C  6F84               	movwf	??_efgtoa& (0+255),b
  3770  00044E  0EFF               	movlw	255
  3771  000450  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3772  000452  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  3773  000456  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  3774  00045A  5184               	movf	??_efgtoa& (0+255),w,b
  3775  00045C  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3776  00045E  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3777  000460  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3778  000462  51B9               	movf	efgtoa@e& (0+255),w,b
  3779  000464  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3780  000466  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3781  000468  0A80               	xorlw	128
  3782  00046A  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  3783  00046C  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  3784  00046E  0A80               	xorlw	128
  3785  000470  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3786  000472  A0D8               	btfss	status,0,c
  3787  000474  EF3E  F002         	goto	u9921
  3788  000478  EF40  F002         	goto	u9920
  3789  00047C                     u9921:
  3790  00047C  EF44  F002         	goto	l8540
  3791  000480                     u9920:
  3792  000480                     
  3793                           ; BSR set to: 0
  3794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3795  000480  0E66               	movlw	102
  3796  000482  6FA7               	movwf	efgtoa@nmode& (0+255),b
  3797                           
  3798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3799  000484  EF46  F002         	goto	l8542
  3800  000488                     l8540:
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3804  000488  0E65               	movlw	101
  3805  00048A  6FA7               	movwf	efgtoa@nmode& (0+255),b
  3806  00048C                     l8542:
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3810  00048C  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  3811  000490  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  3812  000494                     
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3815  000494  0E67               	movlw	103
  3816  000496  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3817  000498  A4D8               	btfss	status,2,c
  3818  00049A  EF51  F002         	goto	u9931
  3819  00049E  EF53  F002         	goto	u9930
  3820  0004A2                     u9931:
  3821  0004A2  EF63  F002         	goto	l8550
  3822  0004A6                     u9930:
  3823  0004A6                     
  3824                           ; BSR set to: 0
  3825  0004A6  0E66               	movlw	102
  3826  0004A8  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  3827  0004AA  A4D8               	btfss	status,2,c
  3828  0004AC  EF5A  F002         	goto	u9941
  3829  0004B0  EF5C  F002         	goto	u9940
  3830  0004B4                     u9941:
  3831  0004B4  EF65  F002         	goto	l8552
  3832  0004B8                     u9940:
  3833  0004B8                     
  3834                           ; BSR set to: 0
  3835  0004B8  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3836  0004BA  EF63  F002         	goto	u9950
  3837  0004BE  EF61  F002         	goto	u9951
  3838  0004C2                     u9951:
  3839  0004C2  EF65  F002         	goto	l8552
  3840  0004C6                     u9950:
  3841  0004C6                     l8550:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3845  0004C6  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  3846  0004C8  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  3847  0004CA                     l8552:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3851  0004CA  0E66               	movlw	102
  3852  0004CC  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  3853  0004CE  A4D8               	btfss	status,2,c
  3854  0004D0  EF6C  F002         	goto	u9961
  3855  0004D4  EF6E  F002         	goto	u9960
  3856  0004D8                     u9961:
  3857  0004D8  EF8E  F002         	goto	l8562
  3858  0004DC                     u9960:
  3859  0004DC                     
  3860                           ; BSR set to: 0
  3861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3862  0004DC  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3863  0004DE  EF75  F002         	goto	u9970
  3864  0004E2  EF73  F002         	goto	u9971
  3865  0004E6                     u9971:
  3866  0004E6  EF81  F002         	goto	l8558
  3867  0004EA                     u9970:
  3868  0004EA                     
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3871  0004EA  0E00               	movlw	0
  3872  0004EC  6FBD               	movwf	efgtoa@u& (0+255),b
  3873  0004EE  0E00               	movlw	0
  3874  0004F0  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  3875  0004F2  0E80               	movlw	128
  3876  0004F4  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  3877  0004F6  0E3F               	movlw	63
  3878  0004F8  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  3879                           
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3881  0004FA  0E00               	movlw	0
  3882  0004FC  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  3883  0004FE  0E00               	movlw	0
  3884  000500  6FB9               	movwf	efgtoa@e& (0+255),b
  3885  000502                     l8558:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3889  000502  0E67               	movlw	103
  3890  000504  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3891  000506  B4D8               	btfsc	status,2,c
  3892  000508  EF88  F002         	goto	u9981
  3893  00050C  EF8A  F002         	goto	u9980
  3894  000510                     u9981:
  3895  000510  EF8E  F002         	goto	l8562
  3896  000514                     u9980:
  3897  000514                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3900  000514  51B9               	movf	efgtoa@e& (0+255),w,b
  3901  000516  279D               	addwf	efgtoa@m& (0+255),f,b
  3902  000518  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  3903  00051A  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3904  00051C                     l8562:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3908  00051C  0E00               	movlw	0
  3909  00051E  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3910  000520  0E00               	movlw	0
  3911  000522  6FB3               	movwf	efgtoa@i& (0+255),b
  3912  000524                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3915  000524  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  3916  000528  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  3917  00052C  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  3918  000530  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  3919  000534                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3922  000534  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  3923  000538  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  3924  00053C  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  3925  000540  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  3926                           
  3927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3928  000544  EF1F  F003         	goto	l8576
  3929  000548                     l8568:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3933  000548  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  3934  00054C  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  3935  000550  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  3936  000554  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  3937  000558  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  3938  00055C  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  3939  000560  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  3940  000564  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  3941  000568  ECCB  F00E         	call	___fldiv	;wreg free
  3942  00056C  C044  F050         	movff	?___fldiv,floorf@x
  3943  000570  C045  F051         	movff	?___fldiv+1,floorf@x+1
  3944  000574  C046  F052         	movff	?___fldiv+2,floorf@x+2
  3945  000578  C047  F053         	movff	?___fldiv+3,floorf@x+3
  3946  00057C  EC24  F013         	call	_floorf	;wreg free
  3947  000580  C050  F0AF         	movff	?_floorf,efgtoa@l
  3948  000584  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  3949  000588  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  3950  00058C  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  3951                           
  3952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3953  000590  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  3954  000594  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  3955  000598  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  3956  00059C  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  3957  0005A0  EC1A  F01A         	call	___fltol	;wreg free
  3958  0005A4  C072  F0A1         	movff	?___fltol,efgtoa@d
  3959  0005A8  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  3960  0005AC                     
  3961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3962  0005AC  C0AB  F044         	movff	efgtoa@h,___flsub@b
  3963  0005B0  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  3964  0005B4  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  3965  0005B8  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  3966  0005BC  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  3967  0005C0  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  3968  0005C4  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  3969  0005C8  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  3970  0005CC  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  3971  0005D0  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  3972  0005D4  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  3973  0005D8  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  3974  0005DC  ECDD  F00A         	call	___flmul	;wreg free
  3975  0005E0  C01B  F048         	movff	?___flmul,___flsub@a
  3976  0005E4  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  3977  0005E8  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  3978  0005EC  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  3979  0005F0  ECCF  F021         	call	___flsub	;wreg free
  3980  0005F4  C044  F0AB         	movff	?___flsub,efgtoa@h
  3981  0005F8  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  3982  0005FC  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  3983  000600  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  3984  000604                     
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3986  000604  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  3987  000608  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3988  00060C  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3989  000610  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3990  000614  0E00               	movlw	0
  3991  000616  6E48               	movwf	___fldiv@a^0,c
  3992  000618  0E00               	movlw	0
  3993  00061A  6E49               	movwf	(___fldiv@a+1)^0,c
  3994  00061C  0E20               	movlw	32
  3995  00061E  6E4A               	movwf	(___fldiv@a+2)^0,c
  3996  000620  0E41               	movlw	65
  3997  000622  6E4B               	movwf	(___fldiv@a+3)^0,c
  3998  000624  ECCB  F00E         	call	___fldiv	;wreg free
  3999  000628  C044  F0BD         	movff	?___fldiv,efgtoa@u
  4000  00062C  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  4001  000630  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  4002  000634  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  4003  000638                     
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4005  000638  0100               	movlb	0	; () banked
  4006  00063A  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  4007  00063C  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  4008  00063E                     l8576:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4012  00063E  519D               	movf	efgtoa@m& (0+255),w,b
  4013  000640  5DB3               	subwf	efgtoa@i& (0+255),w,b
  4014  000642  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4015  000644  0A80               	xorlw	128
  4016  000646  6F84               	movwf	??_efgtoa& (0+255),b
  4017  000648  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  4018  00064A  0A80               	xorlw	128
  4019  00064C  5984               	subwfb	??_efgtoa& (0+255),w,b
  4020  00064E  A0D8               	btfss	status,0,c
  4021  000650  EF2C  F003         	goto	u9991
  4022  000654  EF2E  F003         	goto	u9990
  4023  000658                     u9991:
  4024  000658  EFA4  F002         	goto	l8568
  4025  00065C                     u9990:
  4026  00065C                     
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4029  00065C  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  4030  000660  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4031  000664  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4032  000668  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4033  00066C  0E00               	movlw	0
  4034  00066E  6E1F               	movwf	___flmul@a^0,c
  4035  000670  0E00               	movlw	0
  4036  000672  6E20               	movwf	(___flmul@a+1)^0,c
  4037  000674  0EA0               	movlw	160
  4038  000676  6E21               	movwf	(___flmul@a+2)^0,c
  4039  000678  0E40               	movlw	64
  4040  00067A  6E22               	movwf	(___flmul@a+3)^0,c
  4041  00067C  ECDD  F00A         	call	___flmul	;wreg free
  4042  000680  C01B  F0AF         	movff	?___flmul,efgtoa@l
  4043  000684  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
  4044  000688  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
  4045  00068C  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
  4046  000690                     
  4047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4048  000690  C0AB  F034         	movff	efgtoa@h,___flge@ff1
  4049  000694  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
  4050  000698  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
  4051  00069C  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
  4052  0006A0  C0AF  F038         	movff	efgtoa@l,___flge@ff2
  4053  0006A4  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
  4054  0006A8  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  4055  0006AC  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  4056  0006B0  EC9E  F01A         	call	___flge	;wreg free
  4057  0006B4  B0D8               	btfsc	status,0,c
  4058  0006B6  EF5F  F003         	goto	u10001
  4059  0006BA  EF61  F003         	goto	u10000
  4060  0006BE                     u10001:
  4061  0006BE  EF6C  F003         	goto	l8584
  4062  0006C2                     u10000:
  4063  0006C2                     
  4064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4065  0006C2  0E00               	movlw	0
  4066  0006C4  0100               	movlb	0	; () banked
  4067  0006C6  6FAF               	movwf	efgtoa@l& (0+255),b
  4068  0006C8  0E00               	movlw	0
  4069  0006CA  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  4070  0006CC  0E00               	movlw	0
  4071  0006CE  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  4072  0006D0  0E00               	movlw	0
  4073  0006D2  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  4074                           
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4076  0006D4  EF95  F003         	goto	l8590
  4077  0006D8                     l8584:
  4078                           
  4079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4080  0006D8  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
  4081  0006DC  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  4082  0006E0  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  4083  0006E4  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  4084  0006E8  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
  4085  0006EC  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  4086  0006F0  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  4087  0006F4  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  4088  0006F8  EC39  F01E         	call	___fleq	;wreg free
  4089  0006FC  A0D8               	btfss	status,0,c
  4090  0006FE  EF83  F003         	goto	u10011
  4091  000702  EF85  F003         	goto	u10010
  4092  000706                     u10011:
  4093  000706  EF95  F003         	goto	l8590
  4094  00070A                     u10010:
  4095  00070A  0100               	movlb	0	; () banked
  4096  00070C  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  4097  00070E  EF8B  F003         	goto	u10021
  4098  000712  EF8D  F003         	goto	u10020
  4099  000716                     u10021:
  4100  000716  EF95  F003         	goto	l8590
  4101  00071A                     u10020:
  4102  00071A                     
  4103                           ; BSR set to: 0
  4104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4105  00071A  0E00               	movlw	0
  4106  00071C  6FAF               	movwf	efgtoa@l& (0+255),b
  4107  00071E  0E00               	movlw	0
  4108  000720  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  4109  000722  0E00               	movlw	0
  4110  000724  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  4111  000726  0E00               	movlw	0
  4112  000728  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  4113  00072A                     l8590:
  4114                           
  4115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4116  00072A  C0B5  F034         	movff	efgtoa@g,___fladd@b
  4117  00072E  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
  4118  000732  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
  4119  000736  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
  4120  00073A  C0AF  F038         	movff	efgtoa@l,___fladd@a
  4121  00073E  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
  4122  000742  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  4123  000746  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  4124  00074A  EC7D  F008         	call	___fladd	;wreg free
  4125  00074E  C034  F0AB         	movff	?___fladd,efgtoa@h
  4126  000752  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
  4127  000756  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
  4128  00075A  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
  4129  00075E                     
  4130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4131  00075E  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
  4132  000762  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  4133  000766  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  4134  00076A  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  4135  00076E                     
  4136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4137  00076E  0E65               	movlw	101
  4138  000770  0100               	movlb	0	; () banked
  4139  000772  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  4140  000774  B4D8               	btfsc	status,2,c
  4141  000776  EFBF  F003         	goto	u10031
  4142  00077A  EFC1  F003         	goto	u10030
  4143  00077E                     u10031:
  4144  00077E  EFC7  F003         	goto	l8598
  4145  000782                     u10030:
  4146  000782                     
  4147                           ; BSR set to: 0
  4148  000782  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
  4149  000786  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  4150  00078A  EFCB  F003         	goto	l826
  4151  00078E                     l8598:
  4152                           
  4153                           ; BSR set to: 0
  4154  00078E  0E00               	movlw	0
  4155  000790  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  4156  000792  0E00               	movlw	0
  4157  000794  6F9F               	movwf	efgtoa@ne& (0+255),b
  4158  000796                     l826:
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4162  000796  0E00               	movlw	0
  4163  000798  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  4164  00079A  0E00               	movlw	0
  4165  00079C  6F9B               	movwf	efgtoa@pp& (0+255),b
  4166                           
  4167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4168  00079E  0E00               	movlw	0
  4169  0007A0  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  4170  0007A2  0E00               	movlw	0
  4171  0007A4  6F99               	movwf	efgtoa@t& (0+255),b
  4172                           
  4173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4174  0007A6  0E00               	movlw	0
  4175  0007A8  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4176  0007AA  0E00               	movlw	0
  4177  0007AC  6FB3               	movwf	efgtoa@i& (0+255),b
  4178                           
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4180  0007AE  EFC7  F004         	goto	l8648
  4181  0007B2                     l8600:
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4185  0007B2  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  4186  0007B6  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  4187  0007BA  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  4188  0007BE  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  4189  0007C2  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  4190  0007C6  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  4191  0007CA  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  4192  0007CE  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  4193  0007D2  ECCB  F00E         	call	___fldiv	;wreg free
  4194  0007D6  C044  F050         	movff	?___fldiv,floorf@x
  4195  0007DA  C045  F051         	movff	?___fldiv+1,floorf@x+1
  4196  0007DE  C046  F052         	movff	?___fldiv+2,floorf@x+2
  4197  0007E2  C047  F053         	movff	?___fldiv+3,floorf@x+3
  4198  0007E6  EC24  F013         	call	_floorf	;wreg free
  4199  0007EA  C050  F0AF         	movff	?_floorf,efgtoa@l
  4200  0007EE  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  4201  0007F2  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  4202  0007F6  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  4203                           
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4205  0007FA  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  4206  0007FE  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  4207  000802  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  4208  000806  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  4209  00080A  EC1A  F01A         	call	___fltol	;wreg free
  4210  00080E  C072  F0A1         	movff	?___fltol,efgtoa@d
  4211  000812  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  4212  000816                     
  4213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4214  000816  B856               	btfsc	_flags^0,4,c
  4215  000818  EF10  F004         	goto	u10041
  4216  00081C  EF12  F004         	goto	u10040
  4217  000820                     u10041:
  4218  000820  EF30  F004         	goto	l8612
  4219  000824                     u10040:
  4220  000824  0100               	movlb	0	; () banked
  4221  000826  51A1               	movf	efgtoa@d& (0+255),w,b
  4222  000828  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4223  00082A  A4D8               	btfss	status,2,c
  4224  00082C  EF1A  F004         	goto	u10051
  4225  000830  EF1C  F004         	goto	u10050
  4226  000834                     u10051:
  4227  000834  EF30  F004         	goto	l8612
  4228  000838                     u10050:
  4229  000838                     
  4230                           ; BSR set to: 0
  4231  000838  0E67               	movlw	103
  4232  00083A  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  4233  00083C  A4D8               	btfss	status,2,c
  4234  00083E  EF23  F004         	goto	u10061
  4235  000842  EF25  F004         	goto	u10060
  4236  000846                     u10061:
  4237  000846  EF30  F004         	goto	l8612
  4238  00084A                     u10060:
  4239  00084A                     
  4240                           ; BSR set to: 0
  4241  00084A  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4242  00084C  EF2C  F004         	goto	u10070
  4243  000850  EF2A  F004         	goto	u10071
  4244  000854                     u10071:
  4245  000854  EF30  F004         	goto	l8612
  4246  000858                     u10070:
  4247  000858                     
  4248                           ; BSR set to: 0
  4249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4250  000858  4B99               	infsnz	efgtoa@t& (0+255),f,b
  4251  00085A  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  4252                           
  4253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4254  00085C  EF7B  F004         	goto	l8640
  4255  000860                     l8612:
  4256                           
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4258  000860  0100               	movlb	0	; () banked
  4259  000862  519B               	movf	efgtoa@pp& (0+255),w,b
  4260  000864  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4261  000866  A4D8               	btfss	status,2,c
  4262  000868  EF38  F004         	goto	u10081
  4263  00086C  EF3A  F004         	goto	u10080
  4264  000870                     u10081:
  4265  000870  EF64  F004         	goto	l8632
  4266  000874                     u10080:
  4267  000874                     
  4268                           ; BSR set to: 0
  4269  000874  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4270  000876  EF41  F004         	goto	u10090
  4271  00087A  EF3F  F004         	goto	u10091
  4272  00087E                     u10091:
  4273  00087E  EF64  F004         	goto	l8632
  4274  000882                     u10090:
  4275  000882                     
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4278  000882  0E3E               	movlw	low _dbuf
  4279  000884  25BB               	addwf	efgtoa@n& (0+255),w,b
  4280  000886  6ED9               	movwf	fsr2l,c
  4281  000888  0E01               	movlw	high _dbuf
  4282  00088A  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4283  00088C  6EDA               	movwf	fsr2h,c
  4284  00088E  0E2E               	movlw	46
  4285  000890  6EDF               	movwf	indf2,c
  4286  000892                     
  4287                           ; BSR set to: 0
  4288  000892  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4289  000894  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4290  000896                     
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4293  000896  07A8               	decf	efgtoa@w& (0+255),f,b
  4294  000898  A0D8               	btfss	status,0,c
  4295  00089A  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4296  00089C                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4299  00089C  0E00               	movlw	0
  4300  00089E  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  4301  0008A0  0E01               	movlw	1
  4302  0008A2  6F9B               	movwf	efgtoa@pp& (0+255),b
  4303  0008A4  EF64  F004         	goto	l8632
  4304  0008A8                     l8624:
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4308  0008A8  0E3E               	movlw	low _dbuf
  4309  0008AA  25BB               	addwf	efgtoa@n& (0+255),w,b
  4310  0008AC  6ED9               	movwf	fsr2l,c
  4311  0008AE  0E01               	movlw	high _dbuf
  4312  0008B0  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4313  0008B2  6EDA               	movwf	fsr2h,c
  4314  0008B4  0E30               	movlw	48
  4315  0008B6  6EDF               	movwf	indf2,c
  4316  0008B8                     
  4317                           ; BSR set to: 0
  4318  0008B8  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4319  0008BA  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4320  0008BC                     
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4323  0008BC  07A8               	decf	efgtoa@w& (0+255),f,b
  4324  0008BE  A0D8               	btfss	status,0,c
  4325  0008C0  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4326  0008C2                     
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4329  0008C2  0799               	decf	efgtoa@t& (0+255),f,b
  4330  0008C4  A0D8               	btfss	status,0,c
  4331  0008C6  079A               	decf	(efgtoa@t+1)& (0+255),f,b
  4332  0008C8                     l8632:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4336  0008C8  5199               	movf	efgtoa@t& (0+255),w,b
  4337  0008CA  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4338  0008CC  A4D8               	btfss	status,2,c
  4339  0008CE  EF6B  F004         	goto	u10101
  4340  0008D2  EF6D  F004         	goto	u10100
  4341  0008D6                     u10101:
  4342  0008D6  EF54  F004         	goto	l8624
  4343  0008DA                     u10100:
  4344  0008DA                     
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4347  0008DA  0E3E               	movlw	low _dbuf
  4348  0008DC  25BB               	addwf	efgtoa@n& (0+255),w,b
  4349  0008DE  6ED9               	movwf	fsr2l,c
  4350  0008E0  0E01               	movlw	high _dbuf
  4351  0008E2  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4352  0008E4  6EDA               	movwf	fsr2h,c
  4353  0008E6  51A1               	movf	efgtoa@d& (0+255),w,b
  4354  0008E8  0F30               	addlw	48
  4355  0008EA  6EDF               	movwf	indf2,c
  4356  0008EC                     
  4357                           ; BSR set to: 0
  4358  0008EC  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4359  0008EE  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4360  0008F0                     
  4361                           ; BSR set to: 0
  4362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4363  0008F0  07A8               	decf	efgtoa@w& (0+255),f,b
  4364  0008F2  A0D8               	btfss	status,0,c
  4365  0008F4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4366  0008F6                     l8640:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4370  0008F6  C0AB  F044         	movff	efgtoa@h,___flsub@b
  4371  0008FA  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  4372  0008FE  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  4373  000902  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  4374  000906  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  4375  00090A  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  4376  00090E  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  4377  000912  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  4378  000916  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  4379  00091A  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  4380  00091E  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  4381  000922  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  4382  000926  ECDD  F00A         	call	___flmul	;wreg free
  4383  00092A  C01B  F048         	movff	?___flmul,___flsub@a
  4384  00092E  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  4385  000932  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  4386  000936  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  4387  00093A  ECCF  F021         	call	___flsub	;wreg free
  4388  00093E  C044  F0AB         	movff	?___flsub,efgtoa@h
  4389  000942  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  4390  000946  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  4391  00094A  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  4392  00094E                     
  4393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4394  00094E  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  4395  000952  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  4396  000956  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  4397  00095A  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  4398  00095E  0E00               	movlw	0
  4399  000960  6E48               	movwf	___fldiv@a^0,c
  4400  000962  0E00               	movlw	0
  4401  000964  6E49               	movwf	(___fldiv@a+1)^0,c
  4402  000966  0E20               	movlw	32
  4403  000968  6E4A               	movwf	(___fldiv@a+2)^0,c
  4404  00096A  0E41               	movlw	65
  4405  00096C  6E4B               	movwf	(___fldiv@a+3)^0,c
  4406  00096E  ECCB  F00E         	call	___fldiv	;wreg free
  4407  000972  C044  F0BD         	movff	?___fldiv,efgtoa@u
  4408  000976  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  4409  00097A  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  4410  00097E  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  4411  000982                     
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4413  000982  0100               	movlb	0	; () banked
  4414  000984  079F               	decf	efgtoa@ne& (0+255),f,b
  4415  000986  A0D8               	btfss	status,0,c
  4416  000988  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  4417  00098A                     
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4420  00098A  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  4421  00098C  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  4422  00098E                     l8648:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4426  00098E  519D               	movf	efgtoa@m& (0+255),w,b
  4427  000990  5DB3               	subwf	efgtoa@i& (0+255),w,b
  4428  000992  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4429  000994  0A80               	xorlw	128
  4430  000996  6F84               	movwf	??_efgtoa& (0+255),b
  4431  000998  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  4432  00099A  0A80               	xorlw	128
  4433  00099C  5984               	subwfb	??_efgtoa& (0+255),w,b
  4434  00099E  B0D8               	btfsc	status,0,c
  4435  0009A0  EFD4  F004         	goto	u10111
  4436  0009A4  EFD6  F004         	goto	u10110
  4437  0009A8                     u10111:
  4438  0009A8  EFE4  F004         	goto	l8652
  4439  0009AC                     u10110:
  4440  0009AC                     
  4441                           ; BSR set to: 0
  4442  0009AC  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4443  0009AE  EFE2  F004         	goto	u10121
  4444  0009B2  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
  4445  0009B4  E109               	bnz	u10120
  4446  0009B6  0E4B               	movlw	75
  4447  0009B8  5DBB               	subwf	efgtoa@n& (0+255),w,b
  4448  0009BA  A0D8               	btfss	status,0,c
  4449  0009BC  EFE2  F004         	goto	u10121
  4450  0009C0  EFE4  F004         	goto	u10120
  4451  0009C4                     u10121:
  4452  0009C4  EFD9  F003         	goto	l8600
  4453  0009C8                     u10120:
  4454  0009C8                     l8652:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4458  0009C8  519B               	movf	efgtoa@pp& (0+255),w,b
  4459  0009CA  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4460  0009CC  A4D8               	btfss	status,2,c
  4461  0009CE  EFEB  F004         	goto	u10131
  4462  0009D2  EFED  F004         	goto	u10130
  4463  0009D6                     u10131:
  4464  0009D6  EFFE  F004         	goto	l8660
  4465  0009DA                     u10130:
  4466  0009DA                     
  4467                           ; BSR set to: 0
  4468  0009DA  A856               	btfss	_flags^0,4,c
  4469  0009DC  EFF2  F004         	goto	u10141
  4470  0009E0  EFF4  F004         	goto	u10140
  4471  0009E4                     u10141:
  4472  0009E4  EFFE  F004         	goto	l8660
  4473  0009E8                     u10140:
  4474  0009E8                     
  4475                           ; BSR set to: 0
  4476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4477  0009E8  0E3E               	movlw	low _dbuf
  4478  0009EA  25BB               	addwf	efgtoa@n& (0+255),w,b
  4479  0009EC  6ED9               	movwf	fsr2l,c
  4480  0009EE  0E01               	movlw	high _dbuf
  4481  0009F0  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4482  0009F2  6EDA               	movwf	fsr2h,c
  4483  0009F4  0E2E               	movlw	46
  4484  0009F6  6EDF               	movwf	indf2,c
  4485  0009F8                     
  4486                           ; BSR set to: 0
  4487  0009F8  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4488  0009FA  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4489  0009FC                     l8660:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4493  0009FC  0E3E               	movlw	low _dbuf
  4494  0009FE  25BB               	addwf	efgtoa@n& (0+255),w,b
  4495  000A00  6ED9               	movwf	fsr2l,c
  4496  000A02  0E01               	movlw	high _dbuf
  4497  000A04  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4498  000A06  6EDA               	movwf	fsr2h,c
  4499  000A08  0E00               	movlw	0
  4500  000A0A  6EDF               	movwf	indf2,c
  4501  000A0C                     
  4502                           ; BSR set to: 0
  4503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4504  000A0C  0E65               	movlw	101
  4505  000A0E  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  4506  000A10  A4D8               	btfss	status,2,c
  4507  000A12  EF0D  F005         	goto	u10151
  4508  000A16  EF0F  F005         	goto	u10150
  4509  000A1A                     u10151:
  4510  000A1A  EFBC  F000         	goto	l8472
  4511  000A1E                     u10150:
  4512  000A1E                     
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4515  000A1E  0E00               	movlw	0
  4516  000A20  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4517  000A22  0E4F               	movlw	79
  4518  000A24  6FB3               	movwf	efgtoa@i& (0+255),b
  4519  000A26                     
  4520                           ; BSR set to: 0
  4521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4522  000A26  0E3E               	movlw	low _dbuf
  4523  000A28  25B3               	addwf	efgtoa@i& (0+255),w,b
  4524  000A2A  6ED9               	movwf	fsr2l,c
  4525  000A2C  0E01               	movlw	high _dbuf
  4526  000A2E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4527  000A30  6EDA               	movwf	fsr2h,c
  4528  000A32  0E00               	movlw	0
  4529  000A34  6EDF               	movwf	indf2,c
  4530  000A36                     
  4531                           ; BSR set to: 0
  4532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4533  000A36  0E00               	movlw	0
  4534  000A38  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4535  000A3A  0E00               	movlw	0
  4536  000A3C  6FA3               	movwf	efgtoa@sign& (0+255),b
  4537  000A3E                     
  4538                           ; BSR set to: 0
  4539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4540  000A3E  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4541  000A40  EF26  F005         	goto	u10160
  4542  000A44  EF24  F005         	goto	u10161
  4543  000A48                     u10161:
  4544  000A48  EF2E  F005         	goto	l8676
  4545  000A4C                     u10160:
  4546  000A4C                     
  4547                           ; BSR set to: 0
  4548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4549  000A4C  0E00               	movlw	0
  4550  000A4E  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4551  000A50  0E01               	movlw	1
  4552  000A52  6FA3               	movwf	efgtoa@sign& (0+255),b
  4553  000A54                     
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4556  000A54  6DB9               	negf	efgtoa@e& (0+255),b
  4557  000A56  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
  4558  000A58  B0D8               	btfsc	status,0,c
  4559  000A5A  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  4560  000A5C                     l8676:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4564  000A5C  0E00               	movlw	0
  4565  000A5E  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  4566  000A60  0E02               	movlw	2
  4567  000A62  6FA5               	movwf	efgtoa@p& (0+255),b
  4568                           
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4570  000A64  EF5F  F005         	goto	l8688
  4571  000A68                     l8678:
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4575  000A68  07B3               	decf	efgtoa@i& (0+255),f,b
  4576  000A6A  A0D8               	btfss	status,0,c
  4577  000A6C  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4578  000A6E                     
  4579                           ; BSR set to: 0
  4580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4581  000A6E  0E3E               	movlw	low _dbuf
  4582  000A70  25B3               	addwf	efgtoa@i& (0+255),w,b
  4583  000A72  6ED9               	movwf	fsr2l,c
  4584  000A74  0E01               	movlw	high _dbuf
  4585  000A76  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4586  000A78  6EDA               	movwf	fsr2h,c
  4587  000A7A  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
  4588  000A7E  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  4589  000A82  0E00               	movlw	0
  4590  000A84  6E09               	movwf	(___awmod@divisor+1)^0,c
  4591  000A86  0E0A               	movlw	10
  4592  000A88  6E08               	movwf	___awmod@divisor^0,c
  4593  000A8A  EC8A  F01D         	call	___awmod	;wreg free
  4594  000A8E  5006               	movf	?___awmod^0,w,c
  4595  000A90  0F30               	addlw	48
  4596  000A92  6EDF               	movwf	indf2,c
  4597  000A94                     
  4598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4599  000A94  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
  4600  000A98  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  4601  000A9C  0E00               	movlw	0
  4602  000A9E  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4603  000AA0  0E0A               	movlw	10
  4604  000AA2  6E08               	movwf	___awdiv@divisor^0,c
  4605  000AA4  EC6F  F01C         	call	___awdiv	;wreg free
  4606  000AA8  C006  F0B9         	movff	?___awdiv,efgtoa@e
  4607  000AAC  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
  4608  000AB0                     
  4609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4610  000AB0  0100               	movlb	0	; () banked
  4611  000AB2  07A5               	decf	efgtoa@p& (0+255),f,b
  4612  000AB4  A0D8               	btfss	status,0,c
  4613  000AB6  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
  4614  000AB8                     
  4615                           ; BSR set to: 0
  4616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4617  000AB8  07A8               	decf	efgtoa@w& (0+255),f,b
  4618  000ABA  A0D8               	btfss	status,0,c
  4619  000ABC  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4620  000ABE                     l8688:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4624  000ABE  51B9               	movf	efgtoa@e& (0+255),w,b
  4625  000AC0  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4626  000AC2  A4D8               	btfss	status,2,c
  4627  000AC4  EF66  F005         	goto	u10171
  4628  000AC8  EF68  F005         	goto	u10170
  4629  000ACC                     u10171:
  4630  000ACC  EF34  F005         	goto	l8678
  4631  000AD0                     u10170:
  4632  000AD0                     
  4633                           ; BSR set to: 0
  4634  000AD0  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4635  000AD2  EF75  F005         	goto	u10180
  4636  000AD6  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
  4637  000AD8  E106               	bnz	u10181
  4638  000ADA  05A5               	decf	efgtoa@p& (0+255),w,b
  4639  000ADC  B0D8               	btfsc	status,0,c
  4640  000ADE  EF73  F005         	goto	u10181
  4641  000AE2  EF75  F005         	goto	u10180
  4642  000AE6                     u10181:
  4643  000AE6  EF34  F005         	goto	l8678
  4644  000AEA                     u10180:
  4645  000AEA                     
  4646                           ; BSR set to: 0
  4647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4648  000AEA  07B3               	decf	efgtoa@i& (0+255),f,b
  4649  000AEC  A0D8               	btfss	status,0,c
  4650  000AEE  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4651  000AF0                     
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4654  000AF0  51A3               	movf	efgtoa@sign& (0+255),w,b
  4655  000AF2  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4656  000AF4  A4D8               	btfss	status,2,c
  4657  000AF6  EF7F  F005         	goto	u10191
  4658  000AFA  EF81  F005         	goto	u10190
  4659  000AFE                     u10191:
  4660  000AFE  EF87  F005         	goto	l8698
  4661  000B02                     u10190:
  4662  000B02                     
  4663                           ; BSR set to: 0
  4664  000B02  0E00               	movlw	0
  4665  000B04  6F94               	movwf	(_efgtoa$916+1)& (0+255),b
  4666  000B06  0E2B               	movlw	43
  4667  000B08  6F93               	movwf	_efgtoa$916& (0+255),b
  4668  000B0A  EF8B  F005         	goto	l8700
  4669  000B0E                     l8698:
  4670                           
  4671                           ; BSR set to: 0
  4672  000B0E  0E00               	movlw	0
  4673  000B10  6F94               	movwf	(_efgtoa$916+1)& (0+255),b
  4674  000B12  0E2D               	movlw	45
  4675  000B14  6F93               	movwf	_efgtoa$916& (0+255),b
  4676  000B16                     l8700:
  4677                           
  4678                           ; BSR set to: 0
  4679  000B16  0E3E               	movlw	low _dbuf
  4680  000B18  25B3               	addwf	efgtoa@i& (0+255),w,b
  4681  000B1A  6ED9               	movwf	fsr2l,c
  4682  000B1C  0E01               	movlw	high _dbuf
  4683  000B1E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4684  000B20  6EDA               	movwf	fsr2h,c
  4685  000B22  C093  FFDF         	movff	_efgtoa$916,indf2
  4686  000B26                     
  4687                           ; BSR set to: 0
  4688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4689  000B26  07A8               	decf	efgtoa@w& (0+255),f,b
  4690  000B28  A0D8               	btfss	status,0,c
  4691  000B2A  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4692  000B2C                     
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4695  000B2C  07B3               	decf	efgtoa@i& (0+255),f,b
  4696  000B2E  A0D8               	btfss	status,0,c
  4697  000B30  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4698  000B32                     
  4699                           ; BSR set to: 0
  4700  000B32  0EBF               	movlw	191
  4701  000B34  6F84               	movwf	??_efgtoa& (0+255),b
  4702  000B36  0EFF               	movlw	255
  4703  000B38  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4704  000B3A  5183               	movf	efgtoa@c& (0+255),w,b
  4705  000B3C  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4706  000B3E  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4707  000B40  5184               	movf	??_efgtoa& (0+255),w,b
  4708  000B42  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4709  000B44  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4710  000B46  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4711  000B48  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4712  000B4A  E10A               	bnz	u10200
  4713  000B4C  0E1A               	movlw	26
  4714  000B4E  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4715  000B50  A0D8               	btfss	status,0,c
  4716  000B52  EFAD  F005         	goto	u10201
  4717  000B56  EFB0  F005         	goto	u10200
  4718  000B5A                     u10201:
  4719  000B5A  0E01               	movlw	1
  4720  000B5C  EFB1  F005         	goto	u10210
  4721  000B60                     u10200:
  4722  000B60  0E00               	movlw	0
  4723  000B62                     u10210:
  4724  000B62  6F97               	movwf	_efgtoa$918& (0+255),b
  4725  000B64  6B98               	clrf	(_efgtoa$918+1)& (0+255),b
  4726  000B66                     
  4727                           ; BSR set to: 0
  4728  000B66  5197               	movf	_efgtoa$918& (0+255),w,b
  4729  000B68  1198               	iorwf	(_efgtoa$918+1)& (0+255),w,b
  4730  000B6A  A4D8               	btfss	status,2,c
  4731  000B6C  EFBA  F005         	goto	u10221
  4732  000B70  EFBC  F005         	goto	u10220
  4733  000B74                     u10221:
  4734  000B74  EFC2  F005         	goto	l8714
  4735  000B78                     u10220:
  4736  000B78                     
  4737                           ; BSR set to: 0
  4738  000B78  0E00               	movlw	0
  4739  000B7A  6F96               	movwf	(_efgtoa$917+1)& (0+255),b
  4740  000B7C  0E65               	movlw	101
  4741  000B7E  6F95               	movwf	_efgtoa$917& (0+255),b
  4742  000B80  EFC6  F005         	goto	l8716
  4743  000B84                     l8714:
  4744                           
  4745                           ; BSR set to: 0
  4746  000B84  0E00               	movlw	0
  4747  000B86  6F96               	movwf	(_efgtoa$917+1)& (0+255),b
  4748  000B88  0E45               	movlw	69
  4749  000B8A  6F95               	movwf	_efgtoa$917& (0+255),b
  4750  000B8C                     l8716:
  4751                           
  4752                           ; BSR set to: 0
  4753  000B8C  0E3E               	movlw	low _dbuf
  4754  000B8E  25B3               	addwf	efgtoa@i& (0+255),w,b
  4755  000B90  6ED9               	movwf	fsr2l,c
  4756  000B92  0E01               	movlw	high _dbuf
  4757  000B94  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4758  000B96  6EDA               	movwf	fsr2h,c
  4759  000B98  C095  FFDF         	movff	_efgtoa$917,indf2
  4760  000B9C                     
  4761                           ; BSR set to: 0
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4763  000B9C  07A8               	decf	efgtoa@w& (0+255),f,b
  4764  000B9E  A0D8               	btfss	status,0,c
  4765  000BA0  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4766  000BA2                     
  4767                           ; BSR set to: 0
  4768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4769  000BA2  0E3E               	movlw	low _dbuf
  4770  000BA4  25BB               	addwf	efgtoa@n& (0+255),w,b
  4771  000BA6  6E06               	movwf	strcpy@dest^0,c
  4772  000BA8  0E01               	movlw	high _dbuf
  4773  000BAA  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4774  000BAC  6E07               	movwf	(strcpy@dest+1)^0,c
  4775  000BAE  0E3E               	movlw	low _dbuf
  4776  000BB0  25B3               	addwf	efgtoa@i& (0+255),w,b
  4777  000BB2  6E08               	movwf	strcpy@src^0,c
  4778  000BB4  0E01               	movlw	high _dbuf
  4779  000BB6  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4780  000BB8  6E09               	movwf	(strcpy@src+1)^0,c
  4781  000BBA  EC83  F020         	call	_strcpy	;wreg free
  4782  000BBE  EFBC  F000         	goto	l8472
  4783  000BC2                     l782:
  4784  000BC2  0012               	return		;funcret
  4785  000BC4                     __end_of_efgtoa:
  4786                           	opt callstack 0
  4787                           
  4788 ;; *************** function _tolower *****************
  4789 ;; Defined at:
  4790 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  c               2   11[COMRAM] int 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  2   11[COMRAM] int 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4804 ;;      Params:         2       0       0       0       0       0       0       0       0
  4805 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4806 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4807 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4808 ;;Total ram usage:        8 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    3
  4811 ;; This function calls:
  4812 ;;		_isupper
  4813 ;; This function is called by:
  4814 ;;		_efgtoa
  4815 ;;		_vfpfcnvrt
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text7
  4820  004048                     __ptext7:
  4821                           	opt callstack 0
  4822  004048                     _tolower:
  4823                           	opt callstack 23
  4824  004048  0EBF               	movlw	191
  4825  00404A  6E0E               	movwf	??_tolower^0,c
  4826  00404C  0EFF               	movlw	255
  4827  00404E  6E0F               	movwf	(??_tolower+1)^0,c
  4828  004050  C00C  F010         	movff	tolower@c,??_tolower+2
  4829  004054  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4830  004058  500E               	movf	??_tolower^0,w,c
  4831  00405A  2610               	addwf	(??_tolower+2)^0,f,c
  4832  00405C  500F               	movf	(??_tolower+1)^0,w,c
  4833  00405E  2211               	addwfc	(??_tolower+3)^0,f,c
  4834  004060  5011               	movf	(??_tolower+3)^0,w,c
  4835  004062  E10A               	bnz	u8430
  4836  004064  0E1A               	movlw	26
  4837  004066  5C10               	subwf	(??_tolower+2)^0,w,c
  4838  004068  A0D8               	btfss	status,0,c
  4839  00406A  EF39  F020         	goto	u8431
  4840  00406E  EF3C  F020         	goto	u8430
  4841  004072                     u8431:
  4842  004072  0E01               	movlw	1
  4843  004074  EF3D  F020         	goto	u8440
  4844  004078                     u8430:
  4845  004078  0E00               	movlw	0
  4846  00407A                     u8440:
  4847  00407A  6E12               	movwf	_tolower$1540^0,c
  4848  00407C  6A13               	clrf	(_tolower$1540+1)^0,c
  4849  00407E  5012               	movf	_tolower$1540^0,w,c
  4850  004080  1013               	iorwf	(_tolower$1540+1)^0,w,c
  4851  004082  B4D8               	btfsc	status,2,c
  4852  004084  EF46  F020         	goto	u8451
  4853  004088  EF48  F020         	goto	u8450
  4854  00408C                     u8451:
  4855  00408C  EF4F  F020         	goto	l1716
  4856  004090                     u8450:
  4857  004090  0E20               	movlw	32
  4858  004092  100C               	iorwf	tolower@c^0,w,c
  4859  004094  6E0C               	movwf	?_tolower^0,c
  4860  004096  500D               	movf	(tolower@c+1)^0,w,c
  4861  004098  6E0D               	movwf	(?_tolower+1)^0,c
  4862  00409A  EF53  F020         	goto	l1721
  4863  00409E                     l1716:
  4864  00409E  C00C  F00C         	movff	tolower@c,?_tolower
  4865  0040A2  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  4866  0040A6                     l1721:
  4867  0040A6  0012               	return		;funcret
  4868  0040A8                     __end_of_tolower:
  4869                           	opt callstack 0
  4870                           
  4871 ;; *************** function _isupper *****************
  4872 ;; Defined at:
  4873 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  c               2    5[COMRAM] int 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2    5[COMRAM] int 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4887 ;;      Params:         2       0       0       0       0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4889 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4890 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4891 ;;Total ram usage:        6 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    2
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_efgtoa
  4898 ;;		_vfpfcnvrt
  4899 ;;		_tolower
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text8
  4904  004468                     __ptext8:
  4905                           	opt callstack 0
  4906  004468                     _isupper:
  4907                           	opt callstack 23
  4908  004468  0EBF               	movlw	191
  4909  00446A  6E08               	movwf	??_isupper^0,c
  4910  00446C  0EFF               	movlw	255
  4911  00446E  6E09               	movwf	(??_isupper+1)^0,c
  4912  004470  C006  F00A         	movff	isupper@c,??_isupper+2
  4913  004474  C007  F00B         	movff	isupper@c+1,??_isupper+3
  4914  004478  5008               	movf	??_isupper^0,w,c
  4915  00447A  260A               	addwf	(??_isupper+2)^0,f,c
  4916  00447C  5009               	movf	(??_isupper+1)^0,w,c
  4917  00447E  220B               	addwfc	(??_isupper+3)^0,f,c
  4918  004480  500B               	movf	(??_isupper+3)^0,w,c
  4919  004482  E10A               	bnz	u7800
  4920  004484  0E1A               	movlw	26
  4921  004486  5C0A               	subwf	(??_isupper+2)^0,w,c
  4922  004488  A0D8               	btfss	status,0,c
  4923  00448A  EF49  F022         	goto	u7801
  4924  00448E  EF4C  F022         	goto	u7800
  4925  004492                     u7801:
  4926  004492  0E01               	movlw	1
  4927  004494  EF4D  F022         	goto	u7810
  4928  004498                     u7800:
  4929  004498  0E00               	movlw	0
  4930  00449A                     u7810:
  4931  00449A  6E06               	movwf	?_isupper^0,c
  4932  00449C  6A07               	clrf	(?_isupper+1)^0,c
  4933  00449E  0012               	return		;funcret
  4934  0044A0                     __end_of_isupper:
  4935                           	opt callstack 0
  4936                           
  4937 ;; *************** function _strcpy *****************
  4938 ;; Defined at:
  4939 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4942 ;;		 -> dbuf(80), 
  4943 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4944 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  4945 ;;		 -> dbuf(80), 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  d               2   13[COMRAM] PTR unsigned char 
  4948 ;;		 -> dbuf(80), 
  4949 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4950 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  4951 ;;		 -> dbuf(80), 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  2    5[COMRAM] PTR unsigned char 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4961 ;;      Params:         4       0       0       0       0       0       0       0       0
  4962 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4963 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4964 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4965 ;;Total ram usage:       10 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    2
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_efgtoa
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text9
  4976  004106                     __ptext9:
  4977                           	opt callstack 0
  4978  004106                     _strcpy:
  4979                           	opt callstack 23
  4980  004106  C008  F00C         	movff	strcpy@src,strcpy@s
  4981  00410A  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  4982  00410E  C006  F00E         	movff	strcpy@dest,strcpy@d
  4983  004112  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  4984  004116                     l7716:
  4985  004116  500C               	movf	strcpy@s^0,w,c
  4986  004118  6E0A               	movwf	??_strcpy^0,c
  4987  00411A  500D               	movf	(strcpy@s+1)^0,w,c
  4988  00411C  6E0B               	movwf	(??_strcpy+1)^0,c
  4989  00411E  4A0C               	infsnz	strcpy@s^0,f,c
  4990  004120  2A0D               	incf	(strcpy@s+1)^0,f,c
  4991  004122  C00A  FFF6         	movff	??_strcpy,tblptrl
  4992  004126  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  4993  00412A  6AF8               	clrf	tblptru,c
  4994  00412C  C00E  FFD9         	movff	strcpy@d,fsr2l
  4995  004130  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  4996  004134  4A0E               	infsnz	strcpy@d^0,f,c
  4997  004136  2A0F               	incf	(strcpy@d+1)^0,f,c
  4998  004138  0E07               	movlw	(high __ramtop+-1)
  4999  00413A  64F7               	cpfsgt	tblptrh,c
  5000  00413C  D003               	bra	u8417
  5001  00413E  0008               	tblrd		*
  5002  004140  50F5               	movf	tablat,w,c
  5003  004142  D005               	bra	u8410
  5004  004144                     u8417:
  5005  004144  CFF6 FFE9          	movff	tblptrl,fsr0l
  5006  004148  CFF7 FFEA          	movff	tblptrh,fsr0h
  5007  00414C  50EF               	movf	indf0,w,c
  5008  00414E                     u8410:
  5009  00414E  6EDF               	movwf	indf2,c
  5010  004150  50DF               	movf	indf2,w,c
  5011  004152  A4D8               	btfss	status,2,c
  5012  004154  EFAE  F020         	goto	u8421
  5013  004158  EFB0  F020         	goto	u8420
  5014  00415C                     u8421:
  5015  00415C  EF8B  F020         	goto	l7716
  5016  004160                     u8420:
  5017  004160  0012               	return		;funcret
  5018  004162                     __end_of_strcpy:
  5019                           	opt callstack 0
  5020                           
  5021 ;; *************** function _floorf *****************
  5022 ;; Defined at:
  5023 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  x               4   79[COMRAM] float 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  u               4   25[BANK0 ] struct .
  5028 ;;  m               4   19[BANK0 ] unsigned long 
  5029 ;;  e               2   23[BANK0 ] int 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  4   79[COMRAM] float 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5039 ;;      Params:         4       0       0       0       0       0       0       0       0
  5040 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5041 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5042 ;;      Totals:         4      16       0       0       0       0       0       0       0
  5043 ;;Total ram usage:       20 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    2
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_efgtoa
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text10
  5054  002648                     __ptext10:
  5055                           	opt callstack 0
  5056  002648                     _floorf:
  5057                           	opt callstack 23
  5058  002648  C104  F079         	movff	floorf@F524,floorf@u
  5059  00264C  C105  F07A         	movff	floorf@F524+1,floorf@u+1
  5060  002650  C106  F07B         	movff	floorf@F524+2,floorf@u+2
  5061  002654  C107  F07C         	movff	floorf@F524+3,floorf@u+3
  5062  002658  C050  F079         	movff	floorf@x,floorf@u
  5063  00265C  C051  F07A         	movff	floorf@x+1,floorf@u+1
  5064  002660  C052  F07B         	movff	floorf@x+2,floorf@u+2
  5065  002664  C053  F07C         	movff	floorf@x+3,floorf@u+3
  5066  002668  0E81               	movlw	129
  5067  00266A  0100               	movlb	0	; () banked
  5068  00266C  6F6D               	movwf	??_floorf& (0+255),b
  5069  00266E  0EFF               	movlw	255
  5070  002670  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5071  002672  C079  F06F         	movff	floorf@u,??_floorf+2
  5072  002676  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5073  00267A  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5074  00267E  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5075  002682  0E18               	movlw	24
  5076  002684  EF49  F013         	goto	u8460
  5077  002688                     u8465:
  5078  002688  90D8               	bcf	status,0,c
  5079  00268A  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5080  00268C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5081  00268E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5082  002690  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5083  002692                     u8460:
  5084  002692  2EE8               	decfsz	wreg,f,c
  5085  002694  EF44  F013         	goto	u8465
  5086  002698  516F               	movf	(??_floorf+2)& (0+255),w,b
  5087  00269A  256D               	addwf	??_floorf& (0+255),w,b
  5088  00269C  6F77               	movwf	floorf@e& (0+255),b
  5089  00269E  0E00               	movlw	0
  5090  0026A0  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5091  0026A2  6F78               	movwf	(floorf@e+1)& (0+255),b
  5092  0026A4  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5093  0026A6  EF5E  F013         	goto	u8471
  5094  0026AA  5178               	movf	(floorf@e+1)& (0+255),w,b
  5095  0026AC  E109               	bnz	u8470
  5096  0026AE  0E17               	movlw	23
  5097  0026B0  5D77               	subwf	floorf@e& (0+255),w,b
  5098  0026B2  A0D8               	btfss	status,0,c
  5099  0026B4  EF5E  F013         	goto	u8471
  5100  0026B8  EF60  F013         	goto	u8470
  5101  0026BC                     u8471:
  5102  0026BC  EF6A  F013         	goto	l7734
  5103  0026C0                     u8470:
  5104  0026C0                     l7732:
  5105                           
  5106                           ; BSR set to: 0
  5107  0026C0  C050  F050         	movff	floorf@x,?_floorf
  5108  0026C4  C051  F051         	movff	floorf@x+1,?_floorf+1
  5109  0026C8  C052  F052         	movff	floorf@x+2,?_floorf+2
  5110  0026CC  C053  F053         	movff	floorf@x+3,?_floorf+3
  5111  0026D0  EF2E  F014         	goto	l1618
  5112  0026D4                     l7734:
  5113                           
  5114                           ; BSR set to: 0
  5115  0026D4  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5116  0026D6  EF6F  F013         	goto	u8481
  5117  0026DA  EF71  F013         	goto	u8480
  5118  0026DE                     u8481:
  5119  0026DE  EFE2  F013         	goto	l7744
  5120  0026E2                     u8480:
  5121  0026E2                     
  5122                           ; BSR set to: 0
  5123  0026E2  C077  F06D         	movff	floorf@e,??_floorf
  5124  0026E6  0EFF               	movlw	255
  5125  0026E8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5126  0026EA  0EFF               	movlw	255
  5127  0026EC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5128  0026EE  0E7F               	movlw	127
  5129  0026F0  6F70               	movwf	(??_floorf+3)& (0+255),b
  5130  0026F2  0E00               	movlw	0
  5131  0026F4  6F71               	movwf	(??_floorf+4)& (0+255),b
  5132  0026F6                     u8495:
  5133  0026F6  676D               	tstfsz	??_floorf& (0+255),b
  5134  0026F8  EF80  F013         	goto	u8496
  5135  0026FC  EF88  F013         	goto	u8497
  5136  002700                     u8496:
  5137  002700  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5138  002702  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5139  002704  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5140  002706  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5141  002708  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5142  00270A  2F6D               	decfsz	??_floorf& (0+255),f,b
  5143  00270C  EF7B  F013         	goto	u8495
  5144  002710                     u8497:
  5145  002710  C06E  F073         	movff	??_floorf+1,floorf@m
  5146  002714  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5147  002718  C070  F075         	movff	??_floorf+3,floorf@m+2
  5148  00271C  C071  F076         	movff	??_floorf+4,floorf@m+3
  5149  002720  0100               	movlb	0	; () banked
  5150  002722  5173               	movf	floorf@m& (0+255),w,b
  5151  002724  1579               	andwf	floorf@u& (0+255),w,b
  5152  002726  6F6D               	movwf	??_floorf& (0+255),b
  5153  002728  5174               	movf	(floorf@m+1)& (0+255),w,b
  5154  00272A  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5155  00272C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5156  00272E  5175               	movf	(floorf@m+2)& (0+255),w,b
  5157  002730  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5158  002732  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5159  002734  5176               	movf	(floorf@m+3)& (0+255),w,b
  5160  002736  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5161  002738  6F70               	movwf	(??_floorf+3)& (0+255),b
  5162  00273A  516D               	movf	??_floorf& (0+255),w,b
  5163  00273C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5164  00273E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5165  002740  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5166  002742  A4D8               	btfss	status,2,c
  5167  002744  EFA6  F013         	goto	u8501
  5168  002748  EFA8  F013         	goto	u8500
  5169  00274C                     u8501:
  5170  00274C  EFAA  F013         	goto	l7740
  5171  002750                     u8500:
  5172  002750  EF60  F013         	goto	l7732
  5173  002754                     l7740:
  5174                           
  5175                           ; BSR set to: 0
  5176  002754  C079  F06D         	movff	floorf@u,??_floorf
  5177  002758  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5178  00275C  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5179  002760  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5180  002764  0E20               	movlw	32
  5181  002766  EFBA  F013         	goto	u8510
  5182  00276A                     u8515:
  5183  00276A  90D8               	bcf	status,0,c
  5184  00276C  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5185  00276E  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5186  002770  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5187  002772  336D               	rrcf	??_floorf& (0+255),f,b
  5188  002774                     u8510:
  5189  002774  2EE8               	decfsz	wreg,f,c
  5190  002776  EFB5  F013         	goto	u8515
  5191  00277A  516D               	movf	??_floorf& (0+255),w,b
  5192  00277C  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5193  00277E  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5194  002780  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5195  002782  B4D8               	btfsc	status,2,c
  5196  002784  EFC6  F013         	goto	u8521
  5197  002788  EFC8  F013         	goto	u8520
  5198  00278C                     u8521:
  5199  00278C  EFD0  F013         	goto	l1621
  5200  002790                     u8520:
  5201  002790                     
  5202                           ; BSR set to: 0
  5203  002790  5173               	movf	floorf@m& (0+255),w,b
  5204  002792  2779               	addwf	floorf@u& (0+255),f,b
  5205  002794  5174               	movf	(floorf@m+1)& (0+255),w,b
  5206  002796  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  5207  002798  5175               	movf	(floorf@m+2)& (0+255),w,b
  5208  00279A  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  5209  00279C  5176               	movf	(floorf@m+3)& (0+255),w,b
  5210  00279E  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  5211  0027A0                     l1621:
  5212                           
  5213                           ; BSR set to: 0
  5214  0027A0  1D73               	comf	floorf@m& (0+255),w,b
  5215  0027A2  6F6D               	movwf	??_floorf& (0+255),b
  5216  0027A4  1D74               	comf	(floorf@m+1)& (0+255),w,b
  5217  0027A6  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5218  0027A8  1D75               	comf	(floorf@m+2)& (0+255),w,b
  5219  0027AA  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5220  0027AC  1D76               	comf	(floorf@m+3)& (0+255),w,b
  5221  0027AE  6F70               	movwf	(??_floorf+3)& (0+255),b
  5222  0027B0  516D               	movf	??_floorf& (0+255),w,b
  5223  0027B2  1779               	andwf	floorf@u& (0+255),f,b
  5224  0027B4  516E               	movf	(??_floorf+1)& (0+255),w,b
  5225  0027B6  177A               	andwf	(floorf@u+1)& (0+255),f,b
  5226  0027B8  516F               	movf	(??_floorf+2)& (0+255),w,b
  5227  0027BA  177B               	andwf	(floorf@u+2)& (0+255),f,b
  5228  0027BC  5170               	movf	(??_floorf+3)& (0+255),w,b
  5229  0027BE  177C               	andwf	(floorf@u+3)& (0+255),f,b
  5230  0027C0  EF26  F014         	goto	l7752
  5231  0027C4                     l7744:
  5232                           
  5233                           ; BSR set to: 0
  5234  0027C4  C079  F06D         	movff	floorf@u,??_floorf
  5235  0027C8  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5236  0027CC  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5237  0027D0  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5238  0027D4  0E20               	movlw	32
  5239  0027D6  EFF2  F013         	goto	u8530
  5240  0027DA                     u8535:
  5241  0027DA  90D8               	bcf	status,0,c
  5242  0027DC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5243  0027DE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5244  0027E0  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5245  0027E2  336D               	rrcf	??_floorf& (0+255),f,b
  5246  0027E4                     u8530:
  5247  0027E4  2EE8               	decfsz	wreg,f,c
  5248  0027E6  EFED  F013         	goto	u8535
  5249  0027EA  516D               	movf	??_floorf& (0+255),w,b
  5250  0027EC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5251  0027EE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5252  0027F0  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5253  0027F2  A4D8               	btfss	status,2,c
  5254  0027F4  EFFE  F013         	goto	u8541
  5255  0027F8  EF00  F014         	goto	u8540
  5256  0027FC                     u8541:
  5257  0027FC  EF0A  F014         	goto	l7748
  5258  002800                     u8540:
  5259  002800                     
  5260                           ; BSR set to: 0
  5261  002800  0E00               	movlw	0
  5262  002802  6F79               	movwf	floorf@u& (0+255),b
  5263  002804  0E00               	movlw	0
  5264  002806  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5265  002808  0E00               	movlw	0
  5266  00280A  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5267  00280C  0E00               	movlw	0
  5268  00280E  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5269  002810  EF26  F014         	goto	l7752
  5270  002814                     l7748:
  5271                           
  5272                           ; BSR set to: 0
  5273  002814  90D8               	bcf	status,0,c
  5274  002816  3579               	rlcf	floorf@u& (0+255),w,b
  5275  002818  6F6D               	movwf	??_floorf& (0+255),b
  5276  00281A  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  5277  00281C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5278  00281E  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  5279  002820  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5280  002822  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  5281  002824  6F70               	movwf	(??_floorf+3)& (0+255),b
  5282  002826  516D               	movf	??_floorf& (0+255),w,b
  5283  002828  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5284  00282A  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5285  00282C  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5286  00282E  B4D8               	btfsc	status,2,c
  5287  002830  EF1C  F014         	goto	u8551
  5288  002834  EF1E  F014         	goto	u8550
  5289  002838                     u8551:
  5290  002838  EF26  F014         	goto	l7752
  5291  00283C                     u8550:
  5292  00283C                     
  5293                           ; BSR set to: 0
  5294  00283C  0E00               	movlw	0
  5295  00283E  6F79               	movwf	floorf@u& (0+255),b
  5296  002840  0E00               	movlw	0
  5297  002842  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5298  002844  0E80               	movlw	128
  5299  002846  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5300  002848  0EBF               	movlw	191
  5301  00284A  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5302  00284C                     l7752:
  5303                           
  5304                           ; BSR set to: 0
  5305  00284C  C079  F050         	movff	floorf@u,?_floorf
  5306  002850  C07A  F051         	movff	floorf@u+1,?_floorf+1
  5307  002854  C07B  F052         	movff	floorf@u+2,?_floorf+2
  5308  002858  C07C  F053         	movff	floorf@u+3,?_floorf+3
  5309  00285C                     l1618:
  5310                           
  5311                           ; BSR set to: 0
  5312  00285C  0012               	return		;funcret
  5313  00285E                     __end_of_floorf:
  5314                           	opt callstack 0
  5315                           
  5316 ;; *************** function ___fpclassifyf *****************
  5317 ;; Defined at:
  5318 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  x               4    5[COMRAM] float 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  u               4   15[COMRAM] struct .
  5323 ;;  e               2   13[COMRAM] int 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  2    5[COMRAM] int 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5333 ;;      Params:         4       0       0       0       0       0       0       0       0
  5334 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5335 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5336 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5337 ;;Total ram usage:       14 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    2
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_efgtoa
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text11
  5348  003640                     __ptext11:
  5349                           	opt callstack 0
  5350  003640                     ___fpclassifyf:
  5351                           	opt callstack 23
  5352  003640  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5353  003644  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5354  003648  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5355  00364C  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5356  003650  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5357  003654  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5358  003658  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5359  00365C  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5360  003660  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5361  003664  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5362  003668  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5363  00366C  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5364  003670  0E18               	movlw	24
  5365  003672  EF40  F01B         	goto	u8340
  5366  003676                     u8345:
  5367  003676  90D8               	bcf	status,0,c
  5368  003678  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5369  00367A  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5370  00367C  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5371  00367E  320A               	rrcf	??___fpclassifyf^0,f,c
  5372  003680                     u8340:
  5373  003680  2EE8               	decfsz	wreg,f,c
  5374  003682  EF3B  F01B         	goto	u8345
  5375  003686  500A               	movf	??___fpclassifyf^0,w,c
  5376  003688  6E0E               	movwf	___fpclassifyf@e^0,c
  5377  00368A  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5378  00368C  500E               	movf	___fpclassifyf@e^0,w,c
  5379  00368E  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5380  003690  A4D8               	btfss	status,2,c
  5381  003692  EF4D  F01B         	goto	u8351
  5382  003696  EF4F  F01B         	goto	u8350
  5383  00369A                     u8351:
  5384  00369A  EF6F  F01B         	goto	l7704
  5385  00369E                     u8350:
  5386  00369E  90D8               	bcf	status,0,c
  5387  0036A0  3410               	rlcf	___fpclassifyf@u^0,w,c
  5388  0036A2  6E0A               	movwf	??___fpclassifyf^0,c
  5389  0036A4  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5390  0036A6  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5391  0036A8  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5392  0036AA  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5393  0036AC  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5394  0036AE  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5395  0036B0  500A               	movf	??___fpclassifyf^0,w,c
  5396  0036B2  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5397  0036B4  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5398  0036B6  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5399  0036B8  A4D8               	btfss	status,2,c
  5400  0036BA  EF61  F01B         	goto	u8361
  5401  0036BE  EF63  F01B         	goto	u8360
  5402  0036C2                     u8361:
  5403  0036C2  EF69  F01B         	goto	l7700
  5404  0036C6                     u8360:
  5405  0036C6  0E00               	movlw	0
  5406  0036C8  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5407  0036CA  0E02               	movlw	2
  5408  0036CC  6E06               	movwf	?___fpclassifyf^0,c
  5409  0036CE  EF9E  F01B         	goto	l1573
  5410  0036D2                     l7700:
  5411  0036D2  0E00               	movlw	0
  5412  0036D4  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5413  0036D6  0E03               	movlw	3
  5414  0036D8  6E06               	movwf	?___fpclassifyf^0,c
  5415  0036DA  EF9E  F01B         	goto	l1573
  5416  0036DE                     l7704:
  5417  0036DE  280E               	incf	___fpclassifyf@e^0,w,c
  5418  0036E0  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5419  0036E2  A4D8               	btfss	status,2,c
  5420  0036E4  EF76  F01B         	goto	u8371
  5421  0036E8  EF78  F01B         	goto	u8370
  5422  0036EC                     u8371:
  5423  0036EC  EF9A  F01B         	goto	l7710
  5424  0036F0                     u8370:
  5425  0036F0  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5426  0036F4  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5427  0036F8  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5428  0036FC  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5429  003700  0E09               	movlw	9
  5430  003702                     u8385:
  5431  003702  90D8               	bcf	status,0,c
  5432  003704  360A               	rlcf	??___fpclassifyf^0,f,c
  5433  003706  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5434  003708  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5435  00370A  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5436  00370C  2EE8               	decfsz	wreg,f,c
  5437  00370E  EF81  F01B         	goto	u8385
  5438  003712  500A               	movf	??___fpclassifyf^0,w,c
  5439  003714  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5440  003716  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5441  003718  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5442  00371A  B4D8               	btfsc	status,2,c
  5443  00371C  EF92  F01B         	goto	u8391
  5444  003720  EF95  F01B         	goto	u8390
  5445  003724                     u8391:
  5446  003724  0E01               	movlw	1
  5447  003726  EF96  F01B         	goto	u8400
  5448  00372A                     u8390:
  5449  00372A  0E00               	movlw	0
  5450  00372C                     u8400:
  5451  00372C  6E06               	movwf	?___fpclassifyf^0,c
  5452  00372E  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5453  003730  EF9E  F01B         	goto	l1573
  5454  003734                     l7710:
  5455  003734  0E00               	movlw	0
  5456  003736  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5457  003738  0E04               	movlw	4
  5458  00373A  6E06               	movwf	?___fpclassifyf^0,c
  5459  00373C                     l1573:
  5460  00373C  0012               	return		;funcret
  5461  00373E                     __end_of___fpclassifyf:
  5462                           	opt callstack 0
  5463                           
  5464 ;; *************** function ___fleq *****************
  5465 ;; Defined at:
  5466 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  ff1             4    5[COMRAM] int 
  5469 ;;  ff2             4    9[COMRAM] int 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;		None               void
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5481 ;;      Params:         8       0       0       0       0       0       0       0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5483 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5484 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:       12 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    2
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_efgtoa
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text12
  5496  003C72                     __ptext12:
  5497                           	opt callstack 0
  5498  003C72                     ___fleq:
  5499                           	opt callstack 23
  5500  003C72  0E00               	movlw	0
  5501  003C74  1406               	andwf	___fleq@ff1^0,w,c
  5502  003C76  6E0E               	movwf	??___fleq^0,c
  5503  003C78  0E00               	movlw	0
  5504  003C7A  1407               	andwf	(___fleq@ff1+1)^0,w,c
  5505  003C7C  6E0F               	movwf	(??___fleq+1)^0,c
  5506  003C7E  0E80               	movlw	128
  5507  003C80  1408               	andwf	(___fleq@ff1+2)^0,w,c
  5508  003C82  6E10               	movwf	(??___fleq+2)^0,c
  5509  003C84  0E7F               	movlw	127
  5510  003C86  1409               	andwf	(___fleq@ff1+3)^0,w,c
  5511  003C88  6E11               	movwf	(??___fleq+3)^0,c
  5512  003C8A  500E               	movf	??___fleq^0,w,c
  5513  003C8C  100F               	iorwf	(??___fleq+1)^0,w,c
  5514  003C8E  1010               	iorwf	(??___fleq+2)^0,w,c
  5515  003C90  1011               	iorwf	(??___fleq+3)^0,w,c
  5516  003C92  A4D8               	btfss	status,2,c
  5517  003C94  EF4E  F01E         	goto	u9251
  5518  003C98  EF50  F01E         	goto	u9250
  5519  003C9C                     u9251:
  5520  003C9C  EF58  F01E         	goto	l8204
  5521  003CA0                     u9250:
  5522  003CA0  0E00               	movlw	0
  5523  003CA2  6E06               	movwf	___fleq@ff1^0,c
  5524  003CA4  0E00               	movlw	0
  5525  003CA6  6E07               	movwf	(___fleq@ff1+1)^0,c
  5526  003CA8  0E00               	movlw	0
  5527  003CAA  6E08               	movwf	(___fleq@ff1+2)^0,c
  5528  003CAC  0E00               	movlw	0
  5529  003CAE  6E09               	movwf	(___fleq@ff1+3)^0,c
  5530  003CB0                     l8204:
  5531  003CB0  0E00               	movlw	0
  5532  003CB2  140A               	andwf	___fleq@ff2^0,w,c
  5533  003CB4  6E0E               	movwf	??___fleq^0,c
  5534  003CB6  0E00               	movlw	0
  5535  003CB8  140B               	andwf	(___fleq@ff2+1)^0,w,c
  5536  003CBA  6E0F               	movwf	(??___fleq+1)^0,c
  5537  003CBC  0E80               	movlw	128
  5538  003CBE  140C               	andwf	(___fleq@ff2+2)^0,w,c
  5539  003CC0  6E10               	movwf	(??___fleq+2)^0,c
  5540  003CC2  0E7F               	movlw	127
  5541  003CC4  140D               	andwf	(___fleq@ff2+3)^0,w,c
  5542  003CC6  6E11               	movwf	(??___fleq+3)^0,c
  5543  003CC8  500E               	movf	??___fleq^0,w,c
  5544  003CCA  100F               	iorwf	(??___fleq+1)^0,w,c
  5545  003CCC  1010               	iorwf	(??___fleq+2)^0,w,c
  5546  003CCE  1011               	iorwf	(??___fleq+3)^0,w,c
  5547  003CD0  A4D8               	btfss	status,2,c
  5548  003CD2  EF6D  F01E         	goto	u9261
  5549  003CD6  EF6F  F01E         	goto	u9260
  5550  003CDA                     u9261:
  5551  003CDA  EF77  F01E         	goto	l8208
  5552  003CDE                     u9260:
  5553  003CDE  0E00               	movlw	0
  5554  003CE0  6E0A               	movwf	___fleq@ff2^0,c
  5555  003CE2  0E00               	movlw	0
  5556  003CE4  6E0B               	movwf	(___fleq@ff2+1)^0,c
  5557  003CE6  0E00               	movlw	0
  5558  003CE8  6E0C               	movwf	(___fleq@ff2+2)^0,c
  5559  003CEA  0E00               	movlw	0
  5560  003CEC  6E0D               	movwf	(___fleq@ff2+3)^0,c
  5561  003CEE                     l8208:
  5562  003CEE  500A               	movf	___fleq@ff2^0,w,c
  5563  003CF0  1806               	xorwf	___fleq@ff1^0,w,c
  5564  003CF2  E10F               	bnz	u9270
  5565  003CF4  500B               	movf	(___fleq@ff2+1)^0,w,c
  5566  003CF6  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  5567  003CF8  E10C               	bnz	u9270
  5568  003CFA  500C               	movf	(___fleq@ff2+2)^0,w,c
  5569  003CFC  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  5570  003CFE  E109               	bnz	u9270
  5571  003D00  500D               	movf	(___fleq@ff2+3)^0,w,c
  5572  003D02  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  5573  003D04  B4D8               	btfsc	status,2,c
  5574  003D06  EF87  F01E         	goto	u9271
  5575  003D0A  EF89  F01E         	goto	u9270
  5576  003D0E                     u9271:
  5577  003D0E  EF8C  F01E         	goto	l8212
  5578  003D12                     u9270:
  5579  003D12  90D8               	bcf	status,0,c
  5580  003D14  EF8D  F01E         	goto	l1151
  5581  003D18                     l8212:
  5582  003D18  80D8               	bsf	status,0,c
  5583  003D1A                     l1151:
  5584  003D1A  0012               	return		;funcret
  5585  003D1C                     __end_of___fleq:
  5586                           	opt callstack 0
  5587                           
  5588 ;; *************** function ___awmod *****************
  5589 ;; Defined at:
  5590 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  dividend        2    5[COMRAM] int 
  5593 ;;  divisor         2    7[COMRAM] int 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  sign            1   10[COMRAM] unsigned char 
  5596 ;;  counter         1    9[COMRAM] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  2    5[COMRAM] int 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5606 ;;      Params:         4       0       0       0       0       0       0       0       0
  5607 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5608 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5609 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5610 ;;Total ram usage:        6 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    2
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_efgtoa
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           	psect	text13
  5621  003B14                     __ptext13:
  5622                           	opt callstack 0
  5623  003B14                     ___awmod:
  5624                           	opt callstack 23
  5625  003B14  0E00               	movlw	0
  5626  003B16  6E0B               	movwf	___awmod@sign^0,c
  5627  003B18  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5628  003B1A  EF93  F01D         	goto	u9190
  5629  003B1E  EF91  F01D         	goto	u9191
  5630  003B22                     u9191:
  5631  003B22  EF99  F01D         	goto	l8172
  5632  003B26                     u9190:
  5633  003B26  6C06               	negf	___awmod@dividend^0,c
  5634  003B28  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5635  003B2A  B0D8               	btfsc	status,0,c
  5636  003B2C  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5637  003B2E  0E01               	movlw	1
  5638  003B30  6E0B               	movwf	___awmod@sign^0,c
  5639  003B32                     l8172:
  5640  003B32  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5641  003B34  EFA0  F01D         	goto	u9200
  5642  003B38  EF9E  F01D         	goto	u9201
  5643  003B3C                     u9201:
  5644  003B3C  EFA4  F01D         	goto	l8176
  5645  003B40                     u9200:
  5646  003B40  6C08               	negf	___awmod@divisor^0,c
  5647  003B42  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5648  003B44  B0D8               	btfsc	status,0,c
  5649  003B46  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5650  003B48                     l8176:
  5651  003B48  5008               	movf	___awmod@divisor^0,w,c
  5652  003B4A  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5653  003B4C  B4D8               	btfsc	status,2,c
  5654  003B4E  EFAB  F01D         	goto	u9211
  5655  003B52  EFAD  F01D         	goto	u9210
  5656  003B56                     u9211:
  5657  003B56  EFD1  F01D         	goto	l8192
  5658  003B5A                     u9210:
  5659  003B5A  0E01               	movlw	1
  5660  003B5C  6E0A               	movwf	___awmod@counter^0,c
  5661  003B5E  EFB5  F01D         	goto	l8182
  5662  003B62                     l8180:
  5663  003B62  90D8               	bcf	status,0,c
  5664  003B64  3608               	rlcf	___awmod@divisor^0,f,c
  5665  003B66  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5666  003B68  2A0A               	incf	___awmod@counter^0,f,c
  5667  003B6A                     l8182:
  5668  003B6A  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5669  003B6C  EFBA  F01D         	goto	u9221
  5670  003B70  EFBC  F01D         	goto	u9220
  5671  003B74                     u9221:
  5672  003B74  EFB1  F01D         	goto	l8180
  5673  003B78                     u9220:
  5674  003B78                     l8184:
  5675  003B78  5008               	movf	___awmod@divisor^0,w,c
  5676  003B7A  5C06               	subwf	___awmod@dividend^0,w,c
  5677  003B7C  5009               	movf	(___awmod@divisor+1)^0,w,c
  5678  003B7E  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5679  003B80  A0D8               	btfss	status,0,c
  5680  003B82  EFC5  F01D         	goto	u9231
  5681  003B86  EFC7  F01D         	goto	u9230
  5682  003B8A                     u9231:
  5683  003B8A  EFCB  F01D         	goto	l8188
  5684  003B8E                     u9230:
  5685  003B8E  5008               	movf	___awmod@divisor^0,w,c
  5686  003B90  5E06               	subwf	___awmod@dividend^0,f,c
  5687  003B92  5009               	movf	(___awmod@divisor+1)^0,w,c
  5688  003B94  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5689  003B96                     l8188:
  5690  003B96  90D8               	bcf	status,0,c
  5691  003B98  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5692  003B9A  3208               	rrcf	___awmod@divisor^0,f,c
  5693  003B9C  2E0A               	decfsz	___awmod@counter^0,f,c
  5694  003B9E  EFBC  F01D         	goto	l8184
  5695  003BA2                     l8192:
  5696  003BA2  500B               	movf	___awmod@sign^0,w,c
  5697  003BA4  B4D8               	btfsc	status,2,c
  5698  003BA6  EFD7  F01D         	goto	u9241
  5699  003BAA  EFD9  F01D         	goto	u9240
  5700  003BAE                     u9241:
  5701  003BAE  EFDD  F01D         	goto	l8196
  5702  003BB2                     u9240:
  5703  003BB2  6C06               	negf	___awmod@dividend^0,c
  5704  003BB4  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5705  003BB6  B0D8               	btfsc	status,0,c
  5706  003BB8  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5707  003BBA                     l8196:
  5708  003BBA  C006  F006         	movff	___awmod@dividend,?___awmod
  5709  003BBE  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5710  003BC2  0012               	return		;funcret
  5711  003BC4                     __end_of___awmod:
  5712                           	opt callstack 0
  5713                           
  5714 ;; *************** function ___awdiv *****************
  5715 ;; Defined at:
  5716 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  dividend        2    5[COMRAM] int 
  5719 ;;  divisor         2    7[COMRAM] int 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  quotient        2   11[COMRAM] int 
  5722 ;;  sign            1   10[COMRAM] unsigned char 
  5723 ;;  counter         1    9[COMRAM] unsigned char 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  2    5[COMRAM] int 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5733 ;;      Params:         4       0       0       0       0       0       0       0       0
  5734 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5736 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5737 ;;Total ram usage:        8 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    2
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_efgtoa
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text14
  5748  0038DE                     __ptext14:
  5749                           	opt callstack 0
  5750  0038DE                     ___awdiv:
  5751                           	opt callstack 23
  5752  0038DE  0E00               	movlw	0
  5753  0038E0  6E0B               	movwf	___awdiv@sign^0,c
  5754  0038E2  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5755  0038E4  EF78  F01C         	goto	u9130
  5756  0038E8  EF76  F01C         	goto	u9131
  5757  0038EC                     u9131:
  5758  0038EC  EF7E  F01C         	goto	l8128
  5759  0038F0                     u9130:
  5760  0038F0  6C08               	negf	___awdiv@divisor^0,c
  5761  0038F2  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5762  0038F4  B0D8               	btfsc	status,0,c
  5763  0038F6  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5764  0038F8  0E01               	movlw	1
  5765  0038FA  6E0B               	movwf	___awdiv@sign^0,c
  5766  0038FC                     l8128:
  5767  0038FC  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5768  0038FE  EF85  F01C         	goto	u9140
  5769  003902  EF83  F01C         	goto	u9141
  5770  003906                     u9141:
  5771  003906  EF8B  F01C         	goto	l8134
  5772  00390A                     u9140:
  5773  00390A  6C06               	negf	___awdiv@dividend^0,c
  5774  00390C  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5775  00390E  B0D8               	btfsc	status,0,c
  5776  003910  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5777  003912  0E01               	movlw	1
  5778  003914  1A0B               	xorwf	___awdiv@sign^0,f,c
  5779  003916                     l8134:
  5780  003916  0E00               	movlw	0
  5781  003918  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5782  00391A  0E00               	movlw	0
  5783  00391C  6E0C               	movwf	___awdiv@quotient^0,c
  5784  00391E  5008               	movf	___awdiv@divisor^0,w,c
  5785  003920  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5786  003922  B4D8               	btfsc	status,2,c
  5787  003924  EF96  F01C         	goto	u9151
  5788  003928  EF98  F01C         	goto	u9150
  5789  00392C                     u9151:
  5790  00392C  EFC0  F01C         	goto	l8156
  5791  003930                     u9150:
  5792  003930  0E01               	movlw	1
  5793  003932  6E0A               	movwf	___awdiv@counter^0,c
  5794  003934  EFA0  F01C         	goto	l8142
  5795  003938                     l8140:
  5796  003938  90D8               	bcf	status,0,c
  5797  00393A  3608               	rlcf	___awdiv@divisor^0,f,c
  5798  00393C  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5799  00393E  2A0A               	incf	___awdiv@counter^0,f,c
  5800  003940                     l8142:
  5801  003940  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  5802  003942  EFA5  F01C         	goto	u9161
  5803  003946  EFA7  F01C         	goto	u9160
  5804  00394A                     u9161:
  5805  00394A  EF9C  F01C         	goto	l8140
  5806  00394E                     u9160:
  5807  00394E                     l8144:
  5808  00394E  90D8               	bcf	status,0,c
  5809  003950  360C               	rlcf	___awdiv@quotient^0,f,c
  5810  003952  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  5811  003954  5008               	movf	___awdiv@divisor^0,w,c
  5812  003956  5C06               	subwf	___awdiv@dividend^0,w,c
  5813  003958  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5814  00395A  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  5815  00395C  A0D8               	btfss	status,0,c
  5816  00395E  EFB3  F01C         	goto	u9171
  5817  003962  EFB5  F01C         	goto	u9170
  5818  003966                     u9171:
  5819  003966  EFBA  F01C         	goto	l8152
  5820  00396A                     u9170:
  5821  00396A  5008               	movf	___awdiv@divisor^0,w,c
  5822  00396C  5E06               	subwf	___awdiv@dividend^0,f,c
  5823  00396E  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5824  003970  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  5825  003972  800C               	bsf	___awdiv@quotient^0,0,c
  5826  003974                     l8152:
  5827  003974  90D8               	bcf	status,0,c
  5828  003976  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  5829  003978  3208               	rrcf	___awdiv@divisor^0,f,c
  5830  00397A  2E0A               	decfsz	___awdiv@counter^0,f,c
  5831  00397C  EFA7  F01C         	goto	l8144
  5832  003980                     l8156:
  5833  003980  500B               	movf	___awdiv@sign^0,w,c
  5834  003982  B4D8               	btfsc	status,2,c
  5835  003984  EFC6  F01C         	goto	u9181
  5836  003988  EFC8  F01C         	goto	u9180
  5837  00398C                     u9181:
  5838  00398C  EFCC  F01C         	goto	l8160
  5839  003990                     u9180:
  5840  003990  6C0C               	negf	___awdiv@quotient^0,c
  5841  003992  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  5842  003994  B0D8               	btfsc	status,0,c
  5843  003996  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  5844  003998                     l8160:
  5845  003998  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5846  00399C  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5847  0039A0  0012               	return		;funcret
  5848  0039A2                     __end_of___awdiv:
  5849                           	opt callstack 0
  5850                           
  5851 ;; *************** function _dtoa *****************
  5852 ;; Defined at:
  5853 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  5856 ;;		 -> sprintf@f(6), 
  5857 ;;  d               8   34[COMRAM] long long 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  n               8   58[COMRAM] long long 
  5860 ;;  i               2   66[COMRAM] int 
  5861 ;;  s               2   56[COMRAM] int 
  5862 ;;  w               2   54[COMRAM] int 
  5863 ;;  p               2   52[COMRAM] int 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  2   32[COMRAM] int 
  5866 ;; Registers used:
  5867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5873 ;;      Params:        10       0       0       0       0       0       0       0       0
  5874 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5875 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5876 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5877 ;;Total ram usage:       36 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    6
  5880 ;; This function calls:
  5881 ;;		___aodiv
  5882 ;;		___aomod
  5883 ;;		_abs
  5884 ;;		_pad
  5885 ;; This function is called by:
  5886 ;;		_vfpfcnvrt
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text15
  5891  002132                     __ptext15:
  5892                           	opt callstack 0
  5893  002132                     _dtoa:
  5894                           	opt callstack 20
  5895  002132                     
  5896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5897  002132  C023  F03B         	movff	dtoa@d,dtoa@n
  5898  002136  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  5899  00213A  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  5900  00213E  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  5901  002142  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  5902  002146  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  5903  00214A  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  5904  00214E  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  5905  002152                     
  5906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  5907  002152  BE42               	btfsc	(dtoa@n+7)^0,7,c
  5908  002154  EFAE  F010         	goto	u9561
  5909  002158  EFB1  F010         	goto	u9560
  5910  00215C                     u9561:
  5911  00215C  0E01               	movlw	1
  5912  00215E  EFB2  F010         	goto	u9570
  5913  002162                     u9560:
  5914  002162  0E00               	movlw	0
  5915  002164                     u9570:
  5916  002164  6E39               	movwf	dtoa@s^0,c
  5917  002166  6A3A               	clrf	(dtoa@s+1)^0,c
  5918                           
  5919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  5920  002168  5039               	movf	dtoa@s^0,w,c
  5921  00216A  103A               	iorwf	(dtoa@s+1)^0,w,c
  5922  00216C  B4D8               	btfsc	status,2,c
  5923  00216E  EFBB  F010         	goto	u9581
  5924  002172  EFBD  F010         	goto	u9580
  5925  002176                     u9581:
  5926  002176  EFCD  F010         	goto	l8372
  5927  00217A                     u9580:
  5928  00217A                     
  5929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  5930  00217A  1E42               	comf	(dtoa@n+7)^0,f,c
  5931  00217C  1E41               	comf	(dtoa@n+6)^0,f,c
  5932  00217E  1E40               	comf	(dtoa@n+5)^0,f,c
  5933  002180  1E3F               	comf	(dtoa@n+4)^0,f,c
  5934  002182  1E3E               	comf	(dtoa@n+3)^0,f,c
  5935  002184  1E3D               	comf	(dtoa@n+2)^0,f,c
  5936  002186  1E3C               	comf	(dtoa@n+1)^0,f,c
  5937  002188  6C3B               	negf	dtoa@n^0,c
  5938  00218A  0E00               	movlw	0
  5939  00218C  223C               	addwfc	(dtoa@n+1)^0,f,c
  5940  00218E  223D               	addwfc	(dtoa@n+2)^0,f,c
  5941  002190  223E               	addwfc	(dtoa@n+3)^0,f,c
  5942  002192  223F               	addwfc	(dtoa@n+4)^0,f,c
  5943  002194  2240               	addwfc	(dtoa@n+5)^0,f,c
  5944  002196  2241               	addwfc	(dtoa@n+6)^0,f,c
  5945  002198  2242               	addwfc	(dtoa@n+7)^0,f,c
  5946  00219A                     l8372:
  5947                           
  5948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  5949  00219A  BE55               	btfsc	(_prec+1)^0,7,c
  5950  00219C  EFD2  F010         	goto	u9591
  5951  0021A0  EFD4  F010         	goto	u9590
  5952  0021A4                     u9591:
  5953  0021A4  EFD5  F010         	goto	l8376
  5954  0021A8                     u9590:
  5955  0021A8                     
  5956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  5957  0021A8  9256               	bcf	_flags^0,1,c
  5958  0021AA                     l8376:
  5959                           
  5960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  5961  0021AA  BE55               	btfsc	(_prec+1)^0,7,c
  5962  0021AC  EFE2  F010         	goto	u9600
  5963  0021B0  5055               	movf	(_prec+1)^0,w,c
  5964  0021B2  E106               	bnz	u9601
  5965  0021B4  0454               	decf	_prec^0,w,c
  5966  0021B6  B0D8               	btfsc	status,0,c
  5967  0021B8  EFE0  F010         	goto	u9601
  5968  0021BC  EFE2  F010         	goto	u9600
  5969  0021C0                     u9601:
  5970  0021C0  EFE8  F010         	goto	l744
  5971  0021C4                     u9600:
  5972  0021C4  0E00               	movlw	0
  5973  0021C6  6E36               	movwf	(dtoa@p+1)^0,c
  5974  0021C8  0E01               	movlw	1
  5975  0021CA  6E35               	movwf	dtoa@p^0,c
  5976  0021CC  EFEC  F010         	goto	l746
  5977  0021D0                     l744:
  5978  0021D0  C054  F035         	movff	_prec,dtoa@p
  5979  0021D4  C055  F036         	movff	_prec+1,dtoa@p+1
  5980  0021D8                     l746:
  5981                           
  5982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  5983  0021D8  C132  F037         	movff	_width,dtoa@w
  5984  0021DC  C133  F038         	movff	_width+1,dtoa@w+1
  5985  0021E0                     
  5986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  5987  0021E0  5039               	movf	dtoa@s^0,w,c
  5988  0021E2  103A               	iorwf	(dtoa@s+1)^0,w,c
  5989  0021E4  A4D8               	btfss	status,2,c
  5990  0021E6  EFF7  F010         	goto	u9611
  5991  0021EA  EFF9  F010         	goto	u9610
  5992  0021EE                     u9611:
  5993  0021EE  EF00  F011         	goto	l8384
  5994  0021F2                     u9610:
  5995  0021F2  A456               	btfss	_flags^0,2,c
  5996  0021F4  EFFE  F010         	goto	u9621
  5997  0021F8  EF00  F011         	goto	u9620
  5998  0021FC                     u9621:
  5999  0021FC  EF03  F011         	goto	l8386
  6000  002200                     u9620:
  6001  002200                     l8384:
  6002                           
  6003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6004  002200  0637               	decf	dtoa@w^0,f,c
  6005  002202  A0D8               	btfss	status,0,c
  6006  002204  0638               	decf	(dtoa@w+1)^0,f,c
  6007  002206                     l8386:
  6008                           
  6009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6010  002206  0E00               	movlw	0
  6011  002208  6E44               	movwf	(dtoa@i+1)^0,c
  6012  00220A  0E4F               	movlw	79
  6013  00220C  6E43               	movwf	dtoa@i^0,c
  6014  00220E                     
  6015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6016  00220E  0E00               	movlw	0
  6017  002210  0101               	movlb	1	; () banked
  6018  002212  6F8D               	movwf	(_dbuf+79)& (0+255),b
  6019                           
  6020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6021  002214  EF88  F011         	goto	l8400
  6022  002218                     l8390:
  6023                           
  6024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6025  002218  0643               	decf	dtoa@i^0,f,c
  6026  00221A  A0D8               	btfss	status,0,c
  6027  00221C  0644               	decf	(dtoa@i+1)^0,f,c
  6028  00221E                     
  6029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6030  00221E  0E3E               	movlw	low _dbuf
  6031  002220  2443               	addwf	dtoa@i^0,w,c
  6032  002222  6ED9               	movwf	fsr2l,c
  6033  002224  0E01               	movlw	high _dbuf
  6034  002226  2044               	addwfc	(dtoa@i+1)^0,w,c
  6035  002228  6EDA               	movwf	fsr2h,c
  6036  00222A  C03B  F006         	movff	dtoa@n,___aomod@dividend
  6037  00222E  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
  6038  002232  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
  6039  002236  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
  6040  00223A  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  6041  00223E  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  6042  002242  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  6043  002246  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  6044  00224A  0E0A               	movlw	10
  6045  00224C  6E0E               	movwf	___aomod@divisor^0,c
  6046  00224E  0E00               	movlw	0
  6047  002250  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6048  002252  0E00               	movlw	0
  6049  002254  6E10               	movwf	(___aomod@divisor+2)^0,c
  6050  002256  0E00               	movlw	0
  6051  002258  6E11               	movwf	(___aomod@divisor+3)^0,c
  6052  00225A  0E00               	movlw	0
  6053  00225C  6E12               	movwf	(___aomod@divisor+4)^0,c
  6054  00225E  0E00               	movlw	0
  6055  002260  6E13               	movwf	(___aomod@divisor+5)^0,c
  6056  002262  0E00               	movlw	0
  6057  002264  6E14               	movwf	(___aomod@divisor+6)^0,c
  6058  002266  0E00               	movlw	0
  6059  002268  6E15               	movwf	(___aomod@divisor+7)^0,c
  6060  00226A  EC31  F018         	call	___aomod	;wreg free
  6061  00226E  C006  F02B         	movff	?___aomod,??_dtoa
  6062  002272  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  6063  002276  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  6064  00227A  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  6065  00227E  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  6066  002282  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  6067  002286  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  6068  00228A  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  6069  00228E  C02B  F018         	movff	??_dtoa,abs@a
  6070  002292  C02D  F019         	movff	??_dtoa+2,abs@a+1
  6071  002296  EC14  F022         	call	_abs	;wreg free
  6072  00229A  5018               	movf	?_abs^0,w,c
  6073  00229C  0F30               	addlw	48
  6074  00229E  6EDF               	movwf	indf2,c
  6075  0022A0                     
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6077  0022A0  0635               	decf	dtoa@p^0,f,c
  6078  0022A2  A0D8               	btfss	status,0,c
  6079  0022A4  0636               	decf	(dtoa@p+1)^0,f,c
  6080  0022A6                     
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6082  0022A6  0637               	decf	dtoa@w^0,f,c
  6083  0022A8  A0D8               	btfss	status,0,c
  6084  0022AA  0638               	decf	(dtoa@w+1)^0,f,c
  6085  0022AC                     
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6087  0022AC  C03B  F006         	movff	dtoa@n,___aodiv@dividend
  6088  0022B0  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  6089  0022B4  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  6090  0022B8  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  6091  0022BC  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  6092  0022C0  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  6093  0022C4  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  6094  0022C8  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  6095  0022CC  0E0A               	movlw	10
  6096  0022CE  6E0E               	movwf	___aodiv@divisor^0,c
  6097  0022D0  0E00               	movlw	0
  6098  0022D2  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6099  0022D4  0E00               	movlw	0
  6100  0022D6  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6101  0022D8  0E00               	movlw	0
  6102  0022DA  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6103  0022DC  0E00               	movlw	0
  6104  0022DE  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6105  0022E0  0E00               	movlw	0
  6106  0022E2  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6107  0022E4  0E00               	movlw	0
  6108  0022E6  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6109  0022E8  0E00               	movlw	0
  6110  0022EA  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6111  0022EC  ECAF  F016         	call	___aodiv	;wreg free
  6112  0022F0  C006  F03B         	movff	?___aodiv,dtoa@n
  6113  0022F4  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
  6114  0022F8  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
  6115  0022FC  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
  6116  002300  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
  6117  002304  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
  6118  002308  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
  6119  00230C  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
  6120  002310                     l8400:
  6121                           
  6122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6123  002310  BE44               	btfsc	(dtoa@i+1)^0,7,c
  6124  002312  EF93  F011         	goto	u9631
  6125  002316  5044               	movf	(dtoa@i+1)^0,w,c
  6126  002318  E108               	bnz	u9630
  6127  00231A  0443               	decf	dtoa@i^0,w,c
  6128  00231C  A0D8               	btfss	status,0,c
  6129  00231E  EF93  F011         	goto	u9631
  6130  002322  EF95  F011         	goto	u9630
  6131  002326                     u9631:
  6132  002326  EFC5  F011         	goto	l8410
  6133  00232A                     u9630:
  6134  00232A  503B               	movf	dtoa@n^0,w,c
  6135  00232C  103C               	iorwf	(dtoa@n+1)^0,w,c
  6136  00232E  103D               	iorwf	(dtoa@n+2)^0,w,c
  6137  002330  103E               	iorwf	(dtoa@n+3)^0,w,c
  6138  002332  103F               	iorwf	(dtoa@n+4)^0,w,c
  6139  002334  1040               	iorwf	(dtoa@n+5)^0,w,c
  6140  002336  1041               	iorwf	(dtoa@n+6)^0,w,c
  6141  002338  1042               	iorwf	(dtoa@n+7)^0,w,c
  6142  00233A  A4D8               	btfss	status,2,c
  6143  00233C  EFA2  F011         	goto	u9641
  6144  002340  EFA4  F011         	goto	u9640
  6145  002344                     u9641:
  6146  002344  EF0C  F011         	goto	l8390
  6147  002348                     u9640:
  6148  002348  BE36               	btfsc	(dtoa@p+1)^0,7,c
  6149  00234A  EFB1  F011         	goto	u9650
  6150  00234E  5036               	movf	(dtoa@p+1)^0,w,c
  6151  002350  E106               	bnz	u9651
  6152  002352  0435               	decf	dtoa@p^0,w,c
  6153  002354  B0D8               	btfsc	status,0,c
  6154  002356  EFAF  F011         	goto	u9651
  6155  00235A  EFB1  F011         	goto	u9650
  6156  00235E                     u9651:
  6157  00235E  EF0C  F011         	goto	l8390
  6158  002362                     u9650:
  6159  002362  BE38               	btfsc	(dtoa@w+1)^0,7,c
  6160  002364  EFBC  F011         	goto	u9661
  6161  002368  5038               	movf	(dtoa@w+1)^0,w,c
  6162  00236A  E108               	bnz	u9660
  6163  00236C  0437               	decf	dtoa@w^0,w,c
  6164  00236E  A0D8               	btfss	status,0,c
  6165  002370  EFBC  F011         	goto	u9661
  6166  002374  EFBE  F011         	goto	u9660
  6167  002378                     u9661:
  6168  002378  EFC5  F011         	goto	l8410
  6169  00237C                     u9660:
  6170  00237C  B256               	btfsc	_flags^0,1,c
  6171  00237E  EFC3  F011         	goto	u9671
  6172  002382  EFC5  F011         	goto	u9670
  6173  002386                     u9671:
  6174  002386  EF0C  F011         	goto	l8390
  6175  00238A                     u9670:
  6176  00238A                     l8410:
  6177                           
  6178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6179  00238A  5039               	movf	dtoa@s^0,w,c
  6180  00238C  103A               	iorwf	(dtoa@s+1)^0,w,c
  6181  00238E  A4D8               	btfss	status,2,c
  6182  002390  EFCC  F011         	goto	u9681
  6183  002394  EFCE  F011         	goto	u9680
  6184  002398                     u9681:
  6185  002398  EFD5  F011         	goto	l8414
  6186  00239C                     u9680:
  6187  00239C  A456               	btfss	_flags^0,2,c
  6188  00239E  EFD3  F011         	goto	u9691
  6189  0023A2  EFD5  F011         	goto	u9690
  6190  0023A6                     u9691:
  6191  0023A6  EFF3  F011         	goto	l8424
  6192  0023AA                     u9690:
  6193  0023AA                     l8414:
  6194                           
  6195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6196  0023AA  0643               	decf	dtoa@i^0,f,c
  6197  0023AC  A0D8               	btfss	status,0,c
  6198  0023AE  0644               	decf	(dtoa@i+1)^0,f,c
  6199  0023B0                     
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6201  0023B0  5039               	movf	dtoa@s^0,w,c
  6202  0023B2  103A               	iorwf	(dtoa@s+1)^0,w,c
  6203  0023B4  A4D8               	btfss	status,2,c
  6204  0023B6  EFDF  F011         	goto	u9701
  6205  0023BA  EFE1  F011         	goto	u9700
  6206  0023BE                     u9701:
  6207  0023BE  EFE7  F011         	goto	l8420
  6208  0023C2                     u9700:
  6209  0023C2  0E00               	movlw	0
  6210  0023C4  6E34               	movwf	(_dtoa$883+1)^0,c
  6211  0023C6  0E2B               	movlw	43
  6212  0023C8  6E33               	movwf	_dtoa$883^0,c
  6213  0023CA  EFEB  F011         	goto	l8422
  6214  0023CE                     l8420:
  6215  0023CE  0E00               	movlw	0
  6216  0023D0  6E34               	movwf	(_dtoa$883+1)^0,c
  6217  0023D2  0E2D               	movlw	45
  6218  0023D4  6E33               	movwf	_dtoa$883^0,c
  6219  0023D6                     l8422:
  6220  0023D6  0E3E               	movlw	low _dbuf
  6221  0023D8  2443               	addwf	dtoa@i^0,w,c
  6222  0023DA  6ED9               	movwf	fsr2l,c
  6223  0023DC  0E01               	movlw	high _dbuf
  6224  0023DE  2044               	addwfc	(dtoa@i+1)^0,w,c
  6225  0023E0  6EDA               	movwf	fsr2h,c
  6226  0023E2  C033  FFDF         	movff	_dtoa$883,indf2
  6227  0023E6                     l8424:
  6228                           
  6229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6230  0023E6  C021  F016         	movff	dtoa@fp,pad@fp
  6231  0023EA  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  6232  0023EE  0E3E               	movlw	low _dbuf
  6233  0023F0  2443               	addwf	dtoa@i^0,w,c
  6234  0023F2  6E18               	movwf	pad@buf^0,c
  6235  0023F4  0E01               	movlw	high _dbuf
  6236  0023F6  2044               	addwfc	(dtoa@i+1)^0,w,c
  6237  0023F8  6E19               	movwf	(pad@buf+1)^0,c
  6238  0023FA  C037  F01A         	movff	dtoa@w,pad@p
  6239  0023FE  C038  F01B         	movff	dtoa@w+1,pad@p+1
  6240  002402  ECD1  F01C         	call	_pad	;wreg free
  6241  002406  C016  F021         	movff	?_pad,?_dtoa
  6242  00240A  C017  F022         	movff	?_pad+1,?_dtoa+1
  6243  00240E  0012               	return		;funcret
  6244  002410                     __end_of_dtoa:
  6245                           	opt callstack 0
  6246                           
  6247 ;; *************** function _pad *****************
  6248 ;; Defined at:
  6249 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  6252 ;;		 -> sprintf@f(6), 
  6253 ;;  buf             2   23[COMRAM] PTR unsigned char 
  6254 ;;		 -> dbuf(80), 
  6255 ;;  p               2   25[COMRAM] int 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  w               2   30[COMRAM] int 
  6258 ;;  i               2   28[COMRAM] int 
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  2   21[COMRAM] int 
  6261 ;; Registers used:
  6262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6268 ;;      Params:         6       0       0       0       0       0       0       0       0
  6269 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6270 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6271 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6272 ;;Total ram usage:       11 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    5
  6275 ;; This function calls:
  6276 ;;		_fputc
  6277 ;;		_fputs
  6278 ;;		_strlen
  6279 ;; This function is called by:
  6280 ;;		_dtoa
  6281 ;;		_efgtoa
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text16
  6286  0039A2                     __ptext16:
  6287                           	opt callstack 0
  6288  0039A2                     _pad:
  6289                           	opt callstack 20
  6290  0039A2                     
  6291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6292  0039A2  A056               	btfss	_flags^0,0,c
  6293  0039A4  EFD6  F01C         	goto	u8291
  6294  0039A8  EFD8  F01C         	goto	u8290
  6295  0039AC                     u8291:
  6296  0039AC  EFE2  F01C         	goto	l7670
  6297  0039B0                     u8290:
  6298  0039B0                     
  6299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6300  0039B0  C018  F00F         	movff	pad@buf,fputs@s
  6301  0039B4  C019  F010         	movff	pad@buf+1,fputs@s+1
  6302  0039B8  C016  F011         	movff	pad@fp,fputs@fp
  6303  0039BC  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6304  0039C0  ECF2  F021         	call	_fputs	;wreg free
  6305  0039C4                     l7670:
  6306                           
  6307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6308  0039C4  BE1B               	btfsc	(pad@p+1)^0,7,c
  6309  0039C6  EFE7  F01C         	goto	u8301
  6310  0039CA  EFE9  F01C         	goto	u8300
  6311  0039CE                     u8301:
  6312  0039CE  EFEF  F01C         	goto	l7674
  6313  0039D2                     u8300:
  6314  0039D2  C01A  F01F         	movff	pad@p,pad@w
  6315  0039D6  C01B  F020         	movff	pad@p+1,pad@w+1
  6316  0039DA  EFF3  F01C         	goto	l733
  6317  0039DE                     l7674:
  6318  0039DE  0E00               	movlw	0
  6319  0039E0  6E20               	movwf	(pad@w+1)^0,c
  6320  0039E2  0E00               	movlw	0
  6321  0039E4  6E1F               	movwf	pad@w^0,c
  6322  0039E6                     l733:
  6323                           
  6324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6325  0039E6  0E00               	movlw	0
  6326  0039E8  6E1E               	movwf	(pad@i+1)^0,c
  6327  0039EA  0E00               	movlw	0
  6328  0039EC  6E1D               	movwf	pad@i^0,c
  6329                           
  6330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6331  0039EE  EF05  F01D         	goto	l7680
  6332  0039F2                     l7676:
  6333                           
  6334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6335  0039F2  0E00               	movlw	0
  6336  0039F4  6E07               	movwf	(fputc@c+1)^0,c
  6337  0039F6  0E20               	movlw	32
  6338  0039F8  6E06               	movwf	fputc@c^0,c
  6339  0039FA  C016  F008         	movff	pad@fp,fputc@fp
  6340  0039FE  C017  F009         	movff	pad@fp+1,fputc@fp+1
  6341  003A02  EC0A  F01C         	call	_fputc	;wreg free
  6342  003A06                     
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6344  003A06  4A1D               	infsnz	pad@i^0,f,c
  6345  003A08  2A1E               	incf	(pad@i+1)^0,f,c
  6346  003A0A                     l7680:
  6347                           
  6348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6349  003A0A  501F               	movf	pad@w^0,w,c
  6350  003A0C  5C1D               	subwf	pad@i^0,w,c
  6351  003A0E  501E               	movf	(pad@i+1)^0,w,c
  6352  003A10  0A80               	xorlw	128
  6353  003A12  6E1C               	movwf	??_pad^0,c
  6354  003A14  5020               	movf	(pad@w+1)^0,w,c
  6355  003A16  0A80               	xorlw	128
  6356  003A18  581C               	subwfb	??_pad^0,w,c
  6357  003A1A  A0D8               	btfss	status,0,c
  6358  003A1C  EF12  F01D         	goto	u8311
  6359  003A20  EF14  F01D         	goto	u8310
  6360  003A24                     u8311:
  6361  003A24  EFF9  F01C         	goto	l7676
  6362  003A28                     u8310:
  6363  003A28                     
  6364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6365  003A28  B056               	btfsc	_flags^0,0,c
  6366  003A2A  EF19  F01D         	goto	u8321
  6367  003A2E  EF1B  F01D         	goto	u8320
  6368  003A32                     u8321:
  6369  003A32  EF25  F01D         	goto	l7684
  6370  003A36                     u8320:
  6371  003A36                     
  6372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6373  003A36  C018  F00F         	movff	pad@buf,fputs@s
  6374  003A3A  C019  F010         	movff	pad@buf+1,fputs@s+1
  6375  003A3E  C016  F011         	movff	pad@fp,fputs@fp
  6376  003A42  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6377  003A46  ECF2  F021         	call	_fputs	;wreg free
  6378  003A4A                     l7684:
  6379                           
  6380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6381  003A4A  C018  F006         	movff	pad@buf,strlen@s
  6382  003A4E  C019  F007         	movff	pad@buf+1,strlen@s+1
  6383  003A52  EC88  F022         	call	_strlen	;wreg free
  6384  003A56  501F               	movf	pad@w^0,w,c
  6385  003A58  2406               	addwf	?_strlen^0,w,c
  6386  003A5A  6E16               	movwf	?_pad^0,c
  6387  003A5C  5020               	movf	(pad@w+1)^0,w,c
  6388  003A5E  2007               	addwfc	(?_strlen+1)^0,w,c
  6389  003A60  6E17               	movwf	(?_pad+1)^0,c
  6390  003A62  0012               	return		;funcret
  6391  003A64                     __end_of_pad:
  6392                           	opt callstack 0
  6393                           
  6394 ;; *************** function _strlen *****************
  6395 ;; Defined at:
  6396 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  s               2    5[COMRAM] PTR const unsigned char 
  6399 ;;		 -> dbuf(80), 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;  a               2    7[COMRAM] PTR const unsigned char 
  6402 ;;		 -> dbuf(80), 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  2    5[COMRAM] unsigned int 
  6405 ;; Registers used:
  6406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6412 ;;      Params:         2       0       0       0       0       0       0       0       0
  6413 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6415 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6416 ;;Total ram usage:        4 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; Hardware stack levels required when called:    2
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_pad
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text17
  6427  004510                     __ptext17:
  6428                           	opt callstack 0
  6429  004510                     _strlen:
  6430                           	opt callstack 22
  6431  004510  C006  F008         	movff	strlen@s,strlen@a
  6432  004514  C007  F009         	movff	strlen@s+1,strlen@a+1
  6433  004518  EF90  F022         	goto	l7396
  6434  00451C                     l7394:
  6435  00451C  4A06               	infsnz	strlen@s^0,f,c
  6436  00451E  2A07               	incf	(strlen@s+1)^0,f,c
  6437  004520                     l7396:
  6438  004520  C006  FFD9         	movff	strlen@s,fsr2l
  6439  004524  C007  FFDA         	movff	strlen@s+1,fsr2h
  6440  004528  50DF               	movf	indf2,w,c
  6441  00452A  A4D8               	btfss	status,2,c
  6442  00452C  EF9A  F022         	goto	u7791
  6443  004530  EF9C  F022         	goto	u7790
  6444  004534                     u7791:
  6445  004534  EF8E  F022         	goto	l7394
  6446  004538                     u7790:
  6447  004538  5008               	movf	strlen@a^0,w,c
  6448  00453A  5C06               	subwf	strlen@s^0,w,c
  6449  00453C  6E06               	movwf	?_strlen^0,c
  6450  00453E  5009               	movf	(strlen@a+1)^0,w,c
  6451  004540  5807               	subwfb	(strlen@s+1)^0,w,c
  6452  004542  6E07               	movwf	(?_strlen+1)^0,c
  6453  004544  0012               	return		;funcret
  6454  004546                     __end_of_strlen:
  6455                           	opt callstack 0
  6456                           
  6457 ;; *************** function _fputs *****************
  6458 ;; Defined at:
  6459 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6462 ;;		 -> dbuf(80), 
  6463 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6464 ;;		 -> sprintf@f(6), 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  i               2   19[COMRAM] int 
  6467 ;;  c               1   18[COMRAM] unsigned char 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  2   14[COMRAM] int 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6477 ;;      Params:         4       0       0       0       0       0       0       0       0
  6478 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6480 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6481 ;;Total ram usage:        7 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    4
  6484 ;; This function calls:
  6485 ;;		_fputc
  6486 ;; This function is called by:
  6487 ;;		_pad
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text18
  6492  0043E4                     __ptext18:
  6493                           	opt callstack 0
  6494  0043E4                     _fputs:
  6495                           	opt callstack 20
  6496  0043E4  0E00               	movlw	0
  6497  0043E6  6E15               	movwf	(fputs@i+1)^0,c
  6498  0043E8  0E00               	movlw	0
  6499  0043EA  6E14               	movwf	fputs@i^0,c
  6500  0043EC  EF03  F022         	goto	l7390
  6501  0043F0                     l7386:
  6502  0043F0  C013  F006         	movff	fputs@c,fputc@c
  6503  0043F4  6A07               	clrf	(fputc@c+1)^0,c
  6504  0043F6  C011  F008         	movff	fputs@fp,fputc@fp
  6505  0043FA  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  6506  0043FE  EC0A  F01C         	call	_fputc	;wreg free
  6507  004402  4A14               	infsnz	fputs@i^0,f,c
  6508  004404  2A15               	incf	(fputs@i+1)^0,f,c
  6509  004406                     l7390:
  6510  004406  5014               	movf	fputs@i^0,w,c
  6511  004408  240F               	addwf	fputs@s^0,w,c
  6512  00440A  6ED9               	movwf	fsr2l,c
  6513  00440C  5015               	movf	(fputs@i+1)^0,w,c
  6514  00440E  2010               	addwfc	(fputs@s+1)^0,w,c
  6515  004410  6EDA               	movwf	fsr2h,c
  6516  004412  50DF               	movf	indf2,w,c
  6517  004414  6E13               	movwf	fputs@c^0,c
  6518  004416  5013               	movf	fputs@c^0,w,c
  6519  004418  A4D8               	btfss	status,2,c
  6520  00441A  EF11  F022         	goto	u7781
  6521  00441E  EF13  F022         	goto	u7780
  6522  004422                     u7781:
  6523  004422  EFF8  F021         	goto	l7386
  6524  004426                     u7780:
  6525  004426  0012               	return		;funcret
  6526  004428                     __end_of_fputs:
  6527                           	opt callstack 0
  6528                           
  6529 ;; *************** function _fputc *****************
  6530 ;; Defined at:
  6531 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  c               2    5[COMRAM] int 
  6534 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  6535 ;;		 -> sprintf@f(6), 
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;		None
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  2    5[COMRAM] int 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6547 ;;      Params:         4       0       0       0       0       0       0       0       0
  6548 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6549 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6550 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6551 ;;Total ram usage:        9 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    3
  6554 ;; This function calls:
  6555 ;;		_putch
  6556 ;; This function is called by:
  6557 ;;		_pad
  6558 ;;		_vfpfcnvrt
  6559 ;;		_fputs
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text19
  6564  003814                     __ptext19:
  6565                           	opt callstack 0
  6566  003814                     _fputc:
  6567                           	opt callstack 23
  6568  003814  5008               	movf	fputc@fp^0,w,c
  6569  003816  1009               	iorwf	(fputc@fp+1)^0,w,c
  6570  003818  B4D8               	btfsc	status,2,c
  6571  00381A  EF11  F01C         	goto	u7741
  6572  00381E  EF13  F01C         	goto	u7740
  6573  003822                     u7741:
  6574  003822  EF1C  F01C         	goto	l7374
  6575  003826                     u7740:
  6576  003826  5008               	movf	fputc@fp^0,w,c
  6577  003828  1009               	iorwf	(fputc@fp+1)^0,w,c
  6578  00382A  A4D8               	btfss	status,2,c
  6579  00382C  EF1A  F01C         	goto	u7751
  6580  003830  EF1C  F01C         	goto	u7750
  6581  003834                     u7751:
  6582  003834  EF21  F01C         	goto	l7376
  6583  003838                     u7750:
  6584  003838                     l7374:
  6585  003838  5006               	movf	fputc@c^0,w,c
  6586  00383A  EC10  F023         	call	_putch
  6587  00383E  EF6E  F01C         	goto	l1657
  6588  003842                     l7376:
  6589  003842  EE20 F004          	lfsr	2,4
  6590  003846  5008               	movf	fputc@fp^0,w,c
  6591  003848  26D9               	addwf	fsr2l,f,c
  6592  00384A  5009               	movf	(fputc@fp+1)^0,w,c
  6593  00384C  22DA               	addwfc	fsr2h,f,c
  6594  00384E  50DE               	movf	postinc2,w,c
  6595  003850  10DE               	iorwf	postinc2,w,c
  6596  003852  B4D8               	btfsc	status,2,c
  6597  003854  EF2E  F01C         	goto	u7761
  6598  003858  EF30  F01C         	goto	u7760
  6599  00385C                     u7761:
  6600  00385C  EF4B  F01C         	goto	l7380
  6601  003860                     u7760:
  6602  003860  EE20 F004          	lfsr	2,4
  6603  003864  5008               	movf	fputc@fp^0,w,c
  6604  003866  26D9               	addwf	fsr2l,f,c
  6605  003868  5009               	movf	(fputc@fp+1)^0,w,c
  6606  00386A  22DA               	addwfc	fsr2h,f,c
  6607  00386C  EE10 F002          	lfsr	1,2
  6608  003870  5008               	movf	fputc@fp^0,w,c
  6609  003872  26E1               	addwf	fsr1l,f,c
  6610  003874  5009               	movf	(fputc@fp+1)^0,w,c
  6611  003876  22E2               	addwfc	fsr1h,f,c
  6612  003878  50DE               	movf	postinc2,w,c
  6613  00387A  5CE6               	subwf	postinc1,w,c
  6614  00387C  50E6               	movf	postinc1,w,c
  6615  00387E  0A80               	xorlw	128
  6616  003880  6E0E               	movwf	(??_fputc+4)^0,c
  6617  003882  50DE               	movf	postinc2,w,c
  6618  003884  0A80               	xorlw	128
  6619  003886  580E               	subwfb	(??_fputc+4)^0,w,c
  6620  003888  B0D8               	btfsc	status,0,c
  6621  00388A  EF49  F01C         	goto	u7771
  6622  00388E  EF4B  F01C         	goto	u7770
  6623  003892                     u7771:
  6624  003892  EF6E  F01C         	goto	l1657
  6625  003896                     u7770:
  6626  003896                     l7380:
  6627  003896  EE20 F002          	lfsr	2,2
  6628  00389A  5008               	movf	fputc@fp^0,w,c
  6629  00389C  26D9               	addwf	fsr2l,f,c
  6630  00389E  5009               	movf	(fputc@fp+1)^0,w,c
  6631  0038A0  22DA               	addwfc	fsr2h,f,c
  6632  0038A2  CFDE F00A          	movff	postinc2,??_fputc
  6633  0038A6  CFDD F00B          	movff	postdec2,??_fputc+1
  6634  0038AA  C008  FFD9         	movff	fputc@fp,fsr2l
  6635  0038AE  C009  FFDA         	movff	fputc@fp+1,fsr2h
  6636  0038B2  CFDE F00C          	movff	postinc2,??_fputc+2
  6637  0038B6  CFDD F00D          	movff	postdec2,??_fputc+3
  6638  0038BA  500A               	movf	??_fputc^0,w,c
  6639  0038BC  240C               	addwf	(??_fputc+2)^0,w,c
  6640  0038BE  6ED9               	movwf	fsr2l,c
  6641  0038C0  500B               	movf	(??_fputc+1)^0,w,c
  6642  0038C2  200D               	addwfc	(??_fputc+3)^0,w,c
  6643  0038C4  6EDA               	movwf	fsr2h,c
  6644  0038C6  C006  FFDF         	movff	fputc@c,indf2
  6645  0038CA  EE20 F002          	lfsr	2,2
  6646  0038CE  5008               	movf	fputc@fp^0,w,c
  6647  0038D0  26D9               	addwf	fsr2l,f,c
  6648  0038D2  5009               	movf	(fputc@fp+1)^0,w,c
  6649  0038D4  22DA               	addwfc	fsr2h,f,c
  6650  0038D6  2ADE               	incf	postinc2,f,c
  6651  0038D8  0E00               	movlw	0
  6652  0038DA  22DD               	addwfc	postdec2,f,c
  6653  0038DC                     l1657:
  6654  0038DC  0012               	return		;funcret
  6655  0038DE                     __end_of_fputc:
  6656                           	opt callstack 0
  6657                           
  6658 ;; *************** function _putch *****************
  6659 ;; Defined at:
  6660 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  c               1    wreg     unsigned char 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  c               1    0[COMRAM] unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6674 ;;      Params:         0       0       0       0       0       0       0       0       0
  6675 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6677 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6678 ;;Total ram usage:        0 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:    2
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_fputc
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text20
  6689  004620                     __ptext20:
  6690                           	opt callstack 0
  6691  004620                     _putch:
  6692                           	opt callstack 23
  6693  004620  0012               	return		;funcret
  6694  004622                     __end_of_putch:
  6695                           	opt callstack 0
  6696                           
  6697 ;; *************** function _abs *****************
  6698 ;; Defined at:
  6699 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  a               2   23[COMRAM] int 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  2   23[COMRAM] int 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6713 ;;      Params:         2       0       0       0       0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6715 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6716 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6717 ;;Total ram usage:        4 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    2
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_dtoa
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text21
  6728  004428                     __ptext21:
  6729                           	opt callstack 0
  6730  004428                     _abs:
  6731                           	opt callstack 23
  6732  004428  BE19               	btfsc	(abs@a+1)^0,7,c
  6733  00442A  EF21  F022         	goto	u8330
  6734  00442E  5019               	movf	(abs@a+1)^0,w,c
  6735  004430  E106               	bnz	u8331
  6736  004432  0418               	decf	abs@a^0,w,c
  6737  004434  B0D8               	btfsc	status,0,c
  6738  004436  EF1F  F022         	goto	u8331
  6739  00443A  EF21  F022         	goto	u8330
  6740  00443E                     u8331:
  6741  00443E  EF2F  F022         	goto	l1578
  6742  004442                     u8330:
  6743  004442  C018  F01A         	movff	abs@a,??_abs
  6744  004446  C019  F01B         	movff	abs@a+1,??_abs+1
  6745  00444A  1E1A               	comf	??_abs^0,f,c
  6746  00444C  1E1B               	comf	(??_abs+1)^0,f,c
  6747  00444E  4A1A               	infsnz	??_abs^0,f,c
  6748  004450  2A1B               	incf	(??_abs+1)^0,f,c
  6749  004452  C01A  F018         	movff	??_abs,?_abs
  6750  004456  C01B  F019         	movff	??_abs+1,?_abs+1
  6751  00445A  EF33  F022         	goto	l1581
  6752  00445E                     l1578:
  6753  00445E  C018  F018         	movff	abs@a,?_abs
  6754  004462  C019  F019         	movff	abs@a+1,?_abs+1
  6755  004466                     l1581:
  6756  004466  0012               	return		;funcret
  6757  004468                     __end_of_abs:
  6758                           	opt callstack 0
  6759                           
  6760 ;; *************** function ___aomod *****************
  6761 ;; Defined at:
  6762 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;  dividend        8    5[COMRAM] long long 
  6765 ;;  divisor         8   13[COMRAM] long long 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  sign            1   22[COMRAM] unsigned char 
  6768 ;;  counter         1   21[COMRAM] unsigned char 
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  8    5[COMRAM] long long 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6778 ;;      Params:        16       0       0       0       0       0       0       0       0
  6779 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6781 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6782 ;;Total ram usage:       18 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    2
  6785 ;; This function calls:
  6786 ;;		Nothing
  6787 ;; This function is called by:
  6788 ;;		_dtoa
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text22
  6793  003062                     __ptext22:
  6794                           	opt callstack 0
  6795  003062                     ___aomod:
  6796                           	opt callstack 23
  6797  003062  0E00               	movlw	0
  6798  003064  6E17               	movwf	___aomod@sign^0,c
  6799  003066  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  6800  003068  EF3A  F018         	goto	u8650
  6801  00306C  EF38  F018         	goto	u8651
  6802  003070                     u8651:
  6803  003070  EF4C  F018         	goto	l7818
  6804  003074                     u8650:
  6805  003074  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  6806  003076  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  6807  003078  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  6808  00307A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  6809  00307C  1E09               	comf	(___aomod@dividend+3)^0,f,c
  6810  00307E  1E08               	comf	(___aomod@dividend+2)^0,f,c
  6811  003080  1E07               	comf	(___aomod@dividend+1)^0,f,c
  6812  003082  6C06               	negf	___aomod@dividend^0,c
  6813  003084  0E00               	movlw	0
  6814  003086  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  6815  003088  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  6816  00308A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  6817  00308C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  6818  00308E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  6819  003090  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  6820  003092  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  6821  003094  0E01               	movlw	1
  6822  003096  6E17               	movwf	___aomod@sign^0,c
  6823  003098                     l7818:
  6824  003098  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  6825  00309A  EF53  F018         	goto	u8660
  6826  00309E  EF51  F018         	goto	u8661
  6827  0030A2                     u8661:
  6828  0030A2  EF63  F018         	goto	l7822
  6829  0030A6                     u8660:
  6830  0030A6  1E15               	comf	(___aomod@divisor+7)^0,f,c
  6831  0030A8  1E14               	comf	(___aomod@divisor+6)^0,f,c
  6832  0030AA  1E13               	comf	(___aomod@divisor+5)^0,f,c
  6833  0030AC  1E12               	comf	(___aomod@divisor+4)^0,f,c
  6834  0030AE  1E11               	comf	(___aomod@divisor+3)^0,f,c
  6835  0030B0  1E10               	comf	(___aomod@divisor+2)^0,f,c
  6836  0030B2  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  6837  0030B4  6C0E               	negf	___aomod@divisor^0,c
  6838  0030B6  0E00               	movlw	0
  6839  0030B8  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  6840  0030BA  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  6841  0030BC  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  6842  0030BE  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  6843  0030C0  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  6844  0030C2  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  6845  0030C4  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  6846  0030C6                     l7822:
  6847  0030C6  500E               	movf	___aomod@divisor^0,w,c
  6848  0030C8  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  6849  0030CA  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  6850  0030CC  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  6851  0030CE  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  6852  0030D0  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  6853  0030D2  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  6854  0030D4  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  6855  0030D6  B4D8               	btfsc	status,2,c
  6856  0030D8  EF70  F018         	goto	u8671
  6857  0030DC  EF72  F018         	goto	u8670
  6858  0030E0                     u8671:
  6859  0030E0  EFBA  F018         	goto	l7838
  6860  0030E4                     u8670:
  6861  0030E4  0E01               	movlw	1
  6862  0030E6  6E16               	movwf	___aomod@counter^0,c
  6863  0030E8  EF80  F018         	goto	l7828
  6864  0030EC                     l7826:
  6865  0030EC  90D8               	bcf	status,0,c
  6866  0030EE  360E               	rlcf	___aomod@divisor^0,f,c
  6867  0030F0  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  6868  0030F2  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  6869  0030F4  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  6870  0030F6  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  6871  0030F8  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  6872  0030FA  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  6873  0030FC  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  6874  0030FE  2A16               	incf	___aomod@counter^0,f,c
  6875  003100                     l7828:
  6876  003100  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  6877  003102  EF85  F018         	goto	u8681
  6878  003106  EF87  F018         	goto	u8680
  6879  00310A                     u8681:
  6880  00310A  EF76  F018         	goto	l7826
  6881  00310E                     u8680:
  6882  00310E                     l7830:
  6883  00310E  500E               	movf	___aomod@divisor^0,w,c
  6884  003110  5C06               	subwf	___aomod@dividend^0,w,c
  6885  003112  500F               	movf	(___aomod@divisor+1)^0,w,c
  6886  003114  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  6887  003116  5010               	movf	(___aomod@divisor+2)^0,w,c
  6888  003118  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  6889  00311A  5011               	movf	(___aomod@divisor+3)^0,w,c
  6890  00311C  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  6891  00311E  5012               	movf	(___aomod@divisor+4)^0,w,c
  6892  003120  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  6893  003122  5013               	movf	(___aomod@divisor+5)^0,w,c
  6894  003124  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  6895  003126  5014               	movf	(___aomod@divisor+6)^0,w,c
  6896  003128  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  6897  00312A  5015               	movf	(___aomod@divisor+7)^0,w,c
  6898  00312C  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  6899  00312E  A0D8               	btfss	status,0,c
  6900  003130  EF9C  F018         	goto	u8691
  6901  003134  EF9E  F018         	goto	u8690
  6902  003138                     u8691:
  6903  003138  EFAE  F018         	goto	l7834
  6904  00313C                     u8690:
  6905  00313C  500E               	movf	___aomod@divisor^0,w,c
  6906  00313E  5E06               	subwf	___aomod@dividend^0,f,c
  6907  003140  500F               	movf	(___aomod@divisor+1)^0,w,c
  6908  003142  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  6909  003144  5010               	movf	(___aomod@divisor+2)^0,w,c
  6910  003146  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  6911  003148  5011               	movf	(___aomod@divisor+3)^0,w,c
  6912  00314A  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  6913  00314C  5012               	movf	(___aomod@divisor+4)^0,w,c
  6914  00314E  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  6915  003150  5013               	movf	(___aomod@divisor+5)^0,w,c
  6916  003152  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  6917  003154  5014               	movf	(___aomod@divisor+6)^0,w,c
  6918  003156  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  6919  003158  5015               	movf	(___aomod@divisor+7)^0,w,c
  6920  00315A  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  6921  00315C                     l7834:
  6922  00315C  90D8               	bcf	status,0,c
  6923  00315E  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  6924  003160  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  6925  003162  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  6926  003164  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  6927  003166  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  6928  003168  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  6929  00316A  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  6930  00316C  320E               	rrcf	___aomod@divisor^0,f,c
  6931  00316E  2E16               	decfsz	___aomod@counter^0,f,c
  6932  003170  EF87  F018         	goto	l7830
  6933  003174                     l7838:
  6934  003174  5017               	movf	___aomod@sign^0,w,c
  6935  003176  B4D8               	btfsc	status,2,c
  6936  003178  EFC0  F018         	goto	u8701
  6937  00317C  EFC2  F018         	goto	u8700
  6938  003180                     u8701:
  6939  003180  EFD2  F018         	goto	l7842
  6940  003184                     u8700:
  6941  003184  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  6942  003186  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  6943  003188  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  6944  00318A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  6945  00318C  1E09               	comf	(___aomod@dividend+3)^0,f,c
  6946  00318E  1E08               	comf	(___aomod@dividend+2)^0,f,c
  6947  003190  1E07               	comf	(___aomod@dividend+1)^0,f,c
  6948  003192  6C06               	negf	___aomod@dividend^0,c
  6949  003194  0E00               	movlw	0
  6950  003196  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  6951  003198  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  6952  00319A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  6953  00319C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  6954  00319E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  6955  0031A0  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  6956  0031A2  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  6957  0031A4                     l7842:
  6958  0031A4  C006  F006         	movff	___aomod@dividend,?___aomod
  6959  0031A8  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  6960  0031AC  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  6961  0031B0  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  6962  0031B4  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  6963  0031B8  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  6964  0031BC  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  6965  0031C0  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  6966  0031C4  0012               	return		;funcret
  6967  0031C6                     __end_of___aomod:
  6968                           	opt callstack 0
  6969                           
  6970 ;; *************** function ___aodiv *****************
  6971 ;; Defined at:
  6972 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  dividend        8    5[COMRAM] long long 
  6975 ;;  divisor         8   13[COMRAM] long long 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  quotient        8   23[COMRAM] long long 
  6978 ;;  sign            1   22[COMRAM] unsigned char 
  6979 ;;  counter         1   21[COMRAM] unsigned char 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  8    5[COMRAM] long long 
  6982 ;; Registers used:
  6983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6989 ;;      Params:        16       0       0       0       0       0       0       0       0
  6990 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6992 ;;      Totals:        26       0       0       0       0       0       0       0       0
  6993 ;;Total ram usage:       26 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:    2
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_dtoa
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text23
  7004  002D5E                     __ptext23:
  7005                           	opt callstack 0
  7006  002D5E                     ___aodiv:
  7007                           	opt callstack 23
  7008  002D5E  0E00               	movlw	0
  7009  002D60  6E17               	movwf	___aodiv@sign^0,c
  7010  002D62  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  7011  002D64  EFB8  F016         	goto	u8580
  7012  002D68  EFB6  F016         	goto	u8581
  7013  002D6C                     u8581:
  7014  002D6C  EFCA  F016         	goto	l7774
  7015  002D70                     u8580:
  7016  002D70  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7017  002D72  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7018  002D74  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7019  002D76  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7020  002D78  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7021  002D7A  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7022  002D7C  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7023  002D7E  6C0E               	negf	___aodiv@divisor^0,c
  7024  002D80  0E00               	movlw	0
  7025  002D82  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7026  002D84  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7027  002D86  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7028  002D88  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7029  002D8A  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7030  002D8C  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7031  002D8E  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7032  002D90  0E01               	movlw	1
  7033  002D92  6E17               	movwf	___aodiv@sign^0,c
  7034  002D94                     l7774:
  7035  002D94  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  7036  002D96  EFD1  F016         	goto	u8590
  7037  002D9A  EFCF  F016         	goto	u8591
  7038  002D9E                     u8591:
  7039  002D9E  EFE3  F016         	goto	l7780
  7040  002DA2                     u8590:
  7041  002DA2  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7042  002DA4  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7043  002DA6  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7044  002DA8  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7045  002DAA  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7046  002DAC  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7047  002DAE  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7048  002DB0  6C06               	negf	___aodiv@dividend^0,c
  7049  002DB2  0E00               	movlw	0
  7050  002DB4  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7051  002DB6  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7052  002DB8  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7053  002DBA  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7054  002DBC  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7055  002DBE  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7056  002DC0  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7057  002DC2  0E01               	movlw	1
  7058  002DC4  1A17               	xorwf	___aodiv@sign^0,f,c
  7059  002DC6                     l7780:
  7060  002DC6  EE20  F018         	lfsr	2,___aodiv@quotient
  7061  002DCA  0E07               	movlw	7
  7062  002DCC                     u8601:
  7063  002DCC  6ADE               	clrf	postinc2,c
  7064  002DCE  06E8               	decf	wreg,f,c
  7065  002DD0  E2FD               	bc	u8601
  7066  002DD2  500E               	movf	___aodiv@divisor^0,w,c
  7067  002DD4  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7068  002DD6  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7069  002DD8  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7070  002DDA  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7071  002DDC  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7072  002DDE  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7073  002DE0  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7074  002DE2  B4D8               	btfsc	status,2,c
  7075  002DE4  EFF6  F016         	goto	u8611
  7076  002DE8  EFF8  F016         	goto	u8610
  7077  002DEC                     u8611:
  7078  002DEC  EF4A  F017         	goto	l7802
  7079  002DF0                     u8610:
  7080  002DF0  0E01               	movlw	1
  7081  002DF2  6E16               	movwf	___aodiv@counter^0,c
  7082  002DF4  EF06  F017         	goto	l7788
  7083  002DF8                     l7786:
  7084  002DF8  90D8               	bcf	status,0,c
  7085  002DFA  360E               	rlcf	___aodiv@divisor^0,f,c
  7086  002DFC  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7087  002DFE  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7088  002E00  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7089  002E02  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7090  002E04  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7091  002E06  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7092  002E08  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7093  002E0A  2A16               	incf	___aodiv@counter^0,f,c
  7094  002E0C                     l7788:
  7095  002E0C  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7096  002E0E  EF0B  F017         	goto	u8621
  7097  002E12  EF0D  F017         	goto	u8620
  7098  002E16                     u8621:
  7099  002E16  EFFC  F016         	goto	l7786
  7100  002E1A                     u8620:
  7101  002E1A                     l7790:
  7102  002E1A  90D8               	bcf	status,0,c
  7103  002E1C  3618               	rlcf	___aodiv@quotient^0,f,c
  7104  002E1E  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7105  002E20  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7106  002E22  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7107  002E24  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7108  002E26  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7109  002E28  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7110  002E2A  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7111  002E2C  500E               	movf	___aodiv@divisor^0,w,c
  7112  002E2E  5C06               	subwf	___aodiv@dividend^0,w,c
  7113  002E30  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7114  002E32  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7115  002E34  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7116  002E36  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7117  002E38  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7118  002E3A  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7119  002E3C  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7120  002E3E  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7121  002E40  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7122  002E42  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7123  002E44  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7124  002E46  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  7125  002E48  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7126  002E4A  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  7127  002E4C  A0D8               	btfss	status,0,c
  7128  002E4E  EF2B  F017         	goto	u8631
  7129  002E52  EF2D  F017         	goto	u8630
  7130  002E56                     u8631:
  7131  002E56  EF3E  F017         	goto	l7798
  7132  002E5A                     u8630:
  7133  002E5A  500E               	movf	___aodiv@divisor^0,w,c
  7134  002E5C  5E06               	subwf	___aodiv@dividend^0,f,c
  7135  002E5E  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7136  002E60  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  7137  002E62  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7138  002E64  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  7139  002E66  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7140  002E68  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  7141  002E6A  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7142  002E6C  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  7143  002E6E  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7144  002E70  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  7145  002E72  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7146  002E74  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  7147  002E76  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7148  002E78  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  7149  002E7A  8018               	bsf	___aodiv@quotient^0,0,c
  7150  002E7C                     l7798:
  7151  002E7C  90D8               	bcf	status,0,c
  7152  002E7E  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  7153  002E80  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  7154  002E82  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  7155  002E84  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  7156  002E86  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  7157  002E88  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  7158  002E8A  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  7159  002E8C  320E               	rrcf	___aodiv@divisor^0,f,c
  7160  002E8E  2E16               	decfsz	___aodiv@counter^0,f,c
  7161  002E90  EF0D  F017         	goto	l7790
  7162  002E94                     l7802:
  7163  002E94  5017               	movf	___aodiv@sign^0,w,c
  7164  002E96  B4D8               	btfsc	status,2,c
  7165  002E98  EF50  F017         	goto	u8641
  7166  002E9C  EF52  F017         	goto	u8640
  7167  002EA0                     u8641:
  7168  002EA0  EF62  F017         	goto	l7806
  7169  002EA4                     u8640:
  7170  002EA4  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  7171  002EA6  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  7172  002EA8  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  7173  002EAA  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  7174  002EAC  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  7175  002EAE  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  7176  002EB0  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  7177  002EB2  6C18               	negf	___aodiv@quotient^0,c
  7178  002EB4  0E00               	movlw	0
  7179  002EB6  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  7180  002EB8  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  7181  002EBA  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  7182  002EBC  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  7183  002EBE  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  7184  002EC0  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  7185  002EC2  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  7186  002EC4                     l7806:
  7187  002EC4  C018  F006         	movff	___aodiv@quotient,?___aodiv
  7188  002EC8  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  7189  002ECC  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  7190  002ED0  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  7191  002ED4  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  7192  002ED8  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  7193  002EDC  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  7194  002EE0  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  7195  002EE4  0012               	return		;funcret
  7196  002EE6                     __end_of___aodiv:
  7197                           	opt callstack 0
  7198                           
  7199 ;; *************** function _atoi *****************
  7200 ;; Defined at:
  7201 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7204 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  7205 ;;		 -> STR_3(34), 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  n               2   25[COMRAM] int 
  7208 ;;  neg             2   18[COMRAM] int 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  2   12[COMRAM] int 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7218 ;;      Params:         2       0       0       0       0       0       0       0       0
  7219 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7220 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7221 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7222 ;;Total ram usage:       15 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    3
  7225 ;; This function calls:
  7226 ;;		___wmul
  7227 ;;		_isdigit
  7228 ;;		_isspace
  7229 ;; This function is called by:
  7230 ;;		_vfpfcnvrt
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text24
  7235  002BCE                     __ptext24:
  7236                           	opt callstack 0
  7237  002BCE                     _atoi:
  7238                           	opt callstack 23
  7239  002BCE  0E00               	movlw	0
  7240  002BD0  6E1B               	movwf	(atoi@n+1)^0,c
  7241  002BD2  0E00               	movlw	0
  7242  002BD4  6E1A               	movwf	atoi@n^0,c
  7243  002BD6  0E00               	movlw	0
  7244  002BD8  6E14               	movwf	(atoi@neg+1)^0,c
  7245  002BDA  0E00               	movlw	0
  7246  002BDC  6E13               	movwf	atoi@neg^0,c
  7247  002BDE  EFF3  F015         	goto	l8730
  7248  002BE2                     l8728:
  7249  002BE2  4A0D               	infsnz	atoi@s^0,f,c
  7250  002BE4  2A0E               	incf	(atoi@s+1)^0,f,c
  7251  002BE6                     l8730:
  7252  002BE6  0E01               	movlw	1
  7253  002BE8  6E19               	movwf	_atoi$1411^0,c
  7254  002BEA  C00D  FFF6         	movff	atoi@s,tblptrl
  7255  002BEE  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7256  002BF2                     	if	0	;tblptru may be non-zero
  7257  002BF2                     	endif
  7258  002BF2                     	if	0	;tblptru may be non-zero
  7259  002BF2                     	endif
  7260  002BF2  0008               	tblrd		*
  7261  002BF4  50F5               	movf	tablat,w,c
  7262  002BF6  0A20               	xorlw	32
  7263  002BF8  B4D8               	btfsc	status,2,c
  7264  002BFA  EF01  F016         	goto	u10231
  7265  002BFE  EF03  F016         	goto	u10230
  7266  002C02                     u10231:
  7267  002C02  EF20  F016         	goto	l8738
  7268  002C06                     u10230:
  7269  002C06  0EF7               	movlw	247
  7270  002C08  6E0F               	movwf	??_atoi^0,c
  7271  002C0A  0EFF               	movlw	255
  7272  002C0C  6E10               	movwf	(??_atoi+1)^0,c
  7273  002C0E  C00D  FFF6         	movff	atoi@s,tblptrl
  7274  002C12  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7275  002C16                     	if	0	;tblptru may be non-zero
  7276  002C16                     	endif
  7277  002C16                     	if	0	;tblptru may be non-zero
  7278  002C16                     	endif
  7279  002C16  0008               	tblrd		*
  7280  002C18  50F5               	movf	tablat,w,c
  7281  002C1A  6E11               	movwf	(??_atoi+2)^0,c
  7282  002C1C  6A12               	clrf	(??_atoi+3)^0,c
  7283  002C1E  500F               	movf	??_atoi^0,w,c
  7284  002C20  2611               	addwf	(??_atoi+2)^0,f,c
  7285  002C22  5010               	movf	(??_atoi+1)^0,w,c
  7286  002C24  2212               	addwfc	(??_atoi+3)^0,f,c
  7287  002C26  5012               	movf	(??_atoi+3)^0,w,c
  7288  002C28  E109               	bnz	u10240
  7289  002C2A  0E05               	movlw	5
  7290  002C2C  5C11               	subwf	(??_atoi+2)^0,w,c
  7291  002C2E  A0D8               	btfss	status,0,c
  7292  002C30  EF1C  F016         	goto	u10241
  7293  002C34  EF1E  F016         	goto	u10240
  7294  002C38                     u10241:
  7295  002C38  EF20  F016         	goto	l8738
  7296  002C3C                     u10240:
  7297  002C3C  0E00               	movlw	0
  7298  002C3E  6E19               	movwf	_atoi$1411^0,c
  7299  002C40                     l8738:
  7300  002C40  C019  F015         	movff	_atoi$1411,_atoi$1410
  7301  002C44  6A16               	clrf	(_atoi$1410+1)^0,c
  7302  002C46  5015               	movf	_atoi$1410^0,w,c
  7303  002C48  1016               	iorwf	(_atoi$1410+1)^0,w,c
  7304  002C4A  A4D8               	btfss	status,2,c
  7305  002C4C  EF2A  F016         	goto	u10251
  7306  002C50  EF2C  F016         	goto	u10250
  7307  002C54                     u10251:
  7308  002C54  EFF1  F015         	goto	l8728
  7309  002C58                     u10250:
  7310  002C58  EF36  F016         	goto	l8748
  7311  002C5C                     l8744:
  7312  002C5C  0E00               	movlw	0
  7313  002C5E  6E14               	movwf	(atoi@neg+1)^0,c
  7314  002C60  0E01               	movlw	1
  7315  002C62  6E13               	movwf	atoi@neg^0,c
  7316  002C64                     l8746:
  7317  002C64  4A0D               	infsnz	atoi@s^0,f,c
  7318  002C66  2A0E               	incf	(atoi@s+1)^0,f,c
  7319  002C68  EF6B  F016         	goto	l8754
  7320  002C6C                     l8748:
  7321  002C6C  C00D  FFF6         	movff	atoi@s,tblptrl
  7322  002C70  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7323  002C74                     	if	0	;tblptru may be non-zero
  7324  002C74                     	endif
  7325  002C74                     	if	0	;tblptru may be non-zero
  7326  002C74                     	endif
  7327  002C74  0008               	tblrd		*
  7328  002C76  50F5               	movf	tablat,w,c
  7329  002C78  6E0F               	movwf	??_atoi^0,c
  7330  002C7A  6A10               	clrf	(??_atoi+1)^0,c
  7331                           
  7332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7333                           ; Switch size 1, requested type "simple"
  7334                           ; Number of cases is 1, Range of values is 0 to 0
  7335                           ; switch strategies available:
  7336                           ; Name         Instructions Cycles
  7337                           ; simple_byte            4     3 (average)
  7338                           ;	Chosen strategy is simple_byte
  7339  002C7C  5010               	movf	(??_atoi+1)^0,w,c
  7340  002C7E  0A00               	xorlw	0	; case 0
  7341  002C80  B4D8               	btfsc	status,2,c
  7342  002C82  EF45  F016         	goto	l10112
  7343  002C86  EF6B  F016         	goto	l8754
  7344  002C8A                     l10112:
  7345                           
  7346                           ; Switch size 1, requested type "simple"
  7347                           ; Number of cases is 2, Range of values is 43 to 45
  7348                           ; switch strategies available:
  7349                           ; Name         Instructions Cycles
  7350                           ; simple_byte            7     4 (average)
  7351                           ;	Chosen strategy is simple_byte
  7352  002C8A  500F               	movf	??_atoi^0,w,c
  7353  002C8C  0A2B               	xorlw	43	; case 43
  7354  002C8E  B4D8               	btfsc	status,2,c
  7355  002C90  EF32  F016         	goto	l8746
  7356  002C94  0A06               	xorlw	6	; case 45
  7357  002C96  B4D8               	btfsc	status,2,c
  7358  002C98  EF2E  F016         	goto	l8744
  7359  002C9C  EF6B  F016         	goto	l8754
  7360  002CA0                     l8750:
  7361  002CA0  C01A  F006         	movff	atoi@n,___wmul@multiplier
  7362  002CA4  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  7363  002CA8  0E00               	movlw	0
  7364  002CAA  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7365  002CAC  0E0A               	movlw	10
  7366  002CAE  6E08               	movwf	___wmul@multiplicand^0,c
  7367  002CB0  ECB7  F022         	call	___wmul	;wreg free
  7368  002CB4  C00D  FFF6         	movff	atoi@s,tblptrl
  7369  002CB8  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7370  002CBC                     	if	0	;tblptru may be non-zero
  7371  002CBC                     	endif
  7372  002CBC                     	if	0	;tblptru may be non-zero
  7373  002CBC                     	endif
  7374  002CBC  0008               	tblrd		*
  7375  002CBE  50F5               	movf	tablat,w,c
  7376  002CC0  5E06               	subwf	?___wmul^0,f,c
  7377  002CC2  0E00               	movlw	0
  7378  002CC4  5A07               	subwfb	(?___wmul+1)^0,f,c
  7379  002CC6  0E30               	movlw	48
  7380  002CC8  2406               	addwf	?___wmul^0,w,c
  7381  002CCA  6E1A               	movwf	atoi@n^0,c
  7382  002CCC  0E00               	movlw	0
  7383  002CCE  2007               	addwfc	(?___wmul+1)^0,w,c
  7384  002CD0  6E1B               	movwf	(atoi@n+1)^0,c
  7385  002CD2  EF32  F016         	goto	l8746
  7386  002CD6                     l8754:
  7387  002CD6  0ED0               	movlw	208
  7388  002CD8  6E0F               	movwf	??_atoi^0,c
  7389  002CDA  0EFF               	movlw	255
  7390  002CDC  6E10               	movwf	(??_atoi+1)^0,c
  7391  002CDE  C00D  FFF6         	movff	atoi@s,tblptrl
  7392  002CE2  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7393  002CE6                     	if	0	;tblptru may be non-zero
  7394  002CE6                     	endif
  7395  002CE6                     	if	0	;tblptru may be non-zero
  7396  002CE6                     	endif
  7397  002CE6  0008               	tblrd		*
  7398  002CE8  50F5               	movf	tablat,w,c
  7399  002CEA  6E11               	movwf	(??_atoi+2)^0,c
  7400  002CEC  6A12               	clrf	(??_atoi+3)^0,c
  7401  002CEE  500F               	movf	??_atoi^0,w,c
  7402  002CF0  2611               	addwf	(??_atoi+2)^0,f,c
  7403  002CF2  5010               	movf	(??_atoi+1)^0,w,c
  7404  002CF4  2212               	addwfc	(??_atoi+3)^0,f,c
  7405  002CF6  5012               	movf	(??_atoi+3)^0,w,c
  7406  002CF8  E10A               	bnz	u10260
  7407  002CFA  0E0A               	movlw	10
  7408  002CFC  5C11               	subwf	(??_atoi+2)^0,w,c
  7409  002CFE  A0D8               	btfss	status,0,c
  7410  002D00  EF84  F016         	goto	u10261
  7411  002D04  EF87  F016         	goto	u10260
  7412  002D08                     u10261:
  7413  002D08  0E01               	movlw	1
  7414  002D0A  EF88  F016         	goto	u10270
  7415  002D0E                     u10260:
  7416  002D0E  0E00               	movlw	0
  7417  002D10                     u10270:
  7418  002D10  6E17               	movwf	_atoi$1412^0,c
  7419  002D12  6A18               	clrf	(_atoi$1412+1)^0,c
  7420  002D14  5017               	movf	_atoi$1412^0,w,c
  7421  002D16  1018               	iorwf	(_atoi$1412+1)^0,w,c
  7422  002D18  A4D8               	btfss	status,2,c
  7423  002D1A  EF91  F016         	goto	u10281
  7424  002D1E  EF93  F016         	goto	u10280
  7425  002D22                     u10281:
  7426  002D22  EF50  F016         	goto	l8750
  7427  002D26                     u10280:
  7428  002D26  5013               	movf	atoi@neg^0,w,c
  7429  002D28  1014               	iorwf	(atoi@neg+1)^0,w,c
  7430  002D2A  A4D8               	btfss	status,2,c
  7431  002D2C  EF9A  F016         	goto	u10291
  7432  002D30  EF9C  F016         	goto	u10290
  7433  002D34                     u10291:
  7434  002D34  EFAA  F016         	goto	l1609
  7435  002D38                     u10290:
  7436  002D38  C01A  F00F         	movff	atoi@n,??_atoi
  7437  002D3C  C01B  F010         	movff	atoi@n+1,??_atoi+1
  7438  002D40  1E0F               	comf	??_atoi^0,f,c
  7439  002D42  1E10               	comf	(??_atoi+1)^0,f,c
  7440  002D44  4A0F               	infsnz	??_atoi^0,f,c
  7441  002D46  2A10               	incf	(??_atoi+1)^0,f,c
  7442  002D48  C00F  F00D         	movff	??_atoi,?_atoi
  7443  002D4C  C010  F00E         	movff	??_atoi+1,?_atoi+1
  7444  002D50  EFAE  F016         	goto	l1612
  7445  002D54                     l1609:
  7446  002D54  C01A  F00D         	movff	atoi@n,?_atoi
  7447  002D58  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  7448  002D5C                     l1612:
  7449  002D5C  0012               	return		;funcret
  7450  002D5E                     __end_of_atoi:
  7451                           	opt callstack 0
  7452                           
  7453 ;; *************** function _isspace *****************
  7454 ;; Defined at:
  7455 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  c               2    5[COMRAM] int 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  2    5[COMRAM] int 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7469 ;;      Params:         2       0       0       0       0       0       0       0       0
  7470 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7471 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7472 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7473 ;;Total ram usage:        7 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    2
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_atoi
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text25
  7484  004260                     __ptext25:
  7485                           	opt callstack 0
  7486  004260                     _isspace:
  7487                           	opt callstack 23
  7488  004260  0E01               	movlw	1
  7489  004262  6E0C               	movwf	_isspace$1441^0,c
  7490  004264  0E20               	movlw	32
  7491  004266  1806               	xorwf	isspace@c^0,w,c
  7492  004268  1007               	iorwf	(isspace@c+1)^0,w,c
  7493  00426A  B4D8               	btfsc	status,2,c
  7494  00426C  EF3A  F021         	goto	u9511
  7495  004270  EF3C  F021         	goto	u9510
  7496  004274                     u9511:
  7497  004274  EF55  F021         	goto	l8344
  7498  004278                     u9510:
  7499  004278  0EF7               	movlw	247
  7500  00427A  6E08               	movwf	??_isspace^0,c
  7501  00427C  0EFF               	movlw	255
  7502  00427E  6E09               	movwf	(??_isspace+1)^0,c
  7503  004280  C006  F00A         	movff	isspace@c,??_isspace+2
  7504  004284  C007  F00B         	movff	isspace@c+1,??_isspace+3
  7505  004288  5008               	movf	??_isspace^0,w,c
  7506  00428A  260A               	addwf	(??_isspace+2)^0,f,c
  7507  00428C  5009               	movf	(??_isspace+1)^0,w,c
  7508  00428E  220B               	addwfc	(??_isspace+3)^0,f,c
  7509  004290  500B               	movf	(??_isspace+3)^0,w,c
  7510  004292  E109               	bnz	u9520
  7511  004294  0E05               	movlw	5
  7512  004296  5C0A               	subwf	(??_isspace+2)^0,w,c
  7513  004298  A0D8               	btfss	status,0,c
  7514  00429A  EF51  F021         	goto	u9521
  7515  00429E  EF53  F021         	goto	u9520
  7516  0042A2                     u9521:
  7517  0042A2  EF55  F021         	goto	l8344
  7518  0042A6                     u9520:
  7519  0042A6  0E00               	movlw	0
  7520  0042A8  6E0C               	movwf	_isspace$1441^0,c
  7521  0042AA                     l8344:
  7522  0042AA  C00C  F006         	movff	_isspace$1441,?_isspace
  7523  0042AE  6A07               	clrf	(?_isspace+1)^0,c
  7524  0042B0  0012               	return		;funcret
  7525  0042B2                     __end_of_isspace:
  7526                           	opt callstack 0
  7527                           
  7528 ;; *************** function _isdigit *****************
  7529 ;; Defined at:
  7530 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  c               2    5[COMRAM] int 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;		None
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  2    5[COMRAM] int 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7544 ;;      Params:         2       0       0       0       0       0       0       0       0
  7545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7546 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7547 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7548 ;;Total ram usage:        6 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    2
  7551 ;; This function calls:
  7552 ;;		Nothing
  7553 ;; This function is called by:
  7554 ;;		_vfpfcnvrt
  7555 ;;		_atoi
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text26
  7560  0044A0                     __ptext26:
  7561                           	opt callstack 0
  7562  0044A0                     _isdigit:
  7563                           	opt callstack 24
  7564  0044A0  0ED0               	movlw	208
  7565  0044A2  6E08               	movwf	??_isdigit^0,c
  7566  0044A4  0EFF               	movlw	255
  7567  0044A6  6E09               	movwf	(??_isdigit+1)^0,c
  7568  0044A8  C006  F00A         	movff	isdigit@c,??_isdigit+2
  7569  0044AC  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  7570  0044B0  5008               	movf	??_isdigit^0,w,c
  7571  0044B2  260A               	addwf	(??_isdigit+2)^0,f,c
  7572  0044B4  5009               	movf	(??_isdigit+1)^0,w,c
  7573  0044B6  220B               	addwfc	(??_isdigit+3)^0,f,c
  7574  0044B8  500B               	movf	(??_isdigit+3)^0,w,c
  7575  0044BA  E10A               	bnz	u8560
  7576  0044BC  0E0A               	movlw	10
  7577  0044BE  5C0A               	subwf	(??_isdigit+2)^0,w,c
  7578  0044C0  A0D8               	btfss	status,0,c
  7579  0044C2  EF65  F022         	goto	u8561
  7580  0044C6  EF68  F022         	goto	u8560
  7581  0044CA                     u8561:
  7582  0044CA  0E01               	movlw	1
  7583  0044CC  EF69  F022         	goto	u8570
  7584  0044D0                     u8560:
  7585  0044D0  0E00               	movlw	0
  7586  0044D2                     u8570:
  7587  0044D2  6E06               	movwf	?_isdigit^0,c
  7588  0044D4  6A07               	clrf	(?_isdigit+1)^0,c
  7589  0044D6  0012               	return		;funcret
  7590  0044D8                     __end_of_isdigit:
  7591                           	opt callstack 0
  7592                           
  7593 ;; *************** function _UART_printf *****************
  7594 ;; Defined at:
  7595 ;;		line 47 in file "./UART.h"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  cadena          2    6[COMRAM] PTR unsigned char 
  7598 ;;		 -> STR_13(63), STR_12(56), STR_10(6), STR_9(9), 
  7599 ;;		 -> STR_8(11), STR_7(10), buffer(50), STR_2(25), 
  7600 ;;		 -> STR_1(24), 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7612 ;;      Params:         2       0       0       0       0       0       0       0       0
  7613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7615 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7616 ;;Total ram usage:        2 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    3
  7619 ;; This function calls:
  7620 ;;		_UART_write
  7621 ;; This function is called by:
  7622 ;;		_visualizarPasosRealizados
  7623 ;;		_probarSensores
  7624 ;;		_probarUltrasonico
  7625 ;;		_comportamientoBasico
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text27
  7630  0040A8                     __ptext27:
  7631                           	opt callstack 0
  7632  0040A8                     _UART_printf:
  7633                           	opt callstack 26
  7634  0040A8                     
  7635                           ;./UART.h: 48:     while (*cadena) {
  7636  0040A8  EF6A  F020         	goto	l9014
  7637  0040AC                     l9010:
  7638                           
  7639                           ;./UART.h: 49:         UART_write(*cadena++);
  7640  0040AC  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7641  0040B0  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7642  0040B4  6AF8               	clrf	tblptru,c
  7643  0040B6  0E07               	movlw	(high __ramtop+-1)
  7644  0040B8  64F7               	cpfsgt	tblptrh,c
  7645  0040BA  D003               	bra	u10757
  7646  0040BC  0008               	tblrd		*
  7647  0040BE  50F5               	movf	tablat,w,c
  7648  0040C0  D005               	bra	u10750
  7649  0040C2                     u10757:
  7650  0040C2  CFF6 FFE9          	movff	tblptrl,fsr0l
  7651  0040C6  CFF7 FFEA          	movff	tblptrh,fsr0h
  7652  0040CA  50EF               	movf	indf0,w,c
  7653  0040CC                     u10750:
  7654  0040CC  ECF9  F022         	call	_UART_write
  7655  0040D0  4A07               	infsnz	UART_printf@cadena^0,f,c
  7656  0040D2  2A08               	incf	(UART_printf@cadena+1)^0,f,c
  7657  0040D4                     l9014:
  7658                           
  7659                           ;./UART.h: 48:     while (*cadena) {
  7660  0040D4  C007  FFF6         	movff	UART_printf@cadena,tblptrl
  7661  0040D8  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7662  0040DC  6AF8               	clrf	tblptru,c
  7663  0040DE  0E07               	movlw	(high __ramtop+-1)
  7664  0040E0  64F7               	cpfsgt	tblptrh,c
  7665  0040E2  D003               	bra	u10767
  7666  0040E4  0008               	tblrd		*
  7667  0040E6  50F5               	movf	tablat,w,c
  7668  0040E8  D005               	bra	u10760
  7669  0040EA                     u10767:
  7670  0040EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7671  0040EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7672  0040F2  50EF               	movf	indf0,w,c
  7673  0040F4                     u10760:
  7674  0040F4  0900               	iorlw	0
  7675  0040F6  A4D8               	btfss	status,2,c
  7676  0040F8  EF80  F020         	goto	u10771
  7677  0040FC  EF82  F020         	goto	u10770
  7678  004100                     u10771:
  7679  004100  EF56  F020         	goto	l9010
  7680  004104                     u10770:
  7681  004104  0012               	return		;funcret
  7682  004106                     __end_of_UART_printf:
  7683                           	opt callstack 0
  7684                           
  7685 ;; *************** function _UART_write *****************
  7686 ;; Defined at:
  7687 ;;		line 42 in file "./UART.h"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  dato            1    wreg     unsigned char 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;  dato            1    5[COMRAM] unsigned char 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7701 ;;      Params:         0       0       0       0       0       0       0       0       0
  7702 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7704 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7705 ;;Total ram usage:        1 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    2
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_UART_printf
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text28
  7716  0045F2                     __ptext28:
  7717                           	opt callstack 0
  7718  0045F2                     _UART_write:
  7719                           	opt callstack 26
  7720                           
  7721                           ;incstack = 0
  7722                           ;UART_write@dato stored from wreg
  7723  0045F2  6E06               	movwf	UART_write@dato^0,c
  7724  0045F4                     
  7725                           ;./UART.h: 43:     TXREG = dato;
  7726  0045F4  C006  FFAD         	movff	UART_write@dato,4013	;volatile
  7727  0045F8                     l226:
  7728  0045F8  A2AC               	btfss	172,1,c	;volatile
  7729  0045FA  EF01  F023         	goto	u10641
  7730  0045FE  EF03  F023         	goto	u10640
  7731  004602                     u10641:
  7732  004602  EFFC  F022         	goto	l226
  7733  004606                     u10640:
  7734  004606  0012               	return		;funcret
  7735  004608                     __end_of_UART_write:
  7736                           	opt callstack 0
  7737                           
  7738 ;; *************** function _probarPID *****************
  7739 ;; Defined at:
  7740 ;;		line 1140 in file "main.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;		None
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  1    wreg      void 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7754 ;;      Params:         0       0       0       0       0       0       0       0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7757 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7758 ;;Total ram usage:        0 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    8
  7761 ;; This function calls:
  7762 ;;		_PID
  7763 ;;		___flge
  7764 ;;		_finalizarRecorrido
  7765 ;;		_leerSensores
  7766 ;;		_mover
  7767 ;; This function is called by:
  7768 ;;		_main
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text29
  7773  004302                     __ptext29:
  7774                           	opt callstack 0
  7775  004302                     _probarPID:
  7776                           	opt callstack 22
  7777  004302                     
  7778                           ;main.c: 1142:     leerSensores();
  7779  004302  EC73  F017         	call	_leerSensores	;wreg free
  7780                           
  7781                           ;main.c: 1144:     if (sensorEnfrente > 5) {
  7782  004306  0E00               	movlw	0
  7783  004308  6E34               	movwf	___flge@ff1^0,c
  7784  00430A  0E00               	movlw	0
  7785  00430C  6E35               	movwf	(___flge@ff1+1)^0,c
  7786  00430E  0EA0               	movlw	160
  7787  004310  6E36               	movwf	(___flge@ff1+2)^0,c
  7788  004312  0E40               	movlw	64
  7789  004314  6E37               	movwf	(___flge@ff1+3)^0,c
  7790  004316  C124  F038         	movff	_sensorEnfrente,___flge@ff2
  7791  00431A  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
  7792  00431E  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
  7793  004322  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
  7794  004326  EC9E  F01A         	call	___flge	;wreg free
  7795  00432A  B0D8               	btfsc	status,0,c
  7796  00432C  EF9A  F021         	goto	u10821
  7797  004330  EF9C  F021         	goto	u10820
  7798  004334                     u10821:
  7799  004334  EFA5  F021         	goto	l9192
  7800  004338                     u10820:
  7801  004338                     
  7802                           ;main.c: 1145:         PID();
  7803  004338  EC08  F012         	call	_PID	;wreg free
  7804  00433C                     
  7805                           ;main.c: 1146:         mouse.curr_state = ENFRENTE;
  7806  00433C  0E01               	movlw	1
  7807  00433E  0100               	movlb	0	; () banked
  7808  004340  6FF9               	movwf	_mouse& (0+255),b
  7809  004342                     
  7810                           ; BSR set to: 0
  7811                           ;main.c: 1147:         mover();
  7812  004342  EC8E  F01E         	call	_mover	;wreg free
  7813                           
  7814                           ;main.c: 1148:     } else
  7815  004346  EFA7  F021         	goto	l670
  7816  00434A                     l9192:
  7817                           
  7818                           ;main.c: 1149:         finalizarRecorrido();
  7819  00434A  ECED  F022         	call	_finalizarRecorrido	;wreg free
  7820  00434E                     l670:
  7821  00434E  0012               	return		;funcret
  7822  004350                     __end_of_probarPID:
  7823                           	opt callstack 0
  7824                           
  7825 ;; *************** function _mover *****************
  7826 ;; Defined at:
  7827 ;;		line 546 in file "main.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;		None
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7841 ;;      Params:         0       0       0       0       0       0       0       0       0
  7842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7843 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7844 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7845 ;;Total ram usage:        2 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; Hardware stack levels required when called:    2
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_probarPID
  7852 ;;		_probarGirosAuto
  7853 ;;		_regresarPuntoPartida
  7854 ;;		_regresarAlCruce
  7855 ;;		_recorrerCaminoEncontrado
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text30
  7860  003D1C                     __ptext30:
  7861                           	opt callstack 0
  7862  003D1C                     _mover:
  7863                           	opt callstack 27
  7864  003D1C                     
  7865                           ;main.c: 548:     switch (mouse.curr_state) {
  7866  003D1C  EFB3  F01E         	goto	l9052
  7867  003D20                     l424:
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;main.c: 552:             LATB4 = 1;
  7871  003D20  888A               	bsf	3978,4,c	;volatile
  7872                           
  7873                           ;main.c: 553:             LATB5 = 0;
  7874  003D22  9A8A               	bcf	3978,5,c	;volatile
  7875                           
  7876                           ;main.c: 554:             LATB6 = 1;
  7877  003D24  8C8A               	bsf	3978,6,c	;volatile
  7878                           
  7879                           ;main.c: 555:             LATB7 = 0;
  7880  003D26  9E8A               	bcf	3978,7,c	;volatile
  7881                           
  7882                           ;main.c: 557:             break;
  7883  003D28  EFD1  F01E         	goto	l429
  7884  003D2C                     l426:
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;main.c: 561:             LATB4 = 0;
  7888  003D2C  988A               	bcf	3978,4,c	;volatile
  7889                           
  7890                           ;main.c: 562:             LATB5 = 0;
  7891  003D2E  9A8A               	bcf	3978,5,c	;volatile
  7892                           
  7893                           ;main.c: 563:             LATB6 = 1;
  7894  003D30  8C8A               	bsf	3978,6,c	;volatile
  7895                           
  7896                           ;main.c: 564:             LATB7 = 0;
  7897  003D32  9E8A               	bcf	3978,7,c	;volatile
  7898  003D34                     l9046:
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;main.c: 566:             _delay((unsigned long)((410)*(4000000/4000.0)));
  7902  003D34  0E03               	movlw	3
  7903  003D36  6E07               	movwf	(??_mover+1)^0,c
  7904  003D38  0E15               	movlw	21
  7905  003D3A  6E06               	movwf	??_mover^0,c
  7906  003D3C  0E74               	movlw	116
  7907  003D3E                     u11517:
  7908  003D3E  2EE8               	decfsz	wreg,f,c
  7909  003D40  D7FE               	bra	u11517
  7910  003D42  2E06               	decfsz	??_mover^0,f,c
  7911  003D44  D7FC               	bra	u11517
  7912  003D46  2E07               	decfsz	(??_mover+1)^0,f,c
  7913  003D48  D7FA               	bra	u11517
  7914                           
  7915                           ;main.c: 568:             break;
  7916  003D4A  EFD1  F01E         	goto	l429
  7917  003D4E                     l427:
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;main.c: 572:             LATB4 = 1;
  7921  003D4E  888A               	bsf	3978,4,c	;volatile
  7922                           
  7923                           ;main.c: 573:             LATB5 = 0;
  7924  003D50  9A8A               	bcf	3978,5,c	;volatile
  7925                           
  7926                           ;main.c: 574:             LATB6 = 0;
  7927  003D52  9C8A               	bcf	3978,6,c	;volatile
  7928                           
  7929                           ;main.c: 575:             LATB7 = 0;
  7930  003D54  9E8A               	bcf	3978,7,c	;volatile
  7931  003D56  EF9A  F01E         	goto	l9046
  7932  003D5A                     l428:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;main.c: 583:             LATB4 = 0;
  7936  003D5A  988A               	bcf	3978,4,c	;volatile
  7937                           
  7938                           ;main.c: 584:             LATB5 = 0;
  7939  003D5C  9A8A               	bcf	3978,5,c	;volatile
  7940                           
  7941                           ;main.c: 585:             LATB6 = 0;
  7942  003D5E  9C8A               	bcf	3978,6,c	;volatile
  7943                           
  7944                           ;main.c: 586:             LATB7 = 0;
  7945  003D60  9E8A               	bcf	3978,7,c	;volatile
  7946                           
  7947                           ;main.c: 588:             break;
  7948  003D62  EFD1  F01E         	goto	l429
  7949  003D66                     l9052:
  7950  003D66  0100               	movlb	0	; () banked
  7951  003D68  51F9               	movf	_mouse& (0+255),w,b
  7952  003D6A  6E06               	movwf	??_mover^0,c
  7953  003D6C  6A07               	clrf	(??_mover+1)^0,c
  7954                           
  7955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7956                           ; Switch size 1, requested type "simple"
  7957                           ; Number of cases is 1, Range of values is 0 to 0
  7958                           ; switch strategies available:
  7959                           ; Name         Instructions Cycles
  7960                           ; simple_byte            4     3 (average)
  7961                           ;	Chosen strategy is simple_byte
  7962  003D6E  5007               	movf	(??_mover+1)^0,w,c
  7963  003D70  0A00               	xorlw	0	; case 0
  7964  003D72  B4D8               	btfsc	status,2,c
  7965  003D74  EFBE  F01E         	goto	l10114
  7966  003D78  EFD1  F01E         	goto	l429
  7967  003D7C                     l10114:
  7968                           
  7969                           ; BSR set to: 0
  7970                           ; Switch size 1, requested type "simple"
  7971                           ; Number of cases is 4, Range of values is 1 to 4
  7972                           ; switch strategies available:
  7973                           ; Name         Instructions Cycles
  7974                           ; simple_byte           13     7 (average)
  7975                           ;	Chosen strategy is simple_byte
  7976  003D7C  5006               	movf	??_mover^0,w,c
  7977  003D7E  0A01               	xorlw	1	; case 1
  7978  003D80  B4D8               	btfsc	status,2,c
  7979  003D82  EF90  F01E         	goto	l424
  7980  003D86  0A03               	xorlw	3	; case 2
  7981  003D88  B4D8               	btfsc	status,2,c
  7982  003D8A  EF96  F01E         	goto	l426
  7983  003D8E  0A01               	xorlw	1	; case 3
  7984  003D90  B4D8               	btfsc	status,2,c
  7985  003D92  EFA7  F01E         	goto	l427
  7986  003D96  0A07               	xorlw	7	; case 4
  7987  003D98  B4D8               	btfsc	status,2,c
  7988  003D9A  EFAD  F01E         	goto	l428
  7989  003D9E  EFD1  F01E         	goto	l429
  7990  003DA2                     l429:
  7991  003DA2  0012               	return		;funcret
  7992  003DA4                     __end_of_mover:
  7993                           	opt callstack 0
  7994                           
  7995 ;; *************** function _leerSensores *****************
  7996 ;; Defined at:
  7997 ;;		line 1087 in file "main.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;		None
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;		None
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  1    wreg      void 
  8004 ;; Registers used:
  8005 ;;		wreg, status,2, status,0, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8011 ;;      Params:         0       0       0       0       0       0       0       0       0
  8012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8014 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8015 ;;Total ram usage:        0 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:    4
  8018 ;; This function calls:
  8019 ;;		___fladd
  8020 ;;		___fldiv
  8021 ;;		_dameDistancia
  8022 ;; This function is called by:
  8023 ;;		_probarPID
  8024 ;;		_probarSensores
  8025 ;;		_comportamientoBasico
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           	psect	text31
  8030  002EE6                     __ptext31:
  8031                           	opt callstack 0
  8032  002EE6                     _leerSensores:
  8033                           	opt callstack 25
  8034  002EE6                     
  8035                           ;main.c: 1089:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  8036  002EE6  C120  F038         	movff	_oldSensorDerecha,___fladd@a
  8037  002EEA  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
  8038  002EEE  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
  8039  002EF2  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
  8040  002EF6  0E03               	movlw	3
  8041  002EF8  ECE3  F018         	call	_dameDistancia
  8042  002EFC  C01B  F034         	movff	?_dameDistancia,___fladd@b
  8043  002F00  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  8044  002F04  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  8045  002F08  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  8046  002F0C  EC7D  F008         	call	___fladd	;wreg free
  8047  002F10  C034  F044         	movff	?___fladd,___fldiv@b
  8048  002F14  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  8049  002F18  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  8050  002F1C  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  8051  002F20  0E00               	movlw	0
  8052  002F22  6E48               	movwf	___fldiv@a^0,c
  8053  002F24  0E00               	movlw	0
  8054  002F26  6E49               	movwf	(___fldiv@a+1)^0,c
  8055  002F28  0E00               	movlw	0
  8056  002F2A  6E4A               	movwf	(___fldiv@a+2)^0,c
  8057  002F2C  0E40               	movlw	64
  8058  002F2E  6E4B               	movwf	(___fldiv@a+3)^0,c
  8059  002F30  ECCB  F00E         	call	___fldiv	;wreg free
  8060  002F34  C044  F12C         	movff	?___fldiv,_sensorDerecha
  8061  002F38  C045  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  8062  002F3C  C046  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  8063  002F40  C047  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  8064                           
  8065                           ;main.c: 1090:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  8066  002F44  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
  8067  002F48  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
  8068  002F4C  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
  8069  002F50  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
  8070  002F54  0E02               	movlw	2
  8071  002F56  ECE3  F018         	call	_dameDistancia
  8072  002F5A  C01B  F034         	movff	?_dameDistancia,___fladd@b
  8073  002F5E  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  8074  002F62  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  8075  002F66  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  8076  002F6A  EC7D  F008         	call	___fladd	;wreg free
  8077  002F6E  C034  F044         	movff	?___fladd,___fldiv@b
  8078  002F72  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  8079  002F76  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  8080  002F7A  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  8081  002F7E  0E00               	movlw	0
  8082  002F80  6E48               	movwf	___fldiv@a^0,c
  8083  002F82  0E00               	movlw	0
  8084  002F84  6E49               	movwf	(___fldiv@a+1)^0,c
  8085  002F86  0E00               	movlw	0
  8086  002F88  6E4A               	movwf	(___fldiv@a+2)^0,c
  8087  002F8A  0E40               	movlw	64
  8088  002F8C  6E4B               	movwf	(___fldiv@a+3)^0,c
  8089  002F8E  ECCB  F00E         	call	___fldiv	;wreg free
  8090  002F92  C044  F128         	movff	?___fldiv,_sensorIzquierda
  8091  002F96  C045  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  8092  002F9A  C046  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  8093  002F9E  C047  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  8094                           
  8095                           ;main.c: 1091:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  8096  002FA2  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
  8097  002FA6  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
  8098  002FAA  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
  8099  002FAE  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
  8100  002FB2  0E01               	movlw	1
  8101  002FB4  ECE3  F018         	call	_dameDistancia
  8102  002FB8  C01B  F034         	movff	?_dameDistancia,___fladd@b
  8103  002FBC  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  8104  002FC0  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  8105  002FC4  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  8106  002FC8  EC7D  F008         	call	___fladd	;wreg free
  8107  002FCC  C034  F044         	movff	?___fladd,___fldiv@b
  8108  002FD0  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  8109  002FD4  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  8110  002FD8  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  8111  002FDC  0E00               	movlw	0
  8112  002FDE  6E48               	movwf	___fldiv@a^0,c
  8113  002FE0  0E00               	movlw	0
  8114  002FE2  6E49               	movwf	(___fldiv@a+1)^0,c
  8115  002FE4  0E00               	movlw	0
  8116  002FE6  6E4A               	movwf	(___fldiv@a+2)^0,c
  8117  002FE8  0E40               	movlw	64
  8118  002FEA  6E4B               	movwf	(___fldiv@a+3)^0,c
  8119  002FEC  ECCB  F00E         	call	___fldiv	;wreg free
  8120  002FF0  C044  F124         	movff	?___fldiv,_sensorEnfrente
  8121  002FF4  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  8122  002FF8  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  8123  002FFC  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  8124  003000                     
  8125                           ;main.c: 1093:     oldSensorDerecha = sensorDerecha;
  8126  003000  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  8127  003004  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  8128  003008  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  8129  00300C  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  8130  003010                     
  8131                           ;main.c: 1094:     oldSensorIzquierda = sensorIzquierda;
  8132  003010  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  8133  003014  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  8134  003018  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  8135  00301C  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  8136  003020                     
  8137                           ;main.c: 1095:     oldSensorEnfrente = sensorEnfrente;
  8138  003020  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  8139  003024  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  8140  003028  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  8141  00302C  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  8142  003030                     
  8143                           ;main.c: 1100:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  8144  003030  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  8145  003034  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  8146  003038  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  8147  00303C  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  8148  003040                     
  8149                           ;main.c: 1109:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  8150  003040  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  8151  003044  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  8152  003048  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  8153  00304C  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  8154  003050                     
  8155                           ;main.c: 1112:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  8156  003050  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  8157  003054  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  8158  003058  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  8159  00305C  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  8160  003060  0012               	return		;funcret
  8161  003062                     __end_of_leerSensores:
  8162                           	opt callstack 0
  8163                           
  8164 ;; *************** function _finalizarRecorrido *****************
  8165 ;; Defined at:
  8166 ;;		line 456 in file "main.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;		None
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      void 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8180 ;;      Params:         0       0       0       0       0       0       0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8183 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8184 ;;Total ram usage:        0 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    7
  8187 ;; This function calls:
  8188 ;;		_forzarEspejeoAuto
  8189 ;;		_forzarParoAuto
  8190 ;;		_forzarReversa
  8191 ;;		_velocidadEstandar
  8192 ;; This function is called by:
  8193 ;;		_probarPID
  8194 ;;		_comportamientoBasico
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text32
  8199  0045DA                     __ptext32:
  8200                           	opt callstack 0
  8201  0045DA                     _finalizarRecorrido:
  8202                           	opt callstack 22
  8203  0045DA                     
  8204                           ;main.c: 457:     velocidadEstandar();
  8205  0045DA  ECCA  F022         	call	_velocidadEstandar	;wreg free
  8206  0045DE                     
  8207                           ;main.c: 458:     forzarReversa();
  8208  0045DE  ECDD  F022         	call	_forzarReversa	;wreg free
  8209  0045E2                     
  8210                           ;main.c: 459:     forzarEspejeoAuto();
  8211  0045E2  ECA3  F022         	call	_forzarEspejeoAuto	;wreg free
  8212  0045E6                     
  8213                           ;main.c: 460:     forzarParoAuto();
  8214  0045E6  EC04  F023         	call	_forzarParoAuto	;wreg free
  8215  0045EA                     
  8216                           ;main.c: 461:     pausa = 1;
  8217  0045EA  0E01               	movlw	1
  8218  0045EC  0101               	movlb	1	; () banked
  8219  0045EE  6FD0               	movwf	_pausa& (0+255),b
  8220  0045F0                     
  8221                           ; BSR set to: 1
  8222  0045F0  0012               	return		;funcret
  8223  0045F2                     __end_of_finalizarRecorrido:
  8224                           	opt callstack 0
  8225                           
  8226 ;; *************** function _forzarReversa *****************
  8227 ;; Defined at:
  8228 ;;		line 473 in file "main.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8244 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8245 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8246 ;;Total ram usage:        2 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    2
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_finalizarRecorrido
  8253 ;;		_comportamientoBasico
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text33
  8258  0045BA                     __ptext33:
  8259                           	opt callstack 0
  8260  0045BA                     _forzarReversa:
  8261                           	opt callstack 26
  8262  0045BA                     
  8263                           ;main.c: 474:     LATB4 = 0;
  8264  0045BA  988A               	bcf	3978,4,c	;volatile
  8265                           
  8266                           ;main.c: 475:     LATB5 = 1;
  8267  0045BC  8A8A               	bsf	3978,5,c	;volatile
  8268                           
  8269                           ;main.c: 476:     LATB6 = 0;
  8270  0045BE  9C8A               	bcf	3978,6,c	;volatile
  8271                           
  8272                           ;main.c: 477:     LATB7 = 1;
  8273  0045C0  8E8A               	bsf	3978,7,c	;volatile
  8274  0045C2                     
  8275                           ;main.c: 479:     _delay((unsigned long)((600)*(4000000/4000.0)));
  8276  0045C2  0E04               	movlw	4
  8277  0045C4  6E07               	movwf	(??_forzarReversa+1)^0,c
  8278  0045C6  0E0C               	movlw	12
  8279  0045C8  6E06               	movwf	??_forzarReversa^0,c
  8280  0045CA  0E34               	movlw	52
  8281  0045CC                     u11527:
  8282  0045CC  2EE8               	decfsz	wreg,f,c
  8283  0045CE  D7FE               	bra	u11527
  8284  0045D0  2E06               	decfsz	??_forzarReversa^0,f,c
  8285  0045D2  D7FC               	bra	u11527
  8286  0045D4  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  8287  0045D6  D7FA               	bra	u11527
  8288  0045D8  0012               	return		;funcret
  8289  0045DA                     __end_of_forzarReversa:
  8290                           	opt callstack 0
  8291                           
  8292 ;; *************** function _forzarParoAuto *****************
  8293 ;; Defined at:
  8294 ;;		line 465 in file "main.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		None
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8308 ;;      Params:         0       0       0       0       0       0       0       0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8311 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    2
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_finalizarRecorrido
  8319 ;;		_main
  8320 ;;		_comportamientoBasico
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text34
  8325  004608                     __ptext34:
  8326                           	opt callstack 0
  8327  004608                     _forzarParoAuto:
  8328                           	opt callstack 26
  8329  004608                     
  8330                           ;main.c: 467:     LATB4 = 0;
  8331  004608  988A               	bcf	3978,4,c	;volatile
  8332                           
  8333                           ;main.c: 468:     LATB5 = 0;
  8334  00460A  9A8A               	bcf	3978,5,c	;volatile
  8335                           
  8336                           ;main.c: 469:     LATB6 = 0;
  8337  00460C  9C8A               	bcf	3978,6,c	;volatile
  8338                           
  8339                           ;main.c: 470:     LATB7 = 0;
  8340  00460E  9E8A               	bcf	3978,7,c	;volatile
  8341  004610  0012               	return		;funcret
  8342  004612                     __end_of_forzarParoAuto:
  8343                           	opt callstack 0
  8344                           
  8345 ;; *************** function _forzarEspejeoAuto *****************
  8346 ;; Defined at:
  8347 ;;		line 483 in file "main.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;		None
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8363 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8364 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8365 ;;Total ram usage:        2 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:    6
  8368 ;; This function calls:
  8369 ;;		_velocidadEstandar
  8370 ;; This function is called by:
  8371 ;;		_finalizarRecorrido
  8372 ;;		_comportamientoBasico
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text35
  8377  004546                     __ptext35:
  8378                           	opt callstack 0
  8379  004546                     _forzarEspejeoAuto:
  8380                           	opt callstack 22
  8381  004546                     
  8382                           ;main.c: 485:     velocidadEstandar();
  8383  004546  ECCA  F022         	call	_velocidadEstandar	;wreg free
  8384  00454A                     
  8385                           ;main.c: 487:     LATB4 = 0;
  8386  00454A  988A               	bcf	3978,4,c	;volatile
  8387  00454C                     
  8388                           ;main.c: 488:     LATB5 = 0;
  8389  00454C  9A8A               	bcf	3978,5,c	;volatile
  8390  00454E                     
  8391                           ;main.c: 489:     LATB6 = 1;
  8392  00454E  8C8A               	bsf	3978,6,c	;volatile
  8393  004550                     
  8394                           ;main.c: 490:     LATB7 = 0;
  8395  004550  9E8A               	bcf	3978,7,c	;volatile
  8396  004552                     
  8397                           ;main.c: 491:     _delay((unsigned long)((410 * 2)*(4000000/4000.0)));
  8398  004552  0E05               	movlw	5
  8399  004554  0100               	movlb	0	; () banked
  8400  004556  6F89               	movwf	(??_forzarEspejeoAuto+1)& (0+255),b
  8401  004558  0E29               	movlw	41
  8402  00455A  6F88               	movwf	??_forzarEspejeoAuto& (0+255),b
  8403  00455C  0EEA               	movlw	234
  8404  00455E                     u11537:
  8405  00455E  2EE8               	decfsz	wreg,f,c
  8406  004560  D7FE               	bra	u11537
  8407  004562  2F88               	decfsz	??_forzarEspejeoAuto& (0+255),f,b
  8408  004564  D7FC               	bra	u11537
  8409  004566  2F89               	decfsz	(??_forzarEspejeoAuto+1)& (0+255),f,b
  8410  004568  D7FA               	bra	u11537
  8411  00456A  F000               	nop	
  8412  00456C  0012               	return		;funcret
  8413  00456E                     __end_of_forzarEspejeoAuto:
  8414                           	opt callstack 0
  8415                           
  8416 ;; *************** function _PID *****************
  8417 ;; Defined at:
  8418 ;;		line 1120 in file "main.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;		None
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  error           2   56[BANK0 ] int 
  8423 ;;  dif             2   54[BANK0 ] int 
  8424 ;;  velocidadDer    2   50[BANK0 ] int 
  8425 ;;  velocidadIzq    2   46[BANK0 ] int 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      void 
  8428 ;; Registers used:
  8429 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8435 ;;      Params:         0       0       0       0       0       0       0       0       0
  8436 ;;      Locals:         0      16       0       0       0       0       0       0       0
  8437 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8438 ;;      Totals:         0      18       0       0       0       0       0       0       0
  8439 ;;Total ram usage:       18 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; Hardware stack levels required when called:    5
  8442 ;; This function calls:
  8443 ;;		___fladd
  8444 ;;		___flmul
  8445 ;;		___flsub
  8446 ;;		___fltol
  8447 ;;		___wmul
  8448 ;;		___xxtofl
  8449 ;;		_pwmDuty
  8450 ;;		_roundf
  8451 ;; This function is called by:
  8452 ;;		_probarPID
  8453 ;;		_comportamientoBasico
  8454 ;;		_regresarPuntoPartida
  8455 ;;		_regresarAlCruce
  8456 ;;		_recorrerCaminoEncontrado
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text36
  8461  002410                     __ptext36:
  8462                           	opt callstack 0
  8463  002410                     _PID:
  8464                           	opt callstack 24
  8465  002410                     
  8466                           ;main.c: 1123:     T_INT error = 0;
  8467  002410  0E00               	movlw	0
  8468  002412  0100               	movlb	0	; () banked
  8469  002414  6F99               	movwf	(PID@error+1)& (0+255),b
  8470  002416  0E00               	movlw	0
  8471  002418  6F98               	movwf	PID@error& (0+255),b
  8472  00241A                     
  8473                           ; BSR set to: 0
  8474                           ;main.c: 1124:     static T_INT difAnt = 0;;main.c: 1127:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  8475  00241A  C12C  F048         	movff	_sensorDerecha,___flsub@a
  8476  00241E  C12D  F049         	movff	_sensorDerecha+1,___flsub@a+1
  8477  002422  C12E  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  8478  002426  C12F  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  8479  00242A  C128  F044         	movff	_sensorIzquierda,___flsub@b
  8480  00242E  C129  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  8481  002432  C12A  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  8482  002436  C12B  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  8483  00243A  ECCF  F021         	call	___flsub	;wreg free
  8484  00243E  C044  F072         	movff	?___flsub,___fltol@f1
  8485  002442  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  8486  002446  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  8487  00244A  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  8488  00244E  EC1A  F01A         	call	___fltol	;wreg free
  8489  002452  C072  F096         	movff	?___fltol,PID@dif
  8490  002456  C073  F097         	movff	?___fltol+1,PID@dif+1
  8491  00245A                     
  8492                           ;main.c: 1129:     error = roundf(0.9 * (dif) + 0 * (difAnt - dif));
  8493  00245A  0E00               	movlw	0
  8494  00245C  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  8495  00245E  0E00               	movlw	0
  8496  002460  6E08               	movwf	___wmul@multiplicand^0,c
  8497  002462  0100               	movlb	0	; () banked
  8498  002464  5196               	movf	PID@dif& (0+255),w,b
  8499  002466  0101               	movlb	1	; () banked
  8500  002468  5D34               	subwf	PID@difAnt& (0+255),w,b
  8501  00246A  6E06               	movwf	___wmul@multiplier^0,c
  8502  00246C  0100               	movlb	0	; () banked
  8503  00246E  5197               	movf	(PID@dif+1)& (0+255),w,b
  8504  002470  0101               	movlb	1	; () banked
  8505  002472  5935               	subwfb	(PID@difAnt+1)& (0+255),w,b
  8506  002474  6E07               	movwf	(___wmul@multiplier+1)^0,c
  8507  002476  ECB7  F022         	call	___wmul	;wreg free
  8508  00247A  C006  F00D         	movff	?___wmul,___xxtofl@val
  8509  00247E  C007  F00E         	movff	?___wmul+1,___xxtofl@val+1
  8510  002482  0E00               	movlw	0
  8511  002484  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  8512  002486  0EFF               	movlw	-1
  8513  002488  6E0F               	movwf	(___xxtofl@val+2)^0,c
  8514  00248A  6E10               	movwf	(___xxtofl@val+3)^0,c
  8515  00248C  0E01               	movlw	1
  8516  00248E  EC0D  F015         	call	___xxtofl
  8517  002492  C00D  F038         	movff	?___xxtofl,___fladd@a
  8518  002496  C00E  F039         	movff	?___xxtofl+1,___fladd@a+1
  8519  00249A  C00F  F03A         	movff	?___xxtofl+2,___fladd@a+2
  8520  00249E  C010  F03B         	movff	?___xxtofl+3,___fladd@a+3
  8521  0024A2  0E66               	movlw	102
  8522  0024A4  6E1F               	movwf	___flmul@a^0,c
  8523  0024A6  0E66               	movlw	102
  8524  0024A8  6E20               	movwf	(___flmul@a+1)^0,c
  8525  0024AA  0E66               	movlw	102
  8526  0024AC  6E21               	movwf	(___flmul@a+2)^0,c
  8527  0024AE  0E3F               	movlw	63
  8528  0024B0  6E22               	movwf	(___flmul@a+3)^0,c
  8529  0024B2  C096  F00D         	movff	PID@dif,___xxtofl@val
  8530  0024B6  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  8531  0024BA  0E00               	movlw	0
  8532  0024BC  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  8533  0024BE  0EFF               	movlw	-1
  8534  0024C0  6E0F               	movwf	(___xxtofl@val+2)^0,c
  8535  0024C2  6E10               	movwf	(___xxtofl@val+3)^0,c
  8536  0024C4  0E01               	movlw	1
  8537  0024C6  EC0D  F015         	call	___xxtofl
  8538  0024CA  C00D  F01B         	movff	?___xxtofl,___flmul@b
  8539  0024CE  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  8540  0024D2  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  8541  0024D6  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  8542  0024DA  ECDD  F00A         	call	___flmul	;wreg free
  8543  0024DE  C01B  F034         	movff	?___flmul,___fladd@b
  8544  0024E2  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  8545  0024E6  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  8546  0024EA  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  8547  0024EE  EC7D  F008         	call	___fladd	;wreg free
  8548  0024F2  C034  F08A         	movff	?___fladd,_PID$1788
  8549  0024F6  C035  F08B         	movff	?___fladd+1,_PID$1788+1
  8550  0024FA  C036  F08C         	movff	?___fladd+2,_PID$1788+2
  8551  0024FE  C037  F08D         	movff	?___fladd+3,_PID$1788+3
  8552  002502                     
  8553                           ;main.c: 1129:     error = roundf(0.9 * (dif) + 0 * (difAnt - dif));
  8554  002502  C08A  F04C         	movff	_PID$1788,roundf@x
  8555  002506  C08B  F04D         	movff	_PID$1788+1,roundf@x+1
  8556  00250A  C08C  F04E         	movff	_PID$1788+2,roundf@x+2
  8557  00250E  C08D  F04F         	movff	_PID$1788+3,roundf@x+3
  8558  002512  ECF2  F00C         	call	_roundf	;wreg free
  8559  002516  C04C  F072         	movff	?_roundf,___fltol@f1
  8560  00251A  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  8561  00251E  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  8562  002522  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  8563  002526  EC1A  F01A         	call	___fltol	;wreg free
  8564  00252A  C072  F098         	movff	?___fltol,PID@error
  8565  00252E  C073  F099         	movff	?___fltol+1,PID@error+1
  8566  002532                     
  8567                           ;main.c: 1131:     difAnt = dif;
  8568  002532  C096  F134         	movff	PID@dif,PID@difAnt
  8569  002536  C097  F135         	movff	PID@dif+1,PID@difAnt+1
  8570  00253A                     
  8571                           ;main.c: 1133:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  8572  00253A  0E64               	movlw	100
  8573  00253C  0100               	movlb	0	; () banked
  8574  00253E  6F88               	movwf	??_PID& (0+255),b
  8575  002540  0E00               	movlw	0
  8576  002542  6F89               	movwf	(??_PID+1)& (0+255),b
  8577  002544  5198               	movf	PID@error& (0+255),w,b
  8578  002546  5D88               	subwf	??_PID& (0+255),w,b
  8579  002548  5199               	movf	(PID@error+1)& (0+255),w,b
  8580  00254A  5989               	subwfb	(??_PID+1)& (0+255),w,b
  8581  00254C  0B80               	andlw	128
  8582  00254E  A4D8               	btfss	status,2,c
  8583  002550  EFAC  F012         	goto	u10781
  8584  002554  EFAE  F012         	goto	u10780
  8585  002558                     u10781:
  8586  002558  EFD8  F012         	goto	l9080
  8587  00255C                     u10780:
  8588  00255C                     
  8589                           ; BSR set to: 0
  8590  00255C  0E64               	movlw	100
  8591  00255E  6F88               	movwf	??_PID& (0+255),b
  8592  002560  0E00               	movlw	0
  8593  002562  6F89               	movwf	(??_PID+1)& (0+255),b
  8594  002564  5198               	movf	PID@error& (0+255),w,b
  8595  002566  5F88               	subwf	??_PID& (0+255),f,b
  8596  002568  5199               	movf	(PID@error+1)& (0+255),w,b
  8597  00256A  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  8598  00256C  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  8599  00256E  EFC4  F012         	goto	u10790
  8600  002572  5189               	movf	(??_PID+1)& (0+255),w,b
  8601  002574  E107               	bnz	u10791
  8602  002576  0E65               	movlw	101
  8603  002578  5D88               	subwf	??_PID& (0+255),w,b
  8604  00257A  B0D8               	btfsc	status,0,c
  8605  00257C  EFC2  F012         	goto	u10791
  8606  002580  EFC4  F012         	goto	u10790
  8607  002584                     u10791:
  8608  002584  EFCE  F012         	goto	l9076
  8609  002588                     u10790:
  8610  002588                     
  8611                           ; BSR set to: 0
  8612  002588  5198               	movf	PID@error& (0+255),w,b
  8613  00258A  0864               	sublw	100
  8614  00258C  6F90               	movwf	_PID$736& (0+255),b
  8615  00258E  5199               	movf	(PID@error+1)& (0+255),w,b
  8616  002590  A0D8               	btfss	status,0,c
  8617  002592  2AE8               	incf	wreg,f,c
  8618  002594  0800               	sublw	0
  8619  002596  6F91               	movwf	(_PID$736+1)& (0+255),b
  8620  002598  EFD2  F012         	goto	l9078
  8621  00259C                     l9076:
  8622                           
  8623                           ; BSR set to: 0
  8624  00259C  0E00               	movlw	0
  8625  00259E  6F91               	movwf	(_PID$736+1)& (0+255),b
  8626  0025A0  0E64               	movlw	100
  8627  0025A2  6F90               	movwf	_PID$736& (0+255),b
  8628  0025A4                     l9078:
  8629                           
  8630                           ; BSR set to: 0
  8631  0025A4  C090  F08E         	movff	_PID$736,PID@velocidadIzquierda
  8632  0025A8  C091  F08F         	movff	_PID$736+1,PID@velocidadIzquierda+1
  8633  0025AC  EFDC  F012         	goto	l9082
  8634  0025B0                     l9080:
  8635                           
  8636                           ; BSR set to: 0
  8637  0025B0  0E00               	movlw	0
  8638  0025B2  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  8639  0025B4  0E00               	movlw	0
  8640  0025B6  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  8641  0025B8                     l9082:
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;main.c: 1134:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  8645  0025B8  0E64               	movlw	100
  8646  0025BA  2598               	addwf	PID@error& (0+255),w,b
  8647  0025BC  0E00               	movlw	0
  8648  0025BE  2199               	addwfc	(PID@error+1)& (0+255),w,b
  8649  0025C0  0B80               	andlw	128
  8650  0025C2  A4D8               	btfss	status,2,c
  8651  0025C4  EFE6  F012         	goto	u10801
  8652  0025C8  EFE8  F012         	goto	u10800
  8653  0025CC                     u10801:
  8654  0025CC  EF0E  F013         	goto	l9092
  8655  0025D0                     u10800:
  8656  0025D0                     
  8657                           ; BSR set to: 0
  8658  0025D0  0E64               	movlw	100
  8659  0025D2  2598               	addwf	PID@error& (0+255),w,b
  8660  0025D4  6F88               	movwf	??_PID& (0+255),b
  8661  0025D6  0E00               	movlw	0
  8662  0025D8  2199               	addwfc	(PID@error+1)& (0+255),w,b
  8663  0025DA  6F89               	movwf	(??_PID+1)& (0+255),b
  8664  0025DC  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  8665  0025DE  EFFC  F012         	goto	u10810
  8666  0025E2  5189               	movf	(??_PID+1)& (0+255),w,b
  8667  0025E4  E107               	bnz	u10811
  8668  0025E6  0E65               	movlw	101
  8669  0025E8  5D88               	subwf	??_PID& (0+255),w,b
  8670  0025EA  B0D8               	btfsc	status,0,c
  8671  0025EC  EFFA  F012         	goto	u10811
  8672  0025F0  EFFC  F012         	goto	u10810
  8673  0025F4                     u10811:
  8674  0025F4  EF04  F013         	goto	l9088
  8675  0025F8                     u10810:
  8676  0025F8                     
  8677                           ; BSR set to: 0
  8678  0025F8  0E64               	movlw	100
  8679  0025FA  2598               	addwf	PID@error& (0+255),w,b
  8680  0025FC  6F94               	movwf	_PID$738& (0+255),b
  8681  0025FE  0E00               	movlw	0
  8682  002600  2199               	addwfc	(PID@error+1)& (0+255),w,b
  8683  002602  6F95               	movwf	(_PID$738+1)& (0+255),b
  8684  002604  EF08  F013         	goto	l9090
  8685  002608                     l9088:
  8686                           
  8687                           ; BSR set to: 0
  8688  002608  0E00               	movlw	0
  8689  00260A  6F95               	movwf	(_PID$738+1)& (0+255),b
  8690  00260C  0E64               	movlw	100
  8691  00260E  6F94               	movwf	_PID$738& (0+255),b
  8692  002610                     l9090:
  8693                           
  8694                           ; BSR set to: 0
  8695  002610  C094  F092         	movff	_PID$738,PID@velocidadDerecha
  8696  002614  C095  F093         	movff	_PID$738+1,PID@velocidadDerecha+1
  8697  002618  EF12  F013         	goto	l9094
  8698  00261C                     l9092:
  8699                           
  8700                           ; BSR set to: 0
  8701  00261C  0E00               	movlw	0
  8702  00261E  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  8703  002620  0E00               	movlw	0
  8704  002622  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  8705  002624                     l9094:
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;main.c: 1136:     pwmDuty(velocidadIzquierda, 1);
  8709  002624  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  8710  002628  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  8711  00262C  0E01               	movlw	1
  8712  00262E  6F7E               	movwf	pwmDuty@channel& (0+255),b
  8713  002630  EC2F  F014         	call	_pwmDuty	;wreg free
  8714  002634                     
  8715                           ;main.c: 1137:     pwmDuty(velocidadDerecha, 2);
  8716  002634  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  8717  002638  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  8718  00263C  0E02               	movlw	2
  8719  00263E  0100               	movlb	0	; () banked
  8720  002640  6F7E               	movwf	pwmDuty@channel& (0+255),b
  8721  002642  EC2F  F014         	call	_pwmDuty	;wreg free
  8722  002646  0012               	return		;funcret
  8723  002648                     __end_of_PID:
  8724                           	opt callstack 0
  8725                           
  8726 ;; *************** function _roundf *****************
  8727 ;; Defined at:
  8728 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  x               4   75[COMRAM] float 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;  y               4   14[BANK0 ] float 
  8733 ;;  u               4   10[BANK0 ] struct .
  8734 ;;  e               2    4[BANK0 ] int 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  4   75[COMRAM] float 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8744 ;;      Params:         4       0       0       0       0       0       0       0       0
  8745 ;;      Locals:         0      18       0       0       0       0       0       0       0
  8746 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8747 ;;      Totals:         8      18       0       0       0       0       0       0       0
  8748 ;;Total ram usage:       26 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:    4
  8751 ;; This function calls:
  8752 ;;		___fladd
  8753 ;;		___flge
  8754 ;;		___flmul
  8755 ;;		___flneg
  8756 ;;		___flsub
  8757 ;; This function is called by:
  8758 ;;		_PID
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text37
  8763  0019E4                     __ptext37:
  8764                           	opt callstack 0
  8765  0019E4                     _roundf:
  8766                           	opt callstack 24
  8767  0019E4  C100  F06A         	movff	roundf@F525,roundf@u
  8768  0019E8  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  8769  0019EC  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  8770  0019F0  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  8771  0019F4  C04C  F06A         	movff	roundf@x,roundf@u
  8772  0019F8  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  8773  0019FC  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  8774  001A00  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  8775  001A04  C06A  F050         	movff	roundf@u,??_roundf
  8776  001A08  C06B  F051         	movff	roundf@u+1,??_roundf+1
  8777  001A0C  C06C  F052         	movff	roundf@u+2,??_roundf+2
  8778  001A10  C06D  F053         	movff	roundf@u+3,??_roundf+3
  8779  001A14  0E18               	movlw	24
  8780  001A16  EF12  F00D         	goto	u10650
  8781  001A1A                     u10655:
  8782  001A1A  90D8               	bcf	status,0,c
  8783  001A1C  3253               	rrcf	(??_roundf+3)^0,f,c
  8784  001A1E  3252               	rrcf	(??_roundf+2)^0,f,c
  8785  001A20  3251               	rrcf	(??_roundf+1)^0,f,c
  8786  001A22  3250               	rrcf	??_roundf^0,f,c
  8787  001A24                     u10650:
  8788  001A24  2EE8               	decfsz	wreg,f,c
  8789  001A26  EF0D  F00D         	goto	u10655
  8790  001A2A  5050               	movf	??_roundf^0,w,c
  8791  001A2C  0100               	movlb	0	; () banked
  8792  001A2E  6F64               	movwf	roundf@e& (0+255),b
  8793  001A30  6B65               	clrf	(roundf@e+1)& (0+255),b
  8794  001A32  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  8795  001A34  EF25  F00D         	goto	u10661
  8796  001A38  5165               	movf	(roundf@e+1)& (0+255),w,b
  8797  001A3A  E109               	bnz	u10660
  8798  001A3C  0E96               	movlw	150
  8799  001A3E  5D64               	subwf	roundf@e& (0+255),w,b
  8800  001A40  A0D8               	btfss	status,0,c
  8801  001A42  EF25  F00D         	goto	u10661
  8802  001A46  EF27  F00D         	goto	u10660
  8803  001A4A                     u10661:
  8804  001A4A  EF31  F00D         	goto	l8972
  8805  001A4E                     u10660:
  8806  001A4E                     
  8807                           ; BSR set to: 0
  8808  001A4E  C04C  F04C         	movff	roundf@x,?_roundf
  8809  001A52  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  8810  001A56  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  8811  001A5A  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  8812  001A5E  EFCA  F00E         	goto	l1683
  8813  001A62                     l8972:
  8814                           
  8815                           ; BSR set to: 0
  8816  001A62  C06A  F050         	movff	roundf@u,??_roundf
  8817  001A66  C06B  F051         	movff	roundf@u+1,??_roundf+1
  8818  001A6A  C06C  F052         	movff	roundf@u+2,??_roundf+2
  8819  001A6E  C06D  F053         	movff	roundf@u+3,??_roundf+3
  8820  001A72  0E20               	movlw	32
  8821  001A74  EF41  F00D         	goto	u10670
  8822  001A78                     u10675:
  8823  001A78  90D8               	bcf	status,0,c
  8824  001A7A  3253               	rrcf	(??_roundf+3)^0,f,c
  8825  001A7C  3252               	rrcf	(??_roundf+2)^0,f,c
  8826  001A7E  3251               	rrcf	(??_roundf+1)^0,f,c
  8827  001A80  3250               	rrcf	??_roundf^0,f,c
  8828  001A82                     u10670:
  8829  001A82  2EE8               	decfsz	wreg,f,c
  8830  001A84  EF3C  F00D         	goto	u10675
  8831  001A88  5050               	movf	??_roundf^0,w,c
  8832  001A8A  1051               	iorwf	(??_roundf+1)^0,w,c
  8833  001A8C  1052               	iorwf	(??_roundf+2)^0,w,c
  8834  001A8E  1053               	iorwf	(??_roundf+3)^0,w,c
  8835  001A90  B4D8               	btfsc	status,2,c
  8836  001A92  EF4D  F00D         	goto	u10681
  8837  001A96  EF4F  F00D         	goto	u10680
  8838  001A9A                     u10681:
  8839  001A9A  EF61  F00D         	goto	l8976
  8840  001A9E                     u10680:
  8841  001A9E                     
  8842                           ; BSR set to: 0
  8843  001A9E  C04C  F006         	movff	roundf@x,___flneg@f1
  8844  001AA2  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  8845  001AA6  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  8846  001AAA  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  8847  001AAE  EC6C  F022         	call	___flneg	;wreg free
  8848  001AB2  C006  F04C         	movff	?___flneg,roundf@x
  8849  001AB6  C007  F04D         	movff	?___flneg+1,roundf@x+1
  8850  001ABA  C008  F04E         	movff	?___flneg+2,roundf@x+2
  8851  001ABE  C009  F04F         	movff	?___flneg+3,roundf@x+3
  8852  001AC2                     l8976:
  8853  001AC2  0100               	movlb	0	; () banked
  8854  001AC4  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  8855  001AC6  EF70  F00D         	goto	u10690
  8856  001ACA  5165               	movf	(roundf@e+1)& (0+255),w,b
  8857  001ACC  E107               	bnz	u10691
  8858  001ACE  0E7E               	movlw	126
  8859  001AD0  5D64               	subwf	roundf@e& (0+255),w,b
  8860  001AD2  B0D8               	btfsc	status,0,c
  8861  001AD4  EF6E  F00D         	goto	u10691
  8862  001AD8  EF70  F00D         	goto	u10690
  8863  001ADC                     u10691:
  8864  001ADC  EF8C  F00D         	goto	l8982
  8865  001AE0                     u10690:
  8866  001AE0                     
  8867                           ; BSR set to: 0
  8868  001AE0  C06A  F01B         	movff	roundf@u,___flmul@b
  8869  001AE4  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  8870  001AE8  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  8871  001AEC  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  8872  001AF0  0E00               	movlw	0
  8873  001AF2  6E1F               	movwf	___flmul@a^0,c
  8874  001AF4  0E00               	movlw	0
  8875  001AF6  6E20               	movwf	(___flmul@a+1)^0,c
  8876  001AF8  0E00               	movlw	0
  8877  001AFA  6E21               	movwf	(___flmul@a+2)^0,c
  8878  001AFC  0E00               	movlw	0
  8879  001AFE  6E22               	movwf	(___flmul@a+3)^0,c
  8880  001B00  ECDD  F00A         	call	___flmul	;wreg free
  8881  001B04  C01B  F04C         	movff	?___flmul,?_roundf
  8882  001B08  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  8883  001B0C  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  8884  001B10  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  8885  001B14  EFCA  F00E         	goto	l1683
  8886  001B18                     l8982:
  8887                           
  8888                           ; BSR set to: 0
  8889  001B18  0E00               	movlw	0
  8890  001B1A  6E38               	movwf	___fladd@a^0,c
  8891  001B1C  0E00               	movlw	0
  8892  001B1E  6E39               	movwf	(___fladd@a+1)^0,c
  8893  001B20  0E00               	movlw	0
  8894  001B22  6E3A               	movwf	(___fladd@a+2)^0,c
  8895  001B24  0E4B               	movlw	75
  8896  001B26  6E3B               	movwf	(___fladd@a+3)^0,c
  8897  001B28  C04C  F034         	movff	roundf@x,___fladd@b
  8898  001B2C  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  8899  001B30  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  8900  001B34  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  8901  001B38  EC7D  F008         	call	___fladd	;wreg free
  8902  001B3C  C034  F066         	movff	?___fladd,_roundf$1789
  8903  001B40  C035  F067         	movff	?___fladd+1,_roundf$1789+1
  8904  001B44  C036  F068         	movff	?___fladd+2,_roundf$1789+2
  8905  001B48  C037  F069         	movff	?___fladd+3,_roundf$1789+3
  8906  001B4C  0E00               	movlw	0
  8907  001B4E  6E38               	movwf	___fladd@a^0,c
  8908  001B50  0E00               	movlw	0
  8909  001B52  6E39               	movwf	(___fladd@a+1)^0,c
  8910  001B54  0E00               	movlw	0
  8911  001B56  6E3A               	movwf	(___fladd@a+2)^0,c
  8912  001B58  0ECB               	movlw	203
  8913  001B5A  6E3B               	movwf	(___fladd@a+3)^0,c
  8914  001B5C  C066  F034         	movff	_roundf$1789,___fladd@b
  8915  001B60  C067  F035         	movff	_roundf$1789+1,___fladd@b+1
  8916  001B64  C068  F036         	movff	_roundf$1789+2,___fladd@b+2
  8917  001B68  C069  F037         	movff	_roundf$1789+3,___fladd@b+3
  8918  001B6C  EC7D  F008         	call	___fladd	;wreg free
  8919  001B70  C034  F060         	movff	?___fladd,_roundf$1790
  8920  001B74  C035  F061         	movff	?___fladd+1,_roundf$1790+1
  8921  001B78  C036  F062         	movff	?___fladd+2,_roundf$1790+2
  8922  001B7C  C037  F063         	movff	?___fladd+3,_roundf$1790+3
  8923  001B80  C060  F044         	movff	_roundf$1790,___flsub@b
  8924  001B84  C061  F045         	movff	_roundf$1790+1,___flsub@b+1
  8925  001B88  C062  F046         	movff	_roundf$1790+2,___flsub@b+2
  8926  001B8C  C063  F047         	movff	_roundf$1790+3,___flsub@b+3
  8927  001B90  C04C  F048         	movff	roundf@x,___flsub@a
  8928  001B94  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  8929  001B98  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  8930  001B9C  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  8931  001BA0  ECCF  F021         	call	___flsub	;wreg free
  8932  001BA4  C044  F06E         	movff	?___flsub,roundf@y
  8933  001BA8  C045  F06F         	movff	?___flsub+1,roundf@y+1
  8934  001BAC  C046  F070         	movff	?___flsub+2,roundf@y+2
  8935  001BB0  C047  F071         	movff	?___flsub+3,roundf@y+3
  8936  001BB4  0E00               	movlw	0
  8937  001BB6  6E34               	movwf	___flge@ff1^0,c
  8938  001BB8  0E00               	movlw	0
  8939  001BBA  6E35               	movwf	(___flge@ff1+1)^0,c
  8940  001BBC  0E00               	movlw	0
  8941  001BBE  6E36               	movwf	(___flge@ff1+2)^0,c
  8942  001BC0  0E3F               	movlw	63
  8943  001BC2  6E37               	movwf	(___flge@ff1+3)^0,c
  8944  001BC4  C06E  F038         	movff	roundf@y,___flge@ff2
  8945  001BC8  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  8946  001BCC  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  8947  001BD0  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  8948  001BD4  EC9E  F01A         	call	___flge	;wreg free
  8949  001BD8  B0D8               	btfsc	status,0,c
  8950  001BDA  EFF1  F00D         	goto	u10701
  8951  001BDE  EFF3  F00D         	goto	u10700
  8952  001BE2                     u10701:
  8953  001BE2  EF29  F00E         	goto	l8986
  8954  001BE6                     u10700:
  8955  001BE6  C04C  F038         	movff	roundf@x,___fladd@a
  8956  001BEA  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  8957  001BEE  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  8958  001BF2  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  8959  001BF6  C06E  F034         	movff	roundf@y,___fladd@b
  8960  001BFA  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  8961  001BFE  C070  F036         	movff	roundf@y+2,___fladd@b+2
  8962  001C02  C071  F037         	movff	roundf@y+3,___fladd@b+3
  8963  001C06  EC7D  F008         	call	___fladd	;wreg free
  8964  001C0A  C034  F066         	movff	?___fladd,_roundf$1789
  8965  001C0E  C035  F067         	movff	?___fladd+1,_roundf$1789+1
  8966  001C12  C036  F068         	movff	?___fladd+2,_roundf$1789+2
  8967  001C16  C037  F069         	movff	?___fladd+3,_roundf$1789+3
  8968  001C1A  C066  F034         	movff	_roundf$1789,___fladd@b
  8969  001C1E  C067  F035         	movff	_roundf$1789+1,___fladd@b+1
  8970  001C22  C068  F036         	movff	_roundf$1789+2,___fladd@b+2
  8971  001C26  C069  F037         	movff	_roundf$1789+3,___fladd@b+3
  8972  001C2A  0E00               	movlw	0
  8973  001C2C  6E38               	movwf	___fladd@a^0,c
  8974  001C2E  0E00               	movlw	0
  8975  001C30  6E39               	movwf	(___fladd@a+1)^0,c
  8976  001C32  0E80               	movlw	128
  8977  001C34  6E3A               	movwf	(___fladd@a+2)^0,c
  8978  001C36  0EBF               	movlw	191
  8979  001C38  6E3B               	movwf	(___fladd@a+3)^0,c
  8980  001C3A  EC7D  F008         	call	___fladd	;wreg free
  8981  001C3E  C034  F06E         	movff	?___fladd,roundf@y
  8982  001C42  C035  F06F         	movff	?___fladd+1,roundf@y+1
  8983  001C46  C036  F070         	movff	?___fladd+2,roundf@y+2
  8984  001C4A  C037  F071         	movff	?___fladd+3,roundf@y+3
  8985  001C4E  EF92  F00E         	goto	l8992
  8986  001C52                     l8986:
  8987  001C52  0E00               	movlw	0
  8988  001C54  6E34               	movwf	___flge@ff1^0,c
  8989  001C56  0E00               	movlw	0
  8990  001C58  6E35               	movwf	(___flge@ff1+1)^0,c
  8991  001C5A  0E00               	movlw	0
  8992  001C5C  6E36               	movwf	(___flge@ff1+2)^0,c
  8993  001C5E  0EBF               	movlw	191
  8994  001C60  6E37               	movwf	(___flge@ff1+3)^0,c
  8995  001C62  C06E  F038         	movff	roundf@y,___flge@ff2
  8996  001C66  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  8997  001C6A  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  8998  001C6E  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  8999  001C72  EC9E  F01A         	call	___flge	;wreg free
  9000  001C76  A0D8               	btfss	status,0,c
  9001  001C78  EF40  F00E         	goto	u10711
  9002  001C7C  EF42  F00E         	goto	u10710
  9003  001C80                     u10711:
  9004  001C80  EF78  F00E         	goto	l8990
  9005  001C84                     u10710:
  9006  001C84  C04C  F038         	movff	roundf@x,___fladd@a
  9007  001C88  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  9008  001C8C  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  9009  001C90  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  9010  001C94  C06E  F034         	movff	roundf@y,___fladd@b
  9011  001C98  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  9012  001C9C  C070  F036         	movff	roundf@y+2,___fladd@b+2
  9013  001CA0  C071  F037         	movff	roundf@y+3,___fladd@b+3
  9014  001CA4  EC7D  F008         	call	___fladd	;wreg free
  9015  001CA8  C034  F066         	movff	?___fladd,_roundf$1789
  9016  001CAC  C035  F067         	movff	?___fladd+1,_roundf$1789+1
  9017  001CB0  C036  F068         	movff	?___fladd+2,_roundf$1789+2
  9018  001CB4  C037  F069         	movff	?___fladd+3,_roundf$1789+3
  9019  001CB8  C066  F034         	movff	_roundf$1789,___fladd@b
  9020  001CBC  C067  F035         	movff	_roundf$1789+1,___fladd@b+1
  9021  001CC0  C068  F036         	movff	_roundf$1789+2,___fladd@b+2
  9022  001CC4  C069  F037         	movff	_roundf$1789+3,___fladd@b+3
  9023  001CC8  0E00               	movlw	0
  9024  001CCA  6E38               	movwf	___fladd@a^0,c
  9025  001CCC  0E00               	movlw	0
  9026  001CCE  6E39               	movwf	(___fladd@a+1)^0,c
  9027  001CD0  0E80               	movlw	128
  9028  001CD2  6E3A               	movwf	(___fladd@a+2)^0,c
  9029  001CD4  0E3F               	movlw	63
  9030  001CD6  6E3B               	movwf	(___fladd@a+3)^0,c
  9031  001CD8  EC7D  F008         	call	___fladd	;wreg free
  9032  001CDC  C034  F06E         	movff	?___fladd,roundf@y
  9033  001CE0  C035  F06F         	movff	?___fladd+1,roundf@y+1
  9034  001CE4  C036  F070         	movff	?___fladd+2,roundf@y+2
  9035  001CE8  C037  F071         	movff	?___fladd+3,roundf@y+3
  9036  001CEC  EF92  F00E         	goto	l8992
  9037  001CF0                     l8990:
  9038  001CF0  C06E  F034         	movff	roundf@y,___fladd@b
  9039  001CF4  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  9040  001CF8  C070  F036         	movff	roundf@y+2,___fladd@b+2
  9041  001CFC  C071  F037         	movff	roundf@y+3,___fladd@b+3
  9042  001D00  C04C  F038         	movff	roundf@x,___fladd@a
  9043  001D04  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  9044  001D08  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  9045  001D0C  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  9046  001D10  EC7D  F008         	call	___fladd	;wreg free
  9047  001D14  C034  F06E         	movff	?___fladd,roundf@y
  9048  001D18  C035  F06F         	movff	?___fladd+1,roundf@y+1
  9049  001D1C  C036  F070         	movff	?___fladd+2,roundf@y+2
  9050  001D20  C037  F071         	movff	?___fladd+3,roundf@y+3
  9051  001D24                     l8992:
  9052  001D24  C06A  F050         	movff	roundf@u,??_roundf
  9053  001D28  C06B  F051         	movff	roundf@u+1,??_roundf+1
  9054  001D2C  C06C  F052         	movff	roundf@u+2,??_roundf+2
  9055  001D30  C06D  F053         	movff	roundf@u+3,??_roundf+3
  9056  001D34  0E20               	movlw	32
  9057  001D36  EFA2  F00E         	goto	u10720
  9058  001D3A                     u10725:
  9059  001D3A  90D8               	bcf	status,0,c
  9060  001D3C  3253               	rrcf	(??_roundf+3)^0,f,c
  9061  001D3E  3252               	rrcf	(??_roundf+2)^0,f,c
  9062  001D40  3251               	rrcf	(??_roundf+1)^0,f,c
  9063  001D42  3250               	rrcf	??_roundf^0,f,c
  9064  001D44                     u10720:
  9065  001D44  2EE8               	decfsz	wreg,f,c
  9066  001D46  EF9D  F00E         	goto	u10725
  9067  001D4A  5050               	movf	??_roundf^0,w,c
  9068  001D4C  1051               	iorwf	(??_roundf+1)^0,w,c
  9069  001D4E  1052               	iorwf	(??_roundf+2)^0,w,c
  9070  001D50  1053               	iorwf	(??_roundf+3)^0,w,c
  9071  001D52  B4D8               	btfsc	status,2,c
  9072  001D54  EFAE  F00E         	goto	u10731
  9073  001D58  EFB0  F00E         	goto	u10730
  9074  001D5C                     u10731:
  9075  001D5C  EFC2  F00E         	goto	l8996
  9076  001D60                     u10730:
  9077  001D60  C06E  F006         	movff	roundf@y,___flneg@f1
  9078  001D64  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
  9079  001D68  C070  F008         	movff	roundf@y+2,___flneg@f1+2
  9080  001D6C  C071  F009         	movff	roundf@y+3,___flneg@f1+3
  9081  001D70  EC6C  F022         	call	___flneg	;wreg free
  9082  001D74  C006  F06E         	movff	?___flneg,roundf@y
  9083  001D78  C007  F06F         	movff	?___flneg+1,roundf@y+1
  9084  001D7C  C008  F070         	movff	?___flneg+2,roundf@y+2
  9085  001D80  C009  F071         	movff	?___flneg+3,roundf@y+3
  9086  001D84                     l8996:
  9087  001D84  C06E  F04C         	movff	roundf@y,?_roundf
  9088  001D88  C06F  F04D         	movff	roundf@y+1,?_roundf+1
  9089  001D8C  C070  F04E         	movff	roundf@y+2,?_roundf+2
  9090  001D90  C071  F04F         	movff	roundf@y+3,?_roundf+3
  9091  001D94                     l1683:
  9092  001D94  0012               	return		;funcret
  9093  001D96                     __end_of_roundf:
  9094                           	opt callstack 0
  9095                           
  9096 ;; *************** function ___flsub *****************
  9097 ;; Defined at:
  9098 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;  b               4   67[COMRAM] float 
  9101 ;;  a               4   71[COMRAM] float 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;		None
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  4   67[COMRAM] float 
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0, cstack
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9113 ;;      Params:         8       0       0       0       0       0       0       0       0
  9114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9116 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9117 ;;Total ram usage:        8 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; Hardware stack levels required when called:    3
  9120 ;; This function calls:
  9121 ;;		___fladd
  9122 ;; This function is called by:
  9123 ;;		_PID
  9124 ;;		_efgtoa
  9125 ;;		_roundf
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text38
  9130  00439E                     __ptext38:
  9131                           	opt callstack 0
  9132  00439E                     ___flsub:
  9133                           	opt callstack 22
  9134  00439E  0E00               	movlw	0
  9135  0043A0  1A48               	xorwf	___flsub@a^0,f,c
  9136  0043A2  0E00               	movlw	0
  9137  0043A4  1A49               	xorwf	(___flsub@a+1)^0,f,c
  9138  0043A6  0E00               	movlw	0
  9139  0043A8  1A4A               	xorwf	(___flsub@a+2)^0,f,c
  9140  0043AA  0E80               	movlw	128
  9141  0043AC  1A4B               	xorwf	(___flsub@a+3)^0,f,c
  9142  0043AE  C044  F034         	movff	___flsub@b,___fladd@b
  9143  0043B2  C045  F035         	movff	___flsub@b+1,___fladd@b+1
  9144  0043B6  C046  F036         	movff	___flsub@b+2,___fladd@b+2
  9145  0043BA  C047  F037         	movff	___flsub@b+3,___fladd@b+3
  9146  0043BE  C048  F038         	movff	___flsub@a,___fladd@a
  9147  0043C2  C049  F039         	movff	___flsub@a+1,___fladd@a+1
  9148  0043C6  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
  9149  0043CA  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
  9150  0043CE  EC7D  F008         	call	___fladd	;wreg free
  9151  0043D2  C034  F044         	movff	?___fladd,?___flsub
  9152  0043D6  C035  F045         	movff	?___fladd+1,?___flsub+1
  9153  0043DA  C036  F046         	movff	?___fladd+2,?___flsub+2
  9154  0043DE  C037  F047         	movff	?___fladd+3,?___flsub+3
  9155  0043E2  0012               	return		;funcret
  9156  0043E4                     __end_of___flsub:
  9157                           	opt callstack 0
  9158                           
  9159 ;; *************** function ___fladd *****************
  9160 ;; Defined at:
  9161 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  b               4   51[COMRAM] float 
  9164 ;;  a               4   55[COMRAM] float 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  grs             1   66[COMRAM] unsigned char 
  9167 ;;  bexp            1   65[COMRAM] unsigned char 
  9168 ;;  aexp            1   64[COMRAM] unsigned char 
  9169 ;;  signs           1   63[COMRAM] unsigned char 
  9170 ;; Return value:  Size  Location     Type
  9171 ;;                  4   51[COMRAM] unsigned char 
  9172 ;; Registers used:
  9173 ;;		wreg, status,2, status,0
  9174 ;; Tracked objects:
  9175 ;;		On entry : 0/0
  9176 ;;		On exit  : 0/0
  9177 ;;		Unchanged: 0/0
  9178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9179 ;;      Params:         8       0       0       0       0       0       0       0       0
  9180 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9181 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9182 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9183 ;;Total ram usage:       16 bytes
  9184 ;; Hardware stack levels used:    1
  9185 ;; Hardware stack levels required when called:    2
  9186 ;; This function calls:
  9187 ;;		Nothing
  9188 ;; This function is called by:
  9189 ;;		_leerSensores
  9190 ;;		_PID
  9191 ;;		_efgtoa
  9192 ;;		___flsub
  9193 ;;		_roundf
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text39
  9198  0010FA                     __ptext39:
  9199                           	opt callstack 0
  9200  0010FA                     ___fladd:
  9201                           	opt callstack 22
  9202  0010FA  5037               	movf	(___fladd@b+3)^0,w,c
  9203  0010FC  0B80               	andlw	128
  9204  0010FE  6E40               	movwf	___fladd@signs^0,c
  9205  001100  5037               	movf	(___fladd@b+3)^0,w,c
  9206  001102  2437               	addwf	(___fladd@b+3)^0,w,c
  9207  001104  6E42               	movwf	___fladd@bexp^0,c
  9208  001106  AE36               	btfss	(___fladd@b+2)^0,7,c
  9209  001108  EF88  F008         	goto	u7901
  9210  00110C  EF8A  F008         	goto	u7900
  9211  001110                     u7901:
  9212  001110  EF8B  F008         	goto	l7466
  9213  001114                     u7900:
  9214  001114  8042               	bsf	___fladd@bexp^0,0,c
  9215  001116                     l7466:
  9216  001116  5042               	movf	___fladd@bexp^0,w,c
  9217  001118  B4D8               	btfsc	status,2,c
  9218  00111A  EF91  F008         	goto	u7911
  9219  00111E  EF93  F008         	goto	u7910
  9220  001122                     u7911:
  9221  001122  EFA8  F008         	goto	l7476
  9222  001126                     u7910:
  9223  001126  2842               	incf	___fladd@bexp^0,w,c
  9224  001128  A4D8               	btfss	status,2,c
  9225  00112A  EF99  F008         	goto	u7921
  9226  00112E  EF9B  F008         	goto	u7920
  9227  001132                     u7921:
  9228  001132  EFA3  F008         	goto	l7472
  9229  001136                     u7920:
  9230  001136  0E00               	movlw	0
  9231  001138  6E34               	movwf	___fladd@b^0,c
  9232  00113A  0E00               	movlw	0
  9233  00113C  6E35               	movwf	(___fladd@b+1)^0,c
  9234  00113E  0E00               	movlw	0
  9235  001140  6E36               	movwf	(___fladd@b+2)^0,c
  9236  001142  0E00               	movlw	0
  9237  001144  6E37               	movwf	(___fladd@b+3)^0,c
  9238  001146                     l7472:
  9239  001146  8E36               	bsf	(___fladd@b+2)^0,7,c
  9240  001148  0E00               	movlw	0
  9241  00114A  6E37               	movwf	(___fladd@b+3)^0,c
  9242  00114C  EFB0  F008         	goto	l7478
  9243  001150                     l7476:
  9244  001150  0E00               	movlw	0
  9245  001152  6E34               	movwf	___fladd@b^0,c
  9246  001154  0E00               	movlw	0
  9247  001156  6E35               	movwf	(___fladd@b+1)^0,c
  9248  001158  0E00               	movlw	0
  9249  00115A  6E36               	movwf	(___fladd@b+2)^0,c
  9250  00115C  0E00               	movlw	0
  9251  00115E  6E37               	movwf	(___fladd@b+3)^0,c
  9252  001160                     l7478:
  9253  001160  503B               	movf	(___fladd@a+3)^0,w,c
  9254  001162  0B80               	andlw	128
  9255  001164  6E41               	movwf	___fladd@aexp^0,c
  9256  001166  5040               	movf	___fladd@signs^0,w,c
  9257  001168  1841               	xorwf	___fladd@aexp^0,w,c
  9258  00116A  B4D8               	btfsc	status,2,c
  9259  00116C  EFBA  F008         	goto	u7931
  9260  001170  EFBC  F008         	goto	u7930
  9261  001174                     u7931:
  9262  001174  EFBD  F008         	goto	l7484
  9263  001178                     u7930:
  9264  001178  8C40               	bsf	___fladd@signs^0,6,c
  9265  00117A                     l7484:
  9266  00117A  503B               	movf	(___fladd@a+3)^0,w,c
  9267  00117C  243B               	addwf	(___fladd@a+3)^0,w,c
  9268  00117E  6E41               	movwf	___fladd@aexp^0,c
  9269  001180  AE3A               	btfss	(___fladd@a+2)^0,7,c
  9270  001182  EFC5  F008         	goto	u7941
  9271  001186  EFC7  F008         	goto	u7940
  9272  00118A                     u7941:
  9273  00118A  EFC8  F008         	goto	l7490
  9274  00118E                     u7940:
  9275  00118E  8041               	bsf	___fladd@aexp^0,0,c
  9276  001190                     l7490:
  9277  001190  5041               	movf	___fladd@aexp^0,w,c
  9278  001192  B4D8               	btfsc	status,2,c
  9279  001194  EFCE  F008         	goto	u7951
  9280  001198  EFD0  F008         	goto	u7950
  9281  00119C                     u7951:
  9282  00119C  EFE5  F008         	goto	l7500
  9283  0011A0                     u7950:
  9284  0011A0  2841               	incf	___fladd@aexp^0,w,c
  9285  0011A2  A4D8               	btfss	status,2,c
  9286  0011A4  EFD6  F008         	goto	u7961
  9287  0011A8  EFD8  F008         	goto	u7960
  9288  0011AC                     u7961:
  9289  0011AC  EFE0  F008         	goto	l7496
  9290  0011B0                     u7960:
  9291  0011B0  0E00               	movlw	0
  9292  0011B2  6E38               	movwf	___fladd@a^0,c
  9293  0011B4  0E00               	movlw	0
  9294  0011B6  6E39               	movwf	(___fladd@a+1)^0,c
  9295  0011B8  0E00               	movlw	0
  9296  0011BA  6E3A               	movwf	(___fladd@a+2)^0,c
  9297  0011BC  0E00               	movlw	0
  9298  0011BE  6E3B               	movwf	(___fladd@a+3)^0,c
  9299  0011C0                     l7496:
  9300  0011C0  8E3A               	bsf	(___fladd@a+2)^0,7,c
  9301  0011C2  0E00               	movlw	0
  9302  0011C4  6E3B               	movwf	(___fladd@a+3)^0,c
  9303  0011C6  EFED  F008         	goto	l7502
  9304  0011CA                     l7500:
  9305  0011CA  0E00               	movlw	0
  9306  0011CC  6E38               	movwf	___fladd@a^0,c
  9307  0011CE  0E00               	movlw	0
  9308  0011D0  6E39               	movwf	(___fladd@a+1)^0,c
  9309  0011D2  0E00               	movlw	0
  9310  0011D4  6E3A               	movwf	(___fladd@a+2)^0,c
  9311  0011D6  0E00               	movlw	0
  9312  0011D8  6E3B               	movwf	(___fladd@a+3)^0,c
  9313  0011DA                     l7502:
  9314  0011DA  5042               	movf	___fladd@bexp^0,w,c
  9315  0011DC  5C41               	subwf	___fladd@aexp^0,w,c
  9316  0011DE  B0D8               	btfsc	status,0,c
  9317  0011E0  EFF4  F008         	goto	u7971
  9318  0011E4  EFF6  F008         	goto	u7970
  9319  0011E8                     u7971:
  9320  0011E8  EF1D  F009         	goto	l7538
  9321  0011EC                     u7970:
  9322  0011EC  AC40               	btfss	___fladd@signs^0,6,c
  9323  0011EE  EFFB  F008         	goto	u7981
  9324  0011F2  EFFD  F008         	goto	u7980
  9325  0011F6                     u7981:
  9326  0011F6  EFFF  F008         	goto	l7508
  9327  0011FA                     u7980:
  9328  0011FA  0E80               	movlw	128
  9329  0011FC  1A40               	xorwf	___fladd@signs^0,f,c
  9330  0011FE                     l7508:
  9331  0011FE  C042  F043         	movff	___fladd@bexp,___fladd@grs
  9332  001202  C041  F042         	movff	___fladd@aexp,___fladd@bexp
  9333  001206  C043  F041         	movff	___fladd@grs,___fladd@aexp
  9334  00120A  C034  F043         	movff	___fladd@b,___fladd@grs
  9335  00120E  C038  F034         	movff	___fladd@a,___fladd@b
  9336  001212  C043  F038         	movff	___fladd@grs,___fladd@a
  9337  001216  C035  F043         	movff	___fladd@b+1,___fladd@grs
  9338  00121A  C039  F035         	movff	___fladd@a+1,___fladd@b+1
  9339  00121E  C043  F039         	movff	___fladd@grs,___fladd@a+1
  9340  001222  C036  F043         	movff	___fladd@b+2,___fladd@grs
  9341  001226  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
  9342  00122A  C043  F03A         	movff	___fladd@grs,___fladd@a+2
  9343  00122E  C037  F043         	movff	___fladd@b+3,___fladd@grs
  9344  001232  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
  9345  001236  C043  F03B         	movff	___fladd@grs,___fladd@a+3
  9346  00123A                     l7538:
  9347  00123A  0E00               	movlw	0
  9348  00123C  6E43               	movwf	___fladd@grs^0,c
  9349  00123E  5042               	movf	___fladd@bexp^0,w,c
  9350  001240  C041  F03C         	movff	___fladd@aexp,??___fladd
  9351  001244  6A3D               	clrf	(??___fladd+1)^0,c
  9352  001246  5E3C               	subwf	??___fladd^0,f,c
  9353  001248  0E00               	movlw	0
  9354  00124A  5A3D               	subwfb	(??___fladd+1)^0,f,c
  9355  00124C  BE3D               	btfsc	(??___fladd+1)^0,7,c
  9356  00124E  EF32  F009         	goto	u7991
  9357  001252  503D               	movf	(??___fladd+1)^0,w,c
  9358  001254  E109               	bnz	u7990
  9359  001256  0E1A               	movlw	26
  9360  001258  5C3C               	subwf	??___fladd^0,w,c
  9361  00125A  A0D8               	btfss	status,0,c
  9362  00125C  EF32  F009         	goto	u7991
  9363  001260  EF34  F009         	goto	u7990
  9364  001264                     u7991:
  9365  001264  EF6B  F009         	goto	l1421
  9366  001268                     u7990:
  9367  001268  5034               	movf	___fladd@b^0,w,c
  9368  00126A  1035               	iorwf	(___fladd@b+1)^0,w,c
  9369  00126C  1036               	iorwf	(___fladd@b+2)^0,w,c
  9370  00126E  1037               	iorwf	(___fladd@b+3)^0,w,c
  9371  001270  A4D8               	btfss	status,2,c
  9372  001272  EF3D  F009         	goto	u8001
  9373  001276  EF40  F009         	goto	u8000
  9374  00127A                     u8001:
  9375  00127A  0E01               	movlw	1
  9376  00127C  EF41  F009         	goto	u8010
  9377  001280                     u8000:
  9378  001280  0E00               	movlw	0
  9379  001282                     u8010:
  9380  001282  6E43               	movwf	___fladd@grs^0,c
  9381  001284  0E00               	movlw	0
  9382  001286  6E34               	movwf	___fladd@b^0,c
  9383  001288  0E00               	movlw	0
  9384  00128A  6E35               	movwf	(___fladd@b+1)^0,c
  9385  00128C  0E00               	movlw	0
  9386  00128E  6E36               	movwf	(___fladd@b+2)^0,c
  9387  001290  0E00               	movlw	0
  9388  001292  6E37               	movwf	(___fladd@b+3)^0,c
  9389  001294  C041  F042         	movff	___fladd@aexp,___fladd@bexp
  9390  001298  EF74  F009         	goto	l1420
  9391  00129C                     l1422:
  9392  00129C  A043               	btfss	___fladd@grs^0,0,c
  9393  00129E  EF53  F009         	goto	u8021
  9394  0012A2  EF55  F009         	goto	u8020
  9395  0012A6                     u8021:
  9396  0012A6  EF5B  F009         	goto	l7550
  9397  0012AA                     u8020:
  9398  0012AA  90D8               	bcf	status,0,c
  9399  0012AC  3043               	rrcf	___fladd@grs^0,w,c
  9400  0012AE  0901               	iorlw	1
  9401  0012B0  6E43               	movwf	___fladd@grs^0,c
  9402  0012B2  EF5D  F009         	goto	l7552
  9403  0012B6                     l7550:
  9404  0012B6  90D8               	bcf	status,0,c
  9405  0012B8  3243               	rrcf	___fladd@grs^0,f,c
  9406  0012BA                     l7552:
  9407  0012BA  A034               	btfss	___fladd@b^0,0,c
  9408  0012BC  EF62  F009         	goto	u8031
  9409  0012C0  EF64  F009         	goto	u8030
  9410  0012C4                     u8031:
  9411  0012C4  EF65  F009         	goto	l7556
  9412  0012C8                     u8030:
  9413  0012C8  8E43               	bsf	___fladd@grs^0,7,c
  9414  0012CA                     l7556:
  9415  0012CA  3437               	rlcf	(___fladd@b+3)^0,w,c
  9416  0012CC  3237               	rrcf	(___fladd@b+3)^0,f,c
  9417  0012CE  3236               	rrcf	(___fladd@b+2)^0,f,c
  9418  0012D0  3235               	rrcf	(___fladd@b+1)^0,f,c
  9419  0012D2  3234               	rrcf	___fladd@b^0,f,c
  9420  0012D4  2A42               	incf	___fladd@bexp^0,f,c
  9421  0012D6                     l1421:
  9422  0012D6  5041               	movf	___fladd@aexp^0,w,c
  9423  0012D8  5C42               	subwf	___fladd@bexp^0,w,c
  9424  0012DA  A0D8               	btfss	status,0,c
  9425  0012DC  EF72  F009         	goto	u8041
  9426  0012E0  EF74  F009         	goto	u8040
  9427  0012E4                     u8041:
  9428  0012E4  EF4E  F009         	goto	l1422
  9429  0012E8                     u8040:
  9430  0012E8                     l1420:
  9431  0012E8  BC40               	btfsc	___fladd@signs^0,6,c
  9432  0012EA  EF79  F009         	goto	u8051
  9433  0012EE  EF7B  F009         	goto	u8050
  9434  0012F2                     u8051:
  9435  0012F2  EFBB  F009         	goto	l7584
  9436  0012F6                     u8050:
  9437  0012F6  5042               	movf	___fladd@bexp^0,w,c
  9438  0012F8  A4D8               	btfss	status,2,c
  9439  0012FA  EF81  F009         	goto	u8061
  9440  0012FE  EF83  F009         	goto	u8060
  9441  001302                     u8061:
  9442  001302  EF8D  F009         	goto	l7566
  9443  001306                     u8060:
  9444  001306  0E00               	movlw	0
  9445  001308  6E34               	movwf	?___fladd^0,c
  9446  00130A  0E00               	movlw	0
  9447  00130C  6E35               	movwf	(?___fladd+1)^0,c
  9448  00130E  0E00               	movlw	0
  9449  001310  6E36               	movwf	(?___fladd+2)^0,c
  9450  001312  0E00               	movlw	0
  9451  001314  6E37               	movwf	(?___fladd+3)^0,c
  9452  001316  EFDC  F00A         	goto	l1429
  9453  00131A                     l7566:
  9454  00131A  5038               	movf	___fladd@a^0,w,c
  9455  00131C  2634               	addwf	___fladd@b^0,f,c
  9456  00131E  5039               	movf	(___fladd@a+1)^0,w,c
  9457  001320  2235               	addwfc	(___fladd@b+1)^0,f,c
  9458  001322  503A               	movf	(___fladd@a+2)^0,w,c
  9459  001324  2236               	addwfc	(___fladd@b+2)^0,f,c
  9460  001326  503B               	movf	(___fladd@a+3)^0,w,c
  9461  001328  2237               	addwfc	(___fladd@b+3)^0,f,c
  9462  00132A  A037               	btfss	(___fladd@b+3)^0,0,c
  9463  00132C  EF9A  F009         	goto	u8071
  9464  001330  EF9C  F009         	goto	u8070
  9465  001334                     u8071:
  9466  001334  EF48  F00A         	goto	l7620
  9467  001338                     u8070:
  9468  001338  A043               	btfss	___fladd@grs^0,0,c
  9469  00133A  EFA1  F009         	goto	u8081
  9470  00133E  EFA3  F009         	goto	u8080
  9471  001342                     u8081:
  9472  001342  EFA9  F009         	goto	l7574
  9473  001346                     u8080:
  9474  001346  90D8               	bcf	status,0,c
  9475  001348  3043               	rrcf	___fladd@grs^0,w,c
  9476  00134A  0901               	iorlw	1
  9477  00134C  6E43               	movwf	___fladd@grs^0,c
  9478  00134E  EFAB  F009         	goto	l7576
  9479  001352                     l7574:
  9480  001352  90D8               	bcf	status,0,c
  9481  001354  3243               	rrcf	___fladd@grs^0,f,c
  9482  001356                     l7576:
  9483  001356  A034               	btfss	___fladd@b^0,0,c
  9484  001358  EFB0  F009         	goto	u8091
  9485  00135C  EFB2  F009         	goto	u8090
  9486  001360                     u8091:
  9487  001360  EFB3  F009         	goto	l7580
  9488  001364                     u8090:
  9489  001364  8E43               	bsf	___fladd@grs^0,7,c
  9490  001366                     l7580:
  9491  001366  3437               	rlcf	(___fladd@b+3)^0,w,c
  9492  001368  3237               	rrcf	(___fladd@b+3)^0,f,c
  9493  00136A  3236               	rrcf	(___fladd@b+2)^0,f,c
  9494  00136C  3235               	rrcf	(___fladd@b+1)^0,f,c
  9495  00136E  3234               	rrcf	___fladd@b^0,f,c
  9496  001370  2A42               	incf	___fladd@bexp^0,f,c
  9497  001372  EF48  F00A         	goto	l7620
  9498  001376                     l7584:
  9499  001376  5038               	movf	___fladd@a^0,w,c
  9500  001378  5C34               	subwf	___fladd@b^0,w,c
  9501  00137A  5039               	movf	(___fladd@a+1)^0,w,c
  9502  00137C  5835               	subwfb	(___fladd@b+1)^0,w,c
  9503  00137E  503A               	movf	(___fladd@a+2)^0,w,c
  9504  001380  5836               	subwfb	(___fladd@b+2)^0,w,c
  9505  001382  5037               	movf	(___fladd@b+3)^0,w,c
  9506  001384  0A80               	xorlw	128
  9507  001386  6E3C               	movwf	??___fladd^0,c
  9508  001388  503B               	movf	(___fladd@a+3)^0,w,c
  9509  00138A  0A80               	xorlw	128
  9510  00138C  583C               	subwfb	??___fladd^0,w,c
  9511  00138E  B0D8               	btfsc	status,0,c
  9512  001390  EFCC  F009         	goto	u8101
  9513  001394  EFCE  F009         	goto	u8100
  9514  001398                     u8101:
  9515  001398  EFF9  F009         	goto	l7594
  9516  00139C                     u8100:
  9517  00139C  5034               	movf	___fladd@b^0,w,c
  9518  00139E  5C38               	subwf	___fladd@a^0,w,c
  9519  0013A0  6E3C               	movwf	??___fladd^0,c
  9520  0013A2  5035               	movf	(___fladd@b+1)^0,w,c
  9521  0013A4  5839               	subwfb	(___fladd@a+1)^0,w,c
  9522  0013A6  6E3D               	movwf	(??___fladd+1)^0,c
  9523  0013A8  5036               	movf	(___fladd@b+2)^0,w,c
  9524  0013AA  583A               	subwfb	(___fladd@a+2)^0,w,c
  9525  0013AC  6E3E               	movwf	(??___fladd+2)^0,c
  9526  0013AE  5037               	movf	(___fladd@b+3)^0,w,c
  9527  0013B0  583B               	subwfb	(___fladd@a+3)^0,w,c
  9528  0013B2  6E3F               	movwf	(??___fladd+3)^0,c
  9529  0013B4  0EFF               	movlw	255
  9530  0013B6  243C               	addwf	??___fladd^0,w,c
  9531  0013B8  6E34               	movwf	___fladd@b^0,c
  9532  0013BA  0EFF               	movlw	255
  9533  0013BC  203D               	addwfc	(??___fladd+1)^0,w,c
  9534  0013BE  6E35               	movwf	(___fladd@b+1)^0,c
  9535  0013C0  0EFF               	movlw	255
  9536  0013C2  203E               	addwfc	(??___fladd+2)^0,w,c
  9537  0013C4  6E36               	movwf	(___fladd@b+2)^0,c
  9538  0013C6  0EFF               	movlw	255
  9539  0013C8  203F               	addwfc	(??___fladd+3)^0,w,c
  9540  0013CA  6E37               	movwf	(___fladd@b+3)^0,c
  9541  0013CC  0E80               	movlw	128
  9542  0013CE  1A40               	xorwf	___fladd@signs^0,f,c
  9543  0013D0  6C43               	negf	___fladd@grs^0,c
  9544  0013D2  5043               	movf	___fladd@grs^0,w,c
  9545  0013D4  A4D8               	btfss	status,2,c
  9546  0013D6  EFEF  F009         	goto	u8111
  9547  0013DA  EFF1  F009         	goto	u8110
  9548  0013DE                     u8111:
  9549  0013DE  EF01  F00A         	goto	l1437
  9550  0013E2                     u8110:
  9551  0013E2  0E01               	movlw	1
  9552  0013E4  2634               	addwf	___fladd@b^0,f,c
  9553  0013E6  0E00               	movlw	0
  9554  0013E8  2235               	addwfc	(___fladd@b+1)^0,f,c
  9555  0013EA  2236               	addwfc	(___fladd@b+2)^0,f,c
  9556  0013EC  2237               	addwfc	(___fladd@b+3)^0,f,c
  9557  0013EE  EF01  F00A         	goto	l1437
  9558  0013F2                     l7594:
  9559  0013F2  5038               	movf	___fladd@a^0,w,c
  9560  0013F4  5E34               	subwf	___fladd@b^0,f,c
  9561  0013F6  5039               	movf	(___fladd@a+1)^0,w,c
  9562  0013F8  5A35               	subwfb	(___fladd@b+1)^0,f,c
  9563  0013FA  503A               	movf	(___fladd@a+2)^0,w,c
  9564  0013FC  5A36               	subwfb	(___fladd@b+2)^0,f,c
  9565  0013FE  503B               	movf	(___fladd@a+3)^0,w,c
  9566  001400  5A37               	subwfb	(___fladd@b+3)^0,f,c
  9567  001402                     l1437:
  9568  001402  5034               	movf	___fladd@b^0,w,c
  9569  001404  1035               	iorwf	(___fladd@b+1)^0,w,c
  9570  001406  1036               	iorwf	(___fladd@b+2)^0,w,c
  9571  001408  1037               	iorwf	(___fladd@b+3)^0,w,c
  9572  00140A  A4D8               	btfss	status,2,c
  9573  00140C  EF0A  F00A         	goto	u8121
  9574  001410  EF0C  F00A         	goto	u8120
  9575  001414                     u8121:
  9576  001414  EF41  F00A         	goto	l7618
  9577  001418                     u8120:
  9578  001418  5043               	movf	___fladd@grs^0,w,c
  9579  00141A  A4D8               	btfss	status,2,c
  9580  00141C  EF12  F00A         	goto	u8131
  9581  001420  EF14  F00A         	goto	u8130
  9582  001424                     u8131:
  9583  001424  EF41  F00A         	goto	l7618
  9584  001428                     u8130:
  9585  001428  0E00               	movlw	0
  9586  00142A  6E34               	movwf	?___fladd^0,c
  9587  00142C  0E00               	movlw	0
  9588  00142E  6E35               	movwf	(?___fladd+1)^0,c
  9589  001430  0E00               	movlw	0
  9590  001432  6E36               	movwf	(?___fladd+2)^0,c
  9591  001434  0E00               	movlw	0
  9592  001436  6E37               	movwf	(?___fladd+3)^0,c
  9593  001438  EFDC  F00A         	goto	l1429
  9594  00143C                     l7602:
  9595  00143C  90D8               	bcf	status,0,c
  9596  00143E  3634               	rlcf	___fladd@b^0,f,c
  9597  001440  3635               	rlcf	(___fladd@b+1)^0,f,c
  9598  001442  3636               	rlcf	(___fladd@b+2)^0,f,c
  9599  001444  3637               	rlcf	(___fladd@b+3)^0,f,c
  9600  001446  AE43               	btfss	___fladd@grs^0,7,c
  9601  001448  EF28  F00A         	goto	u8141
  9602  00144C  EF2A  F00A         	goto	u8140
  9603  001450                     u8141:
  9604  001450  EF2B  F00A         	goto	l7608
  9605  001454                     u8140:
  9606  001454  8034               	bsf	___fladd@b^0,0,c
  9607  001456                     l7608:
  9608  001456  A043               	btfss	___fladd@grs^0,0,c
  9609  001458  EF30  F00A         	goto	u8151
  9610  00145C  EF32  F00A         	goto	u8150
  9611  001460                     u8151:
  9612  001460  EF36  F00A         	goto	l7612
  9613  001464                     u8150:
  9614  001464  80D8               	bsf	status,0,c
  9615  001466  3643               	rlcf	___fladd@grs^0,f,c
  9616  001468  EF38  F00A         	goto	l7614
  9617  00146C                     l7612:
  9618  00146C  90D8               	bcf	status,0,c
  9619  00146E  3643               	rlcf	___fladd@grs^0,f,c
  9620  001470                     l7614:
  9621  001470  5042               	movf	___fladd@bexp^0,w,c
  9622  001472  B4D8               	btfsc	status,2,c
  9623  001474  EF3E  F00A         	goto	u8161
  9624  001478  EF40  F00A         	goto	u8160
  9625  00147C                     u8161:
  9626  00147C  EF41  F00A         	goto	l7618
  9627  001480                     u8160:
  9628  001480  0642               	decf	___fladd@bexp^0,f,c
  9629  001482                     l7618:
  9630  001482  AE36               	btfss	(___fladd@b+2)^0,7,c
  9631  001484  EF46  F00A         	goto	u8171
  9632  001488  EF48  F00A         	goto	u8170
  9633  00148C                     u8171:
  9634  00148C  EF1E  F00A         	goto	l7602
  9635  001490                     u8170:
  9636  001490                     l7620:
  9637  001490  0E00               	movlw	0
  9638  001492  6E41               	movwf	___fladd@aexp^0,c
  9639  001494  AE43               	btfss	___fladd@grs^0,7,c
  9640  001496  EF4F  F00A         	goto	u8181
  9641  00149A  EF51  F00A         	goto	u8180
  9642  00149E                     u8181:
  9643  00149E  EF69  F00A         	goto	l1446
  9644  0014A2                     u8180:
  9645  0014A2  C043  F03C         	movff	___fladd@grs,??___fladd
  9646  0014A6  0E7F               	movlw	127
  9647  0014A8  163C               	andwf	??___fladd^0,f,c
  9648  0014AA  B4D8               	btfsc	status,2,c
  9649  0014AC  EF5A  F00A         	goto	u8191
  9650  0014B0  EF5C  F00A         	goto	u8190
  9651  0014B4                     u8191:
  9652  0014B4  EF60  F00A         	goto	l1447
  9653  0014B8                     u8190:
  9654  0014B8                     l7626:
  9655  0014B8  0E01               	movlw	1
  9656  0014BA  6E41               	movwf	___fladd@aexp^0,c
  9657  0014BC  EF69  F00A         	goto	l1446
  9658  0014C0                     l1447:
  9659  0014C0  A034               	btfss	___fladd@b^0,0,c
  9660  0014C2  EF65  F00A         	goto	u8201
  9661  0014C6  EF67  F00A         	goto	u8200
  9662  0014CA                     u8201:
  9663  0014CA  EF69  F00A         	goto	l1446
  9664  0014CE                     u8200:
  9665  0014CE  EF5C  F00A         	goto	l7626
  9666  0014D2                     l1446:
  9667  0014D2  5041               	movf	___fladd@aexp^0,w,c
  9668  0014D4  B4D8               	btfsc	status,2,c
  9669  0014D6  EF6F  F00A         	goto	u8211
  9670  0014DA  EF71  F00A         	goto	u8210
  9671  0014DE                     u8211:
  9672  0014DE  EF9C  F00A         	goto	l7638
  9673  0014E2                     u8210:
  9674  0014E2  0E01               	movlw	1
  9675  0014E4  2634               	addwf	___fladd@b^0,f,c
  9676  0014E6  0E00               	movlw	0
  9677  0014E8  2235               	addwfc	(___fladd@b+1)^0,f,c
  9678  0014EA  2236               	addwfc	(___fladd@b+2)^0,f,c
  9679  0014EC  2237               	addwfc	(___fladd@b+3)^0,f,c
  9680  0014EE  A037               	btfss	(___fladd@b+3)^0,0,c
  9681  0014F0  EF7C  F00A         	goto	u8221
  9682  0014F4  EF7E  F00A         	goto	u8220
  9683  0014F8                     u8221:
  9684  0014F8  EF9C  F00A         	goto	l7638
  9685  0014FC                     u8220:
  9686  0014FC  C034  F03C         	movff	___fladd@b,??___fladd
  9687  001500  C035  F03D         	movff	___fladd@b+1,??___fladd+1
  9688  001504  C036  F03E         	movff	___fladd@b+2,??___fladd+2
  9689  001508  C037  F03F         	movff	___fladd@b+3,??___fladd+3
  9690  00150C  343F               	rlcf	(??___fladd+3)^0,w,c
  9691  00150E  323F               	rrcf	(??___fladd+3)^0,f,c
  9692  001510  323E               	rrcf	(??___fladd+2)^0,f,c
  9693  001512  323D               	rrcf	(??___fladd+1)^0,f,c
  9694  001514  323C               	rrcf	??___fladd^0,f,c
  9695  001516  C03C  F034         	movff	??___fladd,___fladd@b
  9696  00151A  C03D  F035         	movff	??___fladd+1,___fladd@b+1
  9697  00151E  C03E  F036         	movff	??___fladd+2,___fladd@b+2
  9698  001522  C03F  F037         	movff	??___fladd+3,___fladd@b+3
  9699  001526  2842               	incf	___fladd@bexp^0,w,c
  9700  001528  B4D8               	btfsc	status,2,c
  9701  00152A  EF99  F00A         	goto	u8231
  9702  00152E  EF9B  F00A         	goto	u8230
  9703  001532                     u8231:
  9704  001532  EF9C  F00A         	goto	l7638
  9705  001536                     u8230:
  9706  001536  2A42               	incf	___fladd@bexp^0,f,c
  9707  001538                     l7638:
  9708  001538  2842               	incf	___fladd@bexp^0,w,c
  9709  00153A  B4D8               	btfsc	status,2,c
  9710  00153C  EFA2  F00A         	goto	u8241
  9711  001540  EFA4  F00A         	goto	u8240
  9712  001544                     u8241:
  9713  001544  EFAC  F00A         	goto	l7642
  9714  001548                     u8240:
  9715  001548  5042               	movf	___fladd@bexp^0,w,c
  9716  00154A  A4D8               	btfss	status,2,c
  9717  00154C  EFAA  F00A         	goto	u8251
  9718  001550  EFAC  F00A         	goto	u8250
  9719  001554                     u8251:
  9720  001554  EFBE  F00A         	goto	l7646
  9721  001558                     u8250:
  9722  001558                     l7642:
  9723  001558  0E00               	movlw	0
  9724  00155A  6E34               	movwf	___fladd@b^0,c
  9725  00155C  0E00               	movlw	0
  9726  00155E  6E35               	movwf	(___fladd@b+1)^0,c
  9727  001560  0E00               	movlw	0
  9728  001562  6E36               	movwf	(___fladd@b+2)^0,c
  9729  001564  0E00               	movlw	0
  9730  001566  6E37               	movwf	(___fladd@b+3)^0,c
  9731  001568  5042               	movf	___fladd@bexp^0,w,c
  9732  00156A  A4D8               	btfss	status,2,c
  9733  00156C  EFBA  F00A         	goto	u8261
  9734  001570  EFBC  F00A         	goto	u8260
  9735  001574                     u8261:
  9736  001574  EFBE  F00A         	goto	l7646
  9737  001578                     u8260:
  9738  001578  0E00               	movlw	0
  9739  00157A  6E40               	movwf	___fladd@signs^0,c
  9740  00157C                     l7646:
  9741  00157C  A042               	btfss	___fladd@bexp^0,0,c
  9742  00157E  EFC3  F00A         	goto	u8271
  9743  001582  EFC5  F00A         	goto	u8270
  9744  001586                     u8271:
  9745  001586  EFC8  F00A         	goto	l7650
  9746  00158A                     u8270:
  9747  00158A  8E36               	bsf	(___fladd@b+2)^0,7,c
  9748  00158C  EFC9  F00A         	goto	l7652
  9749  001590                     l7650:
  9750  001590  9E36               	bcf	(___fladd@b+2)^0,7,c
  9751  001592                     l7652:
  9752  001592  90D8               	bcf	status,0,c
  9753  001594  3042               	rrcf	___fladd@bexp^0,w,c
  9754  001596  6E37               	movwf	(___fladd@b+3)^0,c
  9755  001598  AE40               	btfss	___fladd@signs^0,7,c
  9756  00159A  EFD1  F00A         	goto	u8281
  9757  00159E  EFD3  F00A         	goto	u8280
  9758  0015A2                     u8281:
  9759  0015A2  EFD4  F00A         	goto	l7658
  9760  0015A6                     u8280:
  9761  0015A6  8E37               	bsf	(___fladd@b+3)^0,7,c
  9762  0015A8                     l7658:
  9763  0015A8  C034  F034         	movff	___fladd@b,?___fladd
  9764  0015AC  C035  F035         	movff	___fladd@b+1,?___fladd+1
  9765  0015B0  C036  F036         	movff	___fladd@b+2,?___fladd+2
  9766  0015B4  C037  F037         	movff	___fladd@b+3,?___fladd+3
  9767  0015B8                     l1429:
  9768  0015B8  0012               	return		;funcret
  9769  0015BA                     __end_of___fladd:
  9770                           	opt callstack 0
  9771                           
  9772 ;; *************** function ___flneg *****************
  9773 ;; Defined at:
  9774 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  f1              4    5[COMRAM] unsigned char 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  4    5[COMRAM] unsigned char 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9788 ;;      Params:         4       0       0       0       0       0       0       0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9791 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9792 ;;Total ram usage:        4 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:    2
  9795 ;; This function calls:
  9796 ;;		Nothing
  9797 ;; This function is called by:
  9798 ;;		_efgtoa
  9799 ;;		_roundf
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text40
  9804  0044D8                     __ptext40:
  9805                           	opt callstack 0
  9806  0044D8                     ___flneg:
  9807                           	opt callstack 23
  9808  0044D8  5006               	movf	___flneg@f1^0,w,c
  9809  0044DA  1007               	iorwf	(___flneg@f1+1)^0,w,c
  9810  0044DC  1008               	iorwf	(___flneg@f1+2)^0,w,c
  9811  0044DE  1009               	iorwf	(___flneg@f1+3)^0,w,c
  9812  0044E0  B4D8               	btfsc	status,2,c
  9813  0044E2  EF75  F022         	goto	u9331
  9814  0044E6  EF77  F022         	goto	u9330
  9815  0044EA                     u9331:
  9816  0044EA  EF7F  F022         	goto	l8242
  9817  0044EE                     u9330:
  9818  0044EE  0E00               	movlw	0
  9819  0044F0  1A06               	xorwf	___flneg@f1^0,f,c
  9820  0044F2  0E00               	movlw	0
  9821  0044F4  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  9822  0044F6  0E00               	movlw	0
  9823  0044F8  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  9824  0044FA  0E80               	movlw	128
  9825  0044FC  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  9826  0044FE                     l8242:
  9827  0044FE  C006  F006         	movff	___flneg@f1,?___flneg
  9828  004502  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  9829  004506  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  9830  00450A  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  9831  00450E  0012               	return		;funcret
  9832  004510                     __end_of___flneg:
  9833                           	opt callstack 0
  9834                           
  9835 ;; *************** function ___flge *****************
  9836 ;; Defined at:
  9837 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  ff1             4   51[COMRAM] unsigned char 
  9840 ;;  ff2             4   55[COMRAM] unsigned char 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;		None
  9843 ;; Return value:  Size  Location     Type
  9844 ;;		None               void
  9845 ;; Registers used:
  9846 ;;		wreg, status,2, status,0
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9852 ;;      Params:         8       0       0       0       0       0       0       0       0
  9853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9854 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9855 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9856 ;;Total ram usage:       12 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; Hardware stack levels required when called:    2
  9859 ;; This function calls:
  9860 ;;		Nothing
  9861 ;; This function is called by:
  9862 ;;		_probarPID
  9863 ;;		_efgtoa
  9864 ;;		_roundf
  9865 ;;		_hayCruce
  9866 ;;		_decidirDireccion
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text41
  9871  00353C                     __ptext41:
  9872                           	opt callstack 0
  9873  00353C                     ___flge:
  9874                           	opt callstack 23
  9875  00353C  0E00               	movlw	0
  9876  00353E  1434               	andwf	___flge@ff1^0,w,c
  9877  003540  6E3C               	movwf	??___flge^0,c
  9878  003542  0E00               	movlw	0
  9879  003544  1435               	andwf	(___flge@ff1+1)^0,w,c
  9880  003546  6E3D               	movwf	(??___flge+1)^0,c
  9881  003548  0E80               	movlw	128
  9882  00354A  1436               	andwf	(___flge@ff1+2)^0,w,c
  9883  00354C  6E3E               	movwf	(??___flge+2)^0,c
  9884  00354E  0E7F               	movlw	127
  9885  003550  1437               	andwf	(___flge@ff1+3)^0,w,c
  9886  003552  6E3F               	movwf	(??___flge+3)^0,c
  9887  003554  503C               	movf	??___flge^0,w,c
  9888  003556  103D               	iorwf	(??___flge+1)^0,w,c
  9889  003558  103E               	iorwf	(??___flge+2)^0,w,c
  9890  00355A  103F               	iorwf	(??___flge+3)^0,w,c
  9891  00355C  A4D8               	btfss	status,2,c
  9892  00355E  EFB3  F01A         	goto	u9281
  9893  003562  EFB5  F01A         	goto	u9280
  9894  003566                     u9281:
  9895  003566  EFBD  F01A         	goto	l8220
  9896  00356A                     u9280:
  9897  00356A  0E00               	movlw	0
  9898  00356C  6E34               	movwf	___flge@ff1^0,c
  9899  00356E  0E00               	movlw	0
  9900  003570  6E35               	movwf	(___flge@ff1+1)^0,c
  9901  003572  0E00               	movlw	0
  9902  003574  6E36               	movwf	(___flge@ff1+2)^0,c
  9903  003576  0E00               	movlw	0
  9904  003578  6E37               	movwf	(___flge@ff1+3)^0,c
  9905  00357A                     l8220:
  9906  00357A  0E00               	movlw	0
  9907  00357C  1438               	andwf	___flge@ff2^0,w,c
  9908  00357E  6E3C               	movwf	??___flge^0,c
  9909  003580  0E00               	movlw	0
  9910  003582  1439               	andwf	(___flge@ff2+1)^0,w,c
  9911  003584  6E3D               	movwf	(??___flge+1)^0,c
  9912  003586  0E80               	movlw	128
  9913  003588  143A               	andwf	(___flge@ff2+2)^0,w,c
  9914  00358A  6E3E               	movwf	(??___flge+2)^0,c
  9915  00358C  0E7F               	movlw	127
  9916  00358E  143B               	andwf	(___flge@ff2+3)^0,w,c
  9917  003590  6E3F               	movwf	(??___flge+3)^0,c
  9918  003592  503C               	movf	??___flge^0,w,c
  9919  003594  103D               	iorwf	(??___flge+1)^0,w,c
  9920  003596  103E               	iorwf	(??___flge+2)^0,w,c
  9921  003598  103F               	iorwf	(??___flge+3)^0,w,c
  9922  00359A  A4D8               	btfss	status,2,c
  9923  00359C  EFD2  F01A         	goto	u9291
  9924  0035A0  EFD4  F01A         	goto	u9290
  9925  0035A4                     u9291:
  9926  0035A4  EFDC  F01A         	goto	l8224
  9927  0035A8                     u9290:
  9928  0035A8  0E00               	movlw	0
  9929  0035AA  6E38               	movwf	___flge@ff2^0,c
  9930  0035AC  0E00               	movlw	0
  9931  0035AE  6E39               	movwf	(___flge@ff2+1)^0,c
  9932  0035B0  0E00               	movlw	0
  9933  0035B2  6E3A               	movwf	(___flge@ff2+2)^0,c
  9934  0035B4  0E00               	movlw	0
  9935  0035B6  6E3B               	movwf	(___flge@ff2+3)^0,c
  9936  0035B8                     l8224:
  9937  0035B8  AE37               	btfss	(___flge@ff1+3)^0,7,c
  9938  0035BA  EFE1  F01A         	goto	u9301
  9939  0035BE  EFE3  F01A         	goto	u9300
  9940  0035C2                     u9301:
  9941  0035C2  EFEC  F01A         	goto	l8228
  9942  0035C6                     u9300:
  9943  0035C6  6C34               	negf	___flge@ff1^0,c
  9944  0035C8  1E35               	comf	(___flge@ff1+1)^0,f,c
  9945  0035CA  B0D8               	btfsc	status,0,c
  9946  0035CC  2A35               	incf	(___flge@ff1+1)^0,f,c
  9947  0035CE  1E36               	comf	(___flge@ff1+2)^0,f,c
  9948  0035D0  B0D8               	btfsc	status,0,c
  9949  0035D2  2A36               	incf	(___flge@ff1+2)^0,f,c
  9950  0035D4  0E80               	movlw	128
  9951  0035D6  5637               	subfwb	(___flge@ff1+3)^0,f,c
  9952  0035D8                     l8228:
  9953  0035D8  AE3B               	btfss	(___flge@ff2+3)^0,7,c
  9954  0035DA  EFF1  F01A         	goto	u9311
  9955  0035DE  EFF3  F01A         	goto	u9310
  9956  0035E2                     u9311:
  9957  0035E2  EFFC  F01A         	goto	l1157
  9958  0035E6                     u9310:
  9959  0035E6  6C38               	negf	___flge@ff2^0,c
  9960  0035E8  1E39               	comf	(___flge@ff2+1)^0,f,c
  9961  0035EA  B0D8               	btfsc	status,0,c
  9962  0035EC  2A39               	incf	(___flge@ff2+1)^0,f,c
  9963  0035EE  1E3A               	comf	(___flge@ff2+2)^0,f,c
  9964  0035F0  B0D8               	btfsc	status,0,c
  9965  0035F2  2A3A               	incf	(___flge@ff2+2)^0,f,c
  9966  0035F4  0E80               	movlw	128
  9967  0035F6  563B               	subfwb	(___flge@ff2+3)^0,f,c
  9968  0035F8                     l1157:
  9969  0035F8  0E00               	movlw	0
  9970  0035FA  1A34               	xorwf	___flge@ff1^0,f,c
  9971  0035FC  0E00               	movlw	0
  9972  0035FE  1A35               	xorwf	(___flge@ff1+1)^0,f,c
  9973  003600  0E00               	movlw	0
  9974  003602  1A36               	xorwf	(___flge@ff1+2)^0,f,c
  9975  003604  0E80               	movlw	128
  9976  003606  1A37               	xorwf	(___flge@ff1+3)^0,f,c
  9977  003608  0E00               	movlw	0
  9978  00360A  1A38               	xorwf	___flge@ff2^0,f,c
  9979  00360C  0E00               	movlw	0
  9980  00360E  1A39               	xorwf	(___flge@ff2+1)^0,f,c
  9981  003610  0E00               	movlw	0
  9982  003612  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
  9983  003614  0E80               	movlw	128
  9984  003616  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
  9985  003618  5038               	movf	___flge@ff2^0,w,c
  9986  00361A  5C34               	subwf	___flge@ff1^0,w,c
  9987  00361C  5039               	movf	(___flge@ff2+1)^0,w,c
  9988  00361E  5835               	subwfb	(___flge@ff1+1)^0,w,c
  9989  003620  503A               	movf	(___flge@ff2+2)^0,w,c
  9990  003622  5836               	subwfb	(___flge@ff1+2)^0,w,c
  9991  003624  503B               	movf	(___flge@ff2+3)^0,w,c
  9992  003626  5837               	subwfb	(___flge@ff1+3)^0,w,c
  9993  003628  B0D8               	btfsc	status,0,c
  9994  00362A  EF19  F01B         	goto	u9321
  9995  00362E  EF1B  F01B         	goto	u9320
  9996  003632                     u9321:
  9997  003632  EF1E  F01B         	goto	l8234
  9998  003636                     u9320:
  9999  003636  90D8               	bcf	status,0,c
 10000  003638  EF1F  F01B         	goto	l1162
 10001  00363C                     l8234:
 10002  00363C  80D8               	bsf	status,0,c
 10003  00363E                     l1162:
 10004  00363E  0012               	return		;funcret
 10005  003640                     __end_of___flge:
 10006                           	opt callstack 0
 10007                           
 10008 ;; *************** function ___wmul *****************
 10009 ;; Defined at:
 10010 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  multiplier      2    5[COMRAM] unsigned int 
 10013 ;;  multiplicand    2    7[COMRAM] unsigned int 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;  product         2    9[COMRAM] unsigned int 
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  2    5[COMRAM] unsigned int 
 10018 ;; Registers used:
 10019 ;;		wreg, status,2, status,0, prodl, prodh
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10025 ;;      Params:         4       0       0       0       0       0       0       0       0
 10026 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10027 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10028 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10029 ;;Total ram usage:        6 bytes
 10030 ;; Hardware stack levels used:    1
 10031 ;; Hardware stack levels required when called:    2
 10032 ;; This function calls:
 10033 ;;		Nothing
 10034 ;; This function is called by:
 10035 ;;		_PID
 10036 ;;		_atoi
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text42
 10041  00456E                     __ptext42:
 10042                           	opt callstack 0
 10043  00456E                     ___wmul:
 10044                           	opt callstack 23
 10045  00456E  5006               	movf	___wmul@multiplier^0,w,c
 10046  004570  0208               	mulwf	___wmul@multiplicand^0,c
 10047  004572  CFF3 F00A          	movff	prodl,___wmul@product
 10048  004576  CFF4 F00B          	movff	prodh,___wmul@product+1
 10049  00457A  5006               	movf	___wmul@multiplier^0,w,c
 10050  00457C  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 10051  00457E  50F3               	movf	243,w,c
 10052  004580  260B               	addwf	(___wmul@product+1)^0,f,c
 10053  004582  5007               	movf	(___wmul@multiplier+1)^0,w,c
 10054  004584  0208               	mulwf	___wmul@multiplicand^0,c
 10055  004586  50F3               	movf	243,w,c
 10056  004588  260B               	addwf	(___wmul@product+1)^0,f,c
 10057  00458A  C00A  F006         	movff	___wmul@product,?___wmul
 10058  00458E  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 10059  004592  0012               	return		;funcret
 10060  004594                     __end_of___wmul:
 10061                           	opt callstack 0
 10062                           
 10063 ;; *************** function _inicializarComportamientoBasico *****************
 10064 ;; Defined at:
 10065 ;;		line 243 in file "main.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;		None
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;		None
 10070 ;; Return value:  Size  Location     Type
 10071 ;;                  1    wreg      void 
 10072 ;; Registers used:
 10073 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10074 ;; Tracked objects:
 10075 ;;		On entry : 0/0
 10076 ;;		On exit  : 0/0
 10077 ;;		Unchanged: 0/0
 10078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10079 ;;      Params:         0       0       0       0       0       0       0       0       0
 10080 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10081 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10082 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10083 ;;Total ram usage:        0 bytes
 10084 ;; Hardware stack levels used:    1
 10085 ;; Hardware stack levels required when called:    6
 10086 ;; This function calls:
 10087 ;;		_dameDistancia
 10088 ;;		_velocidadEstandar
 10089 ;; This function is called by:
 10090 ;;		_main
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           	psect	text43
 10095  004350                     __ptext43:
 10096                           	opt callstack 0
 10097  004350                     _inicializarComportamientoBasico:
 10098                           	opt callstack 24
 10099  004350                     
 10100                           ;main.c: 245:     mouse.curr_state = ENFRENTE;
 10101  004350  0E01               	movlw	1
 10102  004352  0100               	movlb	0	; () banked
 10103  004354  6FF9               	movwf	_mouse& (0+255),b
 10104  004356                     
 10105                           ; BSR set to: 0
 10106                           ;main.c: 247:     oldSensorDerecha = dameDistancia(DERECHA);
 10107  004356  0E03               	movlw	3
 10108  004358  ECE3  F018         	call	_dameDistancia
 10109  00435C  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
 10110  004360  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
 10111  004364  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
 10112  004368  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
 10113  00436C                     
 10114                           ;main.c: 248:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
 10115  00436C  0E02               	movlw	2
 10116  00436E  ECE3  F018         	call	_dameDistancia
 10117  004372  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
 10118  004376  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
 10119  00437A  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
 10120  00437E  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
 10121  004382                     
 10122                           ;main.c: 249:     oldSensorEnfrente = dameDistancia(ENFRENTE);
 10123  004382  0E01               	movlw	1
 10124  004384  ECE3  F018         	call	_dameDistancia
 10125  004388  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
 10126  00438C  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
 10127  004390  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
 10128  004394  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
 10129  004398                     
 10130                           ;main.c: 251:     velocidadEstandar();
 10131  004398  ECCA  F022         	call	_velocidadEstandar	;wreg free
 10132  00439C  0012               	return		;funcret
 10133  00439E                     __end_of_inicializarComportamientoBasico:
 10134                           	opt callstack 0
 10135                           
 10136 ;; *************** function _velocidadEstandar *****************
 10137 ;; Defined at:
 10138 ;;		line 1153 in file "main.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;		None
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;		None
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  1    wreg      void 
 10145 ;; Registers used:
 10146 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10152 ;;      Params:         0       0       0       0       0       0       0       0       0
 10153 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10154 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10155 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10156 ;;Total ram usage:        0 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:    5
 10159 ;; This function calls:
 10160 ;;		_pwmDuty
 10161 ;; This function is called by:
 10162 ;;		_inicializarComportamientoBasico
 10163 ;;		_finalizarRecorrido
 10164 ;;		_forzarEspejeoAuto
 10165 ;;		_comportamientoBasico
 10166 ;;		_regresarPuntoPartida
 10167 ;;		_regresarAlCruce
 10168 ;;		_recorrerCaminoEncontrado
 10169 ;; This function uses a non-reentrant model
 10170 ;;
 10171                           
 10172                           	psect	text44
 10173  004594                     __ptext44:
 10174                           	opt callstack 0
 10175  004594                     _velocidadEstandar:
 10176                           	opt callstack 23
 10177  004594                     
 10178                           ;main.c: 1155:     pwmDuty(100, 1);
 10179  004594  0E00               	movlw	0
 10180  004596  0100               	movlb	0	; () banked
 10181  004598  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 10182  00459A  0E64               	movlw	100
 10183  00459C  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 10184  00459E  0E01               	movlw	1
 10185  0045A0  6F7E               	movwf	pwmDuty@channel& (0+255),b
 10186  0045A2  EC2F  F014         	call	_pwmDuty	;wreg free
 10187                           
 10188                           ;main.c: 1156:     pwmDuty(100, 2);
 10189  0045A6  0E00               	movlw	0
 10190  0045A8  0100               	movlb	0	; () banked
 10191  0045AA  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 10192  0045AC  0E64               	movlw	100
 10193  0045AE  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 10194  0045B0  0E02               	movlw	2
 10195  0045B2  6F7E               	movwf	pwmDuty@channel& (0+255),b
 10196  0045B4  EC2F  F014         	call	_pwmDuty	;wreg free
 10197  0045B8  0012               	return		;funcret
 10198  0045BA                     __end_of_velocidadEstandar:
 10199                           	opt callstack 0
 10200                           
 10201 ;; *************** function _pwmDuty *****************
 10202 ;; Defined at:
 10203 ;;		line 20 in file "./pwm.h"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
 10206 ;;  channel         1   30[BANK0 ] unsigned char 
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  duty            4   36[BANK0 ] long 
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10218 ;;      Params:         0       3       0       0       0       0       0       0       0
 10219 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10220 ;;      Temps:          0       5       0       0       0       0       0       0       0
 10221 ;;      Totals:         0      12       0       0       0       0       0       0       0
 10222 ;;Total ram usage:       12 bytes
 10223 ;; Hardware stack levels used:    1
 10224 ;; Hardware stack levels required when called:    4
 10225 ;; This function calls:
 10226 ;;		___fldiv
 10227 ;;		___flmul
 10228 ;;		___fltol
 10229 ;;		___xxtofl
 10230 ;;		_map
 10231 ;; This function is called by:
 10232 ;;		_PID
 10233 ;;		_velocidadEstandar
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text45
 10238  00285E                     __ptext45:
 10239                           	opt callstack 0
 10240  00285E                     _pwmDuty:
 10241                           	opt callstack 23
 10242  00285E                     
 10243                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
 10244  00285E  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
 10245  002862  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
 10246  002866  6A22               	clrf	(map@x+2)^0,c
 10247  002868  6A23               	clrf	(map@x+3)^0,c
 10248  00286A  0E00               	movlw	0
 10249  00286C  6E24               	movwf	map@in_min^0,c
 10250  00286E  0E00               	movlw	0
 10251  002870  6E25               	movwf	(map@in_min+1)^0,c
 10252  002872  0E00               	movlw	0
 10253  002874  6E26               	movwf	(map@in_min+2)^0,c
 10254  002876  0E00               	movlw	0
 10255  002878  6E27               	movwf	(map@in_min+3)^0,c
 10256  00287A  0E64               	movlw	100
 10257  00287C  6E28               	movwf	map@in_max^0,c
 10258  00287E  0E00               	movlw	0
 10259  002880  6E29               	movwf	(map@in_max+1)^0,c
 10260  002882  0E00               	movlw	0
 10261  002884  6E2A               	movwf	(map@in_max+2)^0,c
 10262  002886  0E00               	movlw	0
 10263  002888  6E2B               	movwf	(map@in_max+3)^0,c
 10264  00288A  0E00               	movlw	0
 10265  00288C  6E2C               	movwf	map@out_min^0,c
 10266  00288E  0E00               	movlw	0
 10267  002890  6E2D               	movwf	(map@out_min+1)^0,c
 10268  002892  0E00               	movlw	0
 10269  002894  6E2E               	movwf	(map@out_min+2)^0,c
 10270  002896  0E00               	movlw	0
 10271  002898  6E2F               	movwf	(map@out_min+3)^0,c
 10272  00289A  0EFF               	movlw	255
 10273  00289C  6E30               	movwf	map@out_max^0,c
 10274  00289E  0E03               	movlw	3
 10275  0028A0  6E31               	movwf	(map@out_max+1)^0,c
 10276  0028A2  0E00               	movlw	0
 10277  0028A4  6E32               	movwf	(map@out_max+2)^0,c
 10278  0028A6  0E00               	movlw	0
 10279  0028A8  6E33               	movwf	(map@out_max+3)^0,c
 10280  0028AA  ECD2  F01E         	call	_map	;wreg free
 10281  0028AE  C020  F084         	movff	?_map,pwmDuty@duty
 10282  0028B2  C021  F085         	movff	?_map+1,pwmDuty@duty+1
 10283  0028B6  C022  F086         	movff	?_map+2,pwmDuty@duty+2
 10284  0028BA  C023  F087         	movff	?_map+3,pwmDuty@duty+3
 10285  0028BE                     
 10286                           ;./pwm.h: 24:     if (duty < 1024) {
 10287  0028BE  0100               	movlb	0	; () banked
 10288  0028C0  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
 10289  0028C2  EF6F  F014         	goto	u9530
 10290  0028C6  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
 10291  0028C8  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
 10292  0028CA  E107               	bnz	u9531
 10293  0028CC  0E04               	movlw	4
 10294  0028CE  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
 10295  0028D0  B0D8               	btfsc	status,0,c
 10296  0028D2  EF6D  F014         	goto	u9531
 10297  0028D6  EF6F  F014         	goto	u9530
 10298  0028DA                     u9531:
 10299  0028DA  EF0C  F015         	goto	l157
 10300  0028DE                     u9530:
 10301  0028DE                     
 10302                           ; BSR set to: 0
 10303                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
 10304  0028DE  0E00               	movlw	0
 10305  0028E0  6E1F               	movwf	___flmul@a^0,c
 10306  0028E2  0E00               	movlw	0
 10307  0028E4  6E20               	movwf	(___flmul@a+1)^0,c
 10308  0028E6  0EFA               	movlw	250
 10309  0028E8  6E21               	movwf	(___flmul@a+2)^0,c
 10310  0028EA  0E43               	movlw	67
 10311  0028EC  6E22               	movwf	(___flmul@a+3)^0,c
 10312  0028EE  0E00               	movlw	0
 10313  0028F0  6E48               	movwf	___fldiv@a^0,c
 10314  0028F2  0EC0               	movlw	192
 10315  0028F4  6E49               	movwf	(___fldiv@a+1)^0,c
 10316  0028F6  0E7F               	movlw	127
 10317  0028F8  6E4A               	movwf	(___fldiv@a+2)^0,c
 10318  0028FA  0E44               	movlw	68
 10319  0028FC  6E4B               	movwf	(___fldiv@a+3)^0,c
 10320  0028FE  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
 10321  002902  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
 10322  002906  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
 10323  00290A  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
 10324  00290E  0E01               	movlw	1
 10325  002910  EC0D  F015         	call	___xxtofl
 10326  002914  C00D  F044         	movff	?___xxtofl,___fldiv@b
 10327  002918  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
 10328  00291C  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
 10329  002920  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
 10330  002924  ECCB  F00E         	call	___fldiv	;wreg free
 10331  002928  C044  F01B         	movff	?___fldiv,___flmul@b
 10332  00292C  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
 10333  002930  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
 10334  002934  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
 10335  002938  ECDD  F00A         	call	___flmul	;wreg free
 10336  00293C  C01B  F072         	movff	?___flmul,___fltol@f1
 10337  002940  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
 10338  002944  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
 10339  002948  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
 10340  00294C  EC1A  F01A         	call	___fltol	;wreg free
 10341  002950  C072  F084         	movff	?___fltol,pwmDuty@duty
 10342  002954  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
 10343  002958  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
 10344  00295C  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
 10345                           
 10346                           ;./pwm.h: 28:         switch (channel) {
 10347  002960  EFF6  F014         	goto	l8360
 10348  002964                     l8354:
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
 10352  002964  0E02               	movlw	2
 10353  002966  6F7F               	movwf	??_pwmDuty& (0+255),b
 10354  002968  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 10355  00296C  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 10356  002970  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 10357  002974  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 10358  002978                     u9545:
 10359  002978  677F               	tstfsz	??_pwmDuty& (0+255),b
 10360  00297A  EFC1  F014         	goto	u9546
 10361  00297E  EFC9  F014         	goto	u9547
 10362  002982                     u9546:
 10363  002982  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 10364  002984  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 10365  002986  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 10366  002988  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 10367  00298A  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 10368  00298C  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 10369  00298E  EFBC  F014         	goto	u9545
 10370  002992                     u9547:
 10371  002992  0100               	movlb	0	; () banked
 10372  002994  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 10373  002996  6EBE               	movwf	190,c	;volatile
 10374                           
 10375                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
 10376  002998  0ECF               	movlw	207
 10377  00299A  16BD               	andwf	189,f,c	;volatile
 10378                           
 10379                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
 10380  00299C  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 10381  00299E  0BF0               	andlw	240
 10382  0029A0  0B30               	andlw	48
 10383  0029A2  12BD               	iorwf	189,f,c	;volatile
 10384                           
 10385                           ;./pwm.h: 34:                 break;
 10386  0029A4  EF0C  F015         	goto	l157
 10387  0029A8                     l8356:
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
 10391  0029A8  0E02               	movlw	2
 10392  0029AA  6F7F               	movwf	??_pwmDuty& (0+255),b
 10393  0029AC  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 10394  0029B0  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 10395  0029B4  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 10396  0029B8  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 10397  0029BC                     u9555:
 10398  0029BC  677F               	tstfsz	??_pwmDuty& (0+255),b
 10399  0029BE  EFE3  F014         	goto	u9556
 10400  0029C2  EFEB  F014         	goto	u9557
 10401  0029C6                     u9556:
 10402  0029C6  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 10403  0029C8  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 10404  0029CA  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 10405  0029CC  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 10406  0029CE  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 10407  0029D0  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 10408  0029D2  EFDE  F014         	goto	u9555
 10409  0029D6                     u9557:
 10410  0029D6  0100               	movlb	0	; () banked
 10411  0029D8  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 10412  0029DA  6EBB               	movwf	187,c	;volatile
 10413                           
 10414                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
 10415  0029DC  0ECF               	movlw	207
 10416  0029DE  16BA               	andwf	186,f,c	;volatile
 10417                           
 10418                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
 10419  0029E0  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 10420  0029E2  0BF0               	andlw	240
 10421  0029E4  0B30               	andlw	48
 10422  0029E6  12BA               	iorwf	186,f,c	;volatile
 10423                           
 10424                           ;./pwm.h: 40:                 break;
 10425  0029E8  EF0C  F015         	goto	l157
 10426  0029EC                     l8360:
 10427  0029EC  0100               	movlb	0	; () banked
 10428  0029EE  517E               	movf	pwmDuty@channel& (0+255),w,b
 10429  0029F0  6F7F               	movwf	??_pwmDuty& (0+255),b
 10430  0029F2  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
 10431                           
 10432                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10433                           ; Switch size 1, requested type "simple"
 10434                           ; Number of cases is 1, Range of values is 0 to 0
 10435                           ; switch strategies available:
 10436                           ; Name         Instructions Cycles
 10437                           ; simple_byte            4     3 (average)
 10438                           ;	Chosen strategy is simple_byte
 10439  0029F4  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 10440  0029F6  0A00               	xorlw	0	; case 0
 10441  0029F8  B4D8               	btfsc	status,2,c
 10442  0029FA  EF01  F015         	goto	l10116
 10443  0029FE  EF0C  F015         	goto	l157
 10444  002A02                     l10116:
 10445                           
 10446                           ; BSR set to: 0
 10447                           ; Switch size 1, requested type "simple"
 10448                           ; Number of cases is 2, Range of values is 1 to 2
 10449                           ; switch strategies available:
 10450                           ; Name         Instructions Cycles
 10451                           ; simple_byte            7     4 (average)
 10452                           ;	Chosen strategy is simple_byte
 10453  002A02  517F               	movf	??_pwmDuty& (0+255),w,b
 10454  002A04  0A01               	xorlw	1	; case 1
 10455  002A06  B4D8               	btfsc	status,2,c
 10456  002A08  EFB2  F014         	goto	l8354
 10457  002A0C  0A03               	xorlw	3	; case 2
 10458  002A0E  B4D8               	btfsc	status,2,c
 10459  002A10  EFD4  F014         	goto	l8356
 10460  002A14  EF0C  F015         	goto	l157
 10461  002A18                     l157:
 10462                           
 10463                           ; BSR set to: 0
 10464  002A18  0012               	return		;funcret
 10465  002A1A                     __end_of_pwmDuty:
 10466                           	opt callstack 0
 10467                           
 10468 ;; *************** function _map *****************
 10469 ;; Defined at:
 10470 ;;		line 16 in file "./pwm.h"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  x               4   31[COMRAM] long 
 10473 ;;  in_min          4   35[COMRAM] long 
 10474 ;;  in_max          4   39[COMRAM] long 
 10475 ;;  out_min         4   43[COMRAM] long 
 10476 ;;  out_max         4   47[COMRAM] long 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;		None
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  4   31[COMRAM] long 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0, cstack
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10488 ;;      Params:        20       0       0       0       0       0       0       0       0
 10489 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10491 ;;      Totals:        20       0       0       0       0       0       0       0       0
 10492 ;;Total ram usage:       20 bytes
 10493 ;; Hardware stack levels used:    1
 10494 ;; Hardware stack levels required when called:    3
 10495 ;; This function calls:
 10496 ;;		___aldiv
 10497 ;;		___lmul
 10498 ;; This function is called by:
 10499 ;;		_pwmDuty
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           	psect	text46
 10504  003DA4                     __ptext46:
 10505                           	opt callstack 0
 10506  003DA4                     _map:
 10507                           	opt callstack 23
 10508  003DA4                     
 10509                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
 10510  003DA4  5024               	movf	map@in_min^0,w,c
 10511  003DA6  5C20               	subwf	map@x^0,w,c
 10512  003DA8  6E06               	movwf	___lmul@multiplier^0,c
 10513  003DAA  5025               	movf	(map@in_min+1)^0,w,c
 10514  003DAC  5821               	subwfb	(map@x+1)^0,w,c
 10515  003DAE  6E07               	movwf	(___lmul@multiplier+1)^0,c
 10516  003DB0  5026               	movf	(map@in_min+2)^0,w,c
 10517  003DB2  5822               	subwfb	(map@x+2)^0,w,c
 10518  003DB4  6E08               	movwf	(___lmul@multiplier+2)^0,c
 10519  003DB6  5027               	movf	(map@in_min+3)^0,w,c
 10520  003DB8  5823               	subwfb	(map@x+3)^0,w,c
 10521  003DBA  6E09               	movwf	(___lmul@multiplier+3)^0,c
 10522  003DBC  502C               	movf	map@out_min^0,w,c
 10523  003DBE  5C30               	subwf	map@out_max^0,w,c
 10524  003DC0  6E0A               	movwf	___lmul@multiplicand^0,c
 10525  003DC2  502D               	movf	(map@out_min+1)^0,w,c
 10526  003DC4  5831               	subwfb	(map@out_max+1)^0,w,c
 10527  003DC6  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 10528  003DC8  502E               	movf	(map@out_min+2)^0,w,c
 10529  003DCA  5832               	subwfb	(map@out_max+2)^0,w,c
 10530  003DCC  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 10531  003DCE  502F               	movf	(map@out_min+3)^0,w,c
 10532  003DD0  5833               	subwfb	(map@out_max+3)^0,w,c
 10533  003DD2  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 10534  003DD4  ECEF  F01F         	call	___lmul	;wreg free
 10535  003DD8  C006  F012         	movff	?___lmul,___aldiv@dividend
 10536  003DDC  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 10537  003DE0  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 10538  003DE4  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 10539  003DE8  5024               	movf	map@in_min^0,w,c
 10540  003DEA  5C28               	subwf	map@in_max^0,w,c
 10541  003DEC  6E16               	movwf	___aldiv@divisor^0,c
 10542  003DEE  5025               	movf	(map@in_min+1)^0,w,c
 10543  003DF0  5829               	subwfb	(map@in_max+1)^0,w,c
 10544  003DF2  6E17               	movwf	(___aldiv@divisor+1)^0,c
 10545  003DF4  5026               	movf	(map@in_min+2)^0,w,c
 10546  003DF6  582A               	subwfb	(map@in_max+2)^0,w,c
 10547  003DF8  6E18               	movwf	(___aldiv@divisor+2)^0,c
 10548  003DFA  5027               	movf	(map@in_min+3)^0,w,c
 10549  003DFC  582B               	subwfb	(map@in_max+3)^0,w,c
 10550  003DFE  6E19               	movwf	(___aldiv@divisor+3)^0,c
 10551  003E00  EC94  F019         	call	___aldiv	;wreg free
 10552  003E04  502C               	movf	map@out_min^0,w,c
 10553  003E06  2412               	addwf	?___aldiv^0,w,c
 10554  003E08  6E20               	movwf	?_map^0,c
 10555  003E0A  502D               	movf	(map@out_min+1)^0,w,c
 10556  003E0C  2013               	addwfc	(?___aldiv+1)^0,w,c
 10557  003E0E  6E21               	movwf	(?_map+1)^0,c
 10558  003E10  502E               	movf	(map@out_min+2)^0,w,c
 10559  003E12  2014               	addwfc	(?___aldiv+2)^0,w,c
 10560  003E14  6E22               	movwf	(?_map+2)^0,c
 10561  003E16  502F               	movf	(map@out_min+3)^0,w,c
 10562  003E18  2015               	addwfc	(?___aldiv+3)^0,w,c
 10563  003E1A  6E23               	movwf	(?_map+3)^0,c
 10564  003E1C  0012               	return		;funcret
 10565  003E1E                     __end_of_map:
 10566                           	opt callstack 0
 10567                           
 10568 ;; *************** function ___lmul *****************
 10569 ;; Defined at:
 10570 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;  multiplier      4    5[COMRAM] unsigned long 
 10573 ;;  multiplicand    4    9[COMRAM] unsigned long 
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;  product         4   13[COMRAM] unsigned long 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  4    5[COMRAM] unsigned long 
 10578 ;; Registers used:
 10579 ;;		wreg, status,2, status,0
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10585 ;;      Params:         8       0       0       0       0       0       0       0       0
 10586 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10588 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10589 ;;Total ram usage:       12 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:    2
 10592 ;; This function calls:
 10593 ;;		Nothing
 10594 ;; This function is called by:
 10595 ;;		_map
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text47
 10600  003FDE                     __ptext47:
 10601                           	opt callstack 0
 10602  003FDE                     ___lmul:
 10603                           	opt callstack 23
 10604  003FDE  0E00               	movlw	0
 10605  003FE0  6E0E               	movwf	___lmul@product^0,c
 10606  003FE2  0E00               	movlw	0
 10607  003FE4  6E0F               	movwf	(___lmul@product+1)^0,c
 10608  003FE6  0E00               	movlw	0
 10609  003FE8  6E10               	movwf	(___lmul@product+2)^0,c
 10610  003FEA  0E00               	movlw	0
 10611  003FEC  6E11               	movwf	(___lmul@product+3)^0,c
 10612  003FEE                     l7408:
 10613  003FEE  A006               	btfss	___lmul@multiplier^0,0,c
 10614  003FF0  EFFC  F01F         	goto	u7821
 10615  003FF4  EFFE  F01F         	goto	u7820
 10616  003FF8                     u7821:
 10617  003FF8  EF06  F020         	goto	l7412
 10618  003FFC                     u7820:
 10619  003FFC  500A               	movf	___lmul@multiplicand^0,w,c
 10620  003FFE  260E               	addwf	___lmul@product^0,f,c
 10621  004000  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 10622  004002  220F               	addwfc	(___lmul@product+1)^0,f,c
 10623  004004  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 10624  004006  2210               	addwfc	(___lmul@product+2)^0,f,c
 10625  004008  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 10626  00400A  2211               	addwfc	(___lmul@product+3)^0,f,c
 10627  00400C                     l7412:
 10628  00400C  90D8               	bcf	status,0,c
 10629  00400E  360A               	rlcf	___lmul@multiplicand^0,f,c
 10630  004010  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 10631  004012  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 10632  004014  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 10633  004016  90D8               	bcf	status,0,c
 10634  004018  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 10635  00401A  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 10636  00401C  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 10637  00401E  3206               	rrcf	___lmul@multiplier^0,f,c
 10638  004020  5006               	movf	___lmul@multiplier^0,w,c
 10639  004022  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 10640  004024  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 10641  004026  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 10642  004028  A4D8               	btfss	status,2,c
 10643  00402A  EF19  F020         	goto	u7831
 10644  00402E  EF1B  F020         	goto	u7830
 10645  004032                     u7831:
 10646  004032  EFF7  F01F         	goto	l7408
 10647  004036                     u7830:
 10648  004036  C00E  F006         	movff	___lmul@product,?___lmul
 10649  00403A  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 10650  00403E  C010  F008         	movff	___lmul@product+2,?___lmul+2
 10651  004042  C011  F009         	movff	___lmul@product+3,?___lmul+3
 10652  004046  0012               	return		;funcret
 10653  004048                     __end_of___lmul:
 10654                           	opt callstack 0
 10655                           
 10656 ;; *************** function ___fltol *****************
 10657 ;; Defined at:
 10658 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  f1              4   18[BANK0 ] unsigned long 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  exp1            1   27[BANK0 ] unsigned char 
 10663 ;;  sign1           1   26[BANK0 ] unsigned char 
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  4   18[BANK0 ] long 
 10666 ;; Registers used:
 10667 ;;		wreg, status,2, status,0
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10673 ;;      Params:         0       4       0       0       0       0       0       0       0
 10674 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10675 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10676 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10677 ;;Total ram usage:       10 bytes
 10678 ;; Hardware stack levels used:    1
 10679 ;; Hardware stack levels required when called:    2
 10680 ;; This function calls:
 10681 ;;		Nothing
 10682 ;; This function is called by:
 10683 ;;		_pwmDuty
 10684 ;;		_PID
 10685 ;;		_efgtoa
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           	psect	text48
 10690  003434                     __ptext48:
 10691                           	opt callstack 0
 10692  003434                     ___fltol:
 10693                           	opt callstack 23
 10694  003434  0100               	movlb	0	; () banked
 10695  003436  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10696  003438  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10697  00343A  6F7B               	movwf	___fltol@exp1& (0+255),b
 10698  00343C  517B               	movf	___fltol@exp1& (0+255),w,b
 10699  00343E  A4D8               	btfss	status,2,c
 10700  003440  EF24  F01A         	goto	u9341
 10701  003444  EF26  F01A         	goto	u9340
 10702  003448                     u9341:
 10703  003448  EF30  F01A         	goto	l8252
 10704  00344C                     u9340:
 10705  00344C                     l8248:
 10706                           
 10707                           ; BSR set to: 0
 10708  00344C  0E00               	movlw	0
 10709  00344E  6F72               	movwf	?___fltol& (0+255),b
 10710  003450  0E00               	movlw	0
 10711  003452  6F73               	movwf	(?___fltol+1)& (0+255),b
 10712  003454  0E00               	movlw	0
 10713  003456  6F74               	movwf	(?___fltol+2)& (0+255),b
 10714  003458  0E00               	movlw	0
 10715  00345A  6F75               	movwf	(?___fltol+3)& (0+255),b
 10716  00345C  EF9D  F01A         	goto	l1189
 10717  003460                     l8252:
 10718                           
 10719                           ; BSR set to: 0
 10720  003460  C072  F076         	movff	___fltol@f1,??___fltol
 10721  003464  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 10722  003468  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 10723  00346C  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 10724  003470  0E20               	movlw	32
 10725  003472  EF40  F01A         	goto	u9350
 10726  003476                     u9355:
 10727  003476  90D8               	bcf	status,0,c
 10728  003478  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 10729  00347A  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 10730  00347C  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 10731  00347E  3376               	rrcf	??___fltol& (0+255),f,b
 10732  003480                     u9350:
 10733  003480  2EE8               	decfsz	wreg,f,c
 10734  003482  EF3B  F01A         	goto	u9355
 10735  003486  5176               	movf	??___fltol& (0+255),w,b
 10736  003488  6F7A               	movwf	___fltol@sign1& (0+255),b
 10737  00348A                     
 10738                           ; BSR set to: 0
 10739  00348A  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 10740  00348C                     
 10741                           ; BSR set to: 0
 10742  00348C  0EFF               	movlw	255
 10743  00348E  1772               	andwf	___fltol@f1& (0+255),f,b
 10744  003490  0EFF               	movlw	255
 10745  003492  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 10746  003494  0EFF               	movlw	255
 10747  003496  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 10748  003498  0E00               	movlw	0
 10749  00349A  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 10750  00349C                     
 10751                           ; BSR set to: 0
 10752  00349C  0E96               	movlw	150
 10753  00349E  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 10754  0034A0                     
 10755                           ; BSR set to: 0
 10756  0034A0  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 10757  0034A2  EF57  F01A         	goto	u9360
 10758  0034A6  EF55  F01A         	goto	u9361
 10759  0034AA                     u9361:
 10760  0034AA  EF6D  F01A         	goto	l8272
 10761  0034AE                     u9360:
 10762  0034AE                     
 10763                           ; BSR set to: 0
 10764  0034AE  517B               	movf	___fltol@exp1& (0+255),w,b
 10765  0034B0  0A80               	xorlw	128
 10766  0034B2  0F97               	addlw	151
 10767  0034B4  B0D8               	btfsc	status,0,c
 10768  0034B6  EF5F  F01A         	goto	u9371
 10769  0034BA  EF61  F01A         	goto	u9370
 10770  0034BE                     u9371:
 10771  0034BE  EF63  F01A         	goto	l8268
 10772  0034C2                     u9370:
 10773  0034C2  EF26  F01A         	goto	l8248
 10774  0034C6                     l8268:
 10775                           
 10776                           ; BSR set to: 0
 10777  0034C6  90D8               	bcf	status,0,c
 10778  0034C8  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10779  0034CA  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10780  0034CC  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10781  0034CE  3372               	rrcf	___fltol@f1& (0+255),f,b
 10782  0034D0                     
 10783                           ; BSR set to: 0
 10784  0034D0  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 10785  0034D2  EF63  F01A         	goto	l8268
 10786  0034D6  EF85  F01A         	goto	l8282
 10787  0034DA                     l8272:
 10788                           
 10789                           ; BSR set to: 0
 10790  0034DA  0E1F               	movlw	31
 10791  0034DC  657B               	cpfsgt	___fltol@exp1& (0+255),b
 10792  0034DE  EF73  F01A         	goto	u9381
 10793  0034E2  EF75  F01A         	goto	u9380
 10794  0034E6                     u9381:
 10795  0034E6  EF7D  F01A         	goto	l8280
 10796  0034EA                     u9380:
 10797  0034EA  EF26  F01A         	goto	l8248
 10798  0034EE                     l8278:
 10799                           
 10800                           ; BSR set to: 0
 10801  0034EE  90D8               	bcf	status,0,c
 10802  0034F0  3772               	rlcf	___fltol@f1& (0+255),f,b
 10803  0034F2  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10804  0034F4  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10805  0034F6  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10806  0034F8  077B               	decf	___fltol@exp1& (0+255),f,b
 10807  0034FA                     l8280:
 10808                           
 10809                           ; BSR set to: 0
 10810  0034FA  517B               	movf	___fltol@exp1& (0+255),w,b
 10811  0034FC  A4D8               	btfss	status,2,c
 10812  0034FE  EF83  F01A         	goto	u9391
 10813  003502  EF85  F01A         	goto	u9390
 10814  003506                     u9391:
 10815  003506  EF77  F01A         	goto	l8278
 10816  00350A                     u9390:
 10817  00350A                     l8282:
 10818                           
 10819                           ; BSR set to: 0
 10820  00350A  517A               	movf	___fltol@sign1& (0+255),w,b
 10821  00350C  B4D8               	btfsc	status,2,c
 10822  00350E  EF8B  F01A         	goto	u9401
 10823  003512  EF8D  F01A         	goto	u9400
 10824  003516                     u9401:
 10825  003516  EF95  F01A         	goto	l8286
 10826  00351A                     u9400:
 10827  00351A                     
 10828                           ; BSR set to: 0
 10829  00351A  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 10830  00351C  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 10831  00351E  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 10832  003520  6D72               	negf	___fltol@f1& (0+255),b
 10833  003522  0E00               	movlw	0
 10834  003524  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10835  003526  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10836  003528  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10837  00352A                     l8286:
 10838                           
 10839                           ; BSR set to: 0
 10840  00352A  C072  F072         	movff	___fltol@f1,?___fltol
 10841  00352E  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 10842  003532  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 10843  003536  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 10844  00353A                     l1189:
 10845                           
 10846                           ; BSR set to: 0
 10847  00353A  0012               	return		;funcret
 10848  00353C                     __end_of___fltol:
 10849                           	opt callstack 0
 10850                           
 10851 ;; *************** function ___flmul *****************
 10852 ;; Defined at:
 10853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;  b               4   26[COMRAM] long 
 10856 ;;  a               4   30[COMRAM] long 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  prod            4   45[COMRAM] struct .
 10859 ;;  grs             4   40[COMRAM] unsigned long 
 10860 ;;  temp            2   49[COMRAM] struct .
 10861 ;;  bexp            1   44[COMRAM] unsigned char 
 10862 ;;  aexp            1   39[COMRAM] unsigned char 
 10863 ;;  sign            1   38[COMRAM] unsigned char 
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  4   26[COMRAM] unsigned char 
 10866 ;; Registers used:
 10867 ;;		wreg, status,2, status,0, prodl, prodh
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10873 ;;      Params:         8       0       0       0       0       0       0       0       0
 10874 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10875 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10876 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10877 ;;Total ram usage:       25 bytes
 10878 ;; Hardware stack levels used:    1
 10879 ;; Hardware stack levels required when called:    2
 10880 ;; This function calls:
 10881 ;;		Nothing
 10882 ;; This function is called by:
 10883 ;;		_pwmDuty
 10884 ;;		_PID
 10885 ;;		_efgtoa
 10886 ;;		_roundf
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text49
 10891  0015BA                     __ptext49:
 10892                           	opt callstack 0
 10893  0015BA                     ___flmul:
 10894                           	opt callstack 23
 10895  0015BA  501E               	movf	(___flmul@b+3)^0,w,c
 10896  0015BC  0B80               	andlw	128
 10897  0015BE  6E27               	movwf	___flmul@sign^0,c
 10898  0015C0  501E               	movf	(___flmul@b+3)^0,w,c
 10899  0015C2  241E               	addwf	(___flmul@b+3)^0,w,c
 10900  0015C4  6E2D               	movwf	___flmul@bexp^0,c
 10901  0015C6  AE1D               	btfss	(___flmul@b+2)^0,7,c
 10902  0015C8  EFE8  F00A         	goto	u8941
 10903  0015CC  EFEA  F00A         	goto	u8940
 10904  0015D0                     u8941:
 10905  0015D0  EFEB  F00A         	goto	l7990
 10906  0015D4                     u8940:
 10907  0015D4  802D               	bsf	___flmul@bexp^0,0,c
 10908  0015D6                     l7990:
 10909  0015D6  502D               	movf	___flmul@bexp^0,w,c
 10910  0015D8  B4D8               	btfsc	status,2,c
 10911  0015DA  EFF1  F00A         	goto	u8951
 10912  0015DE  EFF3  F00A         	goto	u8950
 10913  0015E2                     u8951:
 10914  0015E2  EF06  F00B         	goto	l7998
 10915  0015E6                     u8950:
 10916  0015E6  282D               	incf	___flmul@bexp^0,w,c
 10917  0015E8  A4D8               	btfss	status,2,c
 10918  0015EA  EFF9  F00A         	goto	u8961
 10919  0015EE  EFFB  F00A         	goto	u8960
 10920  0015F2                     u8961:
 10921  0015F2  EF03  F00B         	goto	l7996
 10922  0015F6                     u8960:
 10923  0015F6  0E00               	movlw	0
 10924  0015F8  6E1B               	movwf	___flmul@b^0,c
 10925  0015FA  0E00               	movlw	0
 10926  0015FC  6E1C               	movwf	(___flmul@b+1)^0,c
 10927  0015FE  0E00               	movlw	0
 10928  001600  6E1D               	movwf	(___flmul@b+2)^0,c
 10929  001602  0E00               	movlw	0
 10930  001604  6E1E               	movwf	(___flmul@b+3)^0,c
 10931  001606                     l7996:
 10932  001606  8E1D               	bsf	(___flmul@b+2)^0,7,c
 10933  001608  EF0E  F00B         	goto	l8000
 10934  00160C                     l7998:
 10935  00160C  0E00               	movlw	0
 10936  00160E  6E1B               	movwf	___flmul@b^0,c
 10937  001610  0E00               	movlw	0
 10938  001612  6E1C               	movwf	(___flmul@b+1)^0,c
 10939  001614  0E00               	movlw	0
 10940  001616  6E1D               	movwf	(___flmul@b+2)^0,c
 10941  001618  0E00               	movlw	0
 10942  00161A  6E1E               	movwf	(___flmul@b+3)^0,c
 10943  00161C                     l8000:
 10944  00161C  5022               	movf	(___flmul@a+3)^0,w,c
 10945  00161E  0B80               	andlw	128
 10946  001620  1A27               	xorwf	___flmul@sign^0,f,c
 10947  001622  5022               	movf	(___flmul@a+3)^0,w,c
 10948  001624  2422               	addwf	(___flmul@a+3)^0,w,c
 10949  001626  6E28               	movwf	___flmul@aexp^0,c
 10950  001628  AE21               	btfss	(___flmul@a+2)^0,7,c
 10951  00162A  EF19  F00B         	goto	u8971
 10952  00162E  EF1B  F00B         	goto	u8970
 10953  001632                     u8971:
 10954  001632  EF1C  F00B         	goto	l8008
 10955  001636                     u8970:
 10956  001636  8028               	bsf	___flmul@aexp^0,0,c
 10957  001638                     l8008:
 10958  001638  5028               	movf	___flmul@aexp^0,w,c
 10959  00163A  B4D8               	btfsc	status,2,c
 10960  00163C  EF22  F00B         	goto	u8981
 10961  001640  EF24  F00B         	goto	u8980
 10962  001644                     u8981:
 10963  001644  EF37  F00B         	goto	l8016
 10964  001648                     u8980:
 10965  001648  2828               	incf	___flmul@aexp^0,w,c
 10966  00164A  A4D8               	btfss	status,2,c
 10967  00164C  EF2A  F00B         	goto	u8991
 10968  001650  EF2C  F00B         	goto	u8990
 10969  001654                     u8991:
 10970  001654  EF34  F00B         	goto	l8014
 10971  001658                     u8990:
 10972  001658  0E00               	movlw	0
 10973  00165A  6E1F               	movwf	___flmul@a^0,c
 10974  00165C  0E00               	movlw	0
 10975  00165E  6E20               	movwf	(___flmul@a+1)^0,c
 10976  001660  0E00               	movlw	0
 10977  001662  6E21               	movwf	(___flmul@a+2)^0,c
 10978  001664  0E00               	movlw	0
 10979  001666  6E22               	movwf	(___flmul@a+3)^0,c
 10980  001668                     l8014:
 10981  001668  8E21               	bsf	(___flmul@a+2)^0,7,c
 10982  00166A  EF3F  F00B         	goto	l1506
 10983  00166E                     l8016:
 10984  00166E  0E00               	movlw	0
 10985  001670  6E1F               	movwf	___flmul@a^0,c
 10986  001672  0E00               	movlw	0
 10987  001674  6E20               	movwf	(___flmul@a+1)^0,c
 10988  001676  0E00               	movlw	0
 10989  001678  6E21               	movwf	(___flmul@a+2)^0,c
 10990  00167A  0E00               	movlw	0
 10991  00167C  6E22               	movwf	(___flmul@a+3)^0,c
 10992  00167E                     l1506:
 10993  00167E  5028               	movf	___flmul@aexp^0,w,c
 10994  001680  B4D8               	btfsc	status,2,c
 10995  001682  EF45  F00B         	goto	u9001
 10996  001686  EF47  F00B         	goto	u9000
 10997  00168A                     u9001:
 10998  00168A  EF4F  F00B         	goto	l8020
 10999  00168E                     u9000:
 11000  00168E  502D               	movf	___flmul@bexp^0,w,c
 11001  001690  A4D8               	btfss	status,2,c
 11002  001692  EF4D  F00B         	goto	u9011
 11003  001696  EF4F  F00B         	goto	u9010
 11004  00169A                     u9011:
 11005  00169A  EF59  F00B         	goto	l8024
 11006  00169E                     u9010:
 11007  00169E                     l8020:
 11008  00169E  0E00               	movlw	0
 11009  0016A0  6E1B               	movwf	?___flmul^0,c
 11010  0016A2  0E00               	movlw	0
 11011  0016A4  6E1C               	movwf	(?___flmul+1)^0,c
 11012  0016A6  0E00               	movlw	0
 11013  0016A8  6E1D               	movwf	(?___flmul+2)^0,c
 11014  0016AA  0E00               	movlw	0
 11015  0016AC  6E1E               	movwf	(?___flmul+3)^0,c
 11016  0016AE  EFF1  F00C         	goto	l1510
 11017  0016B2                     l8024:
 11018  0016B2  5021               	movf	(___flmul@a+2)^0,w,c
 11019  0016B4  021B               	mulwf	___flmul@b^0,c
 11020  0016B6  CFF3 F032          	movff	prodl,___flmul@temp
 11021  0016BA  CFF4 F033          	movff	prodh,___flmul@temp+1
 11022  0016BE  5032               	movf	___flmul@temp^0,w,c
 11023  0016C0  6E29               	movwf	___flmul@grs^0,c
 11024  0016C2  6A2A               	clrf	(___flmul@grs+1)^0,c
 11025  0016C4  6A2B               	clrf	(___flmul@grs+2)^0,c
 11026  0016C6  6A2C               	clrf	(___flmul@grs+3)^0,c
 11027  0016C8  5033               	movf	(___flmul@temp+1)^0,w,c
 11028  0016CA  6E2E               	movwf	___flmul@prod^0,c
 11029  0016CC  6A2F               	clrf	(___flmul@prod+1)^0,c
 11030  0016CE  6A30               	clrf	(___flmul@prod+2)^0,c
 11031  0016D0  6A31               	clrf	(___flmul@prod+3)^0,c
 11032  0016D2  5020               	movf	(___flmul@a+1)^0,w,c
 11033  0016D4  021C               	mulwf	(___flmul@b+1)^0,c
 11034  0016D6  CFF3 F032          	movff	prodl,___flmul@temp
 11035  0016DA  CFF4 F033          	movff	prodh,___flmul@temp+1
 11036  0016DE  5032               	movf	___flmul@temp^0,w,c
 11037  0016E0  2629               	addwf	___flmul@grs^0,f,c
 11038  0016E2  0E00               	movlw	0
 11039  0016E4  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11040  0016E6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11041  0016E8  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11042  0016EA  5033               	movf	(___flmul@temp+1)^0,w,c
 11043  0016EC  262E               	addwf	___flmul@prod^0,f,c
 11044  0016EE  0E00               	movlw	0
 11045  0016F0  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11046  0016F2  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11047  0016F4  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11048  0016F6  501F               	movf	___flmul@a^0,w,c
 11049  0016F8  021D               	mulwf	(___flmul@b+2)^0,c
 11050  0016FA  CFF3 F032          	movff	prodl,___flmul@temp
 11051  0016FE  CFF4 F033          	movff	prodh,___flmul@temp+1
 11052  001702  5032               	movf	___flmul@temp^0,w,c
 11053  001704  2629               	addwf	___flmul@grs^0,f,c
 11054  001706  0E00               	movlw	0
 11055  001708  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11056  00170A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11057  00170C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11058  00170E  5033               	movf	(___flmul@temp+1)^0,w,c
 11059  001710  262E               	addwf	___flmul@prod^0,f,c
 11060  001712  0E00               	movlw	0
 11061  001714  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11062  001716  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11063  001718  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11064  00171A  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11065  00171E  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11066  001722  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11067  001726  6A29               	clrf	___flmul@grs^0,c
 11068  001728  501F               	movf	___flmul@a^0,w,c
 11069  00172A  021C               	mulwf	(___flmul@b+1)^0,c
 11070  00172C  CFF3 F032          	movff	prodl,___flmul@temp
 11071  001730  CFF4 F033          	movff	prodh,___flmul@temp+1
 11072  001734  5032               	movf	___flmul@temp^0,w,c
 11073  001736  2629               	addwf	___flmul@grs^0,f,c
 11074  001738  5033               	movf	(___flmul@temp+1)^0,w,c
 11075  00173A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11076  00173C  0E00               	movlw	0
 11077  00173E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11078  001740  0E00               	movlw	0
 11079  001742  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11080  001744  5020               	movf	(___flmul@a+1)^0,w,c
 11081  001746  021B               	mulwf	___flmul@b^0,c
 11082  001748  CFF3 F032          	movff	prodl,___flmul@temp
 11083  00174C  CFF4 F033          	movff	prodh,___flmul@temp+1
 11084  001750  5032               	movf	___flmul@temp^0,w,c
 11085  001752  2629               	addwf	___flmul@grs^0,f,c
 11086  001754  5033               	movf	(___flmul@temp+1)^0,w,c
 11087  001756  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11088  001758  0E00               	movlw	0
 11089  00175A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11090  00175C  0E00               	movlw	0
 11091  00175E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11092  001760  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11093  001764  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11094  001768  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11095  00176C  6A29               	clrf	___flmul@grs^0,c
 11096  00176E  501F               	movf	___flmul@a^0,w,c
 11097  001770  021B               	mulwf	___flmul@b^0,c
 11098  001772  CFF3 F032          	movff	prodl,___flmul@temp
 11099  001776  CFF4 F033          	movff	prodh,___flmul@temp+1
 11100  00177A  5032               	movf	___flmul@temp^0,w,c
 11101  00177C  2629               	addwf	___flmul@grs^0,f,c
 11102  00177E  5033               	movf	(___flmul@temp+1)^0,w,c
 11103  001780  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11104  001782  0E00               	movlw	0
 11105  001784  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11106  001786  0E00               	movlw	0
 11107  001788  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11108  00178A  5021               	movf	(___flmul@a+2)^0,w,c
 11109  00178C  021C               	mulwf	(___flmul@b+1)^0,c
 11110  00178E  CFF3 F032          	movff	prodl,___flmul@temp
 11111  001792  CFF4 F033          	movff	prodh,___flmul@temp+1
 11112  001796  5032               	movf	___flmul@temp^0,w,c
 11113  001798  262E               	addwf	___flmul@prod^0,f,c
 11114  00179A  5033               	movf	(___flmul@temp+1)^0,w,c
 11115  00179C  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11116  00179E  0E00               	movlw	0
 11117  0017A0  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11118  0017A2  0E00               	movlw	0
 11119  0017A4  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11120  0017A6  5020               	movf	(___flmul@a+1)^0,w,c
 11121  0017A8  021D               	mulwf	(___flmul@b+2)^0,c
 11122  0017AA  CFF3 F032          	movff	prodl,___flmul@temp
 11123  0017AE  CFF4 F033          	movff	prodh,___flmul@temp+1
 11124  0017B2  5032               	movf	___flmul@temp^0,w,c
 11125  0017B4  262E               	addwf	___flmul@prod^0,f,c
 11126  0017B6  5033               	movf	(___flmul@temp+1)^0,w,c
 11127  0017B8  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11128  0017BA  0E00               	movlw	0
 11129  0017BC  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11130  0017BE  0E00               	movlw	0
 11131  0017C0  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11132  0017C2  5021               	movf	(___flmul@a+2)^0,w,c
 11133  0017C4  021D               	mulwf	(___flmul@b+2)^0,c
 11134  0017C6  CFF3 F032          	movff	prodl,___flmul@temp
 11135  0017CA  CFF4 F033          	movff	prodh,___flmul@temp+1
 11136  0017CE  5032               	movf	___flmul@temp^0,w,c
 11137  0017D0  6E23               	movwf	??___flmul^0,c
 11138  0017D2  5033               	movf	(___flmul@temp+1)^0,w,c
 11139  0017D4  6E24               	movwf	(??___flmul+1)^0,c
 11140  0017D6  6A25               	clrf	(??___flmul+2)^0,c
 11141  0017D8  6A26               	clrf	(??___flmul+3)^0,c
 11142  0017DA  C025  F026         	movff	??___flmul+2,??___flmul+3
 11143  0017DE  C024  F025         	movff	??___flmul+1,??___flmul+2
 11144  0017E2  C023  F024         	movff	??___flmul,??___flmul+1
 11145  0017E6  6A23               	clrf	??___flmul^0,c
 11146  0017E8  5023               	movf	??___flmul^0,w,c
 11147  0017EA  262E               	addwf	___flmul@prod^0,f,c
 11148  0017EC  5024               	movf	(??___flmul+1)^0,w,c
 11149  0017EE  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11150  0017F0  5025               	movf	(??___flmul+2)^0,w,c
 11151  0017F2  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11152  0017F4  5026               	movf	(??___flmul+3)^0,w,c
 11153  0017F6  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11154  0017F8  C029  F023         	movff	___flmul@grs,??___flmul
 11155  0017FC  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 11156  001800  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 11157  001804  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 11158  001808  0E19               	movlw	25
 11159  00180A  EF0C  F00C         	goto	u9020
 11160  00180E                     u9025:
 11161  00180E  90D8               	bcf	status,0,c
 11162  001810  3226               	rrcf	(??___flmul+3)^0,f,c
 11163  001812  3225               	rrcf	(??___flmul+2)^0,f,c
 11164  001814  3224               	rrcf	(??___flmul+1)^0,f,c
 11165  001816  3223               	rrcf	??___flmul^0,f,c
 11166  001818                     u9020:
 11167  001818  2EE8               	decfsz	wreg,f,c
 11168  00181A  EF07  F00C         	goto	u9025
 11169  00181E  5023               	movf	??___flmul^0,w,c
 11170  001820  262E               	addwf	___flmul@prod^0,f,c
 11171  001822  5024               	movf	(??___flmul+1)^0,w,c
 11172  001824  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11173  001826  5025               	movf	(??___flmul+2)^0,w,c
 11174  001828  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11175  00182A  5026               	movf	(??___flmul+3)^0,w,c
 11176  00182C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11177  00182E  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11178  001832  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11179  001836  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11180  00183A  6A29               	clrf	___flmul@grs^0,c
 11181  00183C  5028               	movf	___flmul@aexp^0,w,c
 11182  00183E  C02D  F023         	movff	___flmul@bexp,??___flmul
 11183  001842  6A24               	clrf	(??___flmul+1)^0,c
 11184  001844  2623               	addwf	??___flmul^0,f,c
 11185  001846  0E00               	movlw	0
 11186  001848  2224               	addwfc	(??___flmul+1)^0,f,c
 11187  00184A  0E82               	movlw	130
 11188  00184C  2423               	addwf	??___flmul^0,w,c
 11189  00184E  6E32               	movwf	___flmul@temp^0,c
 11190  001850  0EFF               	movlw	255
 11191  001852  2024               	addwfc	(??___flmul+1)^0,w,c
 11192  001854  6E33               	movwf	(___flmul@temp+1)^0,c
 11193  001856  EF42  F00C         	goto	l8072
 11194  00185A                     l8066:
 11195  00185A  90D8               	bcf	status,0,c
 11196  00185C  362E               	rlcf	___flmul@prod^0,f,c
 11197  00185E  362F               	rlcf	(___flmul@prod+1)^0,f,c
 11198  001860  3630               	rlcf	(___flmul@prod+2)^0,f,c
 11199  001862  3631               	rlcf	(___flmul@prod+3)^0,f,c
 11200  001864  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11201  001866  EF37  F00C         	goto	u9031
 11202  00186A  EF39  F00C         	goto	u9030
 11203  00186E                     u9031:
 11204  00186E  EF3A  F00C         	goto	l1513
 11205  001872                     u9030:
 11206  001872  802E               	bsf	___flmul@prod^0,0,c
 11207  001874                     l1513:
 11208  001874  90D8               	bcf	status,0,c
 11209  001876  3629               	rlcf	___flmul@grs^0,f,c
 11210  001878  362A               	rlcf	(___flmul@grs+1)^0,f,c
 11211  00187A  362B               	rlcf	(___flmul@grs+2)^0,f,c
 11212  00187C  362C               	rlcf	(___flmul@grs+3)^0,f,c
 11213  00187E  0632               	decf	___flmul@temp^0,f,c
 11214  001880  A0D8               	btfss	status,0,c
 11215  001882  0633               	decf	(___flmul@temp+1)^0,f,c
 11216  001884                     l8072:
 11217  001884  AE30               	btfss	(___flmul@prod+2)^0,7,c
 11218  001886  EF47  F00C         	goto	u9041
 11219  00188A  EF49  F00C         	goto	u9040
 11220  00188E                     u9041:
 11221  00188E  EF2D  F00C         	goto	l8066
 11222  001892                     u9040:
 11223  001892  0E00               	movlw	0
 11224  001894  6E28               	movwf	___flmul@aexp^0,c
 11225  001896  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11226  001898  EF50  F00C         	goto	u9051
 11227  00189C  EF52  F00C         	goto	u9050
 11228  0018A0                     u9051:
 11229  0018A0  EF76  F00C         	goto	l1515
 11230  0018A4                     u9050:
 11231  0018A4  0EFF               	movlw	255
 11232  0018A6  1429               	andwf	___flmul@grs^0,w,c
 11233  0018A8  6E23               	movwf	??___flmul^0,c
 11234  0018AA  0EFF               	movlw	255
 11235  0018AC  142A               	andwf	(___flmul@grs+1)^0,w,c
 11236  0018AE  6E24               	movwf	(??___flmul+1)^0,c
 11237  0018B0  0EFF               	movlw	255
 11238  0018B2  142B               	andwf	(___flmul@grs+2)^0,w,c
 11239  0018B4  6E25               	movwf	(??___flmul+2)^0,c
 11240  0018B6  0E7F               	movlw	127
 11241  0018B8  142C               	andwf	(___flmul@grs+3)^0,w,c
 11242  0018BA  6E26               	movwf	(??___flmul+3)^0,c
 11243  0018BC  5023               	movf	??___flmul^0,w,c
 11244  0018BE  1024               	iorwf	(??___flmul+1)^0,w,c
 11245  0018C0  1025               	iorwf	(??___flmul+2)^0,w,c
 11246  0018C2  1026               	iorwf	(??___flmul+3)^0,w,c
 11247  0018C4  B4D8               	btfsc	status,2,c
 11248  0018C6  EF67  F00C         	goto	u9061
 11249  0018CA  EF69  F00C         	goto	u9060
 11250  0018CE                     u9061:
 11251  0018CE  EF6D  F00C         	goto	l1516
 11252  0018D2                     u9060:
 11253  0018D2                     l8080:
 11254  0018D2  0E01               	movlw	1
 11255  0018D4  6E28               	movwf	___flmul@aexp^0,c
 11256  0018D6  EF76  F00C         	goto	l1515
 11257  0018DA                     l1516:
 11258  0018DA  A02E               	btfss	___flmul@prod^0,0,c
 11259  0018DC  EF72  F00C         	goto	u9071
 11260  0018E0  EF74  F00C         	goto	u9070
 11261  0018E4                     u9071:
 11262  0018E4  EF76  F00C         	goto	l1515
 11263  0018E8                     u9070:
 11264  0018E8  EF69  F00C         	goto	l8080
 11265  0018EC                     l1515:
 11266  0018EC  5028               	movf	___flmul@aexp^0,w,c
 11267  0018EE  B4D8               	btfsc	status,2,c
 11268  0018F0  EF7C  F00C         	goto	u9081
 11269  0018F4  EF7E  F00C         	goto	u9080
 11270  0018F8                     u9081:
 11271  0018F8  EFA2  F00C         	goto	l8092
 11272  0018FC                     u9080:
 11273  0018FC  0E01               	movlw	1
 11274  0018FE  262E               	addwf	___flmul@prod^0,f,c
 11275  001900  0E00               	movlw	0
 11276  001902  222F               	addwfc	(___flmul@prod+1)^0,f,c
 11277  001904  2230               	addwfc	(___flmul@prod+2)^0,f,c
 11278  001906  2231               	addwfc	(___flmul@prod+3)^0,f,c
 11279  001908  A031               	btfss	(___flmul@prod+3)^0,0,c
 11280  00190A  EF89  F00C         	goto	u9091
 11281  00190E  EF8B  F00C         	goto	u9090
 11282  001912                     u9091:
 11283  001912  EFA2  F00C         	goto	l8092
 11284  001916                     u9090:
 11285  001916  C02E  F023         	movff	___flmul@prod,??___flmul
 11286  00191A  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 11287  00191E  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 11288  001922  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 11289  001926  3426               	rlcf	(??___flmul+3)^0,w,c
 11290  001928  3226               	rrcf	(??___flmul+3)^0,f,c
 11291  00192A  3225               	rrcf	(??___flmul+2)^0,f,c
 11292  00192C  3224               	rrcf	(??___flmul+1)^0,f,c
 11293  00192E  3223               	rrcf	??___flmul^0,f,c
 11294  001930  C023  F02E         	movff	??___flmul,___flmul@prod
 11295  001934  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 11296  001938  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 11297  00193C  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 11298  001940  4A32               	infsnz	___flmul@temp^0,f,c
 11299  001942  2A33               	incf	(___flmul@temp+1)^0,f,c
 11300  001944                     l8092:
 11301  001944  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 11302  001946  EFAD  F00C         	goto	u9101
 11303  00194A  5033               	movf	(___flmul@temp+1)^0,w,c
 11304  00194C  E108               	bnz	u9100
 11305  00194E  2832               	incf	___flmul@temp^0,w,c
 11306  001950  A0D8               	btfss	status,0,c
 11307  001952  EFAD  F00C         	goto	u9101
 11308  001956  EFAF  F00C         	goto	u9100
 11309  00195A                     u9101:
 11310  00195A  EFB9  F00C         	goto	l8096
 11311  00195E                     u9100:
 11312  00195E  0E00               	movlw	0
 11313  001960  6E2E               	movwf	___flmul@prod^0,c
 11314  001962  0E00               	movlw	0
 11315  001964  6E2F               	movwf	(___flmul@prod+1)^0,c
 11316  001966  0E80               	movlw	128
 11317  001968  6E30               	movwf	(___flmul@prod+2)^0,c
 11318  00196A  0E7F               	movlw	127
 11319  00196C  6E31               	movwf	(___flmul@prod+3)^0,c
 11320  00196E  EFE7  F00C         	goto	l8108
 11321  001972                     l8096:
 11322  001972  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 11323  001974  EFC6  F00C         	goto	u9110
 11324  001978  5033               	movf	(___flmul@temp+1)^0,w,c
 11325  00197A  E106               	bnz	u9111
 11326  00197C  0432               	decf	___flmul@temp^0,w,c
 11327  00197E  B0D8               	btfsc	status,0,c
 11328  001980  EFC4  F00C         	goto	u9111
 11329  001984  EFC6  F00C         	goto	u9110
 11330  001988                     u9111:
 11331  001988  EFD2  F00C         	goto	l1523
 11332  00198C                     u9110:
 11333  00198C  0E00               	movlw	0
 11334  00198E  6E2E               	movwf	___flmul@prod^0,c
 11335  001990  0E00               	movlw	0
 11336  001992  6E2F               	movwf	(___flmul@prod+1)^0,c
 11337  001994  0E00               	movlw	0
 11338  001996  6E30               	movwf	(___flmul@prod+2)^0,c
 11339  001998  0E00               	movlw	0
 11340  00199A  6E31               	movwf	(___flmul@prod+3)^0,c
 11341  00199C  0E00               	movlw	0
 11342  00199E  6E27               	movwf	___flmul@sign^0,c
 11343  0019A0  EFE7  F00C         	goto	l8108
 11344  0019A4                     l1523:
 11345  0019A4  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 11346  0019A8  0EFF               	movlw	255
 11347  0019AA  162E               	andwf	___flmul@prod^0,f,c
 11348  0019AC  0EFF               	movlw	255
 11349  0019AE  162F               	andwf	(___flmul@prod+1)^0,f,c
 11350  0019B0  0E7F               	movlw	127
 11351  0019B2  1630               	andwf	(___flmul@prod+2)^0,f,c
 11352  0019B4  0E00               	movlw	0
 11353  0019B6  1631               	andwf	(___flmul@prod+3)^0,f,c
 11354  0019B8  A02D               	btfss	___flmul@bexp^0,0,c
 11355  0019BA  EFE1  F00C         	goto	u9121
 11356  0019BE  EFE3  F00C         	goto	u9120
 11357  0019C2                     u9121:
 11358  0019C2  EFE4  F00C         	goto	l8106
 11359  0019C6                     u9120:
 11360  0019C6  8E30               	bsf	(___flmul@prod+2)^0,7,c
 11361  0019C8                     l8106:
 11362  0019C8  90D8               	bcf	status,0,c
 11363  0019CA  302D               	rrcf	___flmul@bexp^0,w,c
 11364  0019CC  6E31               	movwf	(___flmul@prod+3)^0,c
 11365  0019CE                     l8108:
 11366  0019CE  5027               	movf	___flmul@sign^0,w,c
 11367  0019D0  1231               	iorwf	(___flmul@prod+3)^0,f,c
 11368  0019D2  C02E  F01B         	movff	___flmul@prod,?___flmul
 11369  0019D6  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 11370  0019DA  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 11371  0019DE  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 11372  0019E2                     l1510:
 11373  0019E2  0012               	return		;funcret
 11374  0019E4                     __end_of___flmul:
 11375                           	opt callstack 0
 11376                           
 11377 ;; *************** function ___fldiv *****************
 11378 ;; Defined at:
 11379 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;  b               4   67[COMRAM] unsigned char 
 11382 ;;  a               4   71[COMRAM] unsigned char 
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;  grs             4    7[BANK0 ] unsigned long 
 11385 ;;  rem             4    0[BANK0 ] unsigned long 
 11386 ;;  new_exp         2    5[BANK0 ] short 
 11387 ;;  aexp            1   12[BANK0 ] unsigned char 
 11388 ;;  bexp            1   11[BANK0 ] unsigned char 
 11389 ;;  sign            1    4[BANK0 ] unsigned char 
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  4   67[COMRAM] unsigned char 
 11392 ;; Registers used:
 11393 ;;		wreg, status,2, status,0
 11394 ;; Tracked objects:
 11395 ;;		On entry : 0/0
 11396 ;;		On exit  : 0/0
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11399 ;;      Params:         8       0       0       0       0       0       0       0       0
 11400 ;;      Locals:         0      13       0       0       0       0       0       0       0
 11401 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11402 ;;      Totals:        12      13       0       0       0       0       0       0       0
 11403 ;;Total ram usage:       25 bytes
 11404 ;; Hardware stack levels used:    1
 11405 ;; Hardware stack levels required when called:    2
 11406 ;; This function calls:
 11407 ;;		Nothing
 11408 ;; This function is called by:
 11409 ;;		_pwmDuty
 11410 ;;		_leerSensores
 11411 ;;		_efgtoa
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           	psect	text50
 11416  001D96                     __ptext50:
 11417                           	opt callstack 0
 11418  001D96                     ___fldiv:
 11419                           	opt callstack 23
 11420  001D96  5047               	movf	(___fldiv@b+3)^0,w,c
 11421  001D98  0B80               	andlw	128
 11422  001D9A  0100               	movlb	0	; () banked
 11423  001D9C  6F64               	movwf	___fldiv@sign& (0+255),b
 11424  001D9E  5047               	movf	(___fldiv@b+3)^0,w,c
 11425  001DA0  2447               	addwf	(___fldiv@b+3)^0,w,c
 11426  001DA2  6F6B               	movwf	___fldiv@bexp& (0+255),b
 11427  001DA4                     
 11428                           ; BSR set to: 0
 11429  001DA4  AE46               	btfss	(___fldiv@b+2)^0,7,c
 11430  001DA6  EFD7  F00E         	goto	u8711
 11431  001DAA  EFD9  F00E         	goto	u8710
 11432  001DAE                     u8711:
 11433  001DAE  EFDA  F00E         	goto	l7852
 11434  001DB2                     u8710:
 11435  001DB2                     
 11436                           ; BSR set to: 0
 11437  001DB2  816B               	bsf	___fldiv@bexp& (0+255),0,b
 11438  001DB4                     l7852:
 11439                           
 11440                           ; BSR set to: 0
 11441  001DB4  516B               	movf	___fldiv@bexp& (0+255),w,b
 11442  001DB6  B4D8               	btfsc	status,2,c
 11443  001DB8  EFE0  F00E         	goto	u8721
 11444  001DBC  EFE2  F00E         	goto	u8720
 11445  001DC0                     u8721:
 11446  001DC0  EFF7  F00E         	goto	l7862
 11447  001DC4                     u8720:
 11448  001DC4                     
 11449                           ; BSR set to: 0
 11450  001DC4  296B               	incf	___fldiv@bexp& (0+255),w,b
 11451  001DC6  A4D8               	btfss	status,2,c
 11452  001DC8  EFE8  F00E         	goto	u8731
 11453  001DCC  EFEA  F00E         	goto	u8730
 11454  001DD0                     u8731:
 11455  001DD0  EFF2  F00E         	goto	l7858
 11456  001DD4                     u8730:
 11457  001DD4                     
 11458                           ; BSR set to: 0
 11459  001DD4  0E00               	movlw	0
 11460  001DD6  6E44               	movwf	___fldiv@b^0,c
 11461  001DD8  0E00               	movlw	0
 11462  001DDA  6E45               	movwf	(___fldiv@b+1)^0,c
 11463  001DDC  0E00               	movlw	0
 11464  001DDE  6E46               	movwf	(___fldiv@b+2)^0,c
 11465  001DE0  0E00               	movlw	0
 11466  001DE2  6E47               	movwf	(___fldiv@b+3)^0,c
 11467  001DE4                     l7858:
 11468                           
 11469                           ; BSR set to: 0
 11470  001DE4  8E46               	bsf	(___fldiv@b+2)^0,7,c
 11471  001DE6                     
 11472                           ; BSR set to: 0
 11473  001DE6  0E00               	movlw	0
 11474  001DE8  6E47               	movwf	(___fldiv@b+3)^0,c
 11475  001DEA  EFFF  F00E         	goto	l7864
 11476  001DEE                     l7862:
 11477                           
 11478                           ; BSR set to: 0
 11479  001DEE  0E00               	movlw	0
 11480  001DF0  6E44               	movwf	___fldiv@b^0,c
 11481  001DF2  0E00               	movlw	0
 11482  001DF4  6E45               	movwf	(___fldiv@b+1)^0,c
 11483  001DF6  0E00               	movlw	0
 11484  001DF8  6E46               	movwf	(___fldiv@b+2)^0,c
 11485  001DFA  0E00               	movlw	0
 11486  001DFC  6E47               	movwf	(___fldiv@b+3)^0,c
 11487  001DFE                     l7864:
 11488                           
 11489                           ; BSR set to: 0
 11490  001DFE  504B               	movf	(___fldiv@a+3)^0,w,c
 11491  001E00  0B80               	andlw	128
 11492  001E02  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 11493  001E04                     
 11494                           ; BSR set to: 0
 11495  001E04  504B               	movf	(___fldiv@a+3)^0,w,c
 11496  001E06  244B               	addwf	(___fldiv@a+3)^0,w,c
 11497  001E08  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11498  001E0A                     
 11499                           ; BSR set to: 0
 11500  001E0A  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 11501  001E0C  EF0A  F00F         	goto	u8741
 11502  001E10  EF0C  F00F         	goto	u8740
 11503  001E14                     u8741:
 11504  001E14  EF0D  F00F         	goto	l7872
 11505  001E18                     u8740:
 11506  001E18                     
 11507                           ; BSR set to: 0
 11508  001E18  816C               	bsf	___fldiv@aexp& (0+255),0,b
 11509  001E1A                     l7872:
 11510                           
 11511                           ; BSR set to: 0
 11512  001E1A  516C               	movf	___fldiv@aexp& (0+255),w,b
 11513  001E1C  B4D8               	btfsc	status,2,c
 11514  001E1E  EF13  F00F         	goto	u8751
 11515  001E22  EF15  F00F         	goto	u8750
 11516  001E26                     u8751:
 11517  001E26  EF2A  F00F         	goto	l7882
 11518  001E2A                     u8750:
 11519  001E2A                     
 11520                           ; BSR set to: 0
 11521  001E2A  296C               	incf	___fldiv@aexp& (0+255),w,b
 11522  001E2C  A4D8               	btfss	status,2,c
 11523  001E2E  EF1B  F00F         	goto	u8761
 11524  001E32  EF1D  F00F         	goto	u8760
 11525  001E36                     u8761:
 11526  001E36  EF25  F00F         	goto	l7878
 11527  001E3A                     u8760:
 11528  001E3A                     
 11529                           ; BSR set to: 0
 11530  001E3A  0E00               	movlw	0
 11531  001E3C  6E48               	movwf	___fldiv@a^0,c
 11532  001E3E  0E00               	movlw	0
 11533  001E40  6E49               	movwf	(___fldiv@a+1)^0,c
 11534  001E42  0E00               	movlw	0
 11535  001E44  6E4A               	movwf	(___fldiv@a+2)^0,c
 11536  001E46  0E00               	movlw	0
 11537  001E48  6E4B               	movwf	(___fldiv@a+3)^0,c
 11538  001E4A                     l7878:
 11539                           
 11540                           ; BSR set to: 0
 11541  001E4A  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 11542  001E4C                     
 11543                           ; BSR set to: 0
 11544  001E4C  0E00               	movlw	0
 11545  001E4E  6E4B               	movwf	(___fldiv@a+3)^0,c
 11546  001E50  EF32  F00F         	goto	l7884
 11547  001E54                     l7882:
 11548                           
 11549                           ; BSR set to: 0
 11550  001E54  0E00               	movlw	0
 11551  001E56  6E48               	movwf	___fldiv@a^0,c
 11552  001E58  0E00               	movlw	0
 11553  001E5A  6E49               	movwf	(___fldiv@a+1)^0,c
 11554  001E5C  0E00               	movlw	0
 11555  001E5E  6E4A               	movwf	(___fldiv@a+2)^0,c
 11556  001E60  0E00               	movlw	0
 11557  001E62  6E4B               	movwf	(___fldiv@a+3)^0,c
 11558  001E64                     l7884:
 11559                           
 11560                           ; BSR set to: 0
 11561  001E64  5048               	movf	___fldiv@a^0,w,c
 11562  001E66  1049               	iorwf	(___fldiv@a+1)^0,w,c
 11563  001E68  104A               	iorwf	(___fldiv@a+2)^0,w,c
 11564  001E6A  104B               	iorwf	(___fldiv@a+3)^0,w,c
 11565  001E6C  A4D8               	btfss	status,2,c
 11566  001E6E  EF3B  F00F         	goto	u8771
 11567  001E72  EF3D  F00F         	goto	u8770
 11568  001E76                     u8771:
 11569  001E76  EF55  F00F         	goto	l7896
 11570  001E7A                     u8770:
 11571  001E7A                     
 11572                           ; BSR set to: 0
 11573  001E7A  0E00               	movlw	0
 11574  001E7C  6E44               	movwf	___fldiv@b^0,c
 11575  001E7E  0E00               	movlw	0
 11576  001E80  6E45               	movwf	(___fldiv@b+1)^0,c
 11577  001E82  0E00               	movlw	0
 11578  001E84  6E46               	movwf	(___fldiv@b+2)^0,c
 11579  001E86  0E00               	movlw	0
 11580  001E88  6E47               	movwf	(___fldiv@b+3)^0,c
 11581  001E8A                     
 11582                           ; BSR set to: 0
 11583  001E8A  0E80               	movlw	128
 11584  001E8C  1246               	iorwf	(___fldiv@b+2)^0,f,c
 11585  001E8E  0E7F               	movlw	127
 11586  001E90  1247               	iorwf	(___fldiv@b+3)^0,f,c
 11587  001E92                     l7890:
 11588                           
 11589                           ; BSR set to: 0
 11590  001E92  5164               	movf	___fldiv@sign& (0+255),w,b
 11591  001E94  1247               	iorwf	(___fldiv@b+3)^0,f,c
 11592  001E96                     
 11593                           ; BSR set to: 0
 11594  001E96  C044  F044         	movff	___fldiv@b,?___fldiv
 11595  001E9A  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 11596  001E9E  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 11597  001EA2  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 11598  001EA6  EF98  F010         	goto	l1474
 11599  001EAA                     l7896:
 11600                           
 11601                           ; BSR set to: 0
 11602  001EAA  516B               	movf	___fldiv@bexp& (0+255),w,b
 11603  001EAC  A4D8               	btfss	status,2,c
 11604  001EAE  EF5B  F00F         	goto	u8781
 11605  001EB2  EF5D  F00F         	goto	u8780
 11606  001EB6                     u8781:
 11607  001EB6  EF67  F00F         	goto	l7904
 11608  001EBA                     u8780:
 11609  001EBA                     
 11610                           ; BSR set to: 0
 11611  001EBA  0E00               	movlw	0
 11612  001EBC  6E44               	movwf	?___fldiv^0,c
 11613  001EBE  0E00               	movlw	0
 11614  001EC0  6E45               	movwf	(?___fldiv+1)^0,c
 11615  001EC2  0E00               	movlw	0
 11616  001EC4  6E46               	movwf	(?___fldiv+2)^0,c
 11617  001EC6  0E00               	movlw	0
 11618  001EC8  6E47               	movwf	(?___fldiv+3)^0,c
 11619  001ECA  EF98  F010         	goto	l1474
 11620  001ECE                     l7904:
 11621                           
 11622                           ; BSR set to: 0
 11623  001ECE  516C               	movf	___fldiv@aexp& (0+255),w,b
 11624  001ED0  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 11625  001ED4  6A4D               	clrf	(??___fldiv+1)^0,c
 11626  001ED6  5E4C               	subwf	??___fldiv^0,f,c
 11627  001ED8  0E00               	movlw	0
 11628  001EDA  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 11629  001EDC  0E7F               	movlw	127
 11630  001EDE  244C               	addwf	??___fldiv^0,w,c
 11631  001EE0  6F65               	movwf	___fldiv@new_exp& (0+255),b
 11632  001EE2  0E00               	movlw	0
 11633  001EE4  204D               	addwfc	(??___fldiv+1)^0,w,c
 11634  001EE6  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11635  001EE8                     
 11636                           ; BSR set to: 0
 11637  001EE8  C044  F060         	movff	___fldiv@b,___fldiv@rem
 11638  001EEC  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 11639  001EF0  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 11640  001EF4  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 11641  001EF8                     
 11642                           ; BSR set to: 0
 11643  001EF8  0E00               	movlw	0
 11644  001EFA  6E44               	movwf	___fldiv@b^0,c
 11645  001EFC  0E00               	movlw	0
 11646  001EFE  6E45               	movwf	(___fldiv@b+1)^0,c
 11647  001F00  0E00               	movlw	0
 11648  001F02  6E46               	movwf	(___fldiv@b+2)^0,c
 11649  001F04  0E00               	movlw	0
 11650  001F06  6E47               	movwf	(___fldiv@b+3)^0,c
 11651  001F08                     
 11652                           ; BSR set to: 0
 11653  001F08  0E00               	movlw	0
 11654  001F0A  6F67               	movwf	___fldiv@grs& (0+255),b
 11655  001F0C  0E00               	movlw	0
 11656  001F0E  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 11657  001F10  0E00               	movlw	0
 11658  001F12  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 11659  001F14  0E00               	movlw	0
 11660  001F16  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 11661  001F18                     
 11662                           ; BSR set to: 0
 11663  001F18  0E00               	movlw	0
 11664  001F1A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11665  001F1C  EFC8  F00F         	goto	l1476
 11666  001F20                     l7914:
 11667                           
 11668                           ; BSR set to: 0
 11669  001F20  516C               	movf	___fldiv@aexp& (0+255),w,b
 11670  001F22  B4D8               	btfsc	status,2,c
 11671  001F24  EF96  F00F         	goto	u8791
 11672  001F28  EF98  F00F         	goto	u8790
 11673  001F2C                     u8791:
 11674  001F2C  EFAF  F00F         	goto	l7922
 11675  001F30                     u8790:
 11676  001F30                     
 11677                           ; BSR set to: 0
 11678  001F30  90D8               	bcf	status,0,c
 11679  001F32  3760               	rlcf	___fldiv@rem& (0+255),f,b
 11680  001F34  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11681  001F36  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11682  001F38  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11683  001F3A  90D8               	bcf	status,0,c
 11684  001F3C  3644               	rlcf	___fldiv@b^0,f,c
 11685  001F3E  3645               	rlcf	(___fldiv@b+1)^0,f,c
 11686  001F40  3646               	rlcf	(___fldiv@b+2)^0,f,c
 11687  001F42  3647               	rlcf	(___fldiv@b+3)^0,f,c
 11688  001F44                     
 11689                           ; BSR set to: 0
 11690  001F44  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11691  001F46  EFA7  F00F         	goto	u8801
 11692  001F4A  EFA9  F00F         	goto	u8800
 11693  001F4E                     u8801:
 11694  001F4E  EFAA  F00F         	goto	l1479
 11695  001F52                     u8800:
 11696  001F52                     
 11697                           ; BSR set to: 0
 11698  001F52  8044               	bsf	___fldiv@b^0,0,c
 11699  001F54                     l1479:
 11700                           
 11701                           ; BSR set to: 0
 11702  001F54  90D8               	bcf	status,0,c
 11703  001F56  3767               	rlcf	___fldiv@grs& (0+255),f,b
 11704  001F58  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11705  001F5A  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11706  001F5C  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11707  001F5E                     l7922:
 11708                           
 11709                           ; BSR set to: 0
 11710  001F5E  5048               	movf	___fldiv@a^0,w,c
 11711  001F60  5D60               	subwf	___fldiv@rem& (0+255),w,b
 11712  001F62  5049               	movf	(___fldiv@a+1)^0,w,c
 11713  001F64  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11714  001F66  504A               	movf	(___fldiv@a+2)^0,w,c
 11715  001F68  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11716  001F6A  504B               	movf	(___fldiv@a+3)^0,w,c
 11717  001F6C  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11718  001F6E  A0D8               	btfss	status,0,c
 11719  001F70  EFBC  F00F         	goto	u8811
 11720  001F74  EFBE  F00F         	goto	u8810
 11721  001F78                     u8811:
 11722  001F78  EFC7  F00F         	goto	l7928
 11723  001F7C                     u8810:
 11724  001F7C                     
 11725                           ; BSR set to: 0
 11726  001F7C  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11727  001F7E                     
 11728                           ; BSR set to: 0
 11729  001F7E  5048               	movf	___fldiv@a^0,w,c
 11730  001F80  5F60               	subwf	___fldiv@rem& (0+255),f,b
 11731  001F82  5049               	movf	(___fldiv@a+1)^0,w,c
 11732  001F84  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11733  001F86  504A               	movf	(___fldiv@a+2)^0,w,c
 11734  001F88  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11735  001F8A  504B               	movf	(___fldiv@a+3)^0,w,c
 11736  001F8C  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11737  001F8E                     l7928:
 11738                           
 11739                           ; BSR set to: 0
 11740  001F8E  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 11741  001F90                     l1476:
 11742                           
 11743                           ; BSR set to: 0
 11744  001F90  0E19               	movlw	25
 11745  001F92  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 11746  001F94  EFCE  F00F         	goto	u8821
 11747  001F98  EFD0  F00F         	goto	u8820
 11748  001F9C                     u8821:
 11749  001F9C  EF90  F00F         	goto	l7914
 11750  001FA0                     u8820:
 11751  001FA0                     
 11752                           ; BSR set to: 0
 11753  001FA0  5160               	movf	___fldiv@rem& (0+255),w,b
 11754  001FA2  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11755  001FA4  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11756  001FA6  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11757  001FA8  B4D8               	btfsc	status,2,c
 11758  001FAA  EFD9  F00F         	goto	u8831
 11759  001FAE  EFDB  F00F         	goto	u8830
 11760  001FB2                     u8831:
 11761  001FB2  EFF3  F00F         	goto	l7940
 11762  001FB6                     u8830:
 11763  001FB6                     
 11764                           ; BSR set to: 0
 11765  001FB6  8167               	bsf	___fldiv@grs& (0+255),0,b
 11766  001FB8  EFF3  F00F         	goto	l7940
 11767  001FBC                     l7934:
 11768                           
 11769                           ; BSR set to: 0
 11770  001FBC  90D8               	bcf	status,0,c
 11771  001FBE  3644               	rlcf	___fldiv@b^0,f,c
 11772  001FC0  3645               	rlcf	(___fldiv@b+1)^0,f,c
 11773  001FC2  3646               	rlcf	(___fldiv@b+2)^0,f,c
 11774  001FC4  3647               	rlcf	(___fldiv@b+3)^0,f,c
 11775  001FC6                     
 11776                           ; BSR set to: 0
 11777  001FC6  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11778  001FC8  EFE8  F00F         	goto	u8841
 11779  001FCC  EFEA  F00F         	goto	u8840
 11780  001FD0                     u8841:
 11781  001FD0  EFEB  F00F         	goto	l1485
 11782  001FD4                     u8840:
 11783  001FD4                     
 11784                           ; BSR set to: 0
 11785  001FD4  8044               	bsf	___fldiv@b^0,0,c
 11786  001FD6                     l1485:
 11787                           
 11788                           ; BSR set to: 0
 11789  001FD6  90D8               	bcf	status,0,c
 11790  001FD8  3767               	rlcf	___fldiv@grs& (0+255),f,b
 11791  001FDA  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11792  001FDC  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11793  001FDE  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11794  001FE0  0765               	decf	___fldiv@new_exp& (0+255),f,b
 11795  001FE2  A0D8               	btfss	status,0,c
 11796  001FE4  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11797  001FE6                     l7940:
 11798                           
 11799                           ; BSR set to: 0
 11800  001FE6  AE46               	btfss	(___fldiv@b+2)^0,7,c
 11801  001FE8  EFF8  F00F         	goto	u8851
 11802  001FEC  EFFA  F00F         	goto	u8850
 11803  001FF0                     u8851:
 11804  001FF0  EFDE  F00F         	goto	l7934
 11805  001FF4                     u8850:
 11806  001FF4                     
 11807                           ; BSR set to: 0
 11808  001FF4  0E00               	movlw	0
 11809  001FF6  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11810  001FF8                     
 11811                           ; BSR set to: 0
 11812  001FF8  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11813  001FFA  EF01  F010         	goto	u8861
 11814  001FFE  EF03  F010         	goto	u8860
 11815  002002                     u8861:
 11816  002002  EF27  F010         	goto	l1487
 11817  002006                     u8860:
 11818  002006                     
 11819                           ; BSR set to: 0
 11820  002006  0EFF               	movlw	255
 11821  002008  1567               	andwf	___fldiv@grs& (0+255),w,b
 11822  00200A  6E4C               	movwf	??___fldiv^0,c
 11823  00200C  0EFF               	movlw	255
 11824  00200E  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11825  002010  6E4D               	movwf	(??___fldiv+1)^0,c
 11826  002012  0EFF               	movlw	255
 11827  002014  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11828  002016  6E4E               	movwf	(??___fldiv+2)^0,c
 11829  002018  0E7F               	movlw	127
 11830  00201A  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11831  00201C  6E4F               	movwf	(??___fldiv+3)^0,c
 11832  00201E  504C               	movf	??___fldiv^0,w,c
 11833  002020  104D               	iorwf	(??___fldiv+1)^0,w,c
 11834  002022  104E               	iorwf	(??___fldiv+2)^0,w,c
 11835  002024  104F               	iorwf	(??___fldiv+3)^0,w,c
 11836  002026  B4D8               	btfsc	status,2,c
 11837  002028  EF18  F010         	goto	u8871
 11838  00202C  EF1A  F010         	goto	u8870
 11839  002030                     u8871:
 11840  002030  EF1E  F010         	goto	l1488
 11841  002034                     u8870:
 11842  002034                     l7948:
 11843                           
 11844                           ; BSR set to: 0
 11845  002034  0E01               	movlw	1
 11846  002036  6F6C               	movwf	___fldiv@aexp& (0+255),b
 11847  002038  EF27  F010         	goto	l1487
 11848  00203C                     l1488:
 11849                           
 11850                           ; BSR set to: 0
 11851  00203C  A044               	btfss	___fldiv@b^0,0,c
 11852  00203E  EF23  F010         	goto	u8881
 11853  002042  EF25  F010         	goto	u8880
 11854  002046                     u8881:
 11855  002046  EF27  F010         	goto	l1487
 11856  00204A                     u8880:
 11857  00204A  EF1A  F010         	goto	l7948
 11858  00204E                     l1487:
 11859                           
 11860                           ; BSR set to: 0
 11861  00204E  516C               	movf	___fldiv@aexp& (0+255),w,b
 11862  002050  B4D8               	btfsc	status,2,c
 11863  002052  EF2D  F010         	goto	u8891
 11864  002056  EF2F  F010         	goto	u8890
 11865  00205A                     u8891:
 11866  00205A  EF53  F010         	goto	l7960
 11867  00205E                     u8890:
 11868  00205E                     
 11869                           ; BSR set to: 0
 11870  00205E  0E01               	movlw	1
 11871  002060  2644               	addwf	___fldiv@b^0,f,c
 11872  002062  0E00               	movlw	0
 11873  002064  2245               	addwfc	(___fldiv@b+1)^0,f,c
 11874  002066  2246               	addwfc	(___fldiv@b+2)^0,f,c
 11875  002068  2247               	addwfc	(___fldiv@b+3)^0,f,c
 11876  00206A                     
 11877                           ; BSR set to: 0
 11878  00206A  A047               	btfss	(___fldiv@b+3)^0,0,c
 11879  00206C  EF3A  F010         	goto	u8901
 11880  002070  EF3C  F010         	goto	u8900
 11881  002074                     u8901:
 11882  002074  EF53  F010         	goto	l7960
 11883  002078                     u8900:
 11884  002078                     
 11885                           ; BSR set to: 0
 11886  002078  C044  F04C         	movff	___fldiv@b,??___fldiv
 11887  00207C  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 11888  002080  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 11889  002084  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 11890  002088  344F               	rlcf	(??___fldiv+3)^0,w,c
 11891  00208A  324F               	rrcf	(??___fldiv+3)^0,f,c
 11892  00208C  324E               	rrcf	(??___fldiv+2)^0,f,c
 11893  00208E  324D               	rrcf	(??___fldiv+1)^0,f,c
 11894  002090  324C               	rrcf	??___fldiv^0,f,c
 11895  002092  C04C  F044         	movff	??___fldiv,___fldiv@b
 11896  002096  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 11897  00209A  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 11898  00209E  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 11899  0020A2                     
 11900                           ; BSR set to: 0
 11901  0020A2  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 11902  0020A4  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11903  0020A6                     l7960:
 11904                           
 11905                           ; BSR set to: 0
 11906  0020A6  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11907  0020A8  EF5E  F010         	goto	u8911
 11908  0020AC  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11909  0020AE  E108               	bnz	u8910
 11910  0020B0  2965               	incf	___fldiv@new_exp& (0+255),w,b
 11911  0020B2  A0D8               	btfss	status,0,c
 11912  0020B4  EF5E  F010         	goto	u8911
 11913  0020B8  EF60  F010         	goto	u8910
 11914  0020BC                     u8911:
 11915  0020BC  EF6B  F010         	goto	l7964
 11916  0020C0                     u8910:
 11917  0020C0                     
 11918                           ; BSR set to: 0
 11919  0020C0  0E00               	movlw	0
 11920  0020C2  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11921  0020C4  6965               	setf	___fldiv@new_exp& (0+255),b
 11922  0020C6  0E00               	movlw	0
 11923  0020C8  6E44               	movwf	___fldiv@b^0,c
 11924  0020CA  0E00               	movlw	0
 11925  0020CC  6E45               	movwf	(___fldiv@b+1)^0,c
 11926  0020CE  0E00               	movlw	0
 11927  0020D0  6E46               	movwf	(___fldiv@b+2)^0,c
 11928  0020D2  0E00               	movlw	0
 11929  0020D4  6E47               	movwf	(___fldiv@b+3)^0,c
 11930  0020D6                     l7964:
 11931                           
 11932                           ; BSR set to: 0
 11933  0020D6  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11934  0020D8  EF78  F010         	goto	u8920
 11935  0020DC  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11936  0020DE  E106               	bnz	u8921
 11937  0020E0  0565               	decf	___fldiv@new_exp& (0+255),w,b
 11938  0020E2  B0D8               	btfsc	status,0,c
 11939  0020E4  EF76  F010         	goto	u8921
 11940  0020E8  EF78  F010         	goto	u8920
 11941  0020EC                     u8921:
 11942  0020EC  EF86  F010         	goto	l7968
 11943  0020F0                     u8920:
 11944  0020F0                     
 11945                           ; BSR set to: 0
 11946  0020F0  0E00               	movlw	0
 11947  0020F2  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11948  0020F4  0E00               	movlw	0
 11949  0020F6  6F65               	movwf	___fldiv@new_exp& (0+255),b
 11950  0020F8  0E00               	movlw	0
 11951  0020FA  6E44               	movwf	___fldiv@b^0,c
 11952  0020FC  0E00               	movlw	0
 11953  0020FE  6E45               	movwf	(___fldiv@b+1)^0,c
 11954  002100  0E00               	movlw	0
 11955  002102  6E46               	movwf	(___fldiv@b+2)^0,c
 11956  002104  0E00               	movlw	0
 11957  002106  6E47               	movwf	(___fldiv@b+3)^0,c
 11958  002108  0E00               	movlw	0
 11959  00210A  6F64               	movwf	___fldiv@sign& (0+255),b
 11960  00210C                     l7968:
 11961                           
 11962                           ; BSR set to: 0
 11963  00210C  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 11964  002110                     
 11965                           ; BSR set to: 0
 11966  002110  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 11967  002112  EF8D  F010         	goto	u8931
 11968  002116  EF8F  F010         	goto	u8930
 11969  00211A                     u8931:
 11970  00211A  EF92  F010         	goto	l7974
 11971  00211E                     u8930:
 11972  00211E                     
 11973                           ; BSR set to: 0
 11974  00211E  8E46               	bsf	(___fldiv@b+2)^0,7,c
 11975  002120  EF93  F010         	goto	l7976
 11976  002124                     l7974:
 11977                           
 11978                           ; BSR set to: 0
 11979  002124  9E46               	bcf	(___fldiv@b+2)^0,7,c
 11980  002126                     l7976:
 11981                           
 11982                           ; BSR set to: 0
 11983  002126  90D8               	bcf	status,0,c
 11984  002128  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 11985  00212A  6E47               	movwf	(___fldiv@b+3)^0,c
 11986  00212C  EF49  F00F         	goto	l7890
 11987  002130                     l1474:
 11988                           
 11989                           ; BSR set to: 0
 11990  002130  0012               	return		;funcret
 11991  002132                     __end_of___fldiv:
 11992                           	opt callstack 0
 11993                           
 11994 ;; *************** function _dameDistancia *****************
 11995 ;; Defined at:
 11996 ;;		line 26 in file "./ultrasonico.h"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  numeroSensor    1    wreg     unsigned char 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;  numeroSensor    1   32[COMRAM] unsigned char 
 12001 ;;  distancia       4   33[COMRAM] float 
 12002 ;;  conteo          2   37[COMRAM] unsigned int 
 12003 ;; Return value:  Size  Location     Type
 12004 ;;                  4   26[COMRAM] float 
 12005 ;; Registers used:
 12006 ;;		wreg, status,2, status,0, cstack
 12007 ;; Tracked objects:
 12008 ;;		On entry : 0/0
 12009 ;;		On exit  : 0/0
 12010 ;;		Unchanged: 0/0
 12011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12012 ;;      Params:         4       0       0       0       0       0       0       0       0
 12013 ;;      Locals:         7       0       0       0       0       0       0       0       0
 12014 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12015 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12016 ;;Total ram usage:       13 bytes
 12017 ;; Hardware stack levels used:    1
 12018 ;; Hardware stack levels required when called:    3
 12019 ;; This function calls:
 12020 ;;		___lwdiv
 12021 ;;		___xxtofl
 12022 ;; This function is called by:
 12023 ;;		_inicializarComportamientoBasico
 12024 ;;		_leerSensores
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text51
 12029  0031C6                     __ptext51:
 12030                           	opt callstack 0
 12031  0031C6                     _dameDistancia:
 12032                           	opt callstack 25
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;incstack = 0
 12036                           ;dameDistancia@numeroSensor stored from wreg
 12037  0031C6  6E21               	movwf	dameDistancia@numeroSensor^0,c
 12038  0031C8                     
 12039                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
 12040  0031C8  0E00               	movlw	0
 12041  0031CA  6ECF               	movwf	207,c	;volatile
 12042                           
 12043                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
 12044  0031CC  0E00               	movlw	0
 12045  0031CE  6ECE               	movwf	206,c	;volatile
 12046                           
 12047                           ;./ultrasonico.h: 33:     conteo = 0;
 12048  0031D0  0E00               	movlw	0
 12049  0031D2  6E27               	movwf	(dameDistancia@conteo+1)^0,c
 12050  0031D4  0E00               	movlw	0
 12051  0031D6  6E26               	movwf	dameDistancia@conteo^0,c
 12052  0031D8                     
 12053                           ;./ultrasonico.h: 34:     LATD3 = 1;
 12054  0031D8  868C               	bsf	3980,3,c	;volatile
 12055  0031DA                     
 12056                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
 12057  0031DA  0E04               	movlw	4
 12058  0031DC                     u11547:
 12059  0031DC  2EE8               	decfsz	wreg,f,c
 12060  0031DE  D7FE               	bra	u11547
 12061  0031E0                     
 12062                           ;./ultrasonico.h: 36:     LATD3 = 0;
 12063  0031E0  968C               	bcf	3980,3,c	;volatile
 12064                           
 12065                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
 12066  0031E2  EF3B  F019         	goto	l8928
 12067  0031E6                     l185:
 12068  0031E6  A281               	btfss	129,1,c	;volatile
 12069  0031E8  EFF8  F018         	goto	u10541
 12070  0031EC  EFFA  F018         	goto	u10540
 12071  0031F0                     u10541:
 12072  0031F0  EFF3  F018         	goto	l185
 12073  0031F4                     u10540:
 12074  0031F4                     
 12075                           ;./ultrasonico.h: 43:             TMR1ON = 1;
 12076  0031F4  80CD               	bsf	4045,0,c	;volatile
 12077  0031F6                     l188:
 12078  0031F6  A281               	btfss	129,1,c	;volatile
 12079  0031F8  EF00  F019         	goto	u10551
 12080  0031FC  EF02  F019         	goto	u10550
 12081  003200                     u10551:
 12082  003200  EF54  F019         	goto	l193
 12083  003204                     u10550:
 12084  003204  A09E               	btfss	3998,0,c	;volatile
 12085  003206  EF07  F019         	goto	u10561
 12086  00320A  EF09  F019         	goto	u10560
 12087  00320E                     u10561:
 12088  00320E  EFFB  F018         	goto	l188
 12089  003212                     u10560:
 12090  003212  EF54  F019         	goto	l193
 12091  003216                     l195:
 12092  003216  A481               	btfss	129,2,c	;volatile
 12093  003218  EF10  F019         	goto	u10571
 12094  00321C  EF12  F019         	goto	u10570
 12095  003220                     u10571:
 12096  003220  EF0B  F019         	goto	l195
 12097  003224                     u10570:
 12098  003224                     
 12099                           ;./ultrasonico.h: 51:             TMR1ON = 1;
 12100  003224  80CD               	bsf	4045,0,c	;volatile
 12101  003226                     l198:
 12102  003226  A481               	btfss	129,2,c	;volatile
 12103  003228  EF18  F019         	goto	u10581
 12104  00322C  EF1A  F019         	goto	u10580
 12105  003230                     u10581:
 12106  003230  EF54  F019         	goto	l193
 12107  003234                     u10580:
 12108  003234  A09E               	btfss	3998,0,c	;volatile
 12109  003236  EF1F  F019         	goto	u10591
 12110  00323A  EF21  F019         	goto	u10590
 12111  00323E                     u10591:
 12112  00323E  EF13  F019         	goto	l198
 12113  003242                     u10590:
 12114  003242  EF54  F019         	goto	l193
 12115  003246                     l204:
 12116  003246  A681               	btfss	129,3,c	;volatile
 12117  003248  EF28  F019         	goto	u10601
 12118  00324C  EF2A  F019         	goto	u10600
 12119  003250                     u10601:
 12120  003250  EF23  F019         	goto	l204
 12121  003254                     u10600:
 12122  003254                     
 12123                           ;./ultrasonico.h: 59:             TMR1ON = 1;
 12124  003254  80CD               	bsf	4045,0,c	;volatile
 12125  003256                     l207:
 12126  003256  A681               	btfss	129,3,c	;volatile
 12127  003258  EF30  F019         	goto	u10611
 12128  00325C  EF32  F019         	goto	u10610
 12129  003260                     u10611:
 12130  003260  EF54  F019         	goto	l193
 12131  003264                     u10610:
 12132  003264  A09E               	btfss	3998,0,c	;volatile
 12133  003266  EF37  F019         	goto	u10621
 12134  00326A  EF39  F019         	goto	u10620
 12135  00326E                     u10621:
 12136  00326E  EF2B  F019         	goto	l207
 12137  003272                     u10620:
 12138  003272  EF54  F019         	goto	l193
 12139  003276                     l8928:
 12140  003276  5021               	movf	dameDistancia@numeroSensor^0,w,c
 12141  003278  6E1F               	movwf	??_dameDistancia^0,c
 12142  00327A  6A20               	clrf	(??_dameDistancia+1)^0,c
 12143                           
 12144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12145                           ; Switch size 1, requested type "simple"
 12146                           ; Number of cases is 1, Range of values is 0 to 0
 12147                           ; switch strategies available:
 12148                           ; Name         Instructions Cycles
 12149                           ; simple_byte            4     3 (average)
 12150                           ;	Chosen strategy is simple_byte
 12151  00327C  5020               	movf	(??_dameDistancia+1)^0,w,c
 12152  00327E  0A00               	xorlw	0	; case 0
 12153  003280  B4D8               	btfsc	status,2,c
 12154  003282  EF45  F019         	goto	l10118
 12155  003286  EF54  F019         	goto	l193
 12156  00328A                     l10118:
 12157                           
 12158                           ; Switch size 1, requested type "simple"
 12159                           ; Number of cases is 3, Range of values is 1 to 3
 12160                           ; switch strategies available:
 12161                           ; Name         Instructions Cycles
 12162                           ; simple_byte           10     6 (average)
 12163                           ;	Chosen strategy is simple_byte
 12164  00328A  501F               	movf	??_dameDistancia^0,w,c
 12165  00328C  0A01               	xorlw	1	; case 1
 12166  00328E  B4D8               	btfsc	status,2,c
 12167  003290  EFF3  F018         	goto	l185
 12168  003294  0A03               	xorlw	3	; case 2
 12169  003296  B4D8               	btfsc	status,2,c
 12170  003298  EF0B  F019         	goto	l195
 12171  00329C  0A01               	xorlw	1	; case 3
 12172  00329E  B4D8               	btfsc	status,2,c
 12173  0032A0  EF23  F019         	goto	l204
 12174  0032A4  EF54  F019         	goto	l193
 12175  0032A8                     l193:
 12176                           
 12177                           ;./ultrasonico.h: 66:     TMR1ON = 0;
 12178  0032A8  90CD               	bcf	4045,0,c	;volatile
 12179                           
 12180                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
 12181  0032AA  B09E               	btfsc	3998,0,c	;volatile
 12182  0032AC  EF5A  F019         	goto	u10631
 12183  0032B0  EF5C  F019         	goto	u10630
 12184  0032B4                     u10631:
 12185  0032B4  EF82  F019         	goto	l8934
 12186  0032B8                     u10630:
 12187  0032B8                     
 12188                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
 12189  0032B8  50CF               	movf	207,w,c	;volatile
 12190  0032BA  6E20               	movwf	(??_dameDistancia+1)^0,c
 12191  0032BC  6A1F               	clrf	??_dameDistancia^0,c
 12192  0032BE  501F               	movf	??_dameDistancia^0,w,c
 12193  0032C0  1226               	iorwf	dameDistancia@conteo^0,f,c
 12194  0032C2  5020               	movf	(??_dameDistancia+1)^0,w,c
 12195  0032C4  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
 12196                           
 12197                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
 12198  0032C6  50CE               	movf	206,w,c	;volatile
 12199  0032C8  1226               	iorwf	dameDistancia@conteo^0,f,c
 12200  0032CA                     
 12201                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
 12202  0032CA  0E00               	movlw	0
 12203  0032CC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 12204  0032CE  0E3A               	movlw	58
 12205  0032D0  6E08               	movwf	___lwdiv@divisor^0,c
 12206  0032D2  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
 12207  0032D6  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
 12208  0032DA  EC0F  F01F         	call	___lwdiv	;wreg free
 12209  0032DE  C006  F00D         	movff	?___lwdiv,___xxtofl@val
 12210  0032E2  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
 12211  0032E6  6A0F               	clrf	(___xxtofl@val+2)^0,c
 12212  0032E8  6A10               	clrf	(___xxtofl@val+3)^0,c
 12213  0032EA  0E00               	movlw	0
 12214  0032EC  EC0D  F015         	call	___xxtofl
 12215  0032F0  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
 12216  0032F4  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
 12217  0032F8  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
 12218  0032FC  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
 12219                           
 12220                           ;./ultrasonico.h: 73:     } else {
 12221  003300  EF8B  F019         	goto	l8938
 12222  003304                     l8934:
 12223  003304                     
 12224                           ;./ultrasonico.h: 75:         TMR1IF = 0;
 12225  003304  909E               	bcf	3998,0,c	;volatile
 12226                           
 12227                           ;./ultrasonico.h: 76:         distancia = 0;
 12228  003306  0E00               	movlw	0
 12229  003308  6E22               	movwf	dameDistancia@distancia^0,c
 12230  00330A  0E00               	movlw	0
 12231  00330C  6E23               	movwf	(dameDistancia@distancia+1)^0,c
 12232  00330E  0E00               	movlw	0
 12233  003310  6E24               	movwf	(dameDistancia@distancia+2)^0,c
 12234  003312  0E00               	movlw	0
 12235  003314  6E25               	movwf	(dameDistancia@distancia+3)^0,c
 12236  003316                     l8938:
 12237                           
 12238                           ;./ultrasonico.h: 80:     return distancia;
 12239  003316  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
 12240  00331A  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
 12241  00331E  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
 12242  003322  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
 12243  003326  0012               	return		;funcret
 12244  003328                     __end_of_dameDistancia:
 12245                           	opt callstack 0
 12246                           
 12247 ;; *************** function ___xxtofl *****************
 12248 ;; Defined at:
 12249 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 12250 ;; Parameters:    Size  Location     Type
 12251 ;;  sign            1    wreg     unsigned char 
 12252 ;;  val             4   12[COMRAM] long 
 12253 ;; Auto vars:     Size  Location     Type
 12254 ;;  sign            1   20[COMRAM] unsigned char 
 12255 ;;  arg             4   22[COMRAM] unsigned long 
 12256 ;;  exp             1   21[COMRAM] unsigned char 
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  4   12[COMRAM] unsigned char 
 12259 ;; Registers used:
 12260 ;;		wreg, status,2, status,0
 12261 ;; Tracked objects:
 12262 ;;		On entry : 0/0
 12263 ;;		On exit  : 0/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12266 ;;      Params:         4       0       0       0       0       0       0       0       0
 12267 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12268 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12269 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12270 ;;Total ram usage:       14 bytes
 12271 ;; Hardware stack levels used:    1
 12272 ;; Hardware stack levels required when called:    2
 12273 ;; This function calls:
 12274 ;;		Nothing
 12275 ;; This function is called by:
 12276 ;;		_pwmDuty
 12277 ;;		_dameDistancia
 12278 ;;		_PID
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text52
 12283  002A1A                     __ptext52:
 12284                           	opt callstack 0
 12285  002A1A                     ___xxtofl:
 12286                           	opt callstack 25
 12287                           
 12288                           ;incstack = 0
 12289                           ;___xxtofl@sign stored from wreg
 12290  002A1A  6E15               	movwf	___xxtofl@sign^0,c
 12291  002A1C  5015               	movf	___xxtofl@sign^0,w,c
 12292  002A1E  B4D8               	btfsc	status,2,c
 12293  002A20  EF14  F015         	goto	u9411
 12294  002A24  EF16  F015         	goto	u9410
 12295  002A28                     u9411:
 12296  002A28  EF38  F015         	goto	l1547
 12297  002A2C                     u9410:
 12298  002A2C  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12299  002A2E  EF1D  F015         	goto	u9420
 12300  002A32  EF1B  F015         	goto	u9421
 12301  002A36                     u9421:
 12302  002A36  EF38  F015         	goto	l1547
 12303  002A3A                     u9420:
 12304  002A3A  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 12305  002A3E  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 12306  002A42  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 12307  002A46  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 12308  002A4A  1E11               	comf	??___xxtofl^0,f,c
 12309  002A4C  1E12               	comf	(??___xxtofl+1)^0,f,c
 12310  002A4E  1E13               	comf	(??___xxtofl+2)^0,f,c
 12311  002A50  1E14               	comf	(??___xxtofl+3)^0,f,c
 12312  002A52  2A11               	incf	??___xxtofl^0,f,c
 12313  002A54  0E00               	movlw	0
 12314  002A56  2212               	addwfc	(??___xxtofl+1)^0,f,c
 12315  002A58  2213               	addwfc	(??___xxtofl+2)^0,f,c
 12316  002A5A  2214               	addwfc	(??___xxtofl+3)^0,f,c
 12317  002A5C  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 12318  002A60  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 12319  002A64  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 12320  002A68  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 12321  002A6C  EF40  F015         	goto	l8296
 12322  002A70                     l1547:
 12323  002A70  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 12324  002A74  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12325  002A78  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12326  002A7C  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12327  002A80                     l8296:
 12328  002A80  500D               	movf	___xxtofl@val^0,w,c
 12329  002A82  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 12330  002A84  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 12331  002A86  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 12332  002A88  A4D8               	btfss	status,2,c
 12333  002A8A  EF49  F015         	goto	u9431
 12334  002A8E  EF4B  F015         	goto	u9430
 12335  002A92                     u9431:
 12336  002A92  EF55  F015         	goto	l8302
 12337  002A96                     u9430:
 12338  002A96  0E00               	movlw	0
 12339  002A98  6E0D               	movwf	?___xxtofl^0,c
 12340  002A9A  0E00               	movlw	0
 12341  002A9C  6E0E               	movwf	(?___xxtofl+1)^0,c
 12342  002A9E  0E00               	movlw	0
 12343  002AA0  6E0F               	movwf	(?___xxtofl+2)^0,c
 12344  002AA2  0E00               	movlw	0
 12345  002AA4  6E10               	movwf	(?___xxtofl+3)^0,c
 12346  002AA6  EFE6  F015         	goto	l1550
 12347  002AAA                     l8302:
 12348  002AAA  0E96               	movlw	150
 12349  002AAC  6E16               	movwf	___xxtofl@exp^0,c
 12350  002AAE  EF5F  F015         	goto	l8306
 12351  002AB2                     l8304:
 12352  002AB2  2A16               	incf	___xxtofl@exp^0,f,c
 12353  002AB4  90D8               	bcf	status,0,c
 12354  002AB6  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12355  002AB8  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12356  002ABA  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12357  002ABC  3217               	rrcf	___xxtofl@arg^0,f,c
 12358  002ABE                     l8306:
 12359  002ABE  0E00               	movlw	0
 12360  002AC0  1417               	andwf	___xxtofl@arg^0,w,c
 12361  002AC2  6E11               	movwf	??___xxtofl^0,c
 12362  002AC4  0E00               	movlw	0
 12363  002AC6  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12364  002AC8  6E12               	movwf	(??___xxtofl+1)^0,c
 12365  002ACA  0E00               	movlw	0
 12366  002ACC  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12367  002ACE  6E13               	movwf	(??___xxtofl+2)^0,c
 12368  002AD0  0EFE               	movlw	254
 12369  002AD2  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12370  002AD4  6E14               	movwf	(??___xxtofl+3)^0,c
 12371  002AD6  5011               	movf	??___xxtofl^0,w,c
 12372  002AD8  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12373  002ADA  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12374  002ADC  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12375  002ADE  A4D8               	btfss	status,2,c
 12376  002AE0  EF74  F015         	goto	u9441
 12377  002AE4  EF76  F015         	goto	u9440
 12378  002AE8                     u9441:
 12379  002AE8  EF59  F015         	goto	l8304
 12380  002AEC                     u9440:
 12381  002AEC  EF84  F015         	goto	l1554
 12382  002AF0                     l8308:
 12383  002AF0  2A16               	incf	___xxtofl@exp^0,f,c
 12384  002AF2  0E01               	movlw	1
 12385  002AF4  2617               	addwf	___xxtofl@arg^0,f,c
 12386  002AF6  0E00               	movlw	0
 12387  002AF8  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 12388  002AFA  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 12389  002AFC  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 12390  002AFE  90D8               	bcf	status,0,c
 12391  002B00  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12392  002B02  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12393  002B04  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12394  002B06  3217               	rrcf	___xxtofl@arg^0,f,c
 12395  002B08                     l1554:
 12396  002B08  0E00               	movlw	0
 12397  002B0A  1417               	andwf	___xxtofl@arg^0,w,c
 12398  002B0C  6E11               	movwf	??___xxtofl^0,c
 12399  002B0E  0E00               	movlw	0
 12400  002B10  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12401  002B12  6E12               	movwf	(??___xxtofl+1)^0,c
 12402  002B14  0E00               	movlw	0
 12403  002B16  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12404  002B18  6E13               	movwf	(??___xxtofl+2)^0,c
 12405  002B1A  0EFF               	movlw	255
 12406  002B1C  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12407  002B1E  6E14               	movwf	(??___xxtofl+3)^0,c
 12408  002B20  5011               	movf	??___xxtofl^0,w,c
 12409  002B22  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12410  002B24  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12411  002B26  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12412  002B28  A4D8               	btfss	status,2,c
 12413  002B2A  EF99  F015         	goto	u9451
 12414  002B2E  EF9B  F015         	goto	u9450
 12415  002B32                     u9451:
 12416  002B32  EF78  F015         	goto	l8308
 12417  002B36                     u9450:
 12418  002B36  EFA3  F015         	goto	l8316
 12419  002B3A                     l8314:
 12420  002B3A  0616               	decf	___xxtofl@exp^0,f,c
 12421  002B3C  90D8               	bcf	status,0,c
 12422  002B3E  3617               	rlcf	___xxtofl@arg^0,f,c
 12423  002B40  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 12424  002B42  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 12425  002B44  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 12426  002B46                     l8316:
 12427  002B46  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 12428  002B48  EFA8  F015         	goto	u9461
 12429  002B4C  EFAA  F015         	goto	u9460
 12430  002B50                     u9461:
 12431  002B50  EFB2  F015         	goto	l1561
 12432  002B54                     u9460:
 12433  002B54  0E02               	movlw	2
 12434  002B56  6016               	cpfslt	___xxtofl@exp^0,c
 12435  002B58  EFB0  F015         	goto	u9471
 12436  002B5C  EFB2  F015         	goto	u9470
 12437  002B60                     u9471:
 12438  002B60  EF9D  F015         	goto	l8314
 12439  002B64                     u9470:
 12440  002B64                     l1561:
 12441  002B64  B016               	btfsc	___xxtofl@exp^0,0,c
 12442  002B66  EFB7  F015         	goto	u9481
 12443  002B6A  EFB9  F015         	goto	u9480
 12444  002B6E                     u9481:
 12445  002B6E  EFBA  F015         	goto	l8322
 12446  002B72                     u9480:
 12447  002B72  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 12448  002B74                     l8322:
 12449  002B74  90D8               	bcf	status,0,c
 12450  002B76  3216               	rrcf	___xxtofl@exp^0,f,c
 12451  002B78  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 12452  002B7C  6A12               	clrf	(??___xxtofl+1)^0,c
 12453  002B7E  6A13               	clrf	(??___xxtofl+2)^0,c
 12454  002B80  6A14               	clrf	(??___xxtofl+3)^0,c
 12455  002B82  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 12456  002B86  6A13               	clrf	(??___xxtofl+2)^0,c
 12457  002B88  6A12               	clrf	(??___xxtofl+1)^0,c
 12458  002B8A  6A11               	clrf	??___xxtofl^0,c
 12459  002B8C  5011               	movf	??___xxtofl^0,w,c
 12460  002B8E  1217               	iorwf	___xxtofl@arg^0,f,c
 12461  002B90  5012               	movf	(??___xxtofl+1)^0,w,c
 12462  002B92  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 12463  002B94  5013               	movf	(??___xxtofl+2)^0,w,c
 12464  002B96  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 12465  002B98  5014               	movf	(??___xxtofl+3)^0,w,c
 12466  002B9A  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 12467  002B9C  5015               	movf	___xxtofl@sign^0,w,c
 12468  002B9E  B4D8               	btfsc	status,2,c
 12469  002BA0  EFD4  F015         	goto	u9491
 12470  002BA4  EFD6  F015         	goto	u9490
 12471  002BA8                     u9491:
 12472  002BA8  EFDE  F015         	goto	l8332
 12473  002BAC                     u9490:
 12474  002BAC  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12475  002BAE  EFDD  F015         	goto	u9500
 12476  002BB2  EFDB  F015         	goto	u9501
 12477  002BB6                     u9501:
 12478  002BB6  EFDE  F015         	goto	l8332
 12479  002BBA                     u9500:
 12480  002BBA  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 12481  002BBC                     l8332:
 12482  002BBC  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 12483  002BC0  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 12484  002BC4  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 12485  002BC8  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 12486  002BCC                     l1550:
 12487  002BCC  0012               	return		;funcret
 12488  002BCE                     __end_of___xxtofl:
 12489                           	opt callstack 0
 12490                           
 12491 ;; *************** function ___lwdiv *****************
 12492 ;; Defined at:
 12493 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;  dividend        2    5[COMRAM] unsigned int 
 12496 ;;  divisor         2    7[COMRAM] unsigned int 
 12497 ;; Auto vars:     Size  Location     Type
 12498 ;;  quotient        2   10[COMRAM] unsigned int 
 12499 ;;  counter         1    9[COMRAM] unsigned char 
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  2    5[COMRAM] unsigned int 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12509 ;;      Params:         4       0       0       0       0       0       0       0       0
 12510 ;;      Locals:         3       0       0       0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12512 ;;      Totals:         7       0       0       0       0       0       0       0       0
 12513 ;;Total ram usage:        7 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:    2
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_dameDistancia
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text53
 12524  003E1E                     __ptext53:
 12525                           	opt callstack 0
 12526  003E1E                     ___lwdiv:
 12527                           	opt callstack 25
 12528  003E1E  0E00               	movlw	0
 12529  003E20  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 12530  003E22  0E00               	movlw	0
 12531  003E24  6E0B               	movwf	___lwdiv@quotient^0,c
 12532  003E26  5008               	movf	___lwdiv@divisor^0,w,c
 12533  003E28  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 12534  003E2A  B4D8               	btfsc	status,2,c
 12535  003E2C  EF1A  F01F         	goto	u10511
 12536  003E30  EF1C  F01F         	goto	u10510
 12537  003E34                     u10511:
 12538  003E34  EF44  F01F         	goto	l1383
 12539  003E38                     u10510:
 12540  003E38  0E01               	movlw	1
 12541  003E3A  6E0A               	movwf	___lwdiv@counter^0,c
 12542  003E3C  EF24  F01F         	goto	l8898
 12543  003E40                     l8896:
 12544  003E40  90D8               	bcf	status,0,c
 12545  003E42  3608               	rlcf	___lwdiv@divisor^0,f,c
 12546  003E44  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 12547  003E46  2A0A               	incf	___lwdiv@counter^0,f,c
 12548  003E48                     l8898:
 12549  003E48  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 12550  003E4A  EF29  F01F         	goto	u10521
 12551  003E4E  EF2B  F01F         	goto	u10520
 12552  003E52                     u10521:
 12553  003E52  EF20  F01F         	goto	l8896
 12554  003E56                     u10520:
 12555  003E56                     l8900:
 12556  003E56  90D8               	bcf	status,0,c
 12557  003E58  360B               	rlcf	___lwdiv@quotient^0,f,c
 12558  003E5A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 12559  003E5C  5008               	movf	___lwdiv@divisor^0,w,c
 12560  003E5E  5C06               	subwf	___lwdiv@dividend^0,w,c
 12561  003E60  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 12562  003E62  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 12563  003E64  A0D8               	btfss	status,0,c
 12564  003E66  EF37  F01F         	goto	u10531
 12565  003E6A  EF39  F01F         	goto	u10530
 12566  003E6E                     u10531:
 12567  003E6E  EF3E  F01F         	goto	l8908
 12568  003E72                     u10530:
 12569  003E72  5008               	movf	___lwdiv@divisor^0,w,c
 12570  003E74  5E06               	subwf	___lwdiv@dividend^0,f,c
 12571  003E76  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 12572  003E78  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 12573  003E7A  800B               	bsf	___lwdiv@quotient^0,0,c
 12574  003E7C                     l8908:
 12575  003E7C  90D8               	bcf	status,0,c
 12576  003E7E  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 12577  003E80  3208               	rrcf	___lwdiv@divisor^0,f,c
 12578  003E82  2E0A               	decfsz	___lwdiv@counter^0,f,c
 12579  003E84  EF2B  F01F         	goto	l8900
 12580  003E88                     l1383:
 12581  003E88  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
 12582  003E8C  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12583  003E90  0012               	return		;funcret
 12584  003E92                     __end_of___lwdiv:
 12585                           	opt callstack 0
 12586                           
 12587 ;; *************** function _configurarAdc *****************
 12588 ;; Defined at:
 12589 ;;		line 7 in file "./adc.h"
 12590 ;; Parameters:    Size  Location     Type
 12591 ;;		None
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;		None
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  1    wreg      void 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12603 ;;      Params:         0       0       0       0       0       0       0       0       0
 12604 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12605 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12606 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12607 ;;Total ram usage:        0 bytes
 12608 ;; Hardware stack levels used:    1
 12609 ;; Hardware stack levels required when called:    2
 12610 ;; This function calls:
 12611 ;;		Nothing
 12612 ;; This function is called by:
 12613 ;;		_main
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           	psect	text54
 12618  004612                     __ptext54:
 12619                           	opt callstack 0
 12620  004612                     _configurarAdc:
 12621                           	opt callstack 28
 12622  004612                     
 12623                           ;./adc.h: 8:     ADCON1 = 0b00001110;
 12624  004612  0E0E               	movlw	14
 12625  004614  6EC1               	movwf	193,c	;volatile
 12626                           
 12627                           ;./adc.h: 9:     ADCON2 = 0b10100101;
 12628  004616  0EA5               	movlw	165
 12629  004618  6EC0               	movwf	192,c	;volatile
 12630  00461A  0012               	return		;funcret
 12631  00461C                     __end_of_configurarAdc:
 12632                           	opt callstack 0
 12633                           
 12634 ;; *************** function _configPwm *****************
 12635 ;; Defined at:
 12636 ;;		line 47 in file "./pwm.h"
 12637 ;; Parameters:    Size  Location     Type
 12638 ;;  channel         1    wreg     unsigned char 
 12639 ;; Auto vars:     Size  Location     Type
 12640 ;;  channel         1    7[COMRAM] unsigned char 
 12641 ;; Return value:  Size  Location     Type
 12642 ;;                  1    wreg      void 
 12643 ;; Registers used:
 12644 ;;		wreg, status,2, status,0
 12645 ;; Tracked objects:
 12646 ;;		On entry : 0/0
 12647 ;;		On exit  : 0/0
 12648 ;;		Unchanged: 0/0
 12649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12650 ;;      Params:         0       0       0       0       0       0       0       0       0
 12651 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12652 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12653 ;;      Totals:         3       0       0       0       0       0       0       0       0
 12654 ;;Total ram usage:        3 bytes
 12655 ;; Hardware stack levels used:    1
 12656 ;; Hardware stack levels required when called:    2
 12657 ;; This function calls:
 12658 ;;		Nothing
 12659 ;; This function is called by:
 12660 ;;		_main
 12661 ;; This function uses a non-reentrant model
 12662 ;;
 12663                           
 12664                           	psect	text55
 12665  0042B2                     __ptext55:
 12666                           	opt callstack 0
 12667  0042B2                     _configPwm:
 12668                           	opt callstack 28
 12669                           
 12670                           ;incstack = 0
 12671                           ;configPwm@channel stored from wreg
 12672  0042B2  6E08               	movwf	configPwm@channel^0,c
 12673  0042B4                     
 12674                           ;./pwm.h: 56:         T2CKPS0 = 1;
 12675  0042B4  80CA               	bsf	4042,0,c	;volatile
 12676                           
 12677                           ;./pwm.h: 57:         T2CKPS1 = 1;
 12678  0042B6  82CA               	bsf	4042,1,c	;volatile
 12679  0042B8                     
 12680                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
 12681  0042B8  0E7C               	movlw	124
 12682  0042BA  6ECB               	movwf	203,c	;volatile
 12683                           
 12684                           ;./pwm.h: 63:     switch (channel) {
 12685  0042BC  EF6A  F021         	goto	l9118
 12686  0042C0                     l165:
 12687                           
 12688                           ;./pwm.h: 66:             TRISC2 = 0;
 12689  0042C0  9494               	bcf	3988,2,c	;volatile
 12690                           
 12691                           ;./pwm.h: 67:             CCP1M3 = 1;
 12692  0042C2  86BD               	bsf	4029,3,c	;volatile
 12693                           
 12694                           ;./pwm.h: 68:             CCP1M2 = 1;
 12695  0042C4  84BD               	bsf	4029,2,c	;volatile
 12696                           
 12697                           ;./pwm.h: 71:             break;
 12698  0042C6  EF7F  F021         	goto	l166
 12699  0042CA                     l167:
 12700                           
 12701                           ;./pwm.h: 74:             TRISC1 = 0;
 12702  0042CA  9294               	bcf	3988,1,c	;volatile
 12703                           
 12704                           ;./pwm.h: 75:             CCP2M3 = 1;
 12705  0042CC  86BA               	bsf	4026,3,c	;volatile
 12706                           
 12707                           ;./pwm.h: 76:             CCP2M2 = 1;
 12708  0042CE  84BA               	bsf	4026,2,c	;volatile
 12709                           
 12710                           ;./pwm.h: 77:             break;
 12711  0042D0  EF7F  F021         	goto	l166
 12712  0042D4                     l9118:
 12713  0042D4  5008               	movf	configPwm@channel^0,w,c
 12714  0042D6  6E06               	movwf	??_configPwm^0,c
 12715  0042D8  6A07               	clrf	(??_configPwm+1)^0,c
 12716                           
 12717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12718                           ; Switch size 1, requested type "simple"
 12719                           ; Number of cases is 1, Range of values is 0 to 0
 12720                           ; switch strategies available:
 12721                           ; Name         Instructions Cycles
 12722                           ; simple_byte            4     3 (average)
 12723                           ;	Chosen strategy is simple_byte
 12724  0042DA  5007               	movf	(??_configPwm+1)^0,w,c
 12725  0042DC  0A00               	xorlw	0	; case 0
 12726  0042DE  B4D8               	btfsc	status,2,c
 12727  0042E0  EF74  F021         	goto	l10120
 12728  0042E4  EF7F  F021         	goto	l166
 12729  0042E8                     l10120:
 12730                           
 12731                           ; Switch size 1, requested type "simple"
 12732                           ; Number of cases is 2, Range of values is 1 to 2
 12733                           ; switch strategies available:
 12734                           ; Name         Instructions Cycles
 12735                           ; simple_byte            7     4 (average)
 12736                           ;	Chosen strategy is simple_byte
 12737  0042E8  5006               	movf	??_configPwm^0,w,c
 12738  0042EA  0A01               	xorlw	1	; case 1
 12739  0042EC  B4D8               	btfsc	status,2,c
 12740  0042EE  EF60  F021         	goto	l165
 12741  0042F2  0A03               	xorlw	3	; case 2
 12742  0042F4  B4D8               	btfsc	status,2,c
 12743  0042F6  EF65  F021         	goto	l167
 12744  0042FA  EF7F  F021         	goto	l166
 12745  0042FE                     l166:
 12746                           
 12747                           ;./pwm.h: 81:     TMR2ON = 1;
 12748  0042FE  84CA               	bsf	4042,2,c	;volatile
 12749  004300  0012               	return		;funcret
 12750  004302                     __end_of_configPwm:
 12751                           	opt callstack 0
 12752                           
 12753 ;; *************** function _UART_init *****************
 12754 ;; Defined at:
 12755 ;;		line 13 in file "./UART.h"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;  BAUD            4   31[COMRAM] long 
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;  frecuenciaCr    4    0        long 
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  1    wreg      void 
 12762 ;; Registers used:
 12763 ;;		wreg, status,2, status,0, cstack
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12769 ;;      Params:         4       0       0       0       0       0       0       0       0
 12770 ;;      Locals:         8       0       0       0       0       0       0       0       0
 12771 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12772 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12773 ;;Total ram usage:       12 bytes
 12774 ;; Hardware stack levels used:    1
 12775 ;; Hardware stack levels required when called:    3
 12776 ;; This function calls:
 12777 ;;		___aldiv
 12778 ;; This function is called by:
 12779 ;;		_main
 12780 ;; This function uses a non-reentrant model
 12781 ;;
 12782                           
 12783                           	psect	text56
 12784  003F04                     __ptext56:
 12785                           	opt callstack 0
 12786  003F04                     _UART_init:
 12787                           	opt callstack 27
 12788  003F04                     
 12789                           ;./UART.h: 16:     TRISC6 = 0;
 12790  003F04  9C94               	bcf	3988,6,c	;volatile
 12791  003F06                     
 12792                           ;./UART.h: 17:     TRISC7 = 1;
 12793  003F06  8E94               	bsf	3988,7,c	;volatile
 12794  003F08                     
 12795                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12796  003F08  0E10               	movlw	16
 12797  003F0A  6E16               	movwf	___aldiv@divisor^0,c
 12798  003F0C  0E00               	movlw	0
 12799  003F0E  6E17               	movwf	(___aldiv@divisor+1)^0,c
 12800  003F10  0E00               	movlw	0
 12801  003F12  6E18               	movwf	(___aldiv@divisor+2)^0,c
 12802  003F14  0E00               	movlw	0
 12803  003F16  6E19               	movwf	(___aldiv@divisor+3)^0,c
 12804  003F18  0E00               	movlw	0
 12805  003F1A  6E12               	movwf	___aldiv@dividend^0,c
 12806  003F1C  0E09               	movlw	9
 12807  003F1E  6E13               	movwf	(___aldiv@dividend+1)^0,c
 12808  003F20  0E3D               	movlw	61
 12809  003F22  6E14               	movwf	(___aldiv@dividend+2)^0,c
 12810  003F24  0E00               	movlw	0
 12811  003F26  6E15               	movwf	(___aldiv@dividend+3)^0,c
 12812  003F28  EC94  F019         	call	___aldiv	;wreg free
 12813  003F2C  C012  F028         	movff	?___aldiv,_UART_init$1787
 12814  003F30  C013  F029         	movff	?___aldiv+1,_UART_init$1787+1
 12815  003F34  C014  F02A         	movff	?___aldiv+2,_UART_init$1787+2
 12816  003F38  C015  F02B         	movff	?___aldiv+3,_UART_init$1787+3
 12817  003F3C                     
 12818                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 12819  003F3C  C028  F012         	movff	_UART_init$1787,___aldiv@dividend
 12820  003F40  C029  F013         	movff	_UART_init$1787+1,___aldiv@dividend+1
 12821  003F44  C02A  F014         	movff	_UART_init$1787+2,___aldiv@dividend+2
 12822  003F48  C02B  F015         	movff	_UART_init$1787+3,___aldiv@dividend+3
 12823  003F4C  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 12824  003F50  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 12825  003F54  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 12826  003F58  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 12827  003F5C  EC94  F019         	call	___aldiv	;wreg free
 12828  003F60  0412               	decf	?___aldiv^0,w,c
 12829  003F62  6EAF               	movwf	175,c	;volatile
 12830  003F64                     
 12831                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 12832  003F64  84AC               	bsf	172,2,c	;volatile
 12833  003F66                     
 12834                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 12835  003F66  98AC               	bcf	172,4,c	;volatile
 12836  003F68                     
 12837                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 12838  003F68  8EAB               	bsf	171,7,c	;volatile
 12839  003F6A                     
 12840                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 12841  003F6A  9CAC               	bcf	172,6,c	;volatile
 12842  003F6C                     
 12843                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 12844  003F6C  8AAC               	bsf	172,5,c	;volatile
 12845  003F6E                     
 12846                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 12847  003F6E  9CAB               	bcf	171,6,c	;volatile
 12848  003F70                     
 12849                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 12850  003F70  88AB               	bsf	171,4,c	;volatile
 12851  003F72  0012               	return		;funcret
 12852  003F74                     __end_of_UART_init:
 12853                           	opt callstack 0
 12854                           
 12855 ;; *************** function ___aldiv *****************
 12856 ;; Defined at:
 12857 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 12858 ;; Parameters:    Size  Location     Type
 12859 ;;  dividend        4   17[COMRAM] long 
 12860 ;;  divisor         4   21[COMRAM] long 
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;  quotient        4   27[COMRAM] long 
 12863 ;;  sign            1   26[COMRAM] unsigned char 
 12864 ;;  counter         1   25[COMRAM] unsigned char 
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  4   17[COMRAM] long 
 12867 ;; Registers used:
 12868 ;;		wreg, status,2, status,0
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12874 ;;      Params:         8       0       0       0       0       0       0       0       0
 12875 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12876 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12877 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12878 ;;Total ram usage:       14 bytes
 12879 ;; Hardware stack levels used:    1
 12880 ;; Hardware stack levels required when called:    2
 12881 ;; This function calls:
 12882 ;;		Nothing
 12883 ;; This function is called by:
 12884 ;;		_map
 12885 ;;		_UART_init
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           	psect	text57
 12890  003328                     __ptext57:
 12891                           	opt callstack 0
 12892  003328                     ___aldiv:
 12893                           	opt callstack 23
 12894  003328  0E00               	movlw	0
 12895  00332A  6E1B               	movwf	___aldiv@sign^0,c
 12896  00332C  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 12897  00332E  EF9D  F019         	goto	u7840
 12898  003332  EF9B  F019         	goto	u7841
 12899  003336                     u7841:
 12900  003336  EFA7  F019         	goto	l7424
 12901  00333A                     u7840:
 12902  00333A  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 12903  00333C  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 12904  00333E  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 12905  003340  6C16               	negf	___aldiv@divisor^0,c
 12906  003342  0E00               	movlw	0
 12907  003344  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 12908  003346  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 12909  003348  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 12910  00334A  0E01               	movlw	1
 12911  00334C  6E1B               	movwf	___aldiv@sign^0,c
 12912  00334E                     l7424:
 12913  00334E  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 12914  003350  EFAE  F019         	goto	u7850
 12915  003354  EFAC  F019         	goto	u7851
 12916  003358                     u7851:
 12917  003358  EFB8  F019         	goto	l7430
 12918  00335C                     u7850:
 12919  00335C  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 12920  00335E  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 12921  003360  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 12922  003362  6C12               	negf	___aldiv@dividend^0,c
 12923  003364  0E00               	movlw	0
 12924  003366  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 12925  003368  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 12926  00336A  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 12927  00336C  0E01               	movlw	1
 12928  00336E  1A1B               	xorwf	___aldiv@sign^0,f,c
 12929  003370                     l7430:
 12930  003370  0E00               	movlw	0
 12931  003372  6E1C               	movwf	___aldiv@quotient^0,c
 12932  003374  0E00               	movlw	0
 12933  003376  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 12934  003378  0E00               	movlw	0
 12935  00337A  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 12936  00337C  0E00               	movlw	0
 12937  00337E  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 12938  003380  5016               	movf	___aldiv@divisor^0,w,c
 12939  003382  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 12940  003384  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 12941  003386  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 12942  003388  B4D8               	btfsc	status,2,c
 12943  00338A  EFC9  F019         	goto	u7861
 12944  00338E  EFCB  F019         	goto	u7860
 12945  003392                     u7861:
 12946  003392  EF01  F01A         	goto	l7452
 12947  003396                     u7860:
 12948  003396  0E01               	movlw	1
 12949  003398  6E1A               	movwf	___aldiv@counter^0,c
 12950  00339A  EFD5  F019         	goto	l7438
 12951  00339E                     l7436:
 12952  00339E  90D8               	bcf	status,0,c
 12953  0033A0  3616               	rlcf	___aldiv@divisor^0,f,c
 12954  0033A2  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 12955  0033A4  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 12956  0033A6  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 12957  0033A8  2A1A               	incf	___aldiv@counter^0,f,c
 12958  0033AA                     l7438:
 12959  0033AA  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 12960  0033AC  EFDA  F019         	goto	u7871
 12961  0033B0  EFDC  F019         	goto	u7870
 12962  0033B4                     u7871:
 12963  0033B4  EFCF  F019         	goto	l7436
 12964  0033B8                     u7870:
 12965  0033B8                     l7440:
 12966  0033B8  90D8               	bcf	status,0,c
 12967  0033BA  361C               	rlcf	___aldiv@quotient^0,f,c
 12968  0033BC  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 12969  0033BE  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 12970  0033C0  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 12971  0033C2  5016               	movf	___aldiv@divisor^0,w,c
 12972  0033C4  5C12               	subwf	___aldiv@dividend^0,w,c
 12973  0033C6  5017               	movf	(___aldiv@divisor+1)^0,w,c
 12974  0033C8  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 12975  0033CA  5018               	movf	(___aldiv@divisor+2)^0,w,c
 12976  0033CC  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 12977  0033CE  5019               	movf	(___aldiv@divisor+3)^0,w,c
 12978  0033D0  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 12979  0033D2  A0D8               	btfss	status,0,c
 12980  0033D4  EFEE  F019         	goto	u7881
 12981  0033D8  EFF0  F019         	goto	u7880
 12982  0033DC                     u7881:
 12983  0033DC  EFF9  F019         	goto	l7448
 12984  0033E0                     u7880:
 12985  0033E0  5016               	movf	___aldiv@divisor^0,w,c
 12986  0033E2  5E12               	subwf	___aldiv@dividend^0,f,c
 12987  0033E4  5017               	movf	(___aldiv@divisor+1)^0,w,c
 12988  0033E6  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 12989  0033E8  5018               	movf	(___aldiv@divisor+2)^0,w,c
 12990  0033EA  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 12991  0033EC  5019               	movf	(___aldiv@divisor+3)^0,w,c
 12992  0033EE  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 12993  0033F0  801C               	bsf	___aldiv@quotient^0,0,c
 12994  0033F2                     l7448:
 12995  0033F2  90D8               	bcf	status,0,c
 12996  0033F4  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 12997  0033F6  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 12998  0033F8  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 12999  0033FA  3216               	rrcf	___aldiv@divisor^0,f,c
 13000  0033FC  2E1A               	decfsz	___aldiv@counter^0,f,c
 13001  0033FE  EFDC  F019         	goto	l7440
 13002  003402                     l7452:
 13003  003402  501B               	movf	___aldiv@sign^0,w,c
 13004  003404  B4D8               	btfsc	status,2,c
 13005  003406  EF07  F01A         	goto	u7891
 13006  00340A  EF09  F01A         	goto	u7890
 13007  00340E                     u7891:
 13008  00340E  EF11  F01A         	goto	l7456
 13009  003412                     u7890:
 13010  003412  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 13011  003414  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 13012  003416  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 13013  003418  6C1C               	negf	___aldiv@quotient^0,c
 13014  00341A  0E00               	movlw	0
 13015  00341C  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 13016  00341E  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 13017  003420  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 13018  003422                     l7456:
 13019  003422  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 13020  003426  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 13021  00342A  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 13022  00342E  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 13023  003432  0012               	return		;funcret
 13024  003434                     __end_of___aldiv:
 13025                           	opt callstack 0
 13026                           
 13027 ;; *************** function _boton *****************
 13028 ;; Defined at:
 13029 ;;		line 116 in file "main.c"
 13030 ;; Parameters:    Size  Location     Type
 13031 ;;		None
 13032 ;; Auto vars:     Size  Location     Type
 13033 ;;		None
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      void 
 13036 ;; Registers used:
 13037 ;;		wreg, status,2, status,0, cstack
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13043 ;;      Params:         0       0       0       0       0       0       0       0       0
 13044 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13045 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13046 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13047 ;;Total ram usage:        2 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:    1
 13050 ;; This function calls:
 13051 ;;		_antiRebote
 13052 ;; This function is called by:
 13053 ;;		Interrupt level 2
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           	psect	intcode
 13058  000008                     __pintcode:
 13059                           	opt callstack 0
 13060  000008                     _boton:
 13061                           	opt callstack 20
 13062                           
 13063                           ;incstack = 0
 13064  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13065  00000A  EDDD  F020         	call	int_func,f	;refresh shadow registers
 13066                           
 13067                           	psect	intcode_body
 13068  0041BA                     __pintcode_body:
 13069                           	opt callstack 20
 13070  0041BA                     int_func:
 13071                           	opt callstack 20
 13072  0041BA  0006               	pop		; remove dummy address from shadow register refresh
 13073  0041BC                     
 13074                           ;main.c: 118:     if (INT0IF)
 13075  0041BC  A2F2               	btfss	4082,1,c	;volatile
 13076  0041BE  EFE3  F020         	goto	i2u701_41
 13077  0041C2  EFE5  F020         	goto	i2u701_40
 13078  0041C6                     i2u701_41:
 13079  0041C6  EF05  F021         	goto	i2l280
 13080  0041CA                     i2u701_40:
 13081  0041CA                     
 13082                           ;main.c: 119:     {;main.c: 120:         antiRebote(1);
 13083  0041CA  0E01               	movlw	1
 13084  0041CC  ECB1  F020         	call	_antiRebote
 13085  0041D0                     
 13086                           ;main.c: 121:         if (pausa) {
 13087  0041D0  0101               	movlb	1	; () banked
 13088  0041D2  51D0               	movf	_pausa& (0+255),w,b
 13089  0041D4  B4D8               	btfsc	status,2,c
 13090  0041D6  EFEF  F020         	goto	i2u702_41
 13091  0041DA  EFF1  F020         	goto	i2u702_40
 13092  0041DE                     i2u702_41:
 13093  0041DE  EF01  F021         	goto	i2l278
 13094  0041E2                     i2u702_40:
 13095  0041E2                     
 13096                           ; BSR set to: 1
 13097                           ;main.c: 122:             pausa = 0;
 13098  0041E2  0E00               	movlw	0
 13099  0041E4  6FD0               	movwf	_pausa& (0+255),b
 13100  0041E6                     
 13101                           ; BSR set to: 1
 13102                           ;main.c: 123:             LATD2 = 1;
 13103  0041E6  848C               	bsf	3980,2,c	;volatile
 13104  0041E8                     
 13105                           ; BSR set to: 1
 13106                           ;main.c: 124:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 13107  0041E8  0E10               	movlw	16
 13108  0041EA  6E05               	movwf	(??_boton+1)^0,c
 13109  0041EC  0E39               	movlw	57
 13110  0041EE  6E04               	movwf	??_boton^0,c
 13111  0041F0  0E0E               	movlw	14
 13112  0041F2                     i2u1155_47:
 13113  0041F2  2EE8               	decfsz	wreg,f,c
 13114  0041F4  D7FE               	bra	i2u1155_47
 13115  0041F6  2E04               	decfsz	??_boton^0,f,c
 13116  0041F8  D7FC               	bra	i2u1155_47
 13117  0041FA  2E05               	decfsz	(??_boton+1)^0,f,c
 13118  0041FC  D7FA               	bra	i2u1155_47
 13119                           
 13120                           ;main.c: 125:         } else {
 13121  0041FE  EF04  F021         	goto	i2l6420
 13122  004202                     i2l278:
 13123                           
 13124                           ; BSR set to: 1
 13125                           ;main.c: 126:             LATD2 = 0;
 13126  004202  948C               	bcf	3980,2,c	;volatile
 13127  004204                     
 13128                           ; BSR set to: 1
 13129                           ;main.c: 127:             pausa = 1;
 13130  004204  0E01               	movlw	1
 13131  004206  6FD0               	movwf	_pausa& (0+255),b
 13132  004208                     i2l6420:
 13133                           
 13134                           ;main.c: 130:         INT0IF = 0;
 13135  004208  92F2               	bcf	4082,1,c	;volatile
 13136  00420A                     i2l280:
 13137  00420A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13138  00420C  0011               	retfie		f
 13139  00420E                     __end_of_boton:
 13140                           	opt callstack 0
 13141                           
 13142 ;; *************** function _antiRebote *****************
 13143 ;; Defined at:
 13144 ;;		line 228 in file "main.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;  pin             1    wreg     unsigned char 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  pin             1    2[COMRAM] unsigned char 
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      void 
 13151 ;; Registers used:
 13152 ;;		wreg, status,2, status,0
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0
 13159 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13160 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13161 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13162 ;;Total ram usage:        3 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; This function calls:
 13165 ;;		Nothing
 13166 ;; This function is called by:
 13167 ;;		_boton
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171                           	psect	text59
 13172  004162                     __ptext59:
 13173                           	opt callstack 0
 13174  004162                     _antiRebote:
 13175                           	opt callstack 20
 13176                           
 13177                           ;incstack = 0
 13178                           ;antiRebote@pin stored from wreg
 13179  004162  6E03               	movwf	antiRebote@pin^0,c
 13180  004164                     
 13181                           ;main.c: 230:     switch (pin) {
 13182  004164  EFCB  F020         	goto	i2l6344
 13183  004168                     i2l314:
 13184  004168  A081               	btfss	129,0,c	;volatile
 13185  00416A  EFB9  F020         	goto	i2u697_41
 13186  00416E  EFBB  F020         	goto	i2u697_40
 13187  004172                     i2u697_41:
 13188  004172  EFB4  F020         	goto	i2l314
 13189  004176                     i2u697_40:
 13190  004176                     i2l317:
 13191  004176  B081               	btfsc	129,0,c	;volatile
 13192  004178  EFC0  F020         	goto	i2u698_41
 13193  00417C  EFC2  F020         	goto	i2u698_40
 13194  004180                     i2u698_41:
 13195  004180  EFBB  F020         	goto	i2l317
 13196  004184                     i2u698_40:
 13197  004184                     
 13198                           ;main.c: 234:             _delay((unsigned long)((100)*(4000000/4000.0)));
 13199  004184  0E82               	movlw	130
 13200  004186  6E01               	movwf	??_antiRebote^0,c
 13201  004188  0EDE               	movlw	222
 13202  00418A                     i2u1156_47:
 13203  00418A  2EE8               	decfsz	wreg,f,c
 13204  00418C  D7FE               	bra	i2u1156_47
 13205  00418E  2E01               	decfsz	??_antiRebote^0,f,c
 13206  004190  D7FC               	bra	i2u1156_47
 13207                           
 13208                           ;main.c: 235:             break;
 13209  004192  EFDC  F020         	goto	i2l322
 13210  004196                     i2l6344:
 13211  004196  5003               	movf	antiRebote@pin^0,w,c
 13212  004198  6E01               	movwf	??_antiRebote^0,c
 13213  00419A  6A02               	clrf	(??_antiRebote+1)^0,c
 13214                           
 13215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13216                           ; Switch size 1, requested type "simple"
 13217                           ; Number of cases is 1, Range of values is 0 to 0
 13218                           ; switch strategies available:
 13219                           ; Name         Instructions Cycles
 13220                           ; simple_byte            4     3 (average)
 13221                           ;	Chosen strategy is simple_byte
 13222  00419C  5002               	movf	(??_antiRebote+1)^0,w,c
 13223  00419E  0A00               	xorlw	0	; case 0
 13224  0041A0  B4D8               	btfsc	status,2,c
 13225  0041A2  EFD5  F020         	goto	i2l10122
 13226  0041A6  EFDC  F020         	goto	i2l322
 13227  0041AA                     i2l10122:
 13228                           
 13229                           ; Switch size 1, requested type "simple"
 13230                           ; Number of cases is 1, Range of values is 1 to 1
 13231                           ; switch strategies available:
 13232                           ; Name         Instructions Cycles
 13233                           ; simple_byte            4     3 (average)
 13234                           ;	Chosen strategy is simple_byte
 13235  0041AA  5001               	movf	??_antiRebote^0,w,c
 13236  0041AC  0A01               	xorlw	1	; case 1
 13237  0041AE  B4D8               	btfsc	status,2,c
 13238  0041B0  EFB4  F020         	goto	i2l314
 13239  0041B4  EFDC  F020         	goto	i2l322
 13240  0041B8                     i2l322:
 13241  0041B8  0012               	return		;funcret
 13242  0041BA                     __end_of_antiRebote:
 13243                           	opt callstack 0
 13244                           
 13245                           	psect	rparam
 13246  0000                     
 13247                           	psect	temp
 13248  000059                     btemp:
 13249                           	opt callstack 0
 13250  000059                     	ds	1
 13251  0000                     int$flags	set	btemp
 13252  0000                     wtemp8	set	btemp+1
 13253  0000                     ttemp5	set	btemp+1
 13254  0000                     ttemp6	set	btemp+4
 13255  0000                     ttemp7	set	btemp+8
 13256                           tosu	equ	0xFFF
 13257                           tosh	equ	0xFFE
 13258                           tosl	equ	0xFFD
 13259                           stkptr	equ	0xFFC
 13260                           pclatu	equ	0xFFB
 13261                           pclath	equ	0xFFA
 13262                           pcl	equ	0xFF9
 13263                           tblptru	equ	0xFF8
 13264                           tblptrh	equ	0xFF7
 13265                           tblptrl	equ	0xFF6
 13266                           tablat	equ	0xFF5
 13267                           prodh	equ	0xFF4
 13268                           prodl	equ	0xFF3
 13269                           indf0	equ	0xFEF
 13270                           postinc0	equ	0xFEE
 13271                           postdec0	equ	0xFED
 13272                           preinc0	equ	0xFEC
 13273                           plusw0	equ	0xFEB
 13274                           fsr0h	equ	0xFEA
 13275                           fsr0l	equ	0xFE9
 13276                           wreg	equ	0xFE8
 13277                           indf1	equ	0xFE7
 13278                           postinc1	equ	0xFE6
 13279                           postdec1	equ	0xFE5
 13280                           preinc1	equ	0xFE4
 13281                           plusw1	equ	0xFE3
 13282                           fsr1h	equ	0xFE2
 13283                           fsr1l	equ	0xFE1
 13284                           bsr	equ	0xFE0
 13285                           indf2	equ	0xFDF
 13286                           postinc2	equ	0xFDE
 13287                           postdec2	equ	0xFDD
 13288                           preinc2	equ	0xFDC
 13289                           plusw2	equ	0xFDB
 13290                           fsr2h	equ	0xFDA
 13291                           fsr2l	equ	0xFD9
 13292                           status	equ	0xFD8


Data Sizes:
    Strings     343
    Constant    4
    Data        4
    BSS         1412
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     83      88
    BANK0           160    153     159
    BANK1           256      7     212
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1454_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 63
		 -> STR_13(CODE[63]), STR_12(CODE[56]), STR_10(CODE[6]), STR_9(CODE[9]), 
		 -> STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), STR_2(CODE[25]), 
		 -> STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_printf->_UART_write
    _leerSensores->___fldiv
    _PID->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul
    _map->___aldiv
    ___fltol->_roundf
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _dameDistancia->___xxtofl
    ___xxtofl->___lwdiv
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _visualizarPasosRealizados->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _probarPID->_PID
    _leerSensores->___fldiv
    _finalizarRecorrido->_forzarEspejeoAuto
    _PID->_pwmDuty
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_visualizarPasosRealizados

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  154064
                                              4 BANK1      3     3      0
                          _UART_init
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
                          _probarPID
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   53534
                                              0 BANK1      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   52327
                                            135 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   51097
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   50558
                                             97 BANK0     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   36787
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1795
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1086
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _probarPID                                            0     0      0   85959
                                _PID
                             ___flge
                 _finalizarRecorrido
                       _leerSensores
                              _mover
 ---------------------------------------------------------------------------------
 (2) _mover                                                2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _finalizarRecorrido                                   0     0      0   23842
                  _forzarEspejeoAuto
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _forzarParoAuto                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeoAuto                                    2     2      0   11921
                                             40 BANK0      2     2      0
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _PID                                                 18    18      0   49458
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   19207
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2426
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     692
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13289
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _velocidadEstandar                                    0     0      0   11921
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (4) _pwmDuty                                             12     9      3   11921
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (5) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3773
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (3) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (11) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
         ___wmul (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___xxtofl
           ___lwdiv (ARG)
           ___wmul (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _probarPID
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
           ___wmul (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
             ___wmul (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
           ___wmul (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
           ___wmul (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
       ___wmul
       ___xxtofl
         ___lwdiv (ARG)
         ___wmul (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___xxtofl
           ___lwdiv (ARG)
           ___wmul (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
           ___wmul (ARG)
     ___flge
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
           ___wmul (ARG)
     _finalizarRecorrido
       _forzarEspejeoAuto
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                         ___wmul (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                         ___wmul (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___xxtofl
               ___lwdiv (ARG)
               ___wmul (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
       _forzarParoAuto
       _forzarReversa
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
           ___xxtofl
             ___lwdiv (ARG)
             ___wmul (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
           ___wmul (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
             ___wmul (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
               ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
               ___wmul (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
           ___wmul (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
             ___wmul (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
           ___wmul (ARG)
     _mover
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                         ___wmul (ARG)
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                         ___wmul (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
                     ___wmul (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     3E8      21       48.9%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7      D4       7       82.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     53      58       1       93.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     293      20        0.0%
DATA                 0      0     67B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Aug 31 19:30:39 2020

                              ___fldiv@aexp 006C                                ___fldiv@bexp 006B  
                              ___fldiv@sign 0064                                ___awdiv@sign 000B  
                            ?_configurarAdc 0001                         ___wmul@multiplicand 0008  
                               __CFG_BORV$3 000000                                __CFG_CP0$OFF 000000  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000             comportamientoBasico@caminoFinal 02C8  
                                       l204 3246                                         l214 3326  
                                       l206 3254                                         l207 3256  
                                       l400 45F0                                         l217 3F72  
                                       l162 42B4                                         l226 45F8  
                                       l403 4610                                         l235 4104  
                                       l165 42C0                                         l149 3E1C  
                                       l157 2A18                                         l325 439C  
                                       l229 4606                                         l309 3C70  
                                       l166 42FE                                         l238 461A  
                                       l406 45D8                                         l167 42CA  
                                       l168 4300                                         l424 3D20  
                                       l193 32A8                                         l185 31E6  
                                       l409 456C                                         l426 3D2C  
                                       l195 3216                                         l187 31F4  
                                       l427 3D4E                                         l188 31F6  
                                       l428 3D5A                                         l197 3224  
                                       l429 3DA2                                         l198 3226  
                                       l632 3030                                         l800 03FE  
                                       l644 3060                                         l637 3050  
                                       l733 39E6                                         l638 3040  
                                       l670 434E                                         l903 4036  
                                       l904 4046                                         l736 3A28  
                                       l744 21D0                                         l673 45B8  
                                       l665 2646                                         l738 3A62  
                                       l746 21D8                                         l826 0796  
                                       l764 240E                                         l782 0BC2  
                                       l882 103E                                         l874 10F8  
                                       l971 3432                                         l892 4592  
                                       l888 3FD4                                         l889 3FDC  
                              __CFG_CPB$OFF 000000                                         _PR2 000FCB  
                                       _PID 2410                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         _abs 4428  
                                       _map 3DA4                                         _pad 39A2  
                              ___awmod@sign 000B                                         wreg 000FE8  
                              ___flmul@aexp 0028                                ___flmul@bexp 002D  
                  _DISTANCIA_PRIORIDAD_BAJA 010C                    _DISTANCIA_PRIORIDAD_ALTA 0114  
                              ___flmul@sign 0027                                ___flmul@temp 0032  
                              ___flmul@prod 002E                                __CFG_LVP$OFF 000000  
                                      ?_PID 0001                                ___fltol@exp1 007B  
                              __CFG_WDT$OFF 000000                                        l1006 2EE4  
                                      l1019 31C4                                        l1123 39A0  
                                      ?_abs 0018                                        l1151 3D1A  
                                      l1136 3BC2                                        l1162 363E  
                                      l1420 12E8                                        l1157 35F8  
                                      l1421 12D6                                        l1510 19E2  
                                      l1166 450E                                        l1422 129C  
                                      l1513 1874                                        l1506 167E  
                                      l1523 19A4                                        l1515 18EC  
                                      l1516 18DA                                        l1612 2D5C  
                                      l1189 353A                                        l1437 1402  
                                      l1429 15B8                                        l1621 27A0  
                                      l1390 3E90                                        l1550 2BCC  
                                      l1446 14D2                                        l1462 43E2  
                                      l1702 4544                                        l1383 3E88  
                                      l1447 14C0                                        l1561 2B64  
                                      l1609 2D54                                        l1721 40A6  
                                      l1554 2B08                                        l1474 2130  
                                      l1618 285C                                        l1642 449E  
                                      l1706 3812                                        l1547 2A70  
                                      l1476 1F90                                        l1628 44D6  
                                      l1636 42B0                                        l1716 409E  
                                      l1485 1FD6                                        l1581 4466  
                                      l1573 373C                                        l1487 204E  
                                      l1479 1F54                                        l1488 203C  
                                      l1672 425E                                        l1657 38DC  
                                      l1665 4426                                        l1578 445E  
                                      l1683 1D94                                        l1675 4620  
                                      l1696 4160                                        ?_map 0020  
                                      ?_pad 0016                                        l8000 161C  
                                      l8010 1648                                        l8002 1622  
                                      l8100 19A8                                        l8020 169E  
                                      l8012 1658                                        l8004 1628  
                                      l8110 19D2                                        l8102 19B8  
                                      l8030 16DE                                        l8014 1668  
                                      l8006 1636                                        l8104 19C6  
                                      l8040 1728                                        l8032 16EA  
                                      l8024 16B2                                        l8016 166E  
                                      l8008 1638                                        l8120 38DE  
                                      l8200 3C72                                        l9000 3F74  
                                      l8106 19C8                                        l8050 177A  
                                      l8042 1734                                        l8034 1702  
                                      l8026 16BE                                        l8018 168E  
                                      l7410 3FFC                                        l8114 439E  
                                      l9010 40AC                                        l8130 390A  
                                      l8122 38E2                                        l8210 3D12  
                                      l8202 3CA0                                        l7402 4468  
                                      l9002 3F7C                                        l7420 333A  
                                      l8108 19CE                                        l8060 17F8  
                                      l8052 178A                                        l8044 1744  
                                      l8036 170E                                        l8028 16C8  
                                      l7412 400C                                        l8220 357A  
                                      l7500 11CA                                        l8116 43AE  
                                      l9100 45DE                                        l9020 3010  
                                      l9012 40D0                                        l8140 3938  
                                      l8132 3912                                        l8124 38F0  
                                      l8212 3D18                                        l8204 3CB0  
                                      l9004 3F8A                                        l7430 3370  
                                      l7422 334A                                        l8310 2AF2  
                                      l8302 2AAA                                        l8070 1872  
                                      l8062 182E                                        l8054 17A6  
                                      l8046 1750                                        l8038 171A  
                                      l7414 4016                                        l7406 3FDE  
                                      l8230 35E6                                        l8222 35A8  
                                      l7510 1202                                        l7502 11DA  
                                      l9102 45E2                                        l9022 3020  
                                      l9014 40D4                                        l8150 3972  
                                      l8142 3940                                        l8134 3916  
                                      l8126 38F8                                        l8206 3CDE  
                                      l9006 3FB8                                        l7440 33B8  
                                      l7432 3380                                        l7424 334E  
                                      l7416 3328                                        l8320 2B72  
                                      l8312 2AFE                                        l8304 2AB2  
                                      l8080 18D2                                        l8072 1884  
                                      l8064 183C                                        l8056 17B2  
                                      l8048 1760                                        l7408 3FEE  
                                      l8232 3636                                        l8224 35B8  
                                      l8216 353C                                        l8240 44EE  
                                      l7520 1216                                        l7512 1206  
                                      l7504 11EC                                        l9104 45E6  
                                      l9016 2EE6                                        l9008 40A8  
                                      l8400 2310                                        l8160 3998  
                                      l8152 3974                                        l8144 394E  
                                      l8136 391E                                        l8128 38FC  
                                      l8208 3CEE                                        l9040 424C  
                                      l9032 420E                                        l7450 33FC  
                                      l7442 33C2                                        l7434 3396  
                                      l7426 335C                                        l7418 332C  
                                      l9130 3F08                                        l9114 42B8  
                                      l8330 2BBA                                        l8322 2B74  
                                      l8314 2B3A                                        l8306 2ABE  
                                      l8090 1940                                        l8074 1892  
                                      l8066 185A                                        l8058 17CE  
                                      l8234 363C                                        l8226 35C6  
                                      l8218 356A                                        l8242 44FE  
                                      l7610 1464                                        l7602 143C  
                                      l7530 122A                                        l7522 121A  
                                      l7514 120A                                        l7506 11FA  
                                      l9106 45EA                                        l9018 3000  
                                      l7370 3814                                        l8402 232A  
                                      l8410 238A                                        l8154 397A  
                                      l8146 3954                                        l8138 3930  
                                      l8170 3B2E                                        l9034 4220  
                                      l7444 33E0                                        l7436 339E  
                                      l7452 3402                                        l7428 336C  
                                      l9140 3F6A                                        l9132 3F3C  
                                      l9124 3F04                                        l9108 42B4  
                                      l8332 2BBC                                        l8324 2B78  
                                      l8316 2B46                                        l8308 2AF0  
                                      l8084 18FC                                        l8092 1944  
                                      l8076 1896                                        l8068 1864  
                                      l8260 34A0                                        l8252 3460  
                                      l8228 35D8                                        l7612 146C  
                                      l7604 1446                                        l7620 1490  
                                      l7540 123E                                        l7532 122E  
                                      l7524 121E                                        l7516 120E  
                                      l7508 11FE                                        l7460 10FA  
                                      l9060 2410                                        l9052 3D66  
                                      l9044 3D1C                                        l8340 4278  
                                      l7380 3896                                        l7372 3826  
                                      l8420 23CE                                        l8412 239C  
                                      l8404 2348                                        l8148 396A  
                                      l8156 3980                                        l8180 3B62  
                                      l8172 3B32                                        l8164 3B14  
                                      l7700 36D2                                        l8500 0296  
                                      l9036 4228                                        l7454 3412  
                                      l7446 33F0                                        l7438 33AA  
                                      l9142 3F6C                                        l9134 3F64  
                                      l9126 3F04                                        l9118 42D4  
                                      l8326 2B9C                                        l8318 2B54  
                                      l8094 195E                                        l8086 1908  
                                      l8078 18A4                                        l8270 34D0  
                                      l8262 34AE                                        l8254 348A  
                                      l8246 3434                                        l8350 28BE  
                                      l8238 44D8                                        l7630 14E2  
                                      l7622 1494                                        l7614 1470  
                                      l7606 1454                                        l7550 12B6  
                                      l7542 1268                                        l7534 1232  
                                      l7526 1222                                        l7518 1212  
                                      l7470 1136                                        l7462 1106  
                                      l9070 253A                                        l9062 241A  
                                      l9046 3D34                                        l8342 42A6  
                                      l7374 3838                                        l7390 4406  
                                      l8422 23D6                                        l8414 23AA  
                                      l8406 2362                                        l8158 3990  
                                      l8190 3B9C                                        l8182 3B6A  
                                      l8174 3B40                                        l8166 3B18  
                                      l7710 3734                                        l8510 0366  
                                      l8502 02CA                                        l8430 001C  
                                      l9038 4230                                        l9150 3BC4  
                                      l7456 3422                                        l7448 33F2  
                                      l9144 3F6E                                        l9136 3F66  
                                      l9128 3F06                                        l8328 2BAC  
                                      l8096 1972                                        l8088 1916  
                                      l8280 34FA                                        l8272 34DA  
                                      l8256 348C                                        l8248 344C  
                                      l8360 29EC                                        l8352 28DE  
                                      l7640 1548                                        l7632 14EE  
                                      l7624 14A2                                        l7616 1480  
                                      l7608 1456                                        l7560 12F6  
                                      l7552 12BA                                        l7544 1284  
                                      l7536 1236                                        l7528 1226  
                                      l7480 1166                                        l7472 1146  
                                      l7464 1114                                        l9072 255C  
                                      l9080 25B0                                        l9064 245A  
                                      l8344 42AA                                        l8336 4260  
                                      l7800 2E8E                                        l7376 3842  
                                      l7384 43E4                                        l7392 4510  
                                      l8416 23B0                                        l8424 23E6  
                                      l8408 237C                                        l8184 3B78  
                                      l8192 3BA2                                        l8176 3B48  
                                      l8168 3B26                                        l7704 36DE  
                                      l8600 07B2                                        l8520 03D0  
                                      l8504 02D0                                        l8512 0398  
                                      l8440 0070                                        l8432 002C  
                                      l9152 3BC8                                        l9146 3F70  
                                      l9138 3F68                                        l8290 2A1C  
                                      l8098 198C                                        l8282 350A  
                                      l8258 349C                                        l8354 2964  
                                      l7650 1590                                        l7642 1558  
                                      l7634 14FC                                        l7626 14B8  
                                      l7618 1482                                        l7570 1338  
                                      l7562 1306                                        l7554 12C8  
                                      l7546 1294                                        l7538 123A  
                                      l7490 1190                                        l7482 1178  
                                      l7474 1148                                        l7466 1116  
                                      l9090 2610                                        l9082 25B8  
                                      l9074 2588                                        l9066 2502  
                                      l8338 4264                                        l7802 2E94  
                                      l7810 3062                                        l7378 3860  
                                      l7386 43F0                                        l7394 451C  
                                      l8418 23C2                                        l8370 217A  
                                      l8194 3BB2                                        l8186 3B8E  
                                      l8178 3B5A                                        l7706 36F0  
                                      l7730 2668                                        l7714 4106  
                                      l7722 407E                                        l8610 0858  
                                      l8602 0816                                        l8522 03D8  
                                      l8514 03A8                                        l8506 032A  
                                      l8450 00B6                                        l8442 0078  
                                      l8434 003A                                        l9154 3BD8  
                                      l9162 3C08                                        l9148 4612  
                                      l8292 2A2C                                        l7900 1EBA  
                                      l8284 351A                                        l8268 34C6  
                                      l8356 29A8                                        l8348 285E  
                                      l9180 4382                                        l7652 1592  
                                      l7644 1578                                        l7636 1536  
                                      l7580 1366                                        l7572 1346  
                                      l7556 12CA                                        l7548 12AA  
                                      l7492 11A0                                        l7484 117A  
                                      l7468 1126                                        l7476 1150  
                                      l9084 25D0                                        l9092 261C  
                                      l9076 259C                                        l9068 2532  
                                      l7804 2EA4                                        l7820 30A6  
                                      l7812 3066                                        l7388 4402  
                                      l7396 4520                                        l8380 21E0  
                                      l8372 219A                                        l8196 3BBA  
                                      l8188 3B96                                        l7740 2754  
                                      l7732 26C0                                        l7716 4116  
                                      l7724 4090                                        l8700 0B16  
                                      l8620 0896                                        l8604 0824  
                                      l8612 0860                                        l8540 0488  
                                      l8532 041C                                        l8524 03F2  
                                      l8516 03AC                                        l8508 035E  
                                      l8460 00F2                                        l8452 00BE  
                                      l8444 008A                                        l8436 0042  
                                      l8428 0012                                        l9156 3BE8  
                                      l9164 3C46                                        l8294 2A3A  
                                      l7910 1F08                                        l8286 352A  
                                      l8278 34EE                                        l7662 3DA4  
                                      l9182 4398                                        l9174 4350  
                                      l7654 1598                                        l7646 157C  
                                      l7638 1538                                        l7590 13D2  
                                      l7582 1370                                        l7574 1352  
                                      l7566 131A                                        l7558 12D4  
                                      l7494 11B0                                        l7486 1180  
                                      l7478 1160                                        l9094 2624  
                                      l9086 25F8                                        l9078 25A4  
                                      l9190 4342                                        l7806 2EC4  
                                      l7830 310E                                        l7822 30C6  
                                      l7814 3074                                        l7398 4538  
                                      l7670 39C4                                        l8390 2218  
                                      l8382 21F2                                        l8374 21A8  
                                      l8366 2132                                        l7750 283C  
                                      l7742 2790                                        l7734 26D4  
                                      l7718 4048                                        l8710 0B66  
                                      l8702 0B26                                        l8630 08C2  
                                      l8622 089C                                        l8614 0874  
                                      l8606 0838                                        l8550 04C6  
                                      l8534 042E                                        l8542 048C  
                                      l8518 03BE                                        l8526 040A  
                                      l8470 016E                                        l8454 00C2  
                                      l8446 0098                                        l8438 0066  
                                      l9166 3C64                                        l9158 3BF8  
                                      l8296 2A80                                        l7920 1F52  
                                      l7912 1F18                                        l7904 1ECE  
                                      l9176 4356                                        l7760 456E  
                                      l7656 15A6                                        l7648 158A  
                                      l7592 13E2                                        l7576 1356  
                                      l7568 132A                                        l7584 1376  
                                      l7496 11C0                                        l7488 118E  
                                      l9096 2634                                        l9088 2608  
                                      l9192 434A                                        l9184 4302  
                                      l7840 3184                                        l7832 313C  
                                      l7824 30E4                                        l7816 3094  
                                      l7680 3A0A                                        l7672 39D2  
                                      l8392 221E                                        l8384 2200  
                                      l8376 21AA                                        l8368 2152  
                                      l7752 284C                                        l7736 26E2  
                                      l7744 27C4                                        l7728 2648  
                                      l8720 0BA2                                        l8712 0B78  
                                      l8704 0B2C                                        l8624 08A8  
                                      l8616 0882                                        l8632 08C8  
                                      l8640 08F6                                        l8608 084A  
                                      l8560 0514                                        l8552 04CA  
                                      l8544 0494                                        l8536 044A  
                                      l8472 0178                                        l8464 0128  
                                      l8456 00C6                                        l8448 00AA  
                                      l8800 0C30                                        l8298 2A96  
                                      l7930 1FA0                                        l7922 1F5E  
                                      l7914 1F20                                        l7906 1EE8  
                                      l7850 1DB2                                        l9178 436C  
                                      l7762 458A                                        l7658 15A8  
                                      l7586 139C                                        l7594 13F2  
                                      l7578 1364                                        l7498 11C2  
                                      l9098 45DA                                        l9186 4338  
                                      l8730 2BE6                                        l7770 2D70  
                                      l7842 31A4                                        l7834 315C  
                                      l7826 30EC                                        l7818 3098  
                                      l7690 4442                                        l7682 3A36  
                                      l7674 39DE                                        l7666 39A2  
                                      l8394 22A0                                        l8386 2206  
                                      l8378 21C4                                        l7746 2800  
                                      l8714 0B84                                        l8706 0B32  
                                      l8650 09AC                                        l8642 094E  
                                      l8634 08DA                                        l8626 08B8  
                                      l8618 0892                                        l8570 05AC  
                                      l8554 04DC                                        l8562 051C  
                                      l8546 04A6                                        l8538 0480  
                                      l8482 01FC                                        l8466 013A  
                                      l8458 00CC                                        l8810 0CC4  
                                      l8802 0C38                                        l8900 3E56  
                                      l7932 1FB6                                        l7940 1FE6  
                                      l7924 1F7C                                        l7916 1F30  
                                      l7908 1EF8                                        l7860 1DE6  
                                      l7852 1DB4                                        l7596 1418  
                                      l7588 13D0                                        l9188 433C  
                                      l7756 44A0                                        l8732 2BEA  
                                      l7780 2DC6                                        l7772 2D90  
                                      l7836 316E                                        l7828 3100  
                                      l7684 3A4A                                        l7676 39F2  
                                      l7668 39B0                                        l8396 22A6  
                                      l8388 220E                                        l7692 3640  
                                      l7748 2814                                        l8716 0B8C  
                                      l8660 09FC                                        l8652 09C8  
                                      l8644 0982                                        l8636 08EC  
                                      l8628 08BC                                        l8580 0690  
                                      l8572 0604                                        l8564 0524  
                                      l8556 04EA                                        l8548 04B8  
                                      l8484 020E                                        l8468 0156  
                                      l8476 01A0                                        l8820 0D4E  
                                      l8812 0CD2                                        l8804 0C46  
                                      l8910 3E82                                        l8902 3E5C  
                                      l7942 1FF4                                        l7934 1FBC  
                                      l7926 1F7E                                        l7918 1F44  
                                      l7870 1E18                                        l7854 1DC4  
                                      l7862 1DEE                                        l7846 1D96  
                                      l7598 1428                                        l8750 2CA0  
                                      l8742 2C46                                        l8734 2C06  
                                      l8726 2BCE                                        l7790 2E1A  
                                      l7782 2DD2                                        l7774 2D94  
                                      l7766 2D5E                                        l7838 3174  
                                      l7678 3A06                                        l8398 22AC  
                                      l7694 3660                                        l8718 0B9C  
                                      l8670 0A3E                                        l8662 0A0C  
                                      l8654 09DA                                        l8646 098A  
                                      l8638 08F0                                        l8590 072A  
                                      l8582 06C2                                        l8574 0638  
                                      l8566 0534                                        l8558 0502  
                                      l8486 022A                                        l8478 01C6  
                                      l8494 0246                                        l8830 0DF6  
                                      l8822 0D5E                                        l8806 0C6A  
                                      l8904 3E72                                        l8920 3204  
                                      l8912 31C8                                        l7952 205E  
                                      l7960 20A6                                        l7944 1FF8  
                                      l7936 1FC6                                        l7928 1F8E  
                                      l7880 1E4C                                        l7872 1E1A  
                                      l7864 1DFE                                        l7856 1DD4  
                                      l7848 1DA4                                        l8760 2D26  
                                      l8744 2C5C                                        l8736 2C3C  
                                      l8728 2BE2                                        l7792 2E2C  
                                      l7784 2DF0                                        l7776 2DA2  
                                      l7768 2D62                                        l7688 4428  
                                      l7696 369E                                        l8680 0A6E  
                                      l8672 0A4C                                        l8664 0A1E  
                                      l8656 09E8                                        l8648 098E  
                                      l8592 075E                                        l8584 06D8  
                                      l8568 0548                                        l8576 063E  
                                      l8496 0260                                        l8840 0EAC  
                                      l8832 0E1A                                        l8824 0D90  
                                      l8816 0D1A                                        l8808 0CA4  
                                      l8906 3E7A                                        l8930 32B8  
                                      l8922 3234                                        l8914 31D8  
                                      l7970 2110                                        l7962 20C0  
                                      l7954 206A                                        l7946 2006  
                                      l7938 1FD4                                        l7890 1E92  
                                      l7874 1E2A                                        l7882 1E54  
                                      l7866 1E04                                        l7858 1DE4  
                                      l8762 2D38                                        l8754 2CD6  
                                      l8746 2C64                                        l8738 2C40  
                                      l7794 2E5A                                        l7786 2DF8  
                                      l7778 2DC2                                        l7698 36C6  
                                      l8690 0AD0                                        l8682 0A94  
                                      l8674 0A54                                        l8666 0A26  
                                      l8658 09F8                                        l8594 076E  
                                      l8586 070A                                        l8578 065C  
                                      l8770 3768                                        l8842 0EC2  
                                      l8850 0F2C                                        l8834 0E62  
                                      l8826 0DA0                                        l8818 0D2C  
                                      l8908 3E7C                                        l8932 32CA  
                                      l8924 3264                                        l8916 31DA  
                                      l7972 211E                                        l7964 20D6  
                                      l7956 2078                                        l7948 2034  
                                      l7892 1E96                                        l7884 1E64  
                                      l7876 1E3A                                        l7868 1E0A  
                                      l8748 2C6C                                        l7796 2E7A  
                                      l7788 2E0C                                        l8692 0AEA  
                                      l8684 0AB0                                        l8676 0A5C  
                                      l8668 0A36                                        l8596 0782  
                                      l8588 071A                                        l8780 37B6  
                                      l8860 100E                                        l8852 0F5A  
                                      l8844 0ED0                                        l8828 0DD2  
                                      l9900 3A80                                        l8934 3304  
                                      l8918 31E0                                        l7974 2124  
                                      l7966 20F0                                        l7958 20A2  
                                      l7886 1E7A                                        l7878 1E4A  
                                      l7990 15D6                                        l8950 45BA  
                                      l8758 2D14                                        l7798 2E7C  
                                      l8694 0AF0                                        l8686 0AB8  
                                      l8678 0A68                                        l8598 078E  
                                      l8782 37C8                                        l8774 3774  
                                      l8870 1084                                        l8846 0F00  
                                      l8838 0E9A                                        l8790 0BC4  
                                      l9910 3A8A                                        l9902 3A82  
                                      l8936 3304                                        l8928 3276  
                                      l7976 2126                                        l7968 210C  
                                      l7888 1E8A                                        l7896 1EAA  
                                      l7992 15E6                                        l7984 15BA  
                                      l8960 454E                                        l8952 45C2  
                                      l8696 0B02                                        l8688 0ABE  
                                      l8784 37F0                                        l8776 3782  
                                      l8768 373E                                        l8872 1098  
                                      l8856 0FC8                                        l8792 0BE8  
                                      l9920 3A94                                        l9912 3A8C  
                                      l9904 3A84                                        l8890 3E1E  
                                      l8938 3316                                        l7898 1EBA  
                                      l7994 15F6                                        l7986 15C6  
                                      l8970 1A4E                                        l8962 4550  
                                      l8954 4546                                        l8946 45F4  
                                      l8698 0B0E                                        l8778 379A  
                                      l8858 0FDA                                        l8866 1052  
                                      l8794 0BF6                                        l8882 10C2  
                                      l9930 3AAC                                        l9922 3A96  
                                      l9914 3A8E                                        l9906 3A86  
                                      l8892 3E26                                        l7996 1606  
                                      l7988 15D4                                        l8788 4594  
                                      l8972 1A62                                        l8964 4552  
                                      l8956 454A                                        l8948 4608  
                                      l8884 10E6                                        l8868 1076  
                                      l8876 10A6                                        l8796 0C08  
                                      l9940 3AEA                                        l9932 3AC0  
                                      l9924 3A9C                                        l9916 3A90  
                                      l9908 3A88                                        l8894 3E38  
                                      l7998 160C                                        l8990 1CF0  
                                      l8982 1B18                                        l8974 1A9E  
                                      l8966 19E4                                        l8958 454C  
                                      l8878 10B4                                        l8798 0C0C  
                                      l9942 3AEE                                        l9934 3AD2  
                                      l9926 3AA2                                        l9918 3A92  
                                      STR_1 7F79                                        l8896 3E40  
                                      l8992 1D24                                        l8984 1BE6  
                                      l8976 1AC2                                        l8968 1A04  
                                      l9944 3AFA                                        l9936 3AE2  
                                      l9928 3AA8                                        STR_2 7F60  
                                      STR_3 7F1E                                        l8898 3E48  
                                      l8994 1D60                                        l8986 1C52  
                                      l8978 1AE0                                        l9946 3B00  
                                      l9938 3AE6                                        l9890 3A76  
                                      STR_4 7FA4                                        STR_5 7F91  
                                      l8996 1D84                                        l8988 1C84  
                                      l9948 3B08                                        l9892 3A78  
                                      l9884 3A64                                        STR_6 7FB6  
                                      STR_7 7FD2                                        l9894 3A7A  
                                      l9886 3A72                                        STR_8 7FC7  
                                      STR_9 7FDC                                        l9896 3A7C  
                                      l9888 3A74                                        l9898 3A7E  
                                      u8000 1280                                        u8001 127A  
                                      u8010 1282                                        u8100 139C  
                                      u8020 12AA                                        _RCIF 007CF5  
                                      u8101 1398                                        u8021 12A6  
                                      u8110 13E2                                        u8030 12C8  
                                      u8111 13DE                                        u8031 12C4  
                                      u9000 168E                                        u8200 14CE  
                                      u8120 1418                                        u8040 12E8  
                                      u9001 168A                                        u8201 14CA  
                                      u8121 1414                                        u8041 12E4  
                                      u9010 169E                                        u8210 14E2  
                                      u8130 1428                                        u8050 12F6  
                                      u9011 169A                                        u8211 14DE  
                                      u8131 1424                                        u8051 12F2  
                                      u9100 195E                                        u9020 1818  
                                      u8220 14FC                                        u8140 1454  
                                      u8060 1306                                        u8300 39D2  
                                      u9101 195A                                        u8221 14F8  
                                      u8141 1450                                        u8061 1302  
                                      u8301 39CE                                        u9110 198C  
                                      u9030 1872                                        u8230 1536  
                                      u8150 1464                                        u8070 1338  
                                      u8310 3A28                                        u9111 1988  
                                      u9031 186E                                        u8231 1532  
                                      u8151 1460                                        u8071 1334  
                                      u8311 3A24                                        u9120 19C6  
                                      u9040 1892                                        u8240 1548  
                                      u8160 1480                                        u8080 1346  
                                      u8320 3A36                                        u9200 3B40  
                                      u8400 372C                                        u9121 19C2  
                                      u9041 188E                                        u9025 180E  
                                      u8241 1544                                        u8161 147C  
                                      u8081 1342                                        u8321 3A32  
                                      u9201 3B3C                                        u9050 18A4  
                                      u8250 1558                                        u8170 1490  
                                      u8090 1364                                        u8330 4442  
                                      u9130 38F0                                        u9210 3B5A  
                                      u8410 414E                                        u9051 18A0  
                                      u8251 1554                                        u8171 148C  
                                      u8091 1360                                        u8331 443E  
                                      u9131 38EC                                        u9211 3B56  
                                      u9060 18D2                                        u9300 35C6  
                                      u8260 1578                                        u8180 14A2  
                                      u9140 390A                                        u9220 3B78  
                                      u8340 3680                                        u8500 2750  
                                      u8420 4160                                        u9061 18CE  
                                      u9301 35C2                                        u8261 1574  
                                      u8181 149E                                        u9141 3906  
                                      u9221 3B74                                        u8501 274C  
                                      u8421 415C                                        u9070 18E8  
                                      u9310 35E6                                        u8270 158A  
                                      u8190 14B8                                        u9150 3930  
                                      u9230 3B8E                                        u8350 369E  
                                      u8510 2774                                        u8430 4078  
                                      u9071 18E4                                        u9311 35E2  
                                      u8271 1586                                        u8191 14B4  
                                      u9151 392C                                        u9231 3B8A  
                                      u8351 369A                                        u8431 4072  
                                      u9080 18FC                                        u9400 351A  
                                      u9320 3636                                        u8280 15A6  
                                      u9160 394E                                        u9240 3BB2  
                                      u8360 36C6                                        u8520 2790  
                                      u7800 4498                                        u8440 407A  
                                      u9081 18F8                                        u9401 3516  
                                      u9321 3632                                        u8281 15A2  
                                      u8601 2DCC                                        u9161 394A  
                                      u9241 3BAE                                        u8361 36C2  
                                      u8345 3676                                        u8521 278C  
                                      u8417 4144                                        u7801 4492  
                                      u9410 2A2C                                        u9090 1916  
                                      u9330 44EE                                        u8610 2DF0  
                                      u8290 39B0                                        u9170 396A  
                                      u9250 3CA0                                        u8370 36F0  
                                      u8530 27E4                                        u7810 449A  
                                      u8450 4090                                        u9411 2A28  
                                      u9091 1912                                        u9331 44EA  
                                      u8611 2DEC                                        u8291 39AC  
                                      u9171 3966                                        u9251 3C9C  
                                      u8371 36EC                                        u8515 276A  
                                      u8451 408C                                        u9500 2BBA  
                                      u9420 2A3A                                        u9340 344C  
                                      u7820 3FFC                                        u7900 1114  
                                      u8620 2E1A                                        u8700 3184  
                                      u7740 3826                                        u9180 3990  
                                      u9260 3CDE                                        u8540 2800  
                                      u8460 2692                                        u9501 2BB6  
                                      u9421 2A36                                        u9341 3448  
                                      u7821 3FF8                                        u7901 1110  
                                      u8621 2E16                                        u8701 3180  
                                      u7741 3822                                        u9181 398C  
                                      u9261 3CDA                                        u8541 27FC  
                                      u9430 2A96                                        u8710 1DB2  
                                      u9350 3480                                        u7830 4036  
                                      u7910 1126                                        u9510 4278  
                                      u8630 2E5A                                        u7750 3838  
                                      u9190 3B26                                        u9270 3D12  
                                      u8390 372A                                        u8550 283C  
                                      u8470 26C0                                        u9431 2A92  
                                      u8711 1DAE                                        u7831 4032  
                                      u7911 1122                                        u9511 4274  
                                      u8631 2E56                                        u7751 3834  
                                      u9191 3B22                                        u9271 3D0E  
                                      u8391 3724                                        u8551 2838  
                                      u8535 27DA                                        u8471 26BC  
                                      u7840 333A                                        u9440 2AEC  
                                      u8800 1F52                                        u8720 1DC4  
                                      u9360 34AE                                        u9280 356A  
                                      u7920 1136                                        u8560 44D0  
                                      u9520 42A6                                        u8640 2EA4  
                                      u7760 3860                                        u9600 21C4  
                                      u8480 26E2                                        u7841 3336  
                                      u9441 2AE8                                        u8801 1F4E  
                                      u8721 1DC0                                        u9361 34AA  
                                      u9281 3566                                        u7921 1132  
                                      u8561 44CA                                        u9521 42A2  
                                      u8641 2EA0                                        u7761 385C  
                                      u9601 21C0                                        u8385 3702  
                                      u8481 26DE                                        u8465 2688  
                                      u7850 335C                                        u9450 2B36  
                                      u8810 1F7C                                        u8730 1DD4  
                                      u9370 34C2                                        u9530 28DE  
                                      u9290 35A8                                        u7930 1178  
                                      u8570 44D2                                        u8650 3074  
                                      u7770 3896                                        u9610 21F2  
                                      u7851 3358                                        u9451 2B32  
                                      u8811 1F78                                        u8731 1DD0  
                                      u9371 34BE                                        u9355 3476  
                                      u9531 28DA                                        u9291 35A4  
                                      u7931 1174                                        u8651 3070  
                                      u7771 3892                                        u9611 21EE  
                                      u7860 3396                                        u9460 2B54  
                                      u8900 2078                                        u8820 1FA0  
                                      u8740 1E18                                        u9380 34EA  
                                      u7940 118E                                        u8580 2D70  
                                      u8660 30A6                                        u7780 4426  
                                      u9700 23C2                                        u9620 2200  
                                      u7861 3392                                        u9461 2B50  
                                      u8901 2074                                        u8821 1F9C  
                                      u8741 1E14                                        u9381 34E6  
                                      u7941 118A                                        u8581 2D6C  
                                      u8661 30A2                                        u7781 4422  
                                      u9701 23BE                                        u9621 21FC  
                                      u7870 33B8                                        u9470 2B64  
                                      u8910 20C0                                        u8830 1FB6  
                                      u8750 1E2A                                        u9390 350A  
                                      u7950 11A0                                        u8590 2DA2  
                                      u8670 30E4                                        u7790 4538  
                                      u9630 232A                                        u9710 003A  
                                      u7871 33B4                                        u9471 2B60  
                                      u8911 20BC                                        u8831 1FB2  
                                      u8751 1E26                                        u9391 3506  
                                      u7951 119C                                        u8591 2D9E  
                                      u8671 30E0                                        u7791 4534  
                                      u9631 2326                                        u8495 26F6  
                                      u9711 0036                                        u7880 33E0  
                                      u9480 2B72                                        u8920 20F0  
                                      u8840 1FD4                                        u8760 1E3A  
                                      u7960 11B0                                        u8680 310E  
                                      u9640 2348                                        u9560 2162  
                                      u8496 2700                                        u9800 01F6  
                                      u9720 008A                                        u7881 33DC  
                                      u9481 2B6E                                        u8921 20EC  
                                      u8841 1FD0                                        u8761 1E36  
                                      u9545 2978                                        u7961 11AC  
                                      u8681 310A                                        u9641 2344  
                                      u9561 215C                                        u8497 2710  
                                      u9801 01F0                                        u9721 0086  
                                      u7890 3412                                        u9490 2BAC  
                                      u8930 211E                                        u8850 1FF4  
                                      u8770 1E7A                                        u9546 2982  
                                      u7970 11EC                                        u8690 313C  
                                      u9650 2362                                        u9570 2164  
                                      u9810 01F8                                        u9730 0098  
                                      u7891 340E                                        u9491 2BA8  
                                      u8931 211A                                        u8851 1FF0  
                                      u8771 1E76                                        u9555 29BC  
                                      u9547 2992                                        u7971 11E8  
                                      u8691 3138                                        u9651 235E  
                                      u9731 0094                                        u8860 2006  
                                      u8780 1EBA                                        u8940 15D4  
                                      u9556 29C6                                        u7980 11FA  
                                      u9660 237C                                        u9580 217A  
                                      u9900 042E                                        u9820 020E  
                                      u9740 00AA                                        u8861 2002  
                                      u8781 1EB6                                        u8941 15D0  
                                      u9557 29D6                                        u7981 11F6  
                                      u9661 2378                                        u9581 2176  
                                      u9901 042A                                        u9821 020A  
                                      u9741 00A6                                        u8870 2034  
                                      u8790 1F30                                        u8950 15E6  
                                      u7990 1268                                        u9670 238A  
                                      u9590 21A8                                        u9910 044A  
                                      u9830 0292                                        u9750 00F2  
                                      u8871 2030                                        u8791 1F2C  
                                      u8951 15E2                                        u7991 1264  
                                      u9671 2386                                        u9591 21A4  
                                      u9911 0446                                        u9831 028E  
                                      u9751 00EE                                        u8880 204A  
                                      u8960 15F6                                        u9680 239C  
                                      u9920 0480                                        u9840 0326  
                                      u9760 0122                                        u8881 2046  
                                      u8961 15F2                                        u9681 2398  
                                      u9921 047C                                        u9841 0322  
                                      u9761 011C                                        u8890 205E  
                                      u8970 1636                                        u9690 23AA  
                                      u9930 04A6                                        u9850 0398  
                                      u9770 0124                                        u8891 205A  
                                      u8971 1632                                        u9691 23A6  
                                      u9931 04A2                                        u9851 0394  
                                      u8980 1648                                        u9940 04B8  
                                      u9860 03BE                                        u9780 013A  
                                      u8981 1644                                        u9941 04B4  
                                      u9861 03BA                                        u9781 0136  
                                      u8990 1658                                        u9950 04C6  
                                      u9870 03D0                                        u9790 01C6  
                                      u8991 1654                                        u9951 04C2  
                                      u9871 03CC                                        u9791 01C2  
                                      u9960 04DC                                        u9880 03F2  
                                      u9961 04D8                                        u9881 03EE  
                                      u9970 04EA                                        u9890 0418  
                                      u9971 04E6                                        u9891 0414  
                                      u9980 0514                                        u9981 0510  
                                      u9990 065C                                        u9991 0658  
      comportamientoBasico@caminoEncontrado 0136                            ??_forzarParoAuto 0006  
                                      abs@a 0018                                        _dbuf 013E  
                                      _atoi 2BCE                                        _main 3A64  
                                      _dtoa 2132                                        _prec 0054  
                                      _nout 0130                                        pad@i 001D  
                                      pad@p 001A                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      pad@w 001F                                        map@x 0020  
                                      fsr2l 000FD9                                        btemp 0059  
                             ___fpclassifyf 3640                                        prodh 000FF4  
                                      prodl 000FF3                                        start 000E  
                             __CFG_IESO$OFF 000000                             ___fldiv@new_exp 0065  
                              _tolower$1540 0012                               __CFG_MCLRE$ON 000000  
                             ?_leerSensores 0001                                ___param_bank 000000  
                                     ??_PID 0088                                       ??_abs 001A  
                                     ??_map 0034                                       ??_pad 001C  
                             __CFG_PLLDIV$1 000000                              __CFG_CCP2MX$ON 000000  
                                     l10110 3C20                                       l10120 42E8  
                                     l10112 2C8A                                       l10114 3D7C  
                                     l10116 2A02                                       l10118 328A  
                             ___fltol@sign1 007A                             __end_of___aldiv 3434  
                           __end_of___aodiv 2EE6                                       ?_atoi 000D  
                           __end_of___fladd 15BA                                       ?_main 0001  
                                     ?_dtoa 0021                             __end_of___aomod 31C6  
                           __end_of___fldiv 2132                             __end_of___awdiv 39A2  
                           __end_of___flneg 4510                                       STR_10 7FE5  
                                     STR_11 7F40                                       STR_12 7EE6  
                                     STR_13 7EA7                                       STR_22 7FFB  
                                     STR_14 7FEB                                       STR_15 7FF3  
                                     STR_24 7FFB                                       STR_18 7FEF  
                                     STR_19 7FF7                             __end_of___awmod 3BC4  
                           __end_of___flmul 19E4                             __end_of___flsub 43E4  
                           __end_of___fltol 353C                                       u10000 06C2  
                                     u10001 06BE                                       u10010 070A  
                                     u10011 0706                                       u10100 08DA  
                                     u10020 071A                                       u10101 08D6  
                                     u10021 0716                                       u10110 09AC  
                                     u10030 0782                                       u10111 09A8  
                                     u10031 077E                                       u10200 0B60  
                                     u10120 09C8                                       u10040 0824  
                                     u10201 0B5A                                       u10121 09C4  
                                     u10041 0820                                       u10210 0B62  
                                     u10130 09DA                                       u10050 0838  
                                     u10131 09D6                                       u10051 0834  
                                     u10220 0B78                                       u10140 09E8  
                                     u10060 084A                                       u10300 3768  
                                     u10221 0B74                                       u10141 09E4  
                                     u10061 0846                                       u10301 3764  
                                     u10230 2C06                                       u10150 0A1E  
                                     u10070 0858                                       u10310 379A  
                                     u10231 2C02                                       u10151 0A1A  
                                     u10071 0854                                       u10311 3796  
                                     u10240 2C3C                                       u10160 0A4C  
                                     u10080 0874                                       u10320 37B6  
                                     u10400 0D2C                                       u10241 2C38  
                                     u10161 0A48                                       u10081 0870  
                                     u10321 37B2                                       u10401 0D28  
                                     u10250 2C58                                       u10170 0AD0  
                                     u10090 0882                                       u10330 37C8  
                                     u10410 0D5E                                       u10251 2C54  
                                     u10171 0ACC                                       u10091 087E  
                                     u10331 37C4                                       u10411 0D5A  
                                     u10260 2D0E                                       u10180 0AEA  
                                     u10340 37F0                                       u10500 1076  
                                     u10420 0DA0                                       u10261 2D08  
                                     u10181 0AE6                                       u10341 37EC  
                                     u10501 1072                                       u10421 0D9C  
                                     u10510 3E38                                       u10270 2D10  
                                     u10190 0B02                                       u10430 0DF6  
                                     u10350 0BE8                                       u10511 3E34  
                                     u10191 0AFE                                       u10431 0DF2  
                                     u10351 0BE4                                       u10520 3E56  
                                     u10600 3254                                       u10280 2D26  
                                     u10440 0E1A                                       u10360 0C30  
                                     u10521 3E52                                       u10601 3250  
                                     u10281 2D22                                       u10441 0E16  
                                     u10361 0C2C                                       u10530 3E72  
                                     u10610 3264                                       u10290 2D38  
                                     u10450 0EAC                                       u10370 0C6A  
                                     u10531 3E6E                                       u10611 3260  
                                     u10291 2D34                                       u10451 0EA8  
                                     u10371 0C66                                       u10620 3272  
                                     u10540 31F4                                       u10700 1BE6  
                                     u10460 0F5A                                       u10380 0D14  
                                     u11500 3AE2                             ___awdiv@divisor 0008  
                                     u10621 326E                                       u10541 31F0  
                                     u10701 1BE2                                       u10461 0F56  
                                     u10381 0D0E                                       u11501 3ADE  
                                     u10630 32B8                                       u10550 3204  
                                     u10710 1C84                                       u10470 0FC2  
                                     u10390 0D16                                       u10631 32B4  
                                     u10551 3200                                       u10711 1C80  
                                     u10471 0FBC                                       u10560 3212  
                                     u10720 1D44                                       u10800 25D0  
                                     u10640 4606                                       u10480 0FC4  
                                     _T1CON 000FCD                                       u10561 320E  
                                     u10801 25CC                                       u10641 4602  
                                     u10570 3224                                       u10730 1D60  
                                     u10650 1A24                                       u10810 25F8  
                                     u10490 0FDA                                       u10571 3220  
                                     u10731 1D5C                                       u10811 25F4  
                                     u10491 0FD6                                       u10580 3234  
                                     u10660 1A4E                                       u10820 4338  
                                     u10740 3FD4                                       u10581 3230  
                                     u10725 1D3A                                       u10661 1A4A  
                                     u11517 3D3E                                       u10821 4334  
                                     u10741 3FD0                                       u10590 3242  
                                     u10670 1A82                                       u10750 40CC  
                                     u10591 323E                                       u10655 1A1A  
                                     u11527 45CC                                       u10680 1A9E  
                                     u10760 40F4                                       u10681 1A9A  
                                     u11537 455E                                       u10690 1AE0  
                                     u10770 4104                                       u11490 3AD2  
                                     u11547 31DC                                       u10691 1ADC  
                                     u10675 1A78                                       u10771 4100  
                                     u11491 3ACE                                       u10780 255C  
                                     u10781 2558                                       u10757 40C2  
                                     u10790 2588                                       u10791 2584  
                                     u10767 40EA                                       _LATB4 007C54  
                                     _LATB5 007C55                                       _LATD2 007C62  
                                     _LATB6 007C56                                       _LATD3 007C63  
                                     _LATB7 007C57                             __end_of___lwdiv 3E92  
                                     i2l322 41B8                                       i2l314 4168  
                                     i2l317 4176                                       i2l280 420A  
                                     i2l278 4202                                main@iniciado 01CF  
                           ___awdiv@counter 000A                                       _RCREG 000FAE  
                              vfpfcnvrt@fmt 00C3                                       _TMR1H 000FCF  
                                     _TMR1L 000FCE                                       _SPBRG 000FAF  
                             __CFG_USBDIV$1 000000                                       _TXREG 000FAD  
                             __CFG_PWRT$OFF 000000                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                       ___lmul@multiplicand 000A                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                            __CFG_EBTRB$OFF 000000                          __size_of_UART_init 0070  
                                     _flags 0056                                       _boton 0008  
                                     _fputc 3814                                       _fputs 43E4  
                           __end_of_isdigit 44D8                                       _pausa 01D0  
                                     _mover 3D1C                                       _mouse 00F9  
                               ?_UART_write 0001                                       atoi@n 001A  
                                     pad@fp 0016                                       atoi@s 000D  
                                     _width 0132                                       _putch 4620  
                                     _toint 7EA3                                       dtoa@d 0023  
                                     dtoa@i 0043                                       dtoa@n 003B  
                                     dtoa@p 0035                                       dtoa@s 0039  
                                     dtoa@w 0037                             __end_of_isspace 42B2  
                           __end_of_isupper 44A0                                       tablat 000FF5  
                           __end_of_pwmDuty 2A1A                                       ttemp5 005A  
                                     ttemp6 005D                                       ttemp7 0061  
                                     status 000FD8                                       wtemp8 005A  
                           __end_of_sprintf 4260                              ?___fpclassifyf 0006  
                           __end_of_tolower 40A8                             __end_of_strncmp 3814  
                            __CFG_ICPRT$OFF 000000                              ??_leerSensores 0050  
                           __initialization 3E92                                __end_of_atoi 2D5E  
                              __end_of_main 3B14                                __end_of_dtoa 2410  
                           ??_configurarAdc 0006                         dameDistancia@conteo 0026  
                    dameDistancia@distancia 0022                                      ??_atoi 000F  
                                    ??_main 0054                                      ??_dtoa 002B  
       comportamientoBasico@caminosRecorrer 01C0                               __activetblptr 000002  
                                    PID@dif 0096                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                                      ?_boton 0001  
                                    _CCP1M2 007DEA                                      _CCP1M3 007DEB  
                                    _CCP2M2 007DD2                                      _CCP2M3 007DD3  
                                    ?_fputc 0006                                      ?_fputs 000F  
                                    _ADRESH 000FC4                                      _ADRESL 000FC3  
                                    _CCPR1L 000FBE                                      _CCPR2L 000FBB  
                          ___awdiv@dividend 0006                                      ?_mover 0001  
                                    ?_putch 0001                                      _INT0IF 007F91  
                                    i2l6410 41D0                                      i2l6340 4184  
                                    i2l6420 4208                                      i2l6412 41E2  
                                    i2l6414 41E6                                      i2l6406 41BC  
                                    i2l6344 4196                                      i2l6416 41E8  
                                    i2l6408 41CA                                      i2l6338 4164  
                                    i2l6418 4204                                      _TMR1IF 007CF0  
                                    _TMR1ON 007E68                                      _TMR2ON 007E52  
                                    _TRISB0 007C98                                      _TRISB1 007C99  
                                    _TRISB2 007C9A                                      _TRISC1 007CA1  
                                    _TRISB3 007C9B                                      _TRISC2 007CA2  
                                    _TRISB4 007C9C                                      _TRISB5 007C9D  
                                    _TRISB6 007C9E                                      _TRISD3 007CAB  
                                    _TRISB7 007C9F                                      _TRISC6 007CA6  
                                    _TRISC7 007CA7                            __end_of___xxtofl 2BCE  
                            __CFG_XINST$OFF 000000          comportamientoBasico@numMovimientos 01C3  
                              vfprintf@cfmt 00E5                   dameDistancia@numeroSensor 0021  
                                    ___flge 353C                                      ___fleq 3C72  
                                    ___lmul 3FDE                                   ??___aldiv 001A  
                                 ??___aodiv 0016                                   ??___fladd 003C  
                                 ??___aomod 0016                                      ___wmul 456E  
                         __end_of_UART_init 3F74                                   ??___fldiv 004C  
                                 ??___awdiv 000A                                   ??___flneg 000A  
        comportamientoBasico@espejearCarroY 0139                                   ??___awmod 000A  
                                 ??___flmul 0023                                   ??___flsub 004C  
                                 ??___fltol 0076                                      _efgtoa 0012  
                                 ??___lwdiv 000A                                      _buffer 018E  
                                    _floorf 2648                         __size_of_UART_write 0016  
                              ?_UART_printf 0007                                      clear_0 3EBA  
                                    clear_1 3ECC                                      clear_2 3ED8  
                          ___awdiv@quotient 000C                             ___awmod@divisor 0008  
                           ___awmod@counter 000A                                      pad@buf 0018  
                                    _roundf 19E4                                      dtoa@fp 0021  
                                    _strcpy 4106                 ??_visualizarPasosRealizados 01CB  
                                    _strlen 4510                           _oldSensorEnfrente 0118  
                                    fputc@c 0006                                      fputs@c 0013  
                                    fputs@i 0014                                      fputs@s 000F  
                                 ??_isdigit 0008                       _SENSOR_PRIORIDAD_BAJA 01D1  
                     _SENSOR_PRIORIDAD_ALTA 01D3                             ___fpclassifyf@e 000E  
                           ___fpclassifyf@u 0010                             ___fpclassifyf@x 0006  
                              __mediumconst 7EA2                                   ??_isspace 0008  
                                    tblptrh 000FF7                                   ??_isupper 0008  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                 ??_pwmDuty 007F                                      putch@c 0001  
                          __end_of_vfprintf 3FDE                            _posicionDestinoX 013B  
                          _posicionDestinoY 013A                                   ??_sprintf 0054  
                                 ??_tolower 000E                                   ??_strncmp 000C  
                    __size_of_forzarReversa 0020                                  ___flge@ff1 0034  
                         _velocidadEstandar 4594                                  ___flge@ff2 0038  
                           ??___fpclassifyf 000A                                ___xxtofl@arg 0017  
                              ___xxtofl@exp 0016                                ___xxtofl@val 000D  
                                ___fleq@ff1 0006                                  ___fleq@ff2 000A  
                                __accesstop 0060                     __end_of__initialization 3EF6  
                           __CFG_PBADEN$OFF 000000                                  ___flneg@f1 0006  
                           __CFG_FOSC$XT_XT 000000                          ?_velocidadEstandar 0001  
   visualizarPasosRealizados@numMovimientos 01C9                  __end_of_finalizarRecorrido 45F2  
                             ___rparam_used 000001                                  ___fltol@f1 0072  
                    __size_of_dameDistancia 0162                              __pcstackCOMRAM 0001  
                       ??_velocidadEstandar 0054                                __pidataBANK1 461C  
                           _sensorIzquierda 0128                               __end_of_boton 420E  
                             __end_of_fputc 38DE                               __end_of_fputs 4428  
                             __end_of_mover 3DA4                               __end_of_putch 4622  
                             __end_of_toint 7EA7   comportamientoBasico@numMovimientosTotales 00FB  
 comportamientoBasico@movimientosRealizados 0200                        __end_of_leerSensores 3062  
                        __size_of_configPwm 0050                                   PID@difAnt 0134  
                 __end_of_velocidadEstandar 45BA                                     ??_boton 0004  
                                   ??_fputc 000A                                     ??_fputs 0013  
                                   ??_mover 0006                                     ??_putch 0006  
                                __pbssBANK0 00F9                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                   _visualizarPasosRealizados 3BC4  
                     PID@velocidadIzquierda 008E                                  _efgtoa$912 0091  
                                _efgtoa$907 008D                                  _efgtoa$916 0093  
                                _efgtoa$908 008F                                  _efgtoa$917 0095  
                                _efgtoa$918 0097                                     ?___flge 0034  
                                   ?___fleq 0006                                     ?___lmul 0006  
                                   ?___wmul 0006                           _forzarEspejeoAuto 4546  
                                   ?_efgtoa 007D                               _forzarReversa 45BA  
                                   _CCP1CON 000FBD                                     _CCP2CON 000FBA  
                                   ?_floorf 0050                              ___lmul@product 000E  
                                _antiRebote 4162                          ?_forzarEspejeoAuto 0001  
                                   ?_roundf 004C                                     ?_strcpy 0006  
                                   ?_strlen 0006                                     _T2CKPS0 007E50  
                                   _T2CKPS1 007E51                                     _PID$736 0090  
                                   _PID$738 0094                          __size_of_probarPID 004E  
                                   i2l10122 41AA                                   ?___xxtofl 000D  
                       ??_forzarEspejeoAuto 0088                               _dameDistancia 31C6  
                        __size_of_vfpfcnvrt 0536                                ??_UART_write 0006  
                           __CFG_VREGEN$OFF 000000   comportamientoBasico@contCaminosRecorridos 01C7  
                                   __Hparam 0000                                     __Lparam 0000  
                 __end_of_forzarEspejeoAuto 456E                           __end_of_configPwm 4302  
                                   ___aldiv 3328                             __size_of___flge 0104  
                            ?_forzarReversa 0001                             __size_of___fleq 00AA  
                                   ___aodiv 2D5E                                     ___fladd 10FA  
                                   ___aomod 3062                                     ___fldiv 1D96  
                                   ___awdiv 38DE                                     ___flneg 44D8  
                           __size_of___lmul 006A                                     ___awmod 3B14  
                                   ___flmul 15BA                                     ___flsub 439E  
                                   ___fltol 3434                             __size_of___wmul 0026  
                                   ___lwdiv 3E1E                                   ?_vfprintf 00DF  
                           __size_of_efgtoa 0BB2                             __CFG_STVREN$OFF 000000  
                           __size_of_floorf 0216                                     __pcinit 3E92  
                                   __ramtop 0800                          __end_of_UART_write 4608  
                                   __ptext0 3A64                                     __ptext1 3BC4  
                                   __ptext2 420E                                     __ptext3 3F74  
                                   __ptext4 0BC4                                     __ptext5 373E  
                                   __ptext6 0012                                     __ptext7 4048  
                                   __ptext8 4468                                     __ptext9 4106  
                           __size_of_roundf 03B2                                __size_of_PID 0238  
                           __size_of_strcpy 005C                             __size_of_strlen 0036  
                      __size_of_UART_printf 005E                                __size_of_abs 0040  
                              __size_of_map 007A                                __size_of_pad 00C2  
                                   _isdigit 44A0                                  ??___xxtofl 0011  
                          ___awmod@dividend 0006                              ?_dameDistancia 001B  
                          ___aldiv@dividend 0012                                     _isspace 4260  
                                   _isupper 4468                                     efgtoa@c 0083  
                                   efgtoa@d 00A1                                     efgtoa@e 00B9  
                                   efgtoa@f 007F                                     efgtoa@g 00B5  
                                   efgtoa@h 00AB                                     efgtoa@i 00B3  
                                   efgtoa@l 00AF                                     efgtoa@m 009D  
                                   efgtoa@n 00BB                                     efgtoa@p 00A5  
                                   efgtoa@t 0099                                     efgtoa@u 00BD  
                                   efgtoa@w 00A8                                     _pwmDuty 285E  
                                   atoi@neg 0013                  __size_of_velocidadEstandar 0026  
                                   _sprintf 420E                                     _tolower 4048  
                                   _strncmp 373E                              __pintcode_body 41BA  
                      end_of_initialization 3EF6                                     floorf@e 0077  
                                   floorf@m 0073                                     floorf@u 0079  
                                   floorf@x 0050                                     fputc@fp 0008  
                             __Lmediumconst 7EA2                                     int_func 41BA  
                                   fputs@fp 0011                                   i2u1155_47 41F2  
                                 i2u1156_47 418A                      _SENSOR_PRIORIDAD_MEDIA 01D2  
                         __end_of_probarPID 4350                           __end_of_vfpfcnvrt 10FA  
                                efgtoa@mode 00AA                                  efgtoa@sign 00A3  
                                 _RCSTAbits 000FAB                            ___aldiv@quotient 001C  
                                   postdec1 000FE5                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                     __size_of_forzarParoAuto 000A  
                                   roundf@e 0064                                     roundf@u 006A  
                                   roundf@x 004C                                     roundf@y 006E  
                                ??_vfprintf 0054                       __end_of_configurarAdc 461C  
                                   strcpy@d 000E                                     strlen@a 0008  
                                   strcpy@s 000C                                     strlen@s 0006  
                               ?_antiRebote 0001                                   _PORTBbits 000F81  
                                 _UART_init 3F04                       __size_of_leerSensores 017C  
                               ___fladd@grs 0043                                 pwmDuty@duty 0084  
                             ___xxtofl@sign 0015                                   _TRISDbits 000F95  
                               ___fldiv@grs 0067                          _oldSensorIzquierda 011C  
                               ___fldiv@rem 0060        comportamientoBasico@posicionInvCruce 01C8  
                                map@out_max 0030                                  map@out_min 002C  
                               ___flmul@grs 0029                              _UART_init$1787 0028  
                                 _TXSTAbits 000FAC                             ??_forzarReversa 0006  
                __size_of_forzarEspejeoAuto 0028                                _leerSensores 2EE6  
        __size_of_visualizarPasosRealizados 00AE                              __end_of___flge 3640  
                            __end_of___fleq 3D1C                              __end_of___lmul 4048  
                               vfpfcnvrt@ap 00C5                                 vfpfcnvrt@ct 00DB  
                               vfpfcnvrt@fp 00C1                                 vfpfcnvrt@ll 00CB  
                            __end_of___wmul 4594                              __end_of_efgtoa 0BC4  
                        _finalizarRecorrido 45DA                              __end_of_floorf 285E  
                                ?_UART_init 0020                                  floorf@F524 0104  
                           ??_dameDistancia 001F       comportamientoBasico@investigandoCruce 00FD  
                            __end_of_roundf 1D96                              __end_of_strcpy 4162  
                            __end_of_strlen 4546                         start_initialization 3E92  
                       PID@velocidadDerecha 0092                                 __end_of_PID 2648  
                       ?_finalizarRecorrido 0001                                 __end_of_abs 4468  
                               __end_of_map 3E1E                                 __end_of_pad 3A64  
                       __size_of_antiRebote 0058                       __end_of___fpclassifyf 373E  
                       pwmDuty@cicloTrabajo 007C                        ??_finalizarRecorrido 0054  
                               vfprintf@fmt 00E1                                    ??___flge 003C  
                                  ??___fleq 000E                                    ??___lmul 000E  
                                  ??___wmul 000A                            _oldSensorDerecha 0120  
                comportamientoBasico@mapear 0138                              _sensorEnfrente 0124  
                                  ??_efgtoa 0084                                 __pdataBANK1 01D0  
                                  ??_floorf 006D                            __CFG_LPT1OSC$OFF 000000  
         __end_of_visualizarPasosRealizados 3C72                                    ??_roundf 0050  
                                  ??_strcpy 000A                                    ??_strlen 0008  
                                 ___fladd@a 0038                                   ___fladd@b 0034  
                                 ___fldiv@a 0048                                   ___fldiv@b 0044  
                               __pbssBIGRAM 02C8                                _llegoDestino 0058  
                                 ___flmul@a 001F                                   ___flmul@b 001B  
                               __pbssCOMRAM 0054                                   ___flsub@a 0048  
                                 ___flsub@b 0044            comportamientoBasico@caminoActual 01C6  
                             __pcstackBANK0 0060                               __pcstackBANK1 01C9  
                          ___aodiv@dividend 0006                           __size_of___xxtofl 01B4  
                         UART_printf@cadena 0007                                    PID@error 0098  
                                 _atoi$1410 0015                                   _atoi$1411 0019  
                                 _atoi$1412 0017                   _DISTANCIA_PRIORIDAD_MEDIA 0110  
                          ___lwdiv@dividend 0006                                   __pintcode 0008  
                             __pmediumconst 7EA2                              _forzarParoAuto 4608  
                                  ?___aldiv 0012                                    ?___aodiv 0006  
                                  ?___fladd 0034                                    ?___aomod 0006  
                                  ?___fldiv 0044                                    ?___awdiv 0006  
                          ___aodiv@quotient 0018                                    ?___flneg 0006  
                                  ?___awmod 0006                                    ?___flmul 001B  
                                  ?___flsub 0044                                    ?___fltol 0072  
                                  ?___lwdiv 0006                                   _configPwm 42B2  
                               ??_UART_init 0024                           __size_of_vfprintf 006A  
                                  ?_isdigit 0006                                    ?_isspace 0006  
                                  ?_isupper 0006  comportamientoBasico@cambioOrientacionCarro 01C5  
                                  ?_pwmDuty 007C                            ___lwdiv@quotient 000B  
                            __size_of_boton 4206                                    ?_sprintf 00E7  
                                  ?_tolower 000C                              __size_of_fputc 00CA  
                            __size_of_fputs 0044                                    _PID$1788 008A  
                                  ?_strncmp 0006                              __size_of_mover 0088  
                            __size_of_putch 0002                             ___aldiv@divisor 0016  
                           ___aldiv@counter 001A                              ___wmul@product 000A  
                    __end_of_forzarParoAuto 4612                                    i2u701_40 41CA  
                                  i2u701_41 41C6                                    i2u702_40 41E2  
                                  i2u702_41 41DE                                    i2u697_40 4176  
                                  i2u697_41 4172                                    i2u698_40 4184  
                                  i2u698_41 4180                            __CFG_WDTPS$32768 000000  
                                 _probarPID 4302                               ??_UART_printf 0009  
                              ??_antiRebote 0001                                   _vfpfcnvrt 0BC4  
                                ?_configPwm 0001                                   map@in_max 0028  
                                 map@in_min 0024                                  _ADCON0bits 000FC2  
                         ___wmul@multiplier 0006                            configPwm@channel 0008  
                            UART_write@dato 0006                                _isspace$1441 000C  
                                vfpfcnvrt@c 00DE                                  vfpfcnvrt@f 00D7  
                         ___lmul@multiplier 0006                                 _INTCON2bits 000FF1  
                                 copy_data0 3EA6                          __end_of_antiRebote 41BA  
                                roundf@F525 0100                   main@numMovimientosTotales 01CD  
                                  __Hrparam 0000                             ?_forzarParoAuto 0001  
                             UART_init@BAUD 0020                               _sensorDerecha 012C  
                                vfprintf@ap 00E3                                    __Lrparam 0000  
                                vfprintf@fp 00DF                                  ?_probarPID 0001  
                            _posicionCarroX 013D                              _posicionCarroY 013C  
                          __size_of___aldiv 010C                            __size_of___aodiv 0188  
                          __size_of___fladd 04C0                            __size_of___aomod 0164  
                          __size_of___fldiv 039C                            __size_of___awdiv 00C4  
                          __size_of___flneg 0038                            __size_of___awmod 00B0  
                          __size_of___flmul 042A                            __size_of___flsub 0046  
                          __size_of___fltol 0108                                  ?_vfpfcnvrt 00C1  
                          __size_of___lwdiv 0074                             ___aodiv@divisor 000E  
                           ___aodiv@counter 0016                          ___fpclassifyf@F463 0108  
                                sprintf@fmt 00E9                                    ___xxtofl 2A1A  
                       __end_of_UART_printf 4106                            __size_of_isdigit 0038  
                                  _dtoa$883 0033                             ___lwdiv@divisor 0008  
                          __size_of_isspace 0052                             ___lwdiv@counter 000A  
                                  __ptext10 2648                                    __ptext11 3640  
                                  __ptext20 4620                                    __ptext12 3C72  
                                  __ptext21 4428                                    __ptext13 3B14  
                                  __ptext30 3D1C                                    __ptext22 3062  
                                  __ptext14 38DE                                    __ptext31 2EE6  
                                  __ptext23 2D5E                                    __ptext15 2132  
                                  __ptext40 44D8                                    __ptext32 45DA  
                                  __ptext24 2BCE                                    __ptext16 39A2  
                                  __ptext41 353C                                    __ptext33 45BA  
                                  __ptext25 4260                                    __ptext17 4510  
                                  __ptext50 1D96                                    __ptext42 456E  
                                  __ptext34 4608                                    __ptext26 44A0  
                                  __ptext18 43E4                                    __ptext51 31C6  
                                  __ptext43 4350                                    __ptext35 4546  
                                  __ptext27 40A8                                    __ptext19 3814  
                                  __ptext52 2A1A                                    __ptext44 4594  
                                  __ptext36 2410                                    __ptext28 45F2  
                                  __ptext53 3E1E                                    __ptext45 285E  
                                  __ptext37 19E4                                    __ptext29 4302  
                                  __ptext54 4612                                    __ptext46 3DA4  
                                  __ptext38 439E                                    __ptext55 42B2  
                                  __ptext47 3FDE                                    __ptext39 10FA  
                                  __ptext56 3F04                                    __ptext48 3434  
                                  __ptext57 3328                                    __ptext49 15BA  
                                  __ptext59 4162                            __size_of_isupper 0038  
                          __size_of_pwmDuty 01BC     __end_of_inicializarComportamientoBasico 439E  
  __size_of_inicializarComportamientoBasico 004E           ??_inicializarComportamientoBasico 0054  
          ?_inicializarComportamientoBasico 0001             _inicializarComportamientoBasico 4350  
                          __size_of_sprintf 0052                            __size_of_tolower 0060  
                             antiRebote@pin 0003                                  strcpy@dest 0006  
                          __size_of_strncmp 00D6          comportamientoBasico@cruceDetectado 0137  
                    __size_of_configurarAdc 000A                               __size_of_atoi 0190  
                             __size_of_main 00B0                               __size_of_dtoa 02DE  
                                  efgtoa@fp 007D                                    efgtoa@ne 009F  
                                  efgtoa@pp 009B                                    efgtoa@ou 0089  
                     __end_of_forzarReversa 45DA                                    int$flags 0059  
                                  _vfprintf 3F74                                 ??_configPwm 0006  
                          ___aomod@dividend 0006                       __CFG_CPUDIV$OSC1_PLL2 000000  
                                _INTCONbits 000FF2                       __end_of_dameDistancia 3328  
                                  isdigit@c 0006                                    intlevel2 0000  
                                 sprintf@ap 00F1                                    isspace@c 0006  
                                 strcpy@src 0008                                    isupper@c 0006  
                                 strncmp@_l 0006                                   strncmp@_r 0008  
               __size_of_finalizarRecorrido 0018                                 efgtoa@nmode 00A7  
                               ??_probarPID 0054                             ___aomod@divisor 000E  
                               ??_vfpfcnvrt 00C7                             ___aomod@counter 0016  
                             _vfpfcnvrt$932 00D3                               _vfpfcnvrt$937 00D5  
                               _UART_printf 40A8                               _configurarAdc 4612  
                ?_visualizarPasosRealizados 01C9                              pwmDuty@channel 007E  
                                  sprintf@f 00F3                                    tolower@c 000C  
                                  sprintf@s 00E7                      __size_of___fpclassifyf 00FE  
                                  strncmp@l 000D                                    strncmp@n 000A  
                                  strncmp@r 000F          comportamientoBasico@carroEspejeado 00FE  
                              ___aldiv@sign 001B                               ___fladd@signs 0040  
                                _UART_write 45F2                                ___aodiv@sign 0017  
                              ___fladd@aexp 0041                                ___fladd@bexp 0042  
                              ___aomod@sign 0017                                 _roundf$1790 0060  
                               _roundf$1789 0066  
