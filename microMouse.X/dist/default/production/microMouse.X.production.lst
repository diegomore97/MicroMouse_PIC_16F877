

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Sep 25 19:08:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           ; Version 2.10
    98                           ; Generated 31/07/2019 GMT
    99                           ; 
   100                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F4550 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	idataBANK1
   133  00584A                     __pidataBANK1:
   134                           	opt callstack 0
   135                           
   136                           ;initializer for _ida
   137  00584A  01                 	db	1
   138                           
   139                           ;initializer for _pausa
   140  00584B  01                 	db	1
   141                           
   142                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   143  00584C  03                 	db	3
   144                           
   145                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   146  00584D  02                 	db	2
   147                           
   148                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   149  00584E  01                 	db	1
   150                           
   151                           	psect	mediumconst
   152  007D76                     __pmediumconst:
   153                           	opt callstack 0
   154  007D76  00                 	db	0
   155  007D77  0000               	dw	0
   156  007D79  4B00               	dw	19200
   157  007D7B                     __end_of_toint:
   158                           	opt callstack 0
   159  0000                     _T1CON	set	4045
   160  0000                     _TRISDbits	set	3989
   161  0000                     _INTCON2bits	set	4081
   162  0000                     _INTCONbits	set	4082
   163  0000                     _ADRESL	set	4035
   164  0000                     _ADRESH	set	4036
   165  0000                     _ADCON0bits	set	4034
   166  0000                     _ADCON2	set	4032
   167  0000                     _ADCON1	set	4033
   168  0000                     _TXREG	set	4013
   169  0000                     _RCREG	set	4014
   170  0000                     _RCSTAbits	set	4011
   171  0000                     _TXSTAbits	set	4012
   172  0000                     _SPBRG	set	4015
   173  0000                     _PORTBbits	set	3969
   174  0000                     _TMR1L	set	4046
   175  0000                     _TMR1H	set	4047
   176  0000                     _PR2	set	4043
   177  0000                     _CCP2CON	set	4026
   178  0000                     _CCPR2L	set	4027
   179  0000                     _CCP1CON	set	4029
   180  0000                     _CCPR1L	set	4030
   181  0000                     _TRISB0	set	31896
   182  0000                     _TRISB7	set	31903
   183  0000                     _TRISB6	set	31902
   184  0000                     _TRISB5	set	31901
   185  0000                     _TRISB4	set	31900
   186  0000                     _TRISB3	set	31899
   187  0000                     _TRISB2	set	31898
   188  0000                     _TRISB1	set	31897
   189  0000                     _TRISD3	set	31915
   190  0000                     _LATB7	set	31831
   191  0000                     _LATB6	set	31830
   192  0000                     _LATB5	set	31829
   193  0000                     _LATB4	set	31828
   194  0000                     _LATD2	set	31842
   195  0000                     _INT0IF	set	32657
   196  0000                     _RCIF	set	31989
   197  0000                     _TRISC7	set	31911
   198  0000                     _TRISC6	set	31910
   199  0000                     _TMR1IF	set	31984
   200  0000                     _TMR1ON	set	32360
   201  0000                     _LATD3	set	31843
   202  0000                     _TMR2ON	set	32338
   203  0000                     _CCP2M2	set	32210
   204  0000                     _CCP2M3	set	32211
   205  0000                     _TRISC1	set	31905
   206  0000                     _CCP1M2	set	32234
   207  0000                     _CCP1M3	set	32235
   208  0000                     _TRISC2	set	31906
   209  0000                     _T2CKPS1	set	32337
   210  0000                     _T2CKPS0	set	32336
   211  007D7B                     STR_12:
   212  007D7B  0A                 	db	10
   213  007D7C  0A                 	db	10
   214  007D7D  4F                 	db	79	;'O'
   215  007D7E  56                 	db	86	;'V'
   216  007D7F  45                 	db	69	;'E'
   217  007D80  52                 	db	82	;'R'
   218  007D81  46                 	db	70	;'F'
   219  007D82  4C                 	db	76	;'L'
   220  007D83  4F                 	db	79	;'O'
   221  007D84  57                 	db	87	;'W'
   222  007D85  20                 	db	32
   223  007D86  65                 	db	101	;'e'
   224  007D87  6E                 	db	110	;'n'
   225  007D88  20                 	db	32
   226  007D89  65                 	db	101	;'e'
   227  007D8A  6C                 	db	108	;'l'
   228  007D8B  20                 	db	32
   229  007D8C  6D                 	db	109	;'m'
   230  007D8D  61                 	db	97	;'a'
   231  007D8E  70                 	db	112	;'p'
   232  007D8F  65                 	db	101	;'e'
   233  007D90  6F                 	db	111	;'o'
   234  007D91  20                 	db	32
   235  007D92  64                 	db	100	;'d'
   236  007D93  65                 	db	101	;'e'
   237  007D94  20                 	db	32
   238  007D95  70                 	db	112	;'p'
   239  007D96  61                 	db	97	;'a'
   240  007D97  73                 	db	115	;'s'
   241  007D98  6F                 	db	111	;'o'
   242  007D99  73                 	db	115	;'s'
   243  007D9A  20                 	db	32
   244  007D9B  52                 	db	82	;'R'
   245  007D9C  65                 	db	101	;'e'
   246  007D9D  61                 	db	97	;'a'
   247  007D9E  6C                 	db	108	;'l'
   248  007D9F  69                 	db	105	;'i'
   249  007DA0  7A                 	db	122	;'z'
   250  007DA1  61                 	db	97	;'a'
   251  007DA2  64                 	db	100	;'d'
   252  007DA3  6F                 	db	111	;'o'
   253  007DA4  73                 	db	115	;'s'
   254  007DA5  20                 	db	32
   255  007DA6  70                 	db	112	;'p'
   256  007DA7  61                 	db	97	;'a'
   257  007DA8  72                 	db	114	;'r'
   258  007DA9  61                 	db	97	;'a'
   259  007DAA  20                 	db	32
   260  007DAB  63                 	db	99	;'c'
   261  007DAC  72                 	db	114	;'r'
   262  007DAD  75                 	db	117	;'u'
   263  007DAE  63                 	db	99	;'c'
   264  007DAF  65                 	db	101	;'e'
   265  007DB0  0A                 	db	10
   266  007DB1  0A                 	db	10
   267  007DB2  00                 	db	0
   268  007DB3                     STR_21:
   269  007DB3  0D                 	db	13
   270  007DB4  0A                 	db	10
   271  007DB5  45                 	db	69	;'E'
   272  007DB6  6C                 	db	108	;'l'
   273  007DB7  20                 	db	32
   274  007DB8  63                 	db	99	;'c'
   275  007DB9  61                 	db	97	;'a'
   276  007DBA  6D                 	db	109	;'m'
   277  007DBB  69                 	db	105	;'i'
   278  007DBC  6E                 	db	110	;'n'
   279  007DBD  6F                 	db	111	;'o'
   280  007DBE  20                 	db	32
   281  007DBF  49                 	db	73	;'I'
   282  007DC0  5A                 	db	90	;'Z'
   283  007DC1  51                 	db	81	;'Q'
   284  007DC2  55                 	db	85	;'U'
   285  007DC3  49                 	db	73	;'I'
   286  007DC4  45                 	db	69	;'E'
   287  007DC5  52                 	db	82	;'R'
   288  007DC6  44                 	db	68	;'D'
   289  007DC7  41                 	db	65	;'A'
   290  007DC8  20                 	db	32
   291  007DC9  73                 	db	115	;'s'
   292  007DCA  65                 	db	101	;'e'
   293  007DCB  20                 	db	32
   294  007DCC  61                 	db	97	;'a'
   295  007DCD  63                 	db	99	;'c'
   296  007DCE  65                 	db	101	;'e'
   297  007DCF  72                 	db	114	;'r'
   298  007DD0  63                 	db	99	;'c'
   299  007DD1  61                 	db	97	;'a'
   300  007DD2  20                 	db	32
   301  007DD3  6D                 	db	109	;'m'
   302  007DD4  61                 	db	97	;'a'
   303  007DD5  73                 	db	115	;'s'
   304  007DD6  20                 	db	32
   305  007DD7  61                 	db	97	;'a'
   306  007DD8  6C                 	db	108	;'l'
   307  007DD9  20                 	db	32
   308  007DDA  64                 	db	100	;'d'
   309  007DDB  65                 	db	101	;'e'
   310  007DDC  73                 	db	115	;'s'
   311  007DDD  74                 	db	116	;'t'
   312  007DDE  69                 	db	105	;'i'
   313  007DDF  6E                 	db	110	;'n'
   314  007DE0  6F                 	db	111	;'o'
   315  007DE1  0D                 	db	13
   316  007DE2  0A                 	db	10
   317  007DE3  00                 	db	0
   318  007DE4                     STR_20:
   319  007DE4  0D                 	db	13
   320  007DE5  0A                 	db	10
   321  007DE6  45                 	db	69	;'E'
   322  007DE7  6C                 	db	108	;'l'
   323  007DE8  20                 	db	32
   324  007DE9  63                 	db	99	;'c'
   325  007DEA  61                 	db	97	;'a'
   326  007DEB  6D                 	db	109	;'m'
   327  007DEC  69                 	db	105	;'i'
   328  007DED  6E                 	db	110	;'n'
   329  007DEE  6F                 	db	111	;'o'
   330  007DEF  20                 	db	32
   331  007DF0  45                 	db	69	;'E'
   332  007DF1  4E                 	db	78	;'N'
   333  007DF2  46                 	db	70	;'F'
   334  007DF3  52                 	db	82	;'R'
   335  007DF4  45                 	db	69	;'E'
   336  007DF5  4E                 	db	78	;'N'
   337  007DF6  54                 	db	84	;'T'
   338  007DF7  45                 	db	69	;'E'
   339  007DF8  20                 	db	32
   340  007DF9  73                 	db	115	;'s'
   341  007DFA  65                 	db	101	;'e'
   342  007DFB  20                 	db	32
   343  007DFC  61                 	db	97	;'a'
   344  007DFD  63                 	db	99	;'c'
   345  007DFE  65                 	db	101	;'e'
   346  007DFF  72                 	db	114	;'r'
   347  007E00  63                 	db	99	;'c'
   348  007E01  61                 	db	97	;'a'
   349  007E02  20                 	db	32
   350  007E03  6D                 	db	109	;'m'
   351  007E04  61                 	db	97	;'a'
   352  007E05  73                 	db	115	;'s'
   353  007E06  20                 	db	32
   354  007E07  61                 	db	97	;'a'
   355  007E08  6C                 	db	108	;'l'
   356  007E09  20                 	db	32
   357  007E0A  64                 	db	100	;'d'
   358  007E0B  65                 	db	101	;'e'
   359  007E0C  73                 	db	115	;'s'
   360  007E0D  74                 	db	116	;'t'
   361  007E0E  69                 	db	105	;'i'
   362  007E0F  6E                 	db	110	;'n'
   363  007E10  6F                 	db	111	;'o'
   364  007E11  0D                 	db	13
   365  007E12  0A                 	db	10
   366  007E13  00                 	db	0
   367  007E14                     STR_22:
   368  007E14  0D                 	db	13
   369  007E15  0A                 	db	10
   370  007E16  45                 	db	69	;'E'
   371  007E17  6C                 	db	108	;'l'
   372  007E18  20                 	db	32
   373  007E19  63                 	db	99	;'c'
   374  007E1A  61                 	db	97	;'a'
   375  007E1B  6D                 	db	109	;'m'
   376  007E1C  69                 	db	105	;'i'
   377  007E1D  6E                 	db	110	;'n'
   378  007E1E  6F                 	db	111	;'o'
   379  007E1F  20                 	db	32
   380  007E20  44                 	db	68	;'D'
   381  007E21  45                 	db	69	;'E'
   382  007E22  52                 	db	82	;'R'
   383  007E23  45                 	db	69	;'E'
   384  007E24  43                 	db	67	;'C'
   385  007E25  48                 	db	72	;'H'
   386  007E26  41                 	db	65	;'A'
   387  007E27  20                 	db	32
   388  007E28  73                 	db	115	;'s'
   389  007E29  65                 	db	101	;'e'
   390  007E2A  20                 	db	32
   391  007E2B  61                 	db	97	;'a'
   392  007E2C  63                 	db	99	;'c'
   393  007E2D  65                 	db	101	;'e'
   394  007E2E  72                 	db	114	;'r'
   395  007E2F  63                 	db	99	;'c'
   396  007E30  61                 	db	97	;'a'
   397  007E31  20                 	db	32
   398  007E32  6D                 	db	109	;'m'
   399  007E33  61                 	db	97	;'a'
   400  007E34  73                 	db	115	;'s'
   401  007E35  20                 	db	32
   402  007E36  61                 	db	97	;'a'
   403  007E37  6C                 	db	108	;'l'
   404  007E38  20                 	db	32
   405  007E39  64                 	db	100	;'d'
   406  007E3A  65                 	db	101	;'e'
   407  007E3B  73                 	db	115	;'s'
   408  007E3C  74                 	db	116	;'t'
   409  007E3D  69                 	db	105	;'i'
   410  007E3E  6E                 	db	110	;'n'
   411  007E3F  6F                 	db	111	;'o'
   412  007E40  0D                 	db	13
   413  007E41  0A                 	db	10
   414  007E42  00                 	db	0
   415  007E43  0D                 	db	13
   416  007E44  4C                 	db	76	;'L'
   417  007E45  65                 	db	101	;'e'
   418  007E46  63                 	db	99	;'c'
   419  007E47  74                 	db	116	;'t'
   420  007E48  75                 	db	117	;'u'
   421  007E49  72                 	db	114	;'r'
   422  007E4A  61                 	db	97	;'a'
   423  007E4B  20                 	db	32
   424  007E4C  64                 	db	100	;'d'
   425  007E4D  65                 	db	101	;'e'
   426  007E4E  20                 	db	32
   427  007E4F  73                 	db	115	;'s'
   428  007E50  65                 	db	101	;'e'
   429  007E51  6E                 	db	110	;'n'
   430  007E52  73                 	db	115	;'s'
   431  007E53  6F                 	db	111	;'o'
   432  007E54  72                 	db	114	;'r'
   433  007E55  20                 	db	32
   434  007E56  4F                 	db	79	;'O'
   435  007E57  70                 	db	112	;'p'
   436  007E58  74                 	db	116	;'t'
   437  007E59  69                 	db	105	;'i'
   438  007E5A  63                 	db	99	;'c'
   439  007E5B  6F                 	db	111	;'o'
   440  007E5C  20                 	db	32
   441  007E5D  3D                 	db	61	;'='
   442  007E5E  20                 	db	32
   443  007E5F  25                 	db	37
   444  007E60  64                 	db	100	;'d'
   445  007E61  0D                 	db	13
   446  007E62  0A                 	db	10
   447  007E63  0A                 	db	10
   448  007E64  00                 	db	0
   449  007E65                     STR_13:
   450  007E65  0D                 	db	13
   451  007E66  53                 	db	83	;'S'
   452  007E67  65                 	db	101	;'e'
   453  007E68  20                 	db	32
   454  007E69  72                 	db	114	;'r'
   455  007E6A  65                 	db	101	;'e'
   456  007E6B  67                 	db	103	;'g'
   457  007E6C  72                 	db	114	;'r'
   458  007E6D  65                 	db	101	;'e'
   459  007E6E  73                 	db	115	;'s'
   460  007E6F  6F                 	db	111	;'o'
   461  007E70  20                 	db	32
   462  007E71  61                 	db	97	;'a'
   463  007E72  6C                 	db	108	;'l'
   464  007E73  20                 	db	32
   465  007E74  70                 	db	112	;'p'
   466  007E75  75                 	db	117	;'u'
   467  007E76  6E                 	db	110	;'n'
   468  007E77  74                 	db	116	;'t'
   469  007E78  6F                 	db	111	;'o'
   470  007E79  20                 	db	32
   471  007E7A  64                 	db	100	;'d'
   472  007E7B  65                 	db	101	;'e'
   473  007E7C  20                 	db	32
   474  007E7D  70                 	db	112	;'p'
   475  007E7E  61                 	db	97	;'a'
   476  007E7F  72                 	db	114	;'r'
   477  007E80  74                 	db	116	;'t'
   478  007E81  69                 	db	105	;'i'
   479  007E82  64                 	db	100	;'d'
   480  007E83  61                 	db	97	;'a'
   481  007E84  0D                 	db	13
   482  007E85  0A                 	db	10
   483  007E86  00                 	db	0
   484  007E87                     STR_19:
   485  007E87  49                 	db	73	;'I'
   486  007E88  6E                 	db	110	;'n'
   487  007E89  76                 	db	118	;'v'
   488  007E8A  65                 	db	101	;'e'
   489  007E8B  73                 	db	115	;'s'
   490  007E8C  74                 	db	116	;'t'
   491  007E8D  69                 	db	105	;'i'
   492  007E8E  67                 	db	103	;'g'
   493  007E8F  61                 	db	97	;'a'
   494  007E90  6E                 	db	110	;'n'
   495  007E91  64                 	db	100	;'d'
   496  007E92  6F                 	db	111	;'o'
   497  007E93  20                 	db	32
   498  007E94  43                 	db	67	;'C'
   499  007E95  72                 	db	114	;'r'
   500  007E96  75                 	db	117	;'u'
   501  007E97  63                 	db	99	;'c'
   502  007E98  65                 	db	101	;'e'
   503  007E99  3A                 	db	58	;':'
   504  007E9A  20                 	db	32
   505  007E9B  25                 	db	37
   506  007E9C  63                 	db	99	;'c'
   507  007E9D  20                 	db	32
   508  007E9E  7C                 	db	124
   509  007E9F  20                 	db	32
   510  007EA0  25                 	db	37
   511  007EA1  63                 	db	99	;'c'
   512  007EA2  20                 	db	32
   513  007EA3  7C                 	db	124
   514  007EA4  20                 	db	32
   515  007EA5  25                 	db	37
   516  007EA6  63                 	db	99	;'c'
   517  007EA7  0A                 	db	10
   518  007EA8  00                 	db	0
   519  007EA9                     STR_16:
   520  007EA9  0D                 	db	13
   521  007EAA  44                 	db	68	;'D'
   522  007EAB  69                 	db	105	;'i'
   523  007EAC  72                 	db	114	;'r'
   524  007EAD  65                 	db	101	;'e'
   525  007EAE  63                 	db	99	;'c'
   526  007EAF  63                 	db	99	;'c'
   527  007EB0  69                 	db	105	;'i'
   528  007EB1  6F                 	db	111	;'o'
   529  007EB2  6E                 	db	110	;'n'
   530  007EB3  20                 	db	32
   531  007EB4  45                 	db	69	;'E'
   532  007EB5  6C                 	db	108	;'l'
   533  007EB6  65                 	db	101	;'e'
   534  007EB7  67                 	db	103	;'g'
   535  007EB8  69                 	db	105	;'i'
   536  007EB9  64                 	db	100	;'d'
   537  007EBA  61                 	db	97	;'a'
   538  007EBB  3A                 	db	58	;':'
   539  007EBC  20                 	db	32
   540  007EBD  49                 	db	73	;'I'
   541  007EBE  5A                 	db	90	;'Z'
   542  007EBF  51                 	db	81	;'Q'
   543  007EC0  55                 	db	85	;'U'
   544  007EC1  49                 	db	73	;'I'
   545  007EC2  45                 	db	69	;'E'
   546  007EC3  52                 	db	82	;'R'
   547  007EC4  44                 	db	68	;'D'
   548  007EC5  41                 	db	65	;'A'
   549  007EC6  0A                 	db	10
   550  007EC7  0A                 	db	10
   551  007EC8  0D                 	db	13
   552  007EC9  00                 	db	0
   553  007ECA                     STR_11:
   554  007ECA  0D                 	db	13
   555  007ECB  4D                 	db	77	;'M'
   556  007ECC  6F                 	db	111	;'o'
   557  007ECD  76                 	db	118	;'v'
   558  007ECE  69                 	db	105	;'i'
   559  007ECF  6D                 	db	109	;'m'
   560  007ED0  69                 	db	105	;'i'
   561  007ED1  65                 	db	101	;'e'
   562  007ED2  6E                 	db	110	;'n'
   563  007ED3  74                 	db	116	;'t'
   564  007ED4  6F                 	db	111	;'o'
   565  007ED5  73                 	db	115	;'s'
   566  007ED6  20                 	db	32
   567  007ED7  52                 	db	82	;'R'
   568  007ED8  65                 	db	101	;'e'
   569  007ED9  61                 	db	97	;'a'
   570  007EDA  6C                 	db	108	;'l'
   571  007EDB  69                 	db	105	;'i'
   572  007EDC  7A                 	db	122	;'z'
   573  007EDD  61                 	db	97	;'a'
   574  007EDE  64                 	db	100	;'d'
   575  007EDF  6F                 	db	111	;'o'
   576  007EE0  73                 	db	115	;'s'
   577  007EE1  20                 	db	32
   578  007EE2  3D                 	db	61	;'='
   579  007EE3  20                 	db	32
   580  007EE4  25                 	db	37
   581  007EE5  64                 	db	100	;'d'
   582  007EE6  0D                 	db	13
   583  007EE7  0A                 	db	10
   584  007EE8  0A                 	db	10
   585  007EE9  00                 	db	0
   586  007EEA                     STR_15:
   587  007EEA  0D                 	db	13
   588  007EEB  44                 	db	68	;'D'
   589  007EEC  69                 	db	105	;'i'
   590  007EED  72                 	db	114	;'r'
   591  007EEE  65                 	db	101	;'e'
   592  007EEF  63                 	db	99	;'c'
   593  007EF0  63                 	db	99	;'c'
   594  007EF1  69                 	db	105	;'i'
   595  007EF2  6F                 	db	111	;'o'
   596  007EF3  6E                 	db	110	;'n'
   597  007EF4  20                 	db	32
   598  007EF5  45                 	db	69	;'E'
   599  007EF6  6C                 	db	108	;'l'
   600  007EF7  65                 	db	101	;'e'
   601  007EF8  67                 	db	103	;'g'
   602  007EF9  69                 	db	105	;'i'
   603  007EFA  64                 	db	100	;'d'
   604  007EFB  61                 	db	97	;'a'
   605  007EFC  3A                 	db	58	;':'
   606  007EFD  20                 	db	32
   607  007EFE  45                 	db	69	;'E'
   608  007EFF  4E                 	db	78	;'N'
   609  007F00  46                 	db	70	;'F'
   610  007F01  52                 	db	82	;'R'
   611  007F02  45                 	db	69	;'E'
   612  007F03  4E                 	db	78	;'N'
   613  007F04  54                 	db	84	;'T'
   614  007F05  45                 	db	69	;'E'
   615  007F06  0A                 	db	10
   616  007F07  0A                 	db	10
   617  007F08  0D                 	db	13
   618  007F09  00                 	db	0
   619  007F0A                     STR_18:
   620  007F0A  0D                 	db	13
   621  007F0B  44                 	db	68	;'D'
   622  007F0C  69                 	db	105	;'i'
   623  007F0D  72                 	db	114	;'r'
   624  007F0E  65                 	db	101	;'e'
   625  007F0F  63                 	db	99	;'c'
   626  007F10  63                 	db	99	;'c'
   627  007F11  69                 	db	105	;'i'
   628  007F12  6F                 	db	111	;'o'
   629  007F13  6E                 	db	110	;'n'
   630  007F14  20                 	db	32
   631  007F15  45                 	db	69	;'E'
   632  007F16  6C                 	db	108	;'l'
   633  007F17  65                 	db	101	;'e'
   634  007F18  67                 	db	103	;'g'
   635  007F19  69                 	db	105	;'i'
   636  007F1A  64                 	db	100	;'d'
   637  007F1B  61                 	db	97	;'a'
   638  007F1C  3A                 	db	58	;':'
   639  007F1D  20                 	db	32
   640  007F1E  43                 	db	67	;'C'
   641  007F1F  41                 	db	65	;'A'
   642  007F20  4C                 	db	76	;'L'
   643  007F21  4C                 	db	76	;'L'
   644  007F22  45                 	db	69	;'E'
   645  007F23  4A                 	db	74	;'J'
   646  007F24  4F                 	db	79	;'O'
   647  007F25  4E                 	db	78	;'N'
   648  007F26  0A                 	db	10
   649  007F27  0A                 	db	10
   650  007F28  0D                 	db	13
   651  007F29  00                 	db	0
   652  007F2A                     STR_17:
   653  007F2A  0D                 	db	13
   654  007F2B  44                 	db	68	;'D'
   655  007F2C  69                 	db	105	;'i'
   656  007F2D  72                 	db	114	;'r'
   657  007F2E  65                 	db	101	;'e'
   658  007F2F  63                 	db	99	;'c'
   659  007F30  63                 	db	99	;'c'
   660  007F31  69                 	db	105	;'i'
   661  007F32  6F                 	db	111	;'o'
   662  007F33  6E                 	db	110	;'n'
   663  007F34  20                 	db	32
   664  007F35  45                 	db	69	;'E'
   665  007F36  6C                 	db	108	;'l'
   666  007F37  65                 	db	101	;'e'
   667  007F38  67                 	db	103	;'g'
   668  007F39  69                 	db	105	;'i'
   669  007F3A  64                 	db	100	;'d'
   670  007F3B  61                 	db	97	;'a'
   671  007F3C  3A                 	db	58	;':'
   672  007F3D  20                 	db	32
   673  007F3E  44                 	db	68	;'D'
   674  007F3F  45                 	db	69	;'E'
   675  007F40  52                 	db	82	;'R'
   676  007F41  45                 	db	69	;'E'
   677  007F42  43                 	db	67	;'C'
   678  007F43  48                 	db	72	;'H'
   679  007F44  41                 	db	65	;'A'
   680  007F45  0A                 	db	10
   681  007F46  0A                 	db	10
   682  007F47  0D                 	db	13
   683  007F48  00                 	db	0
   684  007F49  0D                 	db	13
   685  007F4A  44                 	db	68	;'D'
   686  007F4B  65                 	db	101	;'e'
   687  007F4C  73                 	db	115	;'s'
   688  007F4D  74                 	db	116	;'t'
   689  007F4E  69                 	db	105	;'i'
   690  007F4F  6E                 	db	110	;'n'
   691  007F50  6F                 	db	111	;'o'
   692  007F51  20                 	db	32
   693  007F52  6E                 	db	110	;'n'
   694  007F53  6F                 	db	111	;'o'
   695  007F54  20                 	db	32
   696  007F55  64                 	db	100	;'d'
   697  007F56  65                 	db	101	;'e'
   698  007F57  74                 	db	116	;'t'
   699  007F58  65                 	db	101	;'e'
   700  007F59  63                 	db	99	;'c'
   701  007F5A  74                 	db	116	;'t'
   702  007F5B  61                 	db	97	;'a'
   703  007F5C  64                 	db	100	;'d'
   704  007F5D  6F                 	db	111	;'o'
   705  007F5E  20                 	db	32
   706  007F5F  0D                 	db	13
   707  007F60  0A                 	db	10
   708  007F61  00                 	db	0
   709  007F62  0D                 	db	13
   710  007F63  53                 	db	83	;'S'
   711  007F64  65                 	db	101	;'e'
   712  007F65  20                 	db	32
   713  007F66  6C                 	db	108	;'l'
   714  007F67  6C                 	db	108	;'l'
   715  007F68  65                 	db	101	;'e'
   716  007F69  67                 	db	103	;'g'
   717  007F6A  6F                 	db	111	;'o'
   718  007F6B  20                 	db	32
   719  007F6C  61                 	db	97	;'a'
   720  007F6D  6C                 	db	108	;'l'
   721  007F6E  20                 	db	32
   722  007F6F  64                 	db	100	;'d'
   723  007F70  65                 	db	101	;'e'
   724  007F71  73                 	db	115	;'s'
   725  007F72  74                 	db	116	;'t'
   726  007F73  69                 	db	105	;'i'
   727  007F74  6E                 	db	110	;'n'
   728  007F75  6F                 	db	111	;'o'
   729  007F76  20                 	db	32
   730  007F77  0D                 	db	13
   731  007F78  0A                 	db	10
   732  007F79  00                 	db	0
   733  007F7A                     STR_14:
   734  007F7A  0D                 	db	13
   735  007F7B  53                 	db	83	;'S'
   736  007F7C  65                 	db	101	;'e'
   737  007F7D  20                 	db	32
   738  007F7E  6C                 	db	108	;'l'
   739  007F7F  6C                 	db	108	;'l'
   740  007F80  65                 	db	101	;'e'
   741  007F81  67                 	db	103	;'g'
   742  007F82  6F                 	db	111	;'o'
   743  007F83  20                 	db	32
   744  007F84  41                 	db	65	;'A'
   745  007F85  6C                 	db	108	;'l'
   746  007F86  20                 	db	32
   747  007F87  64                 	db	100	;'d'
   748  007F88  65                 	db	101	;'e'
   749  007F89  73                 	db	115	;'s'
   750  007F8A  74                 	db	116	;'t'
   751  007F8B  69                 	db	105	;'i'
   752  007F8C  6E                 	db	110	;'n'
   753  007F8D  6F                 	db	111	;'o'
   754  007F8E  0D                 	db	13
   755  007F8F  0A                 	db	10
   756  007F90  00                 	db	0
   757  007F91  0D                 	db	13
   758  007F92  49                 	db	73	;'I'
   759  007F93  7A                 	db	122	;'z'
   760  007F94  71                 	db	113	;'q'
   761  007F95  75                 	db	117	;'u'
   762  007F96  69                 	db	105	;'i'
   763  007F97  65                 	db	101	;'e'
   764  007F98  72                 	db	114	;'r'
   765  007F99  64                 	db	100	;'d'
   766  007F9A  61                 	db	97	;'a'
   767  007F9B  3A                 	db	58	;':'
   768  007F9C  20                 	db	32
   769  007F9D  25                 	db	37
   770  007F9E  2E                 	db	46
   771  007F9F  32                 	db	50	;'2'
   772  007FA0  66                 	db	102	;'f'
   773  007FA1  0D                 	db	13
   774  007FA2  0A                 	db	10
   775  007FA3  00                 	db	0
   776  007FA4  0D                 	db	13
   777  007FA5  45                 	db	69	;'E'
   778  007FA6  6E                 	db	110	;'n'
   779  007FA7  66                 	db	102	;'f'
   780  007FA8  72                 	db	114	;'r'
   781  007FA9  65                 	db	101	;'e'
   782  007FAA  6E                 	db	110	;'n'
   783  007FAB  74                 	db	116	;'t'
   784  007FAC  65                 	db	101	;'e'
   785  007FAD  3A                 	db	58	;':'
   786  007FAE  20                 	db	32
   787  007FAF  25                 	db	37
   788  007FB0  2E                 	db	46
   789  007FB1  32                 	db	50	;'2'
   790  007FB2  66                 	db	102	;'f'
   791  007FB3  0D                 	db	13
   792  007FB4  0A                 	db	10
   793  007FB5  00                 	db	0
   794  007FB6  0D                 	db	13
   795  007FB7  44                 	db	68	;'D'
   796  007FB8  65                 	db	101	;'e'
   797  007FB9  72                 	db	114	;'r'
   798  007FBA  65                 	db	101	;'e'
   799  007FBB  63                 	db	99	;'c'
   800  007FBC  68                 	db	104	;'h'
   801  007FBD  61                 	db	97	;'a'
   802  007FBE  3A                 	db	58	;':'
   803  007FBF  20                 	db	32
   804  007FC0  25                 	db	37
   805  007FC1  2E                 	db	46
   806  007FC2  32                 	db	50	;'2'
   807  007FC3  66                 	db	102	;'f'
   808  007FC4  0D                 	db	13
   809  007FC5  0A                 	db	10
   810  007FC6  00                 	db	0
   811  007FC7                     STR_8:
   812  007FC7  49                 	db	73	;'I'
   813  007FC8  7A                 	db	122	;'z'
   814  007FC9  71                 	db	113	;'q'
   815  007FCA  75                 	db	117	;'u'
   816  007FCB  69                 	db	105	;'i'
   817  007FCC  65                 	db	101	;'e'
   818  007FCD  72                 	db	114	;'r'
   819  007FCE  64                 	db	100	;'d'
   820  007FCF  61                 	db	97	;'a'
   821  007FD0  0A                 	db	10
   822  007FD1  00                 	db	0
   823  007FD2                     STR_7:
   824  007FD2  45                 	db	69	;'E'
   825  007FD3  6E                 	db	110	;'n'
   826  007FD4  66                 	db	102	;'f'
   827  007FD5  72                 	db	114	;'r'
   828  007FD6  65                 	db	101	;'e'
   829  007FD7  6E                 	db	110	;'n'
   830  007FD8  74                 	db	116	;'t'
   831  007FD9  65                 	db	101	;'e'
   832  007FDA  0A                 	db	10
   833  007FDB  00                 	db	0
   834  007FDC                     STR_9:
   835  007FDC  44                 	db	68	;'D'
   836  007FDD  65                 	db	101	;'e'
   837  007FDE  72                 	db	114	;'r'
   838  007FDF  65                 	db	101	;'e'
   839  007FE0  63                 	db	99	;'c'
   840  007FE1  68                 	db	104	;'h'
   841  007FE2  61                 	db	97	;'a'
   842  007FE3  0A                 	db	10
   843  007FE4  00                 	db	0
   844  007FE5                     STR_10:
   845  007FE5  41                 	db	65	;'A'
   846  007FE6  6C                 	db	108	;'l'
   847  007FE7  74                 	db	116	;'t'
   848  007FE8  6F                 	db	111	;'o'
   849  007FE9  0A                 	db	10
   850  007FEA  00                 	db	0
   851  007FEB                     STR_23:
   852  007FEB  49                 	db	73	;'I'
   853  007FEC  4E                 	db	78	;'N'
   854  007FED  46                 	db	70	;'F'
   855  007FEE  00                 	db	0
   856  007FEF                     STR_27:
   857  007FEF  4E                 	db	78	;'N'
   858  007FF0  41                 	db	65	;'A'
   859  007FF1  4E                 	db	78	;'N'
   860  007FF2  00                 	db	0
   861  007FF3                     STR_24:
   862  007FF3  69                 	db	105	;'i'
   863  007FF4  6E                 	db	110	;'n'
   864  007FF5  66                 	db	102	;'f'
   865  007FF6  00                 	db	0
   866  007FF7                     STR_28:
   867  007FF7  6E                 	db	110	;'n'
   868  007FF8  61                 	db	97	;'a'
   869  007FF9  6E                 	db	110	;'n'
   870  007FFA  00                 	db	0
   871  007FFB                     STR_31:
   872  007FFB  6C                 	db	108	;'l'
   873  007FFC  66                 	db	102	;'f'
   874  007FFD  00                 	db	0
   875  0000                     
   876                           ; #config settings
   877  007FFE  00                 	db	0	; dummy byte at the end
   878  0000                     
   879                           	psect	cinit
   880  0051F6                     __pcinit:
   881                           	opt callstack 0
   882  0051F6                     start_initialization:
   883                           	opt callstack 0
   884  0051F6                     __initialization:
   885                           	opt callstack 0
   886                           
   887                           ; Initialize objects allocated to BANK1 (5 bytes)
   888                           ; load TBLPTR registers with __pidataBANK1
   889  0051F6  0E4A               	movlw	low __pidataBANK1
   890  0051F8  6EF6               	movwf	tblptrl,c
   891  0051FA  0E58               	movlw	high __pidataBANK1
   892  0051FC  6EF7               	movwf	tblptrh,c
   893  0051FE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   894  005200  6EF8               	movwf	tblptru,c
   895  005202  EE01  F0FA         	lfsr	0,__pdataBANK1
   896  005206  EE10 F005          	lfsr	1,5
   897  00520A                     copy_data0:
   898  00520A  0009               	tblrd		*+
   899  00520C  CFF5 FFEE          	movff	tablat,postinc0
   900  005210  50E5               	movf	postdec1,w,c
   901  005212  50E1               	movf	fsr1l,w,c
   902  005214  E1FA               	bnz	copy_data0
   903                           
   904                           ; Clear objects allocated to BANK2 (200 bytes)
   905  005216  EE02  F000         	lfsr	0,__pbssBANK2
   906  00521A  0EC8               	movlw	200
   907  00521C                     clear_0:
   908  00521C  6AEE               	clrf	postinc0,c
   909  00521E  06E8               	decf	wreg,f,c
   910  005220  E1FD               	bnz	clear_0
   911                           
   912                           ; Clear objects allocated to BANK1 (230 bytes)
   913  005222  EE01  F000         	lfsr	0,__pbssBANK1
   914  005226  0EE6               	movlw	230
   915  005228                     clear_1:
   916  005228  6AEE               	clrf	postinc0,c
   917  00522A  06E8               	decf	wreg,f,c
   918  00522C  E1FD               	bnz	clear_1
   919                           
   920                           ; Clear objects allocated to BANK0 (1 bytes)
   921  00522E  0100               	movlb	0
   922  005230  6BFF               	clrf	__pbssBANK0& (0+255),b
   923                           
   924                           ; Clear objects allocated to COMRAM (5 bytes)
   925  005232  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   926  005234  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   927  005236  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   928  005238  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   929  00523A  6A55               	clrf	__pbssCOMRAM& (0+255),c
   930  00523C                     end_of_initialization:
   931                           	opt callstack 0
   932  00523C                     __end_of__initialization:
   933                           	opt callstack 0
   934  00523C  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   935  00523E  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   936  005240  0E00               	movlw	low (__Lmediumconst shr (0+16))
   937  005242  6EF8               	movwf	tblptru,c
   938  005244  0100               	movlb	0
   939  005246  EF21  F026         	goto	_main	;jump to C main() function
   940                           
   941                           	psect	bssCOMRAM
   942  000055                     __pbssCOMRAM:
   943                           	opt callstack 0
   944  000055                     _flags:
   945                           	opt callstack 0
   946  000055                     	ds	2
   947  000057                     _mouse:
   948                           	opt callstack 0
   949  000057                     	ds	2
   950  000059                     _caminoEncontrado:
   951                           	opt callstack 0
   952  000059                     	ds	1
   953                           
   954                           	psect	bssBANK0
   955  0000FF                     __pbssBANK0:
   956                           	opt callstack 0
   957  0000FF                     _llegoDestino:
   958                           	opt callstack 0
   959  0000FF                     	ds	1
   960                           
   961                           	psect	bssBANK1
   962  000100                     __pbssBANK1:
   963                           	opt callstack 0
   964  000100                     roundf@F525:
   965                           	opt callstack 0
   966  000100                     	ds	4
   967  000104                     floorf@F524:
   968                           	opt callstack 0
   969  000104                     	ds	4
   970  000108                     ___fpclassifyf@F463:
   971                           	opt callstack 0
   972  000108                     	ds	4
   973  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   974                           	opt callstack 0
   975  00010C                     	ds	4
   976  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   977                           	opt callstack 0
   978  000110                     	ds	4
   979  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   980                           	opt callstack 0
   981  000114                     	ds	4
   982  000118                     _oldSensorEnfrente:
   983                           	opt callstack 0
   984  000118                     	ds	4
   985  00011C                     _oldSensorIzquierda:
   986                           	opt callstack 0
   987  00011C                     	ds	4
   988  000120                     _oldSensorDerecha:
   989                           	opt callstack 0
   990  000120                     	ds	4
   991  000124                     _sensorEnfrente:
   992                           	opt callstack 0
   993  000124                     	ds	4
   994  000128                     _sensorIzquierda:
   995                           	opt callstack 0
   996  000128                     	ds	4
   997  00012C                     _sensorDerecha:
   998                           	opt callstack 0
   999  00012C                     	ds	4
  1000  000130                     _nout:
  1001                           	opt callstack 0
  1002  000130                     	ds	2
  1003  000132                     _width:
  1004                           	opt callstack 0
  1005  000132                     	ds	2
  1006  000134                     _prec:
  1007                           	opt callstack 0
  1008  000134                     	ds	2
  1009  000136                     PID@difAnt:
  1010                           	opt callstack 0
  1011  000136                     	ds	2
  1012  000138                     comportamientoBasico@espejearCarroY:
  1013                           	opt callstack 0
  1014  000138                     	ds	1
  1015  000139                     _paredIzquierda:
  1016                           	opt callstack 0
  1017  000139                     	ds	1
  1018  00013A                     _paredDerecha:
  1019                           	opt callstack 0
  1020  00013A                     	ds	1
  1021  00013B                     _paredEnfrente:
  1022                           	opt callstack 0
  1023  00013B                     	ds	1
  1024  00013C                     _posicionDestinoY:
  1025                           	opt callstack 0
  1026  00013C                     	ds	1
  1027  00013D                     _posicionDestinoX:
  1028                           	opt callstack 0
  1029  00013D                     	ds	1
  1030  00013E                     _posicionCarroY:
  1031                           	opt callstack 0
  1032  00013E                     	ds	1
  1033  00013F                     _posicionCarroX:
  1034                           	opt callstack 0
  1035  00013F                     	ds	1
  1036  000140                     _crucesRecorridos:
  1037                           	opt callstack 0
  1038  000140                     	ds	1
  1039  000141                     _numMovimientosTotales:
  1040                           	opt callstack 0
  1041  000141                     	ds	1
  1042  000142                     _dbuf:
  1043                           	opt callstack 0
  1044  000142                     	ds	80
  1045  000192                     _buffer:
  1046                           	opt callstack 0
  1047  000192                     	ds	50
  1048  0001C4                     comportamientoBasico@caminoFinal:
  1049                           	opt callstack 0
  1050  0001C4                     	ds	20
  1051  0001D8                     comportamientoBasico@caminosRecorrer:
  1052                           	opt callstack 0
  1053  0001D8                     	ds	3
  1054  0001DB                     comportamientoBasico@numMovimientos:
  1055                           	opt callstack 0
  1056  0001DB                     	ds	2
  1057  0001DD                     comportamientoBasico@avanceRectoLargo:
  1058                           	opt callstack 0
  1059  0001DD                     	ds	1
  1060  0001DE                     comportamientoBasico@cambioOrientacionCarro:
  1061                           	opt callstack 0
  1062  0001DE                     	ds	1
  1063  0001DF                     comportamientoBasico@caminoActual:
  1064                           	opt callstack 0
  1065  0001DF                     	ds	1
  1066  0001E0                     comportamientoBasico@contCaminosRecorridos:
  1067                           	opt callstack 0
  1068  0001E0                     	ds	1
  1069  0001E1                     comportamientoBasico@posicionInvCruce:
  1070                           	opt callstack 0
  1071  0001E1                     	ds	1
  1072  0001E2                     comportamientoBasico@investigandoCruce:
  1073                           	opt callstack 0
  1074  0001E2                     	ds	1
  1075  0001E3                     comportamientoBasico@cruceDetectado:
  1076                           	opt callstack 0
  1077  0001E3                     	ds	1
  1078  0001E4                     comportamientoBasico@mapear:
  1079                           	opt callstack 0
  1080  0001E4                     	ds	1
  1081  0001E5                     comportamientoBasico@carroEspejeado:
  1082                           	opt callstack 0
  1083  0001E5                     	ds	1
  1084                           
  1085                           	psect	dataBANK1
  1086  0001FA                     __pdataBANK1:
  1087                           	opt callstack 0
  1088  0001FA                     _ida:
  1089                           	opt callstack 0
  1090  0001FA                     	ds	1
  1091  0001FB                     _pausa:
  1092                           	opt callstack 0
  1093  0001FB                     	ds	1
  1094  0001FC                     _SENSOR_PRIORIDAD_BAJA:
  1095                           	opt callstack 0
  1096  0001FC                     	ds	1
  1097  0001FD                     _SENSOR_PRIORIDAD_MEDIA:
  1098                           	opt callstack 0
  1099  0001FD                     	ds	1
  1100  0001FE                     _SENSOR_PRIORIDAD_ALTA:
  1101                           	opt callstack 0
  1102  0001FE                     	ds	1
  1103                           
  1104                           	psect	bssBANK2
  1105  000200                     __pbssBANK2:
  1106                           	opt callstack 0
  1107  000200                     comportamientoBasico@movimientosRealizados:
  1108                           	opt callstack 0
  1109  000200                     	ds	200
  1110                           
  1111                           	psect	cstackBANK2
  1112  0002C8                     __pcstackBANK2:
  1113                           	opt callstack 0
  1114  0002C8                     ??_comportamientoBasico:
  1115                           
  1116                           ; 1 bytes @ 0x0
  1117  0002C8                     	ds	4
  1118  0002CC                     main@iniciado:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x4
  1122  0002CC                     	ds	1
  1123                           
  1124                           	psect	cstackBANK1
  1125  0001E6                     __pcstackBANK1:
  1126                           	opt callstack 0
  1127  0001E6                     decidirDireccion@caminosRecorrer:
  1128                           	opt callstack 0
  1129  0001E6                     probarMapeoDireccionCruces@caminoFinal:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x0
  1133  0001E6                     	ds	2
  1134  0001E8                     probarMapeoDireccionCruces@caminoActual:
  1135                           	opt callstack 0
  1136  0001E8                     decidirDireccion@investigandoCruce:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x2
  1140  0001E8                     	ds	1
  1141  0001E9                     probarMapeoDireccionCruces@investigandoCruce:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x3
  1145  0001E9                     	ds	1
  1146  0001EA                     decidirDireccion@posicionInvCruce:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x4
  1150  0001EA                     	ds	1
  1151  0001EB                     probarMapeoDireccionCruces@posicionInvCruce:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x5
  1155  0001EB                     	ds	1
  1156  0001EC                     decidirDireccion@contCaminosRecorridos:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x6
  1160  0001EC                     	ds	1
  1161  0001ED                     probarMapeoDireccionCruces@mapear:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x7
  1165  0001ED                     	ds	1
  1166  0001EE                     decidirDireccion@caminoActual:
  1167                           	opt callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x8
  1170  0001EE                     	ds	1
  1171  0001EF                     probarMapeoDireccionCruces@cruceDetectado:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x9
  1175  0001EF                     	ds	1
  1176  0001F0                     decidirDireccion@cambioOrientacionCarro:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0xA
  1180  0001F0                     	ds	1
  1181  0001F1                     probarMapeoDireccionCruces@contCaminosRecorridos:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0xB
  1185  0001F1                     	ds	1
  1186  0001F2                     decidirDireccion@mapear:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 2 bytes @ 0xC
  1190  0001F2                     	ds	1
  1191  0001F3                     probarMapeoDireccionCruces@cambioOrientacionCarro:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 2 bytes @ 0xD
  1195  0001F3                     	ds	1
  1196  0001F4                     decidirDireccion@cruceDetectado:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0xE
  1200  0001F4                     	ds	2
  1201  0001F6                     decidirDireccion@avanceRectoLargo:
  1202                           	opt callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x10
  1205  0001F6                     	ds	2
  1206  0001F8                     decidirDireccion@caminoFinal:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x12
  1210  0001F8                     	ds	2
  1211                           
  1212                           	psect	cstackBANK0
  1213  000060                     __pcstackBANK0:
  1214                           	opt callstack 0
  1215  000060                     ___fldiv@rem:
  1216                           	opt callstack 0
  1217  000060                     _roundf$1828:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x0
  1221  000060                     	ds	4
  1222  000064                     ___fldiv@sign:
  1223                           	opt callstack 0
  1224  000064                     roundf@e:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x4
  1228  000064                     	ds	1
  1229  000065                     ___fldiv@new_exp:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x5
  1233  000065                     	ds	1
  1234  000066                     _roundf$1827:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x6
  1238  000066                     	ds	1
  1239  000067                     ___fldiv@grs:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x7
  1243  000067                     	ds	3
  1244  00006A                     roundf@u:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 4 bytes @ 0xA
  1248  00006A                     	ds	1
  1249  00006B                     ___fldiv@bexp:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 1 bytes @ 0xB
  1253  00006B                     	ds	1
  1254  00006C                     ___fldiv@aexp:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 1 bytes @ 0xC
  1258  00006C                     	ds	1
  1259  00006D                     ??_floorf:
  1260                           
  1261                           ; 1 bytes @ 0xD
  1262  00006D                     	ds	1
  1263  00006E                     roundf@y:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 4 bytes @ 0xE
  1267  00006E                     	ds	4
  1268  000072                     ?___fltol:
  1269                           	opt callstack 0
  1270  000072                     ___fltol@f1:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x12
  1274  000072                     	ds	1
  1275  000073                     floorf@m:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x13
  1279  000073                     	ds	3
  1280  000076                     ??___fltol:
  1281                           
  1282                           ; 1 bytes @ 0x16
  1283  000076                     	ds	1
  1284  000077                     floorf@e:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x17
  1288  000077                     	ds	2
  1289  000079                     floorf@u:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x19
  1293  000079                     	ds	1
  1294  00007A                     ___fltol@sign1:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x1A
  1298  00007A                     	ds	1
  1299  00007B                     ___fltol@exp1:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x1B
  1303  00007B                     	ds	1
  1304  00007C                     pwmDuty@cicloTrabajo:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x1C
  1308  00007C                     	ds	1
  1309  00007D                     ?_efgtoa:
  1310                           	opt callstack 0
  1311  00007D                     efgtoa@fp:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x1D
  1315  00007D                     	ds	1
  1316  00007E                     pwmDuty@channel:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 1 bytes @ 0x1E
  1320  00007E                     	ds	1
  1321  00007F                     ??_pwmDuty:
  1322  00007F                     efgtoa@f:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x1F
  1326  00007F                     	ds	4
  1327  000083                     efgtoa@c:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x23
  1331  000083                     	ds	1
  1332  000084                     ??_efgtoa:
  1333  000084                     pwmDuty@duty:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 4 bytes @ 0x24
  1337  000084                     	ds	4
  1338  000088                     ??_PID:
  1339  000088                     moverCarrito@carroEspejeado:
  1340                           	opt callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x28
  1343  000088                     	ds	1
  1344  000089                     efgtoa@ou:
  1345                           	opt callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x29
  1348  000089                     	ds	1
  1349  00008A                     moverCarrito@avanceRectoLargo:
  1350                           	opt callstack 0
  1351  00008A                     _PID$1826:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x2A
  1355  00008A                     	ds	2
  1356  00008C                     ??_moverCarrito:
  1357                           
  1358                           ; 1 bytes @ 0x2C
  1359  00008C                     	ds	1
  1360  00008D                     _efgtoa$923:
  1361                           	opt callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x2D
  1364  00008D                     	ds	1
  1365  00008E                     moverCarrito@espejearCarroY:
  1366                           	opt callstack 0
  1367  00008E                     PID@velocidadIzquierda:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x2E
  1371  00008E                     	ds	1
  1372  00008F                     _efgtoa$924:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x2F
  1376  00008F                     	ds	1
  1377  000090                     _PID$737:
  1378                           	opt callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x30
  1381  000090                     	ds	1
  1382  000091                     _efgtoa$928:
  1383                           	opt callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x31
  1386  000091                     	ds	1
  1387  000092                     PID@velocidadDerecha:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x32
  1391  000092                     	ds	1
  1392  000093                     _efgtoa$932:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x33
  1396  000093                     	ds	1
  1397  000094                     _PID$739:
  1398                           	opt callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x34
  1401  000094                     	ds	1
  1402  000095                     _efgtoa$933:
  1403                           	opt callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x35
  1406  000095                     	ds	1
  1407  000096                     PID@dif:
  1408                           	opt callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x36
  1411  000096                     	ds	1
  1412  000097                     _efgtoa$934:
  1413                           	opt callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x37
  1416  000097                     	ds	1
  1417  000098                     PID@error:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x38
  1421  000098                     	ds	1
  1422  000099                     efgtoa@t:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x39
  1426  000099                     	ds	1
  1427  00009A                     regresarAlCruce@movimientos:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x3A
  1431  00009A                     	ds	1
  1432  00009B                     efgtoa@pp:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x3B
  1436  00009B                     	ds	1
  1437  00009C                     regresarAlCruce@numMovimientos:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x3C
  1441  00009C                     	ds	1
  1442  00009D                     efgtoa@m:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x3D
  1446  00009D                     	ds	1
  1447  00009E                     regresarAlCruce@i:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 2 bytes @ 0x3E
  1451  00009E                     	ds	1
  1452  00009F                     efgtoa@ne:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x3F
  1456  00009F                     	ds	2
  1457  0000A1                     efgtoa@d:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x41
  1461  0000A1                     	ds	2
  1462  0000A3                     efgtoa@sign:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x43
  1466  0000A3                     	ds	2
  1467  0000A5                     efgtoa@p:
  1468                           	opt callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x45
  1471  0000A5                     	ds	2
  1472  0000A7                     efgtoa@nmode:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 1 bytes @ 0x47
  1476  0000A7                     	ds	1
  1477  0000A8                     efgtoa@w:
  1478                           	opt callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x48
  1481  0000A8                     	ds	2
  1482  0000AA                     efgtoa@mode:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x4A
  1486  0000AA                     	ds	1
  1487  0000AB                     efgtoa@h:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 4 bytes @ 0x4B
  1491  0000AB                     	ds	4
  1492  0000AF                     efgtoa@l:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x4F
  1496  0000AF                     	ds	4
  1497  0000B3                     efgtoa@i:
  1498                           	opt callstack 0
  1499                           
  1500                           ; 2 bytes @ 0x53
  1501  0000B3                     	ds	2
  1502  0000B5                     efgtoa@g:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x55
  1506  0000B5                     	ds	4
  1507  0000B9                     efgtoa@e:
  1508                           	opt callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x59
  1511  0000B9                     	ds	2
  1512  0000BB                     efgtoa@n:
  1513                           	opt callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x5B
  1516  0000BB                     	ds	2
  1517  0000BD                     efgtoa@u:
  1518                           	opt callstack 0
  1519                           
  1520                           ; 4 bytes @ 0x5D
  1521  0000BD                     	ds	4
  1522  0000C1                     ?_vfpfcnvrt:
  1523                           	opt callstack 0
  1524  0000C1                     vfpfcnvrt@fp:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x61
  1528  0000C1                     	ds	2
  1529  0000C3                     vfpfcnvrt@fmt:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x63
  1533  0000C3                     	ds	2
  1534  0000C5                     vfpfcnvrt@ap:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x65
  1538  0000C5                     	ds	2
  1539  0000C7                     ??_vfpfcnvrt:
  1540                           
  1541                           ; 1 bytes @ 0x67
  1542  0000C7                     	ds	4
  1543  0000CB                     vfpfcnvrt@ll:
  1544                           	opt callstack 0
  1545                           
  1546                           ; 8 bytes @ 0x6B
  1547  0000CB                     	ds	8
  1548  0000D3                     _vfpfcnvrt$948:
  1549                           	opt callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x73
  1552  0000D3                     	ds	2
  1553  0000D5                     _vfpfcnvrt$954:
  1554                           	opt callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x75
  1557  0000D5                     	ds	2
  1558  0000D7                     vfpfcnvrt@f:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 4 bytes @ 0x77
  1562  0000D7                     	ds	4
  1563  0000DB                     vfpfcnvrt@ct:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 3 bytes @ 0x7B
  1567  0000DB                     	ds	3
  1568  0000DE                     vfpfcnvrt@c:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 1 bytes @ 0x7E
  1572  0000DE                     	ds	1
  1573  0000DF                     ?_vfprintf:
  1574                           	opt callstack 0
  1575  0000DF                     vfprintf@fp:
  1576                           	opt callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x7F
  1579  0000DF                     	ds	2
  1580  0000E1                     vfprintf@fmt:
  1581                           	opt callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x81
  1584  0000E1                     	ds	2
  1585  0000E3                     vfprintf@ap:
  1586                           	opt callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x83
  1589  0000E3                     	ds	2
  1590  0000E5                     vfprintf@cfmt:
  1591                           	opt callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x85
  1594  0000E5                     	ds	2
  1595  0000E7                     ?_sprintf:
  1596                           	opt callstack 0
  1597  0000E7                     sprintf@s:
  1598                           	opt callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x87
  1601  0000E7                     	ds	2
  1602  0000E9                     sprintf@fmt:
  1603                           	opt callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x89
  1606  0000E9                     	ds	10
  1607  0000F3                     sprintf@ap:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 2 bytes @ 0x93
  1611  0000F3                     	ds	2
  1612  0000F5                     sprintf@f:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 6 bytes @ 0x95
  1616  0000F5                     	ds	6
  1617  0000FB                     ??_decidirDireccion:
  1618  0000FB                     ??_probarMapeoDireccionCruces:
  1619  0000FB                     visualizarPasosRealizados@numMovimientos:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x9B
  1623  0000FB                     	ds	2
  1624  0000FD                     ??_visualizarPasosRealizados:
  1625                           
  1626                           ; 1 bytes @ 0x9D
  1627  0000FD                     	ds	1
  1628  0000FE                     comportamientoBasico@direccionElegida:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 1 bytes @ 0x9E
  1632  0000FE                     	ds	1
  1633                           
  1634                           	psect	cstackCOMRAM
  1635  000001                     __pcstackCOMRAM:
  1636                           	opt callstack 0
  1637  000001                     ??_antiRebote:
  1638  000001                     
  1639                           ; 1 bytes @ 0x0
  1640  000001                     	ds	2
  1641  000003                     antiRebote@pin:
  1642                           	opt callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x2
  1645  000003                     	ds	1
  1646  000004                     ??_boton:
  1647                           
  1648                           ; 1 bytes @ 0x3
  1649  000004                     	ds	2
  1650  000006                     ??_forzarParoAuto:
  1651  000006                     ??_configPwm:
  1652  000006                     ??_forzarReversa:
  1653  000006                     ??_forzarAvanceRecto:
  1654  000006                     ??_forzarGiroIzquierda:
  1655  000006                     ??_forzarGiroDerecha:
  1656  000006                     ?_strlen:
  1657                           	opt callstack 0
  1658  000006                     ?___fpclassifyf:
  1659                           	opt callstack 0
  1660  000006                     ?_isupper:
  1661                           	opt callstack 0
  1662  000006                     ?_isdigit:
  1663                           	opt callstack 0
  1664  000006                     ?_strncmp:
  1665                           	opt callstack 0
  1666  000006                     ?_isspace:
  1667                           	opt callstack 0
  1668  000006                     ?_dameLecturaAdc:
  1669                           	opt callstack 0
  1670  000006                     ?___wmul:
  1671                           	opt callstack 0
  1672  000006                     ?___awdiv:
  1673                           	opt callstack 0
  1674  000006                     ?___awmod:
  1675                           	opt callstack 0
  1676  000006                     ?___lwdiv:
  1677                           	opt callstack 0
  1678  000006                     ?___lmul:
  1679                           	opt callstack 0
  1680  000006                     ?___flneg:
  1681                           	opt callstack 0
  1682  000006                     ?___aodiv:
  1683                           	opt callstack 0
  1684  000006                     ?___aomod:
  1685                           	opt callstack 0
  1686  000006                     UART_write@dato:
  1687                           	opt callstack 0
  1688  000006                     limpiarMovimientos@movimientos:
  1689                           	opt callstack 0
  1690  000006                     ___wmul@multiplier:
  1691                           	opt callstack 0
  1692  000006                     ___awdiv@dividend:
  1693                           	opt callstack 0
  1694  000006                     ___awmod@dividend:
  1695                           	opt callstack 0
  1696  000006                     ___lwdiv@dividend:
  1697                           	opt callstack 0
  1698  000006                     isdigit@c:
  1699                           	opt callstack 0
  1700  000006                     isspace@c:
  1701                           	opt callstack 0
  1702  000006                     isupper@c:
  1703                           	opt callstack 0
  1704  000006                     fputc@c:
  1705                           	opt callstack 0
  1706  000006                     strcpy@dest:
  1707                           	opt callstack 0
  1708  000006                     strlen@s:
  1709                           	opt callstack 0
  1710  000006                     strncmp@_l:
  1711                           	opt callstack 0
  1712  000006                     ___lmul@multiplier:
  1713                           	opt callstack 0
  1714  000006                     ___fleq@ff1:
  1715                           	opt callstack 0
  1716  000006                     ___flneg@f1:
  1717                           	opt callstack 0
  1718  000006                     ___fpclassifyf@x:
  1719                           	opt callstack 0
  1720  000006                     ___aodiv@dividend:
  1721                           	opt callstack 0
  1722  000006                     ___aomod@dividend:
  1723                           	opt callstack 0
  1724                           
  1725                           ; 8 bytes @ 0x5
  1726  000006                     	ds	1
  1727  000007                     UART_printf@cadena:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x6
  1731  000007                     	ds	1
  1732  000008                     ??_mover:
  1733  000008                     ??_isupper:
  1734  000008                     ??_isdigit:
  1735  000008                     ??_isspace:
  1736  000008                     ??_dameLecturaAdc:
  1737  000008                     configPwm@channel:
  1738                           	opt callstack 0
  1739  000008                     limpiarMovimientos@numMovimientos:
  1740                           	opt callstack 0
  1741  000008                     ___wmul@multiplicand:
  1742                           	opt callstack 0
  1743  000008                     ___awdiv@divisor:
  1744                           	opt callstack 0
  1745  000008                     ___awmod@divisor:
  1746                           	opt callstack 0
  1747  000008                     ___lwdiv@divisor:
  1748                           	opt callstack 0
  1749  000008                     fputc@fp:
  1750                           	opt callstack 0
  1751  000008                     strcpy@src:
  1752                           	opt callstack 0
  1753  000008                     strlen@a:
  1754                           	opt callstack 0
  1755  000008                     strncmp@_r:
  1756                           	opt callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x7
  1759  000008                     	ds	1
  1760  000009                     ??_mostrarDireccionElegida:
  1761                           
  1762                           ; 1 bytes @ 0x8
  1763  000009                     	ds	1
  1764  00000A                     ??_fputc:
  1765  00000A                     ??___fpclassifyf:
  1766  00000A                     ??_strcpy:
  1767  00000A                     dameLecturaAdc@canalLeer:
  1768                           	opt callstack 0
  1769  00000A                     ___awdiv@counter:
  1770                           	opt callstack 0
  1771  00000A                     ___awmod@counter:
  1772                           	opt callstack 0
  1773  00000A                     ___lwdiv@counter:
  1774                           	opt callstack 0
  1775  00000A                     ___wmul@product:
  1776                           	opt callstack 0
  1777  00000A                     strncmp@n:
  1778                           	opt callstack 0
  1779  00000A                     ___lmul@multiplicand:
  1780                           	opt callstack 0
  1781  00000A                     ___fleq@ff2:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 4 bytes @ 0x9
  1785  00000A                     	ds	1
  1786  00000B                     seLlegoAlDestino@llegoDestino:
  1787                           	opt callstack 0
  1788  00000B                     mostrarDireccionElegida@direccionElegida:
  1789                           	opt callstack 0
  1790  00000B                     ___awdiv@sign:
  1791                           	opt callstack 0
  1792  00000B                     ___awmod@sign:
  1793                           	opt callstack 0
  1794  00000B                     ___lwdiv@quotient:
  1795                           	opt callstack 0
  1796                           
  1797                           ; 2 bytes @ 0xA
  1798  00000B                     	ds	1
  1799  00000C                     ??_strncmp:
  1800  00000C                     ?_tolower:
  1801                           	opt callstack 0
  1802  00000C                     _isspace$1458:
  1803                           	opt callstack 0
  1804  00000C                     limpiarMovimientos@i:
  1805                           	opt callstack 0
  1806  00000C                     ___awdiv@quotient:
  1807                           	opt callstack 0
  1808  00000C                     strcpy@s:
  1809                           	opt callstack 0
  1810  00000C                     tolower@c:
  1811                           	opt callstack 0
  1812                           
  1813                           ; 2 bytes @ 0xB
  1814  00000C                     	ds	1
  1815  00000D                     ?_atoi:
  1816                           	opt callstack 0
  1817  00000D                     ?___xxtofl:
  1818                           	opt callstack 0
  1819  00000D                     atoi@s:
  1820                           	opt callstack 0
  1821  00000D                     strncmp@l:
  1822                           	opt callstack 0
  1823  00000D                     ___xxtofl@val:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 4 bytes @ 0xC
  1827  00000D                     	ds	1
  1828  00000E                     ??_tolower:
  1829  00000E                     ??___fleq:
  1830  00000E                     ___fpclassifyf@e:
  1831                           	opt callstack 0
  1832  00000E                     strcpy@d:
  1833                           	opt callstack 0
  1834  00000E                     ___lmul@product:
  1835                           	opt callstack 0
  1836  00000E                     ___aodiv@divisor:
  1837                           	opt callstack 0
  1838  00000E                     ___aomod@divisor:
  1839                           	opt callstack 0
  1840                           
  1841                           ; 8 bytes @ 0xD
  1842  00000E                     	ds	1
  1843  00000F                     ??_atoi:
  1844  00000F                     fputs@s:
  1845                           	opt callstack 0
  1846  00000F                     strncmp@r:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 2 bytes @ 0xE
  1850  00000F                     	ds	1
  1851  000010                     ___fpclassifyf@u:
  1852                           	opt callstack 0
  1853                           
  1854                           ; 4 bytes @ 0xF
  1855  000010                     	ds	1
  1856  000011                     ??___xxtofl:
  1857  000011                     fputs@fp:
  1858                           	opt callstack 0
  1859                           
  1860                           ; 2 bytes @ 0x10
  1861  000011                     	ds	1
  1862  000012                     ?___aldiv:
  1863                           	opt callstack 0
  1864  000012                     _tolower$1557:
  1865                           	opt callstack 0
  1866  000012                     ___aldiv@dividend:
  1867                           	opt callstack 0
  1868                           
  1869                           ; 4 bytes @ 0x11
  1870  000012                     	ds	1
  1871  000013                     fputs@c:
  1872                           	opt callstack 0
  1873  000013                     atoi@neg:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x12
  1877  000013                     	ds	1
  1878  000014                     fputs@i:
  1879                           	opt callstack 0
  1880                           
  1881                           ; 2 bytes @ 0x13
  1882  000014                     	ds	1
  1883  000015                     ___xxtofl@sign:
  1884                           	opt callstack 0
  1885  000015                     _atoi$1427:
  1886                           	opt callstack 0
  1887                           
  1888                           ; 2 bytes @ 0x14
  1889  000015                     	ds	1
  1890  000016                     ?_pad:
  1891                           	opt callstack 0
  1892  000016                     ___aodiv@counter:
  1893                           	opt callstack 0
  1894  000016                     ___aomod@counter:
  1895                           	opt callstack 0
  1896  000016                     ___xxtofl@exp:
  1897                           	opt callstack 0
  1898  000016                     pad@fp:
  1899                           	opt callstack 0
  1900  000016                     ___aldiv@divisor:
  1901                           	opt callstack 0
  1902                           
  1903                           ; 4 bytes @ 0x15
  1904  000016                     	ds	1
  1905  000017                     ___aodiv@sign:
  1906                           	opt callstack 0
  1907  000017                     ___aomod@sign:
  1908                           	opt callstack 0
  1909  000017                     _atoi$1429:
  1910                           	opt callstack 0
  1911  000017                     ___xxtofl@arg:
  1912                           	opt callstack 0
  1913                           
  1914                           ; 4 bytes @ 0x16
  1915  000017                     	ds	1
  1916  000018                     ?_abs:
  1917                           	opt callstack 0
  1918  000018                     pad@buf:
  1919                           	opt callstack 0
  1920  000018                     abs@a:
  1921                           	opt callstack 0
  1922  000018                     ___aodiv@quotient:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 8 bytes @ 0x17
  1926  000018                     	ds	1
  1927  000019                     _atoi$1428:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 1 bytes @ 0x18
  1931  000019                     	ds	1
  1932  00001A                     ??_abs:
  1933  00001A                     ___aldiv@counter:
  1934                           	opt callstack 0
  1935  00001A                     pad@p:
  1936                           	opt callstack 0
  1937  00001A                     atoi@n:
  1938                           	opt callstack 0
  1939                           
  1940                           ; 2 bytes @ 0x19
  1941  00001A                     	ds	1
  1942  00001B                     ?___flmul:
  1943                           	opt callstack 0
  1944  00001B                     ?_dameDistancia:
  1945                           	opt callstack 0
  1946  00001B                     ___aldiv@sign:
  1947                           	opt callstack 0
  1948  00001B                     ___flmul@b:
  1949                           	opt callstack 0
  1950                           
  1951                           ; 4 bytes @ 0x1A
  1952  00001B                     	ds	1
  1953  00001C                     ??_pad:
  1954  00001C                     ___aldiv@quotient:
  1955                           	opt callstack 0
  1956                           
  1957                           ; 4 bytes @ 0x1B
  1958  00001C                     	ds	1
  1959  00001D                     pad@i:
  1960                           	opt callstack 0
  1961                           
  1962                           ; 2 bytes @ 0x1C
  1963  00001D                     	ds	2
  1964  00001F                     ??_dameDistancia:
  1965  00001F                     pad@w:
  1966                           	opt callstack 0
  1967  00001F                     ___flmul@a:
  1968                           	opt callstack 0
  1969                           
  1970                           ; 4 bytes @ 0x1E
  1971  00001F                     	ds	1
  1972  000020                     ?_map:
  1973                           	opt callstack 0
  1974  000020                     map@x:
  1975                           	opt callstack 0
  1976  000020                     UART_init@BAUD:
  1977                           	opt callstack 0
  1978                           
  1979                           ; 4 bytes @ 0x1F
  1980  000020                     	ds	1
  1981  000021                     ?_ctoa:
  1982                           	opt callstack 0
  1983  000021                     ?_dtoa:
  1984                           	opt callstack 0
  1985  000021                     dameDistancia@numeroSensor:
  1986                           	opt callstack 0
  1987  000021                     ctoa@fp:
  1988                           	opt callstack 0
  1989  000021                     dtoa@fp:
  1990                           	opt callstack 0
  1991                           
  1992                           ; 2 bytes @ 0x20
  1993  000021                     	ds	1
  1994  000022                     dameDistancia@distancia:
  1995                           	opt callstack 0
  1996                           
  1997                           ; 4 bytes @ 0x21
  1998  000022                     	ds	1
  1999  000023                     ??___flmul:
  2000  000023                     ctoa@c:
  2001                           	opt callstack 0
  2002  000023                     dtoa@d:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 8 bytes @ 0x22
  2006  000023                     	ds	1
  2007  000024                     ctoa@w:
  2008                           	opt callstack 0
  2009  000024                     map@in_min:
  2010                           	opt callstack 0
  2011                           
  2012                           ; 4 bytes @ 0x23
  2013  000024                     	ds	2
  2014  000026                     dameDistancia@conteo:
  2015                           	opt callstack 0
  2016                           
  2017                           ; 2 bytes @ 0x25
  2018  000026                     	ds	1
  2019  000027                     ___flmul@sign:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 1 bytes @ 0x26
  2023  000027                     	ds	1
  2024  000028                     ___flmul@aexp:
  2025                           	opt callstack 0
  2026  000028                     map@in_max:
  2027                           	opt callstack 0
  2028  000028                     _UART_init$1825:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 4 bytes @ 0x27
  2032  000028                     	ds	1
  2033  000029                     ___flmul@grs:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 4 bytes @ 0x28
  2037  000029                     	ds	2
  2038  00002B                     ??_dtoa:
  2039                           
  2040                           ; 1 bytes @ 0x2A
  2041  00002B                     	ds	1
  2042  00002C                     map@out_min:
  2043                           	opt callstack 0
  2044                           
  2045                           ; 4 bytes @ 0x2B
  2046  00002C                     	ds	1
  2047  00002D                     ___flmul@bexp:
  2048                           	opt callstack 0
  2049                           
  2050                           ; 1 bytes @ 0x2C
  2051  00002D                     	ds	1
  2052  00002E                     ___flmul@prod:
  2053                           	opt callstack 0
  2054                           
  2055                           ; 4 bytes @ 0x2D
  2056  00002E                     	ds	2
  2057  000030                     map@out_max:
  2058                           	opt callstack 0
  2059                           
  2060                           ; 4 bytes @ 0x2F
  2061  000030                     	ds	2
  2062  000032                     ___flmul@temp:
  2063                           	opt callstack 0
  2064                           
  2065                           ; 2 bytes @ 0x31
  2066  000032                     	ds	1
  2067  000033                     _dtoa$900:
  2068                           	opt callstack 0
  2069                           
  2070                           ; 2 bytes @ 0x32
  2071  000033                     	ds	1
  2072  000034                     ?___fladd:
  2073                           	opt callstack 0
  2074  000034                     ___flge@ff1:
  2075                           	opt callstack 0
  2076  000034                     ___fladd@b:
  2077                           	opt callstack 0
  2078                           
  2079                           ; 4 bytes @ 0x33
  2080  000034                     	ds	1
  2081  000035                     dtoa@p:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 2 bytes @ 0x34
  2085  000035                     	ds	2
  2086  000037                     dtoa@w:
  2087                           	opt callstack 0
  2088                           
  2089                           ; 2 bytes @ 0x36
  2090  000037                     	ds	1
  2091  000038                     ___flge@ff2:
  2092                           	opt callstack 0
  2093  000038                     ___fladd@a:
  2094                           	opt callstack 0
  2095                           
  2096                           ; 4 bytes @ 0x37
  2097  000038                     	ds	1
  2098  000039                     dtoa@s:
  2099                           	opt callstack 0
  2100                           
  2101                           ; 2 bytes @ 0x38
  2102  000039                     	ds	2
  2103  00003B                     dtoa@n:
  2104                           	opt callstack 0
  2105                           
  2106                           ; 8 bytes @ 0x3A
  2107  00003B                     	ds	1
  2108  00003C                     ??___fladd:
  2109  00003C                     ??___flge:
  2110                           
  2111                           ; 1 bytes @ 0x3B
  2112  00003C                     	ds	4
  2113  000040                     ___fladd@signs:
  2114                           	opt callstack 0
  2115  000040                     hayCruce@caminosRecorrer:
  2116                           	opt callstack 0
  2117                           
  2118                           ; 2 bytes @ 0x3F
  2119  000040                     	ds	1
  2120  000041                     ___fladd@aexp:
  2121                           	opt callstack 0
  2122                           
  2123                           ; 1 bytes @ 0x40
  2124  000041                     	ds	1
  2125  000042                     hayCruce@investigandoCruce:
  2126                           	opt callstack 0
  2127  000042                     ___fladd@bexp:
  2128                           	opt callstack 0
  2129                           
  2130                           ; 1 bytes @ 0x41
  2131  000042                     	ds	1
  2132  000043                     hayCruce@contCaminos:
  2133                           	opt callstack 0
  2134  000043                     ___fladd@grs:
  2135                           	opt callstack 0
  2136  000043                     dtoa@i:
  2137                           	opt callstack 0
  2138                           
  2139                           ; 2 bytes @ 0x42
  2140  000043                     	ds	1
  2141  000044                     ?___fldiv:
  2142                           	opt callstack 0
  2143  000044                     ?___flsub:
  2144                           	opt callstack 0
  2145  000044                     ___flsub@b:
  2146                           	opt callstack 0
  2147  000044                     ___fldiv@b:
  2148                           	opt callstack 0
  2149                           
  2150                           ; 4 bytes @ 0x43
  2151  000044                     	ds	4
  2152  000048                     ___flsub@a:
  2153                           	opt callstack 0
  2154  000048                     ___fldiv@a:
  2155                           	opt callstack 0
  2156                           
  2157                           ; 4 bytes @ 0x47
  2158  000048                     	ds	4
  2159  00004C                     ??___fldiv:
  2160  00004C                     ?_roundf:
  2161                           	opt callstack 0
  2162  00004C                     roundf@x:
  2163                           	opt callstack 0
  2164                           
  2165                           ; 4 bytes @ 0x4B
  2166  00004C                     	ds	4
  2167  000050                     ??_roundf:
  2168  000050                     ?_floorf:
  2169                           	opt callstack 0
  2170  000050                     floorf@x:
  2171                           	opt callstack 0
  2172                           
  2173                           ; 4 bytes @ 0x4F
  2174  000050                     	ds	4
  2175  000054                     ??_forzarEspejeoIzquierda:
  2176  000054                     ??_forzarEspejeoDerecha:
  2177  000054                     decidirDireccion@direccionElegida:
  2178                           	opt callstack 0
  2179                           
  2180                           ; 1 bytes @ 0x53
  2181  000054                     	ds	1
  2182  000055                     
  2183                           ; 1 bytes @ 0x54
  2184 ;;
  2185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2186 ;;
  2187 ;; *************** function _main *****************
  2188 ;; Defined at:
  2189 ;;		line 1358 in file "main.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  numMovimient    2    0        int 
  2194 ;;  iniciado        1    4[BANK2 ] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      void 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0
  2205 ;;      Locals:         0       0       0       3       0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2207 ;;      Totals:         0       0       0       3       0       0       0       0       0
  2208 ;;Total ram usage:        3 bytes
  2209 ;; Hardware stack levels required when called:   12
  2210 ;; This function calls:
  2211 ;;		_UART_init
  2212 ;;		_comportamientoBasico
  2213 ;;		_configPwm
  2214 ;;		_configurarAdc
  2215 ;;		_forzarParoAuto
  2216 ;;		_inicializarComportamientoBasico
  2217 ;;		_visualizarPasosRealizados
  2218 ;; This function is called by:
  2219 ;;		Startup code after reset
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text0
  2224  004C42                     __ptext0:
  2225                           	opt callstack 0
  2226  004C42                     _main:
  2227                           	opt callstack 19
  2228  004C42                     
  2229                           ;main.c: 1360:     T_BOOL iniciado = 0;
  2230  004C42  0E00               	movlw	0
  2231  004C44  0102               	movlb	2	; () banked
  2232  004C46  6FCC               	movwf	main@iniciado& (0+255),b
  2233  004C48                     
  2234                           ; BSR set to: 2
  2235                           ;main.c: 1364:     INTCONbits.GIE = 1;
  2236  004C48  8EF2               	bsf	242,7,c	;volatile
  2237  004C4A                     
  2238                           ; BSR set to: 2
  2239                           ;main.c: 1365:     INTCONbits.INT0IE = 1;
  2240  004C4A  88F2               	bsf	242,4,c	;volatile
  2241  004C4C                     
  2242                           ; BSR set to: 2
  2243                           ;main.c: 1366:     INTCON2bits.INTEDG0 = 1;
  2244  004C4C  8CF1               	bsf	241,6,c	;volatile
  2245  004C4E                     
  2246                           ; BSR set to: 2
  2247                           ;main.c: 1368:     TRISD3 = 0;
  2248  004C4E  9695               	bcf	3989,3,c	;volatile
  2249  004C50                     
  2250                           ; BSR set to: 2
  2251                           ;main.c: 1369:     TRISB1 = 1;
  2252  004C50  8293               	bsf	3987,1,c	;volatile
  2253  004C52                     
  2254                           ; BSR set to: 2
  2255                           ;main.c: 1370:     TRISB2 = 1;
  2256  004C52  8493               	bsf	3987,2,c	;volatile
  2257  004C54                     
  2258                           ; BSR set to: 2
  2259                           ;main.c: 1371:     TRISB3 = 1;
  2260  004C54  8693               	bsf	3987,3,c	;volatile
  2261  004C56                     
  2262                           ; BSR set to: 2
  2263                           ;main.c: 1373:     TRISB4 = 0;
  2264  004C56  9893               	bcf	3987,4,c	;volatile
  2265  004C58                     
  2266                           ; BSR set to: 2
  2267                           ;main.c: 1374:     TRISB5 = 0;
  2268  004C58  9A93               	bcf	3987,5,c	;volatile
  2269  004C5A                     
  2270                           ; BSR set to: 2
  2271                           ;main.c: 1375:     TRISB6 = 0;
  2272  004C5A  9C93               	bcf	3987,6,c	;volatile
  2273  004C5C                     
  2274                           ; BSR set to: 2
  2275                           ;main.c: 1376:     TRISB7 = 0;
  2276  004C5C  9E93               	bcf	3987,7,c	;volatile
  2277  004C5E                     
  2278                           ; BSR set to: 2
  2279                           ;main.c: 1378:     TRISDbits.RD2 = 0;
  2280  004C5E  9495               	bcf	149,2,c	;volatile
  2281  004C60                     
  2282                           ; BSR set to: 2
  2283                           ;main.c: 1379:     TRISB0 = 1;
  2284  004C60  8093               	bsf	3987,0,c	;volatile
  2285  004C62                     
  2286                           ; BSR set to: 2
  2287                           ;main.c: 1381:     LATD3 = 0;
  2288  004C62  968C               	bcf	3980,3,c	;volatile
  2289  004C64                     
  2290                           ; BSR set to: 2
  2291                           ;main.c: 1382:     LATB4 = 0;
  2292  004C64  988A               	bcf	3978,4,c	;volatile
  2293  004C66                     
  2294                           ; BSR set to: 2
  2295                           ;main.c: 1383:     LATB5 = 0;
  2296  004C66  9A8A               	bcf	3978,5,c	;volatile
  2297  004C68                     
  2298                           ; BSR set to: 2
  2299                           ;main.c: 1384:     LATB6 = 0;
  2300  004C68  9C8A               	bcf	3978,6,c	;volatile
  2301  004C6A                     
  2302                           ; BSR set to: 2
  2303                           ;main.c: 1385:     LATB7 = 0;
  2304  004C6A  9E8A               	bcf	3978,7,c	;volatile
  2305  004C6C                     
  2306                           ; BSR set to: 2
  2307                           ;main.c: 1386:     LATD2 = 0;
  2308  004C6C  948C               	bcf	3980,2,c	;volatile
  2309                           
  2310                           ;main.c: 1389:     T1CON = 0b00000000;
  2311  004C6E  0E00               	movlw	0
  2312  004C70  6ECD               	movwf	205,c	;volatile
  2313  004C72                     
  2314                           ; BSR set to: 2
  2315                           ;main.c: 1391:     configPwm(1);
  2316  004C72  0E01               	movlw	1
  2317  004C74  ECA1  F029         	call	_configPwm
  2318  004C78                     
  2319                           ;main.c: 1392:     configPwm(2);
  2320  004C78  0E02               	movlw	2
  2321  004C7A  ECA1  F029         	call	_configPwm
  2322  004C7E                     
  2323                           ;main.c: 1393:     configurarAdc();
  2324  004C7E  EC20  F02C         	call	_configurarAdc	;wreg free
  2325  004C82                     
  2326                           ;main.c: 1395:     UART_init(9600);
  2327  004C82  0E80               	movlw	128
  2328  004C84  6E20               	movwf	UART_init@BAUD^0,c
  2329  004C86  0E25               	movlw	37
  2330  004C88  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2331  004C8A  0E00               	movlw	0
  2332  004C8C  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2333  004C8E  0E00               	movlw	0
  2334  004C90  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2335  004C92  EC73  F027         	call	_UART_init	;wreg free
  2336  004C96                     l10909:
  2337                           
  2338                           ;main.c: 1400:         if (!pausa) {
  2339  004C96  0101               	movlb	1	; () banked
  2340  004C98  51FB               	movf	_pausa& (0+255),w,b
  2341  004C9A  A4D8               	btfss	status,2,c
  2342  004C9C  EF52  F026         	goto	u12081
  2343  004CA0  EF54  F026         	goto	u12080
  2344  004CA4                     u12081:
  2345  004CA4  EF67  F026         	goto	l10925
  2346  004CA8                     u12080:
  2347  004CA8                     
  2348                           ; BSR set to: 1
  2349                           ;main.c: 1402:             if (!iniciado) {
  2350  004CA8  0102               	movlb	2	; () banked
  2351  004CAA  51CC               	movf	main@iniciado& (0+255),w,b
  2352  004CAC  A4D8               	btfss	status,2,c
  2353  004CAE  EF5B  F026         	goto	u12091
  2354  004CB2  EF5D  F026         	goto	u12090
  2355  004CB6                     u12091:
  2356  004CB6  EF61  F026         	goto	l10921
  2357  004CBA                     u12090:
  2358  004CBA                     
  2359                           ; BSR set to: 2
  2360                           ;main.c: 1403:                 iniciado = 1;
  2361  004CBA  0E01               	movlw	1
  2362  004CBC  6FCC               	movwf	main@iniciado& (0+255),b
  2363  004CBE                     
  2364                           ; BSR set to: 2
  2365                           ;main.c: 1404:                 inicializarComportamientoBasico();
  2366  004CBE  ECF1  F029         	call	_inicializarComportamientoBasico	;wreg free
  2367  004CC2                     l10921:
  2368                           
  2369                           ;main.c: 1415:             comportamientoBasico();
  2370  004CC2  ECCD  F010         	call	_comportamientoBasico	;wreg free
  2371  004CC6                     
  2372                           ;main.c: 1416:             forzarParoAuto();
  2373  004CC6  EC08  F02C         	call	_forzarParoAuto	;wreg free
  2374                           
  2375                           ;main.c: 1418:         } else {
  2376  004CCA  EF4B  F026         	goto	l10909
  2377  004CCE                     l10925:
  2378                           
  2379                           ; BSR set to: 1
  2380                           ;main.c: 1420:             iniciado = 0;
  2381  004CCE  0E00               	movlw	0
  2382  004CD0  0102               	movlb	2	; () banked
  2383  004CD2  6FCC               	movwf	main@iniciado& (0+255),b
  2384  004CD4  EF4B  F026         	goto	l10909
  2385  004CD8  EF07  F000         	goto	start
  2386  004CDC                     __end_of_main:
  2387                           	opt callstack 0
  2388                           
  2389 ;; *************** function _visualizarPasosRealizados *****************
  2390 ;; Defined at:
  2391 ;;		line 194 in file "main.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  numMovimient    2  155[BANK0 ] unsigned int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2405 ;;      Params:         0       2       0       0       0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2408 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        4 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:   10
  2412 ;; This function calls:
  2413 ;;		_UART_printf
  2414 ;;		_sprintf
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text1
  2421  004A40                     __ptext1:
  2422                           	opt callstack 0
  2423  004A40                     _visualizarPasosRealizados:
  2424                           	opt callstack 20
  2425  004A40                     
  2426                           ;main.c: 196:     switch (mouse.curr_state) {
  2427  004A40  EF42  F025         	goto	l10549
  2428  004A44                     l10539:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;main.c: 198:             UART_printf("Enfrente\n");
  2432  004A44  0ED2               	movlw	low STR_7
  2433  004A46  6E07               	movwf	UART_printf@cadena^0,c
  2434  004A48  0E7F               	movlw	high STR_7
  2435  004A4A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2436  004A4C  EC45  F028         	call	_UART_printf	;wreg free
  2437                           
  2438                           ;main.c: 199:             break;
  2439  004A50  EF60  F025         	goto	l10551
  2440  004A54                     l10541:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;main.c: 202:             UART_printf("Izquierda\n");
  2444  004A54  0EC7               	movlw	low STR_8
  2445  004A56  6E07               	movwf	UART_printf@cadena^0,c
  2446  004A58  0E7F               	movlw	high STR_8
  2447  004A5A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2448  004A5C  EC45  F028         	call	_UART_printf	;wreg free
  2449                           
  2450                           ;main.c: 203:             break;
  2451  004A60  EF60  F025         	goto	l10551
  2452  004A64                     l10543:
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;main.c: 206:             UART_printf("Derecha\n");
  2456  004A64  0EDC               	movlw	low STR_9
  2457  004A66  6E07               	movwf	UART_printf@cadena^0,c
  2458  004A68  0E7F               	movlw	high STR_9
  2459  004A6A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2460  004A6C  EC45  F028         	call	_UART_printf	;wreg free
  2461                           
  2462                           ;main.c: 207:             break;
  2463  004A70  EF60  F025         	goto	l10551
  2464  004A74                     l10545:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;main.c: 210:             UART_printf("Alto\n");
  2468  004A74  0EE5               	movlw	low STR_10
  2469  004A76  6E07               	movwf	UART_printf@cadena^0,c
  2470  004A78  0E7F               	movlw	high STR_10
  2471  004A7A  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2472  004A7C  EC45  F028         	call	_UART_printf	;wreg free
  2473                           
  2474                           ;main.c: 211:             break;
  2475  004A80  EF60  F025         	goto	l10551
  2476  004A84                     l10549:
  2477  004A84  5057               	movf	_mouse^0,w,c
  2478  004A86  0100               	movlb	0	; () banked
  2479  004A88  6FFD               	movwf	??_visualizarPasosRealizados& (0+255),b
  2480  004A8A  6BFE               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2481                           
  2482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2483                           ; Switch size 1, requested type "simple"
  2484                           ; Number of cases is 1, Range of values is 0 to 0
  2485                           ; switch strategies available:
  2486                           ; Name         Instructions Cycles
  2487                           ; simple_byte            4     3 (average)
  2488                           ;	Chosen strategy is simple_byte
  2489  004A8C  51FE               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2490  004A8E  0A00               	xorlw	0	; case 0
  2491  004A90  B4D8               	btfsc	status,2,c
  2492  004A92  EF4D  F025         	goto	l11257
  2493  004A96  EF60  F025         	goto	l10551
  2494  004A9A                     l11257:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ; Switch size 1, requested type "simple"
  2498                           ; Number of cases is 4, Range of values is 1 to 4
  2499                           ; switch strategies available:
  2500                           ; Name         Instructions Cycles
  2501                           ; simple_byte           13     7 (average)
  2502                           ;	Chosen strategy is simple_byte
  2503  004A9A  51FD               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2504  004A9C  0A01               	xorlw	1	; case 1
  2505  004A9E  B4D8               	btfsc	status,2,c
  2506  004AA0  EF22  F025         	goto	l10539
  2507  004AA4  0A03               	xorlw	3	; case 2
  2508  004AA6  B4D8               	btfsc	status,2,c
  2509  004AA8  EF2A  F025         	goto	l10541
  2510  004AAC  0A01               	xorlw	1	; case 3
  2511  004AAE  B4D8               	btfsc	status,2,c
  2512  004AB0  EF32  F025         	goto	l10543
  2513  004AB4  0A07               	xorlw	7	; case 4
  2514  004AB6  B4D8               	btfsc	status,2,c
  2515  004AB8  EF3A  F025         	goto	l10545
  2516  004ABC  EF60  F025         	goto	l10551
  2517  004AC0                     l10551:
  2518                           
  2519                           ;main.c: 214:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2520  004AC0  0E92               	movlw	low _buffer
  2521  004AC2  0100               	movlb	0	; () banked
  2522  004AC4  6FE7               	movwf	sprintf@s& (0+255),b
  2523  004AC6  0E01               	movlw	high _buffer
  2524  004AC8  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2525  004ACA  0ECA               	movlw	low STR_11
  2526  004ACC  6FE9               	movwf	sprintf@fmt& (0+255),b
  2527  004ACE  0E7E               	movlw	high STR_11
  2528  004AD0  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2529  004AD2  C0FB  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2530  004AD6  C0FC  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2531  004ADA  EC4F  F029         	call	_sprintf	;wreg free
  2532  004ADE                     
  2533                           ;main.c: 215:     UART_printf(buffer);
  2534  004ADE  0E92               	movlw	low _buffer
  2535  004AE0  6E07               	movwf	UART_printf@cadena^0,c
  2536  004AE2  0E01               	movlw	high _buffer
  2537  004AE4  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2538  004AE6  EC45  F028         	call	_UART_printf	;wreg free
  2539  004AEA  0012               	return		;funcret
  2540  004AEC                     __end_of_visualizarPasosRealizados:
  2541                           	opt callstack 0
  2542                           
  2543 ;; *************** function _inicializarComportamientoBasico *****************
  2544 ;; Defined at:
  2545 ;;		line 233 in file "main.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    6
  2566 ;; This function calls:
  2567 ;;		_dameDistancia
  2568 ;;		_velocidadEstandar
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text2
  2575  0053E2                     __ptext2:
  2576                           	opt callstack 0
  2577  0053E2                     _inicializarComportamientoBasico:
  2578                           	opt callstack 24
  2579  0053E2                     
  2580                           ;main.c: 235:     mouse.curr_state = ENFRENTE;
  2581  0053E2  0E01               	movlw	1
  2582  0053E4  6E57               	movwf	_mouse^0,c
  2583  0053E6                     
  2584                           ;main.c: 237:     oldSensorDerecha = dameDistancia(DERECHA);
  2585  0053E6  0E03               	movlw	3
  2586  0053E8  EC78  F01F         	call	_dameDistancia
  2587  0053EC  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  2588  0053F0  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  2589  0053F4  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  2590  0053F8  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  2591  0053FC                     
  2592                           ;main.c: 238:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  2593  0053FC  0E02               	movlw	2
  2594  0053FE  EC78  F01F         	call	_dameDistancia
  2595  005402  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  2596  005406  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  2597  00540A  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  2598  00540E  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  2599  005412                     
  2600                           ;main.c: 239:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  2601  005412  0E01               	movlw	1
  2602  005414  EC78  F01F         	call	_dameDistancia
  2603  005418  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  2604  00541C  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  2605  005420  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  2606  005424  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  2607  005428                     
  2608                           ;main.c: 241:     velocidadEstandar();
  2609  005428  EC8D  F02B         	call	_velocidadEstandar	;wreg free
  2610  00542C  0012               	return		;funcret
  2611  00542E                     __end_of_inicializarComportamientoBasico:
  2612                           	opt callstack 0
  2613                           
  2614 ;; *************** function _configurarAdc *****************
  2615 ;; Defined at:
  2616 ;;		line 7 in file "./adc.h"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2630 ;;      Params:         0       0       0       0       0       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2633 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2634 ;;Total ram usage:        0 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    2
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text3
  2645  005840                     __ptext3:
  2646                           	opt callstack 0
  2647  005840                     _configurarAdc:
  2648                           	opt callstack 28
  2649  005840                     
  2650                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  2651  005840  0E0E               	movlw	14
  2652  005842  6EC1               	movwf	193,c	;volatile
  2653                           
  2654                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  2655  005844  0EA5               	movlw	165
  2656  005846  6EC0               	movwf	192,c	;volatile
  2657  005848  0012               	return		;funcret
  2658  00584A                     __end_of_configurarAdc:
  2659                           	opt callstack 0
  2660                           
  2661 ;; *************** function _configPwm *****************
  2662 ;; Defined at:
  2663 ;;		line 47 in file "./pwm.h"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  channel         1    wreg     unsigned char 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  channel         1    7[COMRAM] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2680 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:        3 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    2
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_main
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text4
  2692  005342                     __ptext4:
  2693                           	opt callstack 0
  2694  005342                     _configPwm:
  2695                           	opt callstack 28
  2696                           
  2697                           ;incstack = 0
  2698                           ;configPwm@channel stored from wreg
  2699  005342  6E08               	movwf	configPwm@channel^0,c
  2700  005344                     
  2701                           ;./pwm.h: 56:         T2CKPS0 = 1;
  2702  005344  80CA               	bsf	4042,0,c	;volatile
  2703                           
  2704                           ;./pwm.h: 57:         T2CKPS1 = 1;
  2705  005346  82CA               	bsf	4042,1,c	;volatile
  2706  005348                     
  2707                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  2708  005348  0E7C               	movlw	124
  2709  00534A  6ECB               	movwf	203,c	;volatile
  2710                           
  2711                           ;./pwm.h: 63:     switch (channel) {
  2712  00534C  EFB2  F029         	goto	l10505
  2713  005350                     l157:
  2714                           
  2715                           ;./pwm.h: 66:             TRISC2 = 0;
  2716  005350  9494               	bcf	3988,2,c	;volatile
  2717                           
  2718                           ;./pwm.h: 67:             CCP1M3 = 1;
  2719  005352  86BD               	bsf	4029,3,c	;volatile
  2720                           
  2721                           ;./pwm.h: 68:             CCP1M2 = 1;
  2722  005354  84BD               	bsf	4029,2,c	;volatile
  2723                           
  2724                           ;./pwm.h: 71:             break;
  2725  005356  EFC7  F029         	goto	l158
  2726  00535A                     l159:
  2727                           
  2728                           ;./pwm.h: 74:             TRISC1 = 0;
  2729  00535A  9294               	bcf	3988,1,c	;volatile
  2730                           
  2731                           ;./pwm.h: 75:             CCP2M3 = 1;
  2732  00535C  86BA               	bsf	4026,3,c	;volatile
  2733                           
  2734                           ;./pwm.h: 76:             CCP2M2 = 1;
  2735  00535E  84BA               	bsf	4026,2,c	;volatile
  2736                           
  2737                           ;./pwm.h: 77:             break;
  2738  005360  EFC7  F029         	goto	l158
  2739  005364                     l10505:
  2740  005364  5008               	movf	configPwm@channel^0,w,c
  2741  005366  6E06               	movwf	??_configPwm^0,c
  2742  005368  6A07               	clrf	(??_configPwm+1)^0,c
  2743                           
  2744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2745                           ; Switch size 1, requested type "simple"
  2746                           ; Number of cases is 1, Range of values is 0 to 0
  2747                           ; switch strategies available:
  2748                           ; Name         Instructions Cycles
  2749                           ; simple_byte            4     3 (average)
  2750                           ;	Chosen strategy is simple_byte
  2751  00536A  5007               	movf	(??_configPwm+1)^0,w,c
  2752  00536C  0A00               	xorlw	0	; case 0
  2753  00536E  B4D8               	btfsc	status,2,c
  2754  005370  EFBC  F029         	goto	l11259
  2755  005374  EFC7  F029         	goto	l158
  2756  005378                     l11259:
  2757                           
  2758                           ; Switch size 1, requested type "simple"
  2759                           ; Number of cases is 2, Range of values is 1 to 2
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte            7     4 (average)
  2763                           ;	Chosen strategy is simple_byte
  2764  005378  5006               	movf	??_configPwm^0,w,c
  2765  00537A  0A01               	xorlw	1	; case 1
  2766  00537C  B4D8               	btfsc	status,2,c
  2767  00537E  EFA8  F029         	goto	l157
  2768  005382  0A03               	xorlw	3	; case 2
  2769  005384  B4D8               	btfsc	status,2,c
  2770  005386  EFAD  F029         	goto	l159
  2771  00538A  EFC7  F029         	goto	l158
  2772  00538E                     l158:
  2773                           
  2774                           ;./pwm.h: 81:     TMR2ON = 1;
  2775  00538E  84CA               	bsf	4042,2,c	;volatile
  2776  005390  0012               	return		;funcret
  2777  005392                     __end_of_configPwm:
  2778                           	opt callstack 0
  2779                           
  2780 ;; *************** function _comportamientoBasico *****************
  2781 ;; Defined at:
  2782 ;;		line 245 in file "main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  direccionEle    1  158[BANK0 ] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0
  2797 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       2       0       0       0       0       0
  2799 ;;      Totals:         0       1       0       2       0       0       0       0       0
  2800 ;;Total ram usage:        3 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:   11
  2803 ;; This function calls:
  2804 ;;		_PID
  2805 ;;		_UART_printf
  2806 ;;		_decidirDireccion
  2807 ;;		_forzarParoAuto
  2808 ;;		_leerSensores
  2809 ;;		_limpiarMovimientos
  2810 ;;		_moverCarrito
  2811 ;;		_probarMapeoDireccionCruces
  2812 ;;		_regresarAlCruce
  2813 ;;		_velocidadBaja
  2814 ;;		_velocidadEstandar
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text5
  2821  00219A                     __ptext5:
  2822                           	opt callstack 0
  2823  00219A                     _comportamientoBasico:
  2824                           	opt callstack 19
  2825  00219A                     
  2826                           ;main.c: 247:     static T_UBYTE espejearCarroY = 0;;main.c: 248:     static T_UBYTE car
      +                          roEspejeado = 0;;main.c: 249:     static T_UBYTE movimientosRealizados[200];;main.c: 250
      +                          :     static T_UBYTE caminoFinal[20];;main.c: 251:     static T_UINT numMovimientos = 0;
      +                          ;main.c: 252:     static T_UBYTE mapear = 0;;main.c: 253:     static T_UBYTE cruceDetect
      +                          ado = 0;;main.c: 254:     static T_UBYTE caminosRecorrer[3];;main.c: 255:     static T_U
      +                          BYTE investigandoCruce = 0;;main.c: 256:     static T_UBYTE posicionInvCruce = 0;
  2827  00219A  0E00               	movlw	0
  2828  00219C  0100               	movlb	0	; () banked
  2829  00219E  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2830  0021A0                     
  2831                           ; BSR set to: 0
  2832                           ;main.c: 264:     moverCarrito(espejearCarroY, &carroEspejeado, &avanceRectoLargo);
  2833  0021A0  0EE5               	movlw	low comportamientoBasico@carroEspejeado
  2834  0021A2  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  2835  0021A4  0E01               	movlw	high comportamientoBasico@carroEspejeado
  2836  0021A6  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  2837  0021A8  0EDD               	movlw	low comportamientoBasico@avanceRectoLargo
  2838  0021AA  6F8A               	movwf	moverCarrito@avanceRectoLargo& (0+255),b
  2839  0021AC  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2840  0021AE  6F8B               	movwf	(moverCarrito@avanceRectoLargo+1)& (0+255),b
  2841  0021B0  0101               	movlb	1	; () banked
  2842  0021B2  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  2843  0021B4  ECAF  F020         	call	_moverCarrito
  2844  0021B8                     
  2845                           ;main.c: 266:     if (!llegoDestino) {
  2846  0021B8  0100               	movlb	0	; () banked
  2847  0021BA  51FF               	movf	_llegoDestino& (0+255),w,b
  2848  0021BC  A4D8               	btfss	status,2,c
  2849  0021BE  EFE3  F010         	goto	u11781
  2850  0021C2  EFE5  F010         	goto	u11780
  2851  0021C6                     u11781:
  2852  0021C6  EF91  F012         	goto	l10699
  2853  0021CA                     u11780:
  2854  0021CA                     
  2855                           ; BSR set to: 0
  2856                           ;main.c: 268:         if (!caminoEncontrado) {
  2857  0021CA  5059               	movf	_caminoEncontrado^0,w,c
  2858  0021CC  A4D8               	btfss	status,2,c
  2859  0021CE  EFEB  F010         	goto	u11791
  2860  0021D2  EFED  F010         	goto	u11790
  2861  0021D6                     u11791:
  2862  0021D6  EF18  F011         	goto	l10591
  2863  0021DA                     u11790:
  2864  0021DA                     
  2865                           ; BSR set to: 0
  2866                           ;main.c: 272:             if (mapear)
  2867  0021DA  0101               	movlb	1	; () banked
  2868  0021DC  51E4               	movf	comportamientoBasico@mapear& (0+255),w,b
  2869  0021DE  B4D8               	btfsc	status,2,c
  2870  0021E0  EFF4  F010         	goto	u11801
  2871  0021E4  EFF6  F010         	goto	u11800
  2872  0021E8                     u11801:
  2873  0021E8  EF18  F011         	goto	l10591
  2874  0021EC                     u11800:
  2875  0021EC                     
  2876                           ; BSR set to: 1
  2877                           ;main.c: 273:             {;main.c: 274:                 if (numMovimientos < 200)
  2878  0021EC  51DC               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2879  0021EE  E107               	bnz	u11811
  2880  0021F0  0EC8               	movlw	200
  2881  0021F2  5DDB               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2882  0021F4  B0D8               	btfsc	status,0,c
  2883  0021F6  EFFF  F010         	goto	u11811
  2884  0021FA  EF01  F011         	goto	u11810
  2885  0021FE                     u11811:
  2886  0021FE  EF0D  F011         	goto	l10585
  2887  002202                     u11810:
  2888  002202                     
  2889                           ; BSR set to: 1
  2890                           ;main.c: 275:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  2891  002202  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2892  002204  25DB               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2893  002206  6ED9               	movwf	fsr2l,c
  2894  002208  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2895  00220A  21DC               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2896  00220C  6EDA               	movwf	fsr2h,c
  2897  00220E  C057  FFDF         	movff	_mouse,indf2
  2898  002212                     
  2899                           ; BSR set to: 1
  2900  002212  4BDB               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  2901  002214  2BDC               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  2902  002216  EF18  F011         	goto	l10591
  2903  00221A                     l10585:
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;main.c: 277:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  2907  00221A  0E7B               	movlw	low STR_12
  2908  00221C  6E07               	movwf	UART_printf@cadena^0,c
  2909  00221E  0E7D               	movlw	high STR_12
  2910  002220  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2911  002222  EC45  F028         	call	_UART_printf	;wreg free
  2912  002226                     
  2913                           ;main.c: 278:                     forzarParoAuto();
  2914  002226  EC08  F02C         	call	_forzarParoAuto	;wreg free
  2915  00222A                     
  2916                           ;main.c: 279:                     pausa = 1;
  2917  00222A  0E01               	movlw	1
  2918  00222C  0101               	movlb	1	; () banked
  2919  00222E  6FFB               	movwf	_pausa& (0+255),b
  2920  002230                     l10591:
  2921                           
  2922                           ;main.c: 307:         leerSensores();
  2923  002230  EC08  F01E         	call	_leerSensores	;wreg free
  2924  002234                     
  2925                           ;main.c: 309:         direccionElegida = decidirDireccion(caminosRecorrer, &investigando
      +                          Cruce,
  2926  002234  0ED8               	movlw	low comportamientoBasico@caminosRecorrer
  2927  002236  0101               	movlb	1	; () banked
  2928  002238  6FE6               	movwf	decidirDireccion@caminosRecorrer& (0+255),b
  2929  00223A  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  2930  00223C  6FE7               	movwf	(decidirDireccion@caminosRecorrer+1)& (0+255),b
  2931  00223E  0EE2               	movlw	low comportamientoBasico@investigandoCruce
  2932  002240  6FE8               	movwf	decidirDireccion@investigandoCruce& (0+255),b
  2933  002242  0E01               	movlw	high comportamientoBasico@investigandoCruce
  2934  002244  6FE9               	movwf	(decidirDireccion@investigandoCruce+1)& (0+255),b
  2935  002246  0EE1               	movlw	low comportamientoBasico@posicionInvCruce
  2936  002248  6FEA               	movwf	decidirDireccion@posicionInvCruce& (0+255),b
  2937  00224A  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  2938  00224C  6FEB               	movwf	(decidirDireccion@posicionInvCruce+1)& (0+255),b
  2939  00224E  0EE0               	movlw	low comportamientoBasico@contCaminosRecorridos
  2940  002250  6FEC               	movwf	decidirDireccion@contCaminosRecorridos& (0+255),b
  2941  002252  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  2942  002254  6FED               	movwf	(decidirDireccion@contCaminosRecorridos+1)& (0+255),b
  2943  002256  0EDF               	movlw	low comportamientoBasico@caminoActual
  2944  002258  6FEE               	movwf	decidirDireccion@caminoActual& (0+255),b
  2945  00225A  0E01               	movlw	high comportamientoBasico@caminoActual
  2946  00225C  6FEF               	movwf	(decidirDireccion@caminoActual+1)& (0+255),b
  2947  00225E  0EDE               	movlw	low comportamientoBasico@cambioOrientacionCarro
  2948  002260  6FF0               	movwf	decidirDireccion@cambioOrientacionCarro& (0+255),b
  2949  002262  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  2950  002264  6FF1               	movwf	(decidirDireccion@cambioOrientacionCarro+1)& (0+255),b
  2951  002266  0EE4               	movlw	low comportamientoBasico@mapear
  2952  002268  6FF2               	movwf	decidirDireccion@mapear& (0+255),b
  2953  00226A  0E01               	movlw	high comportamientoBasico@mapear
  2954  00226C  6FF3               	movwf	(decidirDireccion@mapear+1)& (0+255),b
  2955  00226E  0EE3               	movlw	low comportamientoBasico@cruceDetectado
  2956  002270  6FF4               	movwf	decidirDireccion@cruceDetectado& (0+255),b
  2957  002272  0E01               	movlw	high comportamientoBasico@cruceDetectado
  2958  002274  6FF5               	movwf	(decidirDireccion@cruceDetectado+1)& (0+255),b
  2959  002276  0EDD               	movlw	low comportamientoBasico@avanceRectoLargo
  2960  002278  6FF6               	movwf	decidirDireccion@avanceRectoLargo& (0+255),b
  2961  00227A  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2962  00227C  6FF7               	movwf	(decidirDireccion@avanceRectoLargo+1)& (0+255),b
  2963  00227E  0EC4               	movlw	low comportamientoBasico@caminoFinal
  2964  002280  6FF8               	movwf	decidirDireccion@caminoFinal& (0+255),b
  2965  002282  0E01               	movlw	high comportamientoBasico@caminoFinal
  2966  002284  6FF9               	movwf	(decidirDireccion@caminoFinal+1)& (0+255),b
  2967  002286  ECE6  F005         	call	_decidirDireccion	;wreg free
  2968  00228A  0100               	movlb	0	; () banked
  2969  00228C  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2970  00228E  EF91  F012         	goto	l10699
  2971  002292                     l10595:
  2972                           
  2973                           ; BSR set to: 2
  2974                           ;main.c: 323:                     mapear = 0;
  2975  002292  0E00               	movlw	0
  2976  002294  0101               	movlb	1	; () banked
  2977  002296  6FE4               	movwf	comportamientoBasico@mapear& (0+255),b
  2978                           
  2979                           ;main.c: 324:                     espejearCarroY = 1;
  2980  002298  0E01               	movlw	1
  2981  00229A  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  2982                           
  2983                           ;main.c: 325:                     mouse.Next_state = IZQUIERDA;
  2984  00229C  0E02               	movlw	2
  2985  00229E  6E58               	movwf	(_mouse+1)^0,c
  2986                           
  2987                           ;main.c: 326:                     break;
  2988  0022A0  EFAF  F012         	goto	l378
  2989  0022A4                     l10597:
  2990                           
  2991                           ; BSR set to: 2
  2992                           ;main.c: 330:                     if (!paredEnfrente)
  2993  0022A4  0101               	movlb	1	; () banked
  2994  0022A6  513B               	movf	_paredEnfrente& (0+255),w,b
  2995  0022A8  A4D8               	btfss	status,2,c
  2996  0022AA  EF59  F011         	goto	u11821
  2997  0022AE  EF5B  F011         	goto	u11820
  2998  0022B2                     u11821:
  2999  0022B2  EF5F  F011         	goto	l10601
  3000  0022B6                     u11820:
  3001  0022B6                     
  3002                           ; BSR set to: 1
  3003                           ;main.c: 331:                         velocidadBaja();
  3004  0022B6  ECA0  F02B         	call	_velocidadBaja	;wreg free
  3005  0022BA  EF61  F011         	goto	l10603
  3006  0022BE                     l10601:
  3007                           
  3008                           ; BSR set to: 1
  3009                           ;main.c: 333:                         PID();
  3010  0022BE  ECC8  F017         	call	_PID	;wreg free
  3011  0022C2                     l10603:
  3012                           
  3013                           ;main.c: 335:                     mouse.Next_state = ENFRENTE;
  3014  0022C2  0E01               	movlw	1
  3015  0022C4  6E58               	movwf	(_mouse+1)^0,c
  3016                           
  3017                           ;main.c: 336:                     break;
  3018  0022C6  EFAF  F012         	goto	l378
  3019  0022CA                     l10605:
  3020                           
  3021                           ; BSR set to: 2
  3022                           ;main.c: 339:                     velocidadEstandar();
  3023  0022CA  EC8D  F02B         	call	_velocidadEstandar	;wreg free
  3024  0022CE                     l10607:
  3025                           
  3026                           ;main.c: 340:                     mouse.Next_state = IZQUIERDA;
  3027  0022CE  0E02               	movlw	2
  3028  0022D0  6E58               	movwf	(_mouse+1)^0,c
  3029                           
  3030                           ;main.c: 341:                     break;
  3031  0022D2  EFAF  F012         	goto	l378
  3032  0022D6                     l10609:
  3033                           
  3034                           ; BSR set to: 2
  3035                           ;main.c: 344:                     velocidadEstandar();
  3036  0022D6  EC8D  F02B         	call	_velocidadEstandar	;wreg free
  3037  0022DA                     
  3038                           ;main.c: 345:                     mouse.Next_state = DERECHA;
  3039  0022DA  0E03               	movlw	3
  3040  0022DC  6E58               	movwf	(_mouse+1)^0,c
  3041                           
  3042                           ;main.c: 346:                     break;
  3043  0022DE  EFAF  F012         	goto	l378
  3044  0022E2                     l10613:
  3045                           
  3046                           ;main.c: 350:                     mouse.Next_state = ALTO;
  3047  0022E2  0E04               	movlw	4
  3048  0022E4  6E58               	movwf	(_mouse+1)^0,c
  3049                           
  3050                           ;main.c: 351:                     break;
  3051  0022E6  EFAF  F012         	goto	l378
  3052  0022EA                     l10617:
  3053                           
  3054                           ; BSR set to: 2
  3055  0022EA  0100               	movlb	0	; () banked
  3056  0022EC  51FE               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  3057  0022EE  0102               	movlb	2	; () banked
  3058  0022F0  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3059  0022F2  6BC9               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3060                           
  3061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3062                           ; Switch size 1, requested type "simple"
  3063                           ; Number of cases is 1, Range of values is 0 to 0
  3064                           ; switch strategies available:
  3065                           ; Name         Instructions Cycles
  3066                           ; simple_byte            4     3 (average)
  3067                           ;	Chosen strategy is simple_byte
  3068  0022F4  51C9               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3069  0022F6  0A00               	xorlw	0	; case 0
  3070  0022F8  B4D8               	btfsc	status,2,c
  3071  0022FA  EF81  F011         	goto	l11261
  3072  0022FE  EFAF  F012         	goto	l378
  3073  002302                     l11261:
  3074                           
  3075                           ; BSR set to: 2
  3076                           ; Switch size 1, requested type "simple"
  3077                           ; Number of cases is 5, Range of values is 0 to 4
  3078                           ; switch strategies available:
  3079                           ; Name         Instructions Cycles
  3080                           ; simple_byte           16     9 (average)
  3081                           ;	Chosen strategy is simple_byte
  3082  002302  51C8               	movf	??_comportamientoBasico& (0+255),w,b
  3083  002304  0A00               	xorlw	0	; case 0
  3084  002306  B4D8               	btfsc	status,2,c
  3085  002308  EF49  F011         	goto	l10595
  3086  00230C  0A01               	xorlw	1	; case 1
  3087  00230E  B4D8               	btfsc	status,2,c
  3088  002310  EF52  F011         	goto	l10597
  3089  002314  0A03               	xorlw	3	; case 2
  3090  002316  B4D8               	btfsc	status,2,c
  3091  002318  EF65  F011         	goto	l10605
  3092  00231C  0A01               	xorlw	1	; case 3
  3093  00231E  B4D8               	btfsc	status,2,c
  3094  002320  EF6B  F011         	goto	l10609
  3095  002324  0A07               	xorlw	7	; case 4
  3096  002326  B4D8               	btfsc	status,2,c
  3097  002328  EF71  F011         	goto	l10613
  3098  00232C  EFAF  F012         	goto	l378
  3099  002330                     l10619:
  3100                           
  3101                           ; BSR set to: 2
  3102                           ;main.c: 359:             if (carroEspejeado && espejearCarroY && !llegoDestino) {
  3103  002330  0101               	movlb	1	; () banked
  3104  002332  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3105  002334  B4D8               	btfsc	status,2,c
  3106  002336  EF9F  F011         	goto	u11831
  3107  00233A  EFA1  F011         	goto	u11830
  3108  00233E                     u11831:
  3109  00233E  EFD4  F011         	goto	l10639
  3110  002342                     u11830:
  3111  002342                     
  3112                           ; BSR set to: 1
  3113  002342  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3114  002344  B4D8               	btfsc	status,2,c
  3115  002346  EFA7  F011         	goto	u11841
  3116  00234A  EFA9  F011         	goto	u11840
  3117  00234E                     u11841:
  3118  00234E  EFD4  F011         	goto	l10639
  3119  002352                     u11840:
  3120  002352                     
  3121                           ; BSR set to: 1
  3122  002352  0100               	movlb	0	; () banked
  3123  002354  51FF               	movf	_llegoDestino& (0+255),w,b
  3124  002356  A4D8               	btfss	status,2,c
  3125  002358  EFB0  F011         	goto	u11851
  3126  00235C  EFB2  F011         	goto	u11850
  3127  002360                     u11851:
  3128  002360  EFD4  F011         	goto	l10639
  3129  002364                     u11850:
  3130  002364                     
  3131                           ; BSR set to: 0
  3132                           ;main.c: 361:                 espejearCarroY = 0;
  3133  002364  0E00               	movlw	0
  3134  002366  0101               	movlb	1	; () banked
  3135  002368  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3136                           
  3137                           ;main.c: 362:                 carroEspejeado = 0;
  3138  00236A  0E00               	movlw	0
  3139  00236C  6FE5               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3140  00236E                     
  3141                           ; BSR set to: 1
  3142                           ;main.c: 364:                 regresarAlCruce(movimientosRealizados, numMovimientos);
  3143  00236E  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3144  002370  0100               	movlb	0	; () banked
  3145  002372  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  3146  002374  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3147  002376  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  3148  002378  C1DB  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  3149  00237C  C1DC  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  3150  002380  EC76  F025         	call	_regresarAlCruce	;wreg free
  3151  002384                     
  3152                           ;main.c: 365:                 limpiarMovimientos(movimientosRealizados, &numMovimientos)
      +                          ;
  3153  002384  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3154  002386  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  3155  002388  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3156  00238A  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  3157  00238C  0EDB               	movlw	low comportamientoBasico@numMovimientos
  3158  00238E  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  3159  002390  0E01               	movlw	high comportamientoBasico@numMovimientos
  3160  002392  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  3161  002394  ECC9  F029         	call	_limpiarMovimientos	;wreg free
  3162  002398                     
  3163                           ;main.c: 367:                 cruceDetectado = 0;
  3164  002398  0E00               	movlw	0
  3165  00239A  0101               	movlb	1	; () banked
  3166  00239C  6FE3               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  3167  00239E                     
  3168                           ; BSR set to: 1
  3169                           ;main.c: 368:                 posicionInvCruce = 1;
  3170  00239E  0E01               	movlw	1
  3171  0023A0  6FE1               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  3172  0023A2                     
  3173                           ; BSR set to: 1
  3174                           ;main.c: 369:                 contCaminosRecorridos++;
  3175  0023A2  2BE0               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  3176  0023A4  EF71  F011         	goto	l10613
  3177  0023A8                     l10639:
  3178  0023A8  0101               	movlb	1	; () banked
  3179  0023AA  5138               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3180  0023AC  B4D8               	btfsc	status,2,c
  3181  0023AE  EFDB  F011         	goto	u11861
  3182  0023B2  EFDD  F011         	goto	u11860
  3183  0023B6                     u11861:
  3184  0023B6  EF61  F011         	goto	l10603
  3185  0023BA                     u11860:
  3186  0023BA                     
  3187                           ; BSR set to: 1
  3188  0023BA  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3189  0023BC  B4D8               	btfsc	status,2,c
  3190  0023BE  EFE3  F011         	goto	u11871
  3191  0023C2  EFE5  F011         	goto	u11870
  3192  0023C6                     u11871:
  3193  0023C6  EF61  F011         	goto	l10603
  3194  0023CA                     u11870:
  3195  0023CA                     
  3196                           ; BSR set to: 1
  3197  0023CA  0100               	movlb	0	; () banked
  3198  0023CC  51FF               	movf	_llegoDestino& (0+255),w,b
  3199  0023CE  B4D8               	btfsc	status,2,c
  3200  0023D0  EFEC  F011         	goto	u11881
  3201  0023D4  EFEE  F011         	goto	u11880
  3202  0023D8                     u11881:
  3203  0023D8  EF61  F011         	goto	l10603
  3204  0023DC                     u11880:
  3205  0023DC                     
  3206                           ; BSR set to: 0
  3207                           ;main.c: 372:                 espejearCarroY = 0;
  3208  0023DC  0E00               	movlw	0
  3209  0023DE  0101               	movlb	1	; () banked
  3210  0023E0  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3211                           
  3212                           ;main.c: 373:                 mouse.Next_state = ALTO;
  3213  0023E2  0E04               	movlw	4
  3214  0023E4  6E58               	movwf	(_mouse+1)^0,c
  3215                           
  3216                           ;main.c: 375:             } else {
  3217  0023E6  EFAF  F012         	goto	l378
  3218  0023EA                     l10651:
  3219                           
  3220                           ; BSR set to: 2
  3221                           ;main.c: 387:             if (llegoDestino && carroEspejeado) {
  3222  0023EA  0100               	movlb	0	; () banked
  3223  0023EC  51FF               	movf	_llegoDestino& (0+255),w,b
  3224  0023EE  B4D8               	btfsc	status,2,c
  3225  0023F0  EFFC  F011         	goto	u11891
  3226  0023F4  EFFE  F011         	goto	u11890
  3227  0023F8                     u11891:
  3228  0023F8  EF2E  F012         	goto	l10675
  3229  0023FC                     u11890:
  3230  0023FC                     
  3231                           ; BSR set to: 0
  3232  0023FC  0101               	movlb	1	; () banked
  3233  0023FE  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3234  002400  B4D8               	btfsc	status,2,c
  3235  002402  EF05  F012         	goto	u11901
  3236  002406  EF07  F012         	goto	u11900
  3237  00240A                     u11901:
  3238  00240A  EF2E  F012         	goto	l10675
  3239  00240E                     u11900:
  3240  00240E                     
  3241                           ; BSR set to: 1
  3242                           ;main.c: 389:                 carroEspejeado = 0;
  3243  00240E  0E00               	movlw	0
  3244  002410  6FE5               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  3245                           
  3246                           ;main.c: 390:                 llegoDestino = 0;
  3247  002412  0E00               	movlw	0
  3248  002414  0100               	movlb	0	; () banked
  3249  002416  6FFF               	movwf	_llegoDestino& (0+255),b
  3250                           
  3251                           ;main.c: 391:                 caminoEncontrado = 1;
  3252  002418  0E01               	movlw	1
  3253  00241A  6E59               	movwf	_caminoEncontrado^0,c
  3254  00241C                     
  3255                           ; BSR set to: 0
  3256                           ;main.c: 393:                 forzarParoAuto();
  3257  00241C  EC08  F02C         	call	_forzarParoAuto	;wreg free
  3258  002420                     
  3259                           ;main.c: 394:                 pausa = 1;
  3260  002420  0E01               	movlw	1
  3261  002422  0101               	movlb	1	; () banked
  3262  002424  6FFB               	movwf	_pausa& (0+255),b
  3263  002426                     
  3264                           ; BSR set to: 1
  3265                           ;main.c: 396:                 if (ida) {
  3266  002426  51FA               	movf	_ida& (0+255),w,b
  3267  002428  B4D8               	btfsc	status,2,c
  3268  00242A  EF19  F012         	goto	u11911
  3269  00242E  EF1B  F012         	goto	u11910
  3270  002432                     u11911:
  3271  002432  EF21  F012         	goto	l10667
  3272  002436                     u11910:
  3273  002436                     
  3274                           ; BSR set to: 1
  3275                           ;main.c: 397:                     crucesRecorridos = numMovimientosTotales;
  3276  002436  C141  F140         	movff	_numMovimientosTotales,_crucesRecorridos
  3277  00243A                     
  3278                           ; BSR set to: 1
  3279                           ;main.c: 398:                     ida = 0;
  3280  00243A  0E00               	movlw	0
  3281  00243C  6FFA               	movwf	_ida& (0+255),b
  3282                           
  3283                           ;main.c: 399:                 } else {
  3284  00243E  EF61  F011         	goto	l10603
  3285  002442                     l10667:
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;main.c: 400:                     crucesRecorridos = 1;
  3289  002442  0E01               	movlw	1
  3290  002444  6F40               	movwf	_crucesRecorridos& (0+255),b
  3291  002446                     
  3292                           ; BSR set to: 1
  3293                           ;main.c: 401:                     UART_printf("\rSe regreso al punto de partida\r\n");
  3294  002446  0E65               	movlw	low STR_13
  3295  002448  6E07               	movwf	UART_printf@cadena^0,c
  3296  00244A  0E7E               	movlw	high STR_13
  3297  00244C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3298  00244E  EC45  F028         	call	_UART_printf	;wreg free
  3299  002452                     
  3300                           ;main.c: 402:                     ida = 1;
  3301  002452  0E01               	movlw	1
  3302  002454  0101               	movlb	1	; () banked
  3303  002456  6FFA               	movwf	_ida& (0+255),b
  3304  002458  EF61  F011         	goto	l10603
  3305  00245C                     l10675:
  3306  00245C  0100               	movlb	0	; () banked
  3307  00245E  51FF               	movf	_llegoDestino& (0+255),w,b
  3308  002460  B4D8               	btfsc	status,2,c
  3309  002462  EF35  F012         	goto	u11921
  3310  002466  EF37  F012         	goto	u11920
  3311  00246A                     u11921:
  3312  00246A  EF78  F012         	goto	l10689
  3313  00246E                     u11920:
  3314  00246E                     
  3315                           ; BSR set to: 0
  3316  00246E  0101               	movlb	1	; () banked
  3317  002470  51E5               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  3318  002472  A4D8               	btfss	status,2,c
  3319  002474  EF3E  F012         	goto	u11931
  3320  002478  EF40  F012         	goto	u11930
  3321  00247C                     u11931:
  3322  00247C  EF78  F012         	goto	l10689
  3323  002480                     u11930:
  3324  002480                     
  3325                           ; BSR set to: 1
  3326                           ;main.c: 409:                 probarMapeoDireccionCruces(caminoFinal, caminoActual, &inv
      +                          estigandoCruce,
  3327  002480  0EC4               	movlw	low comportamientoBasico@caminoFinal
  3328  002482  6FE6               	movwf	probarMapeoDireccionCruces@caminoFinal& (0+255),b
  3329  002484  0E01               	movlw	high comportamientoBasico@caminoFinal
  3330  002486  6FE7               	movwf	(probarMapeoDireccionCruces@caminoFinal+1)& (0+255),b
  3331  002488  C1DF  F1E8         	movff	comportamientoBasico@caminoActual,probarMapeoDireccionCruces@caminoActual
  3332  00248C  0EE2               	movlw	low comportamientoBasico@investigandoCruce
  3333  00248E  6FE9               	movwf	probarMapeoDireccionCruces@investigandoCruce& (0+255),b
  3334  002490  0E01               	movlw	high comportamientoBasico@investigandoCruce
  3335  002492  6FEA               	movwf	(probarMapeoDireccionCruces@investigandoCruce+1)& (0+255),b
  3336  002494  0EE1               	movlw	low comportamientoBasico@posicionInvCruce
  3337  002496  6FEB               	movwf	probarMapeoDireccionCruces@posicionInvCruce& (0+255),b
  3338  002498  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  3339  00249A  6FEC               	movwf	(probarMapeoDireccionCruces@posicionInvCruce+1)& (0+255),b
  3340  00249C  0EE4               	movlw	low comportamientoBasico@mapear
  3341  00249E  6FED               	movwf	probarMapeoDireccionCruces@mapear& (0+255),b
  3342  0024A0  0E01               	movlw	high comportamientoBasico@mapear
  3343  0024A2  6FEE               	movwf	(probarMapeoDireccionCruces@mapear+1)& (0+255),b
  3344  0024A4  0EE3               	movlw	low comportamientoBasico@cruceDetectado
  3345  0024A6  6FEF               	movwf	probarMapeoDireccionCruces@cruceDetectado& (0+255),b
  3346  0024A8  0E01               	movlw	high comportamientoBasico@cruceDetectado
  3347  0024AA  6FF0               	movwf	(probarMapeoDireccionCruces@cruceDetectado+1)& (0+255),b
  3348  0024AC  0EE0               	movlw	low comportamientoBasico@contCaminosRecorridos
  3349  0024AE  6FF1               	movwf	probarMapeoDireccionCruces@contCaminosRecorridos& (0+255),b
  3350  0024B0  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  3351  0024B2  6FF2               	movwf	(probarMapeoDireccionCruces@contCaminosRecorridos+1)& (0+255),b
  3352  0024B4  0EDE               	movlw	low comportamientoBasico@cambioOrientacionCarro
  3353  0024B6  6FF3               	movwf	probarMapeoDireccionCruces@cambioOrientacionCarro& (0+255),b
  3354  0024B8  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  3355  0024BA  6FF4               	movwf	(probarMapeoDireccionCruces@cambioOrientacionCarro+1)& (0+255),b
  3356  0024BC  ECB8  F022         	call	_probarMapeoDireccionCruces	;wreg free
  3357  0024C0                     
  3358                           ;main.c: 413:                 espejearCarroY = 1;
  3359  0024C0  0E01               	movlw	1
  3360  0024C2  0101               	movlb	1	; () banked
  3361  0024C4  6F38               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3362  0024C6                     
  3363                           ; BSR set to: 1
  3364                           ;main.c: 414:                 UART_printf("\rSe llego Al destino\r\n");
  3365  0024C6  0E7A               	movlw	low STR_14
  3366  0024C8  6E07               	movwf	UART_printf@cadena^0,c
  3367  0024CA  0E7F               	movlw	high STR_14
  3368  0024CC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3369  0024CE  EC45  F028         	call	_UART_printf	;wreg free
  3370  0024D2                     
  3371                           ;main.c: 415:                 _delay((unsigned long)((3000)*(4000000/4000.0)));
  3372  0024D2  0E10               	movlw	16
  3373  0024D4  0102               	movlb	2	; () banked
  3374  0024D6  6FC9               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3375  0024D8  0E39               	movlw	57
  3376  0024DA  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3377  0024DC  0E0D               	movlw	13
  3378  0024DE                     u12107:
  3379  0024DE  2EE8               	decfsz	wreg,f,c
  3380  0024E0  D7FE               	bra	u12107
  3381  0024E2  2FC8               	decfsz	??_comportamientoBasico& (0+255),f,b
  3382  0024E4  D7FC               	bra	u12107
  3383  0024E6  2FC9               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3384  0024E8  D7FA               	bra	u12107
  3385  0024EA  D000               	nop2	
  3386  0024EC  EF67  F011         	goto	l10607
  3387  0024F0                     l10689:
  3388                           
  3389                           ;main.c: 419:                 if (direccionElegida == IZQUIERDA || direccionElegida == D
      +                          ERECHA)
  3390  0024F0  0E02               	movlw	2
  3391  0024F2  0100               	movlb	0	; () banked
  3392  0024F4  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3393  0024F6  B4D8               	btfsc	status,2,c
  3394  0024F8  EF80  F012         	goto	u11941
  3395  0024FC  EF82  F012         	goto	u11940
  3396  002500                     u11941:
  3397  002500  EF8B  F012         	goto	l10693
  3398  002504                     u11940:
  3399  002504                     
  3400                           ; BSR set to: 0
  3401  002504  0E03               	movlw	3
  3402  002506  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3403  002508  A4D8               	btfss	status,2,c
  3404  00250A  EF89  F012         	goto	u11951
  3405  00250E  EF8B  F012         	goto	u11950
  3406  002512                     u11951:
  3407  002512  EF8D  F012         	goto	l10695
  3408  002516                     u11950:
  3409  002516                     l10693:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;main.c: 420:                     velocidadEstandar();
  3413  002516  EC8D  F02B         	call	_velocidadEstandar	;wreg free
  3414  00251A                     l10695:
  3415                           
  3416                           ;main.c: 422:                 mouse.Next_state = direccionElegida;
  3417  00251A  C0FE  F058         	movff	comportamientoBasico@direccionElegida,_mouse+1
  3418  00251E  EFAF  F012         	goto	l378
  3419  002522                     l10699:
  3420                           
  3421                           ; BSR set to: 0
  3422  002522  5057               	movf	_mouse^0,w,c
  3423  002524  0102               	movlb	2	; () banked
  3424  002526  6FC8               	movwf	??_comportamientoBasico& (0+255),b
  3425  002528  6BC9               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3426                           
  3427                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3428                           ; Switch size 1, requested type "simple"
  3429                           ; Number of cases is 1, Range of values is 0 to 0
  3430                           ; switch strategies available:
  3431                           ; Name         Instructions Cycles
  3432                           ; simple_byte            4     3 (average)
  3433                           ;	Chosen strategy is simple_byte
  3434  00252A  51C9               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3435  00252C  0A00               	xorlw	0	; case 0
  3436  00252E  B4D8               	btfsc	status,2,c
  3437  002530  EF9C  F012         	goto	l11263
  3438  002534  EFAF  F012         	goto	l378
  3439  002538                     l11263:
  3440                           
  3441                           ; BSR set to: 2
  3442                           ; Switch size 1, requested type "simple"
  3443                           ; Number of cases is 4, Range of values is 1 to 4
  3444                           ; switch strategies available:
  3445                           ; Name         Instructions Cycles
  3446                           ; simple_byte           13     7 (average)
  3447                           ;	Chosen strategy is simple_byte
  3448  002538  51C8               	movf	??_comportamientoBasico& (0+255),w,b
  3449  00253A  0A01               	xorlw	1	; case 1
  3450  00253C  B4D8               	btfsc	status,2,c
  3451  00253E  EF75  F011         	goto	l10617
  3452  002542  0A03               	xorlw	3	; case 2
  3453  002544  B4D8               	btfsc	status,2,c
  3454  002546  EF98  F011         	goto	l10619
  3455  00254A  0A01               	xorlw	1	; case 3
  3456  00254C  B4D8               	btfsc	status,2,c
  3457  00254E  EF61  F011         	goto	l10603
  3458  002552  0A07               	xorlw	7	; case 4
  3459  002554  B4D8               	btfsc	status,2,c
  3460  002556  EFF5  F011         	goto	l10651
  3461  00255A  EFAF  F012         	goto	l378
  3462  00255E                     l378:
  3463                           
  3464                           ;main.c: 428:     mouse.curr_state = mouse.Next_state;
  3465  00255E  C058  F057         	movff	_mouse+1,_mouse
  3466  002562  0012               	return		;funcret
  3467  002564                     __end_of_comportamientoBasico:
  3468                           	opt callstack 0
  3469                           
  3470 ;; *************** function _regresarAlCruce *****************
  3471 ;; Defined at:
  3472 ;;		line 642 in file "main.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3475 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  3476 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  i               2   62[BANK0 ] int 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3488 ;;      Params:         0       4       0       0       0       0       0       0       0
  3489 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3490 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3491 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3492 ;;Total ram usage:        7 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    6
  3495 ;; This function calls:
  3496 ;;		_PID
  3497 ;;		_mover
  3498 ;;		_velocidadEstandar
  3499 ;; This function is called by:
  3500 ;;		_comportamientoBasico
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text6
  3505  004AEC                     __ptext6:
  3506                           	opt callstack 0
  3507  004AEC                     _regresarAlCruce:
  3508                           	opt callstack 23
  3509  004AEC                     
  3510                           ;main.c: 644:     movimientos[1] = ENFRENTE;
  3511  004AEC  0100               	movlb	0	; () banked
  3512  004AEE  EE20 F001          	lfsr	2,1
  3513  004AF2  519A               	movf	regresarAlCruce@movimientos& (0+255),w,b
  3514  004AF4  26D9               	addwf	fsr2l,f,c
  3515  004AF6  519B               	movf	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3516  004AF8  22DA               	addwfc	fsr2h,f,c
  3517  004AFA  0E01               	movlw	1
  3518  004AFC  6EDF               	movwf	indf2,c
  3519  004AFE                     
  3520                           ; BSR set to: 0
  3521                           ;main.c: 646:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  3522  004AFE  0EFF               	movlw	255
  3523  004B00  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  3524  004B02  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  3525  004B04  0EFF               	movlw	255
  3526  004B06  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  3527  004B08  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  3528  004B0A                     l10435:
  3529                           
  3530                           ; BSR set to: 0
  3531  004B0A  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3532  004B0C  EF8C  F025         	goto	u11730
  3533  004B10  EF8A  F025         	goto	u11731
  3534  004B14                     u11731:
  3535  004B14  EF8E  F025         	goto	l10439
  3536  004B18                     u11730:
  3537  004B18  EFCB  F025         	goto	l457
  3538  004B1C                     l10439:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;main.c: 650:         if (movimientos[i] == IZQUIERDA) {
  3542  004B1C  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3543  004B1E  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3544  004B20  6ED9               	movwf	fsr2l,c
  3545  004B22  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3546  004B24  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3547  004B26  6EDA               	movwf	fsr2h,c
  3548  004B28  0E02               	movlw	2
  3549  004B2A  18DE               	xorwf	postinc2,w,c
  3550  004B2C  A4D8               	btfss	status,2,c
  3551  004B2E  EF9B  F025         	goto	u11741
  3552  004B32  EF9D  F025         	goto	u11740
  3553  004B36                     u11741:
  3554  004B36  EFA3  F025         	goto	l10445
  3555  004B3A                     u11740:
  3556  004B3A                     
  3557                           ; BSR set to: 0
  3558                           ;main.c: 651:             velocidadEstandar();
  3559  004B3A  EC8D  F02B         	call	_velocidadEstandar	;wreg free
  3560  004B3E                     
  3561                           ;main.c: 652:             mouse.curr_state = DERECHA;
  3562  004B3E  0E03               	movlw	3
  3563  004B40  6E57               	movwf	_mouse^0,c
  3564                           
  3565                           ;main.c: 653:         } else if (movimientos[i] == DERECHA) {
  3566  004B42  EFC3  F025         	goto	l10455
  3567  004B46                     l10445:
  3568                           
  3569                           ; BSR set to: 0
  3570  004B46  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3571  004B48  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3572  004B4A  6ED9               	movwf	fsr2l,c
  3573  004B4C  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3574  004B4E  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3575  004B50  6EDA               	movwf	fsr2h,c
  3576  004B52  0E03               	movlw	3
  3577  004B54  18DE               	xorwf	postinc2,w,c
  3578  004B56  A4D8               	btfss	status,2,c
  3579  004B58  EFB0  F025         	goto	u11751
  3580  004B5C  EFB2  F025         	goto	u11750
  3581  004B60                     u11751:
  3582  004B60  EFB8  F025         	goto	l10451
  3583  004B64                     u11750:
  3584  004B64                     
  3585                           ; BSR set to: 0
  3586                           ;main.c: 654:             velocidadEstandar();
  3587  004B64  EC8D  F02B         	call	_velocidadEstandar	;wreg free
  3588  004B68                     
  3589                           ;main.c: 655:             mouse.curr_state = IZQUIERDA;
  3590  004B68  0E02               	movlw	2
  3591  004B6A  6E57               	movwf	_mouse^0,c
  3592                           
  3593                           ;main.c: 656:         } else {
  3594  004B6C  EFC3  F025         	goto	l10455
  3595  004B70                     l10451:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;main.c: 658:             PID();
  3599  004B70  ECC8  F017         	call	_PID	;wreg free
  3600  004B74                     
  3601                           ;main.c: 659:             mouse.curr_state = movimientos[i];
  3602  004B74  0100               	movlb	0	; () banked
  3603  004B76  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3604  004B78  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3605  004B7A  6ED9               	movwf	fsr2l,c
  3606  004B7C  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3607  004B7E  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3608  004B80  6EDA               	movwf	fsr2h,c
  3609  004B82  50DF               	movf	indf2,w,c
  3610  004B84  6E57               	movwf	_mouse^0,c
  3611  004B86                     l10455:
  3612                           
  3613                           ;main.c: 662:         mover();
  3614  004B86  EC6E  F026         	call	_mover	;wreg free
  3615  004B8A                     
  3616                           ;main.c: 663:     }
  3617  004B8A  0100               	movlb	0	; () banked
  3618  004B8C  079E               	decf	regresarAlCruce@i& (0+255),f,b
  3619  004B8E  A0D8               	btfss	status,0,c
  3620  004B90  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  3621  004B92  EF85  F025         	goto	l10435
  3622  004B96                     l457:
  3623                           
  3624                           ; BSR set to: 0
  3625  004B96  0012               	return		;funcret
  3626  004B98                     __end_of_regresarAlCruce:
  3627                           	opt callstack 0
  3628                           
  3629 ;; *************** function _mover *****************
  3630 ;; Defined at:
  3631 ;;		line 587 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3647 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3648 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3649 ;;Total ram usage:        2 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    3
  3652 ;; This function calls:
  3653 ;;		_forzarAvanceRecto
  3654 ;; This function is called by:
  3655 ;;		_regresarAlCruce
  3656 ;;		_probarGirosAuto
  3657 ;;		_probarPID
  3658 ;;		_probarCruceT
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text7
  3663  004CDC                     __ptext7:
  3664                           	opt callstack 0
  3665  004CDC                     _mover:
  3666                           	opt callstack 25
  3667  004CDC                     
  3668                           ;main.c: 589:     switch (mouse.curr_state) {
  3669  004CDC  EF9D  F026         	goto	l9867
  3670  004CE0                     l442:
  3671                           
  3672                           ;main.c: 593:             LATB4 = 1;
  3673  004CE0  888A               	bsf	3978,4,c	;volatile
  3674                           
  3675                           ;main.c: 594:             LATB5 = 0;
  3676  004CE2  9A8A               	bcf	3978,5,c	;volatile
  3677                           
  3678                           ;main.c: 595:             LATB6 = 1;
  3679  004CE4  8C8A               	bsf	3978,6,c	;volatile
  3680                           
  3681                           ;main.c: 598:             if (!0)
  3682  004CE6  9E8A               	bcf	3978,7,c	;volatile
  3683  004CE8                     
  3684                           ;main.c: 599:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  3685  004CE8  0E48               	movlw	72
  3686  004CEA  6E08               	movwf	??_mover^0,c
  3687  004CEC  0E6C               	movlw	108
  3688  004CEE                     u12117:
  3689  004CEE  2EE8               	decfsz	wreg,f,c
  3690  004CF0  D7FE               	bra	u12117
  3691  004CF2  2E08               	decfsz	??_mover^0,f,c
  3692  004CF4  D7FC               	bra	u12117
  3693  004CF6  D000               	nop2	
  3694  004CF8  EFBA  F026         	goto	l448
  3695  004CFC                     l445:
  3696                           
  3697                           ;main.c: 605:             LATB4 = 0;
  3698  004CFC  988A               	bcf	3978,4,c	;volatile
  3699                           
  3700                           ;main.c: 606:             LATB5 = 0;
  3701  004CFE  9A8A               	bcf	3978,5,c	;volatile
  3702                           
  3703                           ;main.c: 607:             LATB6 = 1;
  3704  004D00  8C8A               	bsf	3978,6,c	;volatile
  3705                           
  3706                           ;main.c: 608:             LATB7 = 0;
  3707  004D02  9E8A               	bcf	3978,7,c	;volatile
  3708  004D04                     l9857:
  3709                           
  3710                           ;main.c: 610:             _delay((unsigned long)((410)*(4000000/4000.0)));
  3711  004D04  0E03               	movlw	3
  3712  004D06  6E09               	movwf	(??_mover+1)^0,c
  3713  004D08  0E15               	movlw	21
  3714  004D0A  6E08               	movwf	??_mover^0,c
  3715  004D0C  0E74               	movlw	116
  3716  004D0E                     u12127:
  3717  004D0E  2EE8               	decfsz	wreg,f,c
  3718  004D10  D7FE               	bra	u12127
  3719  004D12  2E08               	decfsz	??_mover^0,f,c
  3720  004D14  D7FC               	bra	u12127
  3721  004D16  2E09               	decfsz	(??_mover+1)^0,f,c
  3722  004D18  D7FA               	bra	u12127
  3723  004D1A                     
  3724                           ;main.c: 612:             forzarAvanceRecto();
  3725  004D1A  ECD7  F02B         	call	_forzarAvanceRecto	;wreg free
  3726                           
  3727                           ;main.c: 614:             break;
  3728  004D1E  EFBA  F026         	goto	l448
  3729  004D22                     l446:
  3730                           
  3731                           ;main.c: 618:             LATB4 = 1;
  3732  004D22  888A               	bsf	3978,4,c	;volatile
  3733                           
  3734                           ;main.c: 619:             LATB5 = 0;
  3735  004D24  9A8A               	bcf	3978,5,c	;volatile
  3736                           
  3737                           ;main.c: 620:             LATB6 = 0;
  3738  004D26  9C8A               	bcf	3978,6,c	;volatile
  3739                           
  3740                           ;main.c: 621:             LATB7 = 0;
  3741  004D28  9E8A               	bcf	3978,7,c	;volatile
  3742  004D2A  EF82  F026         	goto	l9857
  3743  004D2E                     l447:
  3744                           
  3745                           ;main.c: 631:             LATB4 = 0;
  3746  004D2E  988A               	bcf	3978,4,c	;volatile
  3747                           
  3748                           ;main.c: 632:             LATB5 = 0;
  3749  004D30  9A8A               	bcf	3978,5,c	;volatile
  3750                           
  3751                           ;main.c: 633:             LATB6 = 0;
  3752  004D32  9C8A               	bcf	3978,6,c	;volatile
  3753                           
  3754                           ;main.c: 634:             LATB7 = 0;
  3755  004D34  9E8A               	bcf	3978,7,c	;volatile
  3756                           
  3757                           ;main.c: 636:             break;
  3758  004D36  EFBA  F026         	goto	l448
  3759  004D3A                     l9867:
  3760  004D3A  5057               	movf	_mouse^0,w,c
  3761  004D3C  6E08               	movwf	??_mover^0,c
  3762  004D3E  6A09               	clrf	(??_mover+1)^0,c
  3763                           
  3764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3765                           ; Switch size 1, requested type "simple"
  3766                           ; Number of cases is 1, Range of values is 0 to 0
  3767                           ; switch strategies available:
  3768                           ; Name         Instructions Cycles
  3769                           ; simple_byte            4     3 (average)
  3770                           ;	Chosen strategy is simple_byte
  3771  004D40  5009               	movf	(??_mover+1)^0,w,c
  3772  004D42  0A00               	xorlw	0	; case 0
  3773  004D44  B4D8               	btfsc	status,2,c
  3774  004D46  EFA7  F026         	goto	l11265
  3775  004D4A  EFBA  F026         	goto	l448
  3776  004D4E                     l11265:
  3777                           
  3778                           ; Switch size 1, requested type "simple"
  3779                           ; Number of cases is 4, Range of values is 1 to 4
  3780                           ; switch strategies available:
  3781                           ; Name         Instructions Cycles
  3782                           ; simple_byte           13     7 (average)
  3783                           ;	Chosen strategy is simple_byte
  3784  004D4E  5008               	movf	??_mover^0,w,c
  3785  004D50  0A01               	xorlw	1	; case 1
  3786  004D52  B4D8               	btfsc	status,2,c
  3787  004D54  EF70  F026         	goto	l442
  3788  004D58  0A03               	xorlw	3	; case 2
  3789  004D5A  B4D8               	btfsc	status,2,c
  3790  004D5C  EF7E  F026         	goto	l445
  3791  004D60  0A01               	xorlw	1	; case 3
  3792  004D62  B4D8               	btfsc	status,2,c
  3793  004D64  EF91  F026         	goto	l446
  3794  004D68  0A07               	xorlw	7	; case 4
  3795  004D6A  B4D8               	btfsc	status,2,c
  3796  004D6C  EF97  F026         	goto	l447
  3797  004D70  EFBA  F026         	goto	l448
  3798  004D74                     l448:
  3799  004D74  0012               	return		;funcret
  3800  004D76                     __end_of_mover:
  3801                           	opt callstack 0
  3802                           
  3803 ;; *************** function _PID *****************
  3804 ;; Defined at:
  3805 ;;		line 1229 in file "main.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  error           2   56[BANK0 ] int 
  3810 ;;  dif             2   54[BANK0 ] int 
  3811 ;;  velocidadDer    2   50[BANK0 ] int 
  3812 ;;  velocidadIzq    2   46[BANK0 ] int 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0
  3823 ;;      Locals:         0      16       0       0       0       0       0       0       0
  3824 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3825 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3826 ;;Total ram usage:       18 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    5
  3829 ;; This function calls:
  3830 ;;		___fladd
  3831 ;;		___flmul
  3832 ;;		___flsub
  3833 ;;		___fltol
  3834 ;;		___xxtofl
  3835 ;;		_pwmDuty
  3836 ;;		_roundf
  3837 ;; This function is called by:
  3838 ;;		_comportamientoBasico
  3839 ;;		_regresarAlCruce
  3840 ;;		_probarPID
  3841 ;;		_probarCruceT
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text8
  3846  002F90                     __ptext8:
  3847                           	opt callstack 0
  3848  002F90                     _PID:
  3849                           	opt callstack 23
  3850  002F90                     
  3851                           ;main.c: 1232:     T_INT error = 0;
  3852  002F90  0E00               	movlw	0
  3853  002F92  0100               	movlb	0	; () banked
  3854  002F94  6F99               	movwf	(PID@error+1)& (0+255),b
  3855  002F96  0E00               	movlw	0
  3856  002F98  6F98               	movwf	PID@error& (0+255),b
  3857  002F9A                     
  3858                           ; BSR set to: 0
  3859                           ;main.c: 1233:     static T_INT difAnt = 0;;main.c: 1236:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  3860  002F9A  C12C  F048         	movff	_sensorDerecha,___flsub@a
  3861  002F9E  C12D  F049         	movff	_sensorDerecha+1,___flsub@a+1
  3862  002FA2  C12E  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  3863  002FA6  C12F  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  3864  002FAA  C128  F044         	movff	_sensorIzquierda,___flsub@b
  3865  002FAE  C129  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  3866  002FB2  C12A  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  3867  002FB6  C12B  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  3868  002FBA  EC5F  F02A         	call	___flsub	;wreg free
  3869  002FBE  C044  F072         	movff	?___flsub,___fltol@f1
  3870  002FC2  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  3871  002FC6  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  3872  002FCA  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  3873  002FCE  EC33  F021         	call	___fltol	;wreg free
  3874  002FD2  C072  F096         	movff	?___fltol,PID@dif
  3875  002FD6  C073  F097         	movff	?___fltol+1,PID@dif+1
  3876  002FDA                     
  3877                           ;main.c: 1238:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  3878  002FDA  0ECD               	movlw	205
  3879  002FDC  6E1F               	movwf	___flmul@a^0,c
  3880  002FDE  0ECC               	movlw	204
  3881  002FE0  6E20               	movwf	(___flmul@a+1)^0,c
  3882  002FE2  0ECC               	movlw	204
  3883  002FE4  6E21               	movwf	(___flmul@a+2)^0,c
  3884  002FE6  0E3D               	movlw	61
  3885  002FE8  6E22               	movwf	(___flmul@a+3)^0,c
  3886  002FEA  0100               	movlb	0	; () banked
  3887  002FEC  5196               	movf	PID@dif& (0+255),w,b
  3888  002FEE  0101               	movlb	1	; () banked
  3889  002FF0  5D36               	subwf	PID@difAnt& (0+255),w,b
  3890  002FF2  0100               	movlb	0	; () banked
  3891  002FF4  6F88               	movwf	??_PID& (0+255),b
  3892  002FF6  5197               	movf	(PID@dif+1)& (0+255),w,b
  3893  002FF8  0101               	movlb	1	; () banked
  3894  002FFA  5937               	subwfb	(PID@difAnt+1)& (0+255),w,b
  3895  002FFC  0100               	movlb	0	; () banked
  3896  002FFE  6F89               	movwf	(??_PID+1)& (0+255),b
  3897  003000  C088  F00D         	movff	??_PID,___xxtofl@val
  3898  003004  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  3899  003008  0E00               	movlw	0
  3900  00300A  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  3901  00300C  0EFF               	movlw	-1
  3902  00300E  6E0F               	movwf	(___xxtofl@val+2)^0,c
  3903  003010  6E10               	movwf	(___xxtofl@val+3)^0,c
  3904  003012  0E01               	movlw	1
  3905  003014  ECDA  F01A         	call	___xxtofl
  3906  003018  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3907  00301C  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3908  003020  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3909  003024  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3910  003028  ECB8  F00E         	call	___flmul	;wreg free
  3911  00302C  C01B  F038         	movff	?___flmul,___fladd@a
  3912  003030  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  3913  003034  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  3914  003038  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  3915  00303C  0E66               	movlw	102
  3916  00303E  6E1F               	movwf	___flmul@a^0,c
  3917  003040  0E66               	movlw	102
  3918  003042  6E20               	movwf	(___flmul@a+1)^0,c
  3919  003044  0E66               	movlw	102
  3920  003046  6E21               	movwf	(___flmul@a+2)^0,c
  3921  003048  0E3F               	movlw	63
  3922  00304A  6E22               	movwf	(___flmul@a+3)^0,c
  3923  00304C  C096  F00D         	movff	PID@dif,___xxtofl@val
  3924  003050  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  3925  003054  0E00               	movlw	0
  3926  003056  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  3927  003058  0EFF               	movlw	-1
  3928  00305A  6E0F               	movwf	(___xxtofl@val+2)^0,c
  3929  00305C  6E10               	movwf	(___xxtofl@val+3)^0,c
  3930  00305E  0E01               	movlw	1
  3931  003060  ECDA  F01A         	call	___xxtofl
  3932  003064  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3933  003068  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3934  00306C  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3935  003070  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3936  003074  ECB8  F00E         	call	___flmul	;wreg free
  3937  003078  C01B  F034         	movff	?___flmul,___fladd@b
  3938  00307C  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  3939  003080  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  3940  003084  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  3941  003088  EC58  F00C         	call	___fladd	;wreg free
  3942  00308C  C034  F08A         	movff	?___fladd,_PID$1826
  3943  003090  C035  F08B         	movff	?___fladd+1,_PID$1826+1
  3944  003094  C036  F08C         	movff	?___fladd+2,_PID$1826+2
  3945  003098  C037  F08D         	movff	?___fladd+3,_PID$1826+3
  3946  00309C                     
  3947                           ;main.c: 1238:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  3948  00309C  C08A  F04C         	movff	_PID$1826,roundf@x
  3949  0030A0  C08B  F04D         	movff	_PID$1826+1,roundf@x+1
  3950  0030A4  C08C  F04E         	movff	_PID$1826+2,roundf@x+2
  3951  0030A8  C08D  F04F         	movff	_PID$1826+3,roundf@x+3
  3952  0030AC  ECB2  F012         	call	_roundf	;wreg free
  3953  0030B0  C04C  F072         	movff	?_roundf,___fltol@f1
  3954  0030B4  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  3955  0030B8  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  3956  0030BC  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  3957  0030C0  EC33  F021         	call	___fltol	;wreg free
  3958  0030C4  C072  F098         	movff	?___fltol,PID@error
  3959  0030C8  C073  F099         	movff	?___fltol+1,PID@error+1
  3960  0030CC                     
  3961                           ;main.c: 1240:     difAnt = dif;
  3962  0030CC  C096  F136         	movff	PID@dif,PID@difAnt
  3963  0030D0  C097  F137         	movff	PID@dif+1,PID@difAnt+1
  3964  0030D4                     
  3965                           ;main.c: 1242:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  3966  0030D4  0E64               	movlw	100
  3967  0030D6  0100               	movlb	0	; () banked
  3968  0030D8  6F88               	movwf	??_PID& (0+255),b
  3969  0030DA  0E00               	movlw	0
  3970  0030DC  6F89               	movwf	(??_PID+1)& (0+255),b
  3971  0030DE  5198               	movf	PID@error& (0+255),w,b
  3972  0030E0  5D88               	subwf	??_PID& (0+255),w,b
  3973  0030E2  5199               	movf	(PID@error+1)& (0+255),w,b
  3974  0030E4  5989               	subwfb	(??_PID+1)& (0+255),w,b
  3975  0030E6  0B80               	andlw	128
  3976  0030E8  A4D8               	btfss	status,2,c
  3977  0030EA  EF79  F018         	goto	u11171
  3978  0030EE  EF7B  F018         	goto	u11170
  3979  0030F2                     u11171:
  3980  0030F2  EFA5  F018         	goto	l9895
  3981  0030F6                     u11170:
  3982  0030F6                     
  3983                           ; BSR set to: 0
  3984  0030F6  0E64               	movlw	100
  3985  0030F8  6F88               	movwf	??_PID& (0+255),b
  3986  0030FA  0E00               	movlw	0
  3987  0030FC  6F89               	movwf	(??_PID+1)& (0+255),b
  3988  0030FE  5198               	movf	PID@error& (0+255),w,b
  3989  003100  5F88               	subwf	??_PID& (0+255),f,b
  3990  003102  5199               	movf	(PID@error+1)& (0+255),w,b
  3991  003104  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  3992  003106  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  3993  003108  EF91  F018         	goto	u11180
  3994  00310C  5189               	movf	(??_PID+1)& (0+255),w,b
  3995  00310E  E107               	bnz	u11181
  3996  003110  0E65               	movlw	101
  3997  003112  5D88               	subwf	??_PID& (0+255),w,b
  3998  003114  B0D8               	btfsc	status,0,c
  3999  003116  EF8F  F018         	goto	u11181
  4000  00311A  EF91  F018         	goto	u11180
  4001  00311E                     u11181:
  4002  00311E  EF9B  F018         	goto	l9891
  4003  003122                     u11180:
  4004  003122                     
  4005                           ; BSR set to: 0
  4006  003122  5198               	movf	PID@error& (0+255),w,b
  4007  003124  0864               	sublw	100
  4008  003126  6F90               	movwf	_PID$737& (0+255),b
  4009  003128  5199               	movf	(PID@error+1)& (0+255),w,b
  4010  00312A  A0D8               	btfss	status,0,c
  4011  00312C  2AE8               	incf	wreg,f,c
  4012  00312E  0800               	sublw	0
  4013  003130  6F91               	movwf	(_PID$737+1)& (0+255),b
  4014  003132  EF9F  F018         	goto	l9893
  4015  003136                     l9891:
  4016                           
  4017                           ; BSR set to: 0
  4018  003136  0E00               	movlw	0
  4019  003138  6F91               	movwf	(_PID$737+1)& (0+255),b
  4020  00313A  0E64               	movlw	100
  4021  00313C  6F90               	movwf	_PID$737& (0+255),b
  4022  00313E                     l9893:
  4023                           
  4024                           ; BSR set to: 0
  4025  00313E  C090  F08E         	movff	_PID$737,PID@velocidadIzquierda
  4026  003142  C091  F08F         	movff	_PID$737+1,PID@velocidadIzquierda+1
  4027  003146  EFA9  F018         	goto	l9897
  4028  00314A                     l9895:
  4029                           
  4030                           ; BSR set to: 0
  4031  00314A  0E00               	movlw	0
  4032  00314C  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  4033  00314E  0E00               	movlw	0
  4034  003150  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  4035  003152                     l9897:
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;main.c: 1243:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  4039  003152  0E64               	movlw	100
  4040  003154  2598               	addwf	PID@error& (0+255),w,b
  4041  003156  0E00               	movlw	0
  4042  003158  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4043  00315A  0B80               	andlw	128
  4044  00315C  A4D8               	btfss	status,2,c
  4045  00315E  EFB3  F018         	goto	u11191
  4046  003162  EFB5  F018         	goto	u11190
  4047  003166                     u11191:
  4048  003166  EFDB  F018         	goto	l9907
  4049  00316A                     u11190:
  4050  00316A                     
  4051                           ; BSR set to: 0
  4052  00316A  0E64               	movlw	100
  4053  00316C  2598               	addwf	PID@error& (0+255),w,b
  4054  00316E  6F88               	movwf	??_PID& (0+255),b
  4055  003170  0E00               	movlw	0
  4056  003172  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4057  003174  6F89               	movwf	(??_PID+1)& (0+255),b
  4058  003176  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4059  003178  EFC9  F018         	goto	u11200
  4060  00317C  5189               	movf	(??_PID+1)& (0+255),w,b
  4061  00317E  E107               	bnz	u11201
  4062  003180  0E65               	movlw	101
  4063  003182  5D88               	subwf	??_PID& (0+255),w,b
  4064  003184  B0D8               	btfsc	status,0,c
  4065  003186  EFC7  F018         	goto	u11201
  4066  00318A  EFC9  F018         	goto	u11200
  4067  00318E                     u11201:
  4068  00318E  EFD1  F018         	goto	l9903
  4069  003192                     u11200:
  4070  003192                     
  4071                           ; BSR set to: 0
  4072  003192  0E64               	movlw	100
  4073  003194  2598               	addwf	PID@error& (0+255),w,b
  4074  003196  6F94               	movwf	_PID$739& (0+255),b
  4075  003198  0E00               	movlw	0
  4076  00319A  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4077  00319C  6F95               	movwf	(_PID$739+1)& (0+255),b
  4078  00319E  EFD5  F018         	goto	l9905
  4079  0031A2                     l9903:
  4080                           
  4081                           ; BSR set to: 0
  4082  0031A2  0E00               	movlw	0
  4083  0031A4  6F95               	movwf	(_PID$739+1)& (0+255),b
  4084  0031A6  0E64               	movlw	100
  4085  0031A8  6F94               	movwf	_PID$739& (0+255),b
  4086  0031AA                     l9905:
  4087                           
  4088                           ; BSR set to: 0
  4089  0031AA  C094  F092         	movff	_PID$739,PID@velocidadDerecha
  4090  0031AE  C095  F093         	movff	_PID$739+1,PID@velocidadDerecha+1
  4091  0031B2  EFDF  F018         	goto	l9909
  4092  0031B6                     l9907:
  4093                           
  4094                           ; BSR set to: 0
  4095  0031B6  0E00               	movlw	0
  4096  0031B8  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  4097  0031BA  0E00               	movlw	0
  4098  0031BC  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  4099  0031BE                     l9909:
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;main.c: 1245:     pwmDuty(velocidadIzquierda, 1);
  4103  0031BE  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  4104  0031C2  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  4105  0031C6  0E01               	movlw	1
  4106  0031C8  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4107  0031CA  ECFC  F019         	call	_pwmDuty	;wreg free
  4108  0031CE                     
  4109                           ;main.c: 1246:     pwmDuty(velocidadDerecha, 2);
  4110  0031CE  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  4111  0031D2  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  4112  0031D6  0E02               	movlw	2
  4113  0031D8  0100               	movlb	0	; () banked
  4114  0031DA  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4115  0031DC  ECFC  F019         	call	_pwmDuty	;wreg free
  4116  0031E0  0012               	return		;funcret
  4117  0031E2                     __end_of_PID:
  4118                           	opt callstack 0
  4119                           
  4120 ;; *************** function _roundf *****************
  4121 ;; Defined at:
  4122 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  x               4   75[COMRAM] float 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  y               4   14[BANK0 ] float 
  4127 ;;  u               4   10[BANK0 ] struct .
  4128 ;;  e               2    4[BANK0 ] int 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  4   75[COMRAM] float 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4138 ;;      Params:         4       0       0       0       0       0       0       0       0
  4139 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4140 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4141 ;;      Totals:         8      18       0       0       0       0       0       0       0
  4142 ;;Total ram usage:       26 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    4
  4145 ;; This function calls:
  4146 ;;		___fladd
  4147 ;;		___flge
  4148 ;;		___flmul
  4149 ;;		___flneg
  4150 ;;		___flsub
  4151 ;; This function is called by:
  4152 ;;		_PID
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text9
  4157  002564                     __ptext9:
  4158                           	opt callstack 0
  4159  002564                     _roundf:
  4160                           	opt callstack 23
  4161  002564  C100  F06A         	movff	roundf@F525,roundf@u
  4162  002568  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  4163  00256C  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  4164  002570  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  4165  002574  C04C  F06A         	movff	roundf@x,roundf@u
  4166  002578  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  4167  00257C  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  4168  002580  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  4169  002584  C06A  F050         	movff	roundf@u,??_roundf
  4170  002588  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4171  00258C  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4172  002590  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4173  002594  0E18               	movlw	24
  4174  002596  EFD2  F012         	goto	u10940
  4175  00259A                     u10945:
  4176  00259A  90D8               	bcf	status,0,c
  4177  00259C  3253               	rrcf	(??_roundf+3)^0,f,c
  4178  00259E  3252               	rrcf	(??_roundf+2)^0,f,c
  4179  0025A0  3251               	rrcf	(??_roundf+1)^0,f,c
  4180  0025A2  3250               	rrcf	??_roundf^0,f,c
  4181  0025A4                     u10940:
  4182  0025A4  2EE8               	decfsz	wreg,f,c
  4183  0025A6  EFCD  F012         	goto	u10945
  4184  0025AA  5050               	movf	??_roundf^0,w,c
  4185  0025AC  0100               	movlb	0	; () banked
  4186  0025AE  6F64               	movwf	roundf@e& (0+255),b
  4187  0025B0  6B65               	clrf	(roundf@e+1)& (0+255),b
  4188  0025B2  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4189  0025B4  EFE5  F012         	goto	u10951
  4190  0025B8  5165               	movf	(roundf@e+1)& (0+255),w,b
  4191  0025BA  E109               	bnz	u10950
  4192  0025BC  0E96               	movlw	150
  4193  0025BE  5D64               	subwf	roundf@e& (0+255),w,b
  4194  0025C0  A0D8               	btfss	status,0,c
  4195  0025C2  EFE5  F012         	goto	u10951
  4196  0025C6  EFE7  F012         	goto	u10950
  4197  0025CA                     u10951:
  4198  0025CA  EFF1  F012         	goto	l9749
  4199  0025CE                     u10950:
  4200  0025CE                     
  4201                           ; BSR set to: 0
  4202  0025CE  C04C  F04C         	movff	roundf@x,?_roundf
  4203  0025D2  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  4204  0025D6  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  4205  0025DA  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  4206  0025DE  EF8A  F014         	goto	l1740
  4207  0025E2                     l9749:
  4208                           
  4209                           ; BSR set to: 0
  4210  0025E2  C06A  F050         	movff	roundf@u,??_roundf
  4211  0025E6  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4212  0025EA  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4213  0025EE  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4214  0025F2  0E20               	movlw	32
  4215  0025F4  EF01  F013         	goto	u10960
  4216  0025F8                     u10965:
  4217  0025F8  90D8               	bcf	status,0,c
  4218  0025FA  3253               	rrcf	(??_roundf+3)^0,f,c
  4219  0025FC  3252               	rrcf	(??_roundf+2)^0,f,c
  4220  0025FE  3251               	rrcf	(??_roundf+1)^0,f,c
  4221  002600  3250               	rrcf	??_roundf^0,f,c
  4222  002602                     u10960:
  4223  002602  2EE8               	decfsz	wreg,f,c
  4224  002604  EFFC  F012         	goto	u10965
  4225  002608  5050               	movf	??_roundf^0,w,c
  4226  00260A  1051               	iorwf	(??_roundf+1)^0,w,c
  4227  00260C  1052               	iorwf	(??_roundf+2)^0,w,c
  4228  00260E  1053               	iorwf	(??_roundf+3)^0,w,c
  4229  002610  B4D8               	btfsc	status,2,c
  4230  002612  EF0D  F013         	goto	u10971
  4231  002616  EF0F  F013         	goto	u10970
  4232  00261A                     u10971:
  4233  00261A  EF21  F013         	goto	l9753
  4234  00261E                     u10970:
  4235  00261E                     
  4236                           ; BSR set to: 0
  4237  00261E  C04C  F006         	movff	roundf@x,___flneg@f1
  4238  002622  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  4239  002626  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  4240  00262A  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  4241  00262E  EC23  F02B         	call	___flneg	;wreg free
  4242  002632  C006  F04C         	movff	?___flneg,roundf@x
  4243  002636  C007  F04D         	movff	?___flneg+1,roundf@x+1
  4244  00263A  C008  F04E         	movff	?___flneg+2,roundf@x+2
  4245  00263E  C009  F04F         	movff	?___flneg+3,roundf@x+3
  4246  002642                     l9753:
  4247  002642  0100               	movlb	0	; () banked
  4248  002644  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4249  002646  EF30  F013         	goto	u10980
  4250  00264A  5165               	movf	(roundf@e+1)& (0+255),w,b
  4251  00264C  E107               	bnz	u10981
  4252  00264E  0E7E               	movlw	126
  4253  002650  5D64               	subwf	roundf@e& (0+255),w,b
  4254  002652  B0D8               	btfsc	status,0,c
  4255  002654  EF2E  F013         	goto	u10981
  4256  002658  EF30  F013         	goto	u10980
  4257  00265C                     u10981:
  4258  00265C  EF4C  F013         	goto	l9759
  4259  002660                     u10980:
  4260  002660                     
  4261                           ; BSR set to: 0
  4262  002660  C06A  F01B         	movff	roundf@u,___flmul@b
  4263  002664  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  4264  002668  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  4265  00266C  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  4266  002670  0E00               	movlw	0
  4267  002672  6E1F               	movwf	___flmul@a^0,c
  4268  002674  0E00               	movlw	0
  4269  002676  6E20               	movwf	(___flmul@a+1)^0,c
  4270  002678  0E00               	movlw	0
  4271  00267A  6E21               	movwf	(___flmul@a+2)^0,c
  4272  00267C  0E00               	movlw	0
  4273  00267E  6E22               	movwf	(___flmul@a+3)^0,c
  4274  002680  ECB8  F00E         	call	___flmul	;wreg free
  4275  002684  C01B  F04C         	movff	?___flmul,?_roundf
  4276  002688  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  4277  00268C  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  4278  002690  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  4279  002694  EF8A  F014         	goto	l1740
  4280  002698                     l9759:
  4281                           
  4282                           ; BSR set to: 0
  4283  002698  0E00               	movlw	0
  4284  00269A  6E38               	movwf	___fladd@a^0,c
  4285  00269C  0E00               	movlw	0
  4286  00269E  6E39               	movwf	(___fladd@a+1)^0,c
  4287  0026A0  0E00               	movlw	0
  4288  0026A2  6E3A               	movwf	(___fladd@a+2)^0,c
  4289  0026A4  0E4B               	movlw	75
  4290  0026A6  6E3B               	movwf	(___fladd@a+3)^0,c
  4291  0026A8  C04C  F034         	movff	roundf@x,___fladd@b
  4292  0026AC  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  4293  0026B0  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  4294  0026B4  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  4295  0026B8  EC58  F00C         	call	___fladd	;wreg free
  4296  0026BC  C034  F066         	movff	?___fladd,_roundf$1827
  4297  0026C0  C035  F067         	movff	?___fladd+1,_roundf$1827+1
  4298  0026C4  C036  F068         	movff	?___fladd+2,_roundf$1827+2
  4299  0026C8  C037  F069         	movff	?___fladd+3,_roundf$1827+3
  4300  0026CC  0E00               	movlw	0
  4301  0026CE  6E38               	movwf	___fladd@a^0,c
  4302  0026D0  0E00               	movlw	0
  4303  0026D2  6E39               	movwf	(___fladd@a+1)^0,c
  4304  0026D4  0E00               	movlw	0
  4305  0026D6  6E3A               	movwf	(___fladd@a+2)^0,c
  4306  0026D8  0ECB               	movlw	203
  4307  0026DA  6E3B               	movwf	(___fladd@a+3)^0,c
  4308  0026DC  C066  F034         	movff	_roundf$1827,___fladd@b
  4309  0026E0  C067  F035         	movff	_roundf$1827+1,___fladd@b+1
  4310  0026E4  C068  F036         	movff	_roundf$1827+2,___fladd@b+2
  4311  0026E8  C069  F037         	movff	_roundf$1827+3,___fladd@b+3
  4312  0026EC  EC58  F00C         	call	___fladd	;wreg free
  4313  0026F0  C034  F060         	movff	?___fladd,_roundf$1828
  4314  0026F4  C035  F061         	movff	?___fladd+1,_roundf$1828+1
  4315  0026F8  C036  F062         	movff	?___fladd+2,_roundf$1828+2
  4316  0026FC  C037  F063         	movff	?___fladd+3,_roundf$1828+3
  4317  002700  C060  F044         	movff	_roundf$1828,___flsub@b
  4318  002704  C061  F045         	movff	_roundf$1828+1,___flsub@b+1
  4319  002708  C062  F046         	movff	_roundf$1828+2,___flsub@b+2
  4320  00270C  C063  F047         	movff	_roundf$1828+3,___flsub@b+3
  4321  002710  C04C  F048         	movff	roundf@x,___flsub@a
  4322  002714  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  4323  002718  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  4324  00271C  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  4325  002720  EC5F  F02A         	call	___flsub	;wreg free
  4326  002724  C044  F06E         	movff	?___flsub,roundf@y
  4327  002728  C045  F06F         	movff	?___flsub+1,roundf@y+1
  4328  00272C  C046  F070         	movff	?___flsub+2,roundf@y+2
  4329  002730  C047  F071         	movff	?___flsub+3,roundf@y+3
  4330  002734  0E00               	movlw	0
  4331  002736  6E34               	movwf	___flge@ff1^0,c
  4332  002738  0E00               	movlw	0
  4333  00273A  6E35               	movwf	(___flge@ff1+1)^0,c
  4334  00273C  0E00               	movlw	0
  4335  00273E  6E36               	movwf	(___flge@ff1+2)^0,c
  4336  002740  0E3F               	movlw	63
  4337  002742  6E37               	movwf	(___flge@ff1+3)^0,c
  4338  002744  C06E  F038         	movff	roundf@y,___flge@ff2
  4339  002748  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4340  00274C  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4341  002750  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4342  002754  ECB7  F021         	call	___flge	;wreg free
  4343  002758  B0D8               	btfsc	status,0,c
  4344  00275A  EFB1  F013         	goto	u10991
  4345  00275E  EFB3  F013         	goto	u10990
  4346  002762                     u10991:
  4347  002762  EFE9  F013         	goto	l9763
  4348  002766                     u10990:
  4349  002766  C04C  F038         	movff	roundf@x,___fladd@a
  4350  00276A  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4351  00276E  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4352  002772  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4353  002776  C06E  F034         	movff	roundf@y,___fladd@b
  4354  00277A  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4355  00277E  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4356  002782  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4357  002786  EC58  F00C         	call	___fladd	;wreg free
  4358  00278A  C034  F066         	movff	?___fladd,_roundf$1827
  4359  00278E  C035  F067         	movff	?___fladd+1,_roundf$1827+1
  4360  002792  C036  F068         	movff	?___fladd+2,_roundf$1827+2
  4361  002796  C037  F069         	movff	?___fladd+3,_roundf$1827+3
  4362  00279A  C066  F034         	movff	_roundf$1827,___fladd@b
  4363  00279E  C067  F035         	movff	_roundf$1827+1,___fladd@b+1
  4364  0027A2  C068  F036         	movff	_roundf$1827+2,___fladd@b+2
  4365  0027A6  C069  F037         	movff	_roundf$1827+3,___fladd@b+3
  4366  0027AA  0E00               	movlw	0
  4367  0027AC  6E38               	movwf	___fladd@a^0,c
  4368  0027AE  0E00               	movlw	0
  4369  0027B0  6E39               	movwf	(___fladd@a+1)^0,c
  4370  0027B2  0E80               	movlw	128
  4371  0027B4  6E3A               	movwf	(___fladd@a+2)^0,c
  4372  0027B6  0EBF               	movlw	191
  4373  0027B8  6E3B               	movwf	(___fladd@a+3)^0,c
  4374  0027BA  EC58  F00C         	call	___fladd	;wreg free
  4375  0027BE  C034  F06E         	movff	?___fladd,roundf@y
  4376  0027C2  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4377  0027C6  C036  F070         	movff	?___fladd+2,roundf@y+2
  4378  0027CA  C037  F071         	movff	?___fladd+3,roundf@y+3
  4379  0027CE  EF52  F014         	goto	l9769
  4380  0027D2                     l9763:
  4381  0027D2  0E00               	movlw	0
  4382  0027D4  6E34               	movwf	___flge@ff1^0,c
  4383  0027D6  0E00               	movlw	0
  4384  0027D8  6E35               	movwf	(___flge@ff1+1)^0,c
  4385  0027DA  0E00               	movlw	0
  4386  0027DC  6E36               	movwf	(___flge@ff1+2)^0,c
  4387  0027DE  0EBF               	movlw	191
  4388  0027E0  6E37               	movwf	(___flge@ff1+3)^0,c
  4389  0027E2  C06E  F038         	movff	roundf@y,___flge@ff2
  4390  0027E6  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4391  0027EA  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4392  0027EE  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4393  0027F2  ECB7  F021         	call	___flge	;wreg free
  4394  0027F6  A0D8               	btfss	status,0,c
  4395  0027F8  EF00  F014         	goto	u11001
  4396  0027FC  EF02  F014         	goto	u11000
  4397  002800                     u11001:
  4398  002800  EF38  F014         	goto	l9767
  4399  002804                     u11000:
  4400  002804  C04C  F038         	movff	roundf@x,___fladd@a
  4401  002808  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4402  00280C  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4403  002810  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4404  002814  C06E  F034         	movff	roundf@y,___fladd@b
  4405  002818  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4406  00281C  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4407  002820  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4408  002824  EC58  F00C         	call	___fladd	;wreg free
  4409  002828  C034  F066         	movff	?___fladd,_roundf$1827
  4410  00282C  C035  F067         	movff	?___fladd+1,_roundf$1827+1
  4411  002830  C036  F068         	movff	?___fladd+2,_roundf$1827+2
  4412  002834  C037  F069         	movff	?___fladd+3,_roundf$1827+3
  4413  002838  C066  F034         	movff	_roundf$1827,___fladd@b
  4414  00283C  C067  F035         	movff	_roundf$1827+1,___fladd@b+1
  4415  002840  C068  F036         	movff	_roundf$1827+2,___fladd@b+2
  4416  002844  C069  F037         	movff	_roundf$1827+3,___fladd@b+3
  4417  002848  0E00               	movlw	0
  4418  00284A  6E38               	movwf	___fladd@a^0,c
  4419  00284C  0E00               	movlw	0
  4420  00284E  6E39               	movwf	(___fladd@a+1)^0,c
  4421  002850  0E80               	movlw	128
  4422  002852  6E3A               	movwf	(___fladd@a+2)^0,c
  4423  002854  0E3F               	movlw	63
  4424  002856  6E3B               	movwf	(___fladd@a+3)^0,c
  4425  002858  EC58  F00C         	call	___fladd	;wreg free
  4426  00285C  C034  F06E         	movff	?___fladd,roundf@y
  4427  002860  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4428  002864  C036  F070         	movff	?___fladd+2,roundf@y+2
  4429  002868  C037  F071         	movff	?___fladd+3,roundf@y+3
  4430  00286C  EF52  F014         	goto	l9769
  4431  002870                     l9767:
  4432  002870  C06E  F034         	movff	roundf@y,___fladd@b
  4433  002874  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4434  002878  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4435  00287C  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4436  002880  C04C  F038         	movff	roundf@x,___fladd@a
  4437  002884  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4438  002888  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4439  00288C  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4440  002890  EC58  F00C         	call	___fladd	;wreg free
  4441  002894  C034  F06E         	movff	?___fladd,roundf@y
  4442  002898  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4443  00289C  C036  F070         	movff	?___fladd+2,roundf@y+2
  4444  0028A0  C037  F071         	movff	?___fladd+3,roundf@y+3
  4445  0028A4                     l9769:
  4446  0028A4  C06A  F050         	movff	roundf@u,??_roundf
  4447  0028A8  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4448  0028AC  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4449  0028B0  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4450  0028B4  0E20               	movlw	32
  4451  0028B6  EF62  F014         	goto	u11010
  4452  0028BA                     u11015:
  4453  0028BA  90D8               	bcf	status,0,c
  4454  0028BC  3253               	rrcf	(??_roundf+3)^0,f,c
  4455  0028BE  3252               	rrcf	(??_roundf+2)^0,f,c
  4456  0028C0  3251               	rrcf	(??_roundf+1)^0,f,c
  4457  0028C2  3250               	rrcf	??_roundf^0,f,c
  4458  0028C4                     u11010:
  4459  0028C4  2EE8               	decfsz	wreg,f,c
  4460  0028C6  EF5D  F014         	goto	u11015
  4461  0028CA  5050               	movf	??_roundf^0,w,c
  4462  0028CC  1051               	iorwf	(??_roundf+1)^0,w,c
  4463  0028CE  1052               	iorwf	(??_roundf+2)^0,w,c
  4464  0028D0  1053               	iorwf	(??_roundf+3)^0,w,c
  4465  0028D2  B4D8               	btfsc	status,2,c
  4466  0028D4  EF6E  F014         	goto	u11021
  4467  0028D8  EF70  F014         	goto	u11020
  4468  0028DC                     u11021:
  4469  0028DC  EF82  F014         	goto	l9773
  4470  0028E0                     u11020:
  4471  0028E0  C06E  F006         	movff	roundf@y,___flneg@f1
  4472  0028E4  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
  4473  0028E8  C070  F008         	movff	roundf@y+2,___flneg@f1+2
  4474  0028EC  C071  F009         	movff	roundf@y+3,___flneg@f1+3
  4475  0028F0  EC23  F02B         	call	___flneg	;wreg free
  4476  0028F4  C006  F06E         	movff	?___flneg,roundf@y
  4477  0028F8  C007  F06F         	movff	?___flneg+1,roundf@y+1
  4478  0028FC  C008  F070         	movff	?___flneg+2,roundf@y+2
  4479  002900  C009  F071         	movff	?___flneg+3,roundf@y+3
  4480  002904                     l9773:
  4481  002904  C06E  F04C         	movff	roundf@y,?_roundf
  4482  002908  C06F  F04D         	movff	roundf@y+1,?_roundf+1
  4483  00290C  C070  F04E         	movff	roundf@y+2,?_roundf+2
  4484  002910  C071  F04F         	movff	roundf@y+3,?_roundf+3
  4485  002914                     l1740:
  4486  002914  0012               	return		;funcret
  4487  002916                     __end_of_roundf:
  4488                           	opt callstack 0
  4489                           
  4490 ;; *************** function _probarMapeoDireccionCruces *****************
  4491 ;; Defined at:
  4492 ;;		line 1323 in file "main.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  caminoFinal     2    0[BANK1 ] PTR unsigned char 
  4495 ;;		 -> comportamientoBasico@caminoFinal(20), 
  4496 ;;  caminoActual    1    2[BANK1 ] unsigned char 
  4497 ;;  investigando    2    3[BANK1 ] PTR unsigned char 
  4498 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  4499 ;;  posicionInvC    2    5[BANK1 ] PTR unsigned char 
  4500 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  4501 ;;  mapear          2    7[BANK1 ] PTR unsigned char 
  4502 ;;		 -> comportamientoBasico@mapear(1), 
  4503 ;;  cruceDetecta    2    9[BANK1 ] PTR unsigned char 
  4504 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  4505 ;;  contCaminosR    2   11[BANK1 ] PTR unsigned char 
  4506 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  4507 ;;  cambioOrient    2   13[BANK1 ] PTR unsigned char 
  4508 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4520 ;;      Params:         0       0      15       0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4522 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4523 ;;      Totals:         0       2      15       0       0       0       0       0       0
  4524 ;;Total ram usage:       17 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:   10
  4527 ;; This function calls:
  4528 ;;		_UART_printf
  4529 ;;		_sprintf
  4530 ;; This function is called by:
  4531 ;;		_comportamientoBasico
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text10
  4536  004570                     __ptext10:
  4537                           	opt callstack 0
  4538  004570                     _probarMapeoDireccionCruces:
  4539                           	opt callstack 19
  4540  004570                     
  4541                           ;main.c: 1323: void probarMapeoDireccionCruces(T_UBYTE* caminoFinal, T_UBYTE caminoActua
      +                          l, T_UBYTE* investigandoCruce,;main.c: 1324:         T_UBYTE* posicionInvCruce, T_UBYTE*
      +                           mapear, T_UBYTE* cruceDetectado, T_UBYTE* contCaminosRecorridos,;main.c: 1325:         
      +                          T_UBYTE* cambioOrientacionCarro) {;main.c: 1327:     *investigandoCruce = 0;
  4542  004570  C1E9  FFD9         	movff	probarMapeoDireccionCruces@investigandoCruce,fsr2l
  4543  004574  C1EA  FFDA         	movff	probarMapeoDireccionCruces@investigandoCruce+1,fsr2h
  4544  004578  0E00               	movlw	0
  4545  00457A  6EDF               	movwf	indf2,c
  4546                           
  4547                           ;main.c: 1328:     *posicionInvCruce = 0;
  4548  00457C  C1EB  FFD9         	movff	probarMapeoDireccionCruces@posicionInvCruce,fsr2l
  4549  004580  C1EC  FFDA         	movff	probarMapeoDireccionCruces@posicionInvCruce+1,fsr2h
  4550  004584  0E00               	movlw	0
  4551  004586  6EDF               	movwf	indf2,c
  4552                           
  4553                           ;main.c: 1329:     *mapear = 0;
  4554  004588  C1ED  FFD9         	movff	probarMapeoDireccionCruces@mapear,fsr2l
  4555  00458C  C1EE  FFDA         	movff	probarMapeoDireccionCruces@mapear+1,fsr2h
  4556  004590  0E00               	movlw	0
  4557  004592  6EDF               	movwf	indf2,c
  4558                           
  4559                           ;main.c: 1330:     *cruceDetectado = 0;
  4560  004594  C1EF  FFD9         	movff	probarMapeoDireccionCruces@cruceDetectado,fsr2l
  4561  004598  C1F0  FFDA         	movff	probarMapeoDireccionCruces@cruceDetectado+1,fsr2h
  4562  00459C  0E00               	movlw	0
  4563  00459E  6EDF               	movwf	indf2,c
  4564                           
  4565                           ;main.c: 1332:     *contCaminosRecorridos = 0;
  4566  0045A0  C1F1  FFD9         	movff	probarMapeoDireccionCruces@contCaminosRecorridos,fsr2l
  4567  0045A4  C1F2  FFDA         	movff	probarMapeoDireccionCruces@contCaminosRecorridos+1,fsr2h
  4568  0045A8  0E00               	movlw	0
  4569  0045AA  6EDF               	movwf	indf2,c
  4570                           
  4571                           ;main.c: 1333:     *cambioOrientacionCarro = 0;
  4572  0045AC  C1F3  FFD9         	movff	probarMapeoDireccionCruces@cambioOrientacionCarro,fsr2l
  4573  0045B0  C1F4  FFDA         	movff	probarMapeoDireccionCruces@cambioOrientacionCarro+1,fsr2h
  4574  0045B4  0E00               	movlw	0
  4575  0045B6  6EDF               	movwf	indf2,c
  4576  0045B8                     
  4577                           ;main.c: 1335:     if (!caminoEncontrado) {
  4578  0045B8  5059               	movf	_caminoEncontrado^0,w,c
  4579  0045BA  A4D8               	btfss	status,2,c
  4580  0045BC  EFE2  F022         	goto	u11771
  4581  0045C0  EFE4  F022         	goto	u11770
  4582  0045C4                     u11771:
  4583  0045C4  EF34  F023         	goto	l727
  4584  0045C8                     u11770:
  4585  0045C8                     
  4586                           ;main.c: 1337:         caminoFinal[numMovimientosTotales++] = caminoActual;
  4587  0045C8  0101               	movlb	1	; () banked
  4588  0045CA  5141               	movf	_numMovimientosTotales& (0+255),w,b
  4589  0045CC  25E6               	addwf	probarMapeoDireccionCruces@caminoFinal& (0+255),w,b
  4590  0045CE  6ED9               	movwf	fsr2l,c
  4591  0045D0  0E00               	movlw	0
  4592  0045D2  21E7               	addwfc	(probarMapeoDireccionCruces@caminoFinal+1)& (0+255),w,b
  4593  0045D4  6EDA               	movwf	fsr2h,c
  4594  0045D6  C1E8  FFDF         	movff	probarMapeoDireccionCruces@caminoActual,indf2
  4595  0045DA                     
  4596                           ; BSR set to: 1
  4597  0045DA  2B41               	incf	_numMovimientosTotales& (0+255),f,b
  4598                           
  4599                           ;main.c: 1339:         switch (caminoActual) {
  4600  0045DC  EF14  F023         	goto	l10487
  4601  0045E0                     l10479:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;main.c: 1341:                 sprintf(buffer, "\r\nEl camino ENFRENTE se acerca mas al 
      +                          destino\r\n");
  4605  0045E0  0E92               	movlw	low _buffer
  4606  0045E2  6FE7               	movwf	sprintf@s& (0+255),b
  4607  0045E4  0E01               	movlw	high _buffer
  4608  0045E6  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4609  0045E8  0EE4               	movlw	low STR_20
  4610  0045EA  6FE9               	movwf	sprintf@fmt& (0+255),b
  4611  0045EC  0E7D               	movlw	high STR_20
  4612  0045EE  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4613  0045F0  EC4F  F029         	call	_sprintf	;wreg free
  4614                           
  4615                           ;main.c: 1342:                 break;
  4616  0045F4  EF2E  F023         	goto	l10489
  4617  0045F8                     l10481:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;main.c: 1345:                 sprintf(buffer, "\r\nEl camino IZQUIERDA se acerca mas al
      +                           destino\r\n");
  4621  0045F8  0E92               	movlw	low _buffer
  4622  0045FA  6FE7               	movwf	sprintf@s& (0+255),b
  4623  0045FC  0E01               	movlw	high _buffer
  4624  0045FE  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4625  004600  0EB3               	movlw	low STR_21
  4626  004602  6FE9               	movwf	sprintf@fmt& (0+255),b
  4627  004604  0E7D               	movlw	high STR_21
  4628  004606  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4629  004608  EC4F  F029         	call	_sprintf	;wreg free
  4630                           
  4631                           ;main.c: 1346:                 break;
  4632  00460C  EF2E  F023         	goto	l10489
  4633  004610                     l10483:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;main.c: 1349:                 sprintf(buffer, "\r\nEl camino DERECHA se acerca mas al d
      +                          estino\r\n");
  4637  004610  0E92               	movlw	low _buffer
  4638  004612  6FE7               	movwf	sprintf@s& (0+255),b
  4639  004614  0E01               	movlw	high _buffer
  4640  004616  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  4641  004618  0E14               	movlw	low STR_22
  4642  00461A  6FE9               	movwf	sprintf@fmt& (0+255),b
  4643  00461C  0E7E               	movlw	high STR_22
  4644  00461E  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  4645  004620  EC4F  F029         	call	_sprintf	;wreg free
  4646                           
  4647                           ;main.c: 1350:                 break;
  4648  004624  EF2E  F023         	goto	l10489
  4649  004628                     l10487:
  4650                           
  4651                           ; BSR set to: 1
  4652  004628  51E8               	movf	probarMapeoDireccionCruces@caminoActual& (0+255),w,b
  4653  00462A  0100               	movlb	0	; () banked
  4654  00462C  6FFB               	movwf	??_probarMapeoDireccionCruces& (0+255),b
  4655  00462E  6BFC               	clrf	(??_probarMapeoDireccionCruces+1)& (0+255),b
  4656                           
  4657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4658                           ; Switch size 1, requested type "simple"
  4659                           ; Number of cases is 1, Range of values is 0 to 0
  4660                           ; switch strategies available:
  4661                           ; Name         Instructions Cycles
  4662                           ; simple_byte            4     3 (average)
  4663                           ;	Chosen strategy is simple_byte
  4664  004630  51FC               	movf	(??_probarMapeoDireccionCruces+1)& (0+255),w,b
  4665  004632  0A00               	xorlw	0	; case 0
  4666  004634  B4D8               	btfsc	status,2,c
  4667  004636  EF1F  F023         	goto	l11267
  4668  00463A  EF2E  F023         	goto	l10489
  4669  00463E                     l11267:
  4670                           
  4671                           ; BSR set to: 0
  4672                           ; Switch size 1, requested type "simple"
  4673                           ; Number of cases is 3, Range of values is 1 to 3
  4674                           ; switch strategies available:
  4675                           ; Name         Instructions Cycles
  4676                           ; simple_byte           10     6 (average)
  4677                           ;	Chosen strategy is simple_byte
  4678  00463E  51FB               	movf	??_probarMapeoDireccionCruces& (0+255),w,b
  4679  004640  0A01               	xorlw	1	; case 1
  4680  004642  B4D8               	btfsc	status,2,c
  4681  004644  EFF0  F022         	goto	l10479
  4682  004648  0A03               	xorlw	3	; case 2
  4683  00464A  B4D8               	btfsc	status,2,c
  4684  00464C  EFFC  F022         	goto	l10481
  4685  004650  0A01               	xorlw	1	; case 3
  4686  004652  B4D8               	btfsc	status,2,c
  4687  004654  EF08  F023         	goto	l10483
  4688  004658  EF2E  F023         	goto	l10489
  4689  00465C                     l10489:
  4690                           
  4691                           ;main.c: 1353:         UART_printf(buffer);
  4692  00465C  0E92               	movlw	low _buffer
  4693  00465E  6E07               	movwf	UART_printf@cadena^0,c
  4694  004660  0E01               	movlw	high _buffer
  4695  004662  6E08               	movwf	(UART_printf@cadena+1)^0,c
  4696  004664  EC45  F028         	call	_UART_printf	;wreg free
  4697  004668                     l727:
  4698  004668  0012               	return		;funcret
  4699  00466A                     __end_of_probarMapeoDireccionCruces:
  4700                           	opt callstack 0
  4701                           
  4702 ;; *************** function _moverCarrito *****************
  4703 ;; Defined at:
  4704 ;;		line 524 in file "main.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  espejearCarr    1    wreg     unsigned char 
  4707 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
  4708 ;;		 -> comportamientoBasico@carroEspejeado(1), 
  4709 ;;  avanceRectoL    2   42[BANK0 ] PTR unsigned char 
  4710 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  espejearCarr    1   46[BANK0 ] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4722 ;;      Params:         0       4       0       0       0       0       0       0       0
  4723 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4724 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4725 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4726 ;;Total ram usage:        7 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    8
  4729 ;; This function calls:
  4730 ;;		_forzarAvanceRecto
  4731 ;;		_forzarEspejeo
  4732 ;; This function is called by:
  4733 ;;		_comportamientoBasico
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text11
  4738  00415E                     __ptext11:
  4739                           	opt callstack 0
  4740  00415E                     _moverCarrito:
  4741                           	opt callstack 21
  4742                           
  4743                           ;incstack = 0
  4744                           ;moverCarrito@espejearCarroY stored from wreg
  4745  00415E  0100               	movlb	0	; () banked
  4746  004160  6F8E               	movwf	moverCarrito@espejearCarroY& (0+255),b
  4747  004162                     
  4748                           ;main.c: 526:     switch (mouse.curr_state) {
  4749  004162  EF14  F021         	goto	l10077
  4750  004166                     l429:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;main.c: 530:             LATB4 = 1;
  4754  004166  888A               	bsf	3978,4,c	;volatile
  4755                           
  4756                           ;main.c: 531:             LATB5 = 0;
  4757  004168  9A8A               	bcf	3978,5,c	;volatile
  4758                           
  4759                           ;main.c: 532:             LATB6 = 1;
  4760  00416A  8C8A               	bsf	3978,6,c	;volatile
  4761                           
  4762                           ;main.c: 533:             LATB7 = 0;
  4763  00416C  9E8A               	bcf	3978,7,c	;volatile
  4764  00416E                     
  4765                           ; BSR set to: 0
  4766                           ;main.c: 535:             if (*avanceRectoLargo) {
  4767  00416E  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4768  004172  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4769  004176  50DF               	movf	indf2,w,c
  4770  004178  B4D8               	btfsc	status,2,c
  4771  00417A  EFC1  F020         	goto	u11321
  4772  00417E  EFC3  F020         	goto	u11320
  4773  004182                     u11321:
  4774  004182  EFD6  F020         	goto	l10059
  4775  004186                     u11320:
  4776  004186                     
  4777                           ; BSR set to: 0
  4778                           ;main.c: 536:                 *avanceRectoLargo = 0;
  4779  004186  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4780  00418A  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4781  00418E  0E00               	movlw	0
  4782  004190  6EDF               	movwf	indf2,c
  4783  004192                     
  4784                           ; BSR set to: 0
  4785                           ;main.c: 537:                 _delay((unsigned long)((410 * 2)*(4000000/4000.0)));
  4786  004192  0E05               	movlw	5
  4787  004194  0100               	movlb	0	; () banked
  4788  004196  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4789  004198  0E29               	movlw	41
  4790  00419A  6F8C               	movwf	??_moverCarrito& (0+255),b
  4791  00419C  0EEA               	movlw	234
  4792  00419E                     u12137:
  4793  00419E  2EE8               	decfsz	wreg,f,c
  4794  0041A0  D7FE               	bra	u12137
  4795  0041A2  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4796  0041A4  D7FC               	bra	u12137
  4797  0041A6  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4798  0041A8  D7FA               	bra	u12137
  4799  0041AA  F000               	nop	
  4800  0041AC                     l10059:
  4801                           
  4802                           ;main.c: 541:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  4803  0041AC  0E48               	movlw	72
  4804  0041AE  0100               	movlb	0	; () banked
  4805  0041B0  6F8C               	movwf	??_moverCarrito& (0+255),b
  4806  0041B2  0E6C               	movlw	108
  4807  0041B4                     u12147:
  4808  0041B4  2EE8               	decfsz	wreg,f,c
  4809  0041B6  D7FE               	bra	u12147
  4810  0041B8  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4811  0041BA  D7FC               	bra	u12147
  4812  0041BC  F000               	nop	
  4813  0041BE  EF32  F021         	goto	l438
  4814  0041C2                     l10061:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;main.c: 547:             if (espejearCarroY) {
  4818  0041C2  518E               	movf	moverCarrito@espejearCarroY& (0+255),w,b
  4819  0041C4  B4D8               	btfsc	status,2,c
  4820  0041C6  EFE7  F020         	goto	u11331
  4821  0041CA  EFE9  F020         	goto	u11330
  4822  0041CE                     u11331:
  4823  0041CE  EFF3  F020         	goto	l434
  4824  0041D2                     u11330:
  4825  0041D2                     
  4826                           ; BSR set to: 0
  4827                           ;main.c: 548:                 forzarEspejeo();
  4828  0041D2  ECC7  F02A         	call	_forzarEspejeo	;wreg free
  4829  0041D6                     
  4830                           ;main.c: 549:                 *carroEspejeado = 1;
  4831  0041D6  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
  4832  0041DA  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
  4833  0041DE  0E01               	movlw	1
  4834  0041E0  6EDF               	movwf	indf2,c
  4835                           
  4836                           ;main.c: 550:             } else {
  4837  0041E2  EF32  F021         	goto	l438
  4838  0041E6                     l434:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;main.c: 551:                 LATB4 = 0;
  4842  0041E6  988A               	bcf	3978,4,c	;volatile
  4843                           
  4844                           ;main.c: 552:                 LATB5 = 0;
  4845  0041E8  9A8A               	bcf	3978,5,c	;volatile
  4846                           
  4847                           ;main.c: 553:                 LATB6 = 1;
  4848  0041EA  8C8A               	bsf	3978,6,c	;volatile
  4849                           
  4850                           ;main.c: 554:                 LATB7 = 0;
  4851  0041EC  9E8A               	bcf	3978,7,c	;volatile
  4852  0041EE                     l10067:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;main.c: 555:                 _delay((unsigned long)((410)*(4000000/4000.0)));
  4856  0041EE  0E03               	movlw	3
  4857  0041F0  0100               	movlb	0	; () banked
  4858  0041F2  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4859  0041F4  0E15               	movlw	21
  4860  0041F6  6F8C               	movwf	??_moverCarrito& (0+255),b
  4861  0041F8  0E73               	movlw	115
  4862  0041FA                     u12157:
  4863  0041FA  2EE8               	decfsz	wreg,f,c
  4864  0041FC  D7FE               	bra	u12157
  4865  0041FE  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4866  004200  D7FC               	bra	u12157
  4867  004202  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4868  004204  D7FA               	bra	u12157
  4869  004206  D000               	nop2	
  4870  004208                     
  4871                           ;main.c: 556:                 forzarAvanceRecto();
  4872  004208  ECD7  F02B         	call	_forzarAvanceRecto	;wreg free
  4873  00420C  EF32  F021         	goto	l438
  4874  004210                     l436:
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;main.c: 564:             LATB4 = 1;
  4878  004210  888A               	bsf	3978,4,c	;volatile
  4879                           
  4880                           ;main.c: 565:             LATB5 = 0;
  4881  004212  9A8A               	bcf	3978,5,c	;volatile
  4882                           
  4883                           ;main.c: 566:             LATB6 = 0;
  4884  004214  9C8A               	bcf	3978,6,c	;volatile
  4885                           
  4886                           ;main.c: 567:             LATB7 = 0;
  4887  004216  9E8A               	bcf	3978,7,c	;volatile
  4888  004218  EFF7  F020         	goto	l10067
  4889  00421C                     l437:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;main.c: 576:             LATB4 = 0;
  4893  00421C  988A               	bcf	3978,4,c	;volatile
  4894                           
  4895                           ;main.c: 577:             LATB5 = 0;
  4896  00421E  9A8A               	bcf	3978,5,c	;volatile
  4897                           
  4898                           ;main.c: 578:             LATB6 = 0;
  4899  004220  9C8A               	bcf	3978,6,c	;volatile
  4900                           
  4901                           ;main.c: 579:             LATB7 = 0;
  4902  004222  9E8A               	bcf	3978,7,c	;volatile
  4903                           
  4904                           ;main.c: 581:             break;
  4905  004224  EF32  F021         	goto	l438
  4906  004228                     l10077:
  4907  004228  5057               	movf	_mouse^0,w,c
  4908  00422A  0100               	movlb	0	; () banked
  4909  00422C  6F8C               	movwf	??_moverCarrito& (0+255),b
  4910  00422E  6B8D               	clrf	(??_moverCarrito+1)& (0+255),b
  4911                           
  4912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4913                           ; Switch size 1, requested type "simple"
  4914                           ; Number of cases is 1, Range of values is 0 to 0
  4915                           ; switch strategies available:
  4916                           ; Name         Instructions Cycles
  4917                           ; simple_byte            4     3 (average)
  4918                           ;	Chosen strategy is simple_byte
  4919  004230  518D               	movf	(??_moverCarrito+1)& (0+255),w,b
  4920  004232  0A00               	xorlw	0	; case 0
  4921  004234  B4D8               	btfsc	status,2,c
  4922  004236  EF1F  F021         	goto	l11269
  4923  00423A  EF32  F021         	goto	l438
  4924  00423E                     l11269:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ; Switch size 1, requested type "simple"
  4928                           ; Number of cases is 4, Range of values is 1 to 4
  4929                           ; switch strategies available:
  4930                           ; Name         Instructions Cycles
  4931                           ; simple_byte           13     7 (average)
  4932                           ;	Chosen strategy is simple_byte
  4933  00423E  518C               	movf	??_moverCarrito& (0+255),w,b
  4934  004240  0A01               	xorlw	1	; case 1
  4935  004242  B4D8               	btfsc	status,2,c
  4936  004244  EFB3  F020         	goto	l429
  4937  004248  0A03               	xorlw	3	; case 2
  4938  00424A  B4D8               	btfsc	status,2,c
  4939  00424C  EFE1  F020         	goto	l10061
  4940  004250  0A01               	xorlw	1	; case 3
  4941  004252  B4D8               	btfsc	status,2,c
  4942  004254  EF08  F021         	goto	l436
  4943  004258  0A07               	xorlw	7	; case 4
  4944  00425A  B4D8               	btfsc	status,2,c
  4945  00425C  EF0E  F021         	goto	l437
  4946  004260  EF32  F021         	goto	l438
  4947  004264                     l438:
  4948  004264  0012               	return		;funcret
  4949  004266                     __end_of_moverCarrito:
  4950                           	opt callstack 0
  4951                           
  4952 ;; *************** function _forzarEspejeo *****************
  4953 ;; Defined at:
  4954 ;;		line 516 in file "main.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;		None
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4968 ;;      Params:         0       0       0       0       0       0       0       0       0
  4969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4971 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4972 ;;Total ram usage:        0 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; Hardware stack levels required when called:    7
  4975 ;; This function calls:
  4976 ;;		___flge
  4977 ;;		_forzarEspejeoDerecha
  4978 ;;		_forzarEspejeoIzquierda
  4979 ;; This function is called by:
  4980 ;;		_moverCarrito
  4981 ;;		_finalizarRecorrido
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text12
  4986  00558E                     __ptext12:
  4987                           	opt callstack 0
  4988  00558E                     _forzarEspejeo:
  4989                           	opt callstack 21
  4990  00558E                     
  4991                           ;main.c: 518:     if (sensorIzquierda > sensorDerecha)
  4992  00558E  C12C  F034         	movff	_sensorDerecha,___flge@ff1
  4993  005592  C12D  F035         	movff	_sensorDerecha+1,___flge@ff1+1
  4994  005596  C12E  F036         	movff	_sensorDerecha+2,___flge@ff1+2
  4995  00559A  C12F  F037         	movff	_sensorDerecha+3,___flge@ff1+3
  4996  00559E  C128  F038         	movff	_sensorIzquierda,___flge@ff2
  4997  0055A2  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  4998  0055A6  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  4999  0055AA  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  5000  0055AE  ECB7  F021         	call	___flge	;wreg free
  5001  0055B2  B0D8               	btfsc	status,0,c
  5002  0055B4  EFDE  F02A         	goto	u11211
  5003  0055B8  EFE0  F02A         	goto	u11210
  5004  0055BC                     u11211:
  5005  0055BC  EFE4  F02A         	goto	l9917
  5006  0055C0                     u11210:
  5007  0055C0                     
  5008                           ;main.c: 519:         forzarEspejeoIzquierda();
  5009  0055C0  EC17  F02A         	call	_forzarEspejeoIzquierda	;wreg free
  5010  0055C4  EFE6  F02A         	goto	l425
  5011  0055C8                     l9917:
  5012                           
  5013                           ;main.c: 521:         forzarEspejeoDerecha();
  5014  0055C8  EC3B  F02A         	call	_forzarEspejeoDerecha	;wreg free
  5015  0055CC                     l425:
  5016  0055CC  0012               	return		;funcret
  5017  0055CE                     __end_of_forzarEspejeo:
  5018                           	opt callstack 0
  5019                           
  5020 ;; *************** function _forzarEspejeoIzquierda *****************
  5021 ;; Defined at:
  5022 ;;		line 488 in file "main.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5038 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5039 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5040 ;;Total ram usage:        1 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    6
  5043 ;; This function calls:
  5044 ;;		_forzarGiroIzquierda
  5045 ;;		_forzarParoAuto
  5046 ;;		_forzarReversa
  5047 ;;		_velocidadEstandar
  5048 ;; This function is called by:
  5049 ;;		_forzarEspejeo
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text13
  5054  00542E                     __ptext13:
  5055                           	opt callstack 0
  5056  00542E                     _forzarEspejeoIzquierda:
  5057                           	opt callstack 21
  5058  00542E                     
  5059                           ;main.c: 490:     forzarParoAuto();
  5060  00542E  EC08  F02C         	call	_forzarParoAuto	;wreg free
  5061  005432                     
  5062                           ;main.c: 491:     velocidadEstandar();
  5063  005432  EC8D  F02B         	call	_velocidadEstandar	;wreg free
  5064  005436                     
  5065                           ;main.c: 492:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5066  005436  0E82               	movlw	130
  5067  005438  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5068  00543A  0EDE               	movlw	222
  5069  00543C                     u12167:
  5070  00543C  2EE8               	decfsz	wreg,f,c
  5071  00543E  D7FE               	bra	u12167
  5072  005440  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5073  005442  D7FC               	bra	u12167
  5074  005444                     
  5075                           ;main.c: 493:     forzarGiroIzquierda();
  5076  005444  ECE8  F02B         	call	_forzarGiroIzquierda	;wreg free
  5077  005448                     
  5078                           ;main.c: 494:     forzarParoAuto();
  5079  005448  EC08  F02C         	call	_forzarParoAuto	;wreg free
  5080  00544C                     
  5081                           ;main.c: 495:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5082  00544C  0E82               	movlw	130
  5083  00544E  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5084  005450  0EDE               	movlw	222
  5085  005452                     u12177:
  5086  005452  2EE8               	decfsz	wreg,f,c
  5087  005454  D7FE               	bra	u12177
  5088  005456  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5089  005458  D7FC               	bra	u12177
  5090  00545A                     
  5091                           ;main.c: 496:     forzarReversa();
  5092  00545A  ECC6  F02B         	call	_forzarReversa	;wreg free
  5093  00545E                     
  5094                           ;main.c: 497:     forzarParoAuto();
  5095  00545E  EC08  F02C         	call	_forzarParoAuto	;wreg free
  5096  005462                     
  5097                           ;main.c: 498:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5098  005462  0E82               	movlw	130
  5099  005464  6E54               	movwf	??_forzarEspejeoIzquierda^0,c
  5100  005466  0EDE               	movlw	222
  5101  005468                     u12187:
  5102  005468  2EE8               	decfsz	wreg,f,c
  5103  00546A  D7FE               	bra	u12187
  5104  00546C  2E54               	decfsz	??_forzarEspejeoIzquierda^0,f,c
  5105  00546E  D7FC               	bra	u12187
  5106  005470                     
  5107                           ;main.c: 499:     forzarGiroIzquierda();
  5108  005470  ECE8  F02B         	call	_forzarGiroIzquierda	;wreg free
  5109  005474  0012               	return		;funcret
  5110  005476                     __end_of_forzarEspejeoIzquierda:
  5111                           	opt callstack 0
  5112                           
  5113 ;; *************** function _forzarGiroIzquierda *****************
  5114 ;; Defined at:
  5115 ;;		line 470 in file "main.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;		None
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5129 ;;      Params:         0       0       0       0       0       0       0       0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5131 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5132 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5133 ;;Total ram usage:        2 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    2
  5136 ;; This function calls:
  5137 ;;		Nothing
  5138 ;; This function is called by:
  5139 ;;		_forzarEspejeoIzquierda
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text14
  5144  0057D0                     __ptext14:
  5145                           	opt callstack 0
  5146  0057D0                     _forzarGiroIzquierda:
  5147                           	opt callstack 24
  5148  0057D0                     
  5149                           ;main.c: 471:     LATB4 = 0;
  5150  0057D0  988A               	bcf	3978,4,c	;volatile
  5151                           
  5152                           ;main.c: 472:     LATB5 = 0;
  5153  0057D2  9A8A               	bcf	3978,5,c	;volatile
  5154                           
  5155                           ;main.c: 473:     LATB6 = 1;
  5156  0057D4  8C8A               	bsf	3978,6,c	;volatile
  5157                           
  5158                           ;main.c: 474:     LATB7 = 0;
  5159  0057D6  9E8A               	bcf	3978,7,c	;volatile
  5160  0057D8                     
  5161                           ;main.c: 475:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5162  0057D8  0E03               	movlw	3
  5163  0057DA  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
  5164  0057DC  0E15               	movlw	21
  5165  0057DE  6E06               	movwf	??_forzarGiroIzquierda^0,c
  5166  0057E0  0E74               	movlw	116
  5167  0057E2                     u12197:
  5168  0057E2  2EE8               	decfsz	wreg,f,c
  5169  0057E4  D7FE               	bra	u12197
  5170  0057E6  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
  5171  0057E8  D7FC               	bra	u12197
  5172  0057EA  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
  5173  0057EC  D7FA               	bra	u12197
  5174  0057EE  0012               	return		;funcret
  5175  0057F0                     __end_of_forzarGiroIzquierda:
  5176                           	opt callstack 0
  5177                           
  5178 ;; *************** function _forzarEspejeoDerecha *****************
  5179 ;; Defined at:
  5180 ;;		line 502 in file "main.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5196 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5197 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5198 ;;Total ram usage:        1 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    6
  5201 ;; This function calls:
  5202 ;;		_forzarGiroDerecha
  5203 ;;		_forzarParoAuto
  5204 ;;		_forzarReversa
  5205 ;;		_velocidadEstandar
  5206 ;; This function is called by:
  5207 ;;		_forzarEspejeo
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text15
  5212  005476                     __ptext15:
  5213                           	opt callstack 0
  5214  005476                     _forzarEspejeoDerecha:
  5215                           	opt callstack 21
  5216  005476                     
  5217                           ;main.c: 504:     forzarParoAuto();
  5218  005476  EC08  F02C         	call	_forzarParoAuto	;wreg free
  5219  00547A                     
  5220                           ;main.c: 505:     velocidadEstandar();
  5221  00547A  EC8D  F02B         	call	_velocidadEstandar	;wreg free
  5222  00547E                     
  5223                           ;main.c: 506:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5224  00547E  0E82               	movlw	130
  5225  005480  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5226  005482  0EDE               	movlw	222
  5227  005484                     u12207:
  5228  005484  2EE8               	decfsz	wreg,f,c
  5229  005486  D7FE               	bra	u12207
  5230  005488  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5231  00548A  D7FC               	bra	u12207
  5232  00548C                     
  5233                           ;main.c: 507:     forzarGiroDerecha();
  5234  00548C  ECF8  F02B         	call	_forzarGiroDerecha	;wreg free
  5235  005490                     
  5236                           ;main.c: 508:     forzarParoAuto();
  5237  005490  EC08  F02C         	call	_forzarParoAuto	;wreg free
  5238  005494                     
  5239                           ;main.c: 509:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5240  005494  0E82               	movlw	130
  5241  005496  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5242  005498  0EDE               	movlw	222
  5243  00549A                     u12217:
  5244  00549A  2EE8               	decfsz	wreg,f,c
  5245  00549C  D7FE               	bra	u12217
  5246  00549E  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5247  0054A0  D7FC               	bra	u12217
  5248  0054A2                     
  5249                           ;main.c: 510:     forzarReversa();
  5250  0054A2  ECC6  F02B         	call	_forzarReversa	;wreg free
  5251  0054A6                     
  5252                           ;main.c: 511:     forzarParoAuto();
  5253  0054A6  EC08  F02C         	call	_forzarParoAuto	;wreg free
  5254  0054AA                     
  5255                           ;main.c: 512:     _delay((unsigned long)((100)*(4000000/4000.0)));
  5256  0054AA  0E82               	movlw	130
  5257  0054AC  6E54               	movwf	??_forzarEspejeoDerecha^0,c
  5258  0054AE  0EDE               	movlw	222
  5259  0054B0                     u12227:
  5260  0054B0  2EE8               	decfsz	wreg,f,c
  5261  0054B2  D7FE               	bra	u12227
  5262  0054B4  2E54               	decfsz	??_forzarEspejeoDerecha^0,f,c
  5263  0054B6  D7FC               	bra	u12227
  5264  0054B8                     
  5265                           ;main.c: 513:     forzarGiroDerecha();
  5266  0054B8  ECF8  F02B         	call	_forzarGiroDerecha	;wreg free
  5267  0054BC  0012               	return		;funcret
  5268  0054BE                     __end_of_forzarEspejeoDerecha:
  5269                           	opt callstack 0
  5270                           
  5271 ;; *************** function _velocidadEstandar *****************
  5272 ;; Defined at:
  5273 ;;		line 1309 in file "main.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    5
  5294 ;; This function calls:
  5295 ;;		_pwmDuty
  5296 ;; This function is called by:
  5297 ;;		_inicializarComportamientoBasico
  5298 ;;		_comportamientoBasico
  5299 ;;		_forzarEspejeoIzquierda
  5300 ;;		_forzarEspejeoDerecha
  5301 ;;		_regresarAlCruce
  5302 ;;		_probarCruceT
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text16
  5307  00571A                     __ptext16:
  5308                           	opt callstack 0
  5309  00571A                     _velocidadEstandar:
  5310                           	opt callstack 24
  5311  00571A                     
  5312                           ;main.c: 1311:     pwmDuty(100, 1);
  5313  00571A  0E00               	movlw	0
  5314  00571C  0100               	movlb	0	; () banked
  5315  00571E  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5316  005720  0E64               	movlw	100
  5317  005722  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5318  005724  0E01               	movlw	1
  5319  005726  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5320  005728  ECFC  F019         	call	_pwmDuty	;wreg free
  5321                           
  5322                           ;main.c: 1312:     pwmDuty(100, 2);
  5323  00572C  0E00               	movlw	0
  5324  00572E  0100               	movlb	0	; () banked
  5325  005730  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5326  005732  0E64               	movlw	100
  5327  005734  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5328  005736  0E02               	movlw	2
  5329  005738  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5330  00573A  ECFC  F019         	call	_pwmDuty	;wreg free
  5331  00573E  0012               	return		;funcret
  5332  005740                     __end_of_velocidadEstandar:
  5333                           	opt callstack 0
  5334                           
  5335 ;; *************** function _forzarReversa *****************
  5336 ;; Defined at:
  5337 ;;		line 450 in file "main.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5351 ;;      Params:         0       0       0       0       0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5353 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5354 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5355 ;;Total ram usage:        2 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    2
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_forzarEspejeoIzquierda
  5362 ;;		_forzarEspejeoDerecha
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text17
  5367  00578C                     __ptext17:
  5368                           	opt callstack 0
  5369  00578C                     _forzarReversa:
  5370                           	opt callstack 24
  5371  00578C                     
  5372                           ;main.c: 451:     LATB4 = 0;
  5373  00578C  988A               	bcf	3978,4,c	;volatile
  5374                           
  5375                           ;main.c: 452:     LATB5 = 1;
  5376  00578E  8A8A               	bsf	3978,5,c	;volatile
  5377                           
  5378                           ;main.c: 453:     LATB6 = 0;
  5379  005790  9C8A               	bcf	3978,6,c	;volatile
  5380                           
  5381                           ;main.c: 454:     LATB7 = 1;
  5382  005792  8E8A               	bsf	3978,7,c	;volatile
  5383  005794                     
  5384                           ;main.c: 456:     _delay((unsigned long)((400)*(4000000/4000.0)));
  5385  005794  0E03               	movlw	3
  5386  005796  6E07               	movwf	(??_forzarReversa+1)^0,c
  5387  005798  0E08               	movlw	8
  5388  00579A  6E06               	movwf	??_forzarReversa^0,c
  5389  00579C  0E77               	movlw	119
  5390  00579E                     u12237:
  5391  00579E  2EE8               	decfsz	wreg,f,c
  5392  0057A0  D7FE               	bra	u12237
  5393  0057A2  2E06               	decfsz	??_forzarReversa^0,f,c
  5394  0057A4  D7FC               	bra	u12237
  5395  0057A6  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  5396  0057A8  D7FA               	bra	u12237
  5397  0057AA  F000               	nop	
  5398  0057AC  0012               	return		;funcret
  5399  0057AE                     __end_of_forzarReversa:
  5400                           	opt callstack 0
  5401                           
  5402 ;; *************** function _forzarParoAuto *****************
  5403 ;; Defined at:
  5404 ;;		line 439 in file "main.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         0       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5421 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:        1 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    2
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_comportamientoBasico
  5429 ;;		_forzarEspejeoIzquierda
  5430 ;;		_forzarEspejeoDerecha
  5431 ;;		_main
  5432 ;;		_finalizarRecorrido
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text18
  5437  005810                     __ptext18:
  5438                           	opt callstack 0
  5439  005810                     _forzarParoAuto:
  5440                           	opt callstack 28
  5441  005810                     
  5442                           ;main.c: 441:     LATB4 = 0;
  5443  005810  988A               	bcf	3978,4,c	;volatile
  5444                           
  5445                           ;main.c: 442:     LATB5 = 0;
  5446  005812  9A8A               	bcf	3978,5,c	;volatile
  5447                           
  5448                           ;main.c: 443:     LATB6 = 0;
  5449  005814  9C8A               	bcf	3978,6,c	;volatile
  5450                           
  5451                           ;main.c: 446:     if (!0)
  5452  005816  9E8A               	bcf	3978,7,c	;volatile
  5453  005818                     
  5454                           ;main.c: 447:         _delay((unsigned long)((30)*(4000000/4000.0)));
  5455  005818  0E27               	movlw	39
  5456  00581A  6E06               	movwf	??_forzarParoAuto^0,c
  5457  00581C  0EF5               	movlw	245
  5458  00581E                     u12247:
  5459  00581E  2EE8               	decfsz	wreg,f,c
  5460  005820  D7FE               	bra	u12247
  5461  005822  2E06               	decfsz	??_forzarParoAuto^0,f,c
  5462  005824  D7FC               	bra	u12247
  5463  005826  F000               	nop	
  5464  005828  0012               	return		;funcret
  5465  00582A                     __end_of_forzarParoAuto:
  5466                           	opt callstack 0
  5467                           
  5468 ;; *************** function _forzarGiroDerecha *****************
  5469 ;; Defined at:
  5470 ;;		line 479 in file "main.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5486 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5487 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5488 ;;Total ram usage:        2 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    2
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_forzarEspejeoDerecha
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text19
  5499  0057F0                     __ptext19:
  5500                           	opt callstack 0
  5501  0057F0                     _forzarGiroDerecha:
  5502                           	opt callstack 24
  5503  0057F0                     
  5504                           ;main.c: 480:     LATB4 = 1;
  5505  0057F0  888A               	bsf	3978,4,c	;volatile
  5506                           
  5507                           ;main.c: 481:     LATB5 = 0;
  5508  0057F2  9A8A               	bcf	3978,5,c	;volatile
  5509                           
  5510                           ;main.c: 482:     LATB6 = 0;
  5511  0057F4  9C8A               	bcf	3978,6,c	;volatile
  5512                           
  5513                           ;main.c: 483:     LATB7 = 0;
  5514  0057F6  9E8A               	bcf	3978,7,c	;volatile
  5515  0057F8                     
  5516                           ;main.c: 484:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5517  0057F8  0E03               	movlw	3
  5518  0057FA  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
  5519  0057FC  0E15               	movlw	21
  5520  0057FE  6E06               	movwf	??_forzarGiroDerecha^0,c
  5521  005800  0E74               	movlw	116
  5522  005802                     u12257:
  5523  005802  2EE8               	decfsz	wreg,f,c
  5524  005804  D7FE               	bra	u12257
  5525  005806  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
  5526  005808  D7FC               	bra	u12257
  5527  00580A  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
  5528  00580C  D7FA               	bra	u12257
  5529  00580E  0012               	return		;funcret
  5530  005810                     __end_of_forzarGiroDerecha:
  5531                           	opt callstack 0
  5532                           
  5533 ;; *************** function _forzarAvanceRecto *****************
  5534 ;; Defined at:
  5535 ;;		line 460 in file "main.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  1    wreg      void 
  5542 ;; Registers used:
  5543 ;;		wreg
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5551 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5552 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5553 ;;Total ram usage:        2 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    2
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_moverCarrito
  5560 ;;		_mover
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text20
  5565  0057AE                     __ptext20:
  5566                           	opt callstack 0
  5567  0057AE                     _forzarAvanceRecto:
  5568                           	opt callstack 25
  5569  0057AE                     
  5570                           ;main.c: 461:     LATB4 = 1;
  5571  0057AE  888A               	bsf	3978,4,c	;volatile
  5572                           
  5573                           ;main.c: 462:     LATB5 = 0;
  5574  0057B0  9A8A               	bcf	3978,5,c	;volatile
  5575                           
  5576                           ;main.c: 463:     LATB6 = 1;
  5577  0057B2  8C8A               	bsf	3978,6,c	;volatile
  5578                           
  5579                           ;main.c: 464:     LATB7 = 0;
  5580  0057B4  9E8A               	bcf	3978,7,c	;volatile
  5581  0057B6                     
  5582                           ;main.c: 466:     _delay((unsigned long)((550)*(4000000/4000.0)));
  5583  0057B6  0E03               	movlw	3
  5584  0057B8  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
  5585  0057BA  0ECB               	movlw	203
  5586  0057BC  6E06               	movwf	??_forzarAvanceRecto^0,c
  5587  0057BE  0E45               	movlw	69
  5588  0057C0                     u12267:
  5589  0057C0  2EE8               	decfsz	wreg,f,c
  5590  0057C2  D7FE               	bra	u12267
  5591  0057C4  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
  5592  0057C6  D7FC               	bra	u12267
  5593  0057C8  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
  5594  0057CA  D7FA               	bra	u12267
  5595  0057CC  F000               	nop	
  5596  0057CE  0012               	return		;funcret
  5597  0057D0                     __end_of_forzarAvanceRecto:
  5598                           	opt callstack 0
  5599                           
  5600 ;; *************** function _limpiarMovimientos *****************
  5601 ;; Defined at:
  5602 ;;		line 794 in file "main.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
  5605 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  5606 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
  5607 ;;		 -> comportamientoBasico@numMovimientos(2), 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  i               2   11[COMRAM] int 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5619 ;;      Params:         4       0       0       0       0       0       0       0       0
  5620 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5621 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5622 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5623 ;;Total ram usage:        8 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    2
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_comportamientoBasico
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text21
  5634  005392                     __ptext21:
  5635                           	opt callstack 0
  5636  005392                     _limpiarMovimientos:
  5637                           	opt callstack 27
  5638  005392                     
  5639                           ;main.c: 796:     for (T_INT i = 0; i < *numMovimientos; i++)
  5640  005392  0E00               	movlw	0
  5641  005394  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
  5642  005396  0E00               	movlw	0
  5643  005398  6E0C               	movwf	limpiarMovimientos@i^0,c
  5644  00539A  EFD9  F029         	goto	l10467
  5645  00539E                     l10463:
  5646                           
  5647                           ;main.c: 797:         movimientos[i] = 0;
  5648  00539E  500C               	movf	limpiarMovimientos@i^0,w,c
  5649  0053A0  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
  5650  0053A2  6ED9               	movwf	fsr2l,c
  5651  0053A4  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
  5652  0053A6  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
  5653  0053A8  6EDA               	movwf	fsr2h,c
  5654  0053AA  0E00               	movlw	0
  5655  0053AC  6EDF               	movwf	indf2,c
  5656  0053AE  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
  5657  0053B0  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
  5658  0053B2                     l10467:
  5659  0053B2  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
  5660  0053B6  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
  5661  0053BA  50DE               	movf	postinc2,w,c
  5662  0053BC  5C0C               	subwf	limpiarMovimientos@i^0,w,c
  5663  0053BE  50DE               	movf	postinc2,w,c
  5664  0053C0  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
  5665  0053C2  A0D8               	btfss	status,0,c
  5666  0053C4  EFE6  F029         	goto	u11761
  5667  0053C8  EFE8  F029         	goto	u11760
  5668  0053CC                     u11761:
  5669  0053CC  EFCF  F029         	goto	l10463
  5670  0053D0                     u11760:
  5671  0053D0                     
  5672                           ;main.c: 799:     *numMovimientos = 0;
  5673  0053D0  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
  5674  0053D4  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
  5675  0053D8  0E00               	movlw	0
  5676  0053DA  6EDE               	movwf	postinc2,c
  5677  0053DC  0E00               	movlw	0
  5678  0053DE  6EDD               	movwf	postdec2,c
  5679  0053E0  0012               	return		;funcret
  5680  0053E2                     __end_of_limpiarMovimientos:
  5681                           	opt callstack 0
  5682                           
  5683 ;; *************** function _leerSensores *****************
  5684 ;; Defined at:
  5685 ;;		line 1196 in file "main.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5699 ;;      Params:         0       0       0       0       0       0       0       0       0
  5700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5702 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    4
  5706 ;; This function calls:
  5707 ;;		___fladd
  5708 ;;		___fldiv
  5709 ;;		_dameDistancia
  5710 ;; This function is called by:
  5711 ;;		_comportamientoBasico
  5712 ;;		_probarSensores
  5713 ;;		_probarPID
  5714 ;;		_probarCruceT
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text22
  5719  003C10                     __ptext22:
  5720                           	opt callstack 0
  5721  003C10                     _leerSensores:
  5722                           	opt callstack 25
  5723  003C10                     
  5724                           ;main.c: 1198:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  5725  003C10  C120  F038         	movff	_oldSensorDerecha,___fladd@a
  5726  003C14  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
  5727  003C18  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
  5728  003C1C  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
  5729  003C20  0E03               	movlw	3
  5730  003C22  EC78  F01F         	call	_dameDistancia
  5731  003C26  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5732  003C2A  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5733  003C2E  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5734  003C32  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5735  003C36  EC58  F00C         	call	___fladd	;wreg free
  5736  003C3A  C034  F044         	movff	?___fladd,___fldiv@b
  5737  003C3E  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5738  003C42  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5739  003C46  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5740  003C4A  0E00               	movlw	0
  5741  003C4C  6E48               	movwf	___fldiv@a^0,c
  5742  003C4E  0E00               	movlw	0
  5743  003C50  6E49               	movwf	(___fldiv@a+1)^0,c
  5744  003C52  0E00               	movlw	0
  5745  003C54  6E4A               	movwf	(___fldiv@a+2)^0,c
  5746  003C56  0E40               	movlw	64
  5747  003C58  6E4B               	movwf	(___fldiv@a+3)^0,c
  5748  003C5A  EC8B  F014         	call	___fldiv	;wreg free
  5749  003C5E  C044  F12C         	movff	?___fldiv,_sensorDerecha
  5750  003C62  C045  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  5751  003C66  C046  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  5752  003C6A  C047  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  5753                           
  5754                           ;main.c: 1199:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  5755  003C6E  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
  5756  003C72  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
  5757  003C76  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
  5758  003C7A  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
  5759  003C7E  0E02               	movlw	2
  5760  003C80  EC78  F01F         	call	_dameDistancia
  5761  003C84  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5762  003C88  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5763  003C8C  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5764  003C90  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5765  003C94  EC58  F00C         	call	___fladd	;wreg free
  5766  003C98  C034  F044         	movff	?___fladd,___fldiv@b
  5767  003C9C  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5768  003CA0  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5769  003CA4  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5770  003CA8  0E00               	movlw	0
  5771  003CAA  6E48               	movwf	___fldiv@a^0,c
  5772  003CAC  0E00               	movlw	0
  5773  003CAE  6E49               	movwf	(___fldiv@a+1)^0,c
  5774  003CB0  0E00               	movlw	0
  5775  003CB2  6E4A               	movwf	(___fldiv@a+2)^0,c
  5776  003CB4  0E40               	movlw	64
  5777  003CB6  6E4B               	movwf	(___fldiv@a+3)^0,c
  5778  003CB8  EC8B  F014         	call	___fldiv	;wreg free
  5779  003CBC  C044  F128         	movff	?___fldiv,_sensorIzquierda
  5780  003CC0  C045  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  5781  003CC4  C046  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  5782  003CC8  C047  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  5783                           
  5784                           ;main.c: 1200:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  5785  003CCC  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
  5786  003CD0  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
  5787  003CD4  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
  5788  003CD8  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
  5789  003CDC  0E01               	movlw	1
  5790  003CDE  EC78  F01F         	call	_dameDistancia
  5791  003CE2  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5792  003CE6  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5793  003CEA  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5794  003CEE  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5795  003CF2  EC58  F00C         	call	___fladd	;wreg free
  5796  003CF6  C034  F044         	movff	?___fladd,___fldiv@b
  5797  003CFA  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5798  003CFE  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5799  003D02  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5800  003D06  0E00               	movlw	0
  5801  003D08  6E48               	movwf	___fldiv@a^0,c
  5802  003D0A  0E00               	movlw	0
  5803  003D0C  6E49               	movwf	(___fldiv@a+1)^0,c
  5804  003D0E  0E00               	movlw	0
  5805  003D10  6E4A               	movwf	(___fldiv@a+2)^0,c
  5806  003D12  0E40               	movlw	64
  5807  003D14  6E4B               	movwf	(___fldiv@a+3)^0,c
  5808  003D16  EC8B  F014         	call	___fldiv	;wreg free
  5809  003D1A  C044  F124         	movff	?___fldiv,_sensorEnfrente
  5810  003D1E  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  5811  003D22  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  5812  003D26  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  5813  003D2A                     
  5814                           ;main.c: 1202:     oldSensorDerecha = sensorDerecha;
  5815  003D2A  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  5816  003D2E  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  5817  003D32  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  5818  003D36  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  5819  003D3A                     
  5820                           ;main.c: 1203:     oldSensorIzquierda = sensorIzquierda;
  5821  003D3A  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  5822  003D3E  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  5823  003D42  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  5824  003D46  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  5825  003D4A                     
  5826                           ;main.c: 1204:     oldSensorEnfrente = sensorEnfrente;
  5827  003D4A  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  5828  003D4E  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  5829  003D52  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  5830  003D56  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  5831  003D5A                     
  5832                           ;main.c: 1209:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  5833  003D5A  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  5834  003D5E  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  5835  003D62  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  5836  003D66  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  5837  003D6A                     
  5838                           ;main.c: 1218:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  5839  003D6A  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  5840  003D6E  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  5841  003D72  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  5842  003D76  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  5843  003D7A                     
  5844                           ;main.c: 1221:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  5845  003D7A  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  5846  003D7E  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  5847  003D82  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  5848  003D86  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  5849  003D8A  0012               	return		;funcret
  5850  003D8C                     __end_of_leerSensores:
  5851                           	opt callstack 0
  5852                           
  5853 ;; *************** function _dameDistancia *****************
  5854 ;; Defined at:
  5855 ;;		line 26 in file "./ultrasonico.h"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  numeroSensor    1    wreg     unsigned char 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  numeroSensor    1   32[COMRAM] unsigned char 
  5860 ;;  distancia       4   33[COMRAM] float 
  5861 ;;  conteo          2   37[COMRAM] unsigned int 
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  4   26[COMRAM] float 
  5864 ;; Registers used:
  5865 ;;		wreg, status,2, status,0, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5871 ;;      Params:         4       0       0       0       0       0       0       0       0
  5872 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5873 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5874 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5875 ;;Total ram usage:       13 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    3
  5878 ;; This function calls:
  5879 ;;		___lwdiv
  5880 ;;		___xxtofl
  5881 ;; This function is called by:
  5882 ;;		_inicializarComportamientoBasico
  5883 ;;		_leerSensores
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text23
  5888  003EF0                     __ptext23:
  5889                           	opt callstack 0
  5890  003EF0                     _dameDistancia:
  5891                           	opt callstack 26
  5892                           
  5893                           ;incstack = 0
  5894                           ;dameDistancia@numeroSensor stored from wreg
  5895  003EF0  6E21               	movwf	dameDistancia@numeroSensor^0,c
  5896  003EF2                     
  5897                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
  5898  003EF2  0E00               	movlw	0
  5899  003EF4  6ECF               	movwf	207,c	;volatile
  5900                           
  5901                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
  5902  003EF6  0E00               	movlw	0
  5903  003EF8  6ECE               	movwf	206,c	;volatile
  5904                           
  5905                           ;./ultrasonico.h: 33:     conteo = 0;
  5906  003EFA  0E00               	movlw	0
  5907  003EFC  6E27               	movwf	(dameDistancia@conteo+1)^0,c
  5908  003EFE  0E00               	movlw	0
  5909  003F00  6E26               	movwf	dameDistancia@conteo^0,c
  5910  003F02                     
  5911                           ;./ultrasonico.h: 34:     LATD3 = 1;
  5912  003F02  868C               	bsf	3980,3,c	;volatile
  5913  003F04                     
  5914                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
  5915  003F04  0E04               	movlw	4
  5916  003F06                     u12277:
  5917  003F06  2EE8               	decfsz	wreg,f,c
  5918  003F08  D7FE               	bra	u12277
  5919  003F0A                     
  5920                           ;./ultrasonico.h: 36:     LATD3 = 0;
  5921  003F0A  968C               	bcf	3980,3,c	;volatile
  5922                           
  5923                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
  5924  003F0C  EFD0  F01F         	goto	l9823
  5925  003F10                     l177:
  5926  003F10  A281               	btfss	129,1,c	;volatile
  5927  003F12  EF8D  F01F         	goto	u11071
  5928  003F16  EF8F  F01F         	goto	u11070
  5929  003F1A                     u11071:
  5930  003F1A  EF88  F01F         	goto	l177
  5931  003F1E                     u11070:
  5932  003F1E                     
  5933                           ;./ultrasonico.h: 43:             TMR1ON = 1;
  5934  003F1E  80CD               	bsf	4045,0,c	;volatile
  5935  003F20                     l180:
  5936  003F20  A281               	btfss	129,1,c	;volatile
  5937  003F22  EF95  F01F         	goto	u11081
  5938  003F26  EF97  F01F         	goto	u11080
  5939  003F2A                     u11081:
  5940  003F2A  EFE9  F01F         	goto	l185
  5941  003F2E                     u11080:
  5942  003F2E  A09E               	btfss	3998,0,c	;volatile
  5943  003F30  EF9C  F01F         	goto	u11091
  5944  003F34  EF9E  F01F         	goto	u11090
  5945  003F38                     u11091:
  5946  003F38  EF90  F01F         	goto	l180
  5947  003F3C                     u11090:
  5948  003F3C  EFE9  F01F         	goto	l185
  5949  003F40                     l187:
  5950  003F40  A481               	btfss	129,2,c	;volatile
  5951  003F42  EFA5  F01F         	goto	u11101
  5952  003F46  EFA7  F01F         	goto	u11100
  5953  003F4A                     u11101:
  5954  003F4A  EFA0  F01F         	goto	l187
  5955  003F4E                     u11100:
  5956  003F4E                     
  5957                           ;./ultrasonico.h: 51:             TMR1ON = 1;
  5958  003F4E  80CD               	bsf	4045,0,c	;volatile
  5959  003F50                     l190:
  5960  003F50  A481               	btfss	129,2,c	;volatile
  5961  003F52  EFAD  F01F         	goto	u11111
  5962  003F56  EFAF  F01F         	goto	u11110
  5963  003F5A                     u11111:
  5964  003F5A  EFE9  F01F         	goto	l185
  5965  003F5E                     u11110:
  5966  003F5E  A09E               	btfss	3998,0,c	;volatile
  5967  003F60  EFB4  F01F         	goto	u11121
  5968  003F64  EFB6  F01F         	goto	u11120
  5969  003F68                     u11121:
  5970  003F68  EFA8  F01F         	goto	l190
  5971  003F6C                     u11120:
  5972  003F6C  EFE9  F01F         	goto	l185
  5973  003F70                     l196:
  5974  003F70  A681               	btfss	129,3,c	;volatile
  5975  003F72  EFBD  F01F         	goto	u11131
  5976  003F76  EFBF  F01F         	goto	u11130
  5977  003F7A                     u11131:
  5978  003F7A  EFB8  F01F         	goto	l196
  5979  003F7E                     u11130:
  5980  003F7E                     
  5981                           ;./ultrasonico.h: 59:             TMR1ON = 1;
  5982  003F7E  80CD               	bsf	4045,0,c	;volatile
  5983  003F80                     l199:
  5984  003F80  A681               	btfss	129,3,c	;volatile
  5985  003F82  EFC5  F01F         	goto	u11141
  5986  003F86  EFC7  F01F         	goto	u11140
  5987  003F8A                     u11141:
  5988  003F8A  EFE9  F01F         	goto	l185
  5989  003F8E                     u11140:
  5990  003F8E  A09E               	btfss	3998,0,c	;volatile
  5991  003F90  EFCC  F01F         	goto	u11151
  5992  003F94  EFCE  F01F         	goto	u11150
  5993  003F98                     u11151:
  5994  003F98  EFC0  F01F         	goto	l199
  5995  003F9C                     u11150:
  5996  003F9C  EFE9  F01F         	goto	l185
  5997  003FA0                     l9823:
  5998  003FA0  5021               	movf	dameDistancia@numeroSensor^0,w,c
  5999  003FA2  6E1F               	movwf	??_dameDistancia^0,c
  6000  003FA4  6A20               	clrf	(??_dameDistancia+1)^0,c
  6001                           
  6002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6003                           ; Switch size 1, requested type "simple"
  6004                           ; Number of cases is 1, Range of values is 0 to 0
  6005                           ; switch strategies available:
  6006                           ; Name         Instructions Cycles
  6007                           ; simple_byte            4     3 (average)
  6008                           ;	Chosen strategy is simple_byte
  6009  003FA6  5020               	movf	(??_dameDistancia+1)^0,w,c
  6010  003FA8  0A00               	xorlw	0	; case 0
  6011  003FAA  B4D8               	btfsc	status,2,c
  6012  003FAC  EFDA  F01F         	goto	l11271
  6013  003FB0  EFE9  F01F         	goto	l185
  6014  003FB4                     l11271:
  6015                           
  6016                           ; Switch size 1, requested type "simple"
  6017                           ; Number of cases is 3, Range of values is 1 to 3
  6018                           ; switch strategies available:
  6019                           ; Name         Instructions Cycles
  6020                           ; simple_byte           10     6 (average)
  6021                           ;	Chosen strategy is simple_byte
  6022  003FB4  501F               	movf	??_dameDistancia^0,w,c
  6023  003FB6  0A01               	xorlw	1	; case 1
  6024  003FB8  B4D8               	btfsc	status,2,c
  6025  003FBA  EF88  F01F         	goto	l177
  6026  003FBE  0A03               	xorlw	3	; case 2
  6027  003FC0  B4D8               	btfsc	status,2,c
  6028  003FC2  EFA0  F01F         	goto	l187
  6029  003FC6  0A01               	xorlw	1	; case 3
  6030  003FC8  B4D8               	btfsc	status,2,c
  6031  003FCA  EFB8  F01F         	goto	l196
  6032  003FCE  EFE9  F01F         	goto	l185
  6033  003FD2                     l185:
  6034                           
  6035                           ;./ultrasonico.h: 66:     TMR1ON = 0;
  6036  003FD2  90CD               	bcf	4045,0,c	;volatile
  6037                           
  6038                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
  6039  003FD4  B09E               	btfsc	3998,0,c	;volatile
  6040  003FD6  EFEF  F01F         	goto	u11161
  6041  003FDA  EFF1  F01F         	goto	u11160
  6042  003FDE                     u11161:
  6043  003FDE  EF17  F020         	goto	l9829
  6044  003FE2                     u11160:
  6045  003FE2                     
  6046                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
  6047  003FE2  50CF               	movf	207,w,c	;volatile
  6048  003FE4  6E20               	movwf	(??_dameDistancia+1)^0,c
  6049  003FE6  6A1F               	clrf	??_dameDistancia^0,c
  6050  003FE8  501F               	movf	??_dameDistancia^0,w,c
  6051  003FEA  1226               	iorwf	dameDistancia@conteo^0,f,c
  6052  003FEC  5020               	movf	(??_dameDistancia+1)^0,w,c
  6053  003FEE  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
  6054                           
  6055                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
  6056  003FF0  50CE               	movf	206,w,c	;volatile
  6057  003FF2  1226               	iorwf	dameDistancia@conteo^0,f,c
  6058  003FF4                     
  6059                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
  6060  003FF4  0E00               	movlw	0
  6061  003FF6  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  6062  003FF8  0E3A               	movlw	58
  6063  003FFA  6E08               	movwf	___lwdiv@divisor^0,c
  6064  003FFC  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
  6065  004000  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
  6066  004004  EC39  F027         	call	___lwdiv	;wreg free
  6067  004008  C006  F00D         	movff	?___lwdiv,___xxtofl@val
  6068  00400C  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
  6069  004010  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6070  004012  6A10               	clrf	(___xxtofl@val+3)^0,c
  6071  004014  0E00               	movlw	0
  6072  004016  ECDA  F01A         	call	___xxtofl
  6073  00401A  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
  6074  00401E  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
  6075  004022  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
  6076  004026  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
  6077                           
  6078                           ;./ultrasonico.h: 73:     } else {
  6079  00402A  EF20  F020         	goto	l9833
  6080  00402E                     l9829:
  6081  00402E                     
  6082                           ;./ultrasonico.h: 75:         TMR1IF = 0;
  6083  00402E  909E               	bcf	3998,0,c	;volatile
  6084                           
  6085                           ;./ultrasonico.h: 76:         distancia = 0;
  6086  004030  0E00               	movlw	0
  6087  004032  6E22               	movwf	dameDistancia@distancia^0,c
  6088  004034  0E00               	movlw	0
  6089  004036  6E23               	movwf	(dameDistancia@distancia+1)^0,c
  6090  004038  0E00               	movlw	0
  6091  00403A  6E24               	movwf	(dameDistancia@distancia+2)^0,c
  6092  00403C  0E00               	movlw	0
  6093  00403E  6E25               	movwf	(dameDistancia@distancia+3)^0,c
  6094  004040                     l9833:
  6095                           
  6096                           ;./ultrasonico.h: 80:     return distancia;
  6097  004040  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
  6098  004044  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
  6099  004048  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
  6100  00404C  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
  6101  004050  0012               	return		;funcret
  6102  004052                     __end_of_dameDistancia:
  6103                           	opt callstack 0
  6104                           
  6105 ;; *************** function ___lwdiv *****************
  6106 ;; Defined at:
  6107 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  dividend        2    5[COMRAM] unsigned int 
  6110 ;;  divisor         2    7[COMRAM] unsigned int 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  quotient        2   10[COMRAM] unsigned int 
  6113 ;;  counter         1    9[COMRAM] unsigned char 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  2    5[COMRAM] unsigned int 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6123 ;;      Params:         4       0       0       0       0       0       0       0       0
  6124 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6126 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6127 ;;Total ram usage:        7 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    2
  6130 ;; This function calls:
  6131 ;;		Nothing
  6132 ;; This function is called by:
  6133 ;;		_dameDistancia
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text24
  6138  004E72                     __ptext24:
  6139                           	opt callstack 0
  6140  004E72                     ___lwdiv:
  6141                           	opt callstack 26
  6142  004E72  0E00               	movlw	0
  6143  004E74  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  6144  004E76  0E00               	movlw	0
  6145  004E78  6E0B               	movwf	___lwdiv@quotient^0,c
  6146  004E7A  5008               	movf	___lwdiv@divisor^0,w,c
  6147  004E7C  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6148  004E7E  B4D8               	btfsc	status,2,c
  6149  004E80  EF44  F027         	goto	u11041
  6150  004E84  EF46  F027         	goto	u11040
  6151  004E88                     u11041:
  6152  004E88  EF6E  F027         	goto	l1440
  6153  004E8C                     u11040:
  6154  004E8C  0E01               	movlw	1
  6155  004E8E  6E0A               	movwf	___lwdiv@counter^0,c
  6156  004E90  EF4E  F027         	goto	l9793
  6157  004E94                     l9791:
  6158  004E94  90D8               	bcf	status,0,c
  6159  004E96  3608               	rlcf	___lwdiv@divisor^0,f,c
  6160  004E98  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6161  004E9A  2A0A               	incf	___lwdiv@counter^0,f,c
  6162  004E9C                     l9793:
  6163  004E9C  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  6164  004E9E  EF53  F027         	goto	u11051
  6165  004EA2  EF55  F027         	goto	u11050
  6166  004EA6                     u11051:
  6167  004EA6  EF4A  F027         	goto	l9791
  6168  004EAA                     u11050:
  6169  004EAA                     l9795:
  6170  004EAA  90D8               	bcf	status,0,c
  6171  004EAC  360B               	rlcf	___lwdiv@quotient^0,f,c
  6172  004EAE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6173  004EB0  5008               	movf	___lwdiv@divisor^0,w,c
  6174  004EB2  5C06               	subwf	___lwdiv@dividend^0,w,c
  6175  004EB4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6176  004EB6  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6177  004EB8  A0D8               	btfss	status,0,c
  6178  004EBA  EF61  F027         	goto	u11061
  6179  004EBE  EF63  F027         	goto	u11060
  6180  004EC2                     u11061:
  6181  004EC2  EF68  F027         	goto	l9803
  6182  004EC6                     u11060:
  6183  004EC6  5008               	movf	___lwdiv@divisor^0,w,c
  6184  004EC8  5E06               	subwf	___lwdiv@dividend^0,f,c
  6185  004ECA  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  6186  004ECC  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6187  004ECE  800B               	bsf	___lwdiv@quotient^0,0,c
  6188  004ED0                     l9803:
  6189  004ED0  90D8               	bcf	status,0,c
  6190  004ED2  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6191  004ED4  3208               	rrcf	___lwdiv@divisor^0,f,c
  6192  004ED6  2E0A               	decfsz	___lwdiv@counter^0,f,c
  6193  004ED8  EF55  F027         	goto	l9795
  6194  004EDC                     l1440:
  6195  004EDC  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  6196  004EE0  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6197  004EE4  0012               	return		;funcret
  6198  004EE6                     __end_of___lwdiv:
  6199                           	opt callstack 0
  6200                           
  6201 ;; *************** function _decidirDireccion *****************
  6202 ;; Defined at:
  6203 ;;		line 839 in file "main.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  caminosRecor    2    0[BANK1 ] PTR unsigned char 
  6206 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
  6207 ;;  investigando    2    2[BANK1 ] PTR unsigned char 
  6208 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  6209 ;;  posicionInvC    2    4[BANK1 ] PTR unsigned char 
  6210 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  6211 ;;  contCaminosR    2    6[BANK1 ] PTR unsigned char 
  6212 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  6213 ;;  caminoActual    2    8[BANK1 ] PTR unsigned char 
  6214 ;;		 -> comportamientoBasico@caminoActual(1), 
  6215 ;;  cambioOrient    2   10[BANK1 ] PTR unsigned char 
  6216 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  6217 ;;  mapear          2   12[BANK1 ] PTR unsigned char 
  6218 ;;		 -> comportamientoBasico@mapear(1), 
  6219 ;;  cruceDetecta    2   14[BANK1 ] PTR unsigned char 
  6220 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  6221 ;;  avanceRectoL    2   16[BANK1 ] PTR unsigned char 
  6222 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  6223 ;;  caminoFinal     2   18[BANK1 ] PTR unsigned char 
  6224 ;;		 -> comportamientoBasico@caminoFinal(20), 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;  direccionEle    1   83[COMRAM] unsigned char 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      unsigned char 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6236 ;;      Params:         0       0      20       0       0       0       0       0       0
  6237 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6238 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6239 ;;      Totals:         1       3      20       0       0       0       0       0       0
  6240 ;;Total ram usage:       24 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:   10
  6243 ;; This function calls:
  6244 ;;		_UART_printf
  6245 ;;		___flge
  6246 ;;		_hayCruce
  6247 ;;		_mostrarDireccionElegida
  6248 ;;		_seLlegoAlDestino
  6249 ;;		_sprintf
  6250 ;;		_velocidadBaja
  6251 ;; This function is called by:
  6252 ;;		_comportamientoBasico
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text25
  6257  000BCC                     __ptext25:
  6258                           	opt callstack 0
  6259  000BCC                     _decidirDireccion:
  6260                           	opt callstack 19
  6261  000BCC                     
  6262                           ;main.c: 839: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 840:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro,;main.c: 841:         T_UBYTE* mapear
      +                          , T_UBYTE* cruceDetectado, T_BOOL* avanceRectoLargo, T_UBYTE* caminoFinal) {;main.c: 843
      +                          :     T_UBYTE direccionElegida;;main.c: 844:     llegoDestino = seLlegoAlDestino();
  6263  000BCC  EC76  F02B         	call	_seLlegoAlDestino	;wreg free
  6264  000BD0  0100               	movlb	0	; () banked
  6265  000BD2  6FFF               	movwf	_llegoDestino& (0+255),b
  6266  000BD4                     
  6267                           ; BSR set to: 0
  6268                           ;main.c: 847:     if (*posicionInvCruce && *investigandoCruce && !caminoEncontrado) {
  6269  000BD4  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6270  000BD8  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6271  000BDC  50DF               	movf	indf2,w,c
  6272  000BDE  B4D8               	btfsc	status,2,c
  6273  000BE0  EFF4  F005         	goto	u11341
  6274  000BE4  EFF6  F005         	goto	u11340
  6275  000BE8                     u11341:
  6276  000BE8  EFCF  F007         	goto	l10341
  6277  000BEC                     u11340:
  6278  000BEC                     
  6279                           ; BSR set to: 0
  6280  000BEC  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6281  000BF0  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6282  000BF4  50DF               	movf	indf2,w,c
  6283  000BF6  B4D8               	btfsc	status,2,c
  6284  000BF8  EF00  F006         	goto	u11351
  6285  000BFC  EF02  F006         	goto	u11350
  6286  000C00                     u11351:
  6287  000C00  EFCF  F007         	goto	l10341
  6288  000C04                     u11350:
  6289  000C04                     
  6290                           ; BSR set to: 0
  6291  000C04  5059               	movf	_caminoEncontrado^0,w,c
  6292  000C06  A4D8               	btfss	status,2,c
  6293  000C08  EF08  F006         	goto	u11361
  6294  000C0C  EF0A  F006         	goto	u11360
  6295  000C10                     u11361:
  6296  000C10  EFCF  F007         	goto	l10341
  6297  000C14                     u11360:
  6298  000C14                     
  6299                           ; BSR set to: 0
  6300                           ;main.c: 849:         if (*posicionInvCruce)
  6301  000C14  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6302  000C18  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6303  000C1C  50DF               	movf	indf2,w,c
  6304  000C1E  B4D8               	btfsc	status,2,c
  6305  000C20  EF14  F006         	goto	u11371
  6306  000C24  EF16  F006         	goto	u11370
  6307  000C28                     u11371:
  6308  000C28  EF1C  F006         	goto	l10097
  6309  000C2C                     u11370:
  6310  000C2C                     
  6311                           ; BSR set to: 0
  6312                           ;main.c: 850:             *posicionInvCruce = 0;
  6313  000C2C  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6314  000C30  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6315  000C34  0E00               	movlw	0
  6316  000C36  6EDF               	movwf	indf2,c
  6317  000C38                     l10097:
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;main.c: 852:         if (llegoDestino) {
  6321  000C38  51FF               	movf	_llegoDestino& (0+255),w,b
  6322  000C3A  B4D8               	btfsc	status,2,c
  6323  000C3C  EF22  F006         	goto	u11381
  6324  000C40  EF24  F006         	goto	u11380
  6325  000C44                     u11381:
  6326  000C44  EF85  F006         	goto	l10121
  6327  000C48                     u11380:
  6328  000C48                     
  6329                           ; BSR set to: 0
  6330                           ;main.c: 853:             direccionElegida = ALTO;
  6331  000C48  0E04               	movlw	4
  6332  000C4A  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6333                           
  6334                           ;main.c: 855:         } else {
  6335  000C4C  EFA2  F006         	goto	l10123
  6336  000C50                     l10101:
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;main.c: 859:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1'
      +                          )
  6340  000C50  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6341  000C54  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6342  000C58  0E31               	movlw	49
  6343  000C5A  18DE               	xorwf	postinc2,w,c
  6344  000C5C  A4D8               	btfss	status,2,c
  6345  000C5E  EF33  F006         	goto	u11391
  6346  000C62  EF35  F006         	goto	u11390
  6347  000C66                     u11391:
  6348  000C66  EF3D  F006         	goto	l10105
  6349  000C6A                     u11390:
  6350  000C6A                     
  6351                           ; BSR set to: 0
  6352                           ;main.c: 860:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
  6353  000C6A  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6354  000C6E  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6355  000C72  0E58               	movlw	88
  6356  000C74  6EDF               	movwf	indf2,c
  6357  000C76  EFA2  F006         	goto	l10123
  6358  000C7A                     l10105:
  6359                           
  6360                           ; BSR set to: 0
  6361  000C7A  0101               	movlb	1	; () banked
  6362  000C7C  EE20 F001          	lfsr	2,1
  6363  000C80  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6364  000C82  26D9               	addwf	fsr2l,f,c
  6365  000C84  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6366  000C86  22DA               	addwfc	fsr2h,f,c
  6367  000C88  0E31               	movlw	49
  6368  000C8A  18DE               	xorwf	postinc2,w,c
  6369  000C8C  A4D8               	btfss	status,2,c
  6370  000C8E  EF4B  F006         	goto	u11401
  6371  000C92  EF4D  F006         	goto	u11400
  6372  000C96                     u11401:
  6373  000C96  EFA2  F006         	goto	l538
  6374  000C9A                     u11400:
  6375  000C9A                     l10107:
  6376                           
  6377                           ; BSR set to: 1
  6378  000C9A  EE20 F001          	lfsr	2,1
  6379  000C9E  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6380  000CA0  26D9               	addwf	fsr2l,f,c
  6381  000CA2  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6382  000CA4  22DA               	addwfc	fsr2h,f,c
  6383  000CA6  0E58               	movlw	88
  6384  000CA8  6EDF               	movwf	indf2,c
  6385  000CAA  EFA2  F006         	goto	l10123
  6386  000CAE                     l10109:
  6387                           
  6388                           ; BSR set to: 0
  6389  000CAE  0101               	movlb	1	; () banked
  6390  000CB0  EE20 F001          	lfsr	2,1
  6391  000CB4  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6392  000CB6  26D9               	addwf	fsr2l,f,c
  6393  000CB8  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6394  000CBA  22DA               	addwfc	fsr2h,f,c
  6395  000CBC  0E31               	movlw	49
  6396  000CBE  18DE               	xorwf	postinc2,w,c
  6397  000CC0  A4D8               	btfss	status,2,c
  6398  000CC2  EF65  F006         	goto	u11411
  6399  000CC6  EF67  F006         	goto	u11410
  6400  000CCA                     u11411:
  6401  000CCA  EF69  F006         	goto	l10113
  6402  000CCE                     u11410:
  6403  000CCE  EF4D  F006         	goto	l10107
  6404  000CD2                     l10113:
  6405                           
  6406                           ; BSR set to: 1
  6407  000CD2  EE20 F002          	lfsr	2,2
  6408  000CD6  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6409  000CD8  26D9               	addwf	fsr2l,f,c
  6410  000CDA  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6411  000CDC  22DA               	addwfc	fsr2h,f,c
  6412  000CDE  0E58               	movlw	88
  6413  000CE0  6EDF               	movwf	indf2,c
  6414  000CE2  EFA2  F006         	goto	l10123
  6415  000CE6                     l10115:
  6416                           
  6417                           ; BSR set to: 0
  6418  000CE6  0101               	movlb	1	; () banked
  6419  000CE8  EE20 F002          	lfsr	2,2
  6420  000CEC  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6421  000CEE  26D9               	addwf	fsr2l,f,c
  6422  000CF0  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6423  000CF2  22DA               	addwfc	fsr2h,f,c
  6424  000CF4  0E31               	movlw	49
  6425  000CF6  18DE               	xorwf	postinc2,w,c
  6426  000CF8  A4D8               	btfss	status,2,c
  6427  000CFA  EF81  F006         	goto	u11421
  6428  000CFE  EF83  F006         	goto	u11420
  6429  000D02                     u11421:
  6430  000D02  EFA2  F006         	goto	l10123
  6431  000D06                     u11420:
  6432  000D06  EF69  F006         	goto	l10113
  6433  000D0A                     l10121:
  6434                           
  6435                           ; BSR set to: 0
  6436  000D0A  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6437  000D0E  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6438  000D12  50DF               	movf	indf2,w,c
  6439  000D14  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6440  000D16  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6441                           
  6442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6443                           ; Switch size 1, requested type "simple"
  6444                           ; Number of cases is 1, Range of values is 0 to 0
  6445                           ; switch strategies available:
  6446                           ; Name         Instructions Cycles
  6447                           ; simple_byte            4     3 (average)
  6448                           ;	Chosen strategy is simple_byte
  6449  000D18  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6450  000D1A  0A00               	xorlw	0	; case 0
  6451  000D1C  B4D8               	btfsc	status,2,c
  6452  000D1E  EF93  F006         	goto	l11273
  6453  000D22  EFA2  F006         	goto	l10123
  6454  000D26                     l11273:
  6455                           
  6456                           ; BSR set to: 0
  6457                           ; Switch size 1, requested type "simple"
  6458                           ; Number of cases is 3, Range of values is 1 to 3
  6459                           ; switch strategies available:
  6460                           ; Name         Instructions Cycles
  6461                           ; simple_byte           10     6 (average)
  6462                           ;	Chosen strategy is simple_byte
  6463  000D26  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6464  000D28  0A01               	xorlw	1	; case 1
  6465  000D2A  B4D8               	btfsc	status,2,c
  6466  000D2C  EF28  F006         	goto	l10101
  6467  000D30  0A03               	xorlw	3	; case 2
  6468  000D32  B4D8               	btfsc	status,2,c
  6469  000D34  EF57  F006         	goto	l10109
  6470  000D38  0A01               	xorlw	1	; case 3
  6471  000D3A  B4D8               	btfsc	status,2,c
  6472  000D3C  EF73  F006         	goto	l10115
  6473  000D40  EFA2  F006         	goto	l10123
  6474  000D44                     l538:
  6475  000D44                     l10123:
  6476                           
  6477                           ;main.c: 888:         if (!(*cambioOrientacionCarro)) {
  6478  000D44  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6479  000D48  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6480  000D4C  50DF               	movf	indf2,w,c
  6481  000D4E  A4D8               	btfss	status,2,c
  6482  000D50  EFAC  F006         	goto	u11431
  6483  000D54  EFAE  F006         	goto	u11430
  6484  000D58                     u11431:
  6485  000D58  EF9E  F007         	goto	l10333
  6486  000D5C                     u11430:
  6487  000D5C                     
  6488                           ;main.c: 890:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1')
  6489  000D5C  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6490  000D60  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6491  000D64  0E31               	movlw	49
  6492  000D66  18DE               	xorwf	postinc2,w,c
  6493  000D68  A4D8               	btfss	status,2,c
  6494  000D6A  EFB9  F006         	goto	u11441
  6495  000D6E  EFBB  F006         	goto	u11440
  6496  000D72                     u11441:
  6497  000D72  EFBF  F006         	goto	l10129
  6498  000D76                     u11440:
  6499  000D76  0E01               	movlw	1
  6500  000D78  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6501  000D7A  EFE4  F006         	goto	l10137
  6502  000D7E                     l10129:
  6503  000D7E  0101               	movlb	1	; () banked
  6504  000D80  EE20 F001          	lfsr	2,1
  6505  000D84  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6506  000D86  26D9               	addwf	fsr2l,f,c
  6507  000D88  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6508  000D8A  22DA               	addwfc	fsr2h,f,c
  6509  000D8C  0E31               	movlw	49
  6510  000D8E  18DE               	xorwf	postinc2,w,c
  6511  000D90  A4D8               	btfss	status,2,c
  6512  000D92  EFCD  F006         	goto	u11451
  6513  000D96  EFCF  F006         	goto	u11450
  6514  000D9A                     u11451:
  6515  000D9A  EFD3  F006         	goto	l10133
  6516  000D9E                     u11450:
  6517  000D9E                     
  6518                           ; BSR set to: 1
  6519  000D9E  0E02               	movlw	2
  6520  000DA0  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6521  000DA2  EFE4  F006         	goto	l10137
  6522  000DA6                     l10133:
  6523                           
  6524                           ; BSR set to: 1
  6525  000DA6  EE20 F002          	lfsr	2,2
  6526  000DAA  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6527  000DAC  26D9               	addwf	fsr2l,f,c
  6528  000DAE  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6529  000DB0  22DA               	addwfc	fsr2h,f,c
  6530  000DB2  0E31               	movlw	49
  6531  000DB4  18DE               	xorwf	postinc2,w,c
  6532  000DB6  A4D8               	btfss	status,2,c
  6533  000DB8  EFE0  F006         	goto	u11461
  6534  000DBC  EFE2  F006         	goto	u11460
  6535  000DC0                     u11461:
  6536  000DC0  EFE4  F006         	goto	l10137
  6537  000DC4                     u11460:
  6538  000DC4                     
  6539                           ; BSR set to: 1
  6540  000DC4  0E03               	movlw	3
  6541  000DC6  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6542  000DC8                     l10137:
  6543                           
  6544                           ;main.c: 898:             *caminoActual = direccionElegida;
  6545  000DC8  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6546  000DCC  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6547  000DD0  C054  FFDF         	movff	decidirDireccion@direccionElegida,indf2
  6548  000DD4                     
  6549                           ;main.c: 899:             *cambioOrientacionCarro = 1;
  6550  000DD4  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6551  000DD8  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6552  000DDC  0E01               	movlw	1
  6553  000DDE  6EDF               	movwf	indf2,c
  6554                           
  6555                           ;main.c: 901:         } else {
  6556  000DE0  EFBC  F007         	goto	l10335
  6557  000DE4                     l568:
  6558                           
  6559                           ; BSR set to: 1
  6560  000DE4  EF36  F007         	goto	l10237
  6561  000DE8                     l10195:
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;main.c: 955:                         if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] ==
      +                           'X') {
  6565  000DE8  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6566  000DEC  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6567  000DF0  0E58               	movlw	88
  6568  000DF2  18DE               	xorwf	postinc2,w,c
  6569  000DF4  A4D8               	btfss	status,2,c
  6570  000DF6  EFFF  F006         	goto	u11471
  6571  000DFA  EF01  F007         	goto	u11470
  6572  000DFE                     u11471:
  6573  000DFE  EF36  F007         	goto	l10237
  6574  000E02                     u11470:
  6575  000E02                     
  6576                           ; BSR set to: 0
  6577  000E02  0101               	movlb	1	; () banked
  6578  000E04  EE20 F001          	lfsr	2,1
  6579  000E08  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6580  000E0A  26D9               	addwf	fsr2l,f,c
  6581  000E0C  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6582  000E0E  22DA               	addwfc	fsr2h,f,c
  6583  000E10  0E31               	movlw	49
  6584  000E12  18DE               	xorwf	postinc2,w,c
  6585  000E14  A4D8               	btfss	status,2,c
  6586  000E16  EF0F  F007         	goto	u11481
  6587  000E1A  EF11  F007         	goto	u11480
  6588  000E1E                     u11481:
  6589  000E1E  EF1B  F007         	goto	l10215
  6590  000E22                     u11480:
  6591  000E22                     
  6592                           ; BSR set to: 1
  6593                           ;main.c: 958:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA
      +                           - 1] == '1') {;main.c: 959:                                 *caminoActual = IZQUIERDA;
  6594  000E22  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6595  000E26  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6596  000E2A  0E02               	movlw	2
  6597  000E2C  6EDF               	movwf	indf2,c
  6598  000E2E                     
  6599                           ; BSR set to: 1
  6600                           ;main.c: 960:                                 direccionElegida = DERECHA;
  6601  000E2E  0E03               	movlw	3
  6602  000E30  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6603                           
  6604                           ;main.c: 961:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA &
      +                          &
  6605  000E32  EF36  F007         	goto	l10237
  6606  000E36                     l10215:
  6607                           
  6608                           ; BSR set to: 1
  6609  000E36  EE20 F002          	lfsr	2,2
  6610  000E3A  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6611  000E3C  26D9               	addwf	fsr2l,f,c
  6612  000E3E  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6613  000E40  22DA               	addwfc	fsr2h,f,c
  6614  000E42  0E31               	movlw	49
  6615  000E44  18DE               	xorwf	postinc2,w,c
  6616  000E46  A4D8               	btfss	status,2,c
  6617  000E48  EF28  F007         	goto	u11491
  6618  000E4C  EF2A  F007         	goto	u11490
  6619  000E50                     u11491:
  6620  000E50  EFF2  F006         	goto	l568
  6621  000E54                     u11490:
  6622  000E54                     
  6623                           ; BSR set to: 1
  6624                           ;main.c: 970:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA 
      +                          - 1] == '1') {;main.c: 971:                                 *caminoActual = DERECHA;
  6625  000E54  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6626  000E58  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6627  000E5C  0E03               	movlw	3
  6628  000E5E  6EDF               	movwf	indf2,c
  6629  000E60                     
  6630                           ; BSR set to: 1
  6631                           ;main.c: 972:                                 direccionElegida = IZQUIERDA;
  6632  000E60  0E02               	movlw	2
  6633  000E62  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6634  000E64  EF36  F007         	goto	l10237
  6635  000E68                     l585:
  6636                           
  6637                           ; BSR set to: 1
  6638  000E68  EFBC  F007         	goto	l10335
  6639  000E6C                     l10237:
  6640  000E6C  0101               	movlb	1	; () banked
  6641  000E6E  EE20 F001          	lfsr	2,1
  6642  000E72  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6643  000E74  26D9               	addwf	fsr2l,f,c
  6644  000E76  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6645  000E78  22DA               	addwfc	fsr2h,f,c
  6646  000E7A  0E58               	movlw	88
  6647  000E7C  18DE               	xorwf	postinc2,w,c
  6648  000E7E  A4D8               	btfss	status,2,c
  6649  000E80  EF44  F007         	goto	u11501
  6650  000E84  EF46  F007         	goto	u11500
  6651  000E88                     u11501:
  6652  000E88  EFBC  F007         	goto	l10335
  6653  000E8C                     u11500:
  6654  000E8C                     
  6655                           ; BSR set to: 1
  6656  000E8C  EE20 F002          	lfsr	2,2
  6657  000E90  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6658  000E92  26D9               	addwf	fsr2l,f,c
  6659  000E94  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6660  000E96  22DA               	addwfc	fsr2h,f,c
  6661  000E98  0E31               	movlw	49
  6662  000E9A  18DE               	xorwf	postinc2,w,c
  6663  000E9C  A4D8               	btfss	status,2,c
  6664  000E9E  EF53  F007         	goto	u11511
  6665  000EA2  EF55  F007         	goto	u11510
  6666  000EA6                     u11511:
  6667  000EA6  EF34  F007         	goto	l585
  6668  000EAA                     u11510:
  6669  000EAA                     l10241:
  6670                           
  6671                           ; BSR set to: 1
  6672                           ;main.c: 1000:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1001:                                 *caminoActual = DERECHA;
  6673  000EAA  C1EE  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6674  000EAE  C1EF  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6675  000EB2  0E03               	movlw	3
  6676  000EB4  6EDF               	movwf	indf2,c
  6677  000EB6                     
  6678                           ; BSR set to: 1
  6679                           ;main.c: 1002:                                 direccionElegida = ENFRENTE;
  6680  000EB6  0E01               	movlw	1
  6681  000EB8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6682                           
  6683                           ;main.c: 1003:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
  6684  000EBA  EFBC  F007         	goto	l10335
  6685  000EBE                     l10283:
  6686                           
  6687                           ; BSR set to: 0
  6688  000EBE  0101               	movlb	1	; () banked
  6689  000EC0  EE20 F001          	lfsr	2,1
  6690  000EC4  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6691  000EC6  26D9               	addwf	fsr2l,f,c
  6692  000EC8  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6693  000ECA  22DA               	addwfc	fsr2h,f,c
  6694  000ECC  0E58               	movlw	88
  6695  000ECE  18DE               	xorwf	postinc2,w,c
  6696  000ED0  A4D8               	btfss	status,2,c
  6697  000ED2  EF6D  F007         	goto	u11521
  6698  000ED6  EF6F  F007         	goto	u11520
  6699  000EDA                     u11521:
  6700  000EDA  EFBC  F007         	goto	l10335
  6701  000EDE                     u11520:
  6702  000EDE                     
  6703                           ; BSR set to: 1
  6704  000EDE  EE20 F002          	lfsr	2,2
  6705  000EE2  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6706  000EE4  26D9               	addwf	fsr2l,f,c
  6707  000EE6  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6708  000EE8  22DA               	addwfc	fsr2h,f,c
  6709  000EEA  0E31               	movlw	49
  6710  000EEC  18DE               	xorwf	postinc2,w,c
  6711  000EEE  A4D8               	btfss	status,2,c
  6712  000EF0  EF7C  F007         	goto	u11531
  6713  000EF4  EF7E  F007         	goto	u11530
  6714  000EF8                     u11531:
  6715  000EF8  EF80  F007         	goto	l10297
  6716  000EFC                     u11530:
  6717  000EFC  EF55  F007         	goto	l10241
  6718  000F00                     l10297:
  6719                           
  6720                           ; BSR set to: 1
  6721                           ;main.c: 1063:                                 *contCaminosRecorridos = 3;
  6722  000F00  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6723  000F04  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6724  000F08  0E03               	movlw	3
  6725  000F0A  6EDF               	movwf	indf2,c
  6726  000F0C  EFBC  F007         	goto	l10335
  6727  000F10                     l10327:
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;main.c: 1102:                     *cambioOrientacionCarro = 0;
  6731  000F10  C1F0  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6732  000F14  C1F1  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6733  000F18  0E00               	movlw	0
  6734  000F1A  6EDF               	movwf	indf2,c
  6735                           
  6736                           ;main.c: 1103:                     *contCaminosRecorridos = 0;
  6737  000F1C  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6738  000F20  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6739  000F24  0E00               	movlw	0
  6740  000F26  6EDF               	movwf	indf2,c
  6741                           
  6742                           ;main.c: 1104:                     *investigandoCruce = 0;
  6743  000F28  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6744  000F2C  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6745  000F30  0E00               	movlw	0
  6746  000F32  6EDF               	movwf	indf2,c
  6747  000F34                     
  6748                           ; BSR set to: 0
  6749                           ;main.c: 1105:                     direccionElegida = ALTO;
  6750  000F34  0E04               	movlw	4
  6751  000F36  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6752                           
  6753                           ;main.c: 1107:                     break;
  6754  000F38  EFBC  F007         	goto	l10335
  6755  000F3C                     l10333:
  6756  000F3C  C1EC  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6757  000F40  C1ED  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6758  000F44  50DF               	movf	indf2,w,c
  6759  000F46  0100               	movlb	0	; () banked
  6760  000F48  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6761  000F4A  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6762                           
  6763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6764                           ; Switch size 1, requested type "simple"
  6765                           ; Number of cases is 1, Range of values is 0 to 0
  6766                           ; switch strategies available:
  6767                           ; Name         Instructions Cycles
  6768                           ; simple_byte            4     3 (average)
  6769                           ;	Chosen strategy is simple_byte
  6770  000F4C  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6771  000F4E  0A00               	xorlw	0	; case 0
  6772  000F50  B4D8               	btfsc	status,2,c
  6773  000F52  EFAD  F007         	goto	l11275
  6774  000F56  EFBC  F007         	goto	l10335
  6775  000F5A                     l11275:
  6776                           
  6777                           ; BSR set to: 0
  6778                           ; Switch size 1, requested type "simple"
  6779                           ; Number of cases is 3, Range of values is 1 to 3
  6780                           ; switch strategies available:
  6781                           ; Name         Instructions Cycles
  6782                           ; simple_byte           10     6 (average)
  6783                           ;	Chosen strategy is simple_byte
  6784  000F5A  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6785  000F5C  0A01               	xorlw	1	; case 1
  6786  000F5E  B4D8               	btfsc	status,2,c
  6787  000F60  EFF4  F006         	goto	l10195
  6788  000F64  0A03               	xorlw	3	; case 2
  6789  000F66  B4D8               	btfsc	status,2,c
  6790  000F68  EF5F  F007         	goto	l10283
  6791  000F6C  0A01               	xorlw	1	; case 3
  6792  000F6E  B4D8               	btfsc	status,2,c
  6793  000F70  EF88  F007         	goto	l10327
  6794  000F74  EFBC  F007         	goto	l10335
  6795  000F78                     l10335:
  6796                           
  6797                           ;main.c: 1111:         if (direccionElegida == ENFRENTE)
  6798  000F78  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  6799  000F7A  A4D8               	btfss	status,2,c
  6800  000F7C  EFC2  F007         	goto	u11541
  6801  000F80  EFC4  F007         	goto	u11540
  6802  000F84                     u11541:
  6803  000F84  EFCA  F007         	goto	l10339
  6804  000F88                     u11540:
  6805  000F88                     
  6806                           ;main.c: 1112:             *avanceRectoLargo = 1;
  6807  000F88  C1F6  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  6808  000F8C  C1F7  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  6809  000F90  0E01               	movlw	1
  6810  000F92  6EDF               	movwf	indf2,c
  6811  000F94                     l10339:
  6812                           
  6813                           ;main.c: 1114:         mostrarDireccionElegida(direccionElegida);
  6814  000F94  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  6815  000F96  ECBB  F026         	call	_mostrarDireccionElegida
  6816                           
  6817                           ;main.c: 1116:     } else if (*posicionInvCruce && *investigandoCruce && caminoEncontrad
      +                          o) {
  6818  000F9A  EF82  F009         	goto	l632
  6819  000F9E                     l10341:
  6820                           
  6821                           ; BSR set to: 0
  6822  000F9E  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6823  000FA2  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6824  000FA6  50DF               	movf	indf2,w,c
  6825  000FA8  B4D8               	btfsc	status,2,c
  6826  000FAA  EFD9  F007         	goto	u11551
  6827  000FAE  EFDB  F007         	goto	u11550
  6828  000FB2                     u11551:
  6829  000FB2  EF7F  F008         	goto	l10375
  6830  000FB6                     u11550:
  6831  000FB6                     
  6832                           ; BSR set to: 0
  6833  000FB6  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6834  000FBA  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6835  000FBE  50DF               	movf	indf2,w,c
  6836  000FC0  B4D8               	btfsc	status,2,c
  6837  000FC2  EFE5  F007         	goto	u11561
  6838  000FC6  EFE7  F007         	goto	u11560
  6839  000FCA                     u11561:
  6840  000FCA  EF7F  F008         	goto	l10375
  6841  000FCE                     u11560:
  6842  000FCE                     
  6843                           ; BSR set to: 0
  6844  000FCE  5059               	movf	_caminoEncontrado^0,w,c
  6845  000FD0  B4D8               	btfsc	status,2,c
  6846  000FD2  EFED  F007         	goto	u11571
  6847  000FD6  EFEF  F007         	goto	u11570
  6848  000FDA                     u11571:
  6849  000FDA  EF7F  F008         	goto	l10375
  6850  000FDE                     u11570:
  6851  000FDE                     
  6852                           ; BSR set to: 0
  6853                           ;main.c: 1118:         if (*posicionInvCruce)
  6854  000FDE  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6855  000FE2  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6856  000FE6  50DF               	movf	indf2,w,c
  6857  000FE8  B4D8               	btfsc	status,2,c
  6858  000FEA  EFF9  F007         	goto	u11581
  6859  000FEE  EFFB  F007         	goto	u11580
  6860  000FF2                     u11581:
  6861  000FF2  EF01  F008         	goto	l10351
  6862  000FF6                     u11580:
  6863  000FF6                     
  6864                           ; BSR set to: 0
  6865                           ;main.c: 1119:             *posicionInvCruce = 0;
  6866  000FF6  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6867  000FFA  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6868  000FFE  0E00               	movlw	0
  6869  001000  6EDF               	movwf	indf2,c
  6870  001002                     l10351:
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;main.c: 1121:         if (ida) {
  6874  001002  0101               	movlb	1	; () banked
  6875  001004  51FA               	movf	_ida& (0+255),w,b
  6876  001006  B4D8               	btfsc	status,2,c
  6877  001008  EF08  F008         	goto	u11591
  6878  00100C  EF0A  F008         	goto	u11590
  6879  001010                     u11591:
  6880  001010  EF1F  F008         	goto	l10357
  6881  001014                     u11590:
  6882  001014                     
  6883                           ; BSR set to: 1
  6884                           ;main.c: 1122:             direccionElegida = caminoFinal[crucesRecorridos - 1];
  6885  001014  5140               	movf	_crucesRecorridos& (0+255),w,b
  6886  001016  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  6887  001018  0100               	movlb	0	; () banked
  6888  00101A  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6889  00101C  0E00               	movlw	0
  6890  00101E  0101               	movlb	1	; () banked
  6891  001020  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  6892  001022  0100               	movlb	0	; () banked
  6893  001024  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6894  001026  0EFF               	movlw	255
  6895  001028  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  6896  00102A  6ED9               	movwf	fsr2l,c
  6897  00102C  0EFF               	movlw	255
  6898  00102E  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  6899  001030  6EDA               	movwf	fsr2h,c
  6900  001032  50DF               	movf	indf2,w,c
  6901  001034  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6902  001036                     
  6903                           ; BSR set to: 0
  6904                           ;main.c: 1123:             crucesRecorridos++;
  6905  001036  0101               	movlb	1	; () banked
  6906  001038  2B40               	incf	_crucesRecorridos& (0+255),f,b
  6907                           
  6908                           ;main.c: 1124:         } else {
  6909  00103A  EF7A  F008         	goto	l10373
  6910  00103E                     l10357:
  6911                           
  6912                           ; BSR set to: 1
  6913                           ;main.c: 1126:             if (caminoFinal[crucesRecorridos - 1] == IZQUIERDA)
  6914  00103E  5140               	movf	_crucesRecorridos& (0+255),w,b
  6915  001040  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  6916  001042  0100               	movlb	0	; () banked
  6917  001044  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6918  001046  0E00               	movlw	0
  6919  001048  0101               	movlb	1	; () banked
  6920  00104A  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  6921  00104C  0100               	movlb	0	; () banked
  6922  00104E  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6923  001050  0EFF               	movlw	255
  6924  001052  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  6925  001054  6ED9               	movwf	fsr2l,c
  6926  001056  0EFF               	movlw	255
  6927  001058  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  6928  00105A  6EDA               	movwf	fsr2h,c
  6929  00105C  0E02               	movlw	2
  6930  00105E  18DE               	xorwf	postinc2,w,c
  6931  001060  A4D8               	btfss	status,2,c
  6932  001062  EF35  F008         	goto	u11601
  6933  001066  EF37  F008         	goto	u11600
  6934  00106A                     u11601:
  6935  00106A  EF3B  F008         	goto	l10361
  6936  00106E                     u11600:
  6937  00106E                     
  6938                           ; BSR set to: 0
  6939                           ;main.c: 1127:                 direccionElegida = DERECHA;
  6940  00106E  0E03               	movlw	3
  6941  001070  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6942  001072  EF6A  F008         	goto	l10367
  6943  001076                     l10361:
  6944                           
  6945                           ; BSR set to: 0
  6946  001076  0101               	movlb	1	; () banked
  6947  001078  5140               	movf	_crucesRecorridos& (0+255),w,b
  6948  00107A  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  6949  00107C  0100               	movlb	0	; () banked
  6950  00107E  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6951  001080  0E00               	movlw	0
  6952  001082  0101               	movlb	1	; () banked
  6953  001084  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  6954  001086  0100               	movlb	0	; () banked
  6955  001088  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6956  00108A  0EFF               	movlw	255
  6957  00108C  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  6958  00108E  6ED9               	movwf	fsr2l,c
  6959  001090  0EFF               	movlw	255
  6960  001092  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  6961  001094  6EDA               	movwf	fsr2h,c
  6962  001096  0E03               	movlw	3
  6963  001098  18DE               	xorwf	postinc2,w,c
  6964  00109A  A4D8               	btfss	status,2,c
  6965  00109C  EF52  F008         	goto	u11611
  6966  0010A0  EF54  F008         	goto	u11610
  6967  0010A4                     u11611:
  6968  0010A4  EF58  F008         	goto	l10365
  6969  0010A8                     u11610:
  6970  0010A8                     
  6971                           ; BSR set to: 0
  6972                           ;main.c: 1129:                 direccionElegida = IZQUIERDA;
  6973  0010A8  0E02               	movlw	2
  6974  0010AA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6975  0010AC  EF6A  F008         	goto	l10367
  6976  0010B0                     l10365:
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;main.c: 1131:                 direccionElegida = caminoFinal[crucesRecorridos - 1];
  6980  0010B0  0101               	movlb	1	; () banked
  6981  0010B2  5140               	movf	_crucesRecorridos& (0+255),w,b
  6982  0010B4  25F8               	addwf	decidirDireccion@caminoFinal& (0+255),w,b
  6983  0010B6  0100               	movlb	0	; () banked
  6984  0010B8  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6985  0010BA  0E00               	movlw	0
  6986  0010BC  0101               	movlb	1	; () banked
  6987  0010BE  21F9               	addwfc	(decidirDireccion@caminoFinal+1)& (0+255),w,b
  6988  0010C0  0100               	movlb	0	; () banked
  6989  0010C2  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6990  0010C4  0EFF               	movlw	255
  6991  0010C6  25FB               	addwf	??_decidirDireccion& (0+255),w,b
  6992  0010C8  6ED9               	movwf	fsr2l,c
  6993  0010CA  0EFF               	movlw	255
  6994  0010CC  21FC               	addwfc	(??_decidirDireccion+1)& (0+255),w,b
  6995  0010CE  6EDA               	movwf	fsr2h,c
  6996  0010D0  50DF               	movf	indf2,w,c
  6997  0010D2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6998  0010D4                     l10367:
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;main.c: 1133:             crucesRecorridos--;
  7002  0010D4  0101               	movlb	1	; () banked
  7003  0010D6  0740               	decf	_crucesRecorridos& (0+255),f,b
  7004  0010D8                     
  7005                           ; BSR set to: 1
  7006                           ;main.c: 1135:             if (direccionElegida == ENFRENTE)
  7007  0010D8  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  7008  0010DA  A4D8               	btfss	status,2,c
  7009  0010DC  EF72  F008         	goto	u11621
  7010  0010E0  EF74  F008         	goto	u11620
  7011  0010E4                     u11621:
  7012  0010E4  EF7A  F008         	goto	l10373
  7013  0010E8                     u11620:
  7014  0010E8                     
  7015                           ; BSR set to: 1
  7016                           ;main.c: 1136:                 *avanceRectoLargo = 1;
  7017  0010E8  C1F6  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  7018  0010EC  C1F7  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  7019  0010F0  0E01               	movlw	1
  7020  0010F2  6EDF               	movwf	indf2,c
  7021  0010F4                     l10373:
  7022                           
  7023                           ; BSR set to: 1
  7024                           ;main.c: 1139:         mostrarDireccionElegida(direccionElegida);
  7025  0010F4  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  7026  0010F6  ECBB  F026         	call	_mostrarDireccionElegida
  7027                           
  7028                           ;main.c: 1142:     } else {
  7029  0010FA  EF82  F009         	goto	l632
  7030  0010FE                     l10375:
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;main.c: 1144:         if (llegoDestino) {
  7034  0010FE  51FF               	movf	_llegoDestino& (0+255),w,b
  7035  001100  B4D8               	btfsc	status,2,c
  7036  001102  EF85  F008         	goto	u11631
  7037  001106  EF87  F008         	goto	u11630
  7038  00110A                     u11631:
  7039  00110A  EF8B  F008         	goto	l10379
  7040  00110E                     u11630:
  7041  00110E                     
  7042                           ; BSR set to: 0
  7043                           ;main.c: 1145:             direccionElegida = ALTO;
  7044  00110E  0E04               	movlw	4
  7045  001110  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7046                           
  7047                           ;main.c: 1147:         } else {
  7048  001112  EF82  F009         	goto	l632
  7049  001116                     l10379:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;main.c: 1149:             if (hayCruce(caminosRecorrer, *investigandoCruce)) {
  7053  001116  C1E6  F040         	movff	decidirDireccion@caminosRecorrer,hayCruce@caminosRecorrer
  7054  00111A  C1E7  F041         	movff	decidirDireccion@caminosRecorrer+1,hayCruce@caminosRecorrer+1
  7055  00111E  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7056  001122  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7057  001126  50DF               	movf	indf2,w,c
  7058  001128  6E42               	movwf	hayCruce@investigandoCruce^0,c
  7059  00112A  EC7C  F01C         	call	_hayCruce	;wreg free
  7060  00112E  0900               	iorlw	0
  7061  001130  B4D8               	btfsc	status,2,c
  7062  001132  EF9D  F008         	goto	u11641
  7063  001136  EF9F  F008         	goto	u11640
  7064  00113A                     u11641:
  7065  00113A  EF09  F009         	goto	l10395
  7066  00113E                     u11640:
  7067  00113E                     
  7068                           ;main.c: 1151:                 velocidadBaja();
  7069  00113E  ECA0  F02B         	call	_velocidadBaja	;wreg free
  7070  001142                     
  7071                           ;main.c: 1153:                 if (!(*cruceDetectado)) {
  7072  001142  C1F4  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  7073  001146  C1F5  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  7074  00114A  50DF               	movf	indf2,w,c
  7075  00114C  A4D8               	btfss	status,2,c
  7076  00114E  EFAB  F008         	goto	u11651
  7077  001152  EFAD  F008         	goto	u11650
  7078  001156                     u11651:
  7079  001156  EF82  F009         	goto	l632
  7080  00115A                     u11650:
  7081  00115A                     
  7082                           ;main.c: 1155:                     if (!(*investigandoCruce))
  7083  00115A  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7084  00115E  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7085  001162  50DF               	movf	indf2,w,c
  7086  001164  A4D8               	btfss	status,2,c
  7087  001166  EFB7  F008         	goto	u11661
  7088  00116A  EFB9  F008         	goto	u11660
  7089  00116E                     u11661:
  7090  00116E  EFBF  F008         	goto	l647
  7091  001172                     u11660:
  7092  001172                     
  7093                           ;main.c: 1156:                         *posicionInvCruce = 1;
  7094  001172  C1EA  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  7095  001176  C1EB  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  7096  00117A  0E01               	movlw	1
  7097  00117C  6EDF               	movwf	indf2,c
  7098  00117E                     l647:
  7099                           
  7100                           ;main.c: 1159:                     *mapear = 1;
  7101  00117E  C1F2  FFD9         	movff	decidirDireccion@mapear,fsr2l
  7102  001182  C1F3  FFDA         	movff	decidirDireccion@mapear+1,fsr2h
  7103  001186  0E01               	movlw	1
  7104  001188  6EDF               	movwf	indf2,c
  7105                           
  7106                           ;main.c: 1160:                     *cruceDetectado = 1;
  7107  00118A  C1F4  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  7108  00118E  C1F5  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  7109  001192  0E01               	movlw	1
  7110  001194  6EDF               	movwf	indf2,c
  7111                           
  7112                           ;main.c: 1161:                     *investigandoCruce = 1;
  7113  001196  C1E8  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  7114  00119A  C1E9  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  7115  00119E  0E01               	movlw	1
  7116  0011A0  6EDF               	movwf	indf2,c
  7117  0011A2                     
  7118                           ;main.c: 1162:                     direccionElegida = ALTO;
  7119  0011A2  0E04               	movlw	4
  7120  0011A4  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7121  0011A6                     
  7122                           ;main.c: 1164:                     sprintf(buffer, "Investigando Cruce: %c | %c | %c\n",
  7123  0011A6  0E92               	movlw	low _buffer
  7124  0011A8  0100               	movlb	0	; () banked
  7125  0011AA  6FE7               	movwf	sprintf@s& (0+255),b
  7126  0011AC  0E01               	movlw	high _buffer
  7127  0011AE  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  7128  0011B0  0E87               	movlw	low STR_19
  7129  0011B2  6FE9               	movwf	sprintf@fmt& (0+255),b
  7130  0011B4  0E7E               	movlw	high STR_19
  7131  0011B6  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  7132  0011B8  C1E6  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  7133  0011BC  C1E7  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  7134  0011C0  50DF               	movf	indf2,w,c
  7135  0011C2  6FFB               	movwf	??_decidirDireccion& (0+255),b
  7136  0011C4  51FB               	movf	??_decidirDireccion& (0+255),w,b
  7137  0011C6  6FEB               	movwf	(?_sprintf+4)& (0+255),b
  7138  0011C8  6BEC               	clrf	(?_sprintf+5)& (0+255),b
  7139  0011CA  0101               	movlb	1	; () banked
  7140  0011CC  EE20 F001          	lfsr	2,1
  7141  0011D0  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  7142  0011D2  26D9               	addwf	fsr2l,f,c
  7143  0011D4  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  7144  0011D6  22DA               	addwfc	fsr2h,f,c
  7145  0011D8  50DF               	movf	indf2,w,c
  7146  0011DA  0100               	movlb	0	; () banked
  7147  0011DC  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  7148  0011DE  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  7149  0011E0  6FED               	movwf	(?_sprintf+6)& (0+255),b
  7150  0011E2  6BEE               	clrf	(?_sprintf+7)& (0+255),b
  7151  0011E4  0101               	movlb	1	; () banked
  7152  0011E6  EE20 F002          	lfsr	2,2
  7153  0011EA  51E6               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  7154  0011EC  26D9               	addwf	fsr2l,f,c
  7155  0011EE  51E7               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  7156  0011F0  22DA               	addwfc	fsr2h,f,c
  7157  0011F2  50DF               	movf	indf2,w,c
  7158  0011F4  0100               	movlb	0	; () banked
  7159  0011F6  6FFD               	movwf	(??_decidirDireccion+2)& (0+255),b
  7160  0011F8  51FD               	movf	(??_decidirDireccion+2)& (0+255),w,b
  7161  0011FA  6FEF               	movwf	(?_sprintf+8)& (0+255),b
  7162  0011FC  6BF0               	clrf	(?_sprintf+9)& (0+255),b
  7163  0011FE  EC4F  F029         	call	_sprintf	;wreg free
  7164  001202                     
  7165                           ;main.c: 1166:                     UART_printf(buffer);
  7166  001202  0E92               	movlw	low _buffer
  7167  001204  6E07               	movwf	UART_printf@cadena^0,c
  7168  001206  0E01               	movlw	high _buffer
  7169  001208  6E08               	movwf	(UART_printf@cadena+1)^0,c
  7170  00120A  EC45  F028         	call	_UART_printf	;wreg free
  7171  00120E  EF82  F009         	goto	l632
  7172  001212                     l10395:
  7173                           
  7174                           ;main.c: 1172:                 if (DISTANCIA_PRIORIDAD_ALTA > 14)
  7175  001212  0E00               	movlw	0
  7176  001214  6E34               	movwf	___flge@ff1^0,c
  7177  001216  0E00               	movlw	0
  7178  001218  6E35               	movwf	(___flge@ff1+1)^0,c
  7179  00121A  0E60               	movlw	96
  7180  00121C  6E36               	movwf	(___flge@ff1+2)^0,c
  7181  00121E  0E41               	movlw	65
  7182  001220  6E37               	movwf	(___flge@ff1+3)^0,c
  7183  001222  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
  7184  001226  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
  7185  00122A  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
  7186  00122E  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
  7187  001232  ECB7  F021         	call	___flge	;wreg free
  7188  001236  B0D8               	btfsc	status,0,c
  7189  001238  EF20  F009         	goto	u11671
  7190  00123C  EF22  F009         	goto	u11670
  7191  001240                     u11671:
  7192  001240  EF26  F009         	goto	l10399
  7193  001244                     u11670:
  7194  001244  0E01               	movlw	1
  7195  001246  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7196  001248  EF82  F009         	goto	l632
  7197  00124C                     l10399:
  7198  00124C  0E00               	movlw	0
  7199  00124E  6E34               	movwf	___flge@ff1^0,c
  7200  001250  0E00               	movlw	0
  7201  001252  6E35               	movwf	(___flge@ff1+1)^0,c
  7202  001254  0EF0               	movlw	240
  7203  001256  6E36               	movwf	(___flge@ff1+2)^0,c
  7204  001258  0E41               	movlw	65
  7205  00125A  6E37               	movwf	(___flge@ff1+3)^0,c
  7206  00125C  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
  7207  001260  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
  7208  001264  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
  7209  001268  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
  7210  00126C  ECB7  F021         	call	___flge	;wreg free
  7211  001270  B0D8               	btfsc	status,0,c
  7212  001272  EF3D  F009         	goto	u11681
  7213  001276  EF3F  F009         	goto	u11680
  7214  00127A                     u11681:
  7215  00127A  EF43  F009         	goto	l10403
  7216  00127E                     u11680:
  7217  00127E  0E02               	movlw	2
  7218  001280  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7219  001282  EF82  F009         	goto	l632
  7220  001286                     l10403:
  7221  001286  0E00               	movlw	0
  7222  001288  6E34               	movwf	___flge@ff1^0,c
  7223  00128A  0E00               	movlw	0
  7224  00128C  6E35               	movwf	(___flge@ff1+1)^0,c
  7225  00128E  0EF0               	movlw	240
  7226  001290  6E36               	movwf	(___flge@ff1+2)^0,c
  7227  001292  0E41               	movlw	65
  7228  001294  6E37               	movwf	(___flge@ff1+3)^0,c
  7229  001296  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
  7230  00129A  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
  7231  00129E  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
  7232  0012A2  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
  7233  0012A6  ECB7  F021         	call	___flge	;wreg free
  7234  0012AA  B0D8               	btfsc	status,0,c
  7235  0012AC  EF5A  F009         	goto	u11691
  7236  0012B0  EF5C  F009         	goto	u11690
  7237  0012B4                     u11691:
  7238  0012B4  EF60  F009         	goto	l10407
  7239  0012B8                     u11690:
  7240  0012B8  0E03               	movlw	3
  7241  0012BA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7242  0012BC  EF82  F009         	goto	l632
  7243  0012C0                     l10407:
  7244                           
  7245                           ;main.c: 1179:                     if (!crucesRecorridos && caminoEncontrado && !ida) {
  7246  0012C0  0101               	movlb	1	; () banked
  7247  0012C2  5140               	movf	_crucesRecorridos& (0+255),w,b
  7248  0012C4  A4D8               	btfss	status,2,c
  7249  0012C6  EF67  F009         	goto	u11701
  7250  0012CA  EF69  F009         	goto	u11700
  7251  0012CE                     u11701:
  7252  0012CE  EF80  F009         	goto	l10415
  7253  0012D2                     u11700:
  7254  0012D2                     
  7255                           ; BSR set to: 1
  7256  0012D2  5059               	movf	_caminoEncontrado^0,w,c
  7257  0012D4  B4D8               	btfsc	status,2,c
  7258  0012D6  EF6F  F009         	goto	u11711
  7259  0012DA  EF71  F009         	goto	u11710
  7260  0012DE                     u11711:
  7261  0012DE  EF80  F009         	goto	l10415
  7262  0012E2                     u11710:
  7263  0012E2                     
  7264                           ; BSR set to: 1
  7265  0012E2  51FA               	movf	_ida& (0+255),w,b
  7266  0012E4  A4D8               	btfss	status,2,c
  7267  0012E6  EF77  F009         	goto	u11721
  7268  0012EA  EF79  F009         	goto	u11720
  7269  0012EE                     u11721:
  7270  0012EE  EF80  F009         	goto	l10415
  7271  0012F2                     u11720:
  7272  0012F2                     
  7273                           ; BSR set to: 1
  7274                           ;main.c: 1180:                         llegoDestino = 1;
  7275  0012F2  0E01               	movlw	1
  7276  0012F4  0100               	movlb	0	; () banked
  7277  0012F6  6FFF               	movwf	_llegoDestino& (0+255),b
  7278                           
  7279                           ;main.c: 1181:                         direccionElegida = ALTO;
  7280  0012F8  0E04               	movlw	4
  7281  0012FA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7282                           
  7283                           ;main.c: 1182:                     } else
  7284  0012FC  EF82  F009         	goto	l632
  7285  001300                     l10415:
  7286                           
  7287                           ; BSR set to: 1
  7288                           ;main.c: 1183:                         direccionElegida = 0;
  7289  001300  0E00               	movlw	0
  7290  001302  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  7291  001304                     l632:
  7292                           
  7293                           ;main.c: 1193:     return direccionElegida;
  7294  001304  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  7295  001306  0012               	return		;funcret
  7296  001308                     __end_of_decidirDireccion:
  7297                           	opt callstack 0
  7298                           
  7299 ;; *************** function _velocidadBaja *****************
  7300 ;; Defined at:
  7301 ;;		line 1316 in file "main.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;		None
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7315 ;;      Params:         0       0       0       0       0       0       0       0       0
  7316 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7318 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7319 ;;Total ram usage:        0 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    5
  7322 ;; This function calls:
  7323 ;;		_pwmDuty
  7324 ;; This function is called by:
  7325 ;;		_comportamientoBasico
  7326 ;;		_decidirDireccion
  7327 ;;		_probarCruceT
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text26
  7332  005740                     __ptext26:
  7333                           	opt callstack 0
  7334  005740                     _velocidadBaja:
  7335                           	opt callstack 24
  7336  005740                     
  7337                           ;main.c: 1318:     pwmDuty(70, 1);
  7338  005740  0E00               	movlw	0
  7339  005742  0100               	movlb	0	; () banked
  7340  005744  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7341  005746  0E46               	movlw	70
  7342  005748  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7343  00574A  0E01               	movlw	1
  7344  00574C  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7345  00574E  ECFC  F019         	call	_pwmDuty	;wreg free
  7346                           
  7347                           ;main.c: 1319:     pwmDuty(70, 2);
  7348  005752  0E00               	movlw	0
  7349  005754  0100               	movlb	0	; () banked
  7350  005756  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7351  005758  0E46               	movlw	70
  7352  00575A  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7353  00575C  0E02               	movlw	2
  7354  00575E  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7355  005760  ECFC  F019         	call	_pwmDuty	;wreg free
  7356  005764  0012               	return		;funcret
  7357  005766                     __end_of_velocidadBaja:
  7358                           	opt callstack 0
  7359                           
  7360 ;; *************** function _pwmDuty *****************
  7361 ;; Defined at:
  7362 ;;		line 20 in file "./pwm.h"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
  7365 ;;  channel         1   30[BANK0 ] unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  duty            4   36[BANK0 ] long 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7377 ;;      Params:         0       3       0       0       0       0       0       0       0
  7378 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7379 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7380 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7381 ;;Total ram usage:       12 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    4
  7384 ;; This function calls:
  7385 ;;		___fldiv
  7386 ;;		___flmul
  7387 ;;		___fltol
  7388 ;;		___xxtofl
  7389 ;;		_map
  7390 ;; This function is called by:
  7391 ;;		_PID
  7392 ;;		_velocidadEstandar
  7393 ;;		_velocidadBaja
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text27
  7398  0033F8                     __ptext27:
  7399                           	opt callstack 0
  7400  0033F8                     _pwmDuty:
  7401                           	opt callstack 24
  7402  0033F8                     
  7403                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  7404  0033F8  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
  7405  0033FC  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  7406  003400  6A22               	clrf	(map@x+2)^0,c
  7407  003402  6A23               	clrf	(map@x+3)^0,c
  7408  003404  0E00               	movlw	0
  7409  003406  6E24               	movwf	map@in_min^0,c
  7410  003408  0E00               	movlw	0
  7411  00340A  6E25               	movwf	(map@in_min+1)^0,c
  7412  00340C  0E00               	movlw	0
  7413  00340E  6E26               	movwf	(map@in_min+2)^0,c
  7414  003410  0E00               	movlw	0
  7415  003412  6E27               	movwf	(map@in_min+3)^0,c
  7416  003414  0E64               	movlw	100
  7417  003416  6E28               	movwf	map@in_max^0,c
  7418  003418  0E00               	movlw	0
  7419  00341A  6E29               	movwf	(map@in_max+1)^0,c
  7420  00341C  0E00               	movlw	0
  7421  00341E  6E2A               	movwf	(map@in_max+2)^0,c
  7422  003420  0E00               	movlw	0
  7423  003422  6E2B               	movwf	(map@in_max+3)^0,c
  7424  003424  0E00               	movlw	0
  7425  003426  6E2C               	movwf	map@out_min^0,c
  7426  003428  0E00               	movlw	0
  7427  00342A  6E2D               	movwf	(map@out_min+1)^0,c
  7428  00342C  0E00               	movlw	0
  7429  00342E  6E2E               	movwf	(map@out_min+2)^0,c
  7430  003430  0E00               	movlw	0
  7431  003432  6E2F               	movwf	(map@out_min+3)^0,c
  7432  003434  0EFF               	movlw	255
  7433  003436  6E30               	movwf	map@out_max^0,c
  7434  003438  0E03               	movlw	3
  7435  00343A  6E31               	movwf	(map@out_max+1)^0,c
  7436  00343C  0E00               	movlw	0
  7437  00343E  6E32               	movwf	(map@out_max+2)^0,c
  7438  003440  0E00               	movlw	0
  7439  003442  6E33               	movwf	(map@out_max+3)^0,c
  7440  003444  ECFC  F026         	call	_map	;wreg free
  7441  003448  C020  F084         	movff	?_map,pwmDuty@duty
  7442  00344C  C021  F085         	movff	?_map+1,pwmDuty@duty+1
  7443  003450  C022  F086         	movff	?_map+2,pwmDuty@duty+2
  7444  003454  C023  F087         	movff	?_map+3,pwmDuty@duty+3
  7445  003458                     
  7446                           ;./pwm.h: 24:     if (duty < 1024) {
  7447  003458  0100               	movlb	0	; () banked
  7448  00345A  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  7449  00345C  EF3C  F01A         	goto	u9890
  7450  003460  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
  7451  003462  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  7452  003464  E107               	bnz	u9891
  7453  003466  0E04               	movlw	4
  7454  003468  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  7455  00346A  B0D8               	btfsc	status,0,c
  7456  00346C  EF3A  F01A         	goto	u9891
  7457  003470  EF3C  F01A         	goto	u9890
  7458  003474                     u9891:
  7459  003474  EFD9  F01A         	goto	l149
  7460  003478                     u9890:
  7461  003478                     
  7462                           ; BSR set to: 0
  7463                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  7464  003478  0E00               	movlw	0
  7465  00347A  6E1F               	movwf	___flmul@a^0,c
  7466  00347C  0E00               	movlw	0
  7467  00347E  6E20               	movwf	(___flmul@a+1)^0,c
  7468  003480  0EFA               	movlw	250
  7469  003482  6E21               	movwf	(___flmul@a+2)^0,c
  7470  003484  0E43               	movlw	67
  7471  003486  6E22               	movwf	(___flmul@a+3)^0,c
  7472  003488  0E00               	movlw	0
  7473  00348A  6E48               	movwf	___fldiv@a^0,c
  7474  00348C  0EC0               	movlw	192
  7475  00348E  6E49               	movwf	(___fldiv@a+1)^0,c
  7476  003490  0E7F               	movlw	127
  7477  003492  6E4A               	movwf	(___fldiv@a+2)^0,c
  7478  003494  0E44               	movlw	68
  7479  003496  6E4B               	movwf	(___fldiv@a+3)^0,c
  7480  003498  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
  7481  00349C  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  7482  0034A0  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  7483  0034A4  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  7484  0034A8  0E01               	movlw	1
  7485  0034AA  ECDA  F01A         	call	___xxtofl
  7486  0034AE  C00D  F044         	movff	?___xxtofl,___fldiv@b
  7487  0034B2  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
  7488  0034B6  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
  7489  0034BA  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
  7490  0034BE  EC8B  F014         	call	___fldiv	;wreg free
  7491  0034C2  C044  F01B         	movff	?___fldiv,___flmul@b
  7492  0034C6  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
  7493  0034CA  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
  7494  0034CE  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
  7495  0034D2  ECB8  F00E         	call	___flmul	;wreg free
  7496  0034D6  C01B  F072         	movff	?___flmul,___fltol@f1
  7497  0034DA  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
  7498  0034DE  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
  7499  0034E2  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
  7500  0034E6  EC33  F021         	call	___fltol	;wreg free
  7501  0034EA  C072  F084         	movff	?___fltol,pwmDuty@duty
  7502  0034EE  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
  7503  0034F2  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
  7504  0034F6  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
  7505                           
  7506                           ;./pwm.h: 28:         switch (channel) {
  7507  0034FA  EFC3  F01A         	goto	l9107
  7508  0034FE                     l9101:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  7512  0034FE  0E02               	movlw	2
  7513  003500  6F7F               	movwf	??_pwmDuty& (0+255),b
  7514  003502  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7515  003506  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7516  00350A  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7517  00350E  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7518  003512                     u9905:
  7519  003512  677F               	tstfsz	??_pwmDuty& (0+255),b
  7520  003514  EF8E  F01A         	goto	u9906
  7521  003518  EF96  F01A         	goto	u9907
  7522  00351C                     u9906:
  7523  00351C  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7524  00351E  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7525  003520  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7526  003522  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7527  003524  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7528  003526  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7529  003528  EF89  F01A         	goto	u9905
  7530  00352C                     u9907:
  7531  00352C  0100               	movlb	0	; () banked
  7532  00352E  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7533  003530  6EBE               	movwf	190,c	;volatile
  7534                           
  7535                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  7536  003532  0ECF               	movlw	207
  7537  003534  16BD               	andwf	189,f,c	;volatile
  7538                           
  7539                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  7540  003536  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7541  003538  0BF0               	andlw	240
  7542  00353A  0B30               	andlw	48
  7543  00353C  12BD               	iorwf	189,f,c	;volatile
  7544                           
  7545                           ;./pwm.h: 34:                 break;
  7546  00353E  EFD9  F01A         	goto	l149
  7547  003542                     l9103:
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  7551  003542  0E02               	movlw	2
  7552  003544  6F7F               	movwf	??_pwmDuty& (0+255),b
  7553  003546  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7554  00354A  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7555  00354E  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7556  003552  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7557  003556                     u9915:
  7558  003556  677F               	tstfsz	??_pwmDuty& (0+255),b
  7559  003558  EFB0  F01A         	goto	u9916
  7560  00355C  EFB8  F01A         	goto	u9917
  7561  003560                     u9916:
  7562  003560  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7563  003562  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7564  003564  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7565  003566  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7566  003568  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7567  00356A  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7568  00356C  EFAB  F01A         	goto	u9915
  7569  003570                     u9917:
  7570  003570  0100               	movlb	0	; () banked
  7571  003572  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7572  003574  6EBB               	movwf	187,c	;volatile
  7573                           
  7574                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  7575  003576  0ECF               	movlw	207
  7576  003578  16BA               	andwf	186,f,c	;volatile
  7577                           
  7578                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  7579  00357A  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7580  00357C  0BF0               	andlw	240
  7581  00357E  0B30               	andlw	48
  7582  003580  12BA               	iorwf	186,f,c	;volatile
  7583                           
  7584                           ;./pwm.h: 40:                 break;
  7585  003582  EFD9  F01A         	goto	l149
  7586  003586                     l9107:
  7587  003586  0100               	movlb	0	; () banked
  7588  003588  517E               	movf	pwmDuty@channel& (0+255),w,b
  7589  00358A  6F7F               	movwf	??_pwmDuty& (0+255),b
  7590  00358C  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
  7591                           
  7592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7593                           ; Switch size 1, requested type "simple"
  7594                           ; Number of cases is 1, Range of values is 0 to 0
  7595                           ; switch strategies available:
  7596                           ; Name         Instructions Cycles
  7597                           ; simple_byte            4     3 (average)
  7598                           ;	Chosen strategy is simple_byte
  7599  00358E  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7600  003590  0A00               	xorlw	0	; case 0
  7601  003592  B4D8               	btfsc	status,2,c
  7602  003594  EFCE  F01A         	goto	l11277
  7603  003598  EFD9  F01A         	goto	l149
  7604  00359C                     l11277:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ; Switch size 1, requested type "simple"
  7608                           ; Number of cases is 2, Range of values is 1 to 2
  7609                           ; switch strategies available:
  7610                           ; Name         Instructions Cycles
  7611                           ; simple_byte            7     4 (average)
  7612                           ;	Chosen strategy is simple_byte
  7613  00359C  517F               	movf	??_pwmDuty& (0+255),w,b
  7614  00359E  0A01               	xorlw	1	; case 1
  7615  0035A0  B4D8               	btfsc	status,2,c
  7616  0035A2  EF7F  F01A         	goto	l9101
  7617  0035A6  0A03               	xorlw	3	; case 2
  7618  0035A8  B4D8               	btfsc	status,2,c
  7619  0035AA  EFA1  F01A         	goto	l9103
  7620  0035AE  EFD9  F01A         	goto	l149
  7621  0035B2                     l149:
  7622                           
  7623                           ; BSR set to: 0
  7624  0035B2  0012               	return		;funcret
  7625  0035B4                     __end_of_pwmDuty:
  7626                           	opt callstack 0
  7627                           
  7628 ;; *************** function _map *****************
  7629 ;; Defined at:
  7630 ;;		line 16 in file "./pwm.h"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  x               4   31[COMRAM] long 
  7633 ;;  in_min          4   35[COMRAM] long 
  7634 ;;  in_max          4   39[COMRAM] long 
  7635 ;;  out_min         4   43[COMRAM] long 
  7636 ;;  out_max         4   47[COMRAM] long 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  4   31[COMRAM] long 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7648 ;;      Params:        20       0       0       0       0       0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7651 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7652 ;;Total ram usage:       20 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:    3
  7655 ;; This function calls:
  7656 ;;		___aldiv
  7657 ;;		___lmul
  7658 ;; This function is called by:
  7659 ;;		_pwmDuty
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text28
  7664  004DF8                     __ptext28:
  7665                           	opt callstack 0
  7666  004DF8                     _map:
  7667                           	opt callstack 24
  7668  004DF8                     
  7669                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  7670  004DF8  5024               	movf	map@in_min^0,w,c
  7671  004DFA  5C20               	subwf	map@x^0,w,c
  7672  004DFC  6E06               	movwf	___lmul@multiplier^0,c
  7673  004DFE  5025               	movf	(map@in_min+1)^0,w,c
  7674  004E00  5821               	subwfb	(map@x+1)^0,w,c
  7675  004E02  6E07               	movwf	(___lmul@multiplier+1)^0,c
  7676  004E04  5026               	movf	(map@in_min+2)^0,w,c
  7677  004E06  5822               	subwfb	(map@x+2)^0,w,c
  7678  004E08  6E08               	movwf	(___lmul@multiplier+2)^0,c
  7679  004E0A  5027               	movf	(map@in_min+3)^0,w,c
  7680  004E0C  5823               	subwfb	(map@x+3)^0,w,c
  7681  004E0E  6E09               	movwf	(___lmul@multiplier+3)^0,c
  7682  004E10  502C               	movf	map@out_min^0,w,c
  7683  004E12  5C30               	subwf	map@out_max^0,w,c
  7684  004E14  6E0A               	movwf	___lmul@multiplicand^0,c
  7685  004E16  502D               	movf	(map@out_min+1)^0,w,c
  7686  004E18  5831               	subwfb	(map@out_max+1)^0,w,c
  7687  004E1A  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  7688  004E1C  502E               	movf	(map@out_min+2)^0,w,c
  7689  004E1E  5832               	subwfb	(map@out_max+2)^0,w,c
  7690  004E20  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  7691  004E22  502F               	movf	(map@out_min+3)^0,w,c
  7692  004E24  5833               	subwfb	(map@out_max+3)^0,w,c
  7693  004E26  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  7694  004E28  ECAB  F027         	call	___lmul	;wreg free
  7695  004E2C  C006  F012         	movff	?___lmul,___aldiv@dividend
  7696  004E30  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  7697  004E34  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  7698  004E38  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  7699  004E3C  5024               	movf	map@in_min^0,w,c
  7700  004E3E  5C28               	subwf	map@in_max^0,w,c
  7701  004E40  6E16               	movwf	___aldiv@divisor^0,c
  7702  004E42  5025               	movf	(map@in_min+1)^0,w,c
  7703  004E44  5829               	subwfb	(map@in_max+1)^0,w,c
  7704  004E46  6E17               	movwf	(___aldiv@divisor+1)^0,c
  7705  004E48  5026               	movf	(map@in_min+2)^0,w,c
  7706  004E4A  582A               	subwfb	(map@in_max+2)^0,w,c
  7707  004E4C  6E18               	movwf	(___aldiv@divisor+2)^0,c
  7708  004E4E  5027               	movf	(map@in_min+3)^0,w,c
  7709  004E50  582B               	subwfb	(map@in_max+3)^0,w,c
  7710  004E52  6E19               	movwf	(___aldiv@divisor+3)^0,c
  7711  004E54  EC29  F020         	call	___aldiv	;wreg free
  7712  004E58  502C               	movf	map@out_min^0,w,c
  7713  004E5A  2412               	addwf	?___aldiv^0,w,c
  7714  004E5C  6E20               	movwf	?_map^0,c
  7715  004E5E  502D               	movf	(map@out_min+1)^0,w,c
  7716  004E60  2013               	addwfc	(?___aldiv+1)^0,w,c
  7717  004E62  6E21               	movwf	(?_map+1)^0,c
  7718  004E64  502E               	movf	(map@out_min+2)^0,w,c
  7719  004E66  2014               	addwfc	(?___aldiv+2)^0,w,c
  7720  004E68  6E22               	movwf	(?_map+2)^0,c
  7721  004E6A  502F               	movf	(map@out_min+3)^0,w,c
  7722  004E6C  2015               	addwfc	(?___aldiv+3)^0,w,c
  7723  004E6E  6E23               	movwf	(?_map+3)^0,c
  7724  004E70  0012               	return		;funcret
  7725  004E72                     __end_of_map:
  7726                           	opt callstack 0
  7727                           
  7728 ;; *************** function ___lmul *****************
  7729 ;; Defined at:
  7730 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  multiplier      4    5[COMRAM] unsigned long 
  7733 ;;  multiplicand    4    9[COMRAM] unsigned long 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  product         4   13[COMRAM] unsigned long 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  4    5[COMRAM] unsigned long 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7745 ;;      Params:         8       0       0       0       0       0       0       0       0
  7746 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7748 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7749 ;;Total ram usage:       12 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:    2
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_map
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text29
  7760  004F56                     __ptext29:
  7761                           	opt callstack 0
  7762  004F56                     ___lmul:
  7763                           	opt callstack 24
  7764  004F56  0E00               	movlw	0
  7765  004F58  6E0E               	movwf	___lmul@product^0,c
  7766  004F5A  0E00               	movlw	0
  7767  004F5C  6E0F               	movwf	(___lmul@product+1)^0,c
  7768  004F5E  0E00               	movlw	0
  7769  004F60  6E10               	movwf	(___lmul@product+2)^0,c
  7770  004F62  0E00               	movlw	0
  7771  004F64  6E11               	movwf	(___lmul@product+3)^0,c
  7772  004F66                     l8155:
  7773  004F66  A006               	btfss	___lmul@multiplier^0,0,c
  7774  004F68  EFB8  F027         	goto	u8181
  7775  004F6C  EFBA  F027         	goto	u8180
  7776  004F70                     u8181:
  7777  004F70  EFC2  F027         	goto	l8159
  7778  004F74                     u8180:
  7779  004F74  500A               	movf	___lmul@multiplicand^0,w,c
  7780  004F76  260E               	addwf	___lmul@product^0,f,c
  7781  004F78  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  7782  004F7A  220F               	addwfc	(___lmul@product+1)^0,f,c
  7783  004F7C  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  7784  004F7E  2210               	addwfc	(___lmul@product+2)^0,f,c
  7785  004F80  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  7786  004F82  2211               	addwfc	(___lmul@product+3)^0,f,c
  7787  004F84                     l8159:
  7788  004F84  90D8               	bcf	status,0,c
  7789  004F86  360A               	rlcf	___lmul@multiplicand^0,f,c
  7790  004F88  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7791  004F8A  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7792  004F8C  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7793  004F8E  90D8               	bcf	status,0,c
  7794  004F90  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  7795  004F92  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  7796  004F94  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  7797  004F96  3206               	rrcf	___lmul@multiplier^0,f,c
  7798  004F98  5006               	movf	___lmul@multiplier^0,w,c
  7799  004F9A  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  7800  004F9C  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  7801  004F9E  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  7802  004FA0  A4D8               	btfss	status,2,c
  7803  004FA2  EFD5  F027         	goto	u8191
  7804  004FA6  EFD7  F027         	goto	u8190
  7805  004FAA                     u8191:
  7806  004FAA  EFB3  F027         	goto	l8155
  7807  004FAE                     u8190:
  7808  004FAE  C00E  F006         	movff	___lmul@product,?___lmul
  7809  004FB2  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  7810  004FB6  C010  F008         	movff	___lmul@product+2,?___lmul+2
  7811  004FBA  C011  F009         	movff	___lmul@product+3,?___lmul+3
  7812  004FBE  0012               	return		;funcret
  7813  004FC0                     __end_of___lmul:
  7814                           	opt callstack 0
  7815                           
  7816 ;; *************** function ___xxtofl *****************
  7817 ;; Defined at:
  7818 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  sign            1    wreg     unsigned char 
  7821 ;;  val             4   12[COMRAM] long 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  sign            1   20[COMRAM] unsigned char 
  7824 ;;  arg             4   22[COMRAM] unsigned long 
  7825 ;;  exp             1   21[COMRAM] unsigned char 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  4   12[COMRAM] unsigned char 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2, status,0
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7835 ;;      Params:         4       0       0       0       0       0       0       0       0
  7836 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7837 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7838 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7839 ;;Total ram usage:       14 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:    2
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		_pwmDuty
  7846 ;;		_dameDistancia
  7847 ;;		_PID
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           	psect	text30
  7852  0035B4                     __ptext30:
  7853                           	opt callstack 0
  7854  0035B4                     ___xxtofl:
  7855                           	opt callstack 25
  7856                           
  7857                           ;incstack = 0
  7858                           ;___xxtofl@sign stored from wreg
  7859  0035B4  6E15               	movwf	___xxtofl@sign^0,c
  7860  0035B6  5015               	movf	___xxtofl@sign^0,w,c
  7861  0035B8  B4D8               	btfsc	status,2,c
  7862  0035BA  EFE1  F01A         	goto	u9771
  7863  0035BE  EFE3  F01A         	goto	u9770
  7864  0035C2                     u9771:
  7865  0035C2  EF05  F01B         	goto	l1604
  7866  0035C6                     u9770:
  7867  0035C6  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7868  0035C8  EFEA  F01A         	goto	u9780
  7869  0035CC  EFE8  F01A         	goto	u9781
  7870  0035D0                     u9781:
  7871  0035D0  EF05  F01B         	goto	l1604
  7872  0035D4                     u9780:
  7873  0035D4  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  7874  0035D8  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  7875  0035DC  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  7876  0035E0  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  7877  0035E4  1E11               	comf	??___xxtofl^0,f,c
  7878  0035E6  1E12               	comf	(??___xxtofl+1)^0,f,c
  7879  0035E8  1E13               	comf	(??___xxtofl+2)^0,f,c
  7880  0035EA  1E14               	comf	(??___xxtofl+3)^0,f,c
  7881  0035EC  2A11               	incf	??___xxtofl^0,f,c
  7882  0035EE  0E00               	movlw	0
  7883  0035F0  2212               	addwfc	(??___xxtofl+1)^0,f,c
  7884  0035F2  2213               	addwfc	(??___xxtofl+2)^0,f,c
  7885  0035F4  2214               	addwfc	(??___xxtofl+3)^0,f,c
  7886  0035F6  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  7887  0035FA  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  7888  0035FE  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  7889  003602  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  7890  003606  EF0D  F01B         	goto	l9043
  7891  00360A                     l1604:
  7892  00360A  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  7893  00360E  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7894  003612  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7895  003616  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7896  00361A                     l9043:
  7897  00361A  500D               	movf	___xxtofl@val^0,w,c
  7898  00361C  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  7899  00361E  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  7900  003620  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  7901  003622  A4D8               	btfss	status,2,c
  7902  003624  EF16  F01B         	goto	u9791
  7903  003628  EF18  F01B         	goto	u9790
  7904  00362C                     u9791:
  7905  00362C  EF22  F01B         	goto	l9049
  7906  003630                     u9790:
  7907  003630  0E00               	movlw	0
  7908  003632  6E0D               	movwf	?___xxtofl^0,c
  7909  003634  0E00               	movlw	0
  7910  003636  6E0E               	movwf	(?___xxtofl+1)^0,c
  7911  003638  0E00               	movlw	0
  7912  00363A  6E0F               	movwf	(?___xxtofl+2)^0,c
  7913  00363C  0E00               	movlw	0
  7914  00363E  6E10               	movwf	(?___xxtofl+3)^0,c
  7915  003640  EFB3  F01B         	goto	l1607
  7916  003644                     l9049:
  7917  003644  0E96               	movlw	150
  7918  003646  6E16               	movwf	___xxtofl@exp^0,c
  7919  003648  EF2C  F01B         	goto	l9053
  7920  00364C                     l9051:
  7921  00364C  2A16               	incf	___xxtofl@exp^0,f,c
  7922  00364E  90D8               	bcf	status,0,c
  7923  003650  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7924  003652  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7925  003654  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7926  003656  3217               	rrcf	___xxtofl@arg^0,f,c
  7927  003658                     l9053:
  7928  003658  0E00               	movlw	0
  7929  00365A  1417               	andwf	___xxtofl@arg^0,w,c
  7930  00365C  6E11               	movwf	??___xxtofl^0,c
  7931  00365E  0E00               	movlw	0
  7932  003660  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7933  003662  6E12               	movwf	(??___xxtofl+1)^0,c
  7934  003664  0E00               	movlw	0
  7935  003666  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7936  003668  6E13               	movwf	(??___xxtofl+2)^0,c
  7937  00366A  0EFE               	movlw	254
  7938  00366C  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7939  00366E  6E14               	movwf	(??___xxtofl+3)^0,c
  7940  003670  5011               	movf	??___xxtofl^0,w,c
  7941  003672  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7942  003674  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7943  003676  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7944  003678  A4D8               	btfss	status,2,c
  7945  00367A  EF41  F01B         	goto	u9801
  7946  00367E  EF43  F01B         	goto	u9800
  7947  003682                     u9801:
  7948  003682  EF26  F01B         	goto	l9051
  7949  003686                     u9800:
  7950  003686  EF51  F01B         	goto	l1611
  7951  00368A                     l9055:
  7952  00368A  2A16               	incf	___xxtofl@exp^0,f,c
  7953  00368C  0E01               	movlw	1
  7954  00368E  2617               	addwf	___xxtofl@arg^0,f,c
  7955  003690  0E00               	movlw	0
  7956  003692  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7957  003694  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7958  003696  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7959  003698  90D8               	bcf	status,0,c
  7960  00369A  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7961  00369C  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7962  00369E  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7963  0036A0  3217               	rrcf	___xxtofl@arg^0,f,c
  7964  0036A2                     l1611:
  7965  0036A2  0E00               	movlw	0
  7966  0036A4  1417               	andwf	___xxtofl@arg^0,w,c
  7967  0036A6  6E11               	movwf	??___xxtofl^0,c
  7968  0036A8  0E00               	movlw	0
  7969  0036AA  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7970  0036AC  6E12               	movwf	(??___xxtofl+1)^0,c
  7971  0036AE  0E00               	movlw	0
  7972  0036B0  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7973  0036B2  6E13               	movwf	(??___xxtofl+2)^0,c
  7974  0036B4  0EFF               	movlw	255
  7975  0036B6  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7976  0036B8  6E14               	movwf	(??___xxtofl+3)^0,c
  7977  0036BA  5011               	movf	??___xxtofl^0,w,c
  7978  0036BC  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7979  0036BE  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7980  0036C0  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7981  0036C2  A4D8               	btfss	status,2,c
  7982  0036C4  EF66  F01B         	goto	u9811
  7983  0036C8  EF68  F01B         	goto	u9810
  7984  0036CC                     u9811:
  7985  0036CC  EF45  F01B         	goto	l9055
  7986  0036D0                     u9810:
  7987  0036D0  EF70  F01B         	goto	l9063
  7988  0036D4                     l9061:
  7989  0036D4  0616               	decf	___xxtofl@exp^0,f,c
  7990  0036D6  90D8               	bcf	status,0,c
  7991  0036D8  3617               	rlcf	___xxtofl@arg^0,f,c
  7992  0036DA  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  7993  0036DC  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  7994  0036DE  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  7995  0036E0                     l9063:
  7996  0036E0  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  7997  0036E2  EF75  F01B         	goto	u9821
  7998  0036E6  EF77  F01B         	goto	u9820
  7999  0036EA                     u9821:
  8000  0036EA  EF7F  F01B         	goto	l1618
  8001  0036EE                     u9820:
  8002  0036EE  0E02               	movlw	2
  8003  0036F0  6016               	cpfslt	___xxtofl@exp^0,c
  8004  0036F2  EF7D  F01B         	goto	u9831
  8005  0036F6  EF7F  F01B         	goto	u9830
  8006  0036FA                     u9831:
  8007  0036FA  EF6A  F01B         	goto	l9061
  8008  0036FE                     u9830:
  8009  0036FE                     l1618:
  8010  0036FE  B016               	btfsc	___xxtofl@exp^0,0,c
  8011  003700  EF84  F01B         	goto	u9841
  8012  003704  EF86  F01B         	goto	u9840
  8013  003708                     u9841:
  8014  003708  EF87  F01B         	goto	l9069
  8015  00370C                     u9840:
  8016  00370C  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  8017  00370E                     l9069:
  8018  00370E  90D8               	bcf	status,0,c
  8019  003710  3216               	rrcf	___xxtofl@exp^0,f,c
  8020  003712  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  8021  003716  6A12               	clrf	(??___xxtofl+1)^0,c
  8022  003718  6A13               	clrf	(??___xxtofl+2)^0,c
  8023  00371A  6A14               	clrf	(??___xxtofl+3)^0,c
  8024  00371C  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  8025  003720  6A13               	clrf	(??___xxtofl+2)^0,c
  8026  003722  6A12               	clrf	(??___xxtofl+1)^0,c
  8027  003724  6A11               	clrf	??___xxtofl^0,c
  8028  003726  5011               	movf	??___xxtofl^0,w,c
  8029  003728  1217               	iorwf	___xxtofl@arg^0,f,c
  8030  00372A  5012               	movf	(??___xxtofl+1)^0,w,c
  8031  00372C  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  8032  00372E  5013               	movf	(??___xxtofl+2)^0,w,c
  8033  003730  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  8034  003732  5014               	movf	(??___xxtofl+3)^0,w,c
  8035  003734  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  8036  003736  5015               	movf	___xxtofl@sign^0,w,c
  8037  003738  B4D8               	btfsc	status,2,c
  8038  00373A  EFA1  F01B         	goto	u9851
  8039  00373E  EFA3  F01B         	goto	u9850
  8040  003742                     u9851:
  8041  003742  EFAB  F01B         	goto	l9079
  8042  003746                     u9850:
  8043  003746  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  8044  003748  EFAA  F01B         	goto	u9860
  8045  00374C  EFA8  F01B         	goto	u9861
  8046  003750                     u9861:
  8047  003750  EFAB  F01B         	goto	l9079
  8048  003754                     u9860:
  8049  003754  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  8050  003756                     l9079:
  8051  003756  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  8052  00375A  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  8053  00375E  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  8054  003762  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  8055  003766                     l1607:
  8056  003766  0012               	return		;funcret
  8057  003768                     __end_of___xxtofl:
  8058                           	opt callstack 0
  8059                           
  8060 ;; *************** function _sprintf *****************
  8061 ;; Defined at:
  8062 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  s               2  135[BANK0 ] PTR unsigned char 
  8065 ;;		 -> buffer(50), 
  8066 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  8067 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8068 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8069 ;;		 -> STR_3(34), 
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;  f               6  149[BANK0 ] struct _IO_FILE
  8072 ;;  ap              2  147[BANK0 ] PTR void [1]
  8073 ;;		 -> ?_sprintf(2), 
  8074 ;;  ret             2    0        int 
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  2  135[BANK0 ] int 
  8077 ;; Registers used:
  8078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8084 ;;      Params:         0      10       0       0       0       0       0       0       0
  8085 ;;      Locals:         0      10       0       0       0       0       0       0       0
  8086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8087 ;;      Totals:         0      20       0       0       0       0       0       0       0
  8088 ;;Total ram usage:       20 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; Hardware stack levels required when called:    9
  8091 ;; This function calls:
  8092 ;;		_vfprintf
  8093 ;; This function is called by:
  8094 ;;		_visualizarPasosRealizados
  8095 ;;		_decidirDireccion
  8096 ;;		_probarMapeoDireccionCruces
  8097 ;;		_probarSensores
  8098 ;;		_probarUltrasonico
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           	psect	text31
  8103  00529E                     __ptext31:
  8104                           	opt callstack 0
  8105  00529E                     _sprintf:
  8106                           	opt callstack 20
  8107  00529E  0EEB               	movlw	low (?_sprintf+4)
  8108  0052A0  0100               	movlb	0	; () banked
  8109  0052A2  6FF3               	movwf	sprintf@ap& (0+255),b
  8110  0052A4  0E00               	movlw	high (?_sprintf+4)
  8111  0052A6  6FF4               	movwf	(sprintf@ap+1)& (0+255),b
  8112  0052A8  C0E7  F0F5         	movff	sprintf@s,sprintf@f
  8113  0052AC  C0E8  F0F6         	movff	sprintf@s+1,sprintf@f+1
  8114  0052B0                     
  8115                           ; BSR set to: 0
  8116  0052B0  0E00               	movlw	0
  8117  0052B2  6FF8               	movwf	(sprintf@f+3)& (0+255),b
  8118  0052B4  0E00               	movlw	0
  8119  0052B6  6FF7               	movwf	(sprintf@f+2)& (0+255),b
  8120  0052B8                     
  8121                           ; BSR set to: 0
  8122  0052B8  0E00               	movlw	0
  8123  0052BA  6FFA               	movwf	(sprintf@f+5)& (0+255),b
  8124  0052BC  0E00               	movlw	0
  8125  0052BE  6FF9               	movwf	(sprintf@f+4)& (0+255),b
  8126  0052C0                     
  8127                           ; BSR set to: 0
  8128  0052C0  0EF5               	movlw	low sprintf@f
  8129  0052C2  6FDF               	movwf	vfprintf@fp& (0+255),b
  8130  0052C4  0E00               	movlw	high sprintf@f
  8131  0052C6  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  8132  0052C8  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  8133  0052CC  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8134  0052D0  0EF3               	movlw	low sprintf@ap
  8135  0052D2  6FE3               	movwf	vfprintf@ap& (0+255),b
  8136  0052D4  0E00               	movlw	high sprintf@ap
  8137  0052D6  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  8138  0052D8  ECE0  F027         	call	_vfprintf	;wreg free
  8139  0052DC  0100               	movlb	0	; () banked
  8140  0052DE  51F7               	movf	(sprintf@f+2)& (0+255),w,b
  8141  0052E0  25E7               	addwf	sprintf@s& (0+255),w,b
  8142  0052E2  6ED9               	movwf	fsr2l,c
  8143  0052E4  51F8               	movf	(sprintf@f+3)& (0+255),w,b
  8144  0052E6  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  8145  0052E8  6EDA               	movwf	fsr2h,c
  8146  0052EA  0E00               	movlw	0
  8147  0052EC  6EDF               	movwf	indf2,c
  8148  0052EE                     
  8149                           ; BSR set to: 0
  8150  0052EE  0012               	return		;funcret
  8151  0052F0                     __end_of_sprintf:
  8152                           	opt callstack 0
  8153                           
  8154 ;; *************** function _vfprintf *****************
  8155 ;; Defined at:
  8156 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  8159 ;;		 -> sprintf@f(6), 
  8160 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  8161 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8162 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8163 ;;		 -> STR_3(34), 
  8164 ;;  ap              2  131[BANK0 ] PTR PTR void 
  8165 ;;		 -> sprintf@ap(2), 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  8168 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
  8169 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  8170 ;;		 -> STR_3(34), 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  2  127[BANK0 ] int 
  8173 ;; Registers used:
  8174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8180 ;;      Params:         0       6       0       0       0       0       0       0       0
  8181 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8183 ;;      Totals:         0       8       0       0       0       0       0       0       0
  8184 ;;Total ram usage:        8 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    8
  8187 ;; This function calls:
  8188 ;;		_vfpfcnvrt
  8189 ;; This function is called by:
  8190 ;;		_sprintf
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text32
  8195  004FC0                     __ptext32:
  8196                           	opt callstack 0
  8197  004FC0                     _vfprintf:
  8198                           	opt callstack 20
  8199  004FC0                     
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8201  004FC0  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  8202  004FC4  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8203  004FC8                     
  8204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8205  004FC8  0E00               	movlw	0
  8206  004FCA  0101               	movlb	1	; () banked
  8207  004FCC  6F31               	movwf	(_nout+1)& (0+255),b
  8208  004FCE  0E00               	movlw	0
  8209  004FD0  6F30               	movwf	_nout& (0+255),b
  8210                           
  8211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8212  004FD2  EF02  F028         	goto	l9783
  8213  004FD6                     l9781:
  8214                           
  8215                           ; BSR set to: 1
  8216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8217  004FD6  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  8218  004FDA  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8219  004FDE  0EE5               	movlw	low vfprintf@cfmt
  8220  004FE0  0100               	movlb	0	; () banked
  8221  004FE2  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  8222  004FE4  0E00               	movlw	high vfprintf@cfmt
  8223  004FE6  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8224  004FE8  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  8225  004FEC  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8226  004FF0  EC84  F009         	call	_vfpfcnvrt	;wreg free
  8227  004FF4  0100               	movlb	0	; () banked
  8228  004FF6  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  8229  004FF8  0101               	movlb	1	; () banked
  8230  004FFA  2730               	addwf	_nout& (0+255),f,b
  8231  004FFC  0100               	movlb	0	; () banked
  8232  004FFE  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  8233  005000  0101               	movlb	1	; () banked
  8234  005002  2331               	addwfc	(_nout+1)& (0+255),f,b
  8235  005004                     l9783:
  8236                           
  8237                           ; BSR set to: 1
  8238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8239  005004  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  8240  005008  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8241  00500C                     	if	0	;tblptru may be non-zero
  8242  00500C                     	endif
  8243  00500C                     	if	0	;tblptru may be non-zero
  8244  00500C                     	endif
  8245  00500C  0008               	tblrd		*
  8246  00500E  50F5               	movf	tablat,w,c
  8247  005010  0900               	iorlw	0
  8248  005012  A4D8               	btfss	status,2,c
  8249  005014  EF0E  F028         	goto	u11031
  8250  005018  EF10  F028         	goto	u11030
  8251  00501C                     u11031:
  8252  00501C  EFEB  F027         	goto	l9781
  8253  005020                     u11030:
  8254  005020                     
  8255                           ; BSR set to: 1
  8256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8257  005020  C130  F0DF         	movff	_nout,?_vfprintf
  8258  005024  C131  F0E0         	movff	_nout+1,?_vfprintf+1
  8259  005028                     
  8260                           ; BSR set to: 1
  8261  005028  0012               	return		;funcret
  8262  00502A                     __end_of_vfprintf:
  8263                           	opt callstack 0
  8264                           
  8265 ;; *************** function _vfpfcnvrt *****************
  8266 ;; Defined at:
  8267 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  8270 ;;		 -> sprintf@f(6), 
  8271 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  8272 ;;		 -> vfprintf@cfmt(2), 
  8273 ;;  ap              2  101[BANK0 ] PTR PTR void 
  8274 ;;		 -> sprintf@ap(2), 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  ll              8  107[BANK0 ] long long 
  8277 ;;  llu             8    0        unsigned long long 
  8278 ;;  f               4  119[BANK0 ] unsigned long long 
  8279 ;;  ct              3  123[BANK0 ] unsigned char [3]
  8280 ;;  vp              3    0        PTR void 
  8281 ;;  cp              3    0        PTR unsigned char 
  8282 ;;  i               2    0        int 
  8283 ;;  done            2    0        int 
  8284 ;;  c               1  126[BANK0 ] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  2   97[BANK0 ] int 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8294 ;;      Params:         0       6       0       0       0       0       0       0       0
  8295 ;;      Locals:         0      20       0       0       0       0       0       0       0
  8296 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8297 ;;      Totals:         0      30       0       0       0       0       0       0       0
  8298 ;;Total ram usage:       30 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    7
  8301 ;; This function calls:
  8302 ;;		_atoi
  8303 ;;		_ctoa
  8304 ;;		_dtoa
  8305 ;;		_efgtoa
  8306 ;;		_fputc
  8307 ;;		_isdigit
  8308 ;;		_isupper
  8309 ;;		_strncmp
  8310 ;;		_tolower
  8311 ;; This function is called by:
  8312 ;;		_vfprintf
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text33
  8317  001308                     __ptext33:
  8318                           	opt callstack 0
  8319  001308                     _vfpfcnvrt:
  8320                           	opt callstack 20
  8321  001308                     
  8322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8323  001308  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8324  00130C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8325  001310  CFDE FFF6          	movff	postinc2,tblptrl
  8326  001314  CFDD FFF7          	movff	postdec2,tblptrh
  8327  001318                     	if	0	;tblptru may be non-zero
  8328  001318                     	endif
  8329  001318                     	if	0	;tblptru may be non-zero
  8330  001318                     	endif
  8331  001318  0008               	tblrd		*
  8332  00131A  50F5               	movf	tablat,w,c
  8333  00131C  0A25               	xorlw	37
  8334  00131E  A4D8               	btfss	status,2,c
  8335  001320  EF94  F009         	goto	u10731
  8336  001324  EF96  F009         	goto	u10730
  8337  001328                     u10731:
  8338  001328  EF3C  F00C         	goto	l9669
  8339  00132C                     u10730:
  8340  00132C                     
  8341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8342  00132C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8343  001330  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8344  001334  2ADE               	incf	postinc2,f,c
  8345  001336  0E00               	movlw	0
  8346  001338  22DD               	addwfc	postdec2,f,c
  8347  00133A                     
  8348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8349  00133A  0E00               	movlw	0
  8350  00133C  0101               	movlb	1	; () banked
  8351  00133E  6F33               	movwf	(_width+1)& (0+255),b
  8352  001340  0E00               	movlw	0
  8353  001342  6F32               	movwf	_width& (0+255),b
  8354  001344  C132  F055         	movff	_width,_flags
  8355  001348  C133  F056         	movff	_width+1,_flags+1
  8356  00134C                     
  8357                           ; BSR set to: 1
  8358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8359  00134C  6934               	setf	_prec& (0+255),b
  8360  00134E  6935               	setf	(_prec+1)& (0+255),b
  8361  001350                     
  8362                           ; BSR set to: 1
  8363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8364  001350  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8365  001354  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8366  001358  CFDE FFF6          	movff	postinc2,tblptrl
  8367  00135C  CFDD FFF7          	movff	postdec2,tblptrh
  8368  001360                     	if	0	;tblptru may be non-zero
  8369  001360                     	endif
  8370  001360                     	if	0	;tblptru may be non-zero
  8371  001360                     	endif
  8372  001360  0008               	tblrd		*
  8373  001362  50F5               	movf	tablat,w,c
  8374  001364  0A2E               	xorlw	46
  8375  001366  A4D8               	btfss	status,2,c
  8376  001368  EFB8  F009         	goto	u10741
  8377  00136C  EFBA  F009         	goto	u10740
  8378  001370                     u10741:
  8379  001370  EF38  F00A         	goto	l9597
  8380  001374                     u10740:
  8381  001374                     
  8382                           ; BSR set to: 1
  8383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8384  001374  0E00               	movlw	0
  8385  001376  6F35               	movwf	(_prec+1)& (0+255),b
  8386  001378  0E00               	movlw	0
  8387  00137A  6F34               	movwf	_prec& (0+255),b
  8388  00137C                     
  8389                           ; BSR set to: 1
  8390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8391  00137C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8392  001380  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8393  001384  2ADE               	incf	postinc2,f,c
  8394  001386  0E00               	movlw	0
  8395  001388  22DD               	addwfc	postdec2,f,c
  8396  00138A                     
  8397                           ; BSR set to: 1
  8398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8399  00138A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8400  00138E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8401  001392  CFDE FFF6          	movff	postinc2,tblptrl
  8402  001396  CFDD FFF7          	movff	postdec2,tblptrh
  8403  00139A                     	if	0	;tblptru may be non-zero
  8404  00139A                     	endif
  8405  00139A                     	if	0	;tblptru may be non-zero
  8406  00139A                     	endif
  8407  00139A  0008               	tblrd		*
  8408  00139C  50F5               	movf	tablat,w,c
  8409  00139E  0A2A               	xorlw	42
  8410  0013A0  A4D8               	btfss	status,2,c
  8411  0013A2  EFD5  F009         	goto	u10751
  8412  0013A6  EFD7  F009         	goto	u10750
  8413  0013AA                     u10751:
  8414  0013AA  EFF4  F009         	goto	l9587
  8415  0013AE                     u10750:
  8416  0013AE                     
  8417                           ; BSR set to: 1
  8418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8419  0013AE  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8420  0013B2  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8421  0013B6  2ADE               	incf	postinc2,f,c
  8422  0013B8  0E00               	movlw	0
  8423  0013BA  22DD               	addwfc	postdec2,f,c
  8424                           
  8425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8426  0013BC  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8427  0013C0  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8428  0013C4  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8429  0013C8  0E02               	movlw	2
  8430  0013CA  26DE               	addwf	postinc2,f,c
  8431  0013CC  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8432  0013D0  0E00               	movlw	0
  8433  0013D2  22DD               	addwfc	postdec2,f,c
  8434  0013D4  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8435  0013D8  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8436  0013DC  CFDE F134          	movff	postinc2,_prec
  8437  0013E0  CFDD F135          	movff	postdec2,_prec+1
  8438                           
  8439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8440  0013E4  EF38  F00A         	goto	l9597
  8441  0013E8                     l9587:
  8442                           
  8443                           ; BSR set to: 1
  8444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8445  0013E8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8446  0013EC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8447  0013F0  CFDE F00D          	movff	postinc2,atoi@s
  8448  0013F4  CFDD F00E          	movff	postdec2,atoi@s+1
  8449  0013F8  ECB4  F01B         	call	_atoi	;wreg free
  8450  0013FC  C00D  F134         	movff	?_atoi,_prec
  8451  001400  C00E  F135         	movff	?_atoi+1,_prec+1
  8452                           
  8453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8454  001404  EF0B  F00A         	goto	l9591
  8455  001408                     l9589:
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8459  001408  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8460  00140C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8461  001410  2ADE               	incf	postinc2,f,c
  8462  001412  0E00               	movlw	0
  8463  001414  22DD               	addwfc	postdec2,f,c
  8464  001416                     l9591:
  8465  001416  0ED0               	movlw	208
  8466  001418  0100               	movlb	0	; () banked
  8467  00141A  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8468  00141C  0EFF               	movlw	255
  8469  00141E  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8470  001420  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8471  001424  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8472  001428  CFDE FFF6          	movff	postinc2,tblptrl
  8473  00142C  CFDD FFF7          	movff	postdec2,tblptrh
  8474  001430                     	if	0	;tblptru may be non-zero
  8475  001430                     	endif
  8476  001430                     	if	0	;tblptru may be non-zero
  8477  001430                     	endif
  8478  001430  0008               	tblrd		*
  8479  001432  50F5               	movf	tablat,w,c
  8480  001434  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8481  001436  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8482  001438  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8483  00143A  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8484  00143C  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8485  00143E  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8486  001440  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8487  001442  E10A               	bnz	u10760
  8488  001444  0E0A               	movlw	10
  8489  001446  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8490  001448  A0D8               	btfss	status,0,c
  8491  00144A  EF29  F00A         	goto	u10761
  8492  00144E  EF2C  F00A         	goto	u10760
  8493  001452                     u10761:
  8494  001452  0E01               	movlw	1
  8495  001454  EF2D  F00A         	goto	u10770
  8496  001458                     u10760:
  8497  001458  0E00               	movlw	0
  8498  00145A                     u10770:
  8499  00145A  6FD3               	movwf	_vfpfcnvrt$948& (0+255),b
  8500  00145C  6BD4               	clrf	(_vfpfcnvrt$948+1)& (0+255),b
  8501  00145E                     
  8502                           ; BSR set to: 0
  8503  00145E  51D3               	movf	_vfpfcnvrt$948& (0+255),w,b
  8504  001460  11D4               	iorwf	(_vfpfcnvrt$948+1)& (0+255),w,b
  8505  001462  A4D8               	btfss	status,2,c
  8506  001464  EF36  F00A         	goto	u10781
  8507  001468  EF38  F00A         	goto	u10780
  8508  00146C                     u10781:
  8509  00146C  EF04  F00A         	goto	l9589
  8510  001470                     u10780:
  8511  001470                     l9597:
  8512                           
  8513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  8514  001470  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8515  001474  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8516  001478  CFDE FFF6          	movff	postinc2,tblptrl
  8517  00147C  CFDD FFF7          	movff	postdec2,tblptrh
  8518  001480                     	if	0	;tblptru may be non-zero
  8519  001480                     	endif
  8520  001480                     	if	0	;tblptru may be non-zero
  8521  001480                     	endif
  8522  001480  0008               	tblrd		*
  8523  001482  50F5               	movf	tablat,w,c
  8524  001484  6E0C               	movwf	tolower@c^0,c
  8525  001486  6A0D               	clrf	(tolower@c+1)^0,c
  8526  001488  EC15  F028         	call	_tolower	;wreg free
  8527  00148C  500C               	movf	?_tolower^0,w,c
  8528  00148E  0100               	movlb	0	; () banked
  8529  001490  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  8530  001492                     
  8531                           ; BSR set to: 0
  8532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  8533  001492  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  8534  001494  B4D8               	btfsc	status,2,c
  8535  001496  EF4F  F00A         	goto	u10791
  8536  00149A  EF51  F00A         	goto	u10790
  8537  00149E                     u10791:
  8538  00149E  EF8B  F00A         	goto	l9607
  8539  0014A2                     u10790:
  8540  0014A2                     
  8541                           ; BSR set to: 0
  8542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  8543  0014A2  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8544  0014A6  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8545  0014AA  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8546  0014AE  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8547  0014B2  0E01               	movlw	1
  8548  0014B4  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8549  0014B6  0E00               	movlw	0
  8550  0014B8  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8551  0014BA  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8552  0014BE  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8553  0014C2                     	if	0	;tblptru may be non-zero
  8554  0014C2                     	endif
  8555  0014C2                     	if	0	;tblptru may be non-zero
  8556  0014C2                     	endif
  8557  0014C2  0008               	tblrd		*
  8558  0014C4  50F5               	movf	tablat,w,c
  8559  0014C6  6E0C               	movwf	tolower@c^0,c
  8560  0014C8  6A0D               	clrf	(tolower@c+1)^0,c
  8561  0014CA  EC15  F028         	call	_tolower	;wreg free
  8562  0014CE  500C               	movf	?_tolower^0,w,c
  8563  0014D0  0100               	movlb	0	; () banked
  8564  0014D2  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  8565  0014D4                     
  8566                           ; BSR set to: 0
  8567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  8568  0014D4  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  8569  0014D6  B4D8               	btfsc	status,2,c
  8570  0014D8  EF70  F00A         	goto	u10801
  8571  0014DC  EF72  F00A         	goto	u10800
  8572  0014E0                     u10801:
  8573  0014E0  EF8B  F00A         	goto	l9607
  8574  0014E4                     u10800:
  8575  0014E4                     
  8576                           ; BSR set to: 0
  8577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  8578  0014E4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8579  0014E8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8580  0014EC  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8581  0014F0  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8582  0014F4  0E02               	movlw	2
  8583  0014F6  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8584  0014F8  0E00               	movlw	0
  8585  0014FA  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8586  0014FC  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8587  001500  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8588  001504                     	if	0	;tblptru may be non-zero
  8589  001504                     	endif
  8590  001504                     	if	0	;tblptru may be non-zero
  8591  001504                     	endif
  8592  001504  0008               	tblrd		*
  8593  001506  50F5               	movf	tablat,w,c
  8594  001508  6E0C               	movwf	tolower@c^0,c
  8595  00150A  6A0D               	clrf	(tolower@c+1)^0,c
  8596  00150C  EC15  F028         	call	_tolower	;wreg free
  8597  001510  500C               	movf	?_tolower^0,w,c
  8598  001512  0100               	movlb	0	; () banked
  8599  001514  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  8600  001516                     l9607:
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8604  001516  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8605  00151A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8606  00151E  CFDE FFF6          	movff	postinc2,tblptrl
  8607  001522  CFDD FFF7          	movff	postdec2,tblptrh
  8608  001526                     	if	0	;tblptru may be non-zero
  8609  001526                     	endif
  8610  001526                     	if	0	;tblptru may be non-zero
  8611  001526                     	endif
  8612  001526  0008               	tblrd		*
  8613  001528  50F5               	movf	tablat,w,c
  8614  00152A  0A63               	xorlw	99
  8615  00152C  A4D8               	btfss	status,2,c
  8616  00152E  EF9B  F00A         	goto	u10811
  8617  001532  EF9D  F00A         	goto	u10810
  8618  001536                     u10811:
  8619  001536  EFC4  F00A         	goto	l9615
  8620  00153A                     u10810:
  8621  00153A                     
  8622                           ; BSR set to: 0
  8623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8624  00153A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8625  00153E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8626  001542  2ADE               	incf	postinc2,f,c
  8627  001544  0E00               	movlw	0
  8628  001546  22DD               	addwfc	postdec2,f,c
  8629                           
  8630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8631  001548  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8632  00154C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8633  001550  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8634  001554  0E02               	movlw	2
  8635  001556  26DE               	addwf	postinc2,f,c
  8636  001558  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8637  00155C  0E00               	movlw	0
  8638  00155E  22DD               	addwfc	postdec2,f,c
  8639  001560  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8640  001564  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8641  001568  50DF               	movf	indf2,w,c
  8642  00156A  6FDE               	movwf	vfpfcnvrt@c& (0+255),b
  8643  00156C                     
  8644                           ; BSR set to: 0
  8645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8646  00156C  C0C1  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  8647  001570  C0C2  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8648  001574  C0DE  F023         	movff	vfpfcnvrt@c,ctoa@c
  8649  001578  ECA2  F028         	call	_ctoa	;wreg free
  8650  00157C  C021  F0C1         	movff	?_ctoa,?_vfpfcnvrt
  8651  001580  C022  F0C2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8652  001584  EF57  F00C         	goto	l928
  8653  001588                     l9615:
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8657  001588  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8658  00158C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8659  001590  CFDE FFF6          	movff	postinc2,tblptrl
  8660  001594  CFDD FFF7          	movff	postdec2,tblptrh
  8661  001598                     	if	0	;tblptru may be non-zero
  8662  001598                     	endif
  8663  001598                     	if	0	;tblptru may be non-zero
  8664  001598                     	endif
  8665  001598  0008               	tblrd		*
  8666  00159A  50F5               	movf	tablat,w,c
  8667  00159C  0A64               	xorlw	100
  8668  00159E  B4D8               	btfsc	status,2,c
  8669  0015A0  EFD4  F00A         	goto	u10821
  8670  0015A4  EFD6  F00A         	goto	u10820
  8671  0015A8                     u10821:
  8672  0015A8  EFE8  F00A         	goto	l9619
  8673  0015AC                     u10820:
  8674  0015AC                     
  8675                           ; BSR set to: 0
  8676  0015AC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8677  0015B0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8678  0015B4  CFDE FFF6          	movff	postinc2,tblptrl
  8679  0015B8  CFDD FFF7          	movff	postdec2,tblptrh
  8680  0015BC                     	if	0	;tblptru may be non-zero
  8681  0015BC                     	endif
  8682  0015BC                     	if	0	;tblptru may be non-zero
  8683  0015BC                     	endif
  8684  0015BC  0008               	tblrd		*
  8685  0015BE  50F5               	movf	tablat,w,c
  8686  0015C0  0A69               	xorlw	105
  8687  0015C2  A4D8               	btfss	status,2,c
  8688  0015C4  EFE6  F00A         	goto	u10831
  8689  0015C8  EFE8  F00A         	goto	u10830
  8690  0015CC                     u10831:
  8691  0015CC  EF28  F00B         	goto	l9625
  8692  0015D0                     u10830:
  8693  0015D0                     l9619:
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8697  0015D0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8698  0015D4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8699  0015D8  2ADE               	incf	postinc2,f,c
  8700  0015DA  0E00               	movlw	0
  8701  0015DC  22DD               	addwfc	postdec2,f,c
  8702                           
  8703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8704  0015DE  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8705  0015E2  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8706  0015E6  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8707  0015EA  0E02               	movlw	2
  8708  0015EC  26DE               	addwf	postinc2,f,c
  8709  0015EE  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8710  0015F2  0E00               	movlw	0
  8711  0015F4  22DD               	addwfc	postdec2,f,c
  8712  0015F6  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8713  0015FA  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8714  0015FE  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  8715  001602  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  8716  001606  0E00               	movlw	0
  8717  001608  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8718  00160A  0EFF               	movlw	-1
  8719  00160C  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8720  00160E  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8721  001610  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8722  001612  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8723  001614  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8724  001616  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8725  001618                     
  8726                           ; BSR set to: 0
  8727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8728  001618  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  8729  00161C  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8730  001620  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  8731  001624  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8732  001628  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8733  00162C  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8734  001630  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8735  001634  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8736  001638  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8737  00163C  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8738  001640  EC59  F016         	call	_dtoa	;wreg free
  8739  001644  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  8740  001648  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8741  00164C  EF57  F00C         	goto	l928
  8742  001650                     l9625:
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  8746  001650  0E66               	movlw	102
  8747  001652  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  8748  001654  A4D8               	btfss	status,2,c
  8749  001656  EF2F  F00B         	goto	u10841
  8750  00165A  EF31  F00B         	goto	u10840
  8751  00165E                     u10841:
  8752  00165E  EF71  F00B         	goto	l9637
  8753  001662                     u10840:
  8754  001662                     
  8755                           ; BSR set to: 0
  8756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  8757  001662  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8758  001666  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8759  00166A  CFDE FFF6          	movff	postinc2,tblptrl
  8760  00166E  CFDD FFF7          	movff	postdec2,tblptrh
  8761  001672                     	if	0	;tblptru may be non-zero
  8762  001672                     	endif
  8763  001672                     	if	0	;tblptru may be non-zero
  8764  001672                     	endif
  8765  001672  0008               	tblrd		*
  8766  001674  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8767  001678                     
  8768                           ; BSR set to: 0
  8769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  8770  001678  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8771  00167C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8772  001680  2ADE               	incf	postinc2,f,c
  8773  001682  0E00               	movlw	0
  8774  001684  22DD               	addwfc	postdec2,f,c
  8775  001686                     
  8776                           ; BSR set to: 0
  8777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8778  001686  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8779  00168A  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8780  00168E  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8781  001692  0E04               	movlw	4
  8782  001694  26DE               	addwf	postinc2,f,c
  8783  001696  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8784  00169A  0E00               	movlw	0
  8785  00169C  22DD               	addwfc	postdec2,f,c
  8786  00169E  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8787  0016A2  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8788  0016A6  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8789  0016AA  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8790  0016AE  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8791  0016B2  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8792  0016B6                     l9633:
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  8796  0016B6  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  8797  0016BA  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8798  0016BE  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  8799  0016C2  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  8800  0016C6  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  8801  0016CA  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  8802  0016CE  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  8803  0016D2  EC09  F000         	call	_efgtoa	;wreg free
  8804  0016D6  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  8805  0016DA  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  8806  0016DE  EF57  F00C         	goto	l928
  8807  0016E2                     l9637:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8811  0016E2  0EDB               	movlw	low vfpfcnvrt@ct
  8812  0016E4  6E06               	movwf	strncmp@_l^0,c
  8813  0016E6  0E00               	movlw	high vfpfcnvrt@ct
  8814  0016E8  6E07               	movwf	(strncmp@_l+1)^0,c
  8815  0016EA  0EFB               	movlw	low STR_31
  8816  0016EC  6E08               	movwf	strncmp@_r^0,c
  8817  0016EE  0E7F               	movlw	high STR_31
  8818  0016F0  6E09               	movwf	(strncmp@_r+1)^0,c
  8819  0016F2  0E00               	movlw	0
  8820  0016F4  6E0B               	movwf	(strncmp@n+1)^0,c
  8821  0016F6  0E02               	movlw	2
  8822  0016F8  6E0A               	movwf	strncmp@n^0,c
  8823  0016FA  EC35  F023         	call	_strncmp	;wreg free
  8824  0016FE  5006               	movf	?_strncmp^0,w,c
  8825  001700  1007               	iorwf	(?_strncmp+1)^0,w,c
  8826  001702  A4D8               	btfss	status,2,c
  8827  001704  EF86  F00B         	goto	u10851
  8828  001708  EF88  F00B         	goto	u10850
  8829  00170C                     u10851:
  8830  00170C  EF04  F00C         	goto	l9653
  8831  001710                     u10850:
  8832  001710                     
  8833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8834  001710  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8835  001714  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8836  001718  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8837  00171C  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8838  001720  0E01               	movlw	1
  8839  001722  0100               	movlb	0	; () banked
  8840  001724  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8841  001726  0E00               	movlw	0
  8842  001728  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8843  00172A  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8844  00172E  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8845  001732                     	if	0	;tblptru may be non-zero
  8846  001732                     	endif
  8847  001732                     	if	0	;tblptru may be non-zero
  8848  001732                     	endif
  8849  001732  0008               	tblrd		*
  8850  001734  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8851  001738  0EBF               	movlw	191
  8852  00173A  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8853  00173C  0EFF               	movlw	255
  8854  00173E  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8855  001740  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8856  001744  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8857  001748  CFDE FFF6          	movff	postinc2,tblptrl
  8858  00174C  CFDD FFF7          	movff	postdec2,tblptrh
  8859  001750                     	if	0	;tblptru may be non-zero
  8860  001750                     	endif
  8861  001750                     	if	0	;tblptru may be non-zero
  8862  001750                     	endif
  8863  001750  0008               	tblrd		*
  8864  001752  50F5               	movf	tablat,w,c
  8865  001754  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8866  001756  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8867  001758  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8868  00175A  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8869  00175C  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8870  00175E  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8871  001760  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8872  001762  E10A               	bnz	u10860
  8873  001764  0E1A               	movlw	26
  8874  001766  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8875  001768  A0D8               	btfss	status,0,c
  8876  00176A  EFB9  F00B         	goto	u10861
  8877  00176E  EFBC  F00B         	goto	u10860
  8878  001772                     u10861:
  8879  001772  0E01               	movlw	1
  8880  001774  EFBD  F00B         	goto	u10870
  8881  001778                     u10860:
  8882  001778  0E00               	movlw	0
  8883  00177A                     u10870:
  8884  00177A  6FD5               	movwf	_vfpfcnvrt$954& (0+255),b
  8885  00177C  6BD6               	clrf	(_vfpfcnvrt$954+1)& (0+255),b
  8886  00177E                     
  8887                           ; BSR set to: 0
  8888  00177E  51D5               	movf	_vfpfcnvrt$954& (0+255),w,b
  8889  001780  11D6               	iorwf	(_vfpfcnvrt$954+1)& (0+255),w,b
  8890  001782  B4D8               	btfsc	status,2,c
  8891  001784  EFC6  F00B         	goto	u10881
  8892  001788  EFC8  F00B         	goto	u10880
  8893  00178C                     u10881:
  8894  00178C  EFE2  F00B         	goto	l9647
  8895  001790                     u10880:
  8896  001790                     
  8897                           ; BSR set to: 0
  8898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8899  001790  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8900  001794  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8901  001798  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8902  00179C  0E04               	movlw	4
  8903  00179E  26DE               	addwf	postinc2,f,c
  8904  0017A0  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8905  0017A4  0E00               	movlw	0
  8906  0017A6  22DD               	addwfc	postdec2,f,c
  8907  0017A8  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8908  0017AC  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8909  0017B0  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8910  0017B4  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8911  0017B8  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8912  0017BC  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8913                           
  8914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  8915  0017C0  EFFA  F00B         	goto	l939
  8916  0017C4                     l9647:
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8920  0017C4  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8921  0017C8  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8922  0017CC  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8923  0017D0  0E04               	movlw	4
  8924  0017D2  26DE               	addwf	postinc2,f,c
  8925  0017D4  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8926  0017D8  0E00               	movlw	0
  8927  0017DA  22DD               	addwfc	postdec2,f,c
  8928  0017DC  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8929  0017E0  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8930  0017E4  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8931  0017E8  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8932  0017EC  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8933  0017F0  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8934  0017F4                     l939:
  8935                           
  8936                           ; BSR set to: 0
  8937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  8938  0017F4  0E02               	movlw	2
  8939  0017F6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8940  0017FA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8941  0017FE  26DE               	addwf	postinc2,f,c
  8942  001800  0E00               	movlw	0
  8943  001802  22DD               	addwfc	postdec2,f,c
  8944  001804  EF5B  F00B         	goto	l9633
  8945  001808                     l9653:
  8946                           
  8947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8948  001808  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8949  00180C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8950  001810  CFDE FFF6          	movff	postinc2,tblptrl
  8951  001814  CFDD FFF7          	movff	postdec2,tblptrh
  8952  001818                     	if	0	;tblptru may be non-zero
  8953  001818                     	endif
  8954  001818                     	if	0	;tblptru may be non-zero
  8955  001818                     	endif
  8956  001818  0008               	tblrd		*
  8957  00181A  50F5               	movf	tablat,w,c
  8958  00181C  0A25               	xorlw	37
  8959  00181E  A4D8               	btfss	status,2,c
  8960  001820  EF14  F00C         	goto	u10891
  8961  001824  EF16  F00C         	goto	u10890
  8962  001828                     u10891:
  8963  001828  EF2E  F00C         	goto	l9663
  8964  00182C                     u10890:
  8965  00182C                     
  8966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8967  00182C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8968  001830  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8969  001834  2ADE               	incf	postinc2,f,c
  8970  001836  0E00               	movlw	0
  8971  001838  22DD               	addwfc	postdec2,f,c
  8972  00183A                     
  8973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8974  00183A  0E00               	movlw	0
  8975  00183C  6E07               	movwf	(fputc@c+1)^0,c
  8976  00183E  0E25               	movlw	37
  8977  001840  6E06               	movwf	fputc@c^0,c
  8978  001842  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  8979  001846  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8980  00184A  ECA0  F023         	call	_fputc	;wreg free
  8981  00184E                     l9659:
  8982                           
  8983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8984  00184E  0E00               	movlw	0
  8985  001850  0100               	movlb	0	; () banked
  8986  001852  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8987  001854  0E01               	movlw	1
  8988  001856  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  8989  001858  EF57  F00C         	goto	l928
  8990  00185C                     l9663:
  8991                           
  8992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8993  00185C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8994  001860  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8995  001864  2ADE               	incf	postinc2,f,c
  8996  001866  0E00               	movlw	0
  8997  001868  22DD               	addwfc	postdec2,f,c
  8998  00186A                     
  8999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9000  00186A  0E00               	movlw	0
  9001  00186C  0100               	movlb	0	; () banked
  9002  00186E  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9003  001870  0E00               	movlw	0
  9004  001872  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  9005  001874  EF57  F00C         	goto	l928
  9006  001878                     l9669:
  9007                           
  9008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9009  001878  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9010  00187C  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9011  001880  CFDE FFF6          	movff	postinc2,tblptrl
  9012  001884  CFDD FFF7          	movff	postdec2,tblptrh
  9013  001888                     	if	0	;tblptru may be non-zero
  9014  001888                     	endif
  9015  001888                     	if	0	;tblptru may be non-zero
  9016  001888                     	endif
  9017  001888  0008               	tblrd		*
  9018  00188A  50F5               	movf	tablat,w,c
  9019  00188C  6E06               	movwf	fputc@c^0,c
  9020  00188E  6A07               	clrf	(fputc@c+1)^0,c
  9021  001890  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  9022  001894  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9023  001898  ECA0  F023         	call	_fputc	;wreg free
  9024  00189C                     
  9025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9026  00189C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9027  0018A0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9028  0018A4  2ADE               	incf	postinc2,f,c
  9029  0018A6  0E00               	movlw	0
  9030  0018A8  22DD               	addwfc	postdec2,f,c
  9031  0018AA  EF27  F00C         	goto	l9659
  9032  0018AE                     l928:
  9033  0018AE  0012               	return		;funcret
  9034  0018B0                     __end_of_vfpfcnvrt:
  9035                           	opt callstack 0
  9036                           
  9037 ;; *************** function _strncmp *****************
  9038 ;; Defined at:
  9039 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  9042 ;;		 -> vfpfcnvrt@ct(3), 
  9043 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  9044 ;;		 -> STR_33(3), 
  9045 ;;  n               2    9[COMRAM] unsigned int 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  r               2   14[COMRAM] PTR const unsigned char 
  9048 ;;		 -> STR_33(3), 
  9049 ;;  l               2   12[COMRAM] PTR const unsigned char 
  9050 ;;		 -> vfpfcnvrt@ct(3), 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  2    5[COMRAM] int 
  9053 ;; Registers used:
  9054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9060 ;;      Params:         6       0       0       0       0       0       0       0       0
  9061 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9062 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9063 ;;      Totals:        11       0       0       0       0       0       0       0       0
  9064 ;;Total ram usage:       11 bytes
  9065 ;; Hardware stack levels used:    1
  9066 ;; Hardware stack levels required when called:    2
  9067 ;; This function calls:
  9068 ;;		Nothing
  9069 ;; This function is called by:
  9070 ;;		_vfpfcnvrt
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text34
  9075  00466A                     __ptext34:
  9076                           	opt callstack 0
  9077  00466A                     _strncmp:
  9078                           	opt callstack 24
  9079  00466A  C006  F00D         	movff	strncmp@_l,strncmp@l
  9080  00466E  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  9081  004672  C008  F00F         	movff	strncmp@_r,strncmp@r
  9082  004676  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  9083  00467A  060A               	decf	strncmp@n^0,f,c
  9084  00467C  A0D8               	btfss	status,0,c
  9085  00467E  060B               	decf	(strncmp@n+1)^0,f,c
  9086  004680  280A               	incf	strncmp@n^0,w,c
  9087  004682  E106               	bnz	u10671
  9088  004684  280B               	incf	(strncmp@n+1)^0,w,c
  9089  004686  A4D8               	btfss	status,2,c
  9090  004688  EF48  F023         	goto	u10671
  9091  00468C  EF4A  F023         	goto	u10670
  9092  004690                     u10671:
  9093  004690  EF57  F023         	goto	l9537
  9094  004694                     u10670:
  9095  004694  0E00               	movlw	0
  9096  004696  6E07               	movwf	(?_strncmp+1)^0,c
  9097  004698  0E00               	movlw	0
  9098  00469A  6E06               	movwf	?_strncmp^0,c
  9099  00469C  EF9F  F023         	goto	l1763
  9100  0046A0                     l9535:
  9101  0046A0  4A0D               	infsnz	strncmp@l^0,f,c
  9102  0046A2  2A0E               	incf	(strncmp@l+1)^0,f,c
  9103  0046A4  4A0F               	infsnz	strncmp@r^0,f,c
  9104  0046A6  2A10               	incf	(strncmp@r+1)^0,f,c
  9105  0046A8  060A               	decf	strncmp@n^0,f,c
  9106  0046AA  A0D8               	btfss	status,0,c
  9107  0046AC  060B               	decf	(strncmp@n+1)^0,f,c
  9108  0046AE                     l9537:
  9109  0046AE  C00D  FFD9         	movff	strncmp@l,fsr2l
  9110  0046B2  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9111  0046B6  50DF               	movf	indf2,w,c
  9112  0046B8  B4D8               	btfsc	status,2,c
  9113  0046BA  EF61  F023         	goto	u10681
  9114  0046BE  EF63  F023         	goto	u10680
  9115  0046C2                     u10681:
  9116  0046C2  EF8E  F023         	goto	l9545
  9117  0046C6                     u10680:
  9118  0046C6  C00F  FFF6         	movff	strncmp@r,tblptrl
  9119  0046CA  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9120  0046CE                     	if	0	;tblptru may be non-zero
  9121  0046CE                     	endif
  9122  0046CE                     	if	0	;tblptru may be non-zero
  9123  0046CE                     	endif
  9124  0046CE  0008               	tblrd		*
  9125  0046D0  50F5               	movf	tablat,w,c
  9126  0046D2  0900               	iorlw	0
  9127  0046D4  B4D8               	btfsc	status,2,c
  9128  0046D6  EF6F  F023         	goto	u10691
  9129  0046DA  EF71  F023         	goto	u10690
  9130  0046DE                     u10691:
  9131  0046DE  EF8E  F023         	goto	l9545
  9132  0046E2                     u10690:
  9133  0046E2  500A               	movf	strncmp@n^0,w,c
  9134  0046E4  100B               	iorwf	(strncmp@n+1)^0,w,c
  9135  0046E6  B4D8               	btfsc	status,2,c
  9136  0046E8  EF78  F023         	goto	u10701
  9137  0046EC  EF7A  F023         	goto	u10700
  9138  0046F0                     u10701:
  9139  0046F0  EF8E  F023         	goto	l9545
  9140  0046F4                     u10700:
  9141  0046F4  C00D  FFD9         	movff	strncmp@l,fsr2l
  9142  0046F8  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9143  0046FC  50DF               	movf	indf2,w,c
  9144  0046FE  6E0C               	movwf	??_strncmp^0,c
  9145  004700  C00F  FFF6         	movff	strncmp@r,tblptrl
  9146  004704  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9147  004708                     	if	0	;tblptru may be non-zero
  9148  004708                     	endif
  9149  004708                     	if	0	;tblptru may be non-zero
  9150  004708                     	endif
  9151  004708  0008               	tblrd		*
  9152  00470A  50F5               	movf	tablat,w,c
  9153  00470C  180C               	xorwf	??_strncmp^0,w,c
  9154  00470E  B4D8               	btfsc	status,2,c
  9155  004710  EF8C  F023         	goto	u10711
  9156  004714  EF8E  F023         	goto	u10710
  9157  004718                     u10711:
  9158  004718  EF50  F023         	goto	l9535
  9159  00471C                     u10710:
  9160  00471C                     l9545:
  9161  00471C  C00D  FFD9         	movff	strncmp@l,fsr2l
  9162  004720  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  9163  004724  50DF               	movf	indf2,w,c
  9164  004726  6E0C               	movwf	??_strncmp^0,c
  9165  004728  C00F  FFF6         	movff	strncmp@r,tblptrl
  9166  00472C  C010  FFF7         	movff	strncmp@r+1,tblptrh
  9167  004730                     	if	0	;tblptru may be non-zero
  9168  004730                     	endif
  9169  004730                     	if	0	;tblptru may be non-zero
  9170  004730                     	endif
  9171  004730  0008               	tblrd		*
  9172  004732  50F5               	movf	tablat,w,c
  9173  004734  5C0C               	subwf	??_strncmp^0,w,c
  9174  004736  6E06               	movwf	?_strncmp^0,c
  9175  004738  6A07               	clrf	(?_strncmp+1)^0,c
  9176  00473A  A0D8               	btfss	status,0,c
  9177  00473C  0607               	decf	(?_strncmp+1)^0,f,c
  9178  00473E                     l1763:
  9179  00473E  0012               	return		;funcret
  9180  004740                     __end_of_strncmp:
  9181                           	opt callstack 0
  9182                           
  9183 ;; *************** function _efgtoa *****************
  9184 ;; Defined at:
  9185 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  9188 ;;		 -> sprintf@f(6), 
  9189 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  9190 ;;  c               1   35[BANK0 ] unsigned char 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  u               4   93[BANK0 ] unsigned char 
  9193 ;;  g               4   85[BANK0 ] unsigned char 
  9194 ;;  l               4   79[BANK0 ] unsigned char 
  9195 ;;  h               4   75[BANK0 ] unsigned char 
  9196 ;;  ou              4   41[BANK0 ] unsigned char 
  9197 ;;  n               2   91[BANK0 ] int 
  9198 ;;  e               2   89[BANK0 ] int 
  9199 ;;  i               2   83[BANK0 ] int 
  9200 ;;  w               2   72[BANK0 ] int 
  9201 ;;  p               2   69[BANK0 ] int 
  9202 ;;  sign            2   67[BANK0 ] int 
  9203 ;;  d               2   65[BANK0 ] int 
  9204 ;;  ne              2   63[BANK0 ] int 
  9205 ;;  m               2   61[BANK0 ] int 
  9206 ;;  pp              2   59[BANK0 ] int 
  9207 ;;  t               2   57[BANK0 ] int 
  9208 ;;  mode            1   74[BANK0 ] unsigned char 
  9209 ;;  nmode           1   71[BANK0 ] unsigned char 
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  2   29[BANK0 ] int 
  9212 ;; Registers used:
  9213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9219 ;;      Params:         0       7       0       0       0       0       0       0       0
  9220 ;;      Locals:         0      56       0       0       0       0       0       0       0
  9221 ;;      Temps:          0       5       0       0       0       0       0       0       0
  9222 ;;      Totals:         0      68       0       0       0       0       0       0       0
  9223 ;;Total ram usage:       68 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; Hardware stack levels required when called:    6
  9226 ;; This function calls:
  9227 ;;		___awdiv
  9228 ;;		___awmod
  9229 ;;		___fladd
  9230 ;;		___fldiv
  9231 ;;		___fleq
  9232 ;;		___flge
  9233 ;;		___flmul
  9234 ;;		___flneg
  9235 ;;		___flsub
  9236 ;;		___fltol
  9237 ;;		___fpclassifyf
  9238 ;;		_floorf
  9239 ;;		_isupper
  9240 ;;		_pad
  9241 ;;		_strcpy
  9242 ;;		_tolower
  9243 ;; This function is called by:
  9244 ;;		_vfpfcnvrt
  9245 ;; This function uses a non-reentrant model
  9246 ;;
  9247                           
  9248                           	psect	text35
  9249  000012                     __ptext35:
  9250                           	opt callstack 0
  9251  000012                     _efgtoa:
  9252                           	opt callstack 20
  9253  000012                     
  9254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9255  000012  0E00               	movlw	0
  9256  000014  0100               	movlb	0	; () banked
  9257  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  9258  000018  0E00               	movlw	0
  9259  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  9260  00001C                     
  9261                           ; BSR set to: 0
  9262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9263  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  9264  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  9265  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  9266  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  9267  00002C                     
  9268                           ; BSR set to: 0
  9269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9270  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9271  00002E  EF1D  F000         	goto	u10080
  9272  000032  EF1B  F000         	goto	u10081
  9273  000036                     u10081:
  9274  000036  EF33  F000         	goto	l9199
  9275  00003A                     u10080:
  9276  00003A                     
  9277                           ; BSR set to: 0
  9278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9279  00003A  0E00               	movlw	0
  9280  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  9281  00003E  0E01               	movlw	1
  9282  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  9283  000042                     
  9284                           ; BSR set to: 0
  9285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9286  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  9287  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  9288  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  9289  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  9290  000052  EC23  F02B         	call	___flneg	;wreg free
  9291  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  9292  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  9293  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  9294  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  9295  000066                     l9199:
  9296                           
  9297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9298  000066  0E00               	movlw	0
  9299  000068  0100               	movlb	0	; () banked
  9300  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  9301  00006C  0E00               	movlw	0
  9302  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  9303  000070                     
  9304                           ; BSR set to: 0
  9305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9306  000070  C132  F0A8         	movff	_width,efgtoa@w
  9307  000074  C133  F0A9         	movff	_width+1,efgtoa@w+1
  9308  000078                     
  9309                           ; BSR set to: 0
  9310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9311  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  9312  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9313  00007C  A4D8               	btfss	status,2,c
  9314  00007E  EF43  F000         	goto	u10091
  9315  000082  EF45  F000         	goto	u10090
  9316  000086                     u10091:
  9317  000086  EF4C  F000         	goto	l9207
  9318  00008A                     u10090:
  9319  00008A                     
  9320                           ; BSR set to: 0
  9321  00008A  A455               	btfss	_flags^0,2,c
  9322  00008C  EF4A  F000         	goto	u10101
  9323  000090  EF4C  F000         	goto	u10100
  9324  000094                     u10101:
  9325  000094  EF66  F000         	goto	l9219
  9326  000098                     u10100:
  9327  000098                     l9207:
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9331  000098  51A3               	movf	efgtoa@sign& (0+255),w,b
  9332  00009A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9333  00009C  A4D8               	btfss	status,2,c
  9334  00009E  EF53  F000         	goto	u10111
  9335  0000A2  EF55  F000         	goto	u10110
  9336  0000A6                     u10111:
  9337  0000A6  EF5B  F000         	goto	l9211
  9338  0000AA                     u10110:
  9339  0000AA                     
  9340                           ; BSR set to: 0
  9341  0000AA  0E00               	movlw	0
  9342  0000AC  6F8E               	movwf	(_efgtoa$923+1)& (0+255),b
  9343  0000AE  0E2B               	movlw	43
  9344  0000B0  6F8D               	movwf	_efgtoa$923& (0+255),b
  9345  0000B2  EF5F  F000         	goto	l9213
  9346  0000B6                     l9211:
  9347                           
  9348                           ; BSR set to: 0
  9349  0000B6  0E00               	movlw	0
  9350  0000B8  6F8E               	movwf	(_efgtoa$923+1)& (0+255),b
  9351  0000BA  0E2D               	movlw	45
  9352  0000BC  6F8D               	movwf	_efgtoa$923& (0+255),b
  9353  0000BE                     l9213:
  9354                           
  9355                           ; BSR set to: 0
  9356  0000BE  C08D  F142         	movff	_efgtoa$923,_dbuf
  9357  0000C2                     
  9358                           ; BSR set to: 0
  9359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9360  0000C2  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  9361  0000C4  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  9362  0000C6                     
  9363                           ; BSR set to: 0
  9364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9365  0000C6  07A8               	decf	efgtoa@w& (0+255),f,b
  9366  0000C8  A0D8               	btfss	status,0,c
  9367  0000CA  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  9368  0000CC                     l9219:
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9372  0000CC  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9373  0000D0  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9374  0000D4  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9375  0000D8  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9376  0000DC  EC39  F022         	call	___fpclassifyf	;wreg free
  9377  0000E0  0406               	decf	?___fpclassifyf^0,w,c
  9378  0000E2  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9379  0000E4  A4D8               	btfss	status,2,c
  9380  0000E6  EF77  F000         	goto	u10121
  9381  0000EA  EF79  F000         	goto	u10120
  9382  0000EE                     u10121:
  9383  0000EE  EFD0  F000         	goto	l9237
  9384  0000F2                     u10120:
  9385  0000F2  0EBF               	movlw	191
  9386  0000F4  0100               	movlb	0	; () banked
  9387  0000F6  6F84               	movwf	??_efgtoa& (0+255),b
  9388  0000F8  0EFF               	movlw	255
  9389  0000FA  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9390  0000FC  5183               	movf	efgtoa@c& (0+255),w,b
  9391  0000FE  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9392  000100  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9393  000102  5184               	movf	??_efgtoa& (0+255),w,b
  9394  000104  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9395  000106  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9396  000108  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9397  00010A  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9398  00010C  E10A               	bnz	u10130
  9399  00010E  0E1A               	movlw	26
  9400  000110  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9401  000112  A0D8               	btfss	status,0,c
  9402  000114  EF8E  F000         	goto	u10131
  9403  000118  EF91  F000         	goto	u10130
  9404  00011C                     u10131:
  9405  00011C  0E01               	movlw	1
  9406  00011E  EF92  F000         	goto	u10140
  9407  000122                     u10130:
  9408  000122  0E00               	movlw	0
  9409  000124                     u10140:
  9410  000124  6F8F               	movwf	_efgtoa$924& (0+255),b
  9411  000126  6B90               	clrf	(_efgtoa$924+1)& (0+255),b
  9412  000128                     
  9413                           ; BSR set to: 0
  9414  000128  518F               	movf	_efgtoa$924& (0+255),w,b
  9415  00012A  1190               	iorwf	(_efgtoa$924+1)& (0+255),w,b
  9416  00012C  B4D8               	btfsc	status,2,c
  9417  00012E  EF9B  F000         	goto	u10151
  9418  000132  EF9D  F000         	goto	u10150
  9419  000136                     u10151:
  9420  000136  EFAB  F000         	goto	l9229
  9421  00013A                     u10150:
  9422  00013A                     
  9423                           ; BSR set to: 0
  9424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9425  00013A  0E42               	movlw	low _dbuf
  9426  00013C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9427  00013E  6E06               	movwf	strcpy@dest^0,c
  9428  000140  0E01               	movlw	high _dbuf
  9429  000142  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9430  000144  6E07               	movwf	(strcpy@dest+1)^0,c
  9431  000146  0EEB               	movlw	low STR_23
  9432  000148  6E08               	movwf	strcpy@src^0,c
  9433  00014A  0E7F               	movlw	high STR_23
  9434  00014C  6E09               	movwf	(strcpy@src+1)^0,c
  9435  00014E  EC74  F028         	call	_strcpy	;wreg free
  9436                           
  9437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9438  000152  EFB7  F000         	goto	l9231
  9439  000156                     l9229:
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9443  000156  0E42               	movlw	low _dbuf
  9444  000158  25BB               	addwf	efgtoa@n& (0+255),w,b
  9445  00015A  6E06               	movwf	strcpy@dest^0,c
  9446  00015C  0E01               	movlw	high _dbuf
  9447  00015E  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9448  000160  6E07               	movwf	(strcpy@dest+1)^0,c
  9449  000162  0EF3               	movlw	low STR_24
  9450  000164  6E08               	movwf	strcpy@src^0,c
  9451  000166  0E7F               	movlw	high STR_24
  9452  000168  6E09               	movwf	(strcpy@src+1)^0,c
  9453  00016A  EC74  F028         	call	_strcpy	;wreg free
  9454  00016E                     l9231:
  9455                           
  9456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9457  00016E  0100               	movlb	0	; () banked
  9458  000170  0EFD               	movlw	253
  9459  000172  27A8               	addwf	efgtoa@w& (0+255),f,b
  9460  000174  0EFF               	movlw	255
  9461  000176  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9462  000178                     l9233:
  9463                           
  9464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9465  000178  C07D  F016         	movff	efgtoa@fp,pad@fp
  9466  00017C  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  9467  000180  0E42               	movlw	low _dbuf
  9468  000182  6E18               	movwf	pad@buf^0,c
  9469  000184  0E01               	movlw	high _dbuf
  9470  000186  6E19               	movwf	(pad@buf+1)^0,c
  9471  000188  C0A8  F01A         	movff	efgtoa@w,pad@p
  9472  00018C  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  9473  000190  EC67  F024         	call	_pad	;wreg free
  9474  000194  C016  F07D         	movff	?_pad,?_efgtoa
  9475  000198  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  9476  00019C  EFE5  F005         	goto	l838
  9477  0001A0                     l9237:
  9478                           
  9479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9480  0001A0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9481  0001A4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9482  0001A8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9483  0001AC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9484  0001B0  EC39  F022         	call	___fpclassifyf	;wreg free
  9485  0001B4  5006               	movf	?___fpclassifyf^0,w,c
  9486  0001B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9487  0001B8  A4D8               	btfss	status,2,c
  9488  0001BA  EFE1  F000         	goto	u10161
  9489  0001BE  EFE3  F000         	goto	u10160
  9490  0001C2                     u10161:
  9491  0001C2  EF23  F001         	goto	l9255
  9492  0001C6                     u10160:
  9493  0001C6  0EBF               	movlw	191
  9494  0001C8  0100               	movlb	0	; () banked
  9495  0001CA  6F84               	movwf	??_efgtoa& (0+255),b
  9496  0001CC  0EFF               	movlw	255
  9497  0001CE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9498  0001D0  5183               	movf	efgtoa@c& (0+255),w,b
  9499  0001D2  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9500  0001D4  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9501  0001D6  5184               	movf	??_efgtoa& (0+255),w,b
  9502  0001D8  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9503  0001DA  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9504  0001DC  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9505  0001DE  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9506  0001E0  E10A               	bnz	u10170
  9507  0001E2  0E1A               	movlw	26
  9508  0001E4  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9509  0001E6  A0D8               	btfss	status,0,c
  9510  0001E8  EFF8  F000         	goto	u10171
  9511  0001EC  EFFB  F000         	goto	u10170
  9512  0001F0                     u10171:
  9513  0001F0  0E01               	movlw	1
  9514  0001F2  EFFC  F000         	goto	u10180
  9515  0001F6                     u10170:
  9516  0001F6  0E00               	movlw	0
  9517  0001F8                     u10180:
  9518  0001F8  6F91               	movwf	_efgtoa$928& (0+255),b
  9519  0001FA  6B92               	clrf	(_efgtoa$928+1)& (0+255),b
  9520  0001FC                     
  9521                           ; BSR set to: 0
  9522  0001FC  5191               	movf	_efgtoa$928& (0+255),w,b
  9523  0001FE  1192               	iorwf	(_efgtoa$928+1)& (0+255),w,b
  9524  000200  B4D8               	btfsc	status,2,c
  9525  000202  EF05  F001         	goto	u10191
  9526  000206  EF07  F001         	goto	u10190
  9527  00020A                     u10191:
  9528  00020A  EF15  F001         	goto	l9247
  9529  00020E                     u10190:
  9530  00020E                     
  9531                           ; BSR set to: 0
  9532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9533  00020E  0E42               	movlw	low _dbuf
  9534  000210  25BB               	addwf	efgtoa@n& (0+255),w,b
  9535  000212  6E06               	movwf	strcpy@dest^0,c
  9536  000214  0E01               	movlw	high _dbuf
  9537  000216  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9538  000218  6E07               	movwf	(strcpy@dest+1)^0,c
  9539  00021A  0EEF               	movlw	low STR_27
  9540  00021C  6E08               	movwf	strcpy@src^0,c
  9541  00021E  0E7F               	movlw	high STR_27
  9542  000220  6E09               	movwf	(strcpy@src+1)^0,c
  9543  000222  EC74  F028         	call	_strcpy	;wreg free
  9544                           
  9545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9546  000226  EFB7  F000         	goto	l9231
  9547  00022A                     l9247:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9551  00022A  0E42               	movlw	low _dbuf
  9552  00022C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9553  00022E  6E06               	movwf	strcpy@dest^0,c
  9554  000230  0E01               	movlw	high _dbuf
  9555  000232  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9556  000234  6E07               	movwf	(strcpy@dest+1)^0,c
  9557  000236  0EF7               	movlw	low STR_28
  9558  000238  6E08               	movwf	strcpy@src^0,c
  9559  00023A  0E7F               	movlw	high STR_28
  9560  00023C  6E09               	movwf	(strcpy@src+1)^0,c
  9561  00023E  EC74  F028         	call	_strcpy	;wreg free
  9562  000242  EFB7  F000         	goto	l9231
  9563  000246                     l9255:
  9564                           
  9565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9566  000246  0E00               	movlw	0
  9567  000248  0100               	movlb	0	; () banked
  9568  00024A  6FBD               	movwf	efgtoa@u& (0+255),b
  9569  00024C  0E00               	movlw	0
  9570  00024E  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9571  000250  0E80               	movlw	128
  9572  000252  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9573  000254  0E3F               	movlw	63
  9574  000256  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9575                           
  9576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9577  000258  0E00               	movlw	0
  9578  00025A  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9579  00025C  0E00               	movlw	0
  9580  00025E  6FB9               	movwf	efgtoa@e& (0+255),b
  9581  000260                     
  9582                           ; BSR set to: 0
  9583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9584  000260  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  9585  000264  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9586  000268  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9587  00026C  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9588  000270  0E00               	movlw	0
  9589  000272  6E0A               	movwf	___fleq@ff2^0,c
  9590  000274  0E00               	movlw	0
  9591  000276  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9592  000278  0E00               	movlw	0
  9593  00027A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9594  00027C  0E00               	movlw	0
  9595  00027E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9596  000280  ECCC  F025         	call	___fleq	;wreg free
  9597  000284  B0D8               	btfsc	status,0,c
  9598  000286  EF47  F001         	goto	u10201
  9599  00028A  EF49  F001         	goto	u10200
  9600  00028E                     u10201:
  9601  00028E  EFCC  F001         	goto	l9273
  9602  000292                     u10200:
  9603  000292  EF68  F001         	goto	l9265
  9604  000296                     l9261:
  9605                           
  9606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9607  000296  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9608  00029A  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9609  00029E  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9610  0002A2  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9611  0002A6  0E00               	movlw	0
  9612  0002A8  6E1F               	movwf	___flmul@a^0,c
  9613  0002AA  0E00               	movlw	0
  9614  0002AC  6E20               	movwf	(___flmul@a+1)^0,c
  9615  0002AE  0E20               	movlw	32
  9616  0002B0  6E21               	movwf	(___flmul@a+2)^0,c
  9617  0002B2  0E41               	movlw	65
  9618  0002B4  6E22               	movwf	(___flmul@a+3)^0,c
  9619  0002B6  ECB8  F00E         	call	___flmul	;wreg free
  9620  0002BA  C01B  F0BD         	movff	?___flmul,efgtoa@u
  9621  0002BE  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  9622  0002C2  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  9623  0002C6  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  9624  0002CA                     
  9625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9626  0002CA  0100               	movlb	0	; () banked
  9627  0002CC  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  9628  0002CE  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  9629  0002D0                     l9265:
  9630                           
  9631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9632  0002D0  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9633  0002D4  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9634  0002D8  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9635  0002DC  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9636  0002E0  0E00               	movlw	0
  9637  0002E2  6E1F               	movwf	___flmul@a^0,c
  9638  0002E4  0E00               	movlw	0
  9639  0002E6  6E20               	movwf	(___flmul@a+1)^0,c
  9640  0002E8  0E20               	movlw	32
  9641  0002EA  6E21               	movwf	(___flmul@a+2)^0,c
  9642  0002EC  0E41               	movlw	65
  9643  0002EE  6E22               	movwf	(___flmul@a+3)^0,c
  9644  0002F0  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9645  0002F4  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9646  0002F8  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9647  0002FC  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9648  000300  ECB8  F00E         	call	___flmul	;wreg free
  9649  000304  C01B  F038         	movff	?___flmul,___flge@ff2
  9650  000308  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  9651  00030C  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  9652  000310  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  9653  000314  ECB7  F021         	call	___flge	;wreg free
  9654  000318  B0D8               	btfsc	status,0,c
  9655  00031A  EF91  F001         	goto	u10211
  9656  00031E  EF93  F001         	goto	u10210
  9657  000322                     u10211:
  9658  000322  EF4B  F001         	goto	l9261
  9659  000326                     u10210:
  9660  000326  EFB3  F001         	goto	l9271
  9661  00032A                     l9267:
  9662                           
  9663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9664  00032A  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9665  00032E  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9666  000332  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9667  000336  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9668  00033A  0E00               	movlw	0
  9669  00033C  6E48               	movwf	___fldiv@a^0,c
  9670  00033E  0E00               	movlw	0
  9671  000340  6E49               	movwf	(___fldiv@a+1)^0,c
  9672  000342  0E20               	movlw	32
  9673  000344  6E4A               	movwf	(___fldiv@a+2)^0,c
  9674  000346  0E41               	movlw	65
  9675  000348  6E4B               	movwf	(___fldiv@a+3)^0,c
  9676  00034A  EC8B  F014         	call	___fldiv	;wreg free
  9677  00034E  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9678  000352  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9679  000356  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9680  00035A  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9681  00035E                     
  9682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9683  00035E  0100               	movlb	0	; () banked
  9684  000360  07B9               	decf	efgtoa@e& (0+255),f,b
  9685  000362  A0D8               	btfss	status,0,c
  9686  000364  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  9687  000366                     l9271:
  9688                           
  9689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9690  000366  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9691  00036A  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9692  00036E  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9693  000372  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9694  000376  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  9695  00037A  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  9696  00037E  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  9697  000382  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  9698  000386  ECB7  F021         	call	___flge	;wreg free
  9699  00038A  A0D8               	btfss	status,0,c
  9700  00038C  EFCA  F001         	goto	u10221
  9701  000390  EFCC  F001         	goto	u10220
  9702  000394                     u10221:
  9703  000394  EF95  F001         	goto	l9267
  9704  000398                     u10220:
  9705  000398                     l9273:
  9706                           
  9707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9708  000398  C083  F00C         	movff	efgtoa@c,tolower@c
  9709  00039C  6A0D               	clrf	(tolower@c+1)^0,c
  9710  00039E  EC15  F028         	call	_tolower	;wreg free
  9711  0003A2  500C               	movf	?_tolower^0,w,c
  9712  0003A4  0100               	movlb	0	; () banked
  9713  0003A6  6FAA               	movwf	efgtoa@mode& (0+255),b
  9714  0003A8                     
  9715                           ; BSR set to: 0
  9716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9717  0003A8  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  9718  0003AC                     
  9719                           ; BSR set to: 0
  9720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9721  0003AC  0E67               	movlw	103
  9722  0003AE  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9723  0003B0  A4D8               	btfss	status,2,c
  9724  0003B2  EFDD  F001         	goto	u10231
  9725  0003B6  EFDF  F001         	goto	u10230
  9726  0003BA                     u10231:
  9727  0003BA  EF07  F002         	goto	l9287
  9728  0003BE                     u10230:
  9729  0003BE                     
  9730                           ; BSR set to: 0
  9731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9732  0003BE  0101               	movlb	1	; () banked
  9733  0003C0  5134               	movf	_prec& (0+255),w,b
  9734  0003C2  1135               	iorwf	(_prec+1)& (0+255),w,b
  9735  0003C4  A4D8               	btfss	status,2,c
  9736  0003C6  EFE7  F001         	goto	u10241
  9737  0003CA  EFE9  F001         	goto	u10240
  9738  0003CE                     u10241:
  9739  0003CE  EFED  F001         	goto	l9283
  9740  0003D2                     u10240:
  9741  0003D2                     
  9742                           ; BSR set to: 1
  9743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9744  0003D2  0E00               	movlw	0
  9745  0003D4  6F35               	movwf	(_prec+1)& (0+255),b
  9746  0003D6  0E01               	movlw	1
  9747  0003D8  6F34               	movwf	_prec& (0+255),b
  9748  0003DA                     l9283:
  9749                           
  9750                           ; BSR set to: 1
  9751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9752  0003DA  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9753  0003DC  EFFA  F001         	goto	u10250
  9754  0003E0  5135               	movf	(_prec+1)& (0+255),w,b
  9755  0003E2  E106               	bnz	u10251
  9756  0003E4  0534               	decf	_prec& (0+255),w,b
  9757  0003E6  B0D8               	btfsc	status,0,c
  9758  0003E8  EFF8  F001         	goto	u10251
  9759  0003EC  EFFA  F001         	goto	u10250
  9760  0003F0                     u10251:
  9761  0003F0  EF01  F002         	goto	l856
  9762  0003F4                     u10250:
  9763  0003F4                     l9285:
  9764                           
  9765                           ; BSR set to: 1
  9766  0003F4  0E00               	movlw	0
  9767  0003F6  0100               	movlb	0	; () banked
  9768  0003F8  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  9769  0003FA  0E06               	movlw	6
  9770  0003FC  6FA5               	movwf	efgtoa@p& (0+255),b
  9771  0003FE  EF11  F002         	goto	l9293
  9772  000402                     l856:
  9773                           
  9774                           ; BSR set to: 1
  9775  000402  C134  F0A5         	movff	_prec,efgtoa@p
  9776  000406  C135  F0A6         	movff	_prec+1,efgtoa@p+1
  9777  00040A  EF11  F002         	goto	l9293
  9778  00040E                     l9287:
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9782  00040E  0101               	movlb	1	; () banked
  9783  000410  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9784  000412  EF0D  F002         	goto	u10261
  9785  000416  EF0F  F002         	goto	u10260
  9786  00041A                     u10261:
  9787  00041A  EFFA  F001         	goto	l9285
  9788  00041E                     u10260:
  9789  00041E  EF01  F002         	goto	l856
  9790  000422                     l9293:
  9791                           
  9792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9793  000422  0E67               	movlw	103
  9794  000424  0100               	movlb	0	; () banked
  9795  000426  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9796  000428  A4D8               	btfss	status,2,c
  9797  00042A  EF19  F002         	goto	u10271
  9798  00042E  EF1B  F002         	goto	u10270
  9799  000432                     u10271:
  9800  000432  EF4A  F002         	goto	l9303
  9801  000436                     u10270:
  9802  000436                     
  9803                           ; BSR set to: 0
  9804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9805  000436  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  9806  000438  EF29  F002         	goto	u10280
  9807  00043C  0EFC               	movlw	252
  9808  00043E  5DB9               	subwf	efgtoa@e& (0+255),w,b
  9809  000440  0EFF               	movlw	255
  9810  000442  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9811  000444  A0D8               	btfss	status,0,c
  9812  000446  EF27  F002         	goto	u10281
  9813  00044A  EF29  F002         	goto	u10280
  9814  00044E                     u10281:
  9815  00044E  EF48  F002         	goto	l9301
  9816  000452                     u10280:
  9817  000452                     
  9818                           ; BSR set to: 0
  9819  000452  0EFF               	movlw	255
  9820  000454  6F84               	movwf	??_efgtoa& (0+255),b
  9821  000456  0EFF               	movlw	255
  9822  000458  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9823  00045A  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  9824  00045E  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  9825  000462  5184               	movf	??_efgtoa& (0+255),w,b
  9826  000464  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9827  000466  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9828  000468  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9829  00046A  51B9               	movf	efgtoa@e& (0+255),w,b
  9830  00046C  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9831  00046E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9832  000470  0A80               	xorlw	128
  9833  000472  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  9834  000474  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9835  000476  0A80               	xorlw	128
  9836  000478  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9837  00047A  A0D8               	btfss	status,0,c
  9838  00047C  EF42  F002         	goto	u10291
  9839  000480  EF44  F002         	goto	u10290
  9840  000484                     u10291:
  9841  000484  EF48  F002         	goto	l9301
  9842  000488                     u10290:
  9843  000488                     
  9844                           ; BSR set to: 0
  9845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9846  000488  0E66               	movlw	102
  9847  00048A  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9848                           
  9849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9850  00048C  EF4A  F002         	goto	l9303
  9851  000490                     l9301:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9855  000490  0E65               	movlw	101
  9856  000492  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9857  000494                     l9303:
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9861  000494  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  9862  000498  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  9863  00049C                     
  9864                           ; BSR set to: 0
  9865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9866  00049C  0E67               	movlw	103
  9867  00049E  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9868  0004A0  A4D8               	btfss	status,2,c
  9869  0004A2  EF55  F002         	goto	u10301
  9870  0004A6  EF57  F002         	goto	u10300
  9871  0004AA                     u10301:
  9872  0004AA  EF67  F002         	goto	l9311
  9873  0004AE                     u10300:
  9874  0004AE                     
  9875                           ; BSR set to: 0
  9876  0004AE  0E66               	movlw	102
  9877  0004B0  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9878  0004B2  A4D8               	btfss	status,2,c
  9879  0004B4  EF5E  F002         	goto	u10311
  9880  0004B8  EF60  F002         	goto	u10310
  9881  0004BC                     u10311:
  9882  0004BC  EF69  F002         	goto	l9313
  9883  0004C0                     u10310:
  9884  0004C0                     
  9885                           ; BSR set to: 0
  9886  0004C0  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9887  0004C2  EF67  F002         	goto	u10320
  9888  0004C6  EF65  F002         	goto	u10321
  9889  0004CA                     u10321:
  9890  0004CA  EF69  F002         	goto	l9313
  9891  0004CE                     u10320:
  9892  0004CE                     l9311:
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9896  0004CE  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  9897  0004D0  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  9898  0004D2                     l9313:
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9902  0004D2  0E66               	movlw	102
  9903  0004D4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9904  0004D6  A4D8               	btfss	status,2,c
  9905  0004D8  EF70  F002         	goto	u10331
  9906  0004DC  EF72  F002         	goto	u10330
  9907  0004E0                     u10331:
  9908  0004E0  EF92  F002         	goto	l9323
  9909  0004E4                     u10330:
  9910  0004E4                     
  9911                           ; BSR set to: 0
  9912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9913  0004E4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9914  0004E6  EF79  F002         	goto	u10340
  9915  0004EA  EF77  F002         	goto	u10341
  9916  0004EE                     u10341:
  9917  0004EE  EF85  F002         	goto	l9319
  9918  0004F2                     u10340:
  9919  0004F2                     
  9920                           ; BSR set to: 0
  9921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9922  0004F2  0E00               	movlw	0
  9923  0004F4  6FBD               	movwf	efgtoa@u& (0+255),b
  9924  0004F6  0E00               	movlw	0
  9925  0004F8  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9926  0004FA  0E80               	movlw	128
  9927  0004FC  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9928  0004FE  0E3F               	movlw	63
  9929  000500  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9930                           
  9931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9932  000502  0E00               	movlw	0
  9933  000504  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9934  000506  0E00               	movlw	0
  9935  000508  6FB9               	movwf	efgtoa@e& (0+255),b
  9936  00050A                     l9319:
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9940  00050A  0E67               	movlw	103
  9941  00050C  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9942  00050E  B4D8               	btfsc	status,2,c
  9943  000510  EF8C  F002         	goto	u10351
  9944  000514  EF8E  F002         	goto	u10350
  9945  000518                     u10351:
  9946  000518  EF92  F002         	goto	l9323
  9947  00051C                     u10350:
  9948  00051C                     
  9949                           ; BSR set to: 0
  9950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9951  00051C  51B9               	movf	efgtoa@e& (0+255),w,b
  9952  00051E  279D               	addwf	efgtoa@m& (0+255),f,b
  9953  000520  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9954  000522  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9955  000524                     l9323:
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9959  000524  0E00               	movlw	0
  9960  000526  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  9961  000528  0E00               	movlw	0
  9962  00052A  6FB3               	movwf	efgtoa@i& (0+255),b
  9963  00052C                     
  9964                           ; BSR set to: 0
  9965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9966  00052C  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  9967  000530  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  9968  000534  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  9969  000538  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  9970  00053C                     
  9971                           ; BSR set to: 0
  9972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9973  00053C  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  9974  000540  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  9975  000544  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  9976  000548  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  9977                           
  9978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9979  00054C  EF23  F003         	goto	l9337
  9980  000550                     l9329:
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9984  000550  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  9985  000554  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  9986  000558  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  9987  00055C  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  9988  000560  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  9989  000564  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  9990  000568  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  9991  00056C  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  9992  000570  EC8B  F014         	call	___fldiv	;wreg free
  9993  000574  C044  F050         	movff	?___fldiv,floorf@x
  9994  000578  C045  F051         	movff	?___fldiv+1,floorf@x+1
  9995  00057C  C046  F052         	movff	?___fldiv+2,floorf@x+2
  9996  000580  C047  F053         	movff	?___fldiv+3,floorf@x+3
  9997  000584  ECF1  F018         	call	_floorf	;wreg free
  9998  000588  C050  F0AF         	movff	?_floorf,efgtoa@l
  9999  00058C  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
 10000  000590  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
 10001  000594  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
 10002                           
 10003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10004  000598  C0AF  F072         	movff	efgtoa@l,___fltol@f1
 10005  00059C  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
 10006  0005A0  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
 10007  0005A4  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
 10008  0005A8  EC33  F021         	call	___fltol	;wreg free
 10009  0005AC  C072  F0A1         	movff	?___fltol,efgtoa@d
 10010  0005B0  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
 10011  0005B4                     
 10012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10013  0005B4  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10014  0005B8  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10015  0005BC  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10016  0005C0  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10017  0005C4  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10018  0005C8  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10019  0005CC  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10020  0005D0  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10021  0005D4  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10022  0005D8  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10023  0005DC  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10024  0005E0  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10025  0005E4  ECB8  F00E         	call	___flmul	;wreg free
 10026  0005E8  C01B  F048         	movff	?___flmul,___flsub@a
 10027  0005EC  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10028  0005F0  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10029  0005F4  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10030  0005F8  EC5F  F02A         	call	___flsub	;wreg free
 10031  0005FC  C044  F0AB         	movff	?___flsub,efgtoa@h
 10032  000600  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10033  000604  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10034  000608  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10035  00060C                     
 10036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10037  00060C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10038  000610  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10039  000614  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10040  000618  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10041  00061C  0E00               	movlw	0
 10042  00061E  6E48               	movwf	___fldiv@a^0,c
 10043  000620  0E00               	movlw	0
 10044  000622  6E49               	movwf	(___fldiv@a+1)^0,c
 10045  000624  0E20               	movlw	32
 10046  000626  6E4A               	movwf	(___fldiv@a+2)^0,c
 10047  000628  0E41               	movlw	65
 10048  00062A  6E4B               	movwf	(___fldiv@a+3)^0,c
 10049  00062C  EC8B  F014         	call	___fldiv	;wreg free
 10050  000630  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10051  000634  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10052  000638  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10053  00063C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10054  000640                     
 10055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10056  000640  0100               	movlb	0	; () banked
 10057  000642  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10058  000644  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10059  000646                     l9337:
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10063  000646  519D               	movf	efgtoa@m& (0+255),w,b
 10064  000648  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10065  00064A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10066  00064C  0A80               	xorlw	128
 10067  00064E  6F84               	movwf	??_efgtoa& (0+255),b
 10068  000650  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10069  000652  0A80               	xorlw	128
 10070  000654  5984               	subwfb	??_efgtoa& (0+255),w,b
 10071  000656  A0D8               	btfss	status,0,c
 10072  000658  EF30  F003         	goto	u10361
 10073  00065C  EF32  F003         	goto	u10360
 10074  000660                     u10361:
 10075  000660  EFA8  F002         	goto	l9329
 10076  000664                     u10360:
 10077  000664                     
 10078                           ; BSR set to: 0
 10079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10080  000664  C0BD  F01B         	movff	efgtoa@u,___flmul@b
 10081  000668  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
 10082  00066C  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
 10083  000670  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
 10084  000674  0E00               	movlw	0
 10085  000676  6E1F               	movwf	___flmul@a^0,c
 10086  000678  0E00               	movlw	0
 10087  00067A  6E20               	movwf	(___flmul@a+1)^0,c
 10088  00067C  0EA0               	movlw	160
 10089  00067E  6E21               	movwf	(___flmul@a+2)^0,c
 10090  000680  0E40               	movlw	64
 10091  000682  6E22               	movwf	(___flmul@a+3)^0,c
 10092  000684  ECB8  F00E         	call	___flmul	;wreg free
 10093  000688  C01B  F0AF         	movff	?___flmul,efgtoa@l
 10094  00068C  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
 10095  000690  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
 10096  000694  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
 10097  000698                     
 10098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10099  000698  C0AB  F034         	movff	efgtoa@h,___flge@ff1
 10100  00069C  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
 10101  0006A0  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
 10102  0006A4  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
 10103  0006A8  C0AF  F038         	movff	efgtoa@l,___flge@ff2
 10104  0006AC  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
 10105  0006B0  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
 10106  0006B4  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
 10107  0006B8  ECB7  F021         	call	___flge	;wreg free
 10108  0006BC  B0D8               	btfsc	status,0,c
 10109  0006BE  EF63  F003         	goto	u10371
 10110  0006C2  EF65  F003         	goto	u10370
 10111  0006C6                     u10371:
 10112  0006C6  EF70  F003         	goto	l9345
 10113  0006CA                     u10370:
 10114  0006CA                     
 10115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10116  0006CA  0E00               	movlw	0
 10117  0006CC  0100               	movlb	0	; () banked
 10118  0006CE  6FAF               	movwf	efgtoa@l& (0+255),b
 10119  0006D0  0E00               	movlw	0
 10120  0006D2  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
 10121  0006D4  0E00               	movlw	0
 10122  0006D6  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
 10123  0006D8  0E00               	movlw	0
 10124  0006DA  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
 10125                           
 10126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10127  0006DC  EF99  F003         	goto	l9351
 10128  0006E0                     l9345:
 10129                           
 10130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10131  0006E0  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
 10132  0006E4  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10133  0006E8  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10134  0006EC  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10135  0006F0  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
 10136  0006F4  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10137  0006F8  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10138  0006FC  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10139  000700  ECCC  F025         	call	___fleq	;wreg free
 10140  000704  A0D8               	btfss	status,0,c
 10141  000706  EF87  F003         	goto	u10381
 10142  00070A  EF89  F003         	goto	u10380
 10143  00070E                     u10381:
 10144  00070E  EF99  F003         	goto	l9351
 10145  000712                     u10380:
 10146  000712  0100               	movlb	0	; () banked
 10147  000714  B1A1               	btfsc	efgtoa@d& (0+255),0,b
 10148  000716  EF8F  F003         	goto	u10391
 10149  00071A  EF91  F003         	goto	u10390
 10150  00071E                     u10391:
 10151  00071E  EF99  F003         	goto	l9351
 10152  000722                     u10390:
 10153  000722                     
 10154                           ; BSR set to: 0
 10155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10156  000722  0E00               	movlw	0
 10157  000724  6FAF               	movwf	efgtoa@l& (0+255),b
 10158  000726  0E00               	movlw	0
 10159  000728  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
 10160  00072A  0E00               	movlw	0
 10161  00072C  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
 10162  00072E  0E00               	movlw	0
 10163  000730  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
 10164  000732                     l9351:
 10165                           
 10166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10167  000732  C0B5  F034         	movff	efgtoa@g,___fladd@b
 10168  000736  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
 10169  00073A  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
 10170  00073E  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
 10171  000742  C0AF  F038         	movff	efgtoa@l,___fladd@a
 10172  000746  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
 10173  00074A  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
 10174  00074E  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
 10175  000752  EC58  F00C         	call	___fladd	;wreg free
 10176  000756  C034  F0AB         	movff	?___fladd,efgtoa@h
 10177  00075A  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
 10178  00075E  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
 10179  000762  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
 10180  000766                     
 10181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 10182  000766  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
 10183  00076A  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
 10184  00076E  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
 10185  000772  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
 10186  000776                     
 10187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 10188  000776  0E65               	movlw	101
 10189  000778  0100               	movlb	0	; () banked
 10190  00077A  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10191  00077C  B4D8               	btfsc	status,2,c
 10192  00077E  EFC3  F003         	goto	u10401
 10193  000782  EFC5  F003         	goto	u10400
 10194  000786                     u10401:
 10195  000786  EFCB  F003         	goto	l9359
 10196  00078A                     u10400:
 10197  00078A                     
 10198                           ; BSR set to: 0
 10199  00078A  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
 10200  00078E  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
 10201  000792  EFCF  F003         	goto	l882
 10202  000796                     l9359:
 10203                           
 10204                           ; BSR set to: 0
 10205  000796  0E00               	movlw	0
 10206  000798  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
 10207  00079A  0E00               	movlw	0
 10208  00079C  6F9F               	movwf	efgtoa@ne& (0+255),b
 10209  00079E                     l882:
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 10213  00079E  0E00               	movlw	0
 10214  0007A0  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10215  0007A2  0E00               	movlw	0
 10216  0007A4  6F9B               	movwf	efgtoa@pp& (0+255),b
 10217                           
 10218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 10219  0007A6  0E00               	movlw	0
 10220  0007A8  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
 10221  0007AA  0E00               	movlw	0
 10222  0007AC  6F99               	movwf	efgtoa@t& (0+255),b
 10223                           
 10224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 10225  0007AE  0E00               	movlw	0
 10226  0007B0  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10227  0007B2  0E00               	movlw	0
 10228  0007B4  6FB3               	movwf	efgtoa@i& (0+255),b
 10229                           
 10230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10231  0007B6  EFCB  F004         	goto	l9409
 10232  0007BA                     l9361:
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 10236  0007BA  C0AB  F044         	movff	efgtoa@h,___fldiv@b
 10237  0007BE  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
 10238  0007C2  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
 10239  0007C6  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
 10240  0007CA  C0BD  F048         	movff	efgtoa@u,___fldiv@a
 10241  0007CE  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
 10242  0007D2  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
 10243  0007D6  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
 10244  0007DA  EC8B  F014         	call	___fldiv	;wreg free
 10245  0007DE  C044  F050         	movff	?___fldiv,floorf@x
 10246  0007E2  C045  F051         	movff	?___fldiv+1,floorf@x+1
 10247  0007E6  C046  F052         	movff	?___fldiv+2,floorf@x+2
 10248  0007EA  C047  F053         	movff	?___fldiv+3,floorf@x+3
 10249  0007EE  ECF1  F018         	call	_floorf	;wreg free
 10250  0007F2  C050  F0AF         	movff	?_floorf,efgtoa@l
 10251  0007F6  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
 10252  0007FA  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
 10253  0007FE  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
 10254                           
 10255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10256  000802  C0AF  F072         	movff	efgtoa@l,___fltol@f1
 10257  000806  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
 10258  00080A  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
 10259  00080E  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
 10260  000812  EC33  F021         	call	___fltol	;wreg free
 10261  000816  C072  F0A1         	movff	?___fltol,efgtoa@d
 10262  00081A  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
 10263  00081E                     
 10264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10265  00081E  B855               	btfsc	_flags^0,4,c
 10266  000820  EF14  F004         	goto	u10411
 10267  000824  EF16  F004         	goto	u10410
 10268  000828                     u10411:
 10269  000828  EF34  F004         	goto	l9373
 10270  00082C                     u10410:
 10271  00082C  0100               	movlb	0	; () banked
 10272  00082E  51A1               	movf	efgtoa@d& (0+255),w,b
 10273  000830  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
 10274  000832  A4D8               	btfss	status,2,c
 10275  000834  EF1E  F004         	goto	u10421
 10276  000838  EF20  F004         	goto	u10420
 10277  00083C                     u10421:
 10278  00083C  EF34  F004         	goto	l9373
 10279  000840                     u10420:
 10280  000840                     
 10281                           ; BSR set to: 0
 10282  000840  0E67               	movlw	103
 10283  000842  19AA               	xorwf	efgtoa@mode& (0+255),w,b
 10284  000844  A4D8               	btfss	status,2,c
 10285  000846  EF27  F004         	goto	u10431
 10286  00084A  EF29  F004         	goto	u10430
 10287  00084E                     u10431:
 10288  00084E  EF34  F004         	goto	l9373
 10289  000852                     u10430:
 10290  000852                     
 10291                           ; BSR set to: 0
 10292  000852  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10293  000854  EF30  F004         	goto	u10440
 10294  000858  EF2E  F004         	goto	u10441
 10295  00085C                     u10441:
 10296  00085C  EF34  F004         	goto	l9373
 10297  000860                     u10440:
 10298  000860                     
 10299                           ; BSR set to: 0
 10300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10301  000860  4B99               	infsnz	efgtoa@t& (0+255),f,b
 10302  000862  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
 10303                           
 10304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10305  000864  EF7F  F004         	goto	l9401
 10306  000868                     l9373:
 10307                           
 10308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10309  000868  0100               	movlb	0	; () banked
 10310  00086A  519B               	movf	efgtoa@pp& (0+255),w,b
 10311  00086C  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10312  00086E  A4D8               	btfss	status,2,c
 10313  000870  EF3C  F004         	goto	u10451
 10314  000874  EF3E  F004         	goto	u10450
 10315  000878                     u10451:
 10316  000878  EF68  F004         	goto	l9393
 10317  00087C                     u10450:
 10318  00087C                     
 10319                           ; BSR set to: 0
 10320  00087C  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10321  00087E  EF45  F004         	goto	u10460
 10322  000882  EF43  F004         	goto	u10461
 10323  000886                     u10461:
 10324  000886  EF68  F004         	goto	l9393
 10325  00088A                     u10460:
 10326  00088A                     
 10327                           ; BSR set to: 0
 10328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10329  00088A  0E42               	movlw	low _dbuf
 10330  00088C  25BB               	addwf	efgtoa@n& (0+255),w,b
 10331  00088E  6ED9               	movwf	fsr2l,c
 10332  000890  0E01               	movlw	high _dbuf
 10333  000892  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10334  000894  6EDA               	movwf	fsr2h,c
 10335  000896  0E2E               	movlw	46
 10336  000898  6EDF               	movwf	indf2,c
 10337  00089A                     
 10338                           ; BSR set to: 0
 10339  00089A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10340  00089C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10341  00089E                     
 10342                           ; BSR set to: 0
 10343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10344  00089E  07A8               	decf	efgtoa@w& (0+255),f,b
 10345  0008A0  A0D8               	btfss	status,0,c
 10346  0008A2  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10347  0008A4                     
 10348                           ; BSR set to: 0
 10349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10350  0008A4  0E00               	movlw	0
 10351  0008A6  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10352  0008A8  0E01               	movlw	1
 10353  0008AA  6F9B               	movwf	efgtoa@pp& (0+255),b
 10354  0008AC  EF68  F004         	goto	l9393
 10355  0008B0                     l9385:
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10359  0008B0  0E42               	movlw	low _dbuf
 10360  0008B2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10361  0008B4  6ED9               	movwf	fsr2l,c
 10362  0008B6  0E01               	movlw	high _dbuf
 10363  0008B8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10364  0008BA  6EDA               	movwf	fsr2h,c
 10365  0008BC  0E30               	movlw	48
 10366  0008BE  6EDF               	movwf	indf2,c
 10367  0008C0                     
 10368                           ; BSR set to: 0
 10369  0008C0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10370  0008C2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10371  0008C4                     
 10372                           ; BSR set to: 0
 10373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10374  0008C4  07A8               	decf	efgtoa@w& (0+255),f,b
 10375  0008C6  A0D8               	btfss	status,0,c
 10376  0008C8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10377  0008CA                     
 10378                           ; BSR set to: 0
 10379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10380  0008CA  0799               	decf	efgtoa@t& (0+255),f,b
 10381  0008CC  A0D8               	btfss	status,0,c
 10382  0008CE  079A               	decf	(efgtoa@t+1)& (0+255),f,b
 10383  0008D0                     l9393:
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10387  0008D0  5199               	movf	efgtoa@t& (0+255),w,b
 10388  0008D2  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10389  0008D4  A4D8               	btfss	status,2,c
 10390  0008D6  EF6F  F004         	goto	u10471
 10391  0008DA  EF71  F004         	goto	u10470
 10392  0008DE                     u10471:
 10393  0008DE  EF58  F004         	goto	l9385
 10394  0008E2                     u10470:
 10395  0008E2                     
 10396                           ; BSR set to: 0
 10397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10398  0008E2  0E42               	movlw	low _dbuf
 10399  0008E4  25BB               	addwf	efgtoa@n& (0+255),w,b
 10400  0008E6  6ED9               	movwf	fsr2l,c
 10401  0008E8  0E01               	movlw	high _dbuf
 10402  0008EA  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10403  0008EC  6EDA               	movwf	fsr2h,c
 10404  0008EE  51A1               	movf	efgtoa@d& (0+255),w,b
 10405  0008F0  0F30               	addlw	48
 10406  0008F2  6EDF               	movwf	indf2,c
 10407  0008F4                     
 10408                           ; BSR set to: 0
 10409  0008F4  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10410  0008F6  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10411  0008F8                     
 10412                           ; BSR set to: 0
 10413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10414  0008F8  07A8               	decf	efgtoa@w& (0+255),f,b
 10415  0008FA  A0D8               	btfss	status,0,c
 10416  0008FC  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10417  0008FE                     l9401:
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10421  0008FE  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10422  000902  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10423  000906  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10424  00090A  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10425  00090E  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10426  000912  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10427  000916  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10428  00091A  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10429  00091E  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10430  000922  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10431  000926  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10432  00092A  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10433  00092E  ECB8  F00E         	call	___flmul	;wreg free
 10434  000932  C01B  F048         	movff	?___flmul,___flsub@a
 10435  000936  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10436  00093A  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10437  00093E  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10438  000942  EC5F  F02A         	call	___flsub	;wreg free
 10439  000946  C044  F0AB         	movff	?___flsub,efgtoa@h
 10440  00094A  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10441  00094E  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10442  000952  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10443  000956                     
 10444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10445  000956  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10446  00095A  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10447  00095E  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10448  000962  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10449  000966  0E00               	movlw	0
 10450  000968  6E48               	movwf	___fldiv@a^0,c
 10451  00096A  0E00               	movlw	0
 10452  00096C  6E49               	movwf	(___fldiv@a+1)^0,c
 10453  00096E  0E20               	movlw	32
 10454  000970  6E4A               	movwf	(___fldiv@a+2)^0,c
 10455  000972  0E41               	movlw	65
 10456  000974  6E4B               	movwf	(___fldiv@a+3)^0,c
 10457  000976  EC8B  F014         	call	___fldiv	;wreg free
 10458  00097A  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10459  00097E  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10460  000982  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10461  000986  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10462  00098A                     
 10463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10464  00098A  0100               	movlb	0	; () banked
 10465  00098C  079F               	decf	efgtoa@ne& (0+255),f,b
 10466  00098E  A0D8               	btfss	status,0,c
 10467  000990  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
 10468  000992                     
 10469                           ; BSR set to: 0
 10470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10471  000992  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10472  000994  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10473  000996                     l9409:
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10477  000996  519D               	movf	efgtoa@m& (0+255),w,b
 10478  000998  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10479  00099A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10480  00099C  0A80               	xorlw	128
 10481  00099E  6F84               	movwf	??_efgtoa& (0+255),b
 10482  0009A0  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10483  0009A2  0A80               	xorlw	128
 10484  0009A4  5984               	subwfb	??_efgtoa& (0+255),w,b
 10485  0009A6  B0D8               	btfsc	status,0,c
 10486  0009A8  EFD8  F004         	goto	u10481
 10487  0009AC  EFDA  F004         	goto	u10480
 10488  0009B0                     u10481:
 10489  0009B0  EFE8  F004         	goto	l9413
 10490  0009B4                     u10480:
 10491  0009B4                     
 10492                           ; BSR set to: 0
 10493  0009B4  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10494  0009B6  EFE6  F004         	goto	u10491
 10495  0009BA  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
 10496  0009BC  E109               	bnz	u10490
 10497  0009BE  0E4B               	movlw	75
 10498  0009C0  5DBB               	subwf	efgtoa@n& (0+255),w,b
 10499  0009C2  A0D8               	btfss	status,0,c
 10500  0009C4  EFE6  F004         	goto	u10491
 10501  0009C8  EFE8  F004         	goto	u10490
 10502  0009CC                     u10491:
 10503  0009CC  EFDD  F003         	goto	l9361
 10504  0009D0                     u10490:
 10505  0009D0                     l9413:
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10509  0009D0  519B               	movf	efgtoa@pp& (0+255),w,b
 10510  0009D2  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10511  0009D4  A4D8               	btfss	status,2,c
 10512  0009D6  EFEF  F004         	goto	u10501
 10513  0009DA  EFF1  F004         	goto	u10500
 10514  0009DE                     u10501:
 10515  0009DE  EF02  F005         	goto	l9421
 10516  0009E2                     u10500:
 10517  0009E2                     
 10518                           ; BSR set to: 0
 10519  0009E2  A855               	btfss	_flags^0,4,c
 10520  0009E4  EFF6  F004         	goto	u10511
 10521  0009E8  EFF8  F004         	goto	u10510
 10522  0009EC                     u10511:
 10523  0009EC  EF02  F005         	goto	l9421
 10524  0009F0                     u10510:
 10525  0009F0                     
 10526                           ; BSR set to: 0
 10527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10528  0009F0  0E42               	movlw	low _dbuf
 10529  0009F2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10530  0009F4  6ED9               	movwf	fsr2l,c
 10531  0009F6  0E01               	movlw	high _dbuf
 10532  0009F8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10533  0009FA  6EDA               	movwf	fsr2h,c
 10534  0009FC  0E2E               	movlw	46
 10535  0009FE  6EDF               	movwf	indf2,c
 10536  000A00                     
 10537                           ; BSR set to: 0
 10538  000A00  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10539  000A02  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10540  000A04                     l9421:
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10544  000A04  0E42               	movlw	low _dbuf
 10545  000A06  25BB               	addwf	efgtoa@n& (0+255),w,b
 10546  000A08  6ED9               	movwf	fsr2l,c
 10547  000A0A  0E01               	movlw	high _dbuf
 10548  000A0C  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10549  000A0E  6EDA               	movwf	fsr2h,c
 10550  000A10  0E00               	movlw	0
 10551  000A12  6EDF               	movwf	indf2,c
 10552  000A14                     
 10553                           ; BSR set to: 0
 10554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10555  000A14  0E65               	movlw	101
 10556  000A16  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10557  000A18  A4D8               	btfss	status,2,c
 10558  000A1A  EF11  F005         	goto	u10521
 10559  000A1E  EF13  F005         	goto	u10520
 10560  000A22                     u10521:
 10561  000A22  EFBC  F000         	goto	l9233
 10562  000A26                     u10520:
 10563  000A26                     
 10564                           ; BSR set to: 0
 10565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10566  000A26  0E00               	movlw	0
 10567  000A28  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10568  000A2A  0E4F               	movlw	79
 10569  000A2C  6FB3               	movwf	efgtoa@i& (0+255),b
 10570  000A2E                     
 10571                           ; BSR set to: 0
 10572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10573  000A2E  0E42               	movlw	low _dbuf
 10574  000A30  25B3               	addwf	efgtoa@i& (0+255),w,b
 10575  000A32  6ED9               	movwf	fsr2l,c
 10576  000A34  0E01               	movlw	high _dbuf
 10577  000A36  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10578  000A38  6EDA               	movwf	fsr2h,c
 10579  000A3A  0E00               	movlw	0
 10580  000A3C  6EDF               	movwf	indf2,c
 10581  000A3E                     
 10582                           ; BSR set to: 0
 10583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10584  000A3E  0E00               	movlw	0
 10585  000A40  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10586  000A42  0E00               	movlw	0
 10587  000A44  6FA3               	movwf	efgtoa@sign& (0+255),b
 10588  000A46                     
 10589                           ; BSR set to: 0
 10590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10591  000A46  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10592  000A48  EF2A  F005         	goto	u10530
 10593  000A4C  EF28  F005         	goto	u10531
 10594  000A50                     u10531:
 10595  000A50  EF32  F005         	goto	l9437
 10596  000A54                     u10530:
 10597  000A54                     
 10598                           ; BSR set to: 0
 10599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10600  000A54  0E00               	movlw	0
 10601  000A56  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10602  000A58  0E01               	movlw	1
 10603  000A5A  6FA3               	movwf	efgtoa@sign& (0+255),b
 10604  000A5C                     
 10605                           ; BSR set to: 0
 10606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10607  000A5C  6DB9               	negf	efgtoa@e& (0+255),b
 10608  000A5E  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
 10609  000A60  B0D8               	btfsc	status,0,c
 10610  000A62  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
 10611  000A64                     l9437:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10615  000A64  0E00               	movlw	0
 10616  000A66  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
 10617  000A68  0E02               	movlw	2
 10618  000A6A  6FA5               	movwf	efgtoa@p& (0+255),b
 10619                           
 10620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10621  000A6C  EF63  F005         	goto	l9449
 10622  000A70                     l9439:
 10623                           
 10624                           ; BSR set to: 0
 10625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10626  000A70  07B3               	decf	efgtoa@i& (0+255),f,b
 10627  000A72  A0D8               	btfss	status,0,c
 10628  000A74  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10629  000A76                     
 10630                           ; BSR set to: 0
 10631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10632  000A76  0E42               	movlw	low _dbuf
 10633  000A78  25B3               	addwf	efgtoa@i& (0+255),w,b
 10634  000A7A  6ED9               	movwf	fsr2l,c
 10635  000A7C  0E01               	movlw	high _dbuf
 10636  000A7E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10637  000A80  6EDA               	movwf	fsr2h,c
 10638  000A82  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
 10639  000A86  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
 10640  000A8A  0E00               	movlw	0
 10641  000A8C  6E09               	movwf	(___awmod@divisor+1)^0,c
 10642  000A8E  0E0A               	movlw	10
 10643  000A90  6E08               	movwf	___awmod@divisor^0,c
 10644  000A92  ECC8  F024         	call	___awmod	;wreg free
 10645  000A96  5006               	movf	?___awmod^0,w,c
 10646  000A98  0F30               	addlw	48
 10647  000A9A  6EDF               	movwf	indf2,c
 10648  000A9C                     
 10649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10650  000A9C  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
 10651  000AA0  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
 10652  000AA4  0E00               	movlw	0
 10653  000AA6  6E09               	movwf	(___awdiv@divisor+1)^0,c
 10654  000AA8  0E0A               	movlw	10
 10655  000AAA  6E08               	movwf	___awdiv@divisor^0,c
 10656  000AAC  EC05  F024         	call	___awdiv	;wreg free
 10657  000AB0  C006  F0B9         	movff	?___awdiv,efgtoa@e
 10658  000AB4  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
 10659  000AB8                     
 10660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10661  000AB8  0100               	movlb	0	; () banked
 10662  000ABA  07A5               	decf	efgtoa@p& (0+255),f,b
 10663  000ABC  A0D8               	btfss	status,0,c
 10664  000ABE  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
 10665  000AC0                     
 10666                           ; BSR set to: 0
 10667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10668  000AC0  07A8               	decf	efgtoa@w& (0+255),f,b
 10669  000AC2  A0D8               	btfss	status,0,c
 10670  000AC4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10671  000AC6                     l9449:
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10675  000AC6  51B9               	movf	efgtoa@e& (0+255),w,b
 10676  000AC8  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10677  000ACA  A4D8               	btfss	status,2,c
 10678  000ACC  EF6A  F005         	goto	u10541
 10679  000AD0  EF6C  F005         	goto	u10540
 10680  000AD4                     u10541:
 10681  000AD4  EF38  F005         	goto	l9439
 10682  000AD8                     u10540:
 10683  000AD8                     
 10684                           ; BSR set to: 0
 10685  000AD8  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10686  000ADA  EF79  F005         	goto	u10550
 10687  000ADE  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
 10688  000AE0  E106               	bnz	u10551
 10689  000AE2  05A5               	decf	efgtoa@p& (0+255),w,b
 10690  000AE4  B0D8               	btfsc	status,0,c
 10691  000AE6  EF77  F005         	goto	u10551
 10692  000AEA  EF79  F005         	goto	u10550
 10693  000AEE                     u10551:
 10694  000AEE  EF38  F005         	goto	l9439
 10695  000AF2                     u10550:
 10696  000AF2                     
 10697                           ; BSR set to: 0
 10698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10699  000AF2  07B3               	decf	efgtoa@i& (0+255),f,b
 10700  000AF4  A0D8               	btfss	status,0,c
 10701  000AF6  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10702  000AF8                     
 10703                           ; BSR set to: 0
 10704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10705  000AF8  51A3               	movf	efgtoa@sign& (0+255),w,b
 10706  000AFA  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10707  000AFC  A4D8               	btfss	status,2,c
 10708  000AFE  EF83  F005         	goto	u10561
 10709  000B02  EF85  F005         	goto	u10560
 10710  000B06                     u10561:
 10711  000B06  EF8B  F005         	goto	l9459
 10712  000B0A                     u10560:
 10713  000B0A                     
 10714                           ; BSR set to: 0
 10715  000B0A  0E00               	movlw	0
 10716  000B0C  6F94               	movwf	(_efgtoa$932+1)& (0+255),b
 10717  000B0E  0E2B               	movlw	43
 10718  000B10  6F93               	movwf	_efgtoa$932& (0+255),b
 10719  000B12  EF8F  F005         	goto	l9461
 10720  000B16                     l9459:
 10721                           
 10722                           ; BSR set to: 0
 10723  000B16  0E00               	movlw	0
 10724  000B18  6F94               	movwf	(_efgtoa$932+1)& (0+255),b
 10725  000B1A  0E2D               	movlw	45
 10726  000B1C  6F93               	movwf	_efgtoa$932& (0+255),b
 10727  000B1E                     l9461:
 10728                           
 10729                           ; BSR set to: 0
 10730  000B1E  0E42               	movlw	low _dbuf
 10731  000B20  25B3               	addwf	efgtoa@i& (0+255),w,b
 10732  000B22  6ED9               	movwf	fsr2l,c
 10733  000B24  0E01               	movlw	high _dbuf
 10734  000B26  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10735  000B28  6EDA               	movwf	fsr2h,c
 10736  000B2A  C093  FFDF         	movff	_efgtoa$932,indf2
 10737  000B2E                     
 10738                           ; BSR set to: 0
 10739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10740  000B2E  07A8               	decf	efgtoa@w& (0+255),f,b
 10741  000B30  A0D8               	btfss	status,0,c
 10742  000B32  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10743  000B34                     
 10744                           ; BSR set to: 0
 10745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10746  000B34  07B3               	decf	efgtoa@i& (0+255),f,b
 10747  000B36  A0D8               	btfss	status,0,c
 10748  000B38  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10749  000B3A                     
 10750                           ; BSR set to: 0
 10751  000B3A  0EBF               	movlw	191
 10752  000B3C  6F84               	movwf	??_efgtoa& (0+255),b
 10753  000B3E  0EFF               	movlw	255
 10754  000B40  6F85               	movwf	(??_efgtoa+1)& (0+255),b
 10755  000B42  5183               	movf	efgtoa@c& (0+255),w,b
 10756  000B44  6F86               	movwf	(??_efgtoa+2)& (0+255),b
 10757  000B46  6B87               	clrf	(??_efgtoa+3)& (0+255),b
 10758  000B48  5184               	movf	??_efgtoa& (0+255),w,b
 10759  000B4A  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
 10760  000B4C  5185               	movf	(??_efgtoa+1)& (0+255),w,b
 10761  000B4E  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10762  000B50  5187               	movf	(??_efgtoa+3)& (0+255),w,b
 10763  000B52  E10A               	bnz	u10570
 10764  000B54  0E1A               	movlw	26
 10765  000B56  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
 10766  000B58  A0D8               	btfss	status,0,c
 10767  000B5A  EFB1  F005         	goto	u10571
 10768  000B5E  EFB4  F005         	goto	u10570
 10769  000B62                     u10571:
 10770  000B62  0E01               	movlw	1
 10771  000B64  EFB5  F005         	goto	u10580
 10772  000B68                     u10570:
 10773  000B68  0E00               	movlw	0
 10774  000B6A                     u10580:
 10775  000B6A  6F97               	movwf	_efgtoa$934& (0+255),b
 10776  000B6C  6B98               	clrf	(_efgtoa$934+1)& (0+255),b
 10777  000B6E                     
 10778                           ; BSR set to: 0
 10779  000B6E  5197               	movf	_efgtoa$934& (0+255),w,b
 10780  000B70  1198               	iorwf	(_efgtoa$934+1)& (0+255),w,b
 10781  000B72  A4D8               	btfss	status,2,c
 10782  000B74  EFBE  F005         	goto	u10591
 10783  000B78  EFC0  F005         	goto	u10590
 10784  000B7C                     u10591:
 10785  000B7C  EFC6  F005         	goto	l9475
 10786  000B80                     u10590:
 10787  000B80                     
 10788                           ; BSR set to: 0
 10789  000B80  0E00               	movlw	0
 10790  000B82  6F96               	movwf	(_efgtoa$933+1)& (0+255),b
 10791  000B84  0E65               	movlw	101
 10792  000B86  6F95               	movwf	_efgtoa$933& (0+255),b
 10793  000B88  EFCA  F005         	goto	l9477
 10794  000B8C                     l9475:
 10795                           
 10796                           ; BSR set to: 0
 10797  000B8C  0E00               	movlw	0
 10798  000B8E  6F96               	movwf	(_efgtoa$933+1)& (0+255),b
 10799  000B90  0E45               	movlw	69
 10800  000B92  6F95               	movwf	_efgtoa$933& (0+255),b
 10801  000B94                     l9477:
 10802                           
 10803                           ; BSR set to: 0
 10804  000B94  0E42               	movlw	low _dbuf
 10805  000B96  25B3               	addwf	efgtoa@i& (0+255),w,b
 10806  000B98  6ED9               	movwf	fsr2l,c
 10807  000B9A  0E01               	movlw	high _dbuf
 10808  000B9C  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10809  000B9E  6EDA               	movwf	fsr2h,c
 10810  000BA0  C095  FFDF         	movff	_efgtoa$933,indf2
 10811  000BA4                     
 10812                           ; BSR set to: 0
 10813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10814  000BA4  07A8               	decf	efgtoa@w& (0+255),f,b
 10815  000BA6  A0D8               	btfss	status,0,c
 10816  000BA8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10817  000BAA                     
 10818                           ; BSR set to: 0
 10819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10820  000BAA  0E42               	movlw	low _dbuf
 10821  000BAC  25BB               	addwf	efgtoa@n& (0+255),w,b
 10822  000BAE  6E06               	movwf	strcpy@dest^0,c
 10823  000BB0  0E01               	movlw	high _dbuf
 10824  000BB2  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10825  000BB4  6E07               	movwf	(strcpy@dest+1)^0,c
 10826  000BB6  0E42               	movlw	low _dbuf
 10827  000BB8  25B3               	addwf	efgtoa@i& (0+255),w,b
 10828  000BBA  6E08               	movwf	strcpy@src^0,c
 10829  000BBC  0E01               	movlw	high _dbuf
 10830  000BBE  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10831  000BC0  6E09               	movwf	(strcpy@src+1)^0,c
 10832  000BC2  EC74  F028         	call	_strcpy	;wreg free
 10833  000BC6  EFBC  F000         	goto	l9233
 10834  000BCA                     l838:
 10835  000BCA  0012               	return		;funcret
 10836  000BCC                     __end_of_efgtoa:
 10837                           	opt callstack 0
 10838                           
 10839 ;; *************** function _tolower *****************
 10840 ;; Defined at:
 10841 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  c               2   11[COMRAM] int 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;		None
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  2   11[COMRAM] int 
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10855 ;;      Params:         2       0       0       0       0       0       0       0       0
 10856 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10857 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10858 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10859 ;;Total ram usage:        8 bytes
 10860 ;; Hardware stack levels used:    1
 10861 ;; Hardware stack levels required when called:    3
 10862 ;; This function calls:
 10863 ;;		_isupper
 10864 ;; This function is called by:
 10865 ;;		_efgtoa
 10866 ;;		_vfpfcnvrt
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           	psect	text36
 10871  00502A                     __ptext36:
 10872                           	opt callstack 0
 10873  00502A                     _tolower:
 10874                           	opt callstack 23
 10875  00502A  0EBF               	movlw	191
 10876  00502C  6E0E               	movwf	??_tolower^0,c
 10877  00502E  0EFF               	movlw	255
 10878  005030  6E0F               	movwf	(??_tolower+1)^0,c
 10879  005032  C00C  F010         	movff	tolower@c,??_tolower+2
 10880  005036  C00D  F011         	movff	tolower@c+1,??_tolower+3
 10881  00503A  500E               	movf	??_tolower^0,w,c
 10882  00503C  2610               	addwf	(??_tolower+2)^0,f,c
 10883  00503E  500F               	movf	(??_tolower+1)^0,w,c
 10884  005040  2211               	addwfc	(??_tolower+3)^0,f,c
 10885  005042  5011               	movf	(??_tolower+3)^0,w,c
 10886  005044  E10A               	bnz	u8790
 10887  005046  0E1A               	movlw	26
 10888  005048  5C10               	subwf	(??_tolower+2)^0,w,c
 10889  00504A  A0D8               	btfss	status,0,c
 10890  00504C  EF2A  F028         	goto	u8791
 10891  005050  EF2D  F028         	goto	u8790
 10892  005054                     u8791:
 10893  005054  0E01               	movlw	1
 10894  005056  EF2E  F028         	goto	u8800
 10895  00505A                     u8790:
 10896  00505A  0E00               	movlw	0
 10897  00505C                     u8800:
 10898  00505C  6E12               	movwf	_tolower$1557^0,c
 10899  00505E  6A13               	clrf	(_tolower$1557+1)^0,c
 10900  005060  5012               	movf	_tolower$1557^0,w,c
 10901  005062  1013               	iorwf	(_tolower$1557+1)^0,w,c
 10902  005064  B4D8               	btfsc	status,2,c
 10903  005066  EF37  F028         	goto	u8811
 10904  00506A  EF39  F028         	goto	u8810
 10905  00506E                     u8811:
 10906  00506E  EF40  F028         	goto	l1773
 10907  005072                     u8810:
 10908  005072  0E20               	movlw	32
 10909  005074  100C               	iorwf	tolower@c^0,w,c
 10910  005076  6E0C               	movwf	?_tolower^0,c
 10911  005078  500D               	movf	(tolower@c+1)^0,w,c
 10912  00507A  6E0D               	movwf	(?_tolower+1)^0,c
 10913  00507C  EF44  F028         	goto	l1778
 10914  005080                     l1773:
 10915  005080  C00C  F00C         	movff	tolower@c,?_tolower
 10916  005084  C00D  F00D         	movff	tolower@c+1,?_tolower+1
 10917  005088                     l1778:
 10918  005088  0012               	return		;funcret
 10919  00508A                     __end_of_tolower:
 10920                           	opt callstack 0
 10921                           
 10922 ;; *************** function _isupper *****************
 10923 ;; Defined at:
 10924 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  c               2    5[COMRAM] int 
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;		None
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  2    5[COMRAM] int 
 10931 ;; Registers used:
 10932 ;;		wreg, status,2, status,0
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10938 ;;      Params:         2       0       0       0       0       0       0       0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10940 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10941 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10942 ;;Total ram usage:        6 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; Hardware stack levels required when called:    2
 10945 ;; This function calls:
 10946 ;;		Nothing
 10947 ;; This function is called by:
 10948 ;;		_efgtoa
 10949 ;;		_vfpfcnvrt
 10950 ;;		_tolower
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           	psect	text37
 10955  00560E                     __ptext37:
 10956                           	opt callstack 0
 10957  00560E                     _isupper:
 10958                           	opt callstack 23
 10959  00560E  0EBF               	movlw	191
 10960  005610  6E08               	movwf	??_isupper^0,c
 10961  005612  0EFF               	movlw	255
 10962  005614  6E09               	movwf	(??_isupper+1)^0,c
 10963  005616  C006  F00A         	movff	isupper@c,??_isupper+2
 10964  00561A  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10965  00561E  5008               	movf	??_isupper^0,w,c
 10966  005620  260A               	addwf	(??_isupper+2)^0,f,c
 10967  005622  5009               	movf	(??_isupper+1)^0,w,c
 10968  005624  220B               	addwfc	(??_isupper+3)^0,f,c
 10969  005626  500B               	movf	(??_isupper+3)^0,w,c
 10970  005628  E10A               	bnz	u8160
 10971  00562A  0E1A               	movlw	26
 10972  00562C  5C0A               	subwf	(??_isupper+2)^0,w,c
 10973  00562E  A0D8               	btfss	status,0,c
 10974  005630  EF1C  F02B         	goto	u8161
 10975  005634  EF1F  F02B         	goto	u8160
 10976  005638                     u8161:
 10977  005638  0E01               	movlw	1
 10978  00563A  EF20  F02B         	goto	u8170
 10979  00563E                     u8160:
 10980  00563E  0E00               	movlw	0
 10981  005640                     u8170:
 10982  005640  6E06               	movwf	?_isupper^0,c
 10983  005642  6A07               	clrf	(?_isupper+1)^0,c
 10984  005644  0012               	return		;funcret
 10985  005646                     __end_of_isupper:
 10986                           	opt callstack 0
 10987                           
 10988 ;; *************** function _strcpy *****************
 10989 ;; Defined at:
 10990 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10993 ;;		 -> dbuf(80), 
 10994 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10995 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
 10996 ;;		 -> dbuf(80), 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;  d               2   13[COMRAM] PTR unsigned char 
 10999 ;;		 -> dbuf(80), 
 11000 ;;  s               2   11[COMRAM] PTR const unsigned char 
 11001 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
 11002 ;;		 -> dbuf(80), 
 11003 ;; Return value:  Size  Location     Type
 11004 ;;                  2    5[COMRAM] PTR unsigned char 
 11005 ;; Registers used:
 11006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11012 ;;      Params:         4       0       0       0       0       0       0       0       0
 11013 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11014 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11015 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11016 ;;Total ram usage:       10 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    2
 11019 ;; This function calls:
 11020 ;;		Nothing
 11021 ;; This function is called by:
 11022 ;;		_efgtoa
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026                           	psect	text38
 11027  0050E8                     __ptext38:
 11028                           	opt callstack 0
 11029  0050E8                     _strcpy:
 11030                           	opt callstack 23
 11031  0050E8  C008  F00C         	movff	strcpy@src,strcpy@s
 11032  0050EC  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
 11033  0050F0  C006  F00E         	movff	strcpy@dest,strcpy@d
 11034  0050F4  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
 11035  0050F8                     l8463:
 11036  0050F8  500C               	movf	strcpy@s^0,w,c
 11037  0050FA  6E0A               	movwf	??_strcpy^0,c
 11038  0050FC  500D               	movf	(strcpy@s+1)^0,w,c
 11039  0050FE  6E0B               	movwf	(??_strcpy+1)^0,c
 11040  005100  4A0C               	infsnz	strcpy@s^0,f,c
 11041  005102  2A0D               	incf	(strcpy@s+1)^0,f,c
 11042  005104  C00A  FFF6         	movff	??_strcpy,tblptrl
 11043  005108  C00B  FFF7         	movff	??_strcpy+1,tblptrh
 11044  00510C  6AF8               	clrf	tblptru,c
 11045  00510E  C00E  FFD9         	movff	strcpy@d,fsr2l
 11046  005112  C00F  FFDA         	movff	strcpy@d+1,fsr2h
 11047  005116  4A0E               	infsnz	strcpy@d^0,f,c
 11048  005118  2A0F               	incf	(strcpy@d+1)^0,f,c
 11049  00511A  0E07               	movlw	(high __ramtop+-1)
 11050  00511C  64F7               	cpfsgt	tblptrh,c
 11051  00511E  D003               	bra	u8777
 11052  005120  0008               	tblrd		*
 11053  005122  50F5               	movf	tablat,w,c
 11054  005124  D005               	bra	u8770
 11055  005126                     u8777:
 11056  005126  CFF6 FFE9          	movff	tblptrl,fsr0l
 11057  00512A  CFF7 FFEA          	movff	tblptrh,fsr0h
 11058  00512E  50EF               	movf	indf0,w,c
 11059  005130                     u8770:
 11060  005130  6EDF               	movwf	indf2,c
 11061  005132  50DF               	movf	indf2,w,c
 11062  005134  A4D8               	btfss	status,2,c
 11063  005136  EF9F  F028         	goto	u8781
 11064  00513A  EFA1  F028         	goto	u8780
 11065  00513E                     u8781:
 11066  00513E  EF7C  F028         	goto	l8463
 11067  005142                     u8780:
 11068  005142  0012               	return		;funcret
 11069  005144                     __end_of_strcpy:
 11070                           	opt callstack 0
 11071                           
 11072 ;; *************** function _floorf *****************
 11073 ;; Defined at:
 11074 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;  x               4   79[COMRAM] float 
 11077 ;; Auto vars:     Size  Location     Type
 11078 ;;  u               4   25[BANK0 ] struct .
 11079 ;;  m               4   19[BANK0 ] unsigned long 
 11080 ;;  e               2   23[BANK0 ] int 
 11081 ;; Return value:  Size  Location     Type
 11082 ;;                  4   79[COMRAM] float 
 11083 ;; Registers used:
 11084 ;;		wreg, status,2, status,0
 11085 ;; Tracked objects:
 11086 ;;		On entry : 0/0
 11087 ;;		On exit  : 0/0
 11088 ;;		Unchanged: 0/0
 11089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11090 ;;      Params:         4       0       0       0       0       0       0       0       0
 11091 ;;      Locals:         0      10       0       0       0       0       0       0       0
 11092 ;;      Temps:          0       6       0       0       0       0       0       0       0
 11093 ;;      Totals:         4      16       0       0       0       0       0       0       0
 11094 ;;Total ram usage:       20 bytes
 11095 ;; Hardware stack levels used:    1
 11096 ;; Hardware stack levels required when called:    2
 11097 ;; This function calls:
 11098 ;;		Nothing
 11099 ;; This function is called by:
 11100 ;;		_efgtoa
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           	psect	text39
 11105  0031E2                     __ptext39:
 11106                           	opt callstack 0
 11107  0031E2                     _floorf:
 11108                           	opt callstack 23
 11109  0031E2  C104  F079         	movff	floorf@F524,floorf@u
 11110  0031E6  C105  F07A         	movff	floorf@F524+1,floorf@u+1
 11111  0031EA  C106  F07B         	movff	floorf@F524+2,floorf@u+2
 11112  0031EE  C107  F07C         	movff	floorf@F524+3,floorf@u+3
 11113  0031F2  C050  F079         	movff	floorf@x,floorf@u
 11114  0031F6  C051  F07A         	movff	floorf@x+1,floorf@u+1
 11115  0031FA  C052  F07B         	movff	floorf@x+2,floorf@u+2
 11116  0031FE  C053  F07C         	movff	floorf@x+3,floorf@u+3
 11117  003202  0E81               	movlw	129
 11118  003204  0100               	movlb	0	; () banked
 11119  003206  6F6D               	movwf	??_floorf& (0+255),b
 11120  003208  0EFF               	movlw	255
 11121  00320A  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11122  00320C  C079  F06F         	movff	floorf@u,??_floorf+2
 11123  003210  C07A  F070         	movff	floorf@u+1,??_floorf+3
 11124  003214  C07B  F071         	movff	floorf@u+2,??_floorf+4
 11125  003218  C07C  F072         	movff	floorf@u+3,??_floorf+5
 11126  00321C  0E18               	movlw	24
 11127  00321E  EF16  F019         	goto	u8820
 11128  003222                     u8825:
 11129  003222  90D8               	bcf	status,0,c
 11130  003224  3372               	rrcf	(??_floorf+5)& (0+255),f,b
 11131  003226  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 11132  003228  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11133  00322A  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11134  00322C                     u8820:
 11135  00322C  2EE8               	decfsz	wreg,f,c
 11136  00322E  EF11  F019         	goto	u8825
 11137  003232  516F               	movf	(??_floorf+2)& (0+255),w,b
 11138  003234  256D               	addwf	??_floorf& (0+255),w,b
 11139  003236  6F77               	movwf	floorf@e& (0+255),b
 11140  003238  0E00               	movlw	0
 11141  00323A  216E               	addwfc	(??_floorf+1)& (0+255),w,b
 11142  00323C  6F78               	movwf	(floorf@e+1)& (0+255),b
 11143  00323E  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 11144  003240  EF2B  F019         	goto	u8831
 11145  003244  5178               	movf	(floorf@e+1)& (0+255),w,b
 11146  003246  E109               	bnz	u8830
 11147  003248  0E17               	movlw	23
 11148  00324A  5D77               	subwf	floorf@e& (0+255),w,b
 11149  00324C  A0D8               	btfss	status,0,c
 11150  00324E  EF2B  F019         	goto	u8831
 11151  003252  EF2D  F019         	goto	u8830
 11152  003256                     u8831:
 11153  003256  EF37  F019         	goto	l8481
 11154  00325A                     u8830:
 11155  00325A                     l8479:
 11156                           
 11157                           ; BSR set to: 0
 11158  00325A  C050  F050         	movff	floorf@x,?_floorf
 11159  00325E  C051  F051         	movff	floorf@x+1,?_floorf+1
 11160  003262  C052  F052         	movff	floorf@x+2,?_floorf+2
 11161  003266  C053  F053         	movff	floorf@x+3,?_floorf+3
 11162  00326A  EFFB  F019         	goto	l1675
 11163  00326E                     l8481:
 11164                           
 11165                           ; BSR set to: 0
 11166  00326E  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 11167  003270  EF3C  F019         	goto	u8841
 11168  003274  EF3E  F019         	goto	u8840
 11169  003278                     u8841:
 11170  003278  EFAF  F019         	goto	l8491
 11171  00327C                     u8840:
 11172  00327C                     
 11173                           ; BSR set to: 0
 11174  00327C  C077  F06D         	movff	floorf@e,??_floorf
 11175  003280  0EFF               	movlw	255
 11176  003282  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11177  003284  0EFF               	movlw	255
 11178  003286  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11179  003288  0E7F               	movlw	127
 11180  00328A  6F70               	movwf	(??_floorf+3)& (0+255),b
 11181  00328C  0E00               	movlw	0
 11182  00328E  6F71               	movwf	(??_floorf+4)& (0+255),b
 11183  003290                     u8855:
 11184  003290  676D               	tstfsz	??_floorf& (0+255),b
 11185  003292  EF4D  F019         	goto	u8856
 11186  003296  EF55  F019         	goto	u8857
 11187  00329A                     u8856:
 11188  00329A  3571               	rlcf	(??_floorf+4)& (0+255),w,b
 11189  00329C  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 11190  00329E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11191  0032A0  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11192  0032A2  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11193  0032A4  2F6D               	decfsz	??_floorf& (0+255),f,b
 11194  0032A6  EF48  F019         	goto	u8855
 11195  0032AA                     u8857:
 11196  0032AA  C06E  F073         	movff	??_floorf+1,floorf@m
 11197  0032AE  C06F  F074         	movff	??_floorf+2,floorf@m+1
 11198  0032B2  C070  F075         	movff	??_floorf+3,floorf@m+2
 11199  0032B6  C071  F076         	movff	??_floorf+4,floorf@m+3
 11200  0032BA  0100               	movlb	0	; () banked
 11201  0032BC  5173               	movf	floorf@m& (0+255),w,b
 11202  0032BE  1579               	andwf	floorf@u& (0+255),w,b
 11203  0032C0  6F6D               	movwf	??_floorf& (0+255),b
 11204  0032C2  5174               	movf	(floorf@m+1)& (0+255),w,b
 11205  0032C4  157A               	andwf	(floorf@u+1)& (0+255),w,b
 11206  0032C6  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11207  0032C8  5175               	movf	(floorf@m+2)& (0+255),w,b
 11208  0032CA  157B               	andwf	(floorf@u+2)& (0+255),w,b
 11209  0032CC  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11210  0032CE  5176               	movf	(floorf@m+3)& (0+255),w,b
 11211  0032D0  157C               	andwf	(floorf@u+3)& (0+255),w,b
 11212  0032D2  6F70               	movwf	(??_floorf+3)& (0+255),b
 11213  0032D4  516D               	movf	??_floorf& (0+255),w,b
 11214  0032D6  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11215  0032D8  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11216  0032DA  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11217  0032DC  A4D8               	btfss	status,2,c
 11218  0032DE  EF73  F019         	goto	u8861
 11219  0032E2  EF75  F019         	goto	u8860
 11220  0032E6                     u8861:
 11221  0032E6  EF77  F019         	goto	l8487
 11222  0032EA                     u8860:
 11223  0032EA  EF2D  F019         	goto	l8479
 11224  0032EE                     l8487:
 11225                           
 11226                           ; BSR set to: 0
 11227  0032EE  C079  F06D         	movff	floorf@u,??_floorf
 11228  0032F2  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 11229  0032F6  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 11230  0032FA  C07C  F070         	movff	floorf@u+3,??_floorf+3
 11231  0032FE  0E20               	movlw	32
 11232  003300  EF87  F019         	goto	u8870
 11233  003304                     u8875:
 11234  003304  90D8               	bcf	status,0,c
 11235  003306  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11236  003308  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11237  00330A  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11238  00330C  336D               	rrcf	??_floorf& (0+255),f,b
 11239  00330E                     u8870:
 11240  00330E  2EE8               	decfsz	wreg,f,c
 11241  003310  EF82  F019         	goto	u8875
 11242  003314  516D               	movf	??_floorf& (0+255),w,b
 11243  003316  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11244  003318  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11245  00331A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11246  00331C  B4D8               	btfsc	status,2,c
 11247  00331E  EF93  F019         	goto	u8881
 11248  003322  EF95  F019         	goto	u8880
 11249  003326                     u8881:
 11250  003326  EF9D  F019         	goto	l1678
 11251  00332A                     u8880:
 11252  00332A                     
 11253                           ; BSR set to: 0
 11254  00332A  5173               	movf	floorf@m& (0+255),w,b
 11255  00332C  2779               	addwf	floorf@u& (0+255),f,b
 11256  00332E  5174               	movf	(floorf@m+1)& (0+255),w,b
 11257  003330  237A               	addwfc	(floorf@u+1)& (0+255),f,b
 11258  003332  5175               	movf	(floorf@m+2)& (0+255),w,b
 11259  003334  237B               	addwfc	(floorf@u+2)& (0+255),f,b
 11260  003336  5176               	movf	(floorf@m+3)& (0+255),w,b
 11261  003338  237C               	addwfc	(floorf@u+3)& (0+255),f,b
 11262  00333A                     l1678:
 11263                           
 11264                           ; BSR set to: 0
 11265  00333A  1D73               	comf	floorf@m& (0+255),w,b
 11266  00333C  6F6D               	movwf	??_floorf& (0+255),b
 11267  00333E  1D74               	comf	(floorf@m+1)& (0+255),w,b
 11268  003340  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11269  003342  1D75               	comf	(floorf@m+2)& (0+255),w,b
 11270  003344  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11271  003346  1D76               	comf	(floorf@m+3)& (0+255),w,b
 11272  003348  6F70               	movwf	(??_floorf+3)& (0+255),b
 11273  00334A  516D               	movf	??_floorf& (0+255),w,b
 11274  00334C  1779               	andwf	floorf@u& (0+255),f,b
 11275  00334E  516E               	movf	(??_floorf+1)& (0+255),w,b
 11276  003350  177A               	andwf	(floorf@u+1)& (0+255),f,b
 11277  003352  516F               	movf	(??_floorf+2)& (0+255),w,b
 11278  003354  177B               	andwf	(floorf@u+2)& (0+255),f,b
 11279  003356  5170               	movf	(??_floorf+3)& (0+255),w,b
 11280  003358  177C               	andwf	(floorf@u+3)& (0+255),f,b
 11281  00335A  EFF3  F019         	goto	l8499
 11282  00335E                     l8491:
 11283                           
 11284                           ; BSR set to: 0
 11285  00335E  C079  F06D         	movff	floorf@u,??_floorf
 11286  003362  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 11287  003366  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 11288  00336A  C07C  F070         	movff	floorf@u+3,??_floorf+3
 11289  00336E  0E20               	movlw	32
 11290  003370  EFBF  F019         	goto	u8890
 11291  003374                     u8895:
 11292  003374  90D8               	bcf	status,0,c
 11293  003376  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 11294  003378  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 11295  00337A  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 11296  00337C  336D               	rrcf	??_floorf& (0+255),f,b
 11297  00337E                     u8890:
 11298  00337E  2EE8               	decfsz	wreg,f,c
 11299  003380  EFBA  F019         	goto	u8895
 11300  003384  516D               	movf	??_floorf& (0+255),w,b
 11301  003386  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11302  003388  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11303  00338A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11304  00338C  A4D8               	btfss	status,2,c
 11305  00338E  EFCB  F019         	goto	u8901
 11306  003392  EFCD  F019         	goto	u8900
 11307  003396                     u8901:
 11308  003396  EFD7  F019         	goto	l8495
 11309  00339A                     u8900:
 11310  00339A                     
 11311                           ; BSR set to: 0
 11312  00339A  0E00               	movlw	0
 11313  00339C  6F79               	movwf	floorf@u& (0+255),b
 11314  00339E  0E00               	movlw	0
 11315  0033A0  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11316  0033A2  0E00               	movlw	0
 11317  0033A4  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11318  0033A6  0E00               	movlw	0
 11319  0033A8  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11320  0033AA  EFF3  F019         	goto	l8499
 11321  0033AE                     l8495:
 11322                           
 11323                           ; BSR set to: 0
 11324  0033AE  90D8               	bcf	status,0,c
 11325  0033B0  3579               	rlcf	floorf@u& (0+255),w,b
 11326  0033B2  6F6D               	movwf	??_floorf& (0+255),b
 11327  0033B4  357A               	rlcf	(floorf@u+1)& (0+255),w,b
 11328  0033B6  6F6E               	movwf	(??_floorf+1)& (0+255),b
 11329  0033B8  357B               	rlcf	(floorf@u+2)& (0+255),w,b
 11330  0033BA  6F6F               	movwf	(??_floorf+2)& (0+255),b
 11331  0033BC  357C               	rlcf	(floorf@u+3)& (0+255),w,b
 11332  0033BE  6F70               	movwf	(??_floorf+3)& (0+255),b
 11333  0033C0  516D               	movf	??_floorf& (0+255),w,b
 11334  0033C2  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 11335  0033C4  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 11336  0033C6  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 11337  0033C8  B4D8               	btfsc	status,2,c
 11338  0033CA  EFE9  F019         	goto	u8911
 11339  0033CE  EFEB  F019         	goto	u8910
 11340  0033D2                     u8911:
 11341  0033D2  EFF3  F019         	goto	l8499
 11342  0033D6                     u8910:
 11343  0033D6                     
 11344                           ; BSR set to: 0
 11345  0033D6  0E00               	movlw	0
 11346  0033D8  6F79               	movwf	floorf@u& (0+255),b
 11347  0033DA  0E00               	movlw	0
 11348  0033DC  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11349  0033DE  0E80               	movlw	128
 11350  0033E0  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11351  0033E2  0EBF               	movlw	191
 11352  0033E4  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11353  0033E6                     l8499:
 11354                           
 11355                           ; BSR set to: 0
 11356  0033E6  C079  F050         	movff	floorf@u,?_floorf
 11357  0033EA  C07A  F051         	movff	floorf@u+1,?_floorf+1
 11358  0033EE  C07B  F052         	movff	floorf@u+2,?_floorf+2
 11359  0033F2  C07C  F053         	movff	floorf@u+3,?_floorf+3
 11360  0033F6                     l1675:
 11361                           
 11362                           ; BSR set to: 0
 11363  0033F6  0012               	return		;funcret
 11364  0033F8                     __end_of_floorf:
 11365                           	opt callstack 0
 11366                           
 11367 ;; *************** function ___fpclassifyf *****************
 11368 ;; Defined at:
 11369 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  x               4    5[COMRAM] float 
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;  u               4   15[COMRAM] struct .
 11374 ;;  e               2   13[COMRAM] int 
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  2    5[COMRAM] int 
 11377 ;; Registers used:
 11378 ;;		wreg, status,2, status,0
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11384 ;;      Params:         4       0       0       0       0       0       0       0       0
 11385 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11386 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11387 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11388 ;;Total ram usage:       14 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; Hardware stack levels required when called:    2
 11391 ;; This function calls:
 11392 ;;		Nothing
 11393 ;; This function is called by:
 11394 ;;		_efgtoa
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text40
 11399  004472                     __ptext40:
 11400                           	opt callstack 0
 11401  004472                     ___fpclassifyf:
 11402                           	opt callstack 23
 11403  004472  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
 11404  004476  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 11405  00447A  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 11406  00447E  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 11407  004482  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11408  004486  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11409  00448A  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11410  00448E  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11411  004492  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11412  004496  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11413  00449A  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11414  00449E  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11415  0044A2  0E18               	movlw	24
 11416  0044A4  EF59  F022         	goto	u8700
 11417  0044A8                     u8705:
 11418  0044A8  90D8               	bcf	status,0,c
 11419  0044AA  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11420  0044AC  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11421  0044AE  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11422  0044B0  320A               	rrcf	??___fpclassifyf^0,f,c
 11423  0044B2                     u8700:
 11424  0044B2  2EE8               	decfsz	wreg,f,c
 11425  0044B4  EF54  F022         	goto	u8705
 11426  0044B8  500A               	movf	??___fpclassifyf^0,w,c
 11427  0044BA  6E0E               	movwf	___fpclassifyf@e^0,c
 11428  0044BC  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11429  0044BE  500E               	movf	___fpclassifyf@e^0,w,c
 11430  0044C0  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11431  0044C2  A4D8               	btfss	status,2,c
 11432  0044C4  EF66  F022         	goto	u8711
 11433  0044C8  EF68  F022         	goto	u8710
 11434  0044CC                     u8711:
 11435  0044CC  EF88  F022         	goto	l8451
 11436  0044D0                     u8710:
 11437  0044D0  90D8               	bcf	status,0,c
 11438  0044D2  3410               	rlcf	___fpclassifyf@u^0,w,c
 11439  0044D4  6E0A               	movwf	??___fpclassifyf^0,c
 11440  0044D6  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11441  0044D8  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11442  0044DA  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11443  0044DC  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11444  0044DE  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11445  0044E0  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11446  0044E2  500A               	movf	??___fpclassifyf^0,w,c
 11447  0044E4  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11448  0044E6  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11449  0044E8  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11450  0044EA  A4D8               	btfss	status,2,c
 11451  0044EC  EF7A  F022         	goto	u8721
 11452  0044F0  EF7C  F022         	goto	u8720
 11453  0044F4                     u8721:
 11454  0044F4  EF82  F022         	goto	l8447
 11455  0044F8                     u8720:
 11456  0044F8  0E00               	movlw	0
 11457  0044FA  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11458  0044FC  0E02               	movlw	2
 11459  0044FE  6E06               	movwf	?___fpclassifyf^0,c
 11460  004500  EFB7  F022         	goto	l1630
 11461  004504                     l8447:
 11462  004504  0E00               	movlw	0
 11463  004506  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11464  004508  0E03               	movlw	3
 11465  00450A  6E06               	movwf	?___fpclassifyf^0,c
 11466  00450C  EFB7  F022         	goto	l1630
 11467  004510                     l8451:
 11468  004510  280E               	incf	___fpclassifyf@e^0,w,c
 11469  004512  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11470  004514  A4D8               	btfss	status,2,c
 11471  004516  EF8F  F022         	goto	u8731
 11472  00451A  EF91  F022         	goto	u8730
 11473  00451E                     u8731:
 11474  00451E  EFB3  F022         	goto	l8457
 11475  004522                     u8730:
 11476  004522  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11477  004526  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11478  00452A  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11479  00452E  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11480  004532  0E09               	movlw	9
 11481  004534                     u8745:
 11482  004534  90D8               	bcf	status,0,c
 11483  004536  360A               	rlcf	??___fpclassifyf^0,f,c
 11484  004538  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11485  00453A  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11486  00453C  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11487  00453E  2EE8               	decfsz	wreg,f,c
 11488  004540  EF9A  F022         	goto	u8745
 11489  004544  500A               	movf	??___fpclassifyf^0,w,c
 11490  004546  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11491  004548  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11492  00454A  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11493  00454C  B4D8               	btfsc	status,2,c
 11494  00454E  EFAB  F022         	goto	u8751
 11495  004552  EFAE  F022         	goto	u8750
 11496  004556                     u8751:
 11497  004556  0E01               	movlw	1
 11498  004558  EFAF  F022         	goto	u8760
 11499  00455C                     u8750:
 11500  00455C  0E00               	movlw	0
 11501  00455E                     u8760:
 11502  00455E  6E06               	movwf	?___fpclassifyf^0,c
 11503  004560  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11504  004562  EFB7  F022         	goto	l1630
 11505  004566                     l8457:
 11506  004566  0E00               	movlw	0
 11507  004568  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11508  00456A  0E04               	movlw	4
 11509  00456C  6E06               	movwf	?___fpclassifyf^0,c
 11510  00456E                     l1630:
 11511  00456E  0012               	return		;funcret
 11512  004570                     __end_of___fpclassifyf:
 11513                           	opt callstack 0
 11514                           
 11515 ;; *************** function ___fltol *****************
 11516 ;; Defined at:
 11517 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  f1              4   18[BANK0 ] int 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  exp1            1   27[BANK0 ] unsigned char 
 11522 ;;  sign1           1   26[BANK0 ] unsigned char 
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  4   18[BANK0 ] long 
 11525 ;; Registers used:
 11526 ;;		wreg, status,2, status,0
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11532 ;;      Params:         0       4       0       0       0       0       0       0       0
 11533 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11534 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11535 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11536 ;;Total ram usage:       10 bytes
 11537 ;; Hardware stack levels used:    1
 11538 ;; Hardware stack levels required when called:    2
 11539 ;; This function calls:
 11540 ;;		Nothing
 11541 ;; This function is called by:
 11542 ;;		_pwmDuty
 11543 ;;		_PID
 11544 ;;		_efgtoa
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           	psect	text41
 11549  004266                     __ptext41:
 11550                           	opt callstack 0
 11551  004266                     ___fltol:
 11552                           	opt callstack 23
 11553  004266  0100               	movlb	0	; () banked
 11554  004268  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11555  00426A  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11556  00426C  6F7B               	movwf	___fltol@exp1& (0+255),b
 11557  00426E  517B               	movf	___fltol@exp1& (0+255),w,b
 11558  004270  A4D8               	btfss	status,2,c
 11559  004272  EF3D  F021         	goto	u9701
 11560  004276  EF3F  F021         	goto	u9700
 11561  00427A                     u9701:
 11562  00427A  EF49  F021         	goto	l8999
 11563  00427E                     u9700:
 11564  00427E                     l8995:
 11565                           
 11566                           ; BSR set to: 0
 11567  00427E  0E00               	movlw	0
 11568  004280  6F72               	movwf	?___fltol& (0+255),b
 11569  004282  0E00               	movlw	0
 11570  004284  6F73               	movwf	(?___fltol+1)& (0+255),b
 11571  004286  0E00               	movlw	0
 11572  004288  6F74               	movwf	(?___fltol+2)& (0+255),b
 11573  00428A  0E00               	movlw	0
 11574  00428C  6F75               	movwf	(?___fltol+3)& (0+255),b
 11575  00428E  EFB6  F021         	goto	l1246
 11576  004292                     l8999:
 11577                           
 11578                           ; BSR set to: 0
 11579  004292  C072  F076         	movff	___fltol@f1,??___fltol
 11580  004296  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 11581  00429A  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 11582  00429E  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 11583  0042A2  0E20               	movlw	32
 11584  0042A4  EF59  F021         	goto	u9710
 11585  0042A8                     u9715:
 11586  0042A8  90D8               	bcf	status,0,c
 11587  0042AA  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 11588  0042AC  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 11589  0042AE  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 11590  0042B0  3376               	rrcf	??___fltol& (0+255),f,b
 11591  0042B2                     u9710:
 11592  0042B2  2EE8               	decfsz	wreg,f,c
 11593  0042B4  EF54  F021         	goto	u9715
 11594  0042B8  5176               	movf	??___fltol& (0+255),w,b
 11595  0042BA  6F7A               	movwf	___fltol@sign1& (0+255),b
 11596  0042BC                     
 11597                           ; BSR set to: 0
 11598  0042BC  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 11599  0042BE                     
 11600                           ; BSR set to: 0
 11601  0042BE  0EFF               	movlw	255
 11602  0042C0  1772               	andwf	___fltol@f1& (0+255),f,b
 11603  0042C2  0EFF               	movlw	255
 11604  0042C4  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 11605  0042C6  0EFF               	movlw	255
 11606  0042C8  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 11607  0042CA  0E00               	movlw	0
 11608  0042CC  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 11609  0042CE                     
 11610                           ; BSR set to: 0
 11611  0042CE  0E96               	movlw	150
 11612  0042D0  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 11613  0042D2                     
 11614                           ; BSR set to: 0
 11615  0042D2  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 11616  0042D4  EF70  F021         	goto	u9720
 11617  0042D8  EF6E  F021         	goto	u9721
 11618  0042DC                     u9721:
 11619  0042DC  EF86  F021         	goto	l9019
 11620  0042E0                     u9720:
 11621  0042E0                     
 11622                           ; BSR set to: 0
 11623  0042E0  517B               	movf	___fltol@exp1& (0+255),w,b
 11624  0042E2  0A80               	xorlw	128
 11625  0042E4  0F97               	addlw	151
 11626  0042E6  B0D8               	btfsc	status,0,c
 11627  0042E8  EF78  F021         	goto	u9731
 11628  0042EC  EF7A  F021         	goto	u9730
 11629  0042F0                     u9731:
 11630  0042F0  EF7C  F021         	goto	l9015
 11631  0042F4                     u9730:
 11632  0042F4  EF3F  F021         	goto	l8995
 11633  0042F8                     l9015:
 11634                           
 11635                           ; BSR set to: 0
 11636  0042F8  90D8               	bcf	status,0,c
 11637  0042FA  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11638  0042FC  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11639  0042FE  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11640  004300  3372               	rrcf	___fltol@f1& (0+255),f,b
 11641  004302                     
 11642                           ; BSR set to: 0
 11643  004302  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 11644  004304  EF7C  F021         	goto	l9015
 11645  004308  EF9E  F021         	goto	l9029
 11646  00430C                     l9019:
 11647                           
 11648                           ; BSR set to: 0
 11649  00430C  0E1F               	movlw	31
 11650  00430E  657B               	cpfsgt	___fltol@exp1& (0+255),b
 11651  004310  EF8C  F021         	goto	u9741
 11652  004314  EF8E  F021         	goto	u9740
 11653  004318                     u9741:
 11654  004318  EF96  F021         	goto	l9027
 11655  00431C                     u9740:
 11656  00431C  EF3F  F021         	goto	l8995
 11657  004320                     l9025:
 11658                           
 11659                           ; BSR set to: 0
 11660  004320  90D8               	bcf	status,0,c
 11661  004322  3772               	rlcf	___fltol@f1& (0+255),f,b
 11662  004324  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11663  004326  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11664  004328  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11665  00432A  077B               	decf	___fltol@exp1& (0+255),f,b
 11666  00432C                     l9027:
 11667                           
 11668                           ; BSR set to: 0
 11669  00432C  517B               	movf	___fltol@exp1& (0+255),w,b
 11670  00432E  A4D8               	btfss	status,2,c
 11671  004330  EF9C  F021         	goto	u9751
 11672  004334  EF9E  F021         	goto	u9750
 11673  004338                     u9751:
 11674  004338  EF90  F021         	goto	l9025
 11675  00433C                     u9750:
 11676  00433C                     l9029:
 11677                           
 11678                           ; BSR set to: 0
 11679  00433C  517A               	movf	___fltol@sign1& (0+255),w,b
 11680  00433E  B4D8               	btfsc	status,2,c
 11681  004340  EFA4  F021         	goto	u9761
 11682  004344  EFA6  F021         	goto	u9760
 11683  004348                     u9761:
 11684  004348  EFAE  F021         	goto	l9033
 11685  00434C                     u9760:
 11686  00434C                     
 11687                           ; BSR set to: 0
 11688  00434C  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 11689  00434E  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 11690  004350  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 11691  004352  6D72               	negf	___fltol@f1& (0+255),b
 11692  004354  0E00               	movlw	0
 11693  004356  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11694  004358  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11695  00435A  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11696  00435C                     l9033:
 11697                           
 11698                           ; BSR set to: 0
 11699  00435C  C072  F072         	movff	___fltol@f1,?___fltol
 11700  004360  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 11701  004364  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 11702  004368  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 11703  00436C                     l1246:
 11704                           
 11705                           ; BSR set to: 0
 11706  00436C  0012               	return		;funcret
 11707  00436E                     __end_of___fltol:
 11708                           	opt callstack 0
 11709                           
 11710 ;; *************** function ___flsub *****************
 11711 ;; Defined at:
 11712 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;  b               4   67[COMRAM] long 
 11715 ;;  a               4   71[COMRAM] long 
 11716 ;; Auto vars:     Size  Location     Type
 11717 ;;		None
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  4   67[COMRAM] long 
 11720 ;; Registers used:
 11721 ;;		wreg, status,2, status,0, cstack
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11727 ;;      Params:         8       0       0       0       0       0       0       0       0
 11728 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11730 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11731 ;;Total ram usage:        8 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; Hardware stack levels required when called:    3
 11734 ;; This function calls:
 11735 ;;		___fladd
 11736 ;; This function is called by:
 11737 ;;		_PID
 11738 ;;		_efgtoa
 11739 ;;		_roundf
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           	psect	text42
 11744  0054BE                     __ptext42:
 11745                           	opt callstack 0
 11746  0054BE                     ___flsub:
 11747                           	opt callstack 22
 11748  0054BE  0E00               	movlw	0
 11749  0054C0  1A48               	xorwf	___flsub@a^0,f,c
 11750  0054C2  0E00               	movlw	0
 11751  0054C4  1A49               	xorwf	(___flsub@a+1)^0,f,c
 11752  0054C6  0E00               	movlw	0
 11753  0054C8  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 11754  0054CA  0E80               	movlw	128
 11755  0054CC  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 11756  0054CE  C044  F034         	movff	___flsub@b,___fladd@b
 11757  0054D2  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 11758  0054D6  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 11759  0054DA  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 11760  0054DE  C048  F038         	movff	___flsub@a,___fladd@a
 11761  0054E2  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 11762  0054E6  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 11763  0054EA  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 11764  0054EE  EC58  F00C         	call	___fladd	;wreg free
 11765  0054F2  C034  F044         	movff	?___fladd,?___flsub
 11766  0054F6  C035  F045         	movff	?___fladd+1,?___flsub+1
 11767  0054FA  C036  F046         	movff	?___fladd+2,?___flsub+2
 11768  0054FE  C037  F047         	movff	?___fladd+3,?___flsub+3
 11769  005502  0012               	return		;funcret
 11770  005504                     __end_of___flsub:
 11771                           	opt callstack 0
 11772                           
 11773 ;; *************** function ___fladd *****************
 11774 ;; Defined at:
 11775 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11776 ;; Parameters:    Size  Location     Type
 11777 ;;  b               4   51[COMRAM] long 
 11778 ;;  a               4   55[COMRAM] long 
 11779 ;; Auto vars:     Size  Location     Type
 11780 ;;  grs             1   66[COMRAM] unsigned char 
 11781 ;;  bexp            1   65[COMRAM] unsigned char 
 11782 ;;  aexp            1   64[COMRAM] unsigned char 
 11783 ;;  signs           1   63[COMRAM] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  4   51[COMRAM] unsigned char 
 11786 ;; Registers used:
 11787 ;;		wreg, status,2, status,0
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11793 ;;      Params:         8       0       0       0       0       0       0       0       0
 11794 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11795 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11796 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11797 ;;Total ram usage:       16 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:    2
 11800 ;; This function calls:
 11801 ;;		Nothing
 11802 ;; This function is called by:
 11803 ;;		_leerSensores
 11804 ;;		_PID
 11805 ;;		_efgtoa
 11806 ;;		___flsub
 11807 ;;		_roundf
 11808 ;; This function uses a non-reentrant model
 11809 ;;
 11810                           
 11811                           	psect	text43
 11812  0018B0                     __ptext43:
 11813                           	opt callstack 0
 11814  0018B0                     ___fladd:
 11815                           	opt callstack 22
 11816  0018B0  5037               	movf	(___fladd@b+3)^0,w,c
 11817  0018B2  0B80               	andlw	128
 11818  0018B4  6E40               	movwf	___fladd@signs^0,c
 11819  0018B6  5037               	movf	(___fladd@b+3)^0,w,c
 11820  0018B8  2437               	addwf	(___fladd@b+3)^0,w,c
 11821  0018BA  6E42               	movwf	___fladd@bexp^0,c
 11822  0018BC  AE36               	btfss	(___fladd@b+2)^0,7,c
 11823  0018BE  EF63  F00C         	goto	u8261
 11824  0018C2  EF65  F00C         	goto	u8260
 11825  0018C6                     u8261:
 11826  0018C6  EF66  F00C         	goto	l8213
 11827  0018CA                     u8260:
 11828  0018CA  8042               	bsf	___fladd@bexp^0,0,c
 11829  0018CC                     l8213:
 11830  0018CC  5042               	movf	___fladd@bexp^0,w,c
 11831  0018CE  B4D8               	btfsc	status,2,c
 11832  0018D0  EF6C  F00C         	goto	u8271
 11833  0018D4  EF6E  F00C         	goto	u8270
 11834  0018D8                     u8271:
 11835  0018D8  EF83  F00C         	goto	l8223
 11836  0018DC                     u8270:
 11837  0018DC  2842               	incf	___fladd@bexp^0,w,c
 11838  0018DE  A4D8               	btfss	status,2,c
 11839  0018E0  EF74  F00C         	goto	u8281
 11840  0018E4  EF76  F00C         	goto	u8280
 11841  0018E8                     u8281:
 11842  0018E8  EF7E  F00C         	goto	l8219
 11843  0018EC                     u8280:
 11844  0018EC  0E00               	movlw	0
 11845  0018EE  6E34               	movwf	___fladd@b^0,c
 11846  0018F0  0E00               	movlw	0
 11847  0018F2  6E35               	movwf	(___fladd@b+1)^0,c
 11848  0018F4  0E00               	movlw	0
 11849  0018F6  6E36               	movwf	(___fladd@b+2)^0,c
 11850  0018F8  0E00               	movlw	0
 11851  0018FA  6E37               	movwf	(___fladd@b+3)^0,c
 11852  0018FC                     l8219:
 11853  0018FC  8E36               	bsf	(___fladd@b+2)^0,7,c
 11854  0018FE  0E00               	movlw	0
 11855  001900  6E37               	movwf	(___fladd@b+3)^0,c
 11856  001902  EF8B  F00C         	goto	l8225
 11857  001906                     l8223:
 11858  001906  0E00               	movlw	0
 11859  001908  6E34               	movwf	___fladd@b^0,c
 11860  00190A  0E00               	movlw	0
 11861  00190C  6E35               	movwf	(___fladd@b+1)^0,c
 11862  00190E  0E00               	movlw	0
 11863  001910  6E36               	movwf	(___fladd@b+2)^0,c
 11864  001912  0E00               	movlw	0
 11865  001914  6E37               	movwf	(___fladd@b+3)^0,c
 11866  001916                     l8225:
 11867  001916  503B               	movf	(___fladd@a+3)^0,w,c
 11868  001918  0B80               	andlw	128
 11869  00191A  6E41               	movwf	___fladd@aexp^0,c
 11870  00191C  5040               	movf	___fladd@signs^0,w,c
 11871  00191E  1841               	xorwf	___fladd@aexp^0,w,c
 11872  001920  B4D8               	btfsc	status,2,c
 11873  001922  EF95  F00C         	goto	u8291
 11874  001926  EF97  F00C         	goto	u8290
 11875  00192A                     u8291:
 11876  00192A  EF98  F00C         	goto	l8231
 11877  00192E                     u8290:
 11878  00192E  8C40               	bsf	___fladd@signs^0,6,c
 11879  001930                     l8231:
 11880  001930  503B               	movf	(___fladd@a+3)^0,w,c
 11881  001932  243B               	addwf	(___fladd@a+3)^0,w,c
 11882  001934  6E41               	movwf	___fladd@aexp^0,c
 11883  001936  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11884  001938  EFA0  F00C         	goto	u8301
 11885  00193C  EFA2  F00C         	goto	u8300
 11886  001940                     u8301:
 11887  001940  EFA3  F00C         	goto	l8237
 11888  001944                     u8300:
 11889  001944  8041               	bsf	___fladd@aexp^0,0,c
 11890  001946                     l8237:
 11891  001946  5041               	movf	___fladd@aexp^0,w,c
 11892  001948  B4D8               	btfsc	status,2,c
 11893  00194A  EFA9  F00C         	goto	u8311
 11894  00194E  EFAB  F00C         	goto	u8310
 11895  001952                     u8311:
 11896  001952  EFC0  F00C         	goto	l8247
 11897  001956                     u8310:
 11898  001956  2841               	incf	___fladd@aexp^0,w,c
 11899  001958  A4D8               	btfss	status,2,c
 11900  00195A  EFB1  F00C         	goto	u8321
 11901  00195E  EFB3  F00C         	goto	u8320
 11902  001962                     u8321:
 11903  001962  EFBB  F00C         	goto	l8243
 11904  001966                     u8320:
 11905  001966  0E00               	movlw	0
 11906  001968  6E38               	movwf	___fladd@a^0,c
 11907  00196A  0E00               	movlw	0
 11908  00196C  6E39               	movwf	(___fladd@a+1)^0,c
 11909  00196E  0E00               	movlw	0
 11910  001970  6E3A               	movwf	(___fladd@a+2)^0,c
 11911  001972  0E00               	movlw	0
 11912  001974  6E3B               	movwf	(___fladd@a+3)^0,c
 11913  001976                     l8243:
 11914  001976  8E3A               	bsf	(___fladd@a+2)^0,7,c
 11915  001978  0E00               	movlw	0
 11916  00197A  6E3B               	movwf	(___fladd@a+3)^0,c
 11917  00197C  EFC8  F00C         	goto	l8249
 11918  001980                     l8247:
 11919  001980  0E00               	movlw	0
 11920  001982  6E38               	movwf	___fladd@a^0,c
 11921  001984  0E00               	movlw	0
 11922  001986  6E39               	movwf	(___fladd@a+1)^0,c
 11923  001988  0E00               	movlw	0
 11924  00198A  6E3A               	movwf	(___fladd@a+2)^0,c
 11925  00198C  0E00               	movlw	0
 11926  00198E  6E3B               	movwf	(___fladd@a+3)^0,c
 11927  001990                     l8249:
 11928  001990  5042               	movf	___fladd@bexp^0,w,c
 11929  001992  5C41               	subwf	___fladd@aexp^0,w,c
 11930  001994  B0D8               	btfsc	status,0,c
 11931  001996  EFCF  F00C         	goto	u8331
 11932  00199A  EFD1  F00C         	goto	u8330
 11933  00199E                     u8331:
 11934  00199E  EFF8  F00C         	goto	l8285
 11935  0019A2                     u8330:
 11936  0019A2  AC40               	btfss	___fladd@signs^0,6,c
 11937  0019A4  EFD6  F00C         	goto	u8341
 11938  0019A8  EFD8  F00C         	goto	u8340
 11939  0019AC                     u8341:
 11940  0019AC  EFDA  F00C         	goto	l8255
 11941  0019B0                     u8340:
 11942  0019B0  0E80               	movlw	128
 11943  0019B2  1A40               	xorwf	___fladd@signs^0,f,c
 11944  0019B4                     l8255:
 11945  0019B4  C042  F043         	movff	___fladd@bexp,___fladd@grs
 11946  0019B8  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11947  0019BC  C043  F041         	movff	___fladd@grs,___fladd@aexp
 11948  0019C0  C034  F043         	movff	___fladd@b,___fladd@grs
 11949  0019C4  C038  F034         	movff	___fladd@a,___fladd@b
 11950  0019C8  C043  F038         	movff	___fladd@grs,___fladd@a
 11951  0019CC  C035  F043         	movff	___fladd@b+1,___fladd@grs
 11952  0019D0  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 11953  0019D4  C043  F039         	movff	___fladd@grs,___fladd@a+1
 11954  0019D8  C036  F043         	movff	___fladd@b+2,___fladd@grs
 11955  0019DC  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 11956  0019E0  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 11957  0019E4  C037  F043         	movff	___fladd@b+3,___fladd@grs
 11958  0019E8  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 11959  0019EC  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 11960  0019F0                     l8285:
 11961  0019F0  0E00               	movlw	0
 11962  0019F2  6E43               	movwf	___fladd@grs^0,c
 11963  0019F4  5042               	movf	___fladd@bexp^0,w,c
 11964  0019F6  C041  F03C         	movff	___fladd@aexp,??___fladd
 11965  0019FA  6A3D               	clrf	(??___fladd+1)^0,c
 11966  0019FC  5E3C               	subwf	??___fladd^0,f,c
 11967  0019FE  0E00               	movlw	0
 11968  001A00  5A3D               	subwfb	(??___fladd+1)^0,f,c
 11969  001A02  BE3D               	btfsc	(??___fladd+1)^0,7,c
 11970  001A04  EF0D  F00D         	goto	u8351
 11971  001A08  503D               	movf	(??___fladd+1)^0,w,c
 11972  001A0A  E109               	bnz	u8350
 11973  001A0C  0E1A               	movlw	26
 11974  001A0E  5C3C               	subwf	??___fladd^0,w,c
 11975  001A10  A0D8               	btfss	status,0,c
 11976  001A12  EF0D  F00D         	goto	u8351
 11977  001A16  EF0F  F00D         	goto	u8350
 11978  001A1A                     u8351:
 11979  001A1A  EF46  F00D         	goto	l1478
 11980  001A1E                     u8350:
 11981  001A1E  5034               	movf	___fladd@b^0,w,c
 11982  001A20  1035               	iorwf	(___fladd@b+1)^0,w,c
 11983  001A22  1036               	iorwf	(___fladd@b+2)^0,w,c
 11984  001A24  1037               	iorwf	(___fladd@b+3)^0,w,c
 11985  001A26  A4D8               	btfss	status,2,c
 11986  001A28  EF18  F00D         	goto	u8361
 11987  001A2C  EF1B  F00D         	goto	u8360
 11988  001A30                     u8361:
 11989  001A30  0E01               	movlw	1
 11990  001A32  EF1C  F00D         	goto	u8370
 11991  001A36                     u8360:
 11992  001A36  0E00               	movlw	0
 11993  001A38                     u8370:
 11994  001A38  6E43               	movwf	___fladd@grs^0,c
 11995  001A3A  0E00               	movlw	0
 11996  001A3C  6E34               	movwf	___fladd@b^0,c
 11997  001A3E  0E00               	movlw	0
 11998  001A40  6E35               	movwf	(___fladd@b+1)^0,c
 11999  001A42  0E00               	movlw	0
 12000  001A44  6E36               	movwf	(___fladd@b+2)^0,c
 12001  001A46  0E00               	movlw	0
 12002  001A48  6E37               	movwf	(___fladd@b+3)^0,c
 12003  001A4A  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 12004  001A4E  EF4F  F00D         	goto	l1477
 12005  001A52                     l1479:
 12006  001A52  A043               	btfss	___fladd@grs^0,0,c
 12007  001A54  EF2E  F00D         	goto	u8381
 12008  001A58  EF30  F00D         	goto	u8380
 12009  001A5C                     u8381:
 12010  001A5C  EF36  F00D         	goto	l8297
 12011  001A60                     u8380:
 12012  001A60  90D8               	bcf	status,0,c
 12013  001A62  3043               	rrcf	___fladd@grs^0,w,c
 12014  001A64  0901               	iorlw	1
 12015  001A66  6E43               	movwf	___fladd@grs^0,c
 12016  001A68  EF38  F00D         	goto	l8299
 12017  001A6C                     l8297:
 12018  001A6C  90D8               	bcf	status,0,c
 12019  001A6E  3243               	rrcf	___fladd@grs^0,f,c
 12020  001A70                     l8299:
 12021  001A70  A034               	btfss	___fladd@b^0,0,c
 12022  001A72  EF3D  F00D         	goto	u8391
 12023  001A76  EF3F  F00D         	goto	u8390
 12024  001A7A                     u8391:
 12025  001A7A  EF40  F00D         	goto	l8303
 12026  001A7E                     u8390:
 12027  001A7E  8E43               	bsf	___fladd@grs^0,7,c
 12028  001A80                     l8303:
 12029  001A80  3437               	rlcf	(___fladd@b+3)^0,w,c
 12030  001A82  3237               	rrcf	(___fladd@b+3)^0,f,c
 12031  001A84  3236               	rrcf	(___fladd@b+2)^0,f,c
 12032  001A86  3235               	rrcf	(___fladd@b+1)^0,f,c
 12033  001A88  3234               	rrcf	___fladd@b^0,f,c
 12034  001A8A  2A42               	incf	___fladd@bexp^0,f,c
 12035  001A8C                     l1478:
 12036  001A8C  5041               	movf	___fladd@aexp^0,w,c
 12037  001A8E  5C42               	subwf	___fladd@bexp^0,w,c
 12038  001A90  A0D8               	btfss	status,0,c
 12039  001A92  EF4D  F00D         	goto	u8401
 12040  001A96  EF4F  F00D         	goto	u8400
 12041  001A9A                     u8401:
 12042  001A9A  EF29  F00D         	goto	l1479
 12043  001A9E                     u8400:
 12044  001A9E                     l1477:
 12045  001A9E  BC40               	btfsc	___fladd@signs^0,6,c
 12046  001AA0  EF54  F00D         	goto	u8411
 12047  001AA4  EF56  F00D         	goto	u8410
 12048  001AA8                     u8411:
 12049  001AA8  EF96  F00D         	goto	l8331
 12050  001AAC                     u8410:
 12051  001AAC  5042               	movf	___fladd@bexp^0,w,c
 12052  001AAE  A4D8               	btfss	status,2,c
 12053  001AB0  EF5C  F00D         	goto	u8421
 12054  001AB4  EF5E  F00D         	goto	u8420
 12055  001AB8                     u8421:
 12056  001AB8  EF68  F00D         	goto	l8313
 12057  001ABC                     u8420:
 12058  001ABC  0E00               	movlw	0
 12059  001ABE  6E34               	movwf	?___fladd^0,c
 12060  001AC0  0E00               	movlw	0
 12061  001AC2  6E35               	movwf	(?___fladd+1)^0,c
 12062  001AC4  0E00               	movlw	0
 12063  001AC6  6E36               	movwf	(?___fladd+2)^0,c
 12064  001AC8  0E00               	movlw	0
 12065  001ACA  6E37               	movwf	(?___fladd+3)^0,c
 12066  001ACC  EFB7  F00E         	goto	l1486
 12067  001AD0                     l8313:
 12068  001AD0  5038               	movf	___fladd@a^0,w,c
 12069  001AD2  2634               	addwf	___fladd@b^0,f,c
 12070  001AD4  5039               	movf	(___fladd@a+1)^0,w,c
 12071  001AD6  2235               	addwfc	(___fladd@b+1)^0,f,c
 12072  001AD8  503A               	movf	(___fladd@a+2)^0,w,c
 12073  001ADA  2236               	addwfc	(___fladd@b+2)^0,f,c
 12074  001ADC  503B               	movf	(___fladd@a+3)^0,w,c
 12075  001ADE  2237               	addwfc	(___fladd@b+3)^0,f,c
 12076  001AE0  A037               	btfss	(___fladd@b+3)^0,0,c
 12077  001AE2  EF75  F00D         	goto	u8431
 12078  001AE6  EF77  F00D         	goto	u8430
 12079  001AEA                     u8431:
 12080  001AEA  EF23  F00E         	goto	l8367
 12081  001AEE                     u8430:
 12082  001AEE  A043               	btfss	___fladd@grs^0,0,c
 12083  001AF0  EF7C  F00D         	goto	u8441
 12084  001AF4  EF7E  F00D         	goto	u8440
 12085  001AF8                     u8441:
 12086  001AF8  EF84  F00D         	goto	l8321
 12087  001AFC                     u8440:
 12088  001AFC  90D8               	bcf	status,0,c
 12089  001AFE  3043               	rrcf	___fladd@grs^0,w,c
 12090  001B00  0901               	iorlw	1
 12091  001B02  6E43               	movwf	___fladd@grs^0,c
 12092  001B04  EF86  F00D         	goto	l8323
 12093  001B08                     l8321:
 12094  001B08  90D8               	bcf	status,0,c
 12095  001B0A  3243               	rrcf	___fladd@grs^0,f,c
 12096  001B0C                     l8323:
 12097  001B0C  A034               	btfss	___fladd@b^0,0,c
 12098  001B0E  EF8B  F00D         	goto	u8451
 12099  001B12  EF8D  F00D         	goto	u8450
 12100  001B16                     u8451:
 12101  001B16  EF8E  F00D         	goto	l8327
 12102  001B1A                     u8450:
 12103  001B1A  8E43               	bsf	___fladd@grs^0,7,c
 12104  001B1C                     l8327:
 12105  001B1C  3437               	rlcf	(___fladd@b+3)^0,w,c
 12106  001B1E  3237               	rrcf	(___fladd@b+3)^0,f,c
 12107  001B20  3236               	rrcf	(___fladd@b+2)^0,f,c
 12108  001B22  3235               	rrcf	(___fladd@b+1)^0,f,c
 12109  001B24  3234               	rrcf	___fladd@b^0,f,c
 12110  001B26  2A42               	incf	___fladd@bexp^0,f,c
 12111  001B28  EF23  F00E         	goto	l8367
 12112  001B2C                     l8331:
 12113  001B2C  5038               	movf	___fladd@a^0,w,c
 12114  001B2E  5C34               	subwf	___fladd@b^0,w,c
 12115  001B30  5039               	movf	(___fladd@a+1)^0,w,c
 12116  001B32  5835               	subwfb	(___fladd@b+1)^0,w,c
 12117  001B34  503A               	movf	(___fladd@a+2)^0,w,c
 12118  001B36  5836               	subwfb	(___fladd@b+2)^0,w,c
 12119  001B38  5037               	movf	(___fladd@b+3)^0,w,c
 12120  001B3A  0A80               	xorlw	128
 12121  001B3C  6E3C               	movwf	??___fladd^0,c
 12122  001B3E  503B               	movf	(___fladd@a+3)^0,w,c
 12123  001B40  0A80               	xorlw	128
 12124  001B42  583C               	subwfb	??___fladd^0,w,c
 12125  001B44  B0D8               	btfsc	status,0,c
 12126  001B46  EFA7  F00D         	goto	u8461
 12127  001B4A  EFA9  F00D         	goto	u8460
 12128  001B4E                     u8461:
 12129  001B4E  EFD4  F00D         	goto	l8341
 12130  001B52                     u8460:
 12131  001B52  5034               	movf	___fladd@b^0,w,c
 12132  001B54  5C38               	subwf	___fladd@a^0,w,c
 12133  001B56  6E3C               	movwf	??___fladd^0,c
 12134  001B58  5035               	movf	(___fladd@b+1)^0,w,c
 12135  001B5A  5839               	subwfb	(___fladd@a+1)^0,w,c
 12136  001B5C  6E3D               	movwf	(??___fladd+1)^0,c
 12137  001B5E  5036               	movf	(___fladd@b+2)^0,w,c
 12138  001B60  583A               	subwfb	(___fladd@a+2)^0,w,c
 12139  001B62  6E3E               	movwf	(??___fladd+2)^0,c
 12140  001B64  5037               	movf	(___fladd@b+3)^0,w,c
 12141  001B66  583B               	subwfb	(___fladd@a+3)^0,w,c
 12142  001B68  6E3F               	movwf	(??___fladd+3)^0,c
 12143  001B6A  0EFF               	movlw	255
 12144  001B6C  243C               	addwf	??___fladd^0,w,c
 12145  001B6E  6E34               	movwf	___fladd@b^0,c
 12146  001B70  0EFF               	movlw	255
 12147  001B72  203D               	addwfc	(??___fladd+1)^0,w,c
 12148  001B74  6E35               	movwf	(___fladd@b+1)^0,c
 12149  001B76  0EFF               	movlw	255
 12150  001B78  203E               	addwfc	(??___fladd+2)^0,w,c
 12151  001B7A  6E36               	movwf	(___fladd@b+2)^0,c
 12152  001B7C  0EFF               	movlw	255
 12153  001B7E  203F               	addwfc	(??___fladd+3)^0,w,c
 12154  001B80  6E37               	movwf	(___fladd@b+3)^0,c
 12155  001B82  0E80               	movlw	128
 12156  001B84  1A40               	xorwf	___fladd@signs^0,f,c
 12157  001B86  6C43               	negf	___fladd@grs^0,c
 12158  001B88  5043               	movf	___fladd@grs^0,w,c
 12159  001B8A  A4D8               	btfss	status,2,c
 12160  001B8C  EFCA  F00D         	goto	u8471
 12161  001B90  EFCC  F00D         	goto	u8470
 12162  001B94                     u8471:
 12163  001B94  EFDC  F00D         	goto	l1494
 12164  001B98                     u8470:
 12165  001B98  0E01               	movlw	1
 12166  001B9A  2634               	addwf	___fladd@b^0,f,c
 12167  001B9C  0E00               	movlw	0
 12168  001B9E  2235               	addwfc	(___fladd@b+1)^0,f,c
 12169  001BA0  2236               	addwfc	(___fladd@b+2)^0,f,c
 12170  001BA2  2237               	addwfc	(___fladd@b+3)^0,f,c
 12171  001BA4  EFDC  F00D         	goto	l1494
 12172  001BA8                     l8341:
 12173  001BA8  5038               	movf	___fladd@a^0,w,c
 12174  001BAA  5E34               	subwf	___fladd@b^0,f,c
 12175  001BAC  5039               	movf	(___fladd@a+1)^0,w,c
 12176  001BAE  5A35               	subwfb	(___fladd@b+1)^0,f,c
 12177  001BB0  503A               	movf	(___fladd@a+2)^0,w,c
 12178  001BB2  5A36               	subwfb	(___fladd@b+2)^0,f,c
 12179  001BB4  503B               	movf	(___fladd@a+3)^0,w,c
 12180  001BB6  5A37               	subwfb	(___fladd@b+3)^0,f,c
 12181  001BB8                     l1494:
 12182  001BB8  5034               	movf	___fladd@b^0,w,c
 12183  001BBA  1035               	iorwf	(___fladd@b+1)^0,w,c
 12184  001BBC  1036               	iorwf	(___fladd@b+2)^0,w,c
 12185  001BBE  1037               	iorwf	(___fladd@b+3)^0,w,c
 12186  001BC0  A4D8               	btfss	status,2,c
 12187  001BC2  EFE5  F00D         	goto	u8481
 12188  001BC6  EFE7  F00D         	goto	u8480
 12189  001BCA                     u8481:
 12190  001BCA  EF1C  F00E         	goto	l8365
 12191  001BCE                     u8480:
 12192  001BCE  5043               	movf	___fladd@grs^0,w,c
 12193  001BD0  A4D8               	btfss	status,2,c
 12194  001BD2  EFED  F00D         	goto	u8491
 12195  001BD6  EFEF  F00D         	goto	u8490
 12196  001BDA                     u8491:
 12197  001BDA  EF1C  F00E         	goto	l8365
 12198  001BDE                     u8490:
 12199  001BDE  0E00               	movlw	0
 12200  001BE0  6E34               	movwf	?___fladd^0,c
 12201  001BE2  0E00               	movlw	0
 12202  001BE4  6E35               	movwf	(?___fladd+1)^0,c
 12203  001BE6  0E00               	movlw	0
 12204  001BE8  6E36               	movwf	(?___fladd+2)^0,c
 12205  001BEA  0E00               	movlw	0
 12206  001BEC  6E37               	movwf	(?___fladd+3)^0,c
 12207  001BEE  EFB7  F00E         	goto	l1486
 12208  001BF2                     l8349:
 12209  001BF2  90D8               	bcf	status,0,c
 12210  001BF4  3634               	rlcf	___fladd@b^0,f,c
 12211  001BF6  3635               	rlcf	(___fladd@b+1)^0,f,c
 12212  001BF8  3636               	rlcf	(___fladd@b+2)^0,f,c
 12213  001BFA  3637               	rlcf	(___fladd@b+3)^0,f,c
 12214  001BFC  AE43               	btfss	___fladd@grs^0,7,c
 12215  001BFE  EF03  F00E         	goto	u8501
 12216  001C02  EF05  F00E         	goto	u8500
 12217  001C06                     u8501:
 12218  001C06  EF06  F00E         	goto	l8355
 12219  001C0A                     u8500:
 12220  001C0A  8034               	bsf	___fladd@b^0,0,c
 12221  001C0C                     l8355:
 12222  001C0C  A043               	btfss	___fladd@grs^0,0,c
 12223  001C0E  EF0B  F00E         	goto	u8511
 12224  001C12  EF0D  F00E         	goto	u8510
 12225  001C16                     u8511:
 12226  001C16  EF11  F00E         	goto	l8359
 12227  001C1A                     u8510:
 12228  001C1A  80D8               	bsf	status,0,c
 12229  001C1C  3643               	rlcf	___fladd@grs^0,f,c
 12230  001C1E  EF13  F00E         	goto	l8361
 12231  001C22                     l8359:
 12232  001C22  90D8               	bcf	status,0,c
 12233  001C24  3643               	rlcf	___fladd@grs^0,f,c
 12234  001C26                     l8361:
 12235  001C26  5042               	movf	___fladd@bexp^0,w,c
 12236  001C28  B4D8               	btfsc	status,2,c
 12237  001C2A  EF19  F00E         	goto	u8521
 12238  001C2E  EF1B  F00E         	goto	u8520
 12239  001C32                     u8521:
 12240  001C32  EF1C  F00E         	goto	l8365
 12241  001C36                     u8520:
 12242  001C36  0642               	decf	___fladd@bexp^0,f,c
 12243  001C38                     l8365:
 12244  001C38  AE36               	btfss	(___fladd@b+2)^0,7,c
 12245  001C3A  EF21  F00E         	goto	u8531
 12246  001C3E  EF23  F00E         	goto	u8530
 12247  001C42                     u8531:
 12248  001C42  EFF9  F00D         	goto	l8349
 12249  001C46                     u8530:
 12250  001C46                     l8367:
 12251  001C46  0E00               	movlw	0
 12252  001C48  6E41               	movwf	___fladd@aexp^0,c
 12253  001C4A  AE43               	btfss	___fladd@grs^0,7,c
 12254  001C4C  EF2A  F00E         	goto	u8541
 12255  001C50  EF2C  F00E         	goto	u8540
 12256  001C54                     u8541:
 12257  001C54  EF44  F00E         	goto	l1503
 12258  001C58                     u8540:
 12259  001C58  C043  F03C         	movff	___fladd@grs,??___fladd
 12260  001C5C  0E7F               	movlw	127
 12261  001C5E  163C               	andwf	??___fladd^0,f,c
 12262  001C60  B4D8               	btfsc	status,2,c
 12263  001C62  EF35  F00E         	goto	u8551
 12264  001C66  EF37  F00E         	goto	u8550
 12265  001C6A                     u8551:
 12266  001C6A  EF3B  F00E         	goto	l1504
 12267  001C6E                     u8550:
 12268  001C6E                     l8373:
 12269  001C6E  0E01               	movlw	1
 12270  001C70  6E41               	movwf	___fladd@aexp^0,c
 12271  001C72  EF44  F00E         	goto	l1503
 12272  001C76                     l1504:
 12273  001C76  A034               	btfss	___fladd@b^0,0,c
 12274  001C78  EF40  F00E         	goto	u8561
 12275  001C7C  EF42  F00E         	goto	u8560
 12276  001C80                     u8561:
 12277  001C80  EF44  F00E         	goto	l1503
 12278  001C84                     u8560:
 12279  001C84  EF37  F00E         	goto	l8373
 12280  001C88                     l1503:
 12281  001C88  5041               	movf	___fladd@aexp^0,w,c
 12282  001C8A  B4D8               	btfsc	status,2,c
 12283  001C8C  EF4A  F00E         	goto	u8571
 12284  001C90  EF4C  F00E         	goto	u8570
 12285  001C94                     u8571:
 12286  001C94  EF77  F00E         	goto	l8385
 12287  001C98                     u8570:
 12288  001C98  0E01               	movlw	1
 12289  001C9A  2634               	addwf	___fladd@b^0,f,c
 12290  001C9C  0E00               	movlw	0
 12291  001C9E  2235               	addwfc	(___fladd@b+1)^0,f,c
 12292  001CA0  2236               	addwfc	(___fladd@b+2)^0,f,c
 12293  001CA2  2237               	addwfc	(___fladd@b+3)^0,f,c
 12294  001CA4  A037               	btfss	(___fladd@b+3)^0,0,c
 12295  001CA6  EF57  F00E         	goto	u8581
 12296  001CAA  EF59  F00E         	goto	u8580
 12297  001CAE                     u8581:
 12298  001CAE  EF77  F00E         	goto	l8385
 12299  001CB2                     u8580:
 12300  001CB2  C034  F03C         	movff	___fladd@b,??___fladd
 12301  001CB6  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 12302  001CBA  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 12303  001CBE  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 12304  001CC2  343F               	rlcf	(??___fladd+3)^0,w,c
 12305  001CC4  323F               	rrcf	(??___fladd+3)^0,f,c
 12306  001CC6  323E               	rrcf	(??___fladd+2)^0,f,c
 12307  001CC8  323D               	rrcf	(??___fladd+1)^0,f,c
 12308  001CCA  323C               	rrcf	??___fladd^0,f,c
 12309  001CCC  C03C  F034         	movff	??___fladd,___fladd@b
 12310  001CD0  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 12311  001CD4  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 12312  001CD8  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 12313  001CDC  2842               	incf	___fladd@bexp^0,w,c
 12314  001CDE  B4D8               	btfsc	status,2,c
 12315  001CE0  EF74  F00E         	goto	u8591
 12316  001CE4  EF76  F00E         	goto	u8590
 12317  001CE8                     u8591:
 12318  001CE8  EF77  F00E         	goto	l8385
 12319  001CEC                     u8590:
 12320  001CEC  2A42               	incf	___fladd@bexp^0,f,c
 12321  001CEE                     l8385:
 12322  001CEE  2842               	incf	___fladd@bexp^0,w,c
 12323  001CF0  B4D8               	btfsc	status,2,c
 12324  001CF2  EF7D  F00E         	goto	u8601
 12325  001CF6  EF7F  F00E         	goto	u8600
 12326  001CFA                     u8601:
 12327  001CFA  EF87  F00E         	goto	l8389
 12328  001CFE                     u8600:
 12329  001CFE  5042               	movf	___fladd@bexp^0,w,c
 12330  001D00  A4D8               	btfss	status,2,c
 12331  001D02  EF85  F00E         	goto	u8611
 12332  001D06  EF87  F00E         	goto	u8610
 12333  001D0A                     u8611:
 12334  001D0A  EF99  F00E         	goto	l8393
 12335  001D0E                     u8610:
 12336  001D0E                     l8389:
 12337  001D0E  0E00               	movlw	0
 12338  001D10  6E34               	movwf	___fladd@b^0,c
 12339  001D12  0E00               	movlw	0
 12340  001D14  6E35               	movwf	(___fladd@b+1)^0,c
 12341  001D16  0E00               	movlw	0
 12342  001D18  6E36               	movwf	(___fladd@b+2)^0,c
 12343  001D1A  0E00               	movlw	0
 12344  001D1C  6E37               	movwf	(___fladd@b+3)^0,c
 12345  001D1E  5042               	movf	___fladd@bexp^0,w,c
 12346  001D20  A4D8               	btfss	status,2,c
 12347  001D22  EF95  F00E         	goto	u8621
 12348  001D26  EF97  F00E         	goto	u8620
 12349  001D2A                     u8621:
 12350  001D2A  EF99  F00E         	goto	l8393
 12351  001D2E                     u8620:
 12352  001D2E  0E00               	movlw	0
 12353  001D30  6E40               	movwf	___fladd@signs^0,c
 12354  001D32                     l8393:
 12355  001D32  A042               	btfss	___fladd@bexp^0,0,c
 12356  001D34  EF9E  F00E         	goto	u8631
 12357  001D38  EFA0  F00E         	goto	u8630
 12358  001D3C                     u8631:
 12359  001D3C  EFA3  F00E         	goto	l8397
 12360  001D40                     u8630:
 12361  001D40  8E36               	bsf	(___fladd@b+2)^0,7,c
 12362  001D42  EFA4  F00E         	goto	l8399
 12363  001D46                     l8397:
 12364  001D46  9E36               	bcf	(___fladd@b+2)^0,7,c
 12365  001D48                     l8399:
 12366  001D48  90D8               	bcf	status,0,c
 12367  001D4A  3042               	rrcf	___fladd@bexp^0,w,c
 12368  001D4C  6E37               	movwf	(___fladd@b+3)^0,c
 12369  001D4E  AE40               	btfss	___fladd@signs^0,7,c
 12370  001D50  EFAC  F00E         	goto	u8641
 12371  001D54  EFAE  F00E         	goto	u8640
 12372  001D58                     u8641:
 12373  001D58  EFAF  F00E         	goto	l8405
 12374  001D5C                     u8640:
 12375  001D5C  8E37               	bsf	(___fladd@b+3)^0,7,c
 12376  001D5E                     l8405:
 12377  001D5E  C034  F034         	movff	___fladd@b,?___fladd
 12378  001D62  C035  F035         	movff	___fladd@b+1,?___fladd+1
 12379  001D66  C036  F036         	movff	___fladd@b+2,?___fladd+2
 12380  001D6A  C037  F037         	movff	___fladd@b+3,?___fladd+3
 12381  001D6E                     l1486:
 12382  001D6E  0012               	return		;funcret
 12383  001D70                     __end_of___fladd:
 12384                           	opt callstack 0
 12385                           
 12386 ;; *************** function ___flneg *****************
 12387 ;; Defined at:
 12388 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12389 ;; Parameters:    Size  Location     Type
 12390 ;;  f1              4    5[COMRAM] unsigned char 
 12391 ;; Auto vars:     Size  Location     Type
 12392 ;;		None
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  4    5[COMRAM] unsigned char 
 12395 ;; Registers used:
 12396 ;;		wreg, status,2, status,0
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/0
 12399 ;;		On exit  : 0/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12402 ;;      Params:         4       0       0       0       0       0       0       0       0
 12403 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12404 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12405 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12406 ;;Total ram usage:        4 bytes
 12407 ;; Hardware stack levels used:    1
 12408 ;; Hardware stack levels required when called:    2
 12409 ;; This function calls:
 12410 ;;		Nothing
 12411 ;; This function is called by:
 12412 ;;		_efgtoa
 12413 ;;		_roundf
 12414 ;; This function uses a non-reentrant model
 12415 ;;
 12416                           
 12417                           	psect	text44
 12418  005646                     __ptext44:
 12419                           	opt callstack 0
 12420  005646                     ___flneg:
 12421                           	opt callstack 23
 12422  005646  5006               	movf	___flneg@f1^0,w,c
 12423  005648  1007               	iorwf	(___flneg@f1+1)^0,w,c
 12424  00564A  1008               	iorwf	(___flneg@f1+2)^0,w,c
 12425  00564C  1009               	iorwf	(___flneg@f1+3)^0,w,c
 12426  00564E  B4D8               	btfsc	status,2,c
 12427  005650  EF2C  F02B         	goto	u9691
 12428  005654  EF2E  F02B         	goto	u9690
 12429  005658                     u9691:
 12430  005658  EF36  F02B         	goto	l8989
 12431  00565C                     u9690:
 12432  00565C  0E00               	movlw	0
 12433  00565E  1A06               	xorwf	___flneg@f1^0,f,c
 12434  005660  0E00               	movlw	0
 12435  005662  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 12436  005664  0E00               	movlw	0
 12437  005666  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 12438  005668  0E80               	movlw	128
 12439  00566A  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 12440  00566C                     l8989:
 12441  00566C  C006  F006         	movff	___flneg@f1,?___flneg
 12442  005670  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 12443  005674  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 12444  005678  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 12445  00567C  0012               	return		;funcret
 12446  00567E                     __end_of___flneg:
 12447                           	opt callstack 0
 12448                           
 12449 ;; *************** function ___flmul *****************
 12450 ;; Defined at:
 12451 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  b               4   26[COMRAM] unsigned char 
 12454 ;;  a               4   30[COMRAM] unsigned char 
 12455 ;; Auto vars:     Size  Location     Type
 12456 ;;  prod            4   45[COMRAM] struct .
 12457 ;;  grs             4   40[COMRAM] unsigned long 
 12458 ;;  temp            2   49[COMRAM] struct .
 12459 ;;  bexp            1   44[COMRAM] unsigned char 
 12460 ;;  aexp            1   39[COMRAM] unsigned char 
 12461 ;;  sign            1   38[COMRAM] unsigned char 
 12462 ;; Return value:  Size  Location     Type
 12463 ;;                  4   26[COMRAM] unsigned char 
 12464 ;; Registers used:
 12465 ;;		wreg, status,2, status,0, prodl, prodh
 12466 ;; Tracked objects:
 12467 ;;		On entry : 0/0
 12468 ;;		On exit  : 0/0
 12469 ;;		Unchanged: 0/0
 12470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12471 ;;      Params:         8       0       0       0       0       0       0       0       0
 12472 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12473 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12474 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12475 ;;Total ram usage:       25 bytes
 12476 ;; Hardware stack levels used:    1
 12477 ;; Hardware stack levels required when called:    2
 12478 ;; This function calls:
 12479 ;;		Nothing
 12480 ;; This function is called by:
 12481 ;;		_pwmDuty
 12482 ;;		_PID
 12483 ;;		_efgtoa
 12484 ;;		_roundf
 12485 ;; This function uses a non-reentrant model
 12486 ;;
 12487                           
 12488                           	psect	text45
 12489  001D70                     __ptext45:
 12490                           	opt callstack 0
 12491  001D70                     ___flmul:
 12492                           	opt callstack 23
 12493  001D70  501E               	movf	(___flmul@b+3)^0,w,c
 12494  001D72  0B80               	andlw	128
 12495  001D74  6E27               	movwf	___flmul@sign^0,c
 12496  001D76  501E               	movf	(___flmul@b+3)^0,w,c
 12497  001D78  241E               	addwf	(___flmul@b+3)^0,w,c
 12498  001D7A  6E2D               	movwf	___flmul@bexp^0,c
 12499  001D7C  AE1D               	btfss	(___flmul@b+2)^0,7,c
 12500  001D7E  EFC3  F00E         	goto	u9301
 12501  001D82  EFC5  F00E         	goto	u9300
 12502  001D86                     u9301:
 12503  001D86  EFC6  F00E         	goto	l8737
 12504  001D8A                     u9300:
 12505  001D8A  802D               	bsf	___flmul@bexp^0,0,c
 12506  001D8C                     l8737:
 12507  001D8C  502D               	movf	___flmul@bexp^0,w,c
 12508  001D8E  B4D8               	btfsc	status,2,c
 12509  001D90  EFCC  F00E         	goto	u9311
 12510  001D94  EFCE  F00E         	goto	u9310
 12511  001D98                     u9311:
 12512  001D98  EFE1  F00E         	goto	l8745
 12513  001D9C                     u9310:
 12514  001D9C  282D               	incf	___flmul@bexp^0,w,c
 12515  001D9E  A4D8               	btfss	status,2,c
 12516  001DA0  EFD4  F00E         	goto	u9321
 12517  001DA4  EFD6  F00E         	goto	u9320
 12518  001DA8                     u9321:
 12519  001DA8  EFDE  F00E         	goto	l8743
 12520  001DAC                     u9320:
 12521  001DAC  0E00               	movlw	0
 12522  001DAE  6E1B               	movwf	___flmul@b^0,c
 12523  001DB0  0E00               	movlw	0
 12524  001DB2  6E1C               	movwf	(___flmul@b+1)^0,c
 12525  001DB4  0E00               	movlw	0
 12526  001DB6  6E1D               	movwf	(___flmul@b+2)^0,c
 12527  001DB8  0E00               	movlw	0
 12528  001DBA  6E1E               	movwf	(___flmul@b+3)^0,c
 12529  001DBC                     l8743:
 12530  001DBC  8E1D               	bsf	(___flmul@b+2)^0,7,c
 12531  001DBE  EFE9  F00E         	goto	l8747
 12532  001DC2                     l8745:
 12533  001DC2  0E00               	movlw	0
 12534  001DC4  6E1B               	movwf	___flmul@b^0,c
 12535  001DC6  0E00               	movlw	0
 12536  001DC8  6E1C               	movwf	(___flmul@b+1)^0,c
 12537  001DCA  0E00               	movlw	0
 12538  001DCC  6E1D               	movwf	(___flmul@b+2)^0,c
 12539  001DCE  0E00               	movlw	0
 12540  001DD0  6E1E               	movwf	(___flmul@b+3)^0,c
 12541  001DD2                     l8747:
 12542  001DD2  5022               	movf	(___flmul@a+3)^0,w,c
 12543  001DD4  0B80               	andlw	128
 12544  001DD6  1A27               	xorwf	___flmul@sign^0,f,c
 12545  001DD8  5022               	movf	(___flmul@a+3)^0,w,c
 12546  001DDA  2422               	addwf	(___flmul@a+3)^0,w,c
 12547  001DDC  6E28               	movwf	___flmul@aexp^0,c
 12548  001DDE  AE21               	btfss	(___flmul@a+2)^0,7,c
 12549  001DE0  EFF4  F00E         	goto	u9331
 12550  001DE4  EFF6  F00E         	goto	u9330
 12551  001DE8                     u9331:
 12552  001DE8  EFF7  F00E         	goto	l8755
 12553  001DEC                     u9330:
 12554  001DEC  8028               	bsf	___flmul@aexp^0,0,c
 12555  001DEE                     l8755:
 12556  001DEE  5028               	movf	___flmul@aexp^0,w,c
 12557  001DF0  B4D8               	btfsc	status,2,c
 12558  001DF2  EFFD  F00E         	goto	u9341
 12559  001DF6  EFFF  F00E         	goto	u9340
 12560  001DFA                     u9341:
 12561  001DFA  EF12  F00F         	goto	l8763
 12562  001DFE                     u9340:
 12563  001DFE  2828               	incf	___flmul@aexp^0,w,c
 12564  001E00  A4D8               	btfss	status,2,c
 12565  001E02  EF05  F00F         	goto	u9351
 12566  001E06  EF07  F00F         	goto	u9350
 12567  001E0A                     u9351:
 12568  001E0A  EF0F  F00F         	goto	l8761
 12569  001E0E                     u9350:
 12570  001E0E  0E00               	movlw	0
 12571  001E10  6E1F               	movwf	___flmul@a^0,c
 12572  001E12  0E00               	movlw	0
 12573  001E14  6E20               	movwf	(___flmul@a+1)^0,c
 12574  001E16  0E00               	movlw	0
 12575  001E18  6E21               	movwf	(___flmul@a+2)^0,c
 12576  001E1A  0E00               	movlw	0
 12577  001E1C  6E22               	movwf	(___flmul@a+3)^0,c
 12578  001E1E                     l8761:
 12579  001E1E  8E21               	bsf	(___flmul@a+2)^0,7,c
 12580  001E20  EF1A  F00F         	goto	l1563
 12581  001E24                     l8763:
 12582  001E24  0E00               	movlw	0
 12583  001E26  6E1F               	movwf	___flmul@a^0,c
 12584  001E28  0E00               	movlw	0
 12585  001E2A  6E20               	movwf	(___flmul@a+1)^0,c
 12586  001E2C  0E00               	movlw	0
 12587  001E2E  6E21               	movwf	(___flmul@a+2)^0,c
 12588  001E30  0E00               	movlw	0
 12589  001E32  6E22               	movwf	(___flmul@a+3)^0,c
 12590  001E34                     l1563:
 12591  001E34  5028               	movf	___flmul@aexp^0,w,c
 12592  001E36  B4D8               	btfsc	status,2,c
 12593  001E38  EF20  F00F         	goto	u9361
 12594  001E3C  EF22  F00F         	goto	u9360
 12595  001E40                     u9361:
 12596  001E40  EF2A  F00F         	goto	l8767
 12597  001E44                     u9360:
 12598  001E44  502D               	movf	___flmul@bexp^0,w,c
 12599  001E46  A4D8               	btfss	status,2,c
 12600  001E48  EF28  F00F         	goto	u9371
 12601  001E4C  EF2A  F00F         	goto	u9370
 12602  001E50                     u9371:
 12603  001E50  EF34  F00F         	goto	l8771
 12604  001E54                     u9370:
 12605  001E54                     l8767:
 12606  001E54  0E00               	movlw	0
 12607  001E56  6E1B               	movwf	?___flmul^0,c
 12608  001E58  0E00               	movlw	0
 12609  001E5A  6E1C               	movwf	(?___flmul+1)^0,c
 12610  001E5C  0E00               	movlw	0
 12611  001E5E  6E1D               	movwf	(?___flmul+2)^0,c
 12612  001E60  0E00               	movlw	0
 12613  001E62  6E1E               	movwf	(?___flmul+3)^0,c
 12614  001E64  EFCC  F010         	goto	l1567
 12615  001E68                     l8771:
 12616  001E68  5021               	movf	(___flmul@a+2)^0,w,c
 12617  001E6A  021B               	mulwf	___flmul@b^0,c
 12618  001E6C  CFF3 F032          	movff	prodl,___flmul@temp
 12619  001E70  CFF4 F033          	movff	prodh,___flmul@temp+1
 12620  001E74  5032               	movf	___flmul@temp^0,w,c
 12621  001E76  6E29               	movwf	___flmul@grs^0,c
 12622  001E78  6A2A               	clrf	(___flmul@grs+1)^0,c
 12623  001E7A  6A2B               	clrf	(___flmul@grs+2)^0,c
 12624  001E7C  6A2C               	clrf	(___flmul@grs+3)^0,c
 12625  001E7E  5033               	movf	(___flmul@temp+1)^0,w,c
 12626  001E80  6E2E               	movwf	___flmul@prod^0,c
 12627  001E82  6A2F               	clrf	(___flmul@prod+1)^0,c
 12628  001E84  6A30               	clrf	(___flmul@prod+2)^0,c
 12629  001E86  6A31               	clrf	(___flmul@prod+3)^0,c
 12630  001E88  5020               	movf	(___flmul@a+1)^0,w,c
 12631  001E8A  021C               	mulwf	(___flmul@b+1)^0,c
 12632  001E8C  CFF3 F032          	movff	prodl,___flmul@temp
 12633  001E90  CFF4 F033          	movff	prodh,___flmul@temp+1
 12634  001E94  5032               	movf	___flmul@temp^0,w,c
 12635  001E96  2629               	addwf	___flmul@grs^0,f,c
 12636  001E98  0E00               	movlw	0
 12637  001E9A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12638  001E9C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12639  001E9E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12640  001EA0  5033               	movf	(___flmul@temp+1)^0,w,c
 12641  001EA2  262E               	addwf	___flmul@prod^0,f,c
 12642  001EA4  0E00               	movlw	0
 12643  001EA6  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12644  001EA8  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12645  001EAA  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12646  001EAC  501F               	movf	___flmul@a^0,w,c
 12647  001EAE  021D               	mulwf	(___flmul@b+2)^0,c
 12648  001EB0  CFF3 F032          	movff	prodl,___flmul@temp
 12649  001EB4  CFF4 F033          	movff	prodh,___flmul@temp+1
 12650  001EB8  5032               	movf	___flmul@temp^0,w,c
 12651  001EBA  2629               	addwf	___flmul@grs^0,f,c
 12652  001EBC  0E00               	movlw	0
 12653  001EBE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12654  001EC0  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12655  001EC2  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12656  001EC4  5033               	movf	(___flmul@temp+1)^0,w,c
 12657  001EC6  262E               	addwf	___flmul@prod^0,f,c
 12658  001EC8  0E00               	movlw	0
 12659  001ECA  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12660  001ECC  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12661  001ECE  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12662  001ED0  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12663  001ED4  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12664  001ED8  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12665  001EDC  6A29               	clrf	___flmul@grs^0,c
 12666  001EDE  501F               	movf	___flmul@a^0,w,c
 12667  001EE0  021C               	mulwf	(___flmul@b+1)^0,c
 12668  001EE2  CFF3 F032          	movff	prodl,___flmul@temp
 12669  001EE6  CFF4 F033          	movff	prodh,___flmul@temp+1
 12670  001EEA  5032               	movf	___flmul@temp^0,w,c
 12671  001EEC  2629               	addwf	___flmul@grs^0,f,c
 12672  001EEE  5033               	movf	(___flmul@temp+1)^0,w,c
 12673  001EF0  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12674  001EF2  0E00               	movlw	0
 12675  001EF4  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12676  001EF6  0E00               	movlw	0
 12677  001EF8  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12678  001EFA  5020               	movf	(___flmul@a+1)^0,w,c
 12679  001EFC  021B               	mulwf	___flmul@b^0,c
 12680  001EFE  CFF3 F032          	movff	prodl,___flmul@temp
 12681  001F02  CFF4 F033          	movff	prodh,___flmul@temp+1
 12682  001F06  5032               	movf	___flmul@temp^0,w,c
 12683  001F08  2629               	addwf	___flmul@grs^0,f,c
 12684  001F0A  5033               	movf	(___flmul@temp+1)^0,w,c
 12685  001F0C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12686  001F0E  0E00               	movlw	0
 12687  001F10  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12688  001F12  0E00               	movlw	0
 12689  001F14  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12690  001F16  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12691  001F1A  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12692  001F1E  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12693  001F22  6A29               	clrf	___flmul@grs^0,c
 12694  001F24  501F               	movf	___flmul@a^0,w,c
 12695  001F26  021B               	mulwf	___flmul@b^0,c
 12696  001F28  CFF3 F032          	movff	prodl,___flmul@temp
 12697  001F2C  CFF4 F033          	movff	prodh,___flmul@temp+1
 12698  001F30  5032               	movf	___flmul@temp^0,w,c
 12699  001F32  2629               	addwf	___flmul@grs^0,f,c
 12700  001F34  5033               	movf	(___flmul@temp+1)^0,w,c
 12701  001F36  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12702  001F38  0E00               	movlw	0
 12703  001F3A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12704  001F3C  0E00               	movlw	0
 12705  001F3E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12706  001F40  5021               	movf	(___flmul@a+2)^0,w,c
 12707  001F42  021C               	mulwf	(___flmul@b+1)^0,c
 12708  001F44  CFF3 F032          	movff	prodl,___flmul@temp
 12709  001F48  CFF4 F033          	movff	prodh,___flmul@temp+1
 12710  001F4C  5032               	movf	___flmul@temp^0,w,c
 12711  001F4E  262E               	addwf	___flmul@prod^0,f,c
 12712  001F50  5033               	movf	(___flmul@temp+1)^0,w,c
 12713  001F52  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12714  001F54  0E00               	movlw	0
 12715  001F56  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12716  001F58  0E00               	movlw	0
 12717  001F5A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12718  001F5C  5020               	movf	(___flmul@a+1)^0,w,c
 12719  001F5E  021D               	mulwf	(___flmul@b+2)^0,c
 12720  001F60  CFF3 F032          	movff	prodl,___flmul@temp
 12721  001F64  CFF4 F033          	movff	prodh,___flmul@temp+1
 12722  001F68  5032               	movf	___flmul@temp^0,w,c
 12723  001F6A  262E               	addwf	___flmul@prod^0,f,c
 12724  001F6C  5033               	movf	(___flmul@temp+1)^0,w,c
 12725  001F6E  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12726  001F70  0E00               	movlw	0
 12727  001F72  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12728  001F74  0E00               	movlw	0
 12729  001F76  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12730  001F78  5021               	movf	(___flmul@a+2)^0,w,c
 12731  001F7A  021D               	mulwf	(___flmul@b+2)^0,c
 12732  001F7C  CFF3 F032          	movff	prodl,___flmul@temp
 12733  001F80  CFF4 F033          	movff	prodh,___flmul@temp+1
 12734  001F84  5032               	movf	___flmul@temp^0,w,c
 12735  001F86  6E23               	movwf	??___flmul^0,c
 12736  001F88  5033               	movf	(___flmul@temp+1)^0,w,c
 12737  001F8A  6E24               	movwf	(??___flmul+1)^0,c
 12738  001F8C  6A25               	clrf	(??___flmul+2)^0,c
 12739  001F8E  6A26               	clrf	(??___flmul+3)^0,c
 12740  001F90  C025  F026         	movff	??___flmul+2,??___flmul+3
 12741  001F94  C024  F025         	movff	??___flmul+1,??___flmul+2
 12742  001F98  C023  F024         	movff	??___flmul,??___flmul+1
 12743  001F9C  6A23               	clrf	??___flmul^0,c
 12744  001F9E  5023               	movf	??___flmul^0,w,c
 12745  001FA0  262E               	addwf	___flmul@prod^0,f,c
 12746  001FA2  5024               	movf	(??___flmul+1)^0,w,c
 12747  001FA4  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12748  001FA6  5025               	movf	(??___flmul+2)^0,w,c
 12749  001FA8  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12750  001FAA  5026               	movf	(??___flmul+3)^0,w,c
 12751  001FAC  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12752  001FAE  C029  F023         	movff	___flmul@grs,??___flmul
 12753  001FB2  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 12754  001FB6  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 12755  001FBA  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 12756  001FBE  0E19               	movlw	25
 12757  001FC0  EFE7  F00F         	goto	u9380
 12758  001FC4                     u9385:
 12759  001FC4  90D8               	bcf	status,0,c
 12760  001FC6  3226               	rrcf	(??___flmul+3)^0,f,c
 12761  001FC8  3225               	rrcf	(??___flmul+2)^0,f,c
 12762  001FCA  3224               	rrcf	(??___flmul+1)^0,f,c
 12763  001FCC  3223               	rrcf	??___flmul^0,f,c
 12764  001FCE                     u9380:
 12765  001FCE  2EE8               	decfsz	wreg,f,c
 12766  001FD0  EFE2  F00F         	goto	u9385
 12767  001FD4  5023               	movf	??___flmul^0,w,c
 12768  001FD6  262E               	addwf	___flmul@prod^0,f,c
 12769  001FD8  5024               	movf	(??___flmul+1)^0,w,c
 12770  001FDA  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12771  001FDC  5025               	movf	(??___flmul+2)^0,w,c
 12772  001FDE  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12773  001FE0  5026               	movf	(??___flmul+3)^0,w,c
 12774  001FE2  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12775  001FE4  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12776  001FE8  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12777  001FEC  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12778  001FF0  6A29               	clrf	___flmul@grs^0,c
 12779  001FF2  5028               	movf	___flmul@aexp^0,w,c
 12780  001FF4  C02D  F023         	movff	___flmul@bexp,??___flmul
 12781  001FF8  6A24               	clrf	(??___flmul+1)^0,c
 12782  001FFA  2623               	addwf	??___flmul^0,f,c
 12783  001FFC  0E00               	movlw	0
 12784  001FFE  2224               	addwfc	(??___flmul+1)^0,f,c
 12785  002000  0E82               	movlw	130
 12786  002002  2423               	addwf	??___flmul^0,w,c
 12787  002004  6E32               	movwf	___flmul@temp^0,c
 12788  002006  0EFF               	movlw	255
 12789  002008  2024               	addwfc	(??___flmul+1)^0,w,c
 12790  00200A  6E33               	movwf	(___flmul@temp+1)^0,c
 12791  00200C  EF1D  F010         	goto	l8819
 12792  002010                     l8813:
 12793  002010  90D8               	bcf	status,0,c
 12794  002012  362E               	rlcf	___flmul@prod^0,f,c
 12795  002014  362F               	rlcf	(___flmul@prod+1)^0,f,c
 12796  002016  3630               	rlcf	(___flmul@prod+2)^0,f,c
 12797  002018  3631               	rlcf	(___flmul@prod+3)^0,f,c
 12798  00201A  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12799  00201C  EF12  F010         	goto	u9391
 12800  002020  EF14  F010         	goto	u9390
 12801  002024                     u9391:
 12802  002024  EF15  F010         	goto	l1570
 12803  002028                     u9390:
 12804  002028  802E               	bsf	___flmul@prod^0,0,c
 12805  00202A                     l1570:
 12806  00202A  90D8               	bcf	status,0,c
 12807  00202C  3629               	rlcf	___flmul@grs^0,f,c
 12808  00202E  362A               	rlcf	(___flmul@grs+1)^0,f,c
 12809  002030  362B               	rlcf	(___flmul@grs+2)^0,f,c
 12810  002032  362C               	rlcf	(___flmul@grs+3)^0,f,c
 12811  002034  0632               	decf	___flmul@temp^0,f,c
 12812  002036  A0D8               	btfss	status,0,c
 12813  002038  0633               	decf	(___flmul@temp+1)^0,f,c
 12814  00203A                     l8819:
 12815  00203A  AE30               	btfss	(___flmul@prod+2)^0,7,c
 12816  00203C  EF22  F010         	goto	u9401
 12817  002040  EF24  F010         	goto	u9400
 12818  002044                     u9401:
 12819  002044  EF08  F010         	goto	l8813
 12820  002048                     u9400:
 12821  002048  0E00               	movlw	0
 12822  00204A  6E28               	movwf	___flmul@aexp^0,c
 12823  00204C  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12824  00204E  EF2B  F010         	goto	u9411
 12825  002052  EF2D  F010         	goto	u9410
 12826  002056                     u9411:
 12827  002056  EF51  F010         	goto	l1572
 12828  00205A                     u9410:
 12829  00205A  0EFF               	movlw	255
 12830  00205C  1429               	andwf	___flmul@grs^0,w,c
 12831  00205E  6E23               	movwf	??___flmul^0,c
 12832  002060  0EFF               	movlw	255
 12833  002062  142A               	andwf	(___flmul@grs+1)^0,w,c
 12834  002064  6E24               	movwf	(??___flmul+1)^0,c
 12835  002066  0EFF               	movlw	255
 12836  002068  142B               	andwf	(___flmul@grs+2)^0,w,c
 12837  00206A  6E25               	movwf	(??___flmul+2)^0,c
 12838  00206C  0E7F               	movlw	127
 12839  00206E  142C               	andwf	(___flmul@grs+3)^0,w,c
 12840  002070  6E26               	movwf	(??___flmul+3)^0,c
 12841  002072  5023               	movf	??___flmul^0,w,c
 12842  002074  1024               	iorwf	(??___flmul+1)^0,w,c
 12843  002076  1025               	iorwf	(??___flmul+2)^0,w,c
 12844  002078  1026               	iorwf	(??___flmul+3)^0,w,c
 12845  00207A  B4D8               	btfsc	status,2,c
 12846  00207C  EF42  F010         	goto	u9421
 12847  002080  EF44  F010         	goto	u9420
 12848  002084                     u9421:
 12849  002084  EF48  F010         	goto	l1573
 12850  002088                     u9420:
 12851  002088                     l8827:
 12852  002088  0E01               	movlw	1
 12853  00208A  6E28               	movwf	___flmul@aexp^0,c
 12854  00208C  EF51  F010         	goto	l1572
 12855  002090                     l1573:
 12856  002090  A02E               	btfss	___flmul@prod^0,0,c
 12857  002092  EF4D  F010         	goto	u9431
 12858  002096  EF4F  F010         	goto	u9430
 12859  00209A                     u9431:
 12860  00209A  EF51  F010         	goto	l1572
 12861  00209E                     u9430:
 12862  00209E  EF44  F010         	goto	l8827
 12863  0020A2                     l1572:
 12864  0020A2  5028               	movf	___flmul@aexp^0,w,c
 12865  0020A4  B4D8               	btfsc	status,2,c
 12866  0020A6  EF57  F010         	goto	u9441
 12867  0020AA  EF59  F010         	goto	u9440
 12868  0020AE                     u9441:
 12869  0020AE  EF7D  F010         	goto	l8839
 12870  0020B2                     u9440:
 12871  0020B2  0E01               	movlw	1
 12872  0020B4  262E               	addwf	___flmul@prod^0,f,c
 12873  0020B6  0E00               	movlw	0
 12874  0020B8  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12875  0020BA  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12876  0020BC  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12877  0020BE  A031               	btfss	(___flmul@prod+3)^0,0,c
 12878  0020C0  EF64  F010         	goto	u9451
 12879  0020C4  EF66  F010         	goto	u9450
 12880  0020C8                     u9451:
 12881  0020C8  EF7D  F010         	goto	l8839
 12882  0020CC                     u9450:
 12883  0020CC  C02E  F023         	movff	___flmul@prod,??___flmul
 12884  0020D0  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 12885  0020D4  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 12886  0020D8  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 12887  0020DC  3426               	rlcf	(??___flmul+3)^0,w,c
 12888  0020DE  3226               	rrcf	(??___flmul+3)^0,f,c
 12889  0020E0  3225               	rrcf	(??___flmul+2)^0,f,c
 12890  0020E2  3224               	rrcf	(??___flmul+1)^0,f,c
 12891  0020E4  3223               	rrcf	??___flmul^0,f,c
 12892  0020E6  C023  F02E         	movff	??___flmul,___flmul@prod
 12893  0020EA  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 12894  0020EE  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 12895  0020F2  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 12896  0020F6  4A32               	infsnz	___flmul@temp^0,f,c
 12897  0020F8  2A33               	incf	(___flmul@temp+1)^0,f,c
 12898  0020FA                     l8839:
 12899  0020FA  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12900  0020FC  EF88  F010         	goto	u9461
 12901  002100  5033               	movf	(___flmul@temp+1)^0,w,c
 12902  002102  E108               	bnz	u9460
 12903  002104  2832               	incf	___flmul@temp^0,w,c
 12904  002106  A0D8               	btfss	status,0,c
 12905  002108  EF88  F010         	goto	u9461
 12906  00210C  EF8A  F010         	goto	u9460
 12907  002110                     u9461:
 12908  002110  EF94  F010         	goto	l8843
 12909  002114                     u9460:
 12910  002114  0E00               	movlw	0
 12911  002116  6E2E               	movwf	___flmul@prod^0,c
 12912  002118  0E00               	movlw	0
 12913  00211A  6E2F               	movwf	(___flmul@prod+1)^0,c
 12914  00211C  0E80               	movlw	128
 12915  00211E  6E30               	movwf	(___flmul@prod+2)^0,c
 12916  002120  0E7F               	movlw	127
 12917  002122  6E31               	movwf	(___flmul@prod+3)^0,c
 12918  002124  EFC2  F010         	goto	l8855
 12919  002128                     l8843:
 12920  002128  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12921  00212A  EFA1  F010         	goto	u9470
 12922  00212E  5033               	movf	(___flmul@temp+1)^0,w,c
 12923  002130  E106               	bnz	u9471
 12924  002132  0432               	decf	___flmul@temp^0,w,c
 12925  002134  B0D8               	btfsc	status,0,c
 12926  002136  EF9F  F010         	goto	u9471
 12927  00213A  EFA1  F010         	goto	u9470
 12928  00213E                     u9471:
 12929  00213E  EFAD  F010         	goto	l1580
 12930  002142                     u9470:
 12931  002142  0E00               	movlw	0
 12932  002144  6E2E               	movwf	___flmul@prod^0,c
 12933  002146  0E00               	movlw	0
 12934  002148  6E2F               	movwf	(___flmul@prod+1)^0,c
 12935  00214A  0E00               	movlw	0
 12936  00214C  6E30               	movwf	(___flmul@prod+2)^0,c
 12937  00214E  0E00               	movlw	0
 12938  002150  6E31               	movwf	(___flmul@prod+3)^0,c
 12939  002152  0E00               	movlw	0
 12940  002154  6E27               	movwf	___flmul@sign^0,c
 12941  002156  EFC2  F010         	goto	l8855
 12942  00215A                     l1580:
 12943  00215A  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 12944  00215E  0EFF               	movlw	255
 12945  002160  162E               	andwf	___flmul@prod^0,f,c
 12946  002162  0EFF               	movlw	255
 12947  002164  162F               	andwf	(___flmul@prod+1)^0,f,c
 12948  002166  0E7F               	movlw	127
 12949  002168  1630               	andwf	(___flmul@prod+2)^0,f,c
 12950  00216A  0E00               	movlw	0
 12951  00216C  1631               	andwf	(___flmul@prod+3)^0,f,c
 12952  00216E  A02D               	btfss	___flmul@bexp^0,0,c
 12953  002170  EFBC  F010         	goto	u9481
 12954  002174  EFBE  F010         	goto	u9480
 12955  002178                     u9481:
 12956  002178  EFBF  F010         	goto	l8853
 12957  00217C                     u9480:
 12958  00217C  8E30               	bsf	(___flmul@prod+2)^0,7,c
 12959  00217E                     l8853:
 12960  00217E  90D8               	bcf	status,0,c
 12961  002180  302D               	rrcf	___flmul@bexp^0,w,c
 12962  002182  6E31               	movwf	(___flmul@prod+3)^0,c
 12963  002184                     l8855:
 12964  002184  5027               	movf	___flmul@sign^0,w,c
 12965  002186  1231               	iorwf	(___flmul@prod+3)^0,f,c
 12966  002188  C02E  F01B         	movff	___flmul@prod,?___flmul
 12967  00218C  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 12968  002190  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 12969  002194  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 12970  002198                     l1567:
 12971  002198  0012               	return		;funcret
 12972  00219A                     __end_of___flmul:
 12973                           	opt callstack 0
 12974                           
 12975 ;; *************** function ___fleq *****************
 12976 ;; Defined at:
 12977 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;  ff1             4    5[COMRAM] unsigned char 
 12980 ;;  ff2             4    9[COMRAM] unsigned char 
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;		None
 12983 ;; Return value:  Size  Location     Type
 12984 ;;		None               void
 12985 ;; Registers used:
 12986 ;;		wreg, status,2, status,0
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12992 ;;      Params:         8       0       0       0       0       0       0       0       0
 12993 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12994 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12995 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12996 ;;Total ram usage:       12 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; Hardware stack levels required when called:    2
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_efgtoa
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006                           	psect	text46
 13007  004B98                     __ptext46:
 13008                           	opt callstack 0
 13009  004B98                     ___fleq:
 13010                           	opt callstack 23
 13011  004B98  0E00               	movlw	0
 13012  004B9A  1406               	andwf	___fleq@ff1^0,w,c
 13013  004B9C  6E0E               	movwf	??___fleq^0,c
 13014  004B9E  0E00               	movlw	0
 13015  004BA0  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13016  004BA2  6E0F               	movwf	(??___fleq+1)^0,c
 13017  004BA4  0E80               	movlw	128
 13018  004BA6  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13019  004BA8  6E10               	movwf	(??___fleq+2)^0,c
 13020  004BAA  0E7F               	movlw	127
 13021  004BAC  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13022  004BAE  6E11               	movwf	(??___fleq+3)^0,c
 13023  004BB0  500E               	movf	??___fleq^0,w,c
 13024  004BB2  100F               	iorwf	(??___fleq+1)^0,w,c
 13025  004BB4  1010               	iorwf	(??___fleq+2)^0,w,c
 13026  004BB6  1011               	iorwf	(??___fleq+3)^0,w,c
 13027  004BB8  A4D8               	btfss	status,2,c
 13028  004BBA  EFE1  F025         	goto	u9611
 13029  004BBE  EFE3  F025         	goto	u9610
 13030  004BC2                     u9611:
 13031  004BC2  EFEB  F025         	goto	l8951
 13032  004BC6                     u9610:
 13033  004BC6  0E00               	movlw	0
 13034  004BC8  6E06               	movwf	___fleq@ff1^0,c
 13035  004BCA  0E00               	movlw	0
 13036  004BCC  6E07               	movwf	(___fleq@ff1+1)^0,c
 13037  004BCE  0E00               	movlw	0
 13038  004BD0  6E08               	movwf	(___fleq@ff1+2)^0,c
 13039  004BD2  0E00               	movlw	0
 13040  004BD4  6E09               	movwf	(___fleq@ff1+3)^0,c
 13041  004BD6                     l8951:
 13042  004BD6  0E00               	movlw	0
 13043  004BD8  140A               	andwf	___fleq@ff2^0,w,c
 13044  004BDA  6E0E               	movwf	??___fleq^0,c
 13045  004BDC  0E00               	movlw	0
 13046  004BDE  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13047  004BE0  6E0F               	movwf	(??___fleq+1)^0,c
 13048  004BE2  0E80               	movlw	128
 13049  004BE4  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13050  004BE6  6E10               	movwf	(??___fleq+2)^0,c
 13051  004BE8  0E7F               	movlw	127
 13052  004BEA  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13053  004BEC  6E11               	movwf	(??___fleq+3)^0,c
 13054  004BEE  500E               	movf	??___fleq^0,w,c
 13055  004BF0  100F               	iorwf	(??___fleq+1)^0,w,c
 13056  004BF2  1010               	iorwf	(??___fleq+2)^0,w,c
 13057  004BF4  1011               	iorwf	(??___fleq+3)^0,w,c
 13058  004BF6  A4D8               	btfss	status,2,c
 13059  004BF8  EF00  F026         	goto	u9621
 13060  004BFC  EF02  F026         	goto	u9620
 13061  004C00                     u9621:
 13062  004C00  EF0A  F026         	goto	l8955
 13063  004C04                     u9620:
 13064  004C04  0E00               	movlw	0
 13065  004C06  6E0A               	movwf	___fleq@ff2^0,c
 13066  004C08  0E00               	movlw	0
 13067  004C0A  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13068  004C0C  0E00               	movlw	0
 13069  004C0E  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13070  004C10  0E00               	movlw	0
 13071  004C12  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13072  004C14                     l8955:
 13073  004C14  500A               	movf	___fleq@ff2^0,w,c
 13074  004C16  1806               	xorwf	___fleq@ff1^0,w,c
 13075  004C18  E10F               	bnz	u9630
 13076  004C1A  500B               	movf	(___fleq@ff2+1)^0,w,c
 13077  004C1C  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13078  004C1E  E10C               	bnz	u9630
 13079  004C20  500C               	movf	(___fleq@ff2+2)^0,w,c
 13080  004C22  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13081  004C24  E109               	bnz	u9630
 13082  004C26  500D               	movf	(___fleq@ff2+3)^0,w,c
 13083  004C28  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13084  004C2A  B4D8               	btfsc	status,2,c
 13085  004C2C  EF1A  F026         	goto	u9631
 13086  004C30  EF1C  F026         	goto	u9630
 13087  004C34                     u9631:
 13088  004C34  EF1F  F026         	goto	l8959
 13089  004C38                     u9630:
 13090  004C38  90D8               	bcf	status,0,c
 13091  004C3A  EF20  F026         	goto	l1208
 13092  004C3E                     l8959:
 13093  004C3E  80D8               	bsf	status,0,c
 13094  004C40                     l1208:
 13095  004C40  0012               	return		;funcret
 13096  004C42                     __end_of___fleq:
 13097                           	opt callstack 0
 13098                           
 13099 ;; *************** function ___fldiv *****************
 13100 ;; Defined at:
 13101 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;  b               4   67[COMRAM] unsigned char 
 13104 ;;  a               4   71[COMRAM] unsigned char 
 13105 ;; Auto vars:     Size  Location     Type
 13106 ;;  grs             4    7[BANK0 ] unsigned long 
 13107 ;;  rem             4    0[BANK0 ] unsigned long 
 13108 ;;  new_exp         2    5[BANK0 ] short 
 13109 ;;  aexp            1   12[BANK0 ] unsigned char 
 13110 ;;  bexp            1   11[BANK0 ] unsigned char 
 13111 ;;  sign            1    4[BANK0 ] unsigned char 
 13112 ;; Return value:  Size  Location     Type
 13113 ;;                  4   67[COMRAM] unsigned char 
 13114 ;; Registers used:
 13115 ;;		wreg, status,2, status,0
 13116 ;; Tracked objects:
 13117 ;;		On entry : 0/0
 13118 ;;		On exit  : 0/0
 13119 ;;		Unchanged: 0/0
 13120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13121 ;;      Params:         8       0       0       0       0       0       0       0       0
 13122 ;;      Locals:         0      13       0       0       0       0       0       0       0
 13123 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13124 ;;      Totals:        12      13       0       0       0       0       0       0       0
 13125 ;;Total ram usage:       25 bytes
 13126 ;; Hardware stack levels used:    1
 13127 ;; Hardware stack levels required when called:    2
 13128 ;; This function calls:
 13129 ;;		Nothing
 13130 ;; This function is called by:
 13131 ;;		_pwmDuty
 13132 ;;		_leerSensores
 13133 ;;		_efgtoa
 13134 ;; This function uses a non-reentrant model
 13135 ;;
 13136                           
 13137                           	psect	text47
 13138  002916                     __ptext47:
 13139                           	opt callstack 0
 13140  002916                     ___fldiv:
 13141                           	opt callstack 23
 13142  002916  5047               	movf	(___fldiv@b+3)^0,w,c
 13143  002918  0B80               	andlw	128
 13144  00291A  0100               	movlb	0	; () banked
 13145  00291C  6F64               	movwf	___fldiv@sign& (0+255),b
 13146  00291E  5047               	movf	(___fldiv@b+3)^0,w,c
 13147  002920  2447               	addwf	(___fldiv@b+3)^0,w,c
 13148  002922  6F6B               	movwf	___fldiv@bexp& (0+255),b
 13149  002924                     
 13150                           ; BSR set to: 0
 13151  002924  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13152  002926  EF97  F014         	goto	u9071
 13153  00292A  EF99  F014         	goto	u9070
 13154  00292E                     u9071:
 13155  00292E  EF9A  F014         	goto	l8599
 13156  002932                     u9070:
 13157  002932                     
 13158                           ; BSR set to: 0
 13159  002932  816B               	bsf	___fldiv@bexp& (0+255),0,b
 13160  002934                     l8599:
 13161                           
 13162                           ; BSR set to: 0
 13163  002934  516B               	movf	___fldiv@bexp& (0+255),w,b
 13164  002936  B4D8               	btfsc	status,2,c
 13165  002938  EFA0  F014         	goto	u9081
 13166  00293C  EFA2  F014         	goto	u9080
 13167  002940                     u9081:
 13168  002940  EFB7  F014         	goto	l8609
 13169  002944                     u9080:
 13170  002944                     
 13171                           ; BSR set to: 0
 13172  002944  296B               	incf	___fldiv@bexp& (0+255),w,b
 13173  002946  A4D8               	btfss	status,2,c
 13174  002948  EFA8  F014         	goto	u9091
 13175  00294C  EFAA  F014         	goto	u9090
 13176  002950                     u9091:
 13177  002950  EFB2  F014         	goto	l8605
 13178  002954                     u9090:
 13179  002954                     
 13180                           ; BSR set to: 0
 13181  002954  0E00               	movlw	0
 13182  002956  6E44               	movwf	___fldiv@b^0,c
 13183  002958  0E00               	movlw	0
 13184  00295A  6E45               	movwf	(___fldiv@b+1)^0,c
 13185  00295C  0E00               	movlw	0
 13186  00295E  6E46               	movwf	(___fldiv@b+2)^0,c
 13187  002960  0E00               	movlw	0
 13188  002962  6E47               	movwf	(___fldiv@b+3)^0,c
 13189  002964                     l8605:
 13190                           
 13191                           ; BSR set to: 0
 13192  002964  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13193  002966                     
 13194                           ; BSR set to: 0
 13195  002966  0E00               	movlw	0
 13196  002968  6E47               	movwf	(___fldiv@b+3)^0,c
 13197  00296A  EFBF  F014         	goto	l8611
 13198  00296E                     l8609:
 13199                           
 13200                           ; BSR set to: 0
 13201  00296E  0E00               	movlw	0
 13202  002970  6E44               	movwf	___fldiv@b^0,c
 13203  002972  0E00               	movlw	0
 13204  002974  6E45               	movwf	(___fldiv@b+1)^0,c
 13205  002976  0E00               	movlw	0
 13206  002978  6E46               	movwf	(___fldiv@b+2)^0,c
 13207  00297A  0E00               	movlw	0
 13208  00297C  6E47               	movwf	(___fldiv@b+3)^0,c
 13209  00297E                     l8611:
 13210                           
 13211                           ; BSR set to: 0
 13212  00297E  504B               	movf	(___fldiv@a+3)^0,w,c
 13213  002980  0B80               	andlw	128
 13214  002982  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 13215  002984                     
 13216                           ; BSR set to: 0
 13217  002984  504B               	movf	(___fldiv@a+3)^0,w,c
 13218  002986  244B               	addwf	(___fldiv@a+3)^0,w,c
 13219  002988  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13220  00298A                     
 13221                           ; BSR set to: 0
 13222  00298A  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 13223  00298C  EFCA  F014         	goto	u9101
 13224  002990  EFCC  F014         	goto	u9100
 13225  002994                     u9101:
 13226  002994  EFCD  F014         	goto	l8619
 13227  002998                     u9100:
 13228  002998                     
 13229                           ; BSR set to: 0
 13230  002998  816C               	bsf	___fldiv@aexp& (0+255),0,b
 13231  00299A                     l8619:
 13232                           
 13233                           ; BSR set to: 0
 13234  00299A  516C               	movf	___fldiv@aexp& (0+255),w,b
 13235  00299C  B4D8               	btfsc	status,2,c
 13236  00299E  EFD3  F014         	goto	u9111
 13237  0029A2  EFD5  F014         	goto	u9110
 13238  0029A6                     u9111:
 13239  0029A6  EFEA  F014         	goto	l8629
 13240  0029AA                     u9110:
 13241  0029AA                     
 13242                           ; BSR set to: 0
 13243  0029AA  296C               	incf	___fldiv@aexp& (0+255),w,b
 13244  0029AC  A4D8               	btfss	status,2,c
 13245  0029AE  EFDB  F014         	goto	u9121
 13246  0029B2  EFDD  F014         	goto	u9120
 13247  0029B6                     u9121:
 13248  0029B6  EFE5  F014         	goto	l8625
 13249  0029BA                     u9120:
 13250  0029BA                     
 13251                           ; BSR set to: 0
 13252  0029BA  0E00               	movlw	0
 13253  0029BC  6E48               	movwf	___fldiv@a^0,c
 13254  0029BE  0E00               	movlw	0
 13255  0029C0  6E49               	movwf	(___fldiv@a+1)^0,c
 13256  0029C2  0E00               	movlw	0
 13257  0029C4  6E4A               	movwf	(___fldiv@a+2)^0,c
 13258  0029C6  0E00               	movlw	0
 13259  0029C8  6E4B               	movwf	(___fldiv@a+3)^0,c
 13260  0029CA                     l8625:
 13261                           
 13262                           ; BSR set to: 0
 13263  0029CA  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 13264  0029CC                     
 13265                           ; BSR set to: 0
 13266  0029CC  0E00               	movlw	0
 13267  0029CE  6E4B               	movwf	(___fldiv@a+3)^0,c
 13268  0029D0  EFF2  F014         	goto	l8631
 13269  0029D4                     l8629:
 13270                           
 13271                           ; BSR set to: 0
 13272  0029D4  0E00               	movlw	0
 13273  0029D6  6E48               	movwf	___fldiv@a^0,c
 13274  0029D8  0E00               	movlw	0
 13275  0029DA  6E49               	movwf	(___fldiv@a+1)^0,c
 13276  0029DC  0E00               	movlw	0
 13277  0029DE  6E4A               	movwf	(___fldiv@a+2)^0,c
 13278  0029E0  0E00               	movlw	0
 13279  0029E2  6E4B               	movwf	(___fldiv@a+3)^0,c
 13280  0029E4                     l8631:
 13281                           
 13282                           ; BSR set to: 0
 13283  0029E4  5048               	movf	___fldiv@a^0,w,c
 13284  0029E6  1049               	iorwf	(___fldiv@a+1)^0,w,c
 13285  0029E8  104A               	iorwf	(___fldiv@a+2)^0,w,c
 13286  0029EA  104B               	iorwf	(___fldiv@a+3)^0,w,c
 13287  0029EC  A4D8               	btfss	status,2,c
 13288  0029EE  EFFB  F014         	goto	u9131
 13289  0029F2  EFFD  F014         	goto	u9130
 13290  0029F6                     u9131:
 13291  0029F6  EF15  F015         	goto	l8643
 13292  0029FA                     u9130:
 13293  0029FA                     
 13294                           ; BSR set to: 0
 13295  0029FA  0E00               	movlw	0
 13296  0029FC  6E44               	movwf	___fldiv@b^0,c
 13297  0029FE  0E00               	movlw	0
 13298  002A00  6E45               	movwf	(___fldiv@b+1)^0,c
 13299  002A02  0E00               	movlw	0
 13300  002A04  6E46               	movwf	(___fldiv@b+2)^0,c
 13301  002A06  0E00               	movlw	0
 13302  002A08  6E47               	movwf	(___fldiv@b+3)^0,c
 13303  002A0A                     
 13304                           ; BSR set to: 0
 13305  002A0A  0E80               	movlw	128
 13306  002A0C  1246               	iorwf	(___fldiv@b+2)^0,f,c
 13307  002A0E  0E7F               	movlw	127
 13308  002A10  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13309  002A12                     l8637:
 13310                           
 13311                           ; BSR set to: 0
 13312  002A12  5164               	movf	___fldiv@sign& (0+255),w,b
 13313  002A14  1247               	iorwf	(___fldiv@b+3)^0,f,c
 13314  002A16                     
 13315                           ; BSR set to: 0
 13316  002A16  C044  F044         	movff	___fldiv@b,?___fldiv
 13317  002A1A  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 13318  002A1E  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 13319  002A22  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 13320  002A26  EF58  F016         	goto	l1531
 13321  002A2A                     l8643:
 13322                           
 13323                           ; BSR set to: 0
 13324  002A2A  516B               	movf	___fldiv@bexp& (0+255),w,b
 13325  002A2C  A4D8               	btfss	status,2,c
 13326  002A2E  EF1B  F015         	goto	u9141
 13327  002A32  EF1D  F015         	goto	u9140
 13328  002A36                     u9141:
 13329  002A36  EF27  F015         	goto	l8651
 13330  002A3A                     u9140:
 13331  002A3A                     
 13332                           ; BSR set to: 0
 13333  002A3A  0E00               	movlw	0
 13334  002A3C  6E44               	movwf	?___fldiv^0,c
 13335  002A3E  0E00               	movlw	0
 13336  002A40  6E45               	movwf	(?___fldiv+1)^0,c
 13337  002A42  0E00               	movlw	0
 13338  002A44  6E46               	movwf	(?___fldiv+2)^0,c
 13339  002A46  0E00               	movlw	0
 13340  002A48  6E47               	movwf	(?___fldiv+3)^0,c
 13341  002A4A  EF58  F016         	goto	l1531
 13342  002A4E                     l8651:
 13343                           
 13344                           ; BSR set to: 0
 13345  002A4E  516C               	movf	___fldiv@aexp& (0+255),w,b
 13346  002A50  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 13347  002A54  6A4D               	clrf	(??___fldiv+1)^0,c
 13348  002A56  5E4C               	subwf	??___fldiv^0,f,c
 13349  002A58  0E00               	movlw	0
 13350  002A5A  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 13351  002A5C  0E7F               	movlw	127
 13352  002A5E  244C               	addwf	??___fldiv^0,w,c
 13353  002A60  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13354  002A62  0E00               	movlw	0
 13355  002A64  204D               	addwfc	(??___fldiv+1)^0,w,c
 13356  002A66  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13357  002A68                     
 13358                           ; BSR set to: 0
 13359  002A68  C044  F060         	movff	___fldiv@b,___fldiv@rem
 13360  002A6C  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 13361  002A70  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 13362  002A74  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 13363  002A78                     
 13364                           ; BSR set to: 0
 13365  002A78  0E00               	movlw	0
 13366  002A7A  6E44               	movwf	___fldiv@b^0,c
 13367  002A7C  0E00               	movlw	0
 13368  002A7E  6E45               	movwf	(___fldiv@b+1)^0,c
 13369  002A80  0E00               	movlw	0
 13370  002A82  6E46               	movwf	(___fldiv@b+2)^0,c
 13371  002A84  0E00               	movlw	0
 13372  002A86  6E47               	movwf	(___fldiv@b+3)^0,c
 13373  002A88                     
 13374                           ; BSR set to: 0
 13375  002A88  0E00               	movlw	0
 13376  002A8A  6F67               	movwf	___fldiv@grs& (0+255),b
 13377  002A8C  0E00               	movlw	0
 13378  002A8E  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 13379  002A90  0E00               	movlw	0
 13380  002A92  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 13381  002A94  0E00               	movlw	0
 13382  002A96  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 13383  002A98                     
 13384                           ; BSR set to: 0
 13385  002A98  0E00               	movlw	0
 13386  002A9A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13387  002A9C  EF88  F015         	goto	l1533
 13388  002AA0                     l8661:
 13389                           
 13390                           ; BSR set to: 0
 13391  002AA0  516C               	movf	___fldiv@aexp& (0+255),w,b
 13392  002AA2  B4D8               	btfsc	status,2,c
 13393  002AA4  EF56  F015         	goto	u9151
 13394  002AA8  EF58  F015         	goto	u9150
 13395  002AAC                     u9151:
 13396  002AAC  EF6F  F015         	goto	l8669
 13397  002AB0                     u9150:
 13398  002AB0                     
 13399                           ; BSR set to: 0
 13400  002AB0  90D8               	bcf	status,0,c
 13401  002AB2  3760               	rlcf	___fldiv@rem& (0+255),f,b
 13402  002AB4  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13403  002AB6  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13404  002AB8  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13405  002ABA  90D8               	bcf	status,0,c
 13406  002ABC  3644               	rlcf	___fldiv@b^0,f,c
 13407  002ABE  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13408  002AC0  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13409  002AC2  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13410  002AC4                     
 13411                           ; BSR set to: 0
 13412  002AC4  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13413  002AC6  EF67  F015         	goto	u9161
 13414  002ACA  EF69  F015         	goto	u9160
 13415  002ACE                     u9161:
 13416  002ACE  EF6A  F015         	goto	l1536
 13417  002AD2                     u9160:
 13418  002AD2                     
 13419                           ; BSR set to: 0
 13420  002AD2  8044               	bsf	___fldiv@b^0,0,c
 13421  002AD4                     l1536:
 13422                           
 13423                           ; BSR set to: 0
 13424  002AD4  90D8               	bcf	status,0,c
 13425  002AD6  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13426  002AD8  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13427  002ADA  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13428  002ADC  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13429  002ADE                     l8669:
 13430                           
 13431                           ; BSR set to: 0
 13432  002ADE  5048               	movf	___fldiv@a^0,w,c
 13433  002AE0  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13434  002AE2  5049               	movf	(___fldiv@a+1)^0,w,c
 13435  002AE4  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13436  002AE6  504A               	movf	(___fldiv@a+2)^0,w,c
 13437  002AE8  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13438  002AEA  504B               	movf	(___fldiv@a+3)^0,w,c
 13439  002AEC  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13440  002AEE  A0D8               	btfss	status,0,c
 13441  002AF0  EF7C  F015         	goto	u9171
 13442  002AF4  EF7E  F015         	goto	u9170
 13443  002AF8                     u9171:
 13444  002AF8  EF87  F015         	goto	l8675
 13445  002AFC                     u9170:
 13446  002AFC                     
 13447                           ; BSR set to: 0
 13448  002AFC  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13449  002AFE                     
 13450                           ; BSR set to: 0
 13451  002AFE  5048               	movf	___fldiv@a^0,w,c
 13452  002B00  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13453  002B02  5049               	movf	(___fldiv@a+1)^0,w,c
 13454  002B04  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13455  002B06  504A               	movf	(___fldiv@a+2)^0,w,c
 13456  002B08  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13457  002B0A  504B               	movf	(___fldiv@a+3)^0,w,c
 13458  002B0C  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13459  002B0E                     l8675:
 13460                           
 13461                           ; BSR set to: 0
 13462  002B0E  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13463  002B10                     l1533:
 13464                           
 13465                           ; BSR set to: 0
 13466  002B10  0E19               	movlw	25
 13467  002B12  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13468  002B14  EF8E  F015         	goto	u9181
 13469  002B18  EF90  F015         	goto	u9180
 13470  002B1C                     u9181:
 13471  002B1C  EF50  F015         	goto	l8661
 13472  002B20                     u9180:
 13473  002B20                     
 13474                           ; BSR set to: 0
 13475  002B20  5160               	movf	___fldiv@rem& (0+255),w,b
 13476  002B22  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13477  002B24  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13478  002B26  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13479  002B28  B4D8               	btfsc	status,2,c
 13480  002B2A  EF99  F015         	goto	u9191
 13481  002B2E  EF9B  F015         	goto	u9190
 13482  002B32                     u9191:
 13483  002B32  EFB3  F015         	goto	l8687
 13484  002B36                     u9190:
 13485  002B36                     
 13486                           ; BSR set to: 0
 13487  002B36  8167               	bsf	___fldiv@grs& (0+255),0,b
 13488  002B38  EFB3  F015         	goto	l8687
 13489  002B3C                     l8681:
 13490                           
 13491                           ; BSR set to: 0
 13492  002B3C  90D8               	bcf	status,0,c
 13493  002B3E  3644               	rlcf	___fldiv@b^0,f,c
 13494  002B40  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13495  002B42  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13496  002B44  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13497  002B46                     
 13498                           ; BSR set to: 0
 13499  002B46  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13500  002B48  EFA8  F015         	goto	u9201
 13501  002B4C  EFAA  F015         	goto	u9200
 13502  002B50                     u9201:
 13503  002B50  EFAB  F015         	goto	l1542
 13504  002B54                     u9200:
 13505  002B54                     
 13506                           ; BSR set to: 0
 13507  002B54  8044               	bsf	___fldiv@b^0,0,c
 13508  002B56                     l1542:
 13509                           
 13510                           ; BSR set to: 0
 13511  002B56  90D8               	bcf	status,0,c
 13512  002B58  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13513  002B5A  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13514  002B5C  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13515  002B5E  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13516  002B60  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13517  002B62  A0D8               	btfss	status,0,c
 13518  002B64  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13519  002B66                     l8687:
 13520                           
 13521                           ; BSR set to: 0
 13522  002B66  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13523  002B68  EFB8  F015         	goto	u9211
 13524  002B6C  EFBA  F015         	goto	u9210
 13525  002B70                     u9211:
 13526  002B70  EF9E  F015         	goto	l8681
 13527  002B74                     u9210:
 13528  002B74                     
 13529                           ; BSR set to: 0
 13530  002B74  0E00               	movlw	0
 13531  002B76  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13532  002B78                     
 13533                           ; BSR set to: 0
 13534  002B78  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13535  002B7A  EFC1  F015         	goto	u9221
 13536  002B7E  EFC3  F015         	goto	u9220
 13537  002B82                     u9221:
 13538  002B82  EFE7  F015         	goto	l1544
 13539  002B86                     u9220:
 13540  002B86                     
 13541                           ; BSR set to: 0
 13542  002B86  0EFF               	movlw	255
 13543  002B88  1567               	andwf	___fldiv@grs& (0+255),w,b
 13544  002B8A  6E4C               	movwf	??___fldiv^0,c
 13545  002B8C  0EFF               	movlw	255
 13546  002B8E  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13547  002B90  6E4D               	movwf	(??___fldiv+1)^0,c
 13548  002B92  0EFF               	movlw	255
 13549  002B94  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13550  002B96  6E4E               	movwf	(??___fldiv+2)^0,c
 13551  002B98  0E7F               	movlw	127
 13552  002B9A  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13553  002B9C  6E4F               	movwf	(??___fldiv+3)^0,c
 13554  002B9E  504C               	movf	??___fldiv^0,w,c
 13555  002BA0  104D               	iorwf	(??___fldiv+1)^0,w,c
 13556  002BA2  104E               	iorwf	(??___fldiv+2)^0,w,c
 13557  002BA4  104F               	iorwf	(??___fldiv+3)^0,w,c
 13558  002BA6  B4D8               	btfsc	status,2,c
 13559  002BA8  EFD8  F015         	goto	u9231
 13560  002BAC  EFDA  F015         	goto	u9230
 13561  002BB0                     u9231:
 13562  002BB0  EFDE  F015         	goto	l1545
 13563  002BB4                     u9230:
 13564  002BB4                     l8695:
 13565                           
 13566                           ; BSR set to: 0
 13567  002BB4  0E01               	movlw	1
 13568  002BB6  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13569  002BB8  EFE7  F015         	goto	l1544
 13570  002BBC                     l1545:
 13571                           
 13572                           ; BSR set to: 0
 13573  002BBC  A044               	btfss	___fldiv@b^0,0,c
 13574  002BBE  EFE3  F015         	goto	u9241
 13575  002BC2  EFE5  F015         	goto	u9240
 13576  002BC6                     u9241:
 13577  002BC6  EFE7  F015         	goto	l1544
 13578  002BCA                     u9240:
 13579  002BCA  EFDA  F015         	goto	l8695
 13580  002BCE                     l1544:
 13581                           
 13582                           ; BSR set to: 0
 13583  002BCE  516C               	movf	___fldiv@aexp& (0+255),w,b
 13584  002BD0  B4D8               	btfsc	status,2,c
 13585  002BD2  EFED  F015         	goto	u9251
 13586  002BD6  EFEF  F015         	goto	u9250
 13587  002BDA                     u9251:
 13588  002BDA  EF13  F016         	goto	l8707
 13589  002BDE                     u9250:
 13590  002BDE                     
 13591                           ; BSR set to: 0
 13592  002BDE  0E01               	movlw	1
 13593  002BE0  2644               	addwf	___fldiv@b^0,f,c
 13594  002BE2  0E00               	movlw	0
 13595  002BE4  2245               	addwfc	(___fldiv@b+1)^0,f,c
 13596  002BE6  2246               	addwfc	(___fldiv@b+2)^0,f,c
 13597  002BE8  2247               	addwfc	(___fldiv@b+3)^0,f,c
 13598  002BEA                     
 13599                           ; BSR set to: 0
 13600  002BEA  A047               	btfss	(___fldiv@b+3)^0,0,c
 13601  002BEC  EFFA  F015         	goto	u9261
 13602  002BF0  EFFC  F015         	goto	u9260
 13603  002BF4                     u9261:
 13604  002BF4  EF13  F016         	goto	l8707
 13605  002BF8                     u9260:
 13606  002BF8                     
 13607                           ; BSR set to: 0
 13608  002BF8  C044  F04C         	movff	___fldiv@b,??___fldiv
 13609  002BFC  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 13610  002C00  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 13611  002C04  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 13612  002C08  344F               	rlcf	(??___fldiv+3)^0,w,c
 13613  002C0A  324F               	rrcf	(??___fldiv+3)^0,f,c
 13614  002C0C  324E               	rrcf	(??___fldiv+2)^0,f,c
 13615  002C0E  324D               	rrcf	(??___fldiv+1)^0,f,c
 13616  002C10  324C               	rrcf	??___fldiv^0,f,c
 13617  002C12  C04C  F044         	movff	??___fldiv,___fldiv@b
 13618  002C16  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 13619  002C1A  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 13620  002C1E  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 13621  002C22                     
 13622                           ; BSR set to: 0
 13623  002C22  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13624  002C24  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13625  002C26                     l8707:
 13626                           
 13627                           ; BSR set to: 0
 13628  002C26  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13629  002C28  EF1E  F016         	goto	u9271
 13630  002C2C  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13631  002C2E  E108               	bnz	u9270
 13632  002C30  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13633  002C32  A0D8               	btfss	status,0,c
 13634  002C34  EF1E  F016         	goto	u9271
 13635  002C38  EF20  F016         	goto	u9270
 13636  002C3C                     u9271:
 13637  002C3C  EF2B  F016         	goto	l8711
 13638  002C40                     u9270:
 13639  002C40                     
 13640                           ; BSR set to: 0
 13641  002C40  0E00               	movlw	0
 13642  002C42  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13643  002C44  6965               	setf	___fldiv@new_exp& (0+255),b
 13644  002C46  0E00               	movlw	0
 13645  002C48  6E44               	movwf	___fldiv@b^0,c
 13646  002C4A  0E00               	movlw	0
 13647  002C4C  6E45               	movwf	(___fldiv@b+1)^0,c
 13648  002C4E  0E00               	movlw	0
 13649  002C50  6E46               	movwf	(___fldiv@b+2)^0,c
 13650  002C52  0E00               	movlw	0
 13651  002C54  6E47               	movwf	(___fldiv@b+3)^0,c
 13652  002C56                     l8711:
 13653                           
 13654                           ; BSR set to: 0
 13655  002C56  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13656  002C58  EF38  F016         	goto	u9280
 13657  002C5C  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13658  002C5E  E106               	bnz	u9281
 13659  002C60  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13660  002C62  B0D8               	btfsc	status,0,c
 13661  002C64  EF36  F016         	goto	u9281
 13662  002C68  EF38  F016         	goto	u9280
 13663  002C6C                     u9281:
 13664  002C6C  EF46  F016         	goto	l8715
 13665  002C70                     u9280:
 13666  002C70                     
 13667                           ; BSR set to: 0
 13668  002C70  0E00               	movlw	0
 13669  002C72  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13670  002C74  0E00               	movlw	0
 13671  002C76  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13672  002C78  0E00               	movlw	0
 13673  002C7A  6E44               	movwf	___fldiv@b^0,c
 13674  002C7C  0E00               	movlw	0
 13675  002C7E  6E45               	movwf	(___fldiv@b+1)^0,c
 13676  002C80  0E00               	movlw	0
 13677  002C82  6E46               	movwf	(___fldiv@b+2)^0,c
 13678  002C84  0E00               	movlw	0
 13679  002C86  6E47               	movwf	(___fldiv@b+3)^0,c
 13680  002C88  0E00               	movlw	0
 13681  002C8A  6F64               	movwf	___fldiv@sign& (0+255),b
 13682  002C8C                     l8715:
 13683                           
 13684                           ; BSR set to: 0
 13685  002C8C  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13686  002C90                     
 13687                           ; BSR set to: 0
 13688  002C90  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13689  002C92  EF4D  F016         	goto	u9291
 13690  002C96  EF4F  F016         	goto	u9290
 13691  002C9A                     u9291:
 13692  002C9A  EF52  F016         	goto	l8721
 13693  002C9E                     u9290:
 13694  002C9E                     
 13695                           ; BSR set to: 0
 13696  002C9E  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13697  002CA0  EF53  F016         	goto	l8723
 13698  002CA4                     l8721:
 13699                           
 13700                           ; BSR set to: 0
 13701  002CA4  9E46               	bcf	(___fldiv@b+2)^0,7,c
 13702  002CA6                     l8723:
 13703                           
 13704                           ; BSR set to: 0
 13705  002CA6  90D8               	bcf	status,0,c
 13706  002CA8  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13707  002CAA  6E47               	movwf	(___fldiv@b+3)^0,c
 13708  002CAC  EF09  F015         	goto	l8637
 13709  002CB0                     l1531:
 13710                           
 13711                           ; BSR set to: 0
 13712  002CB0  0012               	return		;funcret
 13713  002CB2                     __end_of___fldiv:
 13714                           	opt callstack 0
 13715                           
 13716 ;; *************** function ___awmod *****************
 13717 ;; Defined at:
 13718 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13719 ;; Parameters:    Size  Location     Type
 13720 ;;  dividend        2    5[COMRAM] int 
 13721 ;;  divisor         2    7[COMRAM] int 
 13722 ;; Auto vars:     Size  Location     Type
 13723 ;;  sign            1   10[COMRAM] unsigned char 
 13724 ;;  counter         1    9[COMRAM] unsigned char 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  2    5[COMRAM] int 
 13727 ;; Registers used:
 13728 ;;		wreg, status,2, status,0
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13734 ;;      Params:         4       0       0       0       0       0       0       0       0
 13735 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13737 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13738 ;;Total ram usage:        6 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:    2
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_efgtoa
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           	psect	text48
 13749  004990                     __ptext48:
 13750                           	opt callstack 0
 13751  004990                     ___awmod:
 13752                           	opt callstack 23
 13753  004990  0E00               	movlw	0
 13754  004992  6E0B               	movwf	___awmod@sign^0,c
 13755  004994  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 13756  004996  EFD1  F024         	goto	u9550
 13757  00499A  EFCF  F024         	goto	u9551
 13758  00499E                     u9551:
 13759  00499E  EFD7  F024         	goto	l8919
 13760  0049A2                     u9550:
 13761  0049A2  6C06               	negf	___awmod@dividend^0,c
 13762  0049A4  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13763  0049A6  B0D8               	btfsc	status,0,c
 13764  0049A8  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13765  0049AA  0E01               	movlw	1
 13766  0049AC  6E0B               	movwf	___awmod@sign^0,c
 13767  0049AE                     l8919:
 13768  0049AE  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 13769  0049B0  EFDE  F024         	goto	u9560
 13770  0049B4  EFDC  F024         	goto	u9561
 13771  0049B8                     u9561:
 13772  0049B8  EFE2  F024         	goto	l8923
 13773  0049BC                     u9560:
 13774  0049BC  6C08               	negf	___awmod@divisor^0,c
 13775  0049BE  1E09               	comf	(___awmod@divisor+1)^0,f,c
 13776  0049C0  B0D8               	btfsc	status,0,c
 13777  0049C2  2A09               	incf	(___awmod@divisor+1)^0,f,c
 13778  0049C4                     l8923:
 13779  0049C4  5008               	movf	___awmod@divisor^0,w,c
 13780  0049C6  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 13781  0049C8  B4D8               	btfsc	status,2,c
 13782  0049CA  EFE9  F024         	goto	u9571
 13783  0049CE  EFEB  F024         	goto	u9570
 13784  0049D2                     u9571:
 13785  0049D2  EF0F  F025         	goto	l8939
 13786  0049D6                     u9570:
 13787  0049D6  0E01               	movlw	1
 13788  0049D8  6E0A               	movwf	___awmod@counter^0,c
 13789  0049DA  EFF3  F024         	goto	l8929
 13790  0049DE                     l8927:
 13791  0049DE  90D8               	bcf	status,0,c
 13792  0049E0  3608               	rlcf	___awmod@divisor^0,f,c
 13793  0049E2  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 13794  0049E4  2A0A               	incf	___awmod@counter^0,f,c
 13795  0049E6                     l8929:
 13796  0049E6  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 13797  0049E8  EFF8  F024         	goto	u9581
 13798  0049EC  EFFA  F024         	goto	u9580
 13799  0049F0                     u9581:
 13800  0049F0  EFEF  F024         	goto	l8927
 13801  0049F4                     u9580:
 13802  0049F4                     l8931:
 13803  0049F4  5008               	movf	___awmod@divisor^0,w,c
 13804  0049F6  5C06               	subwf	___awmod@dividend^0,w,c
 13805  0049F8  5009               	movf	(___awmod@divisor+1)^0,w,c
 13806  0049FA  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 13807  0049FC  A0D8               	btfss	status,0,c
 13808  0049FE  EF03  F025         	goto	u9591
 13809  004A02  EF05  F025         	goto	u9590
 13810  004A06                     u9591:
 13811  004A06  EF09  F025         	goto	l8935
 13812  004A0A                     u9590:
 13813  004A0A  5008               	movf	___awmod@divisor^0,w,c
 13814  004A0C  5E06               	subwf	___awmod@dividend^0,f,c
 13815  004A0E  5009               	movf	(___awmod@divisor+1)^0,w,c
 13816  004A10  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 13817  004A12                     l8935:
 13818  004A12  90D8               	bcf	status,0,c
 13819  004A14  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 13820  004A16  3208               	rrcf	___awmod@divisor^0,f,c
 13821  004A18  2E0A               	decfsz	___awmod@counter^0,f,c
 13822  004A1A  EFFA  F024         	goto	l8931
 13823  004A1E                     l8939:
 13824  004A1E  500B               	movf	___awmod@sign^0,w,c
 13825  004A20  B4D8               	btfsc	status,2,c
 13826  004A22  EF15  F025         	goto	u9601
 13827  004A26  EF17  F025         	goto	u9600
 13828  004A2A                     u9601:
 13829  004A2A  EF1B  F025         	goto	l8943
 13830  004A2E                     u9600:
 13831  004A2E  6C06               	negf	___awmod@dividend^0,c
 13832  004A30  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13833  004A32  B0D8               	btfsc	status,0,c
 13834  004A34  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13835  004A36                     l8943:
 13836  004A36  C006  F006         	movff	___awmod@dividend,?___awmod
 13837  004A3A  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 13838  004A3E  0012               	return		;funcret
 13839  004A40                     __end_of___awmod:
 13840                           	opt callstack 0
 13841                           
 13842 ;; *************** function ___awdiv *****************
 13843 ;; Defined at:
 13844 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13845 ;; Parameters:    Size  Location     Type
 13846 ;;  dividend        2    5[COMRAM] int 
 13847 ;;  divisor         2    7[COMRAM] int 
 13848 ;; Auto vars:     Size  Location     Type
 13849 ;;  quotient        2   11[COMRAM] int 
 13850 ;;  sign            1   10[COMRAM] unsigned char 
 13851 ;;  counter         1    9[COMRAM] unsigned char 
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  2    5[COMRAM] int 
 13854 ;; Registers used:
 13855 ;;		wreg, status,2, status,0
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13861 ;;      Params:         4       0       0       0       0       0       0       0       0
 13862 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13863 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13864 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13865 ;;Total ram usage:        8 bytes
 13866 ;; Hardware stack levels used:    1
 13867 ;; Hardware stack levels required when called:    2
 13868 ;; This function calls:
 13869 ;;		Nothing
 13870 ;; This function is called by:
 13871 ;;		_efgtoa
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text49
 13876  00480A                     __ptext49:
 13877                           	opt callstack 0
 13878  00480A                     ___awdiv:
 13879                           	opt callstack 23
 13880  00480A  0E00               	movlw	0
 13881  00480C  6E0B               	movwf	___awdiv@sign^0,c
 13882  00480E  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 13883  004810  EF0E  F024         	goto	u9490
 13884  004814  EF0C  F024         	goto	u9491
 13885  004818                     u9491:
 13886  004818  EF14  F024         	goto	l8875
 13887  00481C                     u9490:
 13888  00481C  6C08               	negf	___awdiv@divisor^0,c
 13889  00481E  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 13890  004820  B0D8               	btfsc	status,0,c
 13891  004822  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 13892  004824  0E01               	movlw	1
 13893  004826  6E0B               	movwf	___awdiv@sign^0,c
 13894  004828                     l8875:
 13895  004828  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 13896  00482A  EF1B  F024         	goto	u9500
 13897  00482E  EF19  F024         	goto	u9501
 13898  004832                     u9501:
 13899  004832  EF21  F024         	goto	l8881
 13900  004836                     u9500:
 13901  004836  6C06               	negf	___awdiv@dividend^0,c
 13902  004838  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 13903  00483A  B0D8               	btfsc	status,0,c
 13904  00483C  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 13905  00483E  0E01               	movlw	1
 13906  004840  1A0B               	xorwf	___awdiv@sign^0,f,c
 13907  004842                     l8881:
 13908  004842  0E00               	movlw	0
 13909  004844  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 13910  004846  0E00               	movlw	0
 13911  004848  6E0C               	movwf	___awdiv@quotient^0,c
 13912  00484A  5008               	movf	___awdiv@divisor^0,w,c
 13913  00484C  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 13914  00484E  B4D8               	btfsc	status,2,c
 13915  004850  EF2C  F024         	goto	u9511
 13916  004854  EF2E  F024         	goto	u9510
 13917  004858                     u9511:
 13918  004858  EF56  F024         	goto	l8903
 13919  00485C                     u9510:
 13920  00485C  0E01               	movlw	1
 13921  00485E  6E0A               	movwf	___awdiv@counter^0,c
 13922  004860  EF36  F024         	goto	l8889
 13923  004864                     l8887:
 13924  004864  90D8               	bcf	status,0,c
 13925  004866  3608               	rlcf	___awdiv@divisor^0,f,c
 13926  004868  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 13927  00486A  2A0A               	incf	___awdiv@counter^0,f,c
 13928  00486C                     l8889:
 13929  00486C  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 13930  00486E  EF3B  F024         	goto	u9521
 13931  004872  EF3D  F024         	goto	u9520
 13932  004876                     u9521:
 13933  004876  EF32  F024         	goto	l8887
 13934  00487A                     u9520:
 13935  00487A                     l8891:
 13936  00487A  90D8               	bcf	status,0,c
 13937  00487C  360C               	rlcf	___awdiv@quotient^0,f,c
 13938  00487E  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 13939  004880  5008               	movf	___awdiv@divisor^0,w,c
 13940  004882  5C06               	subwf	___awdiv@dividend^0,w,c
 13941  004884  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13942  004886  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 13943  004888  A0D8               	btfss	status,0,c
 13944  00488A  EF49  F024         	goto	u9531
 13945  00488E  EF4B  F024         	goto	u9530
 13946  004892                     u9531:
 13947  004892  EF50  F024         	goto	l8899
 13948  004896                     u9530:
 13949  004896  5008               	movf	___awdiv@divisor^0,w,c
 13950  004898  5E06               	subwf	___awdiv@dividend^0,f,c
 13951  00489A  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13952  00489C  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 13953  00489E  800C               	bsf	___awdiv@quotient^0,0,c
 13954  0048A0                     l8899:
 13955  0048A0  90D8               	bcf	status,0,c
 13956  0048A2  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 13957  0048A4  3208               	rrcf	___awdiv@divisor^0,f,c
 13958  0048A6  2E0A               	decfsz	___awdiv@counter^0,f,c
 13959  0048A8  EF3D  F024         	goto	l8891
 13960  0048AC                     l8903:
 13961  0048AC  500B               	movf	___awdiv@sign^0,w,c
 13962  0048AE  B4D8               	btfsc	status,2,c
 13963  0048B0  EF5C  F024         	goto	u9541
 13964  0048B4  EF5E  F024         	goto	u9540
 13965  0048B8                     u9541:
 13966  0048B8  EF62  F024         	goto	l8907
 13967  0048BC                     u9540:
 13968  0048BC  6C0C               	negf	___awdiv@quotient^0,c
 13969  0048BE  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 13970  0048C0  B0D8               	btfsc	status,0,c
 13971  0048C2  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 13972  0048C4                     l8907:
 13973  0048C4  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 13974  0048C8  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 13975  0048CC  0012               	return		;funcret
 13976  0048CE                     __end_of___awdiv:
 13977                           	opt callstack 0
 13978                           
 13979 ;; *************** function _dtoa *****************
 13980 ;; Defined at:
 13981 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13982 ;; Parameters:    Size  Location     Type
 13983 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 13984 ;;		 -> sprintf@f(6), 
 13985 ;;  d               8   34[COMRAM] long long 
 13986 ;; Auto vars:     Size  Location     Type
 13987 ;;  n               8   58[COMRAM] long long 
 13988 ;;  i               2   66[COMRAM] int 
 13989 ;;  s               2   56[COMRAM] int 
 13990 ;;  w               2   54[COMRAM] int 
 13991 ;;  p               2   52[COMRAM] int 
 13992 ;; Return value:  Size  Location     Type
 13993 ;;                  2   32[COMRAM] int 
 13994 ;; Registers used:
 13995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13996 ;; Tracked objects:
 13997 ;;		On entry : 0/0
 13998 ;;		On exit  : 0/0
 13999 ;;		Unchanged: 0/0
 14000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14001 ;;      Params:        10       0       0       0       0       0       0       0       0
 14002 ;;      Locals:        18       0       0       0       0       0       0       0       0
 14003 ;;      Temps:          8       0       0       0       0       0       0       0       0
 14004 ;;      Totals:        36       0       0       0       0       0       0       0       0
 14005 ;;Total ram usage:       36 bytes
 14006 ;; Hardware stack levels used:    1
 14007 ;; Hardware stack levels required when called:    6
 14008 ;; This function calls:
 14009 ;;		___aodiv
 14010 ;;		___aomod
 14011 ;;		_abs
 14012 ;;		_pad
 14013 ;; This function is called by:
 14014 ;;		_vfpfcnvrt
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018                           	psect	text50
 14019  002CB2                     __ptext50:
 14020                           	opt callstack 0
 14021  002CB2                     _dtoa:
 14022                           	opt callstack 20
 14023  002CB2                     
 14024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 14025  002CB2  C023  F03B         	movff	dtoa@d,dtoa@n
 14026  002CB6  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
 14027  002CBA  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
 14028  002CBE  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
 14029  002CC2  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
 14030  002CC6  C028  F040         	movff	dtoa@d+5,dtoa@n+5
 14031  002CCA  C029  F041         	movff	dtoa@d+6,dtoa@n+6
 14032  002CCE  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
 14033  002CD2                     
 14034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 14035  002CD2  BE42               	btfsc	(dtoa@n+7)^0,7,c
 14036  002CD4  EF6E  F016         	goto	u9931
 14037  002CD8  EF71  F016         	goto	u9930
 14038  002CDC                     u9931:
 14039  002CDC  0E01               	movlw	1
 14040  002CDE  EF72  F016         	goto	u9940
 14041  002CE2                     u9930:
 14042  002CE2  0E00               	movlw	0
 14043  002CE4                     u9940:
 14044  002CE4  6E39               	movwf	dtoa@s^0,c
 14045  002CE6  6A3A               	clrf	(dtoa@s+1)^0,c
 14046                           
 14047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 14048  002CE8  5039               	movf	dtoa@s^0,w,c
 14049  002CEA  103A               	iorwf	(dtoa@s+1)^0,w,c
 14050  002CEC  B4D8               	btfsc	status,2,c
 14051  002CEE  EF7B  F016         	goto	u9951
 14052  002CF2  EF7D  F016         	goto	u9950
 14053  002CF6                     u9951:
 14054  002CF6  EF8D  F016         	goto	l9133
 14055  002CFA                     u9950:
 14056  002CFA                     
 14057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 14058  002CFA  1E42               	comf	(dtoa@n+7)^0,f,c
 14059  002CFC  1E41               	comf	(dtoa@n+6)^0,f,c
 14060  002CFE  1E40               	comf	(dtoa@n+5)^0,f,c
 14061  002D00  1E3F               	comf	(dtoa@n+4)^0,f,c
 14062  002D02  1E3E               	comf	(dtoa@n+3)^0,f,c
 14063  002D04  1E3D               	comf	(dtoa@n+2)^0,f,c
 14064  002D06  1E3C               	comf	(dtoa@n+1)^0,f,c
 14065  002D08  6C3B               	negf	dtoa@n^0,c
 14066  002D0A  0E00               	movlw	0
 14067  002D0C  223C               	addwfc	(dtoa@n+1)^0,f,c
 14068  002D0E  223D               	addwfc	(dtoa@n+2)^0,f,c
 14069  002D10  223E               	addwfc	(dtoa@n+3)^0,f,c
 14070  002D12  223F               	addwfc	(dtoa@n+4)^0,f,c
 14071  002D14  2240               	addwfc	(dtoa@n+5)^0,f,c
 14072  002D16  2241               	addwfc	(dtoa@n+6)^0,f,c
 14073  002D18  2242               	addwfc	(dtoa@n+7)^0,f,c
 14074  002D1A                     l9133:
 14075                           
 14076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 14077  002D1A  0101               	movlb	1	; () banked
 14078  002D1C  BF35               	btfsc	(_prec+1)& (0+255),7,b
 14079  002D1E  EF93  F016         	goto	u9961
 14080  002D22  EF95  F016         	goto	u9960
 14081  002D26                     u9961:
 14082  002D26  EF96  F016         	goto	l9137
 14083  002D2A                     u9960:
 14084  002D2A                     
 14085                           ; BSR set to: 1
 14086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 14087  002D2A  9255               	bcf	_flags^0,1,c
 14088  002D2C                     l9137:
 14089                           
 14090                           ; BSR set to: 1
 14091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 14092  002D2C  BF35               	btfsc	(_prec+1)& (0+255),7,b
 14093  002D2E  EFA3  F016         	goto	u9970
 14094  002D32  5135               	movf	(_prec+1)& (0+255),w,b
 14095  002D34  E106               	bnz	u9971
 14096  002D36  0534               	decf	_prec& (0+255),w,b
 14097  002D38  B0D8               	btfsc	status,0,c
 14098  002D3A  EFA1  F016         	goto	u9971
 14099  002D3E  EFA3  F016         	goto	u9970
 14100  002D42                     u9971:
 14101  002D42  EFA9  F016         	goto	l800
 14102  002D46                     u9970:
 14103  002D46                     
 14104                           ; BSR set to: 1
 14105  002D46  0E00               	movlw	0
 14106  002D48  6E36               	movwf	(dtoa@p+1)^0,c
 14107  002D4A  0E01               	movlw	1
 14108  002D4C  6E35               	movwf	dtoa@p^0,c
 14109  002D4E  EFAD  F016         	goto	l802
 14110  002D52                     l800:
 14111                           
 14112                           ; BSR set to: 1
 14113  002D52  C134  F035         	movff	_prec,dtoa@p
 14114  002D56  C135  F036         	movff	_prec+1,dtoa@p+1
 14115  002D5A                     l802:
 14116                           
 14117                           ; BSR set to: 1
 14118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 14119  002D5A  C132  F037         	movff	_width,dtoa@w
 14120  002D5E  C133  F038         	movff	_width+1,dtoa@w+1
 14121  002D62                     
 14122                           ; BSR set to: 1
 14123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 14124  002D62  5039               	movf	dtoa@s^0,w,c
 14125  002D64  103A               	iorwf	(dtoa@s+1)^0,w,c
 14126  002D66  A4D8               	btfss	status,2,c
 14127  002D68  EFB8  F016         	goto	u9981
 14128  002D6C  EFBA  F016         	goto	u9980
 14129  002D70                     u9981:
 14130  002D70  EFC1  F016         	goto	l9145
 14131  002D74                     u9980:
 14132  002D74                     
 14133                           ; BSR set to: 1
 14134  002D74  A455               	btfss	_flags^0,2,c
 14135  002D76  EFBF  F016         	goto	u9991
 14136  002D7A  EFC1  F016         	goto	u9990
 14137  002D7E                     u9991:
 14138  002D7E  EFC4  F016         	goto	l9147
 14139  002D82                     u9990:
 14140  002D82                     l9145:
 14141                           
 14142                           ; BSR set to: 1
 14143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 14144  002D82  0637               	decf	dtoa@w^0,f,c
 14145  002D84  A0D8               	btfss	status,0,c
 14146  002D86  0638               	decf	(dtoa@w+1)^0,f,c
 14147  002D88                     l9147:
 14148                           
 14149                           ; BSR set to: 1
 14150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 14151  002D88  0E00               	movlw	0
 14152  002D8A  6E44               	movwf	(dtoa@i+1)^0,c
 14153  002D8C  0E4F               	movlw	79
 14154  002D8E  6E43               	movwf	dtoa@i^0,c
 14155  002D90                     
 14156                           ; BSR set to: 1
 14157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 14158  002D90  0E00               	movlw	0
 14159  002D92  6F91               	movwf	(_dbuf+79)& (0+255),b
 14160                           
 14161                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14162  002D94  EF48  F017         	goto	l9161
 14163  002D98                     l9151:
 14164                           
 14165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 14166  002D98  0643               	decf	dtoa@i^0,f,c
 14167  002D9A  A0D8               	btfss	status,0,c
 14168  002D9C  0644               	decf	(dtoa@i+1)^0,f,c
 14169  002D9E                     
 14170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 14171  002D9E  0E42               	movlw	low _dbuf
 14172  002DA0  2443               	addwf	dtoa@i^0,w,c
 14173  002DA2  6ED9               	movwf	fsr2l,c
 14174  002DA4  0E01               	movlw	high _dbuf
 14175  002DA6  2044               	addwfc	(dtoa@i+1)^0,w,c
 14176  002DA8  6EDA               	movwf	fsr2h,c
 14177  002DAA  C03B  F006         	movff	dtoa@n,___aomod@dividend
 14178  002DAE  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
 14179  002DB2  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
 14180  002DB6  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
 14181  002DBA  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 14182  002DBE  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 14183  002DC2  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 14184  002DC6  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 14185  002DCA  0E0A               	movlw	10
 14186  002DCC  6E0E               	movwf	___aomod@divisor^0,c
 14187  002DCE  0E00               	movlw	0
 14188  002DD0  6E0F               	movwf	(___aomod@divisor+1)^0,c
 14189  002DD2  0E00               	movlw	0
 14190  002DD4  6E10               	movwf	(___aomod@divisor+2)^0,c
 14191  002DD6  0E00               	movlw	0
 14192  002DD8  6E11               	movwf	(___aomod@divisor+3)^0,c
 14193  002DDA  0E00               	movlw	0
 14194  002DDC  6E12               	movwf	(___aomod@divisor+4)^0,c
 14195  002DDE  0E00               	movlw	0
 14196  002DE0  6E13               	movwf	(___aomod@divisor+5)^0,c
 14197  002DE2  0E00               	movlw	0
 14198  002DE4  6E14               	movwf	(___aomod@divisor+6)^0,c
 14199  002DE6  0E00               	movlw	0
 14200  002DE8  6E15               	movwf	(___aomod@divisor+7)^0,c
 14201  002DEA  ECC6  F01E         	call	___aomod	;wreg free
 14202  002DEE  C006  F02B         	movff	?___aomod,??_dtoa
 14203  002DF2  C007  F02C         	movff	?___aomod+1,??_dtoa+1
 14204  002DF6  C008  F02D         	movff	?___aomod+2,??_dtoa+2
 14205  002DFA  C009  F02E         	movff	?___aomod+3,??_dtoa+3
 14206  002DFE  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
 14207  002E02  C00B  F030         	movff	?___aomod+5,??_dtoa+5
 14208  002E06  C00C  F031         	movff	?___aomod+6,??_dtoa+6
 14209  002E0A  C00D  F032         	movff	?___aomod+7,??_dtoa+7
 14210  002E0E  C02B  F018         	movff	??_dtoa,abs@a
 14211  002E12  C02D  F019         	movff	??_dtoa+2,abs@a+1
 14212  002E16  ECE7  F02A         	call	_abs	;wreg free
 14213  002E1A  5018               	movf	?_abs^0,w,c
 14214  002E1C  0F30               	addlw	48
 14215  002E1E  6EDF               	movwf	indf2,c
 14216  002E20                     
 14217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 14218  002E20  0635               	decf	dtoa@p^0,f,c
 14219  002E22  A0D8               	btfss	status,0,c
 14220  002E24  0636               	decf	(dtoa@p+1)^0,f,c
 14221  002E26                     
 14222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 14223  002E26  0637               	decf	dtoa@w^0,f,c
 14224  002E28  A0D8               	btfss	status,0,c
 14225  002E2A  0638               	decf	(dtoa@w+1)^0,f,c
 14226  002E2C                     
 14227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 14228  002E2C  C03B  F006         	movff	dtoa@n,___aodiv@dividend
 14229  002E30  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 14230  002E34  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 14231  002E38  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 14232  002E3C  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 14233  002E40  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 14234  002E44  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 14235  002E48  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 14236  002E4C  0E0A               	movlw	10
 14237  002E4E  6E0E               	movwf	___aodiv@divisor^0,c
 14238  002E50  0E00               	movlw	0
 14239  002E52  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 14240  002E54  0E00               	movlw	0
 14241  002E56  6E10               	movwf	(___aodiv@divisor+2)^0,c
 14242  002E58  0E00               	movlw	0
 14243  002E5A  6E11               	movwf	(___aodiv@divisor+3)^0,c
 14244  002E5C  0E00               	movlw	0
 14245  002E5E  6E12               	movwf	(___aodiv@divisor+4)^0,c
 14246  002E60  0E00               	movlw	0
 14247  002E62  6E13               	movwf	(___aodiv@divisor+5)^0,c
 14248  002E64  0E00               	movlw	0
 14249  002E66  6E14               	movwf	(___aodiv@divisor+6)^0,c
 14250  002E68  0E00               	movlw	0
 14251  002E6A  6E15               	movwf	(___aodiv@divisor+7)^0,c
 14252  002E6C  EC44  F01D         	call	___aodiv	;wreg free
 14253  002E70  C006  F03B         	movff	?___aodiv,dtoa@n
 14254  002E74  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
 14255  002E78  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
 14256  002E7C  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
 14257  002E80  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
 14258  002E84  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
 14259  002E88  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
 14260  002E8C  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
 14261  002E90                     l9161:
 14262                           
 14263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14264  002E90  BE44               	btfsc	(dtoa@i+1)^0,7,c
 14265  002E92  EF53  F017         	goto	u10001
 14266  002E96  5044               	movf	(dtoa@i+1)^0,w,c
 14267  002E98  E108               	bnz	u10000
 14268  002E9A  0443               	decf	dtoa@i^0,w,c
 14269  002E9C  A0D8               	btfss	status,0,c
 14270  002E9E  EF53  F017         	goto	u10001
 14271  002EA2  EF55  F017         	goto	u10000
 14272  002EA6                     u10001:
 14273  002EA6  EF85  F017         	goto	l9171
 14274  002EAA                     u10000:
 14275  002EAA  503B               	movf	dtoa@n^0,w,c
 14276  002EAC  103C               	iorwf	(dtoa@n+1)^0,w,c
 14277  002EAE  103D               	iorwf	(dtoa@n+2)^0,w,c
 14278  002EB0  103E               	iorwf	(dtoa@n+3)^0,w,c
 14279  002EB2  103F               	iorwf	(dtoa@n+4)^0,w,c
 14280  002EB4  1040               	iorwf	(dtoa@n+5)^0,w,c
 14281  002EB6  1041               	iorwf	(dtoa@n+6)^0,w,c
 14282  002EB8  1042               	iorwf	(dtoa@n+7)^0,w,c
 14283  002EBA  A4D8               	btfss	status,2,c
 14284  002EBC  EF62  F017         	goto	u10011
 14285  002EC0  EF64  F017         	goto	u10010
 14286  002EC4                     u10011:
 14287  002EC4  EFCC  F016         	goto	l9151
 14288  002EC8                     u10010:
 14289  002EC8  BE36               	btfsc	(dtoa@p+1)^0,7,c
 14290  002ECA  EF71  F017         	goto	u10020
 14291  002ECE  5036               	movf	(dtoa@p+1)^0,w,c
 14292  002ED0  E106               	bnz	u10021
 14293  002ED2  0435               	decf	dtoa@p^0,w,c
 14294  002ED4  B0D8               	btfsc	status,0,c
 14295  002ED6  EF6F  F017         	goto	u10021
 14296  002EDA  EF71  F017         	goto	u10020
 14297  002EDE                     u10021:
 14298  002EDE  EFCC  F016         	goto	l9151
 14299  002EE2                     u10020:
 14300  002EE2  BE38               	btfsc	(dtoa@w+1)^0,7,c
 14301  002EE4  EF7C  F017         	goto	u10031
 14302  002EE8  5038               	movf	(dtoa@w+1)^0,w,c
 14303  002EEA  E108               	bnz	u10030
 14304  002EEC  0437               	decf	dtoa@w^0,w,c
 14305  002EEE  A0D8               	btfss	status,0,c
 14306  002EF0  EF7C  F017         	goto	u10031
 14307  002EF4  EF7E  F017         	goto	u10030
 14308  002EF8                     u10031:
 14309  002EF8  EF85  F017         	goto	l9171
 14310  002EFC                     u10030:
 14311  002EFC  B255               	btfsc	_flags^0,1,c
 14312  002EFE  EF83  F017         	goto	u10041
 14313  002F02  EF85  F017         	goto	u10040
 14314  002F06                     u10041:
 14315  002F06  EFCC  F016         	goto	l9151
 14316  002F0A                     u10040:
 14317  002F0A                     l9171:
 14318                           
 14319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 14320  002F0A  5039               	movf	dtoa@s^0,w,c
 14321  002F0C  103A               	iorwf	(dtoa@s+1)^0,w,c
 14322  002F0E  A4D8               	btfss	status,2,c
 14323  002F10  EF8C  F017         	goto	u10051
 14324  002F14  EF8E  F017         	goto	u10050
 14325  002F18                     u10051:
 14326  002F18  EF95  F017         	goto	l9175
 14327  002F1C                     u10050:
 14328  002F1C  A455               	btfss	_flags^0,2,c
 14329  002F1E  EF93  F017         	goto	u10061
 14330  002F22  EF95  F017         	goto	u10060
 14331  002F26                     u10061:
 14332  002F26  EFB3  F017         	goto	l9185
 14333  002F2A                     u10060:
 14334  002F2A                     l9175:
 14335                           
 14336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 14337  002F2A  0643               	decf	dtoa@i^0,f,c
 14338  002F2C  A0D8               	btfss	status,0,c
 14339  002F2E  0644               	decf	(dtoa@i+1)^0,f,c
 14340  002F30                     
 14341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 14342  002F30  5039               	movf	dtoa@s^0,w,c
 14343  002F32  103A               	iorwf	(dtoa@s+1)^0,w,c
 14344  002F34  A4D8               	btfss	status,2,c
 14345  002F36  EF9F  F017         	goto	u10071
 14346  002F3A  EFA1  F017         	goto	u10070
 14347  002F3E                     u10071:
 14348  002F3E  EFA7  F017         	goto	l9181
 14349  002F42                     u10070:
 14350  002F42  0E00               	movlw	0
 14351  002F44  6E34               	movwf	(_dtoa$900+1)^0,c
 14352  002F46  0E2B               	movlw	43
 14353  002F48  6E33               	movwf	_dtoa$900^0,c
 14354  002F4A  EFAB  F017         	goto	l9183
 14355  002F4E                     l9181:
 14356  002F4E  0E00               	movlw	0
 14357  002F50  6E34               	movwf	(_dtoa$900+1)^0,c
 14358  002F52  0E2D               	movlw	45
 14359  002F54  6E33               	movwf	_dtoa$900^0,c
 14360  002F56                     l9183:
 14361  002F56  0E42               	movlw	low _dbuf
 14362  002F58  2443               	addwf	dtoa@i^0,w,c
 14363  002F5A  6ED9               	movwf	fsr2l,c
 14364  002F5C  0E01               	movlw	high _dbuf
 14365  002F5E  2044               	addwfc	(dtoa@i+1)^0,w,c
 14366  002F60  6EDA               	movwf	fsr2h,c
 14367  002F62  C033  FFDF         	movff	_dtoa$900,indf2
 14368  002F66                     l9185:
 14369                           
 14370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 14371  002F66  C021  F016         	movff	dtoa@fp,pad@fp
 14372  002F6A  C022  F017         	movff	dtoa@fp+1,pad@fp+1
 14373  002F6E  0E42               	movlw	low _dbuf
 14374  002F70  2443               	addwf	dtoa@i^0,w,c
 14375  002F72  6E18               	movwf	pad@buf^0,c
 14376  002F74  0E01               	movlw	high _dbuf
 14377  002F76  2044               	addwfc	(dtoa@i+1)^0,w,c
 14378  002F78  6E19               	movwf	(pad@buf+1)^0,c
 14379  002F7A  C037  F01A         	movff	dtoa@w,pad@p
 14380  002F7E  C038  F01B         	movff	dtoa@w+1,pad@p+1
 14381  002F82  EC67  F024         	call	_pad	;wreg free
 14382  002F86  C016  F021         	movff	?_pad,?_dtoa
 14383  002F8A  C017  F022         	movff	?_pad+1,?_dtoa+1
 14384  002F8E  0012               	return		;funcret
 14385  002F90                     __end_of_dtoa:
 14386                           	opt callstack 0
 14387                           
 14388 ;; *************** function _abs *****************
 14389 ;; Defined at:
 14390 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14391 ;; Parameters:    Size  Location     Type
 14392 ;;  a               2   23[COMRAM] int 
 14393 ;; Auto vars:     Size  Location     Type
 14394 ;;		None
 14395 ;; Return value:  Size  Location     Type
 14396 ;;                  2   23[COMRAM] int 
 14397 ;; Registers used:
 14398 ;;		wreg, status,2, status,0
 14399 ;; Tracked objects:
 14400 ;;		On entry : 0/0
 14401 ;;		On exit  : 0/0
 14402 ;;		Unchanged: 0/0
 14403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14404 ;;      Params:         2       0       0       0       0       0       0       0       0
 14405 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14406 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14407 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14408 ;;Total ram usage:        4 bytes
 14409 ;; Hardware stack levels used:    1
 14410 ;; Hardware stack levels required when called:    2
 14411 ;; This function calls:
 14412 ;;		Nothing
 14413 ;; This function is called by:
 14414 ;;		_dtoa
 14415 ;; This function uses a non-reentrant model
 14416 ;;
 14417                           
 14418                           	psect	text51
 14419  0055CE                     __ptext51:
 14420                           	opt callstack 0
 14421  0055CE                     _abs:
 14422                           	opt callstack 23
 14423  0055CE  BE19               	btfsc	(abs@a+1)^0,7,c
 14424  0055D0  EFF4  F02A         	goto	u8690
 14425  0055D4  5019               	movf	(abs@a+1)^0,w,c
 14426  0055D6  E106               	bnz	u8691
 14427  0055D8  0418               	decf	abs@a^0,w,c
 14428  0055DA  B0D8               	btfsc	status,0,c
 14429  0055DC  EFF2  F02A         	goto	u8691
 14430  0055E0  EFF4  F02A         	goto	u8690
 14431  0055E4                     u8691:
 14432  0055E4  EF02  F02B         	goto	l1635
 14433  0055E8                     u8690:
 14434  0055E8  C018  F01A         	movff	abs@a,??_abs
 14435  0055EC  C019  F01B         	movff	abs@a+1,??_abs+1
 14436  0055F0  1E1A               	comf	??_abs^0,f,c
 14437  0055F2  1E1B               	comf	(??_abs+1)^0,f,c
 14438  0055F4  4A1A               	infsnz	??_abs^0,f,c
 14439  0055F6  2A1B               	incf	(??_abs+1)^0,f,c
 14440  0055F8  C01A  F018         	movff	??_abs,?_abs
 14441  0055FC  C01B  F019         	movff	??_abs+1,?_abs+1
 14442  005600  EF06  F02B         	goto	l1638
 14443  005604                     l1635:
 14444  005604  C018  F018         	movff	abs@a,?_abs
 14445  005608  C019  F019         	movff	abs@a+1,?_abs+1
 14446  00560C                     l1638:
 14447  00560C  0012               	return		;funcret
 14448  00560E                     __end_of_abs:
 14449                           	opt callstack 0
 14450                           
 14451 ;; *************** function ___aomod *****************
 14452 ;; Defined at:
 14453 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14454 ;; Parameters:    Size  Location     Type
 14455 ;;  dividend        8    5[COMRAM] long long 
 14456 ;;  divisor         8   13[COMRAM] long long 
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;  sign            1   22[COMRAM] unsigned char 
 14459 ;;  counter         1   21[COMRAM] unsigned char 
 14460 ;; Return value:  Size  Location     Type
 14461 ;;                  8    5[COMRAM] long long 
 14462 ;; Registers used:
 14463 ;;		wreg, status,2, status,0
 14464 ;; Tracked objects:
 14465 ;;		On entry : 0/0
 14466 ;;		On exit  : 0/0
 14467 ;;		Unchanged: 0/0
 14468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14469 ;;      Params:        16       0       0       0       0       0       0       0       0
 14470 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14471 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14472 ;;      Totals:        18       0       0       0       0       0       0       0       0
 14473 ;;Total ram usage:       18 bytes
 14474 ;; Hardware stack levels used:    1
 14475 ;; Hardware stack levels required when called:    2
 14476 ;; This function calls:
 14477 ;;		Nothing
 14478 ;; This function is called by:
 14479 ;;		_dtoa
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           	psect	text52
 14484  003D8C                     __ptext52:
 14485                           	opt callstack 0
 14486  003D8C                     ___aomod:
 14487                           	opt callstack 23
 14488  003D8C  0E00               	movlw	0
 14489  003D8E  6E17               	movwf	___aomod@sign^0,c
 14490  003D90  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 14491  003D92  EFCF  F01E         	goto	u9010
 14492  003D96  EFCD  F01E         	goto	u9011
 14493  003D9A                     u9011:
 14494  003D9A  EFE1  F01E         	goto	l8565
 14495  003D9E                     u9010:
 14496  003D9E  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14497  003DA0  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14498  003DA2  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14499  003DA4  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14500  003DA6  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14501  003DA8  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14502  003DAA  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14503  003DAC  6C06               	negf	___aomod@dividend^0,c
 14504  003DAE  0E00               	movlw	0
 14505  003DB0  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14506  003DB2  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14507  003DB4  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14508  003DB6  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14509  003DB8  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14510  003DBA  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14511  003DBC  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14512  003DBE  0E01               	movlw	1
 14513  003DC0  6E17               	movwf	___aomod@sign^0,c
 14514  003DC2                     l8565:
 14515  003DC2  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 14516  003DC4  EFE8  F01E         	goto	u9020
 14517  003DC8  EFE6  F01E         	goto	u9021
 14518  003DCC                     u9021:
 14519  003DCC  EFF8  F01E         	goto	l8569
 14520  003DD0                     u9020:
 14521  003DD0  1E15               	comf	(___aomod@divisor+7)^0,f,c
 14522  003DD2  1E14               	comf	(___aomod@divisor+6)^0,f,c
 14523  003DD4  1E13               	comf	(___aomod@divisor+5)^0,f,c
 14524  003DD6  1E12               	comf	(___aomod@divisor+4)^0,f,c
 14525  003DD8  1E11               	comf	(___aomod@divisor+3)^0,f,c
 14526  003DDA  1E10               	comf	(___aomod@divisor+2)^0,f,c
 14527  003DDC  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 14528  003DDE  6C0E               	negf	___aomod@divisor^0,c
 14529  003DE0  0E00               	movlw	0
 14530  003DE2  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 14531  003DE4  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 14532  003DE6  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 14533  003DE8  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 14534  003DEA  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 14535  003DEC  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 14536  003DEE  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 14537  003DF0                     l8569:
 14538  003DF0  500E               	movf	___aomod@divisor^0,w,c
 14539  003DF2  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 14540  003DF4  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 14541  003DF6  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 14542  003DF8  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 14543  003DFA  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 14544  003DFC  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 14545  003DFE  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 14546  003E00  B4D8               	btfsc	status,2,c
 14547  003E02  EF05  F01F         	goto	u9031
 14548  003E06  EF07  F01F         	goto	u9030
 14549  003E0A                     u9031:
 14550  003E0A  EF4F  F01F         	goto	l8585
 14551  003E0E                     u9030:
 14552  003E0E  0E01               	movlw	1
 14553  003E10  6E16               	movwf	___aomod@counter^0,c
 14554  003E12  EF15  F01F         	goto	l8575
 14555  003E16                     l8573:
 14556  003E16  90D8               	bcf	status,0,c
 14557  003E18  360E               	rlcf	___aomod@divisor^0,f,c
 14558  003E1A  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 14559  003E1C  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 14560  003E1E  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 14561  003E20  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 14562  003E22  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 14563  003E24  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 14564  003E26  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 14565  003E28  2A16               	incf	___aomod@counter^0,f,c
 14566  003E2A                     l8575:
 14567  003E2A  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 14568  003E2C  EF1A  F01F         	goto	u9041
 14569  003E30  EF1C  F01F         	goto	u9040
 14570  003E34                     u9041:
 14571  003E34  EF0B  F01F         	goto	l8573
 14572  003E38                     u9040:
 14573  003E38                     l8577:
 14574  003E38  500E               	movf	___aomod@divisor^0,w,c
 14575  003E3A  5C06               	subwf	___aomod@dividend^0,w,c
 14576  003E3C  500F               	movf	(___aomod@divisor+1)^0,w,c
 14577  003E3E  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 14578  003E40  5010               	movf	(___aomod@divisor+2)^0,w,c
 14579  003E42  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 14580  003E44  5011               	movf	(___aomod@divisor+3)^0,w,c
 14581  003E46  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 14582  003E48  5012               	movf	(___aomod@divisor+4)^0,w,c
 14583  003E4A  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 14584  003E4C  5013               	movf	(___aomod@divisor+5)^0,w,c
 14585  003E4E  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 14586  003E50  5014               	movf	(___aomod@divisor+6)^0,w,c
 14587  003E52  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 14588  003E54  5015               	movf	(___aomod@divisor+7)^0,w,c
 14589  003E56  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 14590  003E58  A0D8               	btfss	status,0,c
 14591  003E5A  EF31  F01F         	goto	u9051
 14592  003E5E  EF33  F01F         	goto	u9050
 14593  003E62                     u9051:
 14594  003E62  EF43  F01F         	goto	l8581
 14595  003E66                     u9050:
 14596  003E66  500E               	movf	___aomod@divisor^0,w,c
 14597  003E68  5E06               	subwf	___aomod@dividend^0,f,c
 14598  003E6A  500F               	movf	(___aomod@divisor+1)^0,w,c
 14599  003E6C  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 14600  003E6E  5010               	movf	(___aomod@divisor+2)^0,w,c
 14601  003E70  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 14602  003E72  5011               	movf	(___aomod@divisor+3)^0,w,c
 14603  003E74  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 14604  003E76  5012               	movf	(___aomod@divisor+4)^0,w,c
 14605  003E78  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 14606  003E7A  5013               	movf	(___aomod@divisor+5)^0,w,c
 14607  003E7C  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 14608  003E7E  5014               	movf	(___aomod@divisor+6)^0,w,c
 14609  003E80  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 14610  003E82  5015               	movf	(___aomod@divisor+7)^0,w,c
 14611  003E84  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 14612  003E86                     l8581:
 14613  003E86  90D8               	bcf	status,0,c
 14614  003E88  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 14615  003E8A  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 14616  003E8C  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 14617  003E8E  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 14618  003E90  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 14619  003E92  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 14620  003E94  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 14621  003E96  320E               	rrcf	___aomod@divisor^0,f,c
 14622  003E98  2E16               	decfsz	___aomod@counter^0,f,c
 14623  003E9A  EF1C  F01F         	goto	l8577
 14624  003E9E                     l8585:
 14625  003E9E  5017               	movf	___aomod@sign^0,w,c
 14626  003EA0  B4D8               	btfsc	status,2,c
 14627  003EA2  EF55  F01F         	goto	u9061
 14628  003EA6  EF57  F01F         	goto	u9060
 14629  003EAA                     u9061:
 14630  003EAA  EF67  F01F         	goto	l8589
 14631  003EAE                     u9060:
 14632  003EAE  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14633  003EB0  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14634  003EB2  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14635  003EB4  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14636  003EB6  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14637  003EB8  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14638  003EBA  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14639  003EBC  6C06               	negf	___aomod@dividend^0,c
 14640  003EBE  0E00               	movlw	0
 14641  003EC0  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14642  003EC2  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14643  003EC4  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14644  003EC6  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14645  003EC8  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14646  003ECA  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14647  003ECC  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14648  003ECE                     l8589:
 14649  003ECE  C006  F006         	movff	___aomod@dividend,?___aomod
 14650  003ED2  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 14651  003ED6  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 14652  003EDA  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 14653  003EDE  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 14654  003EE2  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 14655  003EE6  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 14656  003EEA  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 14657  003EEE  0012               	return		;funcret
 14658  003EF0                     __end_of___aomod:
 14659                           	opt callstack 0
 14660                           
 14661 ;; *************** function ___aodiv *****************
 14662 ;; Defined at:
 14663 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;  dividend        8    5[COMRAM] long long 
 14666 ;;  divisor         8   13[COMRAM] long long 
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;  quotient        8   23[COMRAM] long long 
 14669 ;;  sign            1   22[COMRAM] unsigned char 
 14670 ;;  counter         1   21[COMRAM] unsigned char 
 14671 ;; Return value:  Size  Location     Type
 14672 ;;                  8    5[COMRAM] long long 
 14673 ;; Registers used:
 14674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14675 ;; Tracked objects:
 14676 ;;		On entry : 0/0
 14677 ;;		On exit  : 0/0
 14678 ;;		Unchanged: 0/0
 14679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14680 ;;      Params:        16       0       0       0       0       0       0       0       0
 14681 ;;      Locals:        10       0       0       0       0       0       0       0       0
 14682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14683 ;;      Totals:        26       0       0       0       0       0       0       0       0
 14684 ;;Total ram usage:       26 bytes
 14685 ;; Hardware stack levels used:    1
 14686 ;; Hardware stack levels required when called:    2
 14687 ;; This function calls:
 14688 ;;		Nothing
 14689 ;; This function is called by:
 14690 ;;		_dtoa
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text53
 14695  003A88                     __ptext53:
 14696                           	opt callstack 0
 14697  003A88                     ___aodiv:
 14698                           	opt callstack 23
 14699  003A88  0E00               	movlw	0
 14700  003A8A  6E17               	movwf	___aodiv@sign^0,c
 14701  003A8C  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 14702  003A8E  EF4D  F01D         	goto	u8940
 14703  003A92  EF4B  F01D         	goto	u8941
 14704  003A96                     u8941:
 14705  003A96  EF5F  F01D         	goto	l8521
 14706  003A9A                     u8940:
 14707  003A9A  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 14708  003A9C  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 14709  003A9E  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 14710  003AA0  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 14711  003AA2  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 14712  003AA4  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 14713  003AA6  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 14714  003AA8  6C0E               	negf	___aodiv@divisor^0,c
 14715  003AAA  0E00               	movlw	0
 14716  003AAC  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 14717  003AAE  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 14718  003AB0  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 14719  003AB2  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 14720  003AB4  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 14721  003AB6  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 14722  003AB8  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 14723  003ABA  0E01               	movlw	1
 14724  003ABC  6E17               	movwf	___aodiv@sign^0,c
 14725  003ABE                     l8521:
 14726  003ABE  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 14727  003AC0  EF66  F01D         	goto	u8950
 14728  003AC4  EF64  F01D         	goto	u8951
 14729  003AC8                     u8951:
 14730  003AC8  EF78  F01D         	goto	l8527
 14731  003ACC                     u8950:
 14732  003ACC  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 14733  003ACE  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 14734  003AD0  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 14735  003AD2  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 14736  003AD4  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 14737  003AD6  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 14738  003AD8  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 14739  003ADA  6C06               	negf	___aodiv@dividend^0,c
 14740  003ADC  0E00               	movlw	0
 14741  003ADE  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 14742  003AE0  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 14743  003AE2  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 14744  003AE4  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 14745  003AE6  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 14746  003AE8  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 14747  003AEA  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 14748  003AEC  0E01               	movlw	1
 14749  003AEE  1A17               	xorwf	___aodiv@sign^0,f,c
 14750  003AF0                     l8527:
 14751  003AF0  EE20  F018         	lfsr	2,___aodiv@quotient
 14752  003AF4  0E07               	movlw	7
 14753  003AF6                     u8961:
 14754  003AF6  6ADE               	clrf	postinc2,c
 14755  003AF8  06E8               	decf	wreg,f,c
 14756  003AFA  E2FD               	bc	u8961
 14757  003AFC  500E               	movf	___aodiv@divisor^0,w,c
 14758  003AFE  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 14759  003B00  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 14760  003B02  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 14761  003B04  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 14762  003B06  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 14763  003B08  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 14764  003B0A  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 14765  003B0C  B4D8               	btfsc	status,2,c
 14766  003B0E  EF8B  F01D         	goto	u8971
 14767  003B12  EF8D  F01D         	goto	u8970
 14768  003B16                     u8971:
 14769  003B16  EFDF  F01D         	goto	l8549
 14770  003B1A                     u8970:
 14771  003B1A  0E01               	movlw	1
 14772  003B1C  6E16               	movwf	___aodiv@counter^0,c
 14773  003B1E  EF9B  F01D         	goto	l8535
 14774  003B22                     l8533:
 14775  003B22  90D8               	bcf	status,0,c
 14776  003B24  360E               	rlcf	___aodiv@divisor^0,f,c
 14777  003B26  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 14778  003B28  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 14779  003B2A  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 14780  003B2C  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 14781  003B2E  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 14782  003B30  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 14783  003B32  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 14784  003B34  2A16               	incf	___aodiv@counter^0,f,c
 14785  003B36                     l8535:
 14786  003B36  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 14787  003B38  EFA0  F01D         	goto	u8981
 14788  003B3C  EFA2  F01D         	goto	u8980
 14789  003B40                     u8981:
 14790  003B40  EF91  F01D         	goto	l8533
 14791  003B44                     u8980:
 14792  003B44                     l8537:
 14793  003B44  90D8               	bcf	status,0,c
 14794  003B46  3618               	rlcf	___aodiv@quotient^0,f,c
 14795  003B48  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 14796  003B4A  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 14797  003B4C  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 14798  003B4E  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 14799  003B50  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 14800  003B52  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 14801  003B54  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 14802  003B56  500E               	movf	___aodiv@divisor^0,w,c
 14803  003B58  5C06               	subwf	___aodiv@dividend^0,w,c
 14804  003B5A  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14805  003B5C  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 14806  003B5E  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14807  003B60  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 14808  003B62  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14809  003B64  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 14810  003B66  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14811  003B68  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 14812  003B6A  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14813  003B6C  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 14814  003B6E  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14815  003B70  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 14816  003B72  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14817  003B74  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 14818  003B76  A0D8               	btfss	status,0,c
 14819  003B78  EFC0  F01D         	goto	u8991
 14820  003B7C  EFC2  F01D         	goto	u8990
 14821  003B80                     u8991:
 14822  003B80  EFD3  F01D         	goto	l8545
 14823  003B84                     u8990:
 14824  003B84  500E               	movf	___aodiv@divisor^0,w,c
 14825  003B86  5E06               	subwf	___aodiv@dividend^0,f,c
 14826  003B88  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14827  003B8A  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 14828  003B8C  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14829  003B8E  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 14830  003B90  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14831  003B92  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 14832  003B94  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14833  003B96  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 14834  003B98  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14835  003B9A  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 14836  003B9C  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14837  003B9E  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 14838  003BA0  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14839  003BA2  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 14840  003BA4  8018               	bsf	___aodiv@quotient^0,0,c
 14841  003BA6                     l8545:
 14842  003BA6  90D8               	bcf	status,0,c
 14843  003BA8  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 14844  003BAA  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 14845  003BAC  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 14846  003BAE  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 14847  003BB0  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 14848  003BB2  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 14849  003BB4  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 14850  003BB6  320E               	rrcf	___aodiv@divisor^0,f,c
 14851  003BB8  2E16               	decfsz	___aodiv@counter^0,f,c
 14852  003BBA  EFA2  F01D         	goto	l8537
 14853  003BBE                     l8549:
 14854  003BBE  5017               	movf	___aodiv@sign^0,w,c
 14855  003BC0  B4D8               	btfsc	status,2,c
 14856  003BC2  EFE5  F01D         	goto	u9001
 14857  003BC6  EFE7  F01D         	goto	u9000
 14858  003BCA                     u9001:
 14859  003BCA  EFF7  F01D         	goto	l8553
 14860  003BCE                     u9000:
 14861  003BCE  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 14862  003BD0  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 14863  003BD2  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 14864  003BD4  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 14865  003BD6  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 14866  003BD8  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 14867  003BDA  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 14868  003BDC  6C18               	negf	___aodiv@quotient^0,c
 14869  003BDE  0E00               	movlw	0
 14870  003BE0  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 14871  003BE2  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 14872  003BE4  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 14873  003BE6  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 14874  003BE8  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 14875  003BEA  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 14876  003BEC  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 14877  003BEE                     l8553:
 14878  003BEE  C018  F006         	movff	___aodiv@quotient,?___aodiv
 14879  003BF2  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 14880  003BF6  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 14881  003BFA  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 14882  003BFE  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 14883  003C02  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 14884  003C06  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 14885  003C0A  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 14886  003C0E  0012               	return		;funcret
 14887  003C10                     __end_of___aodiv:
 14888                           	opt callstack 0
 14889                           
 14890 ;; *************** function _ctoa *****************
 14891 ;; Defined at:
 14892 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14893 ;; Parameters:    Size  Location     Type
 14894 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 14895 ;;		 -> sprintf@f(6), 
 14896 ;;  c               1   34[COMRAM] unsigned char 
 14897 ;; Auto vars:     Size  Location     Type
 14898 ;;  w               2   35[COMRAM] int 
 14899 ;;  l               2    0        int 
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  2   32[COMRAM] int 
 14902 ;; Registers used:
 14903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14909 ;;      Params:         3       0       0       0       0       0       0       0       0
 14910 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14912 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14913 ;;Total ram usage:        5 bytes
 14914 ;; Hardware stack levels used:    1
 14915 ;; Hardware stack levels required when called:    6
 14916 ;; This function calls:
 14917 ;;		_pad
 14918 ;; This function is called by:
 14919 ;;		_vfpfcnvrt
 14920 ;; This function uses a non-reentrant model
 14921 ;;
 14922                           
 14923                           	psect	text54
 14924  005144                     __ptext54:
 14925                           	opt callstack 0
 14926  005144                     _ctoa:
 14927                           	opt callstack 20
 14928  005144                     
 14929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14930  005144  0101               	movlb	1	; () banked
 14931  005146  5132               	movf	_width& (0+255),w,b
 14932  005148  1133               	iorwf	(_width+1)& (0+255),w,b
 14933  00514A  A4D8               	btfss	status,2,c
 14934  00514C  EFAA  F028         	goto	u9921
 14935  005150  EFAC  F028         	goto	u9920
 14936  005154                     u9921:
 14937  005154  EFB2  F028         	goto	l9117
 14938  005158                     u9920:
 14939  005158                     
 14940                           ; BSR set to: 1
 14941  005158  C132  F024         	movff	_width,ctoa@w
 14942  00515C  C133  F025         	movff	_width+1,ctoa@w+1
 14943  005160  EFB8  F028         	goto	l9119
 14944  005164                     l9117:
 14945                           
 14946                           ; BSR set to: 1
 14947  005164  0EFF               	movlw	255
 14948  005166  2532               	addwf	_width& (0+255),w,b
 14949  005168  6E24               	movwf	ctoa@w^0,c
 14950  00516A  0EFF               	movlw	255
 14951  00516C  2133               	addwfc	(_width+1)& (0+255),w,b
 14952  00516E  6E25               	movwf	(ctoa@w+1)^0,c
 14953  005170                     l9119:
 14954                           
 14955                           ; BSR set to: 1
 14956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14957  005170  C023  F142         	movff	ctoa@c,_dbuf
 14958  005174                     
 14959                           ; BSR set to: 1
 14960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14961  005174  0E00               	movlw	0
 14962  005176  6F43               	movwf	(_dbuf+1)& (0+255),b
 14963  005178                     
 14964                           ; BSR set to: 1
 14965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14966  005178  C021  F016         	movff	ctoa@fp,pad@fp
 14967  00517C  C022  F017         	movff	ctoa@fp+1,pad@fp+1
 14968  005180  0E42               	movlw	low _dbuf
 14969  005182  6E18               	movwf	pad@buf^0,c
 14970  005184  0E01               	movlw	high _dbuf
 14971  005186  6E19               	movwf	(pad@buf+1)^0,c
 14972  005188  C024  F01A         	movff	ctoa@w,pad@p
 14973  00518C  C025  F01B         	movff	ctoa@w+1,pad@p+1
 14974  005190  EC67  F024         	call	_pad	;wreg free
 14975  005194  C016  F021         	movff	?_pad,?_ctoa
 14976  005198  C017  F022         	movff	?_pad+1,?_ctoa+1
 14977  00519C  0012               	return		;funcret
 14978  00519E                     __end_of_ctoa:
 14979                           	opt callstack 0
 14980                           
 14981 ;; *************** function _pad *****************
 14982 ;; Defined at:
 14983 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14984 ;; Parameters:    Size  Location     Type
 14985 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 14986 ;;		 -> sprintf@f(6), 
 14987 ;;  buf             2   23[COMRAM] PTR unsigned char 
 14988 ;;		 -> dbuf(80), 
 14989 ;;  p               2   25[COMRAM] int 
 14990 ;; Auto vars:     Size  Location     Type
 14991 ;;  w               2   30[COMRAM] int 
 14992 ;;  i               2   28[COMRAM] int 
 14993 ;; Return value:  Size  Location     Type
 14994 ;;                  2   21[COMRAM] int 
 14995 ;; Registers used:
 14996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14997 ;; Tracked objects:
 14998 ;;		On entry : 0/0
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15002 ;;      Params:         6       0       0       0       0       0       0       0       0
 15003 ;;      Locals:         4       0       0       0       0       0       0       0       0
 15004 ;;      Temps:          1       0       0       0       0       0       0       0       0
 15005 ;;      Totals:        11       0       0       0       0       0       0       0       0
 15006 ;;Total ram usage:       11 bytes
 15007 ;; Hardware stack levels used:    1
 15008 ;; Hardware stack levels required when called:    5
 15009 ;; This function calls:
 15010 ;;		_fputc
 15011 ;;		_fputs
 15012 ;;		_strlen
 15013 ;; This function is called by:
 15014 ;;		_ctoa
 15015 ;;		_dtoa
 15016 ;;		_efgtoa
 15017 ;; This function uses a non-reentrant model
 15018 ;;
 15019                           
 15020                           	psect	text55
 15021  0048CE                     __ptext55:
 15022                           	opt callstack 0
 15023  0048CE                     _pad:
 15024                           	opt callstack 20
 15025  0048CE                     
 15026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 15027  0048CE  A055               	btfss	_flags^0,0,c
 15028  0048D0  EF6C  F024         	goto	u8651
 15029  0048D4  EF6E  F024         	goto	u8650
 15030  0048D8                     u8651:
 15031  0048D8  EF78  F024         	goto	l8417
 15032  0048DC                     u8650:
 15033  0048DC                     
 15034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 15035  0048DC  C018  F00F         	movff	pad@buf,fputs@s
 15036  0048E0  C019  F010         	movff	pad@buf+1,fputs@s+1
 15037  0048E4  C016  F011         	movff	pad@fp,fputs@fp
 15038  0048E8  C017  F012         	movff	pad@fp+1,fputs@fp+1
 15039  0048EC  ECA5  F02A         	call	_fputs	;wreg free
 15040  0048F0                     l8417:
 15041                           
 15042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 15043  0048F0  BE1B               	btfsc	(pad@p+1)^0,7,c
 15044  0048F2  EF7D  F024         	goto	u8661
 15045  0048F6  EF7F  F024         	goto	u8660
 15046  0048FA                     u8661:
 15047  0048FA  EF85  F024         	goto	l8421
 15048  0048FE                     u8660:
 15049  0048FE  C01A  F01F         	movff	pad@p,pad@w
 15050  004902  C01B  F020         	movff	pad@p+1,pad@w+1
 15051  004906  EF89  F024         	goto	l782
 15052  00490A                     l8421:
 15053  00490A  0E00               	movlw	0
 15054  00490C  6E20               	movwf	(pad@w+1)^0,c
 15055  00490E  0E00               	movlw	0
 15056  004910  6E1F               	movwf	pad@w^0,c
 15057  004912                     l782:
 15058                           
 15059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 15060  004912  0E00               	movlw	0
 15061  004914  6E1E               	movwf	(pad@i+1)^0,c
 15062  004916  0E00               	movlw	0
 15063  004918  6E1D               	movwf	pad@i^0,c
 15064                           
 15065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15066  00491A  EF9B  F024         	goto	l8427
 15067  00491E                     l8423:
 15068                           
 15069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 15070  00491E  0E00               	movlw	0
 15071  004920  6E07               	movwf	(fputc@c+1)^0,c
 15072  004922  0E20               	movlw	32
 15073  004924  6E06               	movwf	fputc@c^0,c
 15074  004926  C016  F008         	movff	pad@fp,fputc@fp
 15075  00492A  C017  F009         	movff	pad@fp+1,fputc@fp+1
 15076  00492E  ECA0  F023         	call	_fputc	;wreg free
 15077  004932                     
 15078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 15079  004932  4A1D               	infsnz	pad@i^0,f,c
 15080  004934  2A1E               	incf	(pad@i+1)^0,f,c
 15081  004936                     l8427:
 15082                           
 15083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15084  004936  501F               	movf	pad@w^0,w,c
 15085  004938  5C1D               	subwf	pad@i^0,w,c
 15086  00493A  501E               	movf	(pad@i+1)^0,w,c
 15087  00493C  0A80               	xorlw	128
 15088  00493E  6E1C               	movwf	??_pad^0,c
 15089  004940  5020               	movf	(pad@w+1)^0,w,c
 15090  004942  0A80               	xorlw	128
 15091  004944  581C               	subwfb	??_pad^0,w,c
 15092  004946  A0D8               	btfss	status,0,c
 15093  004948  EFA8  F024         	goto	u8671
 15094  00494C  EFAA  F024         	goto	u8670
 15095  004950                     u8671:
 15096  004950  EF8F  F024         	goto	l8423
 15097  004954                     u8670:
 15098  004954                     
 15099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 15100  004954  B055               	btfsc	_flags^0,0,c
 15101  004956  EFAF  F024         	goto	u8681
 15102  00495A  EFB1  F024         	goto	u8680
 15103  00495E                     u8681:
 15104  00495E  EFBB  F024         	goto	l8431
 15105  004962                     u8680:
 15106  004962                     
 15107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 15108  004962  C018  F00F         	movff	pad@buf,fputs@s
 15109  004966  C019  F010         	movff	pad@buf+1,fputs@s+1
 15110  00496A  C016  F011         	movff	pad@fp,fputs@fp
 15111  00496E  C017  F012         	movff	pad@fp+1,fputs@fp+1
 15112  004972  ECA5  F02A         	call	_fputs	;wreg free
 15113  004976                     l8431:
 15114                           
 15115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 15116  004976  C018  F006         	movff	pad@buf,strlen@s
 15117  00497A  C019  F007         	movff	pad@buf+1,strlen@s+1
 15118  00497E  EC5B  F02B         	call	_strlen	;wreg free
 15119  004982  501F               	movf	pad@w^0,w,c
 15120  004984  2406               	addwf	?_strlen^0,w,c
 15121  004986  6E16               	movwf	?_pad^0,c
 15122  004988  5020               	movf	(pad@w+1)^0,w,c
 15123  00498A  2007               	addwfc	(?_strlen+1)^0,w,c
 15124  00498C  6E17               	movwf	(?_pad+1)^0,c
 15125  00498E  0012               	return		;funcret
 15126  004990                     __end_of_pad:
 15127                           	opt callstack 0
 15128                           
 15129 ;; *************** function _strlen *****************
 15130 ;; Defined at:
 15131 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 15132 ;; Parameters:    Size  Location     Type
 15133 ;;  s               2    5[COMRAM] PTR const unsigned char 
 15134 ;;		 -> dbuf(80), 
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;  a               2    7[COMRAM] PTR const unsigned char 
 15137 ;;		 -> dbuf(80), 
 15138 ;; Return value:  Size  Location     Type
 15139 ;;                  2    5[COMRAM] unsigned int 
 15140 ;; Registers used:
 15141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15147 ;;      Params:         2       0       0       0       0       0       0       0       0
 15148 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15149 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15150 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15151 ;;Total ram usage:        4 bytes
 15152 ;; Hardware stack levels used:    1
 15153 ;; Hardware stack levels required when called:    2
 15154 ;; This function calls:
 15155 ;;		Nothing
 15156 ;; This function is called by:
 15157 ;;		_pad
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           	psect	text56
 15162  0056B6                     __ptext56:
 15163                           	opt callstack 0
 15164  0056B6                     _strlen:
 15165                           	opt callstack 22
 15166  0056B6  C006  F008         	movff	strlen@s,strlen@a
 15167  0056BA  C007  F009         	movff	strlen@s+1,strlen@a+1
 15168  0056BE  EF63  F02B         	goto	l8143
 15169  0056C2                     l8141:
 15170  0056C2  4A06               	infsnz	strlen@s^0,f,c
 15171  0056C4  2A07               	incf	(strlen@s+1)^0,f,c
 15172  0056C6                     l8143:
 15173  0056C6  C006  FFD9         	movff	strlen@s,fsr2l
 15174  0056CA  C007  FFDA         	movff	strlen@s+1,fsr2h
 15175  0056CE  50DF               	movf	indf2,w,c
 15176  0056D0  A4D8               	btfss	status,2,c
 15177  0056D2  EF6D  F02B         	goto	u8151
 15178  0056D6  EF6F  F02B         	goto	u8150
 15179  0056DA                     u8151:
 15180  0056DA  EF61  F02B         	goto	l8141
 15181  0056DE                     u8150:
 15182  0056DE  5008               	movf	strlen@a^0,w,c
 15183  0056E0  5C06               	subwf	strlen@s^0,w,c
 15184  0056E2  6E06               	movwf	?_strlen^0,c
 15185  0056E4  5009               	movf	(strlen@a+1)^0,w,c
 15186  0056E6  5807               	subwfb	(strlen@s+1)^0,w,c
 15187  0056E8  6E07               	movwf	(?_strlen+1)^0,c
 15188  0056EA  0012               	return		;funcret
 15189  0056EC                     __end_of_strlen:
 15190                           	opt callstack 0
 15191                           
 15192 ;; *************** function _fputs *****************
 15193 ;; Defined at:
 15194 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 15195 ;; Parameters:    Size  Location     Type
 15196 ;;  s               2   14[COMRAM] PTR const unsigned char 
 15197 ;;		 -> dbuf(80), 
 15198 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 15199 ;;		 -> sprintf@f(6), 
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;  i               2   19[COMRAM] int 
 15202 ;;  c               1   18[COMRAM] unsigned char 
 15203 ;; Return value:  Size  Location     Type
 15204 ;;                  2   14[COMRAM] int 
 15205 ;; Registers used:
 15206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15207 ;; Tracked objects:
 15208 ;;		On entry : 0/0
 15209 ;;		On exit  : 0/0
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15212 ;;      Params:         4       0       0       0       0       0       0       0       0
 15213 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15215 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15216 ;;Total ram usage:        7 bytes
 15217 ;; Hardware stack levels used:    1
 15218 ;; Hardware stack levels required when called:    4
 15219 ;; This function calls:
 15220 ;;		_fputc
 15221 ;; This function is called by:
 15222 ;;		_pad
 15223 ;; This function uses a non-reentrant model
 15224 ;;
 15225                           
 15226                           	psect	text57
 15227  00554A                     __ptext57:
 15228                           	opt callstack 0
 15229  00554A                     _fputs:
 15230                           	opt callstack 20
 15231  00554A  0E00               	movlw	0
 15232  00554C  6E15               	movwf	(fputs@i+1)^0,c
 15233  00554E  0E00               	movlw	0
 15234  005550  6E14               	movwf	fputs@i^0,c
 15235  005552  EFB6  F02A         	goto	l8137
 15236  005556                     l8133:
 15237  005556  C013  F006         	movff	fputs@c,fputc@c
 15238  00555A  6A07               	clrf	(fputc@c+1)^0,c
 15239  00555C  C011  F008         	movff	fputs@fp,fputc@fp
 15240  005560  C012  F009         	movff	fputs@fp+1,fputc@fp+1
 15241  005564  ECA0  F023         	call	_fputc	;wreg free
 15242  005568  4A14               	infsnz	fputs@i^0,f,c
 15243  00556A  2A15               	incf	(fputs@i+1)^0,f,c
 15244  00556C                     l8137:
 15245  00556C  5014               	movf	fputs@i^0,w,c
 15246  00556E  240F               	addwf	fputs@s^0,w,c
 15247  005570  6ED9               	movwf	fsr2l,c
 15248  005572  5015               	movf	(fputs@i+1)^0,w,c
 15249  005574  2010               	addwfc	(fputs@s+1)^0,w,c
 15250  005576  6EDA               	movwf	fsr2h,c
 15251  005578  50DF               	movf	indf2,w,c
 15252  00557A  6E13               	movwf	fputs@c^0,c
 15253  00557C  5013               	movf	fputs@c^0,w,c
 15254  00557E  A4D8               	btfss	status,2,c
 15255  005580  EFC4  F02A         	goto	u8141
 15256  005584  EFC6  F02A         	goto	u8140
 15257  005588                     u8141:
 15258  005588  EFAB  F02A         	goto	l8133
 15259  00558C                     u8140:
 15260  00558C  0012               	return		;funcret
 15261  00558E                     __end_of_fputs:
 15262                           	opt callstack 0
 15263                           
 15264 ;; *************** function _fputc *****************
 15265 ;; Defined at:
 15266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  c               2    5[COMRAM] int 
 15269 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
 15270 ;;		 -> sprintf@f(6), 
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;		None
 15273 ;; Return value:  Size  Location     Type
 15274 ;;                  2    5[COMRAM] int 
 15275 ;; Registers used:
 15276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15277 ;; Tracked objects:
 15278 ;;		On entry : 0/0
 15279 ;;		On exit  : 0/0
 15280 ;;		Unchanged: 0/0
 15281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15282 ;;      Params:         4       0       0       0       0       0       0       0       0
 15283 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15284 ;;      Temps:          5       0       0       0       0       0       0       0       0
 15285 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15286 ;;Total ram usage:        9 bytes
 15287 ;; Hardware stack levels used:    1
 15288 ;; Hardware stack levels required when called:    3
 15289 ;; This function calls:
 15290 ;;		_putch
 15291 ;; This function is called by:
 15292 ;;		_pad
 15293 ;;		_vfpfcnvrt
 15294 ;;		_fputs
 15295 ;; This function uses a non-reentrant model
 15296 ;;
 15297                           
 15298                           	psect	text58
 15299  004740                     __ptext58:
 15300                           	opt callstack 0
 15301  004740                     _fputc:
 15302                           	opt callstack 23
 15303  004740  5008               	movf	fputc@fp^0,w,c
 15304  004742  1009               	iorwf	(fputc@fp+1)^0,w,c
 15305  004744  B4D8               	btfsc	status,2,c
 15306  004746  EFA7  F023         	goto	u8101
 15307  00474A  EFA9  F023         	goto	u8100
 15308  00474E                     u8101:
 15309  00474E  EFB2  F023         	goto	l8121
 15310  004752                     u8100:
 15311  004752  5008               	movf	fputc@fp^0,w,c
 15312  004754  1009               	iorwf	(fputc@fp+1)^0,w,c
 15313  004756  A4D8               	btfss	status,2,c
 15314  004758  EFB0  F023         	goto	u8111
 15315  00475C  EFB2  F023         	goto	u8110
 15316  004760                     u8111:
 15317  004760  EFB7  F023         	goto	l8123
 15318  004764                     u8110:
 15319  004764                     l8121:
 15320  004764  5006               	movf	fputc@c^0,w,c
 15321  004766  EC28  F02C         	call	_putch
 15322  00476A  EF04  F024         	goto	l1714
 15323  00476E                     l8123:
 15324  00476E  EE20 F004          	lfsr	2,4
 15325  004772  5008               	movf	fputc@fp^0,w,c
 15326  004774  26D9               	addwf	fsr2l,f,c
 15327  004776  5009               	movf	(fputc@fp+1)^0,w,c
 15328  004778  22DA               	addwfc	fsr2h,f,c
 15329  00477A  50DE               	movf	postinc2,w,c
 15330  00477C  10DE               	iorwf	postinc2,w,c
 15331  00477E  B4D8               	btfsc	status,2,c
 15332  004780  EFC4  F023         	goto	u8121
 15333  004784  EFC6  F023         	goto	u8120
 15334  004788                     u8121:
 15335  004788  EFE1  F023         	goto	l8127
 15336  00478C                     u8120:
 15337  00478C  EE20 F004          	lfsr	2,4
 15338  004790  5008               	movf	fputc@fp^0,w,c
 15339  004792  26D9               	addwf	fsr2l,f,c
 15340  004794  5009               	movf	(fputc@fp+1)^0,w,c
 15341  004796  22DA               	addwfc	fsr2h,f,c
 15342  004798  EE10 F002          	lfsr	1,2
 15343  00479C  5008               	movf	fputc@fp^0,w,c
 15344  00479E  26E1               	addwf	fsr1l,f,c
 15345  0047A0  5009               	movf	(fputc@fp+1)^0,w,c
 15346  0047A2  22E2               	addwfc	fsr1h,f,c
 15347  0047A4  50DE               	movf	postinc2,w,c
 15348  0047A6  5CE6               	subwf	postinc1,w,c
 15349  0047A8  50E6               	movf	postinc1,w,c
 15350  0047AA  0A80               	xorlw	128
 15351  0047AC  6E0E               	movwf	(??_fputc+4)^0,c
 15352  0047AE  50DE               	movf	postinc2,w,c
 15353  0047B0  0A80               	xorlw	128
 15354  0047B2  580E               	subwfb	(??_fputc+4)^0,w,c
 15355  0047B4  B0D8               	btfsc	status,0,c
 15356  0047B6  EFDF  F023         	goto	u8131
 15357  0047BA  EFE1  F023         	goto	u8130
 15358  0047BE                     u8131:
 15359  0047BE  EF04  F024         	goto	l1714
 15360  0047C2                     u8130:
 15361  0047C2                     l8127:
 15362  0047C2  EE20 F002          	lfsr	2,2
 15363  0047C6  5008               	movf	fputc@fp^0,w,c
 15364  0047C8  26D9               	addwf	fsr2l,f,c
 15365  0047CA  5009               	movf	(fputc@fp+1)^0,w,c
 15366  0047CC  22DA               	addwfc	fsr2h,f,c
 15367  0047CE  CFDE F00A          	movff	postinc2,??_fputc
 15368  0047D2  CFDD F00B          	movff	postdec2,??_fputc+1
 15369  0047D6  C008  FFD9         	movff	fputc@fp,fsr2l
 15370  0047DA  C009  FFDA         	movff	fputc@fp+1,fsr2h
 15371  0047DE  CFDE F00C          	movff	postinc2,??_fputc+2
 15372  0047E2  CFDD F00D          	movff	postdec2,??_fputc+3
 15373  0047E6  500A               	movf	??_fputc^0,w,c
 15374  0047E8  240C               	addwf	(??_fputc+2)^0,w,c
 15375  0047EA  6ED9               	movwf	fsr2l,c
 15376  0047EC  500B               	movf	(??_fputc+1)^0,w,c
 15377  0047EE  200D               	addwfc	(??_fputc+3)^0,w,c
 15378  0047F0  6EDA               	movwf	fsr2h,c
 15379  0047F2  C006  FFDF         	movff	fputc@c,indf2
 15380  0047F6  EE20 F002          	lfsr	2,2
 15381  0047FA  5008               	movf	fputc@fp^0,w,c
 15382  0047FC  26D9               	addwf	fsr2l,f,c
 15383  0047FE  5009               	movf	(fputc@fp+1)^0,w,c
 15384  004800  22DA               	addwfc	fsr2h,f,c
 15385  004802  2ADE               	incf	postinc2,f,c
 15386  004804  0E00               	movlw	0
 15387  004806  22DD               	addwfc	postdec2,f,c
 15388  004808                     l1714:
 15389  004808  0012               	return		;funcret
 15390  00480A                     __end_of_fputc:
 15391                           	opt callstack 0
 15392                           
 15393 ;; *************** function _putch *****************
 15394 ;; Defined at:
 15395 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 15396 ;; Parameters:    Size  Location     Type
 15397 ;;  c               1    wreg     unsigned char 
 15398 ;; Auto vars:     Size  Location     Type
 15399 ;;  c               1    0[COMRAM] unsigned char 
 15400 ;; Return value:  Size  Location     Type
 15401 ;;                  1    wreg      void 
 15402 ;; Registers used:
 15403 ;;		wreg
 15404 ;; Tracked objects:
 15405 ;;		On entry : 0/0
 15406 ;;		On exit  : 0/0
 15407 ;;		Unchanged: 0/0
 15408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15409 ;;      Params:         0       0       0       0       0       0       0       0       0
 15410 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15412 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15413 ;;Total ram usage:        0 bytes
 15414 ;; Hardware stack levels used:    1
 15415 ;; Hardware stack levels required when called:    2
 15416 ;; This function calls:
 15417 ;;		Nothing
 15418 ;; This function is called by:
 15419 ;;		_fputc
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           	psect	text59
 15424  005850                     __ptext59:
 15425                           	opt callstack 0
 15426  005850                     _putch:
 15427                           	opt callstack 23
 15428  005850  0012               	return		;funcret
 15429  005852                     __end_of_putch:
 15430                           	opt callstack 0
 15431                           
 15432 ;; *************** function _atoi *****************
 15433 ;; Defined at:
 15434 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15435 ;; Parameters:    Size  Location     Type
 15436 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15437 ;;		 -> STR_22(47), STR_21(49), STR_20(48), STR_19(34), 
 15438 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
 15439 ;;		 -> STR_3(34), 
 15440 ;; Auto vars:     Size  Location     Type
 15441 ;;  n               2   25[COMRAM] int 
 15442 ;;  neg             2   18[COMRAM] int 
 15443 ;; Return value:  Size  Location     Type
 15444 ;;                  2   12[COMRAM] int 
 15445 ;; Registers used:
 15446 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15447 ;; Tracked objects:
 15448 ;;		On entry : 0/0
 15449 ;;		On exit  : 0/0
 15450 ;;		Unchanged: 0/0
 15451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15452 ;;      Params:         2       0       0       0       0       0       0       0       0
 15453 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15454 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15455 ;;      Totals:        15       0       0       0       0       0       0       0       0
 15456 ;;Total ram usage:       15 bytes
 15457 ;; Hardware stack levels used:    1
 15458 ;; Hardware stack levels required when called:    3
 15459 ;; This function calls:
 15460 ;;		___wmul
 15461 ;;		_isdigit
 15462 ;;		_isspace
 15463 ;; This function is called by:
 15464 ;;		_vfpfcnvrt
 15465 ;; This function uses a non-reentrant model
 15466 ;;
 15467                           
 15468                           	psect	text60
 15469  003768                     __ptext60:
 15470                           	opt callstack 0
 15471  003768                     _atoi:
 15472                           	opt callstack 23
 15473  003768  0E00               	movlw	0
 15474  00376A  6E1B               	movwf	(atoi@n+1)^0,c
 15475  00376C  0E00               	movlw	0
 15476  00376E  6E1A               	movwf	atoi@n^0,c
 15477  003770  0E00               	movlw	0
 15478  003772  6E14               	movwf	(atoi@neg+1)^0,c
 15479  003774  0E00               	movlw	0
 15480  003776  6E13               	movwf	atoi@neg^0,c
 15481  003778  EFC0  F01B         	goto	l9491
 15482  00377C                     l9489:
 15483  00377C  4A0D               	infsnz	atoi@s^0,f,c
 15484  00377E  2A0E               	incf	(atoi@s+1)^0,f,c
 15485  003780                     l9491:
 15486  003780  0E01               	movlw	1
 15487  003782  6E19               	movwf	_atoi$1428^0,c
 15488  003784  C00D  FFF6         	movff	atoi@s,tblptrl
 15489  003788  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15490  00378C                     	if	0	;tblptru may be non-zero
 15491  00378C                     	endif
 15492  00378C                     	if	0	;tblptru may be non-zero
 15493  00378C                     	endif
 15494  00378C  0008               	tblrd		*
 15495  00378E  50F5               	movf	tablat,w,c
 15496  003790  0A20               	xorlw	32
 15497  003792  B4D8               	btfsc	status,2,c
 15498  003794  EFCE  F01B         	goto	u10601
 15499  003798  EFD0  F01B         	goto	u10600
 15500  00379C                     u10601:
 15501  00379C  EFED  F01B         	goto	l9499
 15502  0037A0                     u10600:
 15503  0037A0  0EF7               	movlw	247
 15504  0037A2  6E0F               	movwf	??_atoi^0,c
 15505  0037A4  0EFF               	movlw	255
 15506  0037A6  6E10               	movwf	(??_atoi+1)^0,c
 15507  0037A8  C00D  FFF6         	movff	atoi@s,tblptrl
 15508  0037AC  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15509  0037B0                     	if	0	;tblptru may be non-zero
 15510  0037B0                     	endif
 15511  0037B0                     	if	0	;tblptru may be non-zero
 15512  0037B0                     	endif
 15513  0037B0  0008               	tblrd		*
 15514  0037B2  50F5               	movf	tablat,w,c
 15515  0037B4  6E11               	movwf	(??_atoi+2)^0,c
 15516  0037B6  6A12               	clrf	(??_atoi+3)^0,c
 15517  0037B8  500F               	movf	??_atoi^0,w,c
 15518  0037BA  2611               	addwf	(??_atoi+2)^0,f,c
 15519  0037BC  5010               	movf	(??_atoi+1)^0,w,c
 15520  0037BE  2212               	addwfc	(??_atoi+3)^0,f,c
 15521  0037C0  5012               	movf	(??_atoi+3)^0,w,c
 15522  0037C2  E109               	bnz	u10610
 15523  0037C4  0E05               	movlw	5
 15524  0037C6  5C11               	subwf	(??_atoi+2)^0,w,c
 15525  0037C8  A0D8               	btfss	status,0,c
 15526  0037CA  EFE9  F01B         	goto	u10611
 15527  0037CE  EFEB  F01B         	goto	u10610
 15528  0037D2                     u10611:
 15529  0037D2  EFED  F01B         	goto	l9499
 15530  0037D6                     u10610:
 15531  0037D6  0E00               	movlw	0
 15532  0037D8  6E19               	movwf	_atoi$1428^0,c
 15533  0037DA                     l9499:
 15534  0037DA  C019  F015         	movff	_atoi$1428,_atoi$1427
 15535  0037DE  6A16               	clrf	(_atoi$1427+1)^0,c
 15536  0037E0  5015               	movf	_atoi$1427^0,w,c
 15537  0037E2  1016               	iorwf	(_atoi$1427+1)^0,w,c
 15538  0037E4  A4D8               	btfss	status,2,c
 15539  0037E6  EFF7  F01B         	goto	u10621
 15540  0037EA  EFF9  F01B         	goto	u10620
 15541  0037EE                     u10621:
 15542  0037EE  EFBE  F01B         	goto	l9489
 15543  0037F2                     u10620:
 15544  0037F2  EF03  F01C         	goto	l9509
 15545  0037F6                     l9505:
 15546  0037F6  0E00               	movlw	0
 15547  0037F8  6E14               	movwf	(atoi@neg+1)^0,c
 15548  0037FA  0E01               	movlw	1
 15549  0037FC  6E13               	movwf	atoi@neg^0,c
 15550  0037FE                     l9507:
 15551  0037FE  4A0D               	infsnz	atoi@s^0,f,c
 15552  003800  2A0E               	incf	(atoi@s+1)^0,f,c
 15553  003802  EF38  F01C         	goto	l9515
 15554  003806                     l9509:
 15555  003806  C00D  FFF6         	movff	atoi@s,tblptrl
 15556  00380A  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15557  00380E                     	if	0	;tblptru may be non-zero
 15558  00380E                     	endif
 15559  00380E                     	if	0	;tblptru may be non-zero
 15560  00380E                     	endif
 15561  00380E  0008               	tblrd		*
 15562  003810  50F5               	movf	tablat,w,c
 15563  003812  6E0F               	movwf	??_atoi^0,c
 15564  003814  6A10               	clrf	(??_atoi+1)^0,c
 15565                           
 15566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15567                           ; Switch size 1, requested type "simple"
 15568                           ; Number of cases is 1, Range of values is 0 to 0
 15569                           ; switch strategies available:
 15570                           ; Name         Instructions Cycles
 15571                           ; simple_byte            4     3 (average)
 15572                           ;	Chosen strategy is simple_byte
 15573  003816  5010               	movf	(??_atoi+1)^0,w,c
 15574  003818  0A00               	xorlw	0	; case 0
 15575  00381A  B4D8               	btfsc	status,2,c
 15576  00381C  EF12  F01C         	goto	l11279
 15577  003820  EF38  F01C         	goto	l9515
 15578  003824                     l11279:
 15579                           
 15580                           ; Switch size 1, requested type "simple"
 15581                           ; Number of cases is 2, Range of values is 43 to 45
 15582                           ; switch strategies available:
 15583                           ; Name         Instructions Cycles
 15584                           ; simple_byte            7     4 (average)
 15585                           ;	Chosen strategy is simple_byte
 15586  003824  500F               	movf	??_atoi^0,w,c
 15587  003826  0A2B               	xorlw	43	; case 43
 15588  003828  B4D8               	btfsc	status,2,c
 15589  00382A  EFFF  F01B         	goto	l9507
 15590  00382E  0A06               	xorlw	6	; case 45
 15591  003830  B4D8               	btfsc	status,2,c
 15592  003832  EFFB  F01B         	goto	l9505
 15593  003836  EF38  F01C         	goto	l9515
 15594  00383A                     l9511:
 15595  00383A  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15596  00383E  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15597  003842  0E00               	movlw	0
 15598  003844  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 15599  003846  0E0A               	movlw	10
 15600  003848  6E08               	movwf	___wmul@multiplicand^0,c
 15601  00384A  ECB3  F02B         	call	___wmul	;wreg free
 15602  00384E  C00D  FFF6         	movff	atoi@s,tblptrl
 15603  003852  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15604  003856                     	if	0	;tblptru may be non-zero
 15605  003856                     	endif
 15606  003856                     	if	0	;tblptru may be non-zero
 15607  003856                     	endif
 15608  003856  0008               	tblrd		*
 15609  003858  50F5               	movf	tablat,w,c
 15610  00385A  5E06               	subwf	?___wmul^0,f,c
 15611  00385C  0E00               	movlw	0
 15612  00385E  5A07               	subwfb	(?___wmul+1)^0,f,c
 15613  003860  0E30               	movlw	48
 15614  003862  2406               	addwf	?___wmul^0,w,c
 15615  003864  6E1A               	movwf	atoi@n^0,c
 15616  003866  0E00               	movlw	0
 15617  003868  2007               	addwfc	(?___wmul+1)^0,w,c
 15618  00386A  6E1B               	movwf	(atoi@n+1)^0,c
 15619  00386C  EFFF  F01B         	goto	l9507
 15620  003870                     l9515:
 15621  003870  0ED0               	movlw	208
 15622  003872  6E0F               	movwf	??_atoi^0,c
 15623  003874  0EFF               	movlw	255
 15624  003876  6E10               	movwf	(??_atoi+1)^0,c
 15625  003878  C00D  FFF6         	movff	atoi@s,tblptrl
 15626  00387C  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15627  003880                     	if	0	;tblptru may be non-zero
 15628  003880                     	endif
 15629  003880                     	if	0	;tblptru may be non-zero
 15630  003880                     	endif
 15631  003880  0008               	tblrd		*
 15632  003882  50F5               	movf	tablat,w,c
 15633  003884  6E11               	movwf	(??_atoi+2)^0,c
 15634  003886  6A12               	clrf	(??_atoi+3)^0,c
 15635  003888  500F               	movf	??_atoi^0,w,c
 15636  00388A  2611               	addwf	(??_atoi+2)^0,f,c
 15637  00388C  5010               	movf	(??_atoi+1)^0,w,c
 15638  00388E  2212               	addwfc	(??_atoi+3)^0,f,c
 15639  003890  5012               	movf	(??_atoi+3)^0,w,c
 15640  003892  E10A               	bnz	u10630
 15641  003894  0E0A               	movlw	10
 15642  003896  5C11               	subwf	(??_atoi+2)^0,w,c
 15643  003898  A0D8               	btfss	status,0,c
 15644  00389A  EF51  F01C         	goto	u10631
 15645  00389E  EF54  F01C         	goto	u10630
 15646  0038A2                     u10631:
 15647  0038A2  0E01               	movlw	1
 15648  0038A4  EF55  F01C         	goto	u10640
 15649  0038A8                     u10630:
 15650  0038A8  0E00               	movlw	0
 15651  0038AA                     u10640:
 15652  0038AA  6E17               	movwf	_atoi$1429^0,c
 15653  0038AC  6A18               	clrf	(_atoi$1429+1)^0,c
 15654  0038AE  5017               	movf	_atoi$1429^0,w,c
 15655  0038B0  1018               	iorwf	(_atoi$1429+1)^0,w,c
 15656  0038B2  A4D8               	btfss	status,2,c
 15657  0038B4  EF5E  F01C         	goto	u10651
 15658  0038B8  EF60  F01C         	goto	u10650
 15659  0038BC                     u10651:
 15660  0038BC  EF1D  F01C         	goto	l9511
 15661  0038C0                     u10650:
 15662  0038C0  5013               	movf	atoi@neg^0,w,c
 15663  0038C2  1014               	iorwf	(atoi@neg+1)^0,w,c
 15664  0038C4  A4D8               	btfss	status,2,c
 15665  0038C6  EF67  F01C         	goto	u10661
 15666  0038CA  EF69  F01C         	goto	u10660
 15667  0038CE                     u10661:
 15668  0038CE  EF77  F01C         	goto	l1666
 15669  0038D2                     u10660:
 15670  0038D2  C01A  F00F         	movff	atoi@n,??_atoi
 15671  0038D6  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15672  0038DA  1E0F               	comf	??_atoi^0,f,c
 15673  0038DC  1E10               	comf	(??_atoi+1)^0,f,c
 15674  0038DE  4A0F               	infsnz	??_atoi^0,f,c
 15675  0038E0  2A10               	incf	(??_atoi+1)^0,f,c
 15676  0038E2  C00F  F00D         	movff	??_atoi,?_atoi
 15677  0038E6  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15678  0038EA  EF7B  F01C         	goto	l1669
 15679  0038EE                     l1666:
 15680  0038EE  C01A  F00D         	movff	atoi@n,?_atoi
 15681  0038F2  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15682  0038F6                     l1669:
 15683  0038F6  0012               	return		;funcret
 15684  0038F8                     __end_of_atoi:
 15685                           	opt callstack 0
 15686                           
 15687 ;; *************** function _isspace *****************
 15688 ;; Defined at:
 15689 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15690 ;; Parameters:    Size  Location     Type
 15691 ;;  c               2    5[COMRAM] int 
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;		None
 15694 ;; Return value:  Size  Location     Type
 15695 ;;                  2    5[COMRAM] int 
 15696 ;; Registers used:
 15697 ;;		wreg, status,2, status,0
 15698 ;; Tracked objects:
 15699 ;;		On entry : 0/0
 15700 ;;		On exit  : 0/0
 15701 ;;		Unchanged: 0/0
 15702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15703 ;;      Params:         2       0       0       0       0       0       0       0       0
 15704 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15705 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15706 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15707 ;;Total ram usage:        7 bytes
 15708 ;; Hardware stack levels used:    1
 15709 ;; Hardware stack levels required when called:    2
 15710 ;; This function calls:
 15711 ;;		Nothing
 15712 ;; This function is called by:
 15713 ;;		_atoi
 15714 ;; This function uses a non-reentrant model
 15715 ;;
 15716                           
 15717                           	psect	text61
 15718  0052F0                     __ptext61:
 15719                           	opt callstack 0
 15720  0052F0                     _isspace:
 15721                           	opt callstack 23
 15722  0052F0  0E01               	movlw	1
 15723  0052F2  6E0C               	movwf	_isspace$1458^0,c
 15724  0052F4  0E20               	movlw	32
 15725  0052F6  1806               	xorwf	isspace@c^0,w,c
 15726  0052F8  1007               	iorwf	(isspace@c+1)^0,w,c
 15727  0052FA  B4D8               	btfsc	status,2,c
 15728  0052FC  EF82  F029         	goto	u9871
 15729  005300  EF84  F029         	goto	u9870
 15730  005304                     u9871:
 15731  005304  EF9D  F029         	goto	l9091
 15732  005308                     u9870:
 15733  005308  0EF7               	movlw	247
 15734  00530A  6E08               	movwf	??_isspace^0,c
 15735  00530C  0EFF               	movlw	255
 15736  00530E  6E09               	movwf	(??_isspace+1)^0,c
 15737  005310  C006  F00A         	movff	isspace@c,??_isspace+2
 15738  005314  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15739  005318  5008               	movf	??_isspace^0,w,c
 15740  00531A  260A               	addwf	(??_isspace+2)^0,f,c
 15741  00531C  5009               	movf	(??_isspace+1)^0,w,c
 15742  00531E  220B               	addwfc	(??_isspace+3)^0,f,c
 15743  005320  500B               	movf	(??_isspace+3)^0,w,c
 15744  005322  E109               	bnz	u9880
 15745  005324  0E05               	movlw	5
 15746  005326  5C0A               	subwf	(??_isspace+2)^0,w,c
 15747  005328  A0D8               	btfss	status,0,c
 15748  00532A  EF99  F029         	goto	u9881
 15749  00532E  EF9B  F029         	goto	u9880
 15750  005332                     u9881:
 15751  005332  EF9D  F029         	goto	l9091
 15752  005336                     u9880:
 15753  005336  0E00               	movlw	0
 15754  005338  6E0C               	movwf	_isspace$1458^0,c
 15755  00533A                     l9091:
 15756  00533A  C00C  F006         	movff	_isspace$1458,?_isspace
 15757  00533E  6A07               	clrf	(?_isspace+1)^0,c
 15758  005340  0012               	return		;funcret
 15759  005342                     __end_of_isspace:
 15760                           	opt callstack 0
 15761                           
 15762 ;; *************** function _isdigit *****************
 15763 ;; Defined at:
 15764 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15765 ;; Parameters:    Size  Location     Type
 15766 ;;  c               2    5[COMRAM] int 
 15767 ;; Auto vars:     Size  Location     Type
 15768 ;;		None
 15769 ;; Return value:  Size  Location     Type
 15770 ;;                  2    5[COMRAM] int 
 15771 ;; Registers used:
 15772 ;;		wreg, status,2, status,0
 15773 ;; Tracked objects:
 15774 ;;		On entry : 0/0
 15775 ;;		On exit  : 0/0
 15776 ;;		Unchanged: 0/0
 15777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15778 ;;      Params:         2       0       0       0       0       0       0       0       0
 15779 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15780 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15781 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15782 ;;Total ram usage:        6 bytes
 15783 ;; Hardware stack levels used:    1
 15784 ;; Hardware stack levels required when called:    2
 15785 ;; This function calls:
 15786 ;;		Nothing
 15787 ;; This function is called by:
 15788 ;;		_vfpfcnvrt
 15789 ;;		_atoi
 15790 ;; This function uses a non-reentrant model
 15791 ;;
 15792                           
 15793                           	psect	text62
 15794  00567E                     __ptext62:
 15795                           	opt callstack 0
 15796  00567E                     _isdigit:
 15797                           	opt callstack 24
 15798  00567E  0ED0               	movlw	208
 15799  005680  6E08               	movwf	??_isdigit^0,c
 15800  005682  0EFF               	movlw	255
 15801  005684  6E09               	movwf	(??_isdigit+1)^0,c
 15802  005686  C006  F00A         	movff	isdigit@c,??_isdigit+2
 15803  00568A  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 15804  00568E  5008               	movf	??_isdigit^0,w,c
 15805  005690  260A               	addwf	(??_isdigit+2)^0,f,c
 15806  005692  5009               	movf	(??_isdigit+1)^0,w,c
 15807  005694  220B               	addwfc	(??_isdigit+3)^0,f,c
 15808  005696  500B               	movf	(??_isdigit+3)^0,w,c
 15809  005698  E10A               	bnz	u8920
 15810  00569A  0E0A               	movlw	10
 15811  00569C  5C0A               	subwf	(??_isdigit+2)^0,w,c
 15812  00569E  A0D8               	btfss	status,0,c
 15813  0056A0  EF54  F02B         	goto	u8921
 15814  0056A4  EF57  F02B         	goto	u8920
 15815  0056A8                     u8921:
 15816  0056A8  0E01               	movlw	1
 15817  0056AA  EF58  F02B         	goto	u8930
 15818  0056AE                     u8920:
 15819  0056AE  0E00               	movlw	0
 15820  0056B0                     u8930:
 15821  0056B0  6E06               	movwf	?_isdigit^0,c
 15822  0056B2  6A07               	clrf	(?_isdigit+1)^0,c
 15823  0056B4  0012               	return		;funcret
 15824  0056B6                     __end_of_isdigit:
 15825                           	opt callstack 0
 15826                           
 15827 ;; *************** function ___wmul *****************
 15828 ;; Defined at:
 15829 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15830 ;; Parameters:    Size  Location     Type
 15831 ;;  multiplier      2    5[COMRAM] unsigned int 
 15832 ;;  multiplicand    2    7[COMRAM] unsigned int 
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;  product         2    9[COMRAM] unsigned int 
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  2    5[COMRAM] unsigned int 
 15837 ;; Registers used:
 15838 ;;		wreg, status,2, status,0, prodl, prodh
 15839 ;; Tracked objects:
 15840 ;;		On entry : 0/0
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15844 ;;      Params:         4       0       0       0       0       0       0       0       0
 15845 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15847 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15848 ;;Total ram usage:        6 bytes
 15849 ;; Hardware stack levels used:    1
 15850 ;; Hardware stack levels required when called:    2
 15851 ;; This function calls:
 15852 ;;		Nothing
 15853 ;; This function is called by:
 15854 ;;		_atoi
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           	psect	text63
 15859  005766                     __ptext63:
 15860                           	opt callstack 0
 15861  005766                     ___wmul:
 15862                           	opt callstack 23
 15863  005766  5006               	movf	___wmul@multiplier^0,w,c
 15864  005768  0208               	mulwf	___wmul@multiplicand^0,c
 15865  00576A  CFF3 F00A          	movff	prodl,___wmul@product
 15866  00576E  CFF4 F00B          	movff	prodh,___wmul@product+1
 15867  005772  5006               	movf	___wmul@multiplier^0,w,c
 15868  005774  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 15869  005776  50F3               	movf	243,w,c
 15870  005778  260B               	addwf	(___wmul@product+1)^0,f,c
 15871  00577A  5007               	movf	(___wmul@multiplier+1)^0,w,c
 15872  00577C  0208               	mulwf	___wmul@multiplicand^0,c
 15873  00577E  50F3               	movf	243,w,c
 15874  005780  260B               	addwf	(___wmul@product+1)^0,f,c
 15875  005782  C00A  F006         	movff	___wmul@product,?___wmul
 15876  005786  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 15877  00578A  0012               	return		;funcret
 15878  00578C                     __end_of___wmul:
 15879                           	opt callstack 0
 15880                           
 15881 ;; *************** function _seLlegoAlDestino *****************
 15882 ;; Defined at:
 15883 ;;		line 802 in file "main.c"
 15884 ;; Parameters:    Size  Location     Type
 15885 ;;		None
 15886 ;; Auto vars:     Size  Location     Type
 15887 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 15888 ;; Return value:  Size  Location     Type
 15889 ;;                  1    wreg      unsigned char 
 15890 ;; Registers used:
 15891 ;;		wreg, status,2, status,0, cstack
 15892 ;; Tracked objects:
 15893 ;;		On entry : 0/0
 15894 ;;		On exit  : 0/0
 15895 ;;		Unchanged: 0/0
 15896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15897 ;;      Params:         0       0       0       0       0       0       0       0       0
 15898 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15899 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15900 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15901 ;;Total ram usage:        1 bytes
 15902 ;; Hardware stack levels used:    1
 15903 ;; Hardware stack levels required when called:    3
 15904 ;; This function calls:
 15905 ;;		_dameLecturaAdc
 15906 ;; This function is called by:
 15907 ;;		_decidirDireccion
 15908 ;; This function uses a non-reentrant model
 15909 ;;
 15910                           
 15911                           	psect	text64
 15912  0056EC                     __ptext64:
 15913                           	opt callstack 0
 15914  0056EC                     _seLlegoAlDestino:
 15915                           	opt callstack 25
 15916  0056EC                     
 15917                           ;main.c: 804:     T_BOOL llegoDestino = 0;
 15918  0056EC  0E00               	movlw	0
 15919  0056EE  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15920  0056F0                     
 15921                           ;main.c: 807:     if (dameLecturaAdc(0) < 20)
 15922  0056F0  0E00               	movlw	0
 15923  0056F2  EC82  F02A         	call	_dameLecturaAdc
 15924  0056F6  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 15925  0056F8  EF89  F02B         	goto	u11310
 15926  0056FC  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 15927  0056FE  E107               	bnz	u11311
 15928  005700  0E14               	movlw	20
 15929  005702  5C06               	subwf	?_dameLecturaAdc^0,w,c
 15930  005704  B0D8               	btfsc	status,0,c
 15931  005706  EF87  F02B         	goto	u11311
 15932  00570A  EF89  F02B         	goto	u11310
 15933  00570E                     u11311:
 15934  00570E  EF8B  F02B         	goto	l515
 15935  005712                     u11310:
 15936  005712                     
 15937                           ;main.c: 808:         llegoDestino = 1;
 15938  005712  0E01               	movlw	1
 15939  005714  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15940  005716                     l515:
 15941                           
 15942                           ;main.c: 810:     return llegoDestino;
 15943  005716  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 15944  005718  0012               	return		;funcret
 15945  00571A                     __end_of_seLlegoAlDestino:
 15946                           	opt callstack 0
 15947                           
 15948 ;; *************** function _dameLecturaAdc *****************
 15949 ;; Defined at:
 15950 ;;		line 12 in file "./adc.h"
 15951 ;; Parameters:    Size  Location     Type
 15952 ;;  canalLeer       1    wreg     unsigned char 
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;  canalLeer       1    9[COMRAM] unsigned char 
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  2    5[COMRAM] short 
 15957 ;; Registers used:
 15958 ;;		wreg, status,2, status,0
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15964 ;;      Params:         2       0       0       0       0       0       0       0       0
 15965 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15966 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15967 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15968 ;;Total ram usage:        5 bytes
 15969 ;; Hardware stack levels used:    1
 15970 ;; Hardware stack levels required when called:    2
 15971 ;; This function calls:
 15972 ;;		Nothing
 15973 ;; This function is called by:
 15974 ;;		_seLlegoAlDestino
 15975 ;;		_probarSensores
 15976 ;; This function uses a non-reentrant model
 15977 ;;
 15978                           
 15979                           	psect	text65
 15980  005504                     __ptext65:
 15981                           	opt callstack 0
 15982  005504                     _dameLecturaAdc:
 15983                           	opt callstack 25
 15984                           
 15985                           ;incstack = 0
 15986                           ;dameLecturaAdc@canalLeer stored from wreg
 15987  005504  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 15988  005506                     
 15989                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 15990  005506  0E06               	movlw	6
 15991  005508                     u12287:
 15992  005508  2EE8               	decfsz	wreg,f,c
 15993  00550A  D7FE               	bra	u12287
 15994  00550C  D000               	nop2	
 15995  00550E                     
 15996                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 15997  00550E  80C2               	bsf	194,0,c	;volatile
 15998  005510                     
 15999                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 16000  005510  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 16001  005514  4608               	rlncf	??_dameLecturaAdc^0,f,c
 16002  005516  4608               	rlncf	??_dameLecturaAdc^0,f,c
 16003  005518  50C2               	movf	194,w,c	;volatile
 16004  00551A  1808               	xorwf	??_dameLecturaAdc^0,w,c
 16005  00551C  0BC3               	andlw	-61
 16006  00551E  1808               	xorwf	??_dameLecturaAdc^0,w,c
 16007  005520  6EC2               	movwf	194,c	;volatile
 16008  005522                     
 16009                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 16010  005522  82C2               	bsf	194,1,c	;volatile
 16011  005524                     
 16012                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 16013  005524  82C2               	bsf	194,1,c	;volatile
 16014  005526                     l233:
 16015  005526  B2C2               	btfsc	194,1,c	;volatile
 16016  005528  EF98  F02A         	goto	u10931
 16017  00552C  EF9A  F02A         	goto	u10930
 16018  005530                     u10931:
 16019  005530  EF93  F02A         	goto	l233
 16020  005534                     u10930:
 16021  005534                     
 16022                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 16023  005534  90C2               	bcf	194,0,c	;volatile
 16024  005536                     
 16025                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 16026  005536  50C4               	movf	196,w,c	;volatile
 16027  005538  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 16028  00553A  6A08               	clrf	??_dameLecturaAdc^0,c
 16029  00553C  50C3               	movf	195,w,c	;volatile
 16030  00553E  2408               	addwf	??_dameLecturaAdc^0,w,c
 16031  005540  6E06               	movwf	?_dameLecturaAdc^0,c
 16032  005542  0E00               	movlw	0
 16033  005544  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 16034  005546  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 16035  005548  0012               	return		;funcret
 16036  00554A                     __end_of_dameLecturaAdc:
 16037                           	opt callstack 0
 16038                           
 16039 ;; *************** function _mostrarDireccionElegida *****************
 16040 ;; Defined at:
 16041 ;;		line 814 in file "main.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;  direccionEle    1    wreg     unsigned char 
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;  direccionEle    1   10[COMRAM] unsigned char 
 16046 ;; Return value:  Size  Location     Type
 16047 ;;                  1    wreg      void 
 16048 ;; Registers used:
 16049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16050 ;; Tracked objects:
 16051 ;;		On entry : 0/0
 16052 ;;		On exit  : 0/0
 16053 ;;		Unchanged: 0/0
 16054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16055 ;;      Params:         0       0       0       0       0       0       0       0       0
 16056 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16057 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16058 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16059 ;;Total ram usage:        3 bytes
 16060 ;; Hardware stack levels used:    1
 16061 ;; Hardware stack levels required when called:    4
 16062 ;; This function calls:
 16063 ;;		_UART_printf
 16064 ;; This function is called by:
 16065 ;;		_decidirDireccion
 16066 ;; This function uses a non-reentrant model
 16067 ;;
 16068                           
 16069                           	psect	text66
 16070  004D76                     __ptext66:
 16071                           	opt callstack 0
 16072  004D76                     _mostrarDireccionElegida:
 16073                           	opt callstack 24
 16074                           
 16075                           ;incstack = 0
 16076                           ;mostrarDireccionElegida@direccionElegida stored from wreg
 16077  004D76  6E0B               	movwf	mostrarDireccionElegida@direccionElegida^0,c
 16078  004D78                     
 16079                           ;main.c: 816:     switch (direccionElegida) {
 16080  004D78  EFDE  F026         	goto	l10029
 16081  004D7C                     l10019:
 16082                           
 16083                           ;main.c: 818:             UART_printf("\rDireccion Elegida: ENFRENTE\n\n\r");
 16084  004D7C  0EEA               	movlw	low STR_15
 16085  004D7E  6E07               	movwf	UART_printf@cadena^0,c
 16086  004D80  0E7E               	movlw	high STR_15
 16087  004D82  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16088  004D84  EC45  F028         	call	_UART_printf	;wreg free
 16089                           
 16090                           ;main.c: 819:             break;
 16091  004D88  EFFB  F026         	goto	l526
 16092  004D8C                     l10021:
 16093                           
 16094                           ;main.c: 822:             UART_printf("\rDireccion Elegida: IZQUIERDA\n\n\r");
 16095  004D8C  0EA9               	movlw	low STR_16
 16096  004D8E  6E07               	movwf	UART_printf@cadena^0,c
 16097  004D90  0E7E               	movlw	high STR_16
 16098  004D92  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16099  004D94  EC45  F028         	call	_UART_printf	;wreg free
 16100                           
 16101                           ;main.c: 823:             break;
 16102  004D98  EFFB  F026         	goto	l526
 16103  004D9C                     l10023:
 16104                           
 16105                           ;main.c: 826:             UART_printf("\rDireccion Elegida: DERECHA\n\n\r");
 16106  004D9C  0E2A               	movlw	low STR_17
 16107  004D9E  6E07               	movwf	UART_printf@cadena^0,c
 16108  004DA0  0E7F               	movlw	high STR_17
 16109  004DA2  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16110  004DA4  EC45  F028         	call	_UART_printf	;wreg free
 16111                           
 16112                           ;main.c: 827:             break;
 16113  004DA8  EFFB  F026         	goto	l526
 16114  004DAC                     l10025:
 16115                           
 16116                           ;main.c: 830:             UART_printf("\rDireccion Elegida: CALLEJON\n\n\r");
 16117  004DAC  0E0A               	movlw	low STR_18
 16118  004DAE  6E07               	movwf	UART_printf@cadena^0,c
 16119  004DB0  0E7F               	movlw	high STR_18
 16120  004DB2  6E08               	movwf	(UART_printf@cadena+1)^0,c
 16121  004DB4  EC45  F028         	call	_UART_printf	;wreg free
 16122                           
 16123                           ;main.c: 831:             break;
 16124  004DB8  EFFB  F026         	goto	l526
 16125  004DBC                     l10029:
 16126  004DBC  500B               	movf	mostrarDireccionElegida@direccionElegida^0,w,c
 16127  004DBE  6E09               	movwf	??_mostrarDireccionElegida^0,c
 16128  004DC0  6A0A               	clrf	(??_mostrarDireccionElegida+1)^0,c
 16129                           
 16130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16131                           ; Switch size 1, requested type "simple"
 16132                           ; Number of cases is 1, Range of values is 0 to 0
 16133                           ; switch strategies available:
 16134                           ; Name         Instructions Cycles
 16135                           ; simple_byte            4     3 (average)
 16136                           ;	Chosen strategy is simple_byte
 16137  004DC2  500A               	movf	(??_mostrarDireccionElegida+1)^0,w,c
 16138  004DC4  0A00               	xorlw	0	; case 0
 16139  004DC6  B4D8               	btfsc	status,2,c
 16140  004DC8  EFE8  F026         	goto	l11281
 16141  004DCC  EFFB  F026         	goto	l526
 16142  004DD0                     l11281:
 16143                           
 16144                           ; Switch size 1, requested type "simple"
 16145                           ; Number of cases is 4, Range of values is 0 to 3
 16146                           ; switch strategies available:
 16147                           ; Name         Instructions Cycles
 16148                           ; simple_byte           13     7 (average)
 16149                           ;	Chosen strategy is simple_byte
 16150  004DD0  5009               	movf	??_mostrarDireccionElegida^0,w,c
 16151  004DD2  0A00               	xorlw	0	; case 0
 16152  004DD4  B4D8               	btfsc	status,2,c
 16153  004DD6  EFD6  F026         	goto	l10025
 16154  004DDA  0A01               	xorlw	1	; case 1
 16155  004DDC  B4D8               	btfsc	status,2,c
 16156  004DDE  EFBE  F026         	goto	l10019
 16157  004DE2  0A03               	xorlw	3	; case 2
 16158  004DE4  B4D8               	btfsc	status,2,c
 16159  004DE6  EFC6  F026         	goto	l10021
 16160  004DEA  0A01               	xorlw	1	; case 3
 16161  004DEC  B4D8               	btfsc	status,2,c
 16162  004DEE  EFCE  F026         	goto	l10023
 16163  004DF2  EFFB  F026         	goto	l526
 16164  004DF6                     l526:
 16165  004DF6  0012               	return		;funcret
 16166  004DF8                     __end_of_mostrarDireccionElegida:
 16167                           	opt callstack 0
 16168                           
 16169 ;; *************** function _UART_printf *****************
 16170 ;; Defined at:
 16171 ;;		line 47 in file "./UART.h"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 16174 ;;		 -> STR_18(32), STR_17(31), STR_16(33), STR_15(32), 
 16175 ;;		 -> STR_14(23), STR_13(34), STR_12(56), STR_10(6), 
 16176 ;;		 -> STR_9(9), STR_8(11), STR_7(10), buffer(50), 
 16177 ;;		 -> STR_2(25), STR_1(24), 
 16178 ;; Auto vars:     Size  Location     Type
 16179 ;;		None
 16180 ;; Return value:  Size  Location     Type
 16181 ;;                  1    wreg      void 
 16182 ;; Registers used:
 16183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16184 ;; Tracked objects:
 16185 ;;		On entry : 0/0
 16186 ;;		On exit  : 0/0
 16187 ;;		Unchanged: 0/0
 16188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16189 ;;      Params:         2       0       0       0       0       0       0       0       0
 16190 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16191 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16192 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16193 ;;Total ram usage:        2 bytes
 16194 ;; Hardware stack levels used:    1
 16195 ;; Hardware stack levels required when called:    3
 16196 ;; This function calls:
 16197 ;;		_UART_write
 16198 ;; This function is called by:
 16199 ;;		_visualizarPasosRealizados
 16200 ;;		_comportamientoBasico
 16201 ;;		_mostrarDireccionElegida
 16202 ;;		_decidirDireccion
 16203 ;;		_probarMapeoDireccionCruces
 16204 ;;		_probarSensores
 16205 ;;		_probarUltrasonico
 16206 ;; This function uses a non-reentrant model
 16207 ;;
 16208                           
 16209                           	psect	text67
 16210  00508A                     __ptext67:
 16211                           	opt callstack 0
 16212  00508A                     _UART_printf:
 16213                           	opt callstack 26
 16214  00508A                     
 16215                           ;./UART.h: 48:     while (*cadena) {
 16216  00508A  EF5B  F028         	goto	l9683
 16217  00508E                     l9679:
 16218                           
 16219                           ;./UART.h: 49:         UART_write(*cadena++);
 16220  00508E  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 16221  005092  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 16222  005096  6AF8               	clrf	tblptru,c
 16223  005098  0E07               	movlw	(high __ramtop+-1)
 16224  00509A  64F7               	cpfsgt	tblptrh,c
 16225  00509C  D003               	bra	u10907
 16226  00509E  0008               	tblrd		*
 16227  0050A0  50F5               	movf	tablat,w,c
 16228  0050A2  D005               	bra	u10900
 16229  0050A4                     u10907:
 16230  0050A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 16231  0050A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 16232  0050AC  50EF               	movf	indf0,w,c
 16233  0050AE                     u10900:
 16234  0050AE  EC15  F02C         	call	_UART_write
 16235  0050B2  4A07               	infsnz	UART_printf@cadena^0,f,c
 16236  0050B4  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 16237  0050B6                     l9683:
 16238                           
 16239                           ;./UART.h: 48:     while (*cadena) {
 16240  0050B6  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 16241  0050BA  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 16242  0050BE  6AF8               	clrf	tblptru,c
 16243  0050C0  0E07               	movlw	(high __ramtop+-1)
 16244  0050C2  64F7               	cpfsgt	tblptrh,c
 16245  0050C4  D003               	bra	u10917
 16246  0050C6  0008               	tblrd		*
 16247  0050C8  50F5               	movf	tablat,w,c
 16248  0050CA  D005               	bra	u10910
 16249  0050CC                     u10917:
 16250  0050CC  CFF6 FFE9          	movff	tblptrl,fsr0l
 16251  0050D0  CFF7 FFEA          	movff	tblptrh,fsr0h
 16252  0050D4  50EF               	movf	indf0,w,c
 16253  0050D6                     u10910:
 16254  0050D6  0900               	iorlw	0
 16255  0050D8  A4D8               	btfss	status,2,c
 16256  0050DA  EF71  F028         	goto	u10921
 16257  0050DE  EF73  F028         	goto	u10920
 16258  0050E2                     u10921:
 16259  0050E2  EF47  F028         	goto	l9679
 16260  0050E6                     u10920:
 16261  0050E6  0012               	return		;funcret
 16262  0050E8                     __end_of_UART_printf:
 16263                           	opt callstack 0
 16264                           
 16265 ;; *************** function _UART_write *****************
 16266 ;; Defined at:
 16267 ;;		line 42 in file "./UART.h"
 16268 ;; Parameters:    Size  Location     Type
 16269 ;;  dato            1    wreg     unsigned char 
 16270 ;; Auto vars:     Size  Location     Type
 16271 ;;  dato            1    5[COMRAM] unsigned char 
 16272 ;; Return value:  Size  Location     Type
 16273 ;;                  1    wreg      void 
 16274 ;; Registers used:
 16275 ;;		wreg
 16276 ;; Tracked objects:
 16277 ;;		On entry : 0/0
 16278 ;;		On exit  : 0/0
 16279 ;;		Unchanged: 0/0
 16280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16281 ;;      Params:         0       0       0       0       0       0       0       0       0
 16282 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16283 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16284 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16285 ;;Total ram usage:        1 bytes
 16286 ;; Hardware stack levels used:    1
 16287 ;; Hardware stack levels required when called:    2
 16288 ;; This function calls:
 16289 ;;		Nothing
 16290 ;; This function is called by:
 16291 ;;		_UART_printf
 16292 ;; This function uses a non-reentrant model
 16293 ;;
 16294                           
 16295                           	psect	text68
 16296  00582A                     __ptext68:
 16297                           	opt callstack 0
 16298  00582A                     _UART_write:
 16299                           	opt callstack 26
 16300                           
 16301                           ;incstack = 0
 16302                           ;UART_write@dato stored from wreg
 16303  00582A  6E06               	movwf	UART_write@dato^0,c
 16304  00582C                     
 16305                           ;./UART.h: 43:     TXREG = dato;
 16306  00582C  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 16307  005830                     l218:
 16308  005830  A2AC               	btfss	172,1,c	;volatile
 16309  005832  EF1D  F02C         	goto	u10721
 16310  005836  EF1F  F02C         	goto	u10720
 16311  00583A                     u10721:
 16312  00583A  EF18  F02C         	goto	l218
 16313  00583E                     u10720:
 16314  00583E  0012               	return		;funcret
 16315  005840                     __end_of_UART_write:
 16316                           	opt callstack 0
 16317                           
 16318 ;; *************** function _hayCruce *****************
 16319 ;; Defined at:
 16320 ;;		line 666 in file "main.c"
 16321 ;; Parameters:    Size  Location     Type
 16322 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 16323 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 16324 ;;  investigando    1   65[COMRAM] unsigned char 
 16325 ;; Auto vars:     Size  Location     Type
 16326 ;;  contCaminos     1   66[COMRAM] unsigned char 
 16327 ;; Return value:  Size  Location     Type
 16328 ;;                  1    wreg      unsigned char 
 16329 ;; Registers used:
 16330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16331 ;; Tracked objects:
 16332 ;;		On entry : 0/0
 16333 ;;		On exit  : 0/0
 16334 ;;		Unchanged: 0/0
 16335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16336 ;;      Params:         3       0       0       0       0       0       0       0       0
 16337 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16338 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16339 ;;      Totals:         4       0       0       0       0       0       0       0       0
 16340 ;;Total ram usage:        4 bytes
 16341 ;; Hardware stack levels used:    1
 16342 ;; Hardware stack levels required when called:    3
 16343 ;; This function calls:
 16344 ;;		___flge
 16345 ;; This function is called by:
 16346 ;;		_decidirDireccion
 16347 ;; This function uses a non-reentrant model
 16348 ;;
 16349                           
 16350                           	psect	text69
 16351  0038F8                     __ptext69:
 16352                           	opt callstack 0
 16353  0038F8                     _hayCruce:
 16354                           	opt callstack 25
 16355  0038F8                     
 16356                           ;main.c: 668:     T_UBYTE contCaminos = 0;
 16357  0038F8  0E00               	movlw	0
 16358  0038FA  6E43               	movwf	hayCruce@contCaminos^0,c
 16359                           
 16360                           ;main.c: 670:     paredEnfrente = 0;
 16361  0038FC  0E00               	movlw	0
 16362  0038FE  0101               	movlb	1	; () banked
 16363  003900  6F3B               	movwf	_paredEnfrente& (0+255),b
 16364                           
 16365                           ;main.c: 671:     paredDerecha = 0;
 16366  003902  0E00               	movlw	0
 16367  003904  6F3A               	movwf	_paredDerecha& (0+255),b
 16368                           
 16369                           ;main.c: 672:     paredIzquierda = 0;
 16370  003906  0E00               	movlw	0
 16371  003908  6F39               	movwf	_paredIzquierda& (0+255),b
 16372                           
 16373                           ;main.c: 674:     if (!investigandoCruce) {
 16374  00390A  5042               	movf	hayCruce@investigandoCruce^0,w,c
 16375  00390C  A4D8               	btfss	status,2,c
 16376  00390E  EF8B  F01C         	goto	u11221
 16377  003912  EF8D  F01C         	goto	u11220
 16378  003916                     u11221:
 16379  003916  EF37  F01D         	goto	l9997
 16380  00391A                     u11220:
 16381  00391A                     
 16382                           ; BSR set to: 1
 16383                           ;main.c: 676:         if (sensorEnfrente > 35) {
 16384  00391A  0E00               	movlw	0
 16385  00391C  6E34               	movwf	___flge@ff1^0,c
 16386  00391E  0E00               	movlw	0
 16387  003920  6E35               	movwf	(___flge@ff1+1)^0,c
 16388  003922  0E0C               	movlw	12
 16389  003924  6E36               	movwf	(___flge@ff1+2)^0,c
 16390  003926  0E42               	movlw	66
 16391  003928  6E37               	movwf	(___flge@ff1+3)^0,c
 16392  00392A  C124  F038         	movff	_sensorEnfrente,___flge@ff2
 16393  00392E  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 16394  003932  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 16395  003936  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 16396  00393A  ECB7  F021         	call	___flge	;wreg free
 16397  00393E  B0D8               	btfsc	status,0,c
 16398  003940  EFA4  F01C         	goto	u11231
 16399  003944  EFA6  F01C         	goto	u11230
 16400  003948                     u11231:
 16401  003948  EFAA  F01C         	goto	l9927
 16402  00394C                     u11230:
 16403  00394C                     
 16404                           ;main.c: 677:             paredEnfrente = 1;
 16405  00394C  0E01               	movlw	1
 16406  00394E  0101               	movlb	1	; () banked
 16407  003950  6F3B               	movwf	_paredEnfrente& (0+255),b
 16408  003952                     
 16409                           ; BSR set to: 1
 16410                           ;main.c: 678:             contCaminos++;
 16411  003952  2A43               	incf	hayCruce@contCaminos^0,f,c
 16412  003954                     l9927:
 16413                           
 16414                           ;main.c: 681:         if (sensorIzquierda > 30) {
 16415  003954  0E00               	movlw	0
 16416  003956  6E34               	movwf	___flge@ff1^0,c
 16417  003958  0E00               	movlw	0
 16418  00395A  6E35               	movwf	(___flge@ff1+1)^0,c
 16419  00395C  0EF0               	movlw	240
 16420  00395E  6E36               	movwf	(___flge@ff1+2)^0,c
 16421  003960  0E41               	movlw	65
 16422  003962  6E37               	movwf	(___flge@ff1+3)^0,c
 16423  003964  C128  F038         	movff	_sensorIzquierda,___flge@ff2
 16424  003968  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 16425  00396C  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 16426  003970  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 16427  003974  ECB7  F021         	call	___flge	;wreg free
 16428  003978  B0D8               	btfsc	status,0,c
 16429  00397A  EFC1  F01C         	goto	u11241
 16430  00397E  EFC3  F01C         	goto	u11240
 16431  003982                     u11241:
 16432  003982  EFC7  F01C         	goto	l9933
 16433  003986                     u11240:
 16434  003986                     
 16435                           ;main.c: 682:             paredIzquierda = 1;
 16436  003986  0E01               	movlw	1
 16437  003988  0101               	movlb	1	; () banked
 16438  00398A  6F39               	movwf	_paredIzquierda& (0+255),b
 16439  00398C                     
 16440                           ; BSR set to: 1
 16441                           ;main.c: 683:             contCaminos++;
 16442  00398C  2A43               	incf	hayCruce@contCaminos^0,f,c
 16443  00398E                     l9933:
 16444                           
 16445                           ;main.c: 686:         if (sensorDerecha > 30) {
 16446  00398E  0E00               	movlw	0
 16447  003990  6E34               	movwf	___flge@ff1^0,c
 16448  003992  0E00               	movlw	0
 16449  003994  6E35               	movwf	(___flge@ff1+1)^0,c
 16450  003996  0EF0               	movlw	240
 16451  003998  6E36               	movwf	(___flge@ff1+2)^0,c
 16452  00399A  0E41               	movlw	65
 16453  00399C  6E37               	movwf	(___flge@ff1+3)^0,c
 16454  00399E  C12C  F038         	movff	_sensorDerecha,___flge@ff2
 16455  0039A2  C12D  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 16456  0039A6  C12E  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 16457  0039AA  C12F  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 16458  0039AE  ECB7  F021         	call	___flge	;wreg free
 16459  0039B2  B0D8               	btfsc	status,0,c
 16460  0039B4  EFDE  F01C         	goto	u11251
 16461  0039B8  EFE0  F01C         	goto	u11250
 16462  0039BC                     u11251:
 16463  0039BC  EFE4  F01C         	goto	l9939
 16464  0039C0                     u11250:
 16465  0039C0                     
 16466                           ;main.c: 687:             paredDerecha = 1;
 16467  0039C0  0E01               	movlw	1
 16468  0039C2  0101               	movlb	1	; () banked
 16469  0039C4  6F3A               	movwf	_paredDerecha& (0+255),b
 16470  0039C6                     
 16471                           ; BSR set to: 1
 16472                           ;main.c: 688:             contCaminos++;
 16473  0039C6  2A43               	incf	hayCruce@contCaminos^0,f,c
 16474  0039C8                     l9939:
 16475                           
 16476                           ;main.c: 692:         if (contCaminos > 1) {
 16477  0039C8  0E01               	movlw	1
 16478  0039CA  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16479  0039CC  EFEA  F01C         	goto	u11261
 16480  0039D0  EFEC  F01C         	goto	u11260
 16481  0039D4                     u11261:
 16482  0039D4  EF37  F01D         	goto	l9997
 16483  0039D8                     u11260:
 16484  0039D8                     
 16485                           ;main.c: 703:                 if (paredDerecha)
 16486  0039D8  0101               	movlb	1	; () banked
 16487  0039DA  513A               	movf	_paredDerecha& (0+255),w,b
 16488  0039DC  B4D8               	btfsc	status,2,c
 16489  0039DE  EFF3  F01C         	goto	u11271
 16490  0039E2  EFF5  F01C         	goto	u11270
 16491  0039E6                     u11271:
 16492  0039E6  EFFF  F01C         	goto	l9953
 16493  0039EA                     u11270:
 16494  0039EA                     
 16495                           ; BSR set to: 1
 16496  0039EA  EE20 F002          	lfsr	2,2
 16497  0039EE  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16498  0039F0  26D9               	addwf	fsr2l,f,c
 16499  0039F2  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16500  0039F4  22DA               	addwfc	fsr2h,f,c
 16501  0039F6  0E31               	movlw	49
 16502  0039F8  6EDF               	movwf	indf2,c
 16503  0039FA  EF07  F01D         	goto	l9973
 16504  0039FE                     l9953:
 16505                           
 16506                           ; BSR set to: 1
 16507  0039FE  EE20 F002          	lfsr	2,2
 16508  003A02  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16509  003A04  26D9               	addwf	fsr2l,f,c
 16510  003A06  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16511  003A08  22DA               	addwfc	fsr2h,f,c
 16512  003A0A  0E30               	movlw	48
 16513  003A0C  6EDF               	movwf	indf2,c
 16514  003A0E                     l9973:
 16515                           
 16516                           ; BSR set to: 1
 16517                           ;main.c: 733:                 if (paredIzquierda)
 16518  003A0E  5139               	movf	_paredIzquierda& (0+255),w,b
 16519  003A10  B4D8               	btfsc	status,2,c
 16520  003A12  EF0D  F01D         	goto	u11281
 16521  003A16  EF0F  F01D         	goto	u11280
 16522  003A1A                     u11281:
 16523  003A1A  EF19  F01D         	goto	l9977
 16524  003A1E                     u11280:
 16525  003A1E                     
 16526                           ; BSR set to: 1
 16527  003A1E  EE20 F001          	lfsr	2,1
 16528  003A22  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16529  003A24  26D9               	addwf	fsr2l,f,c
 16530  003A26  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16531  003A28  22DA               	addwfc	fsr2h,f,c
 16532  003A2A  0E31               	movlw	49
 16533  003A2C  6EDF               	movwf	indf2,c
 16534  003A2E  EF21  F01D         	goto	l9979
 16535  003A32                     l9977:
 16536                           
 16537                           ; BSR set to: 1
 16538  003A32  EE20 F001          	lfsr	2,1
 16539  003A36  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16540  003A38  26D9               	addwf	fsr2l,f,c
 16541  003A3A  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16542  003A3C  22DA               	addwfc	fsr2h,f,c
 16543  003A3E  0E30               	movlw	48
 16544  003A40  6EDF               	movwf	indf2,c
 16545  003A42                     l9979:
 16546                           
 16547                           ; BSR set to: 1
 16548                           ;main.c: 742:                 if (paredEnfrente)
 16549  003A42  513B               	movf	_paredEnfrente& (0+255),w,b
 16550  003A44  B4D8               	btfsc	status,2,c
 16551  003A46  EF27  F01D         	goto	u11291
 16552  003A4A  EF29  F01D         	goto	u11290
 16553  003A4E                     u11291:
 16554  003A4E  EF31  F01D         	goto	l9983
 16555  003A52                     u11290:
 16556  003A52                     
 16557                           ; BSR set to: 1
 16558                           ;main.c: 743:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '1';
 16559  003A52  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16560  003A56  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16561  003A5A  0E31               	movlw	49
 16562  003A5C  6EDF               	movwf	indf2,c
 16563  003A5E  EF37  F01D         	goto	l9997
 16564  003A62                     l9983:
 16565                           
 16566                           ; BSR set to: 1
 16567                           ;main.c: 745:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '0';
 16568  003A62  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16569  003A66  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16570  003A6A  0E30               	movlw	48
 16571  003A6C  6EDF               	movwf	indf2,c
 16572  003A6E                     l9997:
 16573                           
 16574                           ;main.c: 770:     if (contCaminos > 1)
 16575  003A6E  0E01               	movlw	1
 16576  003A70  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16577  003A72  EF3D  F01D         	goto	u11301
 16578  003A76  EF3F  F01D         	goto	u11300
 16579  003A7A                     u11301:
 16580  003A7A  EF42  F01D         	goto	l10005
 16581  003A7E                     u11300:
 16582  003A7E                     
 16583                           ;main.c: 771:         return 1;
 16584  003A7E  0E01               	movlw	1
 16585  003A80  EF43  F01D         	goto	l496
 16586  003A84                     l10005:
 16587                           
 16588                           ;main.c: 774:         return 0;
 16589  003A84  0E00               	movlw	0
 16590  003A86                     l496:
 16591  003A86  0012               	return		;funcret
 16592  003A88                     __end_of_hayCruce:
 16593                           	opt callstack 0
 16594                           
 16595 ;; *************** function ___flge *****************
 16596 ;; Defined at:
 16597 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;  ff1             4   51[COMRAM] unsigned char 
 16600 ;;  ff2             4   55[COMRAM] unsigned char 
 16601 ;; Auto vars:     Size  Location     Type
 16602 ;;		None
 16603 ;; Return value:  Size  Location     Type
 16604 ;;		None               void
 16605 ;; Registers used:
 16606 ;;		wreg, status,2, status,0
 16607 ;; Tracked objects:
 16608 ;;		On entry : 0/0
 16609 ;;		On exit  : 0/0
 16610 ;;		Unchanged: 0/0
 16611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16612 ;;      Params:         8       0       0       0       0       0       0       0       0
 16613 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16614 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16615 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16616 ;;Total ram usage:       12 bytes
 16617 ;; Hardware stack levels used:    1
 16618 ;; Hardware stack levels required when called:    2
 16619 ;; This function calls:
 16620 ;;		Nothing
 16621 ;; This function is called by:
 16622 ;;		_forzarEspejeo
 16623 ;;		_hayCruce
 16624 ;;		_decidirDireccion
 16625 ;;		_efgtoa
 16626 ;;		_roundf
 16627 ;;		_probarPID
 16628 ;;		_probarCruceT
 16629 ;; This function uses a non-reentrant model
 16630 ;;
 16631                           
 16632                           	psect	text70
 16633  00436E                     __ptext70:
 16634                           	opt callstack 0
 16635  00436E                     ___flge:
 16636                           	opt callstack 23
 16637  00436E  0E00               	movlw	0
 16638  004370  1434               	andwf	___flge@ff1^0,w,c
 16639  004372  6E3C               	movwf	??___flge^0,c
 16640  004374  0E00               	movlw	0
 16641  004376  1435               	andwf	(___flge@ff1+1)^0,w,c
 16642  004378  6E3D               	movwf	(??___flge+1)^0,c
 16643  00437A  0E80               	movlw	128
 16644  00437C  1436               	andwf	(___flge@ff1+2)^0,w,c
 16645  00437E  6E3E               	movwf	(??___flge+2)^0,c
 16646  004380  0E7F               	movlw	127
 16647  004382  1437               	andwf	(___flge@ff1+3)^0,w,c
 16648  004384  6E3F               	movwf	(??___flge+3)^0,c
 16649  004386  503C               	movf	??___flge^0,w,c
 16650  004388  103D               	iorwf	(??___flge+1)^0,w,c
 16651  00438A  103E               	iorwf	(??___flge+2)^0,w,c
 16652  00438C  103F               	iorwf	(??___flge+3)^0,w,c
 16653  00438E  A4D8               	btfss	status,2,c
 16654  004390  EFCC  F021         	goto	u9641
 16655  004394  EFCE  F021         	goto	u9640
 16656  004398                     u9641:
 16657  004398  EFD6  F021         	goto	l8967
 16658  00439C                     u9640:
 16659  00439C  0E00               	movlw	0
 16660  00439E  6E34               	movwf	___flge@ff1^0,c
 16661  0043A0  0E00               	movlw	0
 16662  0043A2  6E35               	movwf	(___flge@ff1+1)^0,c
 16663  0043A4  0E00               	movlw	0
 16664  0043A6  6E36               	movwf	(___flge@ff1+2)^0,c
 16665  0043A8  0E00               	movlw	0
 16666  0043AA  6E37               	movwf	(___flge@ff1+3)^0,c
 16667  0043AC                     l8967:
 16668  0043AC  0E00               	movlw	0
 16669  0043AE  1438               	andwf	___flge@ff2^0,w,c
 16670  0043B0  6E3C               	movwf	??___flge^0,c
 16671  0043B2  0E00               	movlw	0
 16672  0043B4  1439               	andwf	(___flge@ff2+1)^0,w,c
 16673  0043B6  6E3D               	movwf	(??___flge+1)^0,c
 16674  0043B8  0E80               	movlw	128
 16675  0043BA  143A               	andwf	(___flge@ff2+2)^0,w,c
 16676  0043BC  6E3E               	movwf	(??___flge+2)^0,c
 16677  0043BE  0E7F               	movlw	127
 16678  0043C0  143B               	andwf	(___flge@ff2+3)^0,w,c
 16679  0043C2  6E3F               	movwf	(??___flge+3)^0,c
 16680  0043C4  503C               	movf	??___flge^0,w,c
 16681  0043C6  103D               	iorwf	(??___flge+1)^0,w,c
 16682  0043C8  103E               	iorwf	(??___flge+2)^0,w,c
 16683  0043CA  103F               	iorwf	(??___flge+3)^0,w,c
 16684  0043CC  A4D8               	btfss	status,2,c
 16685  0043CE  EFEB  F021         	goto	u9651
 16686  0043D2  EFED  F021         	goto	u9650
 16687  0043D6                     u9651:
 16688  0043D6  EFF5  F021         	goto	l8971
 16689  0043DA                     u9650:
 16690  0043DA  0E00               	movlw	0
 16691  0043DC  6E38               	movwf	___flge@ff2^0,c
 16692  0043DE  0E00               	movlw	0
 16693  0043E0  6E39               	movwf	(___flge@ff2+1)^0,c
 16694  0043E2  0E00               	movlw	0
 16695  0043E4  6E3A               	movwf	(___flge@ff2+2)^0,c
 16696  0043E6  0E00               	movlw	0
 16697  0043E8  6E3B               	movwf	(___flge@ff2+3)^0,c
 16698  0043EA                     l8971:
 16699  0043EA  AE37               	btfss	(___flge@ff1+3)^0,7,c
 16700  0043EC  EFFA  F021         	goto	u9661
 16701  0043F0  EFFC  F021         	goto	u9660
 16702  0043F4                     u9661:
 16703  0043F4  EF05  F022         	goto	l8975
 16704  0043F8                     u9660:
 16705  0043F8  6C34               	negf	___flge@ff1^0,c
 16706  0043FA  1E35               	comf	(___flge@ff1+1)^0,f,c
 16707  0043FC  B0D8               	btfsc	status,0,c
 16708  0043FE  2A35               	incf	(___flge@ff1+1)^0,f,c
 16709  004400  1E36               	comf	(___flge@ff1+2)^0,f,c
 16710  004402  B0D8               	btfsc	status,0,c
 16711  004404  2A36               	incf	(___flge@ff1+2)^0,f,c
 16712  004406  0E80               	movlw	128
 16713  004408  5637               	subfwb	(___flge@ff1+3)^0,f,c
 16714  00440A                     l8975:
 16715  00440A  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 16716  00440C  EF0A  F022         	goto	u9671
 16717  004410  EF0C  F022         	goto	u9670
 16718  004414                     u9671:
 16719  004414  EF15  F022         	goto	l1214
 16720  004418                     u9670:
 16721  004418  6C38               	negf	___flge@ff2^0,c
 16722  00441A  1E39               	comf	(___flge@ff2+1)^0,f,c
 16723  00441C  B0D8               	btfsc	status,0,c
 16724  00441E  2A39               	incf	(___flge@ff2+1)^0,f,c
 16725  004420  1E3A               	comf	(___flge@ff2+2)^0,f,c
 16726  004422  B0D8               	btfsc	status,0,c
 16727  004424  2A3A               	incf	(___flge@ff2+2)^0,f,c
 16728  004426  0E80               	movlw	128
 16729  004428  563B               	subfwb	(___flge@ff2+3)^0,f,c
 16730  00442A                     l1214:
 16731  00442A  0E00               	movlw	0
 16732  00442C  1A34               	xorwf	___flge@ff1^0,f,c
 16733  00442E  0E00               	movlw	0
 16734  004430  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 16735  004432  0E00               	movlw	0
 16736  004434  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 16737  004436  0E80               	movlw	128
 16738  004438  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 16739  00443A  0E00               	movlw	0
 16740  00443C  1A38               	xorwf	___flge@ff2^0,f,c
 16741  00443E  0E00               	movlw	0
 16742  004440  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 16743  004442  0E00               	movlw	0
 16744  004444  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 16745  004446  0E80               	movlw	128
 16746  004448  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 16747  00444A  5038               	movf	___flge@ff2^0,w,c
 16748  00444C  5C34               	subwf	___flge@ff1^0,w,c
 16749  00444E  5039               	movf	(___flge@ff2+1)^0,w,c
 16750  004450  5835               	subwfb	(___flge@ff1+1)^0,w,c
 16751  004452  503A               	movf	(___flge@ff2+2)^0,w,c
 16752  004454  5836               	subwfb	(___flge@ff1+2)^0,w,c
 16753  004456  503B               	movf	(___flge@ff2+3)^0,w,c
 16754  004458  5837               	subwfb	(___flge@ff1+3)^0,w,c
 16755  00445A  B0D8               	btfsc	status,0,c
 16756  00445C  EF32  F022         	goto	u9681
 16757  004460  EF34  F022         	goto	u9680
 16758  004464                     u9681:
 16759  004464  EF37  F022         	goto	l8981
 16760  004468                     u9680:
 16761  004468  90D8               	bcf	status,0,c
 16762  00446A  EF38  F022         	goto	l1219
 16763  00446E                     l8981:
 16764  00446E  80D8               	bsf	status,0,c
 16765  004470                     l1219:
 16766  004470  0012               	return		;funcret
 16767  004472                     __end_of___flge:
 16768                           	opt callstack 0
 16769                           
 16770 ;; *************** function _UART_init *****************
 16771 ;; Defined at:
 16772 ;;		line 13 in file "./UART.h"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;  BAUD            4   31[COMRAM] long 
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;  frecuenciaCr    4    0        long 
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  1    wreg      void 
 16779 ;; Registers used:
 16780 ;;		wreg, status,2, status,0, cstack
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16786 ;;      Params:         4       0       0       0       0       0       0       0       0
 16787 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16789 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16790 ;;Total ram usage:       12 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; Hardware stack levels required when called:    3
 16793 ;; This function calls:
 16794 ;;		___aldiv
 16795 ;; This function is called by:
 16796 ;;		_main
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text71
 16801  004EE6                     __ptext71:
 16802                           	opt callstack 0
 16803  004EE6                     _UART_init:
 16804                           	opt callstack 27
 16805  004EE6                     
 16806                           ;./UART.h: 16:     TRISC6 = 0;
 16807  004EE6  9C94               	bcf	3988,6,c	;volatile
 16808  004EE8                     
 16809                           ;./UART.h: 17:     TRISC7 = 1;
 16810  004EE8  8E94               	bsf	3988,7,c	;volatile
 16811  004EEA                     
 16812                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16813  004EEA  0E10               	movlw	16
 16814  004EEC  6E16               	movwf	___aldiv@divisor^0,c
 16815  004EEE  0E00               	movlw	0
 16816  004EF0  6E17               	movwf	(___aldiv@divisor+1)^0,c
 16817  004EF2  0E00               	movlw	0
 16818  004EF4  6E18               	movwf	(___aldiv@divisor+2)^0,c
 16819  004EF6  0E00               	movlw	0
 16820  004EF8  6E19               	movwf	(___aldiv@divisor+3)^0,c
 16821  004EFA  0E00               	movlw	0
 16822  004EFC  6E12               	movwf	___aldiv@dividend^0,c
 16823  004EFE  0E09               	movlw	9
 16824  004F00  6E13               	movwf	(___aldiv@dividend+1)^0,c
 16825  004F02  0E3D               	movlw	61
 16826  004F04  6E14               	movwf	(___aldiv@dividend+2)^0,c
 16827  004F06  0E00               	movlw	0
 16828  004F08  6E15               	movwf	(___aldiv@dividend+3)^0,c
 16829  004F0A  EC29  F020         	call	___aldiv	;wreg free
 16830  004F0E  C012  F028         	movff	?___aldiv,_UART_init$1825
 16831  004F12  C013  F029         	movff	?___aldiv+1,_UART_init$1825+1
 16832  004F16  C014  F02A         	movff	?___aldiv+2,_UART_init$1825+2
 16833  004F1A  C015  F02B         	movff	?___aldiv+3,_UART_init$1825+3
 16834  004F1E                     
 16835                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16836  004F1E  C028  F012         	movff	_UART_init$1825,___aldiv@dividend
 16837  004F22  C029  F013         	movff	_UART_init$1825+1,___aldiv@dividend+1
 16838  004F26  C02A  F014         	movff	_UART_init$1825+2,___aldiv@dividend+2
 16839  004F2A  C02B  F015         	movff	_UART_init$1825+3,___aldiv@dividend+3
 16840  004F2E  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 16841  004F32  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 16842  004F36  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 16843  004F3A  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 16844  004F3E  EC29  F020         	call	___aldiv	;wreg free
 16845  004F42  0412               	decf	?___aldiv^0,w,c
 16846  004F44  6EAF               	movwf	175,c	;volatile
 16847  004F46                     
 16848                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 16849  004F46  84AC               	bsf	172,2,c	;volatile
 16850  004F48                     
 16851                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 16852  004F48  98AC               	bcf	172,4,c	;volatile
 16853  004F4A                     
 16854                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 16855  004F4A  8EAB               	bsf	171,7,c	;volatile
 16856  004F4C                     
 16857                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 16858  004F4C  9CAC               	bcf	172,6,c	;volatile
 16859  004F4E                     
 16860                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 16861  004F4E  8AAC               	bsf	172,5,c	;volatile
 16862  004F50                     
 16863                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 16864  004F50  9CAB               	bcf	171,6,c	;volatile
 16865  004F52                     
 16866                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 16867  004F52  88AB               	bsf	171,4,c	;volatile
 16868  004F54  0012               	return		;funcret
 16869  004F56                     __end_of_UART_init:
 16870                           	opt callstack 0
 16871                           
 16872 ;; *************** function ___aldiv *****************
 16873 ;; Defined at:
 16874 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 16875 ;; Parameters:    Size  Location     Type
 16876 ;;  dividend        4   17[COMRAM] long 
 16877 ;;  divisor         4   21[COMRAM] long 
 16878 ;; Auto vars:     Size  Location     Type
 16879 ;;  quotient        4   27[COMRAM] long 
 16880 ;;  sign            1   26[COMRAM] unsigned char 
 16881 ;;  counter         1   25[COMRAM] unsigned char 
 16882 ;; Return value:  Size  Location     Type
 16883 ;;                  4   17[COMRAM] long 
 16884 ;; Registers used:
 16885 ;;		wreg, status,2, status,0
 16886 ;; Tracked objects:
 16887 ;;		On entry : 0/0
 16888 ;;		On exit  : 0/0
 16889 ;;		Unchanged: 0/0
 16890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16891 ;;      Params:         8       0       0       0       0       0       0       0       0
 16892 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16893 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16894 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16895 ;;Total ram usage:       14 bytes
 16896 ;; Hardware stack levels used:    1
 16897 ;; Hardware stack levels required when called:    2
 16898 ;; This function calls:
 16899 ;;		Nothing
 16900 ;; This function is called by:
 16901 ;;		_map
 16902 ;;		_UART_init
 16903 ;; This function uses a non-reentrant model
 16904 ;;
 16905                           
 16906                           	psect	text72
 16907  004052                     __ptext72:
 16908                           	opt callstack 0
 16909  004052                     ___aldiv:
 16910                           	opt callstack 24
 16911  004052  0E00               	movlw	0
 16912  004054  6E1B               	movwf	___aldiv@sign^0,c
 16913  004056  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 16914  004058  EF32  F020         	goto	u8200
 16915  00405C  EF30  F020         	goto	u8201
 16916  004060                     u8201:
 16917  004060  EF3C  F020         	goto	l8171
 16918  004064                     u8200:
 16919  004064  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 16920  004066  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 16921  004068  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 16922  00406A  6C16               	negf	___aldiv@divisor^0,c
 16923  00406C  0E00               	movlw	0
 16924  00406E  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 16925  004070  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 16926  004072  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 16927  004074  0E01               	movlw	1
 16928  004076  6E1B               	movwf	___aldiv@sign^0,c
 16929  004078                     l8171:
 16930  004078  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 16931  00407A  EF43  F020         	goto	u8210
 16932  00407E  EF41  F020         	goto	u8211
 16933  004082                     u8211:
 16934  004082  EF4D  F020         	goto	l8177
 16935  004086                     u8210:
 16936  004086  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 16937  004088  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 16938  00408A  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 16939  00408C  6C12               	negf	___aldiv@dividend^0,c
 16940  00408E  0E00               	movlw	0
 16941  004090  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 16942  004092  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 16943  004094  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 16944  004096  0E01               	movlw	1
 16945  004098  1A1B               	xorwf	___aldiv@sign^0,f,c
 16946  00409A                     l8177:
 16947  00409A  0E00               	movlw	0
 16948  00409C  6E1C               	movwf	___aldiv@quotient^0,c
 16949  00409E  0E00               	movlw	0
 16950  0040A0  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 16951  0040A2  0E00               	movlw	0
 16952  0040A4  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 16953  0040A6  0E00               	movlw	0
 16954  0040A8  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 16955  0040AA  5016               	movf	___aldiv@divisor^0,w,c
 16956  0040AC  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 16957  0040AE  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 16958  0040B0  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 16959  0040B2  B4D8               	btfsc	status,2,c
 16960  0040B4  EF5E  F020         	goto	u8221
 16961  0040B8  EF60  F020         	goto	u8220
 16962  0040BC                     u8221:
 16963  0040BC  EF96  F020         	goto	l8199
 16964  0040C0                     u8220:
 16965  0040C0  0E01               	movlw	1
 16966  0040C2  6E1A               	movwf	___aldiv@counter^0,c
 16967  0040C4  EF6A  F020         	goto	l8185
 16968  0040C8                     l8183:
 16969  0040C8  90D8               	bcf	status,0,c
 16970  0040CA  3616               	rlcf	___aldiv@divisor^0,f,c
 16971  0040CC  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 16972  0040CE  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 16973  0040D0  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 16974  0040D2  2A1A               	incf	___aldiv@counter^0,f,c
 16975  0040D4                     l8185:
 16976  0040D4  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 16977  0040D6  EF6F  F020         	goto	u8231
 16978  0040DA  EF71  F020         	goto	u8230
 16979  0040DE                     u8231:
 16980  0040DE  EF64  F020         	goto	l8183
 16981  0040E2                     u8230:
 16982  0040E2                     l8187:
 16983  0040E2  90D8               	bcf	status,0,c
 16984  0040E4  361C               	rlcf	___aldiv@quotient^0,f,c
 16985  0040E6  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 16986  0040E8  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 16987  0040EA  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 16988  0040EC  5016               	movf	___aldiv@divisor^0,w,c
 16989  0040EE  5C12               	subwf	___aldiv@dividend^0,w,c
 16990  0040F0  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16991  0040F2  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 16992  0040F4  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16993  0040F6  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 16994  0040F8  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16995  0040FA  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 16996  0040FC  A0D8               	btfss	status,0,c
 16997  0040FE  EF83  F020         	goto	u8241
 16998  004102  EF85  F020         	goto	u8240
 16999  004106                     u8241:
 17000  004106  EF8E  F020         	goto	l8195
 17001  00410A                     u8240:
 17002  00410A  5016               	movf	___aldiv@divisor^0,w,c
 17003  00410C  5E12               	subwf	___aldiv@dividend^0,f,c
 17004  00410E  5017               	movf	(___aldiv@divisor+1)^0,w,c
 17005  004110  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 17006  004112  5018               	movf	(___aldiv@divisor+2)^0,w,c
 17007  004114  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 17008  004116  5019               	movf	(___aldiv@divisor+3)^0,w,c
 17009  004118  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 17010  00411A  801C               	bsf	___aldiv@quotient^0,0,c
 17011  00411C                     l8195:
 17012  00411C  90D8               	bcf	status,0,c
 17013  00411E  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 17014  004120  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 17015  004122  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 17016  004124  3216               	rrcf	___aldiv@divisor^0,f,c
 17017  004126  2E1A               	decfsz	___aldiv@counter^0,f,c
 17018  004128  EF71  F020         	goto	l8187
 17019  00412C                     l8199:
 17020  00412C  501B               	movf	___aldiv@sign^0,w,c
 17021  00412E  B4D8               	btfsc	status,2,c
 17022  004130  EF9C  F020         	goto	u8251
 17023  004134  EF9E  F020         	goto	u8250
 17024  004138                     u8251:
 17025  004138  EFA6  F020         	goto	l8203
 17026  00413C                     u8250:
 17027  00413C  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 17028  00413E  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 17029  004140  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 17030  004142  6C1C               	negf	___aldiv@quotient^0,c
 17031  004144  0E00               	movlw	0
 17032  004146  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 17033  004148  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 17034  00414A  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 17035  00414C                     l8203:
 17036  00414C  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 17037  004150  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 17038  004154  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 17039  004158  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 17040  00415C  0012               	return		;funcret
 17041  00415E                     __end_of___aldiv:
 17042                           	opt callstack 0
 17043                           
 17044 ;; *************** function _boton *****************
 17045 ;; Defined at:
 17046 ;;		line 106 in file "main.c"
 17047 ;; Parameters:    Size  Location     Type
 17048 ;;		None
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;		None
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  1    wreg      void 
 17053 ;; Registers used:
 17054 ;;		wreg, status,2, status,0, cstack
 17055 ;; Tracked objects:
 17056 ;;		On entry : 0/0
 17057 ;;		On exit  : 0/0
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17060 ;;      Params:         0       0       0       0       0       0       0       0       0
 17061 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17062 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17063 ;;      Totals:         2       0       0       0       0       0       0       0       0
 17064 ;;Total ram usage:        2 bytes
 17065 ;; Hardware stack levels used:    1
 17066 ;; Hardware stack levels required when called:    1
 17067 ;; This function calls:
 17068 ;;		_antiRebote
 17069 ;; This function is called by:
 17070 ;;		Interrupt level 2
 17071 ;; This function uses a non-reentrant model
 17072 ;;
 17073                           
 17074                           	psect	intcode
 17075  000008                     __pintcode:
 17076                           	opt callstack 0
 17077  000008                     _boton:
 17078                           	opt callstack 19
 17079                           
 17080                           ;incstack = 0
 17081  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17082  00000A  ED25  F029         	call	int_func,f	;refresh shadow registers
 17083                           
 17084                           	psect	intcode_body
 17085  00524A                     __pintcode_body:
 17086                           	opt callstack 19
 17087  00524A                     int_func:
 17088                           	opt callstack 19
 17089  00524A  0006               	pop		; remove dummy address from shadow register refresh
 17090  00524C                     
 17091                           ;main.c: 108:     if (INT0IF)
 17092  00524C  A2F2               	btfss	4082,1,c	;volatile
 17093  00524E  EF2B  F029         	goto	i2u794_41
 17094  005252  EF2D  F029         	goto	i2u794_40
 17095  005256                     i2u794_41:
 17096  005256  EF4D  F029         	goto	i2l286
 17097  00525A                     i2u794_40:
 17098  00525A                     
 17099                           ;main.c: 109:     {;main.c: 110:         antiRebote(1);
 17100  00525A  0E01               	movlw	1
 17101  00525C  ECCF  F028         	call	_antiRebote
 17102  005260                     
 17103                           ;main.c: 111:         if (pausa) {
 17104  005260  0101               	movlb	1	; () banked
 17105  005262  51FB               	movf	_pausa& (0+255),w,b
 17106  005264  B4D8               	btfsc	status,2,c
 17107  005266  EF37  F029         	goto	i2u795_41
 17108  00526A  EF39  F029         	goto	i2u795_40
 17109  00526E                     i2u795_41:
 17110  00526E  EF49  F029         	goto	i2l284
 17111  005272                     i2u795_40:
 17112  005272                     
 17113                           ; BSR set to: 1
 17114                           ;main.c: 112:             pausa = 0;
 17115  005272  0E00               	movlw	0
 17116  005274  6FFB               	movwf	_pausa& (0+255),b
 17117  005276                     
 17118                           ; BSR set to: 1
 17119                           ;main.c: 113:             LATD2 = 1;
 17120  005276  848C               	bsf	3980,2,c	;volatile
 17121  005278                     
 17122                           ; BSR set to: 1
 17123                           ;main.c: 114:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 17124  005278  0E10               	movlw	16
 17125  00527A  6E05               	movwf	(??_boton+1)^0,c
 17126  00527C  0E39               	movlw	57
 17127  00527E  6E04               	movwf	??_boton^0,c
 17128  005280  0E0E               	movlw	14
 17129  005282                     i2u1229_47:
 17130  005282  2EE8               	decfsz	wreg,f,c
 17131  005284  D7FE               	bra	i2u1229_47
 17132  005286  2E04               	decfsz	??_boton^0,f,c
 17133  005288  D7FC               	bra	i2u1229_47
 17134  00528A  2E05               	decfsz	(??_boton+1)^0,f,c
 17135  00528C  D7FA               	bra	i2u1229_47
 17136                           
 17137                           ;main.c: 115:         } else {
 17138  00528E  EF4C  F029         	goto	i2l7577
 17139  005292                     i2l284:
 17140                           
 17141                           ; BSR set to: 1
 17142                           ;main.c: 116:             LATD2 = 0;
 17143  005292  948C               	bcf	3980,2,c	;volatile
 17144  005294                     
 17145                           ; BSR set to: 1
 17146                           ;main.c: 117:             pausa = 1;
 17147  005294  0E01               	movlw	1
 17148  005296  6FFB               	movwf	_pausa& (0+255),b
 17149  005298                     i2l7577:
 17150                           
 17151                           ;main.c: 120:         INT0IF = 0;
 17152  005298  92F2               	bcf	4082,1,c	;volatile
 17153  00529A                     i2l286:
 17154  00529A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17155  00529C  0011               	retfie		f
 17156  00529E                     __end_of_boton:
 17157                           	opt callstack 0
 17158                           
 17159 ;; *************** function _antiRebote *****************
 17160 ;; Defined at:
 17161 ;;		line 218 in file "main.c"
 17162 ;; Parameters:    Size  Location     Type
 17163 ;;  pin             1    wreg     unsigned char 
 17164 ;; Auto vars:     Size  Location     Type
 17165 ;;  pin             1    2[COMRAM] unsigned char 
 17166 ;; Return value:  Size  Location     Type
 17167 ;;                  1    wreg      void 
 17168 ;; Registers used:
 17169 ;;		wreg, status,2, status,0
 17170 ;; Tracked objects:
 17171 ;;		On entry : 0/0
 17172 ;;		On exit  : 0/0
 17173 ;;		Unchanged: 0/0
 17174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17175 ;;      Params:         0       0       0       0       0       0       0       0       0
 17176 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17177 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17178 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17179 ;;Total ram usage:        3 bytes
 17180 ;; Hardware stack levels used:    1
 17181 ;; This function calls:
 17182 ;;		Nothing
 17183 ;; This function is called by:
 17184 ;;		_boton
 17185 ;; This function uses a non-reentrant model
 17186 ;;
 17187                           
 17188                           	psect	text74
 17189  00519E                     __ptext74:
 17190                           	opt callstack 0
 17191  00519E                     _antiRebote:
 17192                           	opt callstack 19
 17193                           
 17194                           ;incstack = 0
 17195                           ;antiRebote@pin stored from wreg
 17196  00519E  6E03               	movwf	antiRebote@pin^0,c
 17197  0051A0                     
 17198                           ;main.c: 220:     switch (pin) {
 17199  0051A0  EFE9  F028         	goto	i2l7375
 17200  0051A4                     i2l320:
 17201  0051A4  A081               	btfss	129,0,c	;volatile
 17202  0051A6  EFD7  F028         	goto	i2u774_41
 17203  0051AA  EFD9  F028         	goto	i2u774_40
 17204  0051AE                     i2u774_41:
 17205  0051AE  EFD2  F028         	goto	i2l320
 17206  0051B2                     i2u774_40:
 17207  0051B2                     i2l323:
 17208  0051B2  B081               	btfsc	129,0,c	;volatile
 17209  0051B4  EFDE  F028         	goto	i2u775_41
 17210  0051B8  EFE0  F028         	goto	i2u775_40
 17211  0051BC                     i2u775_41:
 17212  0051BC  EFD9  F028         	goto	i2l323
 17213  0051C0                     i2u775_40:
 17214  0051C0                     
 17215                           ;main.c: 224:             _delay((unsigned long)((100)*(4000000/4000.0)));
 17216  0051C0  0E82               	movlw	130
 17217  0051C2  6E01               	movwf	??_antiRebote^0,c
 17218  0051C4  0EDE               	movlw	222
 17219  0051C6                     i2u1230_47:
 17220  0051C6  2EE8               	decfsz	wreg,f,c
 17221  0051C8  D7FE               	bra	i2u1230_47
 17222  0051CA  2E01               	decfsz	??_antiRebote^0,f,c
 17223  0051CC  D7FC               	bra	i2u1230_47
 17224                           
 17225                           ;main.c: 225:             break;
 17226  0051CE  EFFA  F028         	goto	i2l328
 17227  0051D2                     i2l7375:
 17228  0051D2  5003               	movf	antiRebote@pin^0,w,c
 17229  0051D4  6E01               	movwf	??_antiRebote^0,c
 17230  0051D6  6A02               	clrf	(??_antiRebote+1)^0,c
 17231                           
 17232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17233                           ; Switch size 1, requested type "simple"
 17234                           ; Number of cases is 1, Range of values is 0 to 0
 17235                           ; switch strategies available:
 17236                           ; Name         Instructions Cycles
 17237                           ; simple_byte            4     3 (average)
 17238                           ;	Chosen strategy is simple_byte
 17239  0051D8  5002               	movf	(??_antiRebote+1)^0,w,c
 17240  0051DA  0A00               	xorlw	0	; case 0
 17241  0051DC  B4D8               	btfsc	status,2,c
 17242  0051DE  EFF3  F028         	goto	i2l11283
 17243  0051E2  EFFA  F028         	goto	i2l328
 17244  0051E6                     i2l11283:
 17245                           
 17246                           ; Switch size 1, requested type "simple"
 17247                           ; Number of cases is 1, Range of values is 1 to 1
 17248                           ; switch strategies available:
 17249                           ; Name         Instructions Cycles
 17250                           ; simple_byte            4     3 (average)
 17251                           ;	Chosen strategy is simple_byte
 17252  0051E6  5001               	movf	??_antiRebote^0,w,c
 17253  0051E8  0A01               	xorlw	1	; case 1
 17254  0051EA  B4D8               	btfsc	status,2,c
 17255  0051EC  EFD2  F028         	goto	i2l320
 17256  0051F0  EFFA  F028         	goto	i2l328
 17257  0051F4                     i2l328:
 17258  0051F4  0012               	return		;funcret
 17259  0051F6                     __end_of_antiRebote:
 17260                           	opt callstack 0
 17261                           
 17262                           	psect	rparam
 17263  0000                     
 17264                           	psect	temp
 17265  00005A                     btemp:
 17266                           	opt callstack 0
 17267  00005A                     	ds	1
 17268  0000                     int$flags	set	btemp
 17269  0000                     wtemp8	set	btemp+1
 17270  0000                     ttemp5	set	btemp+1
 17271  0000                     ttemp6	set	btemp+4
 17272  0000                     ttemp7	set	btemp+8
 17273                           tosu	equ	0xFFF
 17274                           tosh	equ	0xFFE
 17275                           tosl	equ	0xFFD
 17276                           stkptr	equ	0xFFC
 17277                           pclatu	equ	0xFFB
 17278                           pclath	equ	0xFFA
 17279                           pcl	equ	0xFF9
 17280                           tblptru	equ	0xFF8
 17281                           tblptrh	equ	0xFF7
 17282                           tblptrl	equ	0xFF6
 17283                           tablat	equ	0xFF5
 17284                           prodh	equ	0xFF4
 17285                           prodl	equ	0xFF3
 17286                           indf0	equ	0xFEF
 17287                           postinc0	equ	0xFEE
 17288                           postdec0	equ	0xFED
 17289                           preinc0	equ	0xFEC
 17290                           plusw0	equ	0xFEB
 17291                           fsr0h	equ	0xFEA
 17292                           fsr0l	equ	0xFE9
 17293                           wreg	equ	0xFE8
 17294                           indf1	equ	0xFE7
 17295                           postinc1	equ	0xFE6
 17296                           postdec1	equ	0xFE5
 17297                           preinc1	equ	0xFE4
 17298                           plusw1	equ	0xFE3
 17299                           fsr1h	equ	0xFE2
 17300                           fsr1l	equ	0xFE1
 17301                           bsr	equ	0xFE0
 17302                           indf2	equ	0xFDF
 17303                           postinc2	equ	0xFDE
 17304                           postdec2	equ	0xFDD
 17305                           preinc2	equ	0xFDC
 17306                           plusw2	equ	0xFDB
 17307                           fsr2h	equ	0xFDA
 17308                           fsr2l	equ	0xFD9
 17309                           status	equ	0xFD8


Data Sizes:
    Strings     643
    Constant    4
    Data        5
    BSS         436
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    159     160
    BANK1           256     20     255
    BANK2           256      5     205
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1471_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 49
		 -> STR_22(CODE[47]), STR_21(CODE[49]), STR_20(CODE[48]), STR_19(CODE[34]), 
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    probarMapeoDireccionCruces@caminoFinal	PTR unsigned char  size(2) Largest target is 20
		 -> comportamientoBasico@caminoFinal(BANK1[20]), 

    probarMapeoDireccionCruces@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    probarMapeoDireccionCruces@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    probarMapeoDireccionCruces@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    probarMapeoDireccionCruces@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    probarMapeoDireccionCruces@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    probarMapeoDireccionCruces@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    decidirDireccion@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    decidirDireccion@caminoFinal	PTR unsigned char  size(2) Largest target is 20
		 -> comportamientoBasico@caminoFinal(BANK1[20]), 

    decidirDireccion@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(BANK1[1]), 

    moverCarrito@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 56
		 -> STR_18(CODE[32]), STR_17(CODE[31]), STR_16(CODE[33]), STR_15(CODE[32]), 
		 -> STR_14(CODE[23]), STR_13(CODE[34]), STR_12(CODE[56]), STR_10(CODE[6]), 
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), 
		 -> STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _comportamientoBasico->_decidirDireccion
    _comportamientoBasico->_regresarAlCruce
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    _forzarEspejeo->_forzarEspejeoDerecha
    _forzarEspejeo->_forzarEspejeoIzquierda
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    _map->___aldiv
    ___xxtofl->___lwdiv
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->_roundf
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _seLlegoAlDestino->_dameLecturaAdc
    _mostrarDireccionElegida->_UART_printf
    _UART_printf->_UART_write
    _hayCruce->___flge
    ___flge->___flmul
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _main->_comportamientoBasico
    _main->_visualizarPasosRealizados
    _visualizarPasosRealizados->_sprintf
    _comportamientoBasico->_decidirDireccion
    _regresarAlCruce->_PID
    _PID->_pwmDuty
    _probarMapeoDireccionCruces->_sprintf
    _velocidadEstandar->_pwmDuty
    _leerSensores->___fldiv
    _decidirDireccion->_sprintf
    _velocidadBaja->_pwmDuty
    _pwmDuty->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _comportamientoBasico->_decidirDireccion

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_comportamientoBasico

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  410558
                                              2 BANK2      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   61863
                                            155 BANK0      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  333584
                                            158 BANK0      1     1      0
                                              0 BANK2      2     2      0
                                _PID
                        _UART_printf
                   _decidirDireccion
                     _forzarParoAuto
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
         _probarMapeoDireccionCruces
                    _regresarAlCruce
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64063
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _probarMapeoDireccionCruces                          17     2     15   62741
                                            155 BANK0      2     2      0
                                              0 BANK1     15     0     15
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         7     3      4   29092
                                             40 BANK0      7     3      4
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               1     1      0   12461
                                             83 COMRAM     1     1      0
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 1     1      0   12461
                                             83 COMRAM     1     1      0
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     341
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    24     4     20   89240
                                             83 COMRAM     1     1      0
                                            155 BANK0      3     3      0
                                              0 BANK1     20     0     20
                        _UART_printf
                             ___flge
                           _hayCruce
            _mostrarDireccionElegida
                   _seLlegoAlDestino
                            _sprintf
                      _velocidadBaja
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   60026
                                            135 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58070
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   57522
                                             97 BANK0     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38677
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6763
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1665
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     562
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _mostrarDireccionElegida                              3     3      0    1747
                                              8 COMRAM     3     3      0
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1716
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _hayCruce                                             4     1      3    4709
                                             63 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _decidirDireccion
       _UART_printf
         _UART_write
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _hayCruce
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       _mostrarDireccionElegida
         _UART_printf
           _UART_write
       _seLlegoAlDestino
         _dameLecturaAdc
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _velocidadBaja
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _forzarParoAuto
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _probarMapeoDireccionCruces
       _UART_printf
         _UART_write
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      5      CD       9       80.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      20        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Sep 25 19:08:44 2020

                                    ___fldiv@aexp 006C                                      ___fldiv@bexp 006B  
                                    ___fldiv@sign 0064                                      ___awdiv@sign 000B  
                                  ?_configurarAdc 0001                               ___wmul@multiplicand 0008  
                                     __CFG_BORV$3 000000               __size_of_probarMapeoDireccionCruces 00FA  
                                    __CFG_CP0$OFF 000000                                      __CFG_CP1$OFF 000000  
                                    __CFG_CP2$OFF 000000                                      __CFG_CP3$OFF 000000  
                 comportamientoBasico@caminoFinal 01C4                                               l221 583E  
                                             l141 4E70                                               l206 4050  
                                             l230 5848                                               l160 5390  
                                             l209 4F54                                               l233 5526  
                                             l218 5830                                               l402 5828  
                                             l154 5344                                               l227 50E6  
                                             l235 5534                                               l411 57EE  
                                             l331 542C                                               l315 4AEA  
                                             l236 5548                                               l180 3F20  
                                             l420 54BC                                               l149 35B2  
                                             l405 57AC                                               l157 5350  
                                             l190 3F50                                               l414 580E  
                                             l158 538E                                               l159 535A  
                                             l512 53E0                                               l408 57CE  
                                             l185 3FD2                                               l177 3F10  
                                             l417 5474                                               l425 55CC  
                                             l434 41E6                                               l442 4CE0  
                                             l515 5716                                               l187 3F40  
                                             l179 3F1E                                               l516 5718  
                                             l196 3F70                                               l436 4210  
                                             l189 3F4E                                               l437 421C  
                                             l429 4166                                               l445 4CFC  
                                             l526 4DF6                                               l198 3F7E  
                                             l438 4264                                               l446 4D22  
                                             l199 3F80                                               l447 4D2E  
                                             l800 2D52                                               l632 1304  
                                             l448 4D74                                               l457 4B96  
                                             l802 2D5A                                               l538 0D44  
                                             l378 255E                                               l715 573E  
                                             l395 2562                                               l820 2F8E  
                                             l660 3D5A                                               l718 5764  
                                             l647 117E                                               l727 4668  
                                             l496 3A86                                               l568 0DE4  
                                             l672 3D8A                                               l657 1306  
                                             l585 0E68                                               l665 3D7A  
                                             l666 3D6A                                               l693 31E0  
                                             l782 4912                                               l838 0BCA  
                                             l856 0402                                               l928 18AE  
                                             l960 4FAE                                               l785 4954  
                                             l945 5020                                               l961 4FBE  
                                             l794 519C                                               l882 079E  
                                             l946 5028                                               l787 498E  
                                             l939 17F4                                               l949 578A  
                                    __CFG_CPB$OFF 000000                                               _PR2 000FCB  
                                             _PID 2F90                                      __CFG_CPD$OFF 000000  
                                    __CFG_BOR$OFF 000000                                               _abs 55CE  
                                             _ida 01FA                                               _pad 48CE  
                                             _map 4DF8                                      ___awmod@sign 000B  
                           _numMovimientosTotales 0141                                               wreg 000FE8  
                                    ___flmul@aexp 0028                                      ___flmul@bexp 002D  
                        _DISTANCIA_PRIORIDAD_BAJA 010C                          _DISTANCIA_PRIORIDAD_ALTA 0114  
                                    ___flmul@sign 0027                                      ___flmul@temp 0032  
                                    ___flmul@prod 002E                       __size_of_limpiarMovimientos 0050  
                                    __CFG_LVP$OFF 000000                                              ?_PID 0001  
                                    ___fltol@exp1 007B                                      __CFG_WDT$OFF 000000  
                                            ?_abs 0018                                              l1028 415C  
                                            l1214 442A                                              l1063 3C0E  
                                            l1223 567C                                              l1208 4C40  
                                            l1219 4470                                              l1076 3EEE  
                                            l1180 48CC                                              l1246 436C  
                                            l1503 1C88                                              l1504 1C76  
                                            l1440 4EDC                                              l1193 4A3E  
                                            l1531 2CB0                                              l1611 36A2  
                                            l1604 360A                                              l1533 2B10  
                                            l1542 2B56                                              l1630 456E  
                                            l1519 5502                                              l1607 3766  
                                            l1447 4EE4                                              l1544 2BCE  
                                            l1536 2AD4                                              l1545 2BBC  
                                            l1714 4808                                              l1722 558C  
                                            l1570 202A                                              l1618 36FE  
                                            l1635 5604                                              l1563 1E34  
                                            l1732 5850                                              l1580 215A  
                                            l1572 20A2                                              l1740 2914  
                                            l1573 2090                                              l1477 1A9E  
                                            l1638 560C                                              l1494 1BB8  
                                            l1486 1D6E                                              l1478 1A8C  
                                            l1567 2198                                              l1479 1A52  
                                            l1753 5142                                              l1729 52EE  
                                            l1666 38EE                                              l1675 33F6  
                                            l1763 473E                                              l1685 56B4  
                                            l1693 5340                                              l1669 38F6  
                                            l1773 5080                                              l1678 333A  
                                            l1759 56EA                                              l1778 5088  
                                            l1699 5644                                              ?_map 0020  
                                            ?_pad 0016                                              l8201 413C  
                                            l8121 4764                                              l9001 42BC  
                                            l8203 414C                                              l8123 476E  
                                            l8131 554A                                              l8211 18CA  
                                            l9003 42BE                                              l8125 478C  
                                            l8117 4740                                              l8133 5556  
                                            l8141 56C2                                              l8301 1A7E  
                                            l8221 18FE                                              l8213 18CC  
                                            l9005 42CE                                              l9101 34FE  
                                            l8127 47C2                                              l8119 4752  
                                            l8135 5568                                              l8143 56C6  
                                            l8303 1A80                                              l8231 1930  
                                            l8215 18DC                                              l8223 1906  
                                            l8207 18B0                                              l9031 434C  
                                            l9015 42F8                                              l9007 42D2  
                                            l9103 3542                                              l8137 556C  
                                            l8145 56DE                                              l9121 5174  
                                            l9113 5144                                              l8401 1D4E  
                                            l8321 1B08                                              l8313 1AD0  
                                            l8305 1A8A                                              l8241 1966  
                                            l8233 1936                                              l8225 1916  
                                            l8217 18EC                                              l8209 18BC  
                                            l9033 435C                                              l9025 4320  
                                            l9017 4302                                              l9009 42E0  
                                            l9201 0070                                              l9041 35D4  
                                            l8161 4F8E                                              l8153 4F56  
                                            l8171 4078                                              l8163 4052  
                                            l8139 56B6                                              l9123 5178  
                                            l9115 5158                                              l9131 2CFA  
                                            l8403 1D5C                                              l8323 1B0C  
                                            l8315 1AE0                                              l8307 1AAC  
                                            l8331 1B2C                                              l8251 19A2  
                                            l8243 1976                                              l8235 1944  
                                            l8227 191C                                              l8219 18FC  
                                            l9027 432C                                              l9019 430C  
                                            l9211 00B6                                              l9203 0078  
                                            l9051 364C                                              l9043 361A  
                                            l8155 4F66                                              l9107 3586  
                                            l8181 40C0                                              l8173 4086  
                                            l8165 4056                                              l8421 490A  
                                            l8413 48CE                                              l9117 5164  
                                            l9141 2D62                                              l9133 2D1A  
                                            l8405 1D5E                                              l8333 1B52  
                                            l8341 1BA8                                              l8325 1B1A  
                                            l8317 1AEE                                              l8309 1ABC  
                                            l8261 19C0                                              l8253 19B0  
                                            l8245 1978                                              l8237 1946  
                                            l8229 192E                                              l9029 433C  
                                            l8149 560E                                              l9301 0490  
                                            l9221 00F2                                              l9213 00BE  
                                            l9205 008A                                              l9061 36D4  
                                            l9053 3658                                              l9045 3630  
                                            l9037 35B6                                              l8157 4F74  
                                            l8191 410A                                              l8183 40C8  
                                            l8175 4096                                              l8167 4064  
                                            l8503 567E                                              l8431 4976  
                                            l8423 491E                                              l8415 48DC  
                                            l9119 5170                                              l9151 2D98  
                                            l9143 2D74                                              l9135 2D2A  
                                            l9127 2CB2                                              l8351 1BFC  
                                            l8343 1BCE                                              l8335 1B86  
                                            l8327 1B1C                                              l8319 1AFC  
                                            l8271 19D4                                              l8263 19C4  
                                            l8255 19B4                                              l8239 1956  
                                            l8247 1980                                              l9311 04CE  
                                            l9303 0494                                              l9231 016E  
                                            l9215 00C2                                              l9207 0098  
                                            l9071 3712                                              l9063 36E0  
                                            l9055 368A                                              l9039 35C6  
                                            l8159 4F84                                              l8193 411A  
                                            l8185 40D4                                              l8177 409A  
                                            l8169 4074                                              l8425 4932  
                                            l8417 48F0                                              l8521 3ABE  
                                            l8513 3A88                                              l9153 2D9E  
                                            l9161 2E90                                              l9145 2D82  
                                            l9137 2D2C                                              l9129 2CD2  
                                            l8601 2944                                              l8361 1C26  
                                            l8353 1C0A                                              l8345 1BDE  
                                            l8337 1B88                                              l8329 1B26  
                                            l8281 19E8                                              l8273 19D8  
                                            l8265 19C8                                              l8257 19B8  
                                            l8249 1990                                              l8441 4492  
                                            l9401 08FE                                              l9321 051C  
                                            l9313 04D2                                              l9305 049C  
                                            l9233 0178                                              l9225 0128  
                                            l9217 00C6                                              l9209 00AA  
                                            l9073 3736                                              l9065 36EE  
                                            l9057 368C                                              l9049 3644  
                                            l8409 4DF8                                              l8195 411C  
                                            l8187 40E2                                              l8179 40AA  
                                            l8507 5766                                              l9091 533A  
                                            l9083 52F0                                              l8427 4936  
                                            l8419 48FE                                              l8531 3B1A  
                                            l8523 3ACC                                              l8515 3A8C  
                                            l8435 55CE                                              l9163 2EAA  
                                            l9171 2F0A                                              l9155 2E20  
                                            l9147 2D88                                              l9139 2D46  
                                            l8611 297E                                              l8603 2954  
                                            l8371 1C58                                              l8363 1C36  
                                            l8355 1C0C                                              l8339 1B98  
                                            l8291 1A3A                                              l8283 19EC  
                                            l8275 19DC                                              l8267 19CC  
                                            l8259 19BC                                              l8443 44D0  
                                            l8451 4510                                              l9411 09B4  
                                            l9403 0956                                              l9331 05B4  
                                            l9315 04E4                                              l9323 0524  
                                            l9307 04AE                                              l9243 01FC  
                                            l9227 013A                                              l9219 00CC  
                                            l9075 3746                                              l9067 370C  
                                            l9059 3698                                              l8197 4126  
                                            l8189 40EC                                              l8509 5782  
                                            l9085 52F4                                              l8429 4962  
                                            l8541 3B84                                              l8533 3B22  
                                            l8525 3AEC                                              l8517 3A9A  
                                            l8437 55E8                                              l9181 2F4E  
                                            l9173 2F1C                                              l9165 2EC8  
                                            l9157 2E26                                              l9149 2D90  
                                            l8701 2BEA                                              l8621 29AA  
                                            l8613 2984                                              l8605 2964  
                                            l8381 1CB2                                              l8373 1C6E  
                                            l8357 1C1A                                              l8349 1BF2  
                                            l8365 1C38                                              l8293 1A4A  
                                            l8277 19E0                                              l8269 19D0  
                                            l8285 19F0                                              l8453 4522  
                                            l8445 44F8                                              l8461 50E8  
                                            l9421 0A04                                              l9413 09D0  
                                            l9405 098A                                              l9341 0698  
                                            l9333 060C                                              l9325 052C  
                                            l9317 04F2                                              l9309 04C0  
                                            l9261 0296                                              l9245 020E  
                                            l9229 0156                                              l9237 01A0  
                                            l9077 3754                                              l9069 370E  
                                            l8199 412C                                              l9087 5308  
                                            l9511 383A                                              l9503 37E0  
                                            l8551 3BCE                                              l8543 3BA4  
                                            l8535 3B36                                              l8527 3AF0  
                                            l8519 3ABA                                              l9183 2F56  
                                            l9175 2F2A                                              l9167 2EE2  
                                            l9159 2E2C                                              l8711 2C56  
                                            l8703 2BF8                                              l8631 29E4  
                                            l8623 29BA                                              l8615 298A  
                                            l8607 2966                                              l8391 1D2E  
                                            l8383 1CEC                                              l8359 1C22  
                                            l8367 1C46                                              l8295 1A60  
                                            l8287 19F4                                              l8279 19E4  
                                            l8447 4504                                              l8439 4472  
                                            l8463 50F8                                              l8471 5072  
                                            l9431 0A46                                              l9423 0A14  
                                            l9415 09E2                                              l9407 0992  
                                            l9351 0732                                              l9343 06CA  
                                            l9335 0640                                              l9327 053C  
                                            l9319 050A                                              l9271 0366  
                                            l9263 02CA                                              l9247 022A  
                                            l9239 01C6                                              l9255 0246  
                                            l9191 001C                                              l9079 3756  
                                            l9095 33F8                                              l9089 5336  
                                            l9521 38C0                                              l9505 37F6  
                                            l8553 3BEE                                              l8545 3BA6  
                                            l8537 3B44                                              l8529 3AFC  
                                            l8561 3D9E                                              l9177 2F30  
                                            l9185 2F66                                              l9169 2EFC  
                                            l8721 2CA4                                              l8713 2C70  
                                            l8705 2C22                                              l8633 29FA  
                                            l8625 29CA                                              l8617 2998  
                                            l8609 296E                                              l8801 1F5C  
                                            l8393 1D32                                              l8377 1C98  
                                            l8385 1CEE                                              l8369 1C4A  
                                            l8297 1A6C                                              l8289 1A1E  
                                            l8457 4566                                              l8481 326E  
                                            l8465 502A                                              l9441 0A76  
                                            l9433 0A54                                              l9425 0A26  
                                            l9417 09F0                                              l9361 07BA  
                                            l9409 0996                                              l9353 0766  
                                            l9345 06E0                                              l9329 0550  
                                            l9337 0646                                              l9281 03D2  
                                            l9265 02D0                                              l9273 0398  
                                            l9257 0260                                              l9193 002C  
                                            l9601 14A2                                              l9097 3458  
                                            l9523 38D2                                              l9515 3870  
                                            l9507 37FE                                              l8547 3BB8  
                                            l8539 3B56                                              l8571 3E0E  
                                            l8563 3DBE                                              l9179 2F42  
                                            l8723 2CA6                                              l8715 2C8C  
                                            l8707 2C26                                              l8651 2A4E  
                                            l8635 2A0A                                              l8643 2A2A  
                                            l8627 29CC                                              l8619 299A  
                                            l8811 1FF2                                              l8803 1F68  
                                            l8731 1D70                                              l8395 1D40  
                                            l8387 1CFE                                              l8379 1CA4  
                                            l8299 1A70                                              l8483 327C  
                                            l8491 335E                                              l8475 31E2  
                                            l9451 0AD8                                              l9443 0A9C  
                                            l9435 0A5C                                              l9427 0A2E  
                                            l9419 0A00                                              l9371 0860  
                                            l9363 081E                                              l9355 0776  
                                            l9347 0712                                              l9339 0664  
                                            l9283 03DA                                              l9275 03A8  
                                            l9267 032A                                              l9195 003A  
                                            l9531 4694                                              l9611 156C  
                                            l9603 14D4                                              l9099 3478  
                                            l9509 3806                                              l8549 3BBE  
                                            l8581 3E86                                              l8573 3E16  
                                            l8565 3DC2                                              l8557 3D8C  
                                            l8901 48A6                                              l8717 2C90  
                                            l8709 2C40                                              l8661 2AA0  
                                            l8653 2A68                                              l8645 2A3A  
                                            l8637 2A12                                              l8629 29D4  
                                            l8821 2048                                              l8813 2010  
                                            l8805 1F84                                              l8741 1DAC  
                                            l8733 1D7C                                              l8397 1D46  
                                            l8389 1D0E                                              l8493 339A  
                                            l8477 3202                                              l8469 5060  
                                            l9461 0B1E                                              l9453 0AF2  
                                            l9445 0AB8                                              l9437 0A64  
                                            l9429 0A3E                                              l9381 089E  
                                            l9365 082C                                              l9373 0868  
                                            l9357 078A                                              l9349 0722  
                                            l9293 0422                                              l9285 03F4  
                                            l9277 03AC                                              l9269 035E  
                                            l9197 0042                                              l9189 0012  
                                            l9541 46E2                                              l9621 1618  
                                            l9605 14E4                                              l9701 57B6  
                                            l9519 38AE                                              l8583 3E98  
                                            l8575 3E2A                                              l8567 3DD0  
                                            l8559 3D90                                              l8903 48AC  
                                            l8911 4990                                              l8719 2C9E  
                                            l8671 2AFC                                              l8663 2AB0  
                                            l8655 2A78                                              l8647 2A3A  
                                            l8639 2A16                                              l8831 20B2  
                                            l8823 204C                                              l8815 201A  
                                            l8807 1FAE                                              l8751 1DDE  
                                            l8743 1DBC                                              l8735 1D8A  
                                            l8399 1D48                                              l8495 33AE  
                                            l8487 32EE                                              l8479 325A  
                                            l9471 0B6E                                              l9463 0B2E  
                                            l9455 0AF8                                              l9447 0AC0  
                                            l9439 0A70                                              l9391 08CA  
                                            l9383 08A4                                              l9375 087C  
                                            l9367 0840                                              l9359 0796  
                                            l9295 0436                                              l9279 03BE  
                                            l9287 040E                                              l9199 0066  
                                            l9543 46F4                                              l9535 46A0  
                                            l9631 1686                                              l9615 1588  
                                            l9607 1516                                              l9551 571A  
                                            l9711 5448                                              l9703 542E  
                                            l8577 3E38                                              l8585 3E9E  
                                            l8569 3DF0                                              l8905 48BC  
                                            l8921 49BC                                              l8913 4994  
                                            l8681 2B3C                                              l8673 2AFE  
                                            l8665 2AC4                                              l8657 2A88  
                                            l8593 2916                                              l8841 2114  
                                            l8833 20BE                                              l8825 205A  
                                            l8817 2028                                              l8809 1FE4  
                                            l8761 1E1E                                              l8753 1DEC  
                                            l8745 1DC2                                              l8737 1D8C  
                                            l8497 33D6                                              l8489 332A  
                                            l9481 0BAA                                              l9473 0B80  
                                            l9465 0B34                                              l9457 0B0A  
                                            l9449 0AC6                                              l9385 08B0  
                                            l9377 088A                                              l9393 08D0  
                                            l9369 0852                                              l9297 0452  
                                            l9545 471C                                              l9537 46AE  
                                            l9529 466A                                              l9633 16B6  
                                            l9625 1650                                              l9617 15AC  
                                            l9609 153A                                              l9801 4ECE  
                                            l9553 5810                                              l9561 57D0  
                                            l9721 5470                                              l9713 544C  
                                            l9705 5432                                              l9491 3780  
                                            l8587 3EAE                                              l8579 3E66  
                                            l8907 48C4                                              l8931 49F4  
                                            l8923 49C4                                              l8915 49A2  
                                            l8691 2B78                                              l8683 2B46  
                                            l8675 2B0E                                              l8667 2AD2  
                                            l8659 2A98                                              l8595 2924  
                                            l8851 217C                                              l8843 2128  
                                            l8835 20CC                                              l8827 2088  
                                            l8819 203A                                              l8771 1E68  
                                            l8763 1E24                                              l8755 1DEE  
                                            l8747 1DD2                                              l8739 1D9C  
                                            l8499 33E6                                              l9475 0B8C  
                                            l9467 0B3A                                              l9459 0B16  
                                            l9395 08E2                                              l9387 08C0  
                                            l9379 089A                                              l9299 0488  
                                            l9539 46C6                                              l9643 177E  
                                            l9627 1662                                              l9619 15D0  
                                            l9571 132C                                              l9803 4ED0  
                                            l9811 3F04                                              l9555 5818  
                                            l9731 5490                                              l9723 5476  
                                            l9563 57D8                                              l9715 545A  
                                            l9707 5436                                              l9549 582C  
                                            l9493 3784                                              l8589 3ECE  
                                            l8941 4A2E                                              l8933 4A0A  
                                            l8925 49D6                                              l8917 49AA  
                                            l8693 2B86                                              l8685 2B54  
                                            l8677 2B20                                              l8669 2ADE  
                                            l8597 2932                                              l8853 217E  
                                            l8845 2142                                              l8837 20F6  
                                            l8781 1EB8                                              l8773 1E74  
                                            l8765 1E44                                              l8757 1DFE  
                                            l8749 1DD8                                              l8861 54BE  
                                            l9477 0B94                                              l9397 08F4  
                                            l9389 08C4                                              l9645 1790  
                                            l9653 1808                                              l9629 1678  
                                            l9637 16E2                                              l9581 137C  
                                            l9573 133A                                              l9805 4ED6  
                                            l9813 3F0A                                              l9565 57F0  
                                            l9557 578C                                              l9741 54B8  
                                            l9733 5494                                              l9725 547A  
                                            l9717 545E                                              l9709 5444  
                                            l9901 3192                                              l9495 37A0  
                                            l9487 3768                                              l8871 481C  
                                            l8943 4A36                                              l8935 4A12  
                                            l8927 49DE                                              l8919 49AE  
                                            l8695 2BB4                                              l8679 2B36  
                                            l8687 2B66                                              l8599 2934  
                                            l8951 4BD6                                              l8847 215E  
                                            l8855 2184                                              l8839 20FA  
                                            l8791 1EFA                                              l8783 1EC4  
                                            l8775 1E7E                                              l8767 1E54  
                                            l8759 1E0E                                              l8863 54CE  
                                            l9479 0BA4                                              l9399 08F8  
                                            l9671 189C                                              l9655 182C  
                                            l9663 185C                                              l9647 17C4  
                                            l9639 1710                                              l9591 1416  
                                            l9583 138A                                              l9575 134C  
                                            l9831 402E                                              l9815 3F2E  
                                            l9823 3FA0                                              l9807 3EF2  
                                            l9567 57F8                                              l9559 5794  
                                            l9735 54A2                                              l9727 547E  
                                            l9719 5462                                              l9751 261E  
                                            l9743 2564                                              l9911 31CE  
                                            l9903 31A2                                              l9921 391A  
                                            l9681 50B2                                              l9497 37D6  
                                            l9489 377C                                              l8881 4842  
                                            l8873 4824                                              l8937 4A18  
                                            l8929 49E6                                              l8689 2B74  
                                            l8953 4C04                                              l8857 2188  
                                            l8849 216E                                              l8793 1F06  
                                            l8785 1ED0                                              l8777 1E94  
                                            l9665 186A                                              l9657 183A  
                                            l9585 13AE                                              l9577 1350  
                                            l9569 1308                                              l9841 529E  
                                            l9833 4040                                              l9825 3FE2  
                                            l9817 3F5E                                              l9809 3F02  
                                            l9737 54A6                                              l9729 548C  
                                            l9913 558E                                              l9761 2766  
                                            l9753 2642                                              l9745 2584  
                                            l9905 31AA                                              l8971 43EA  
                                            l8963 436E                                              l9931 398C  
                                            l9923 394C                                              l9683 50B6  
                                            l9691 5522                                              l9499 37DA  
                                            l8891 487A                                              l8883 484A  
                                            l8875 4828                                              l8867 480A  
                                            l8939 4A1E                                              l8699 2BDE  
                                            l8955 4C14                                              l8947 4B98  
                                            l8795 1F16                                              l8787 1EDE  
                                            l8779 1EA0                                              l9659 184E  
                                            l9595 145E                                              l9587 13E8  
                                            l9579 1374                                              l9843 52B0  
                                            l9827 3FF4                                              l9819 3F8E  
                                            l9739 54AA                                              l9915 55C0  
                                            l9771 28E0                                              l9763 27D2  
                                            l9755 2660                                              l9747 25CE  
                                            l9907 31B6                                              l8981 446E  
                                            l8973 43F8                                              l8965 439C  
                                            l9933 398E                                              l9925 3952  
                                            l9677 508A                                              l9693 5524  
                                            l9685 5506                                              l8893 4880  
                                            l8885 485C                                              l8877 4836  
                                            l8869 480E                                              l8957 4C38  
                                            l8949 4BC6                                              l8797 1F30  
                                            l8789 1EEA                                              l9589 1408  
                                            l9597 1470                                              l9669 1878  
                                            l9781 4FD6                                              l9845 52B8  
                                            l9829 402E                                              l9917 55C8  
                                            l9773 2904                                              l9765 2804  
                                            l9749 25E2                                              l9909 31BE  
                                            l9853 4CDC                                              l8975 440A  
                                            l8967 43AC                                              l9951 39EA  
                                            l9935 39C0                                              l9927 3954  
                                            l9919 38F8                                              l9679 508E  
                                            l9695 5536                                              l9687 550E  
                                            l8895 4896                                              l8887 4864  
                                            l8879 483E                                              l8959 4C3E  
                                            l8799 1F40                                              l9599 1492  
                                            l9783 5004                                              l9847 52C0  
                                            l9791 4E94                                              l9767 2870  
                                            l9759 2698                                              l9855 4CE8  
                                            STR_1 7F62                                              STR_2 7F49  
                                            l8977 4418                                              l8969 43DA  
                                            l9953 39FE                                              l9937 39C6  
                                            l9929 3986                                              l9689 5510  
                                            l8897 489E                                              l8889 486C  
                                            l8985 5646                                              l8993 4266  
                                            l9777 4FC0                                              l9849 52DC  
                                            l9873 5740                                              l9793 4E9C  
                                            l9785 4E72                                              l9769 28A4  
                                            l9881 309C                                              l9857 4D04  
                                            STR_3 7E43                                              STR_4 7FA4  
                                            l8979 4468                                              l9939 39C8  
                                            l8899 48A0                                              l8987 565C  
                                            l8995 427E                                              l9779 4FC8  
                                            l9795 4EAA                                              l9787 4E7A  
                                            l9699 57AE                                              l9891 3136  
                                            l9883 30CC                                              l9875 2F90  
                                            l9859 4D1A                                              l9867 4D3A  
                                            STR_5 7F91                                              STR_6 7FB6  
                                            l9981 3A52                                              l9973 3A0E  
                                            l9949 39D8                                              l8989 566C  
                                            l9797 4EB0                                              l9789 4E8C  
                                            l9893 313E                                              l9885 30D4  
                                            l9877 2F9A                                              STR_7 7FD2  
                                            STR_8 7FC7                                              l9983 3A62  
                                            l9975 3A1E                                              l8999 4292  
                                            l9799 4EC6                                              l9887 30F6  
                                            l9895 314A                                              l9879 2FDA  
                                            STR_9 7FDC                                              l9977 3A32  
                                            l9897 3152                                              l9889 3122  
                                            l9979 3A42                                              l9899 316A  
                                            l9997 3A6E                                              l9999 3A7E  
                                            u8100 4752                                              _RCIF 007CF5  
                                            u8101 474E                                              u8110 4764  
                                            u8111 4760                                              u8200 4064  
                                            u8120 478C                                              u9000 3BCE  
                                            u8201 4060                                              u8121 4788  
                                            u9001 3BCA                                              u8210 4086  
                                            u8130 47C2                                              u9010 3D9E  
                                            u8211 4082                                              u8131 47BE  
                                            u9011 3D9A                                              u8220 40C0  
                                            u8140 558C                                              u9020 3DD0  
                                            u9100 2998                                              u8300 1944  
                                            u8221 40BC                                              u8141 5588  
                                            u9021 3DCC                                              u9101 2994  
                                            u8301 1940                                              u8230 40E2  
                                            u8150 56DE                                              u9030 3E0E  
                                            u9110 29AA                                              u8310 1956  
                                            u8231 40DE                                              u8151 56DA  
                                            u9031 3E0A                                              u9111 29A6  
                                            u8311 1952                                              u8240 410A  
                                            u9040 3E38                                              u9200 2B54  
                                            u9120 29BA                                              u8400 1A9E  
                                            u8320 1966                                              u8160 563E  
                                            u8241 4106                                              u9041 3E34  
                                            u9201 2B50                                              u9121 29B6  
                                            u8401 1A9A                                              u8321 1962  
                                            u8161 5638                                              u8250 413C  
                                            u9050 3E66                                              u9210 2B74  
                                            u9130 29FA                                              u8410 1AAC  
                                            u8330 19A2                                              u8170 5640  
                                            u8251 4138                                              u9051 3E62  
                                            u9211 2B70                                              u9131 29F6  
                                            u8411 1AA8                                              u8331 199E  
                                            u9060 3EAE                                              u9220 2B86  
                                            u9140 2A3A                                              u9300 1D8A  
                                            u8500 1C0A                                              u8420 1ABC  
                                            u8340 19B0                                              u8260 18CA  
                                            u8180 4F74                                              u9061 3EAA  
                                            u9221 2B82                                              u9141 2A36  
                                            u9301 1D86                                              u8501 1C06  
                                            u8421 1AB8                                              u8341 19AC  
                                            u8261 18C6                                              u8181 4F70  
                                            u9230 2BB4                                              u9150 2AB0  
                                            u9070 2932                                              u9310 1D9C  
                                            u8510 1C1A                                              u8430 1AEE  
                                            u8350 1A1E                                              u8270 18DC  
                                            u8190 4FAE                                              u9231 2BB0  
                                            u9151 2AAC                                              u9071 292E  
                                            u9311 1D98                                              u8511 1C16  
                                            u8431 1AEA                                              u8351 1A1A  
                                            u8271 18D8                                              u8191 4FAA  
                                            u9240 2BCA                                              u9160 2AD2  
                                            u9080 2944                                              u9400 2048  
                                            u9320 1DAC                                              u8600 1CFE  
                                            u8520 1C36                                              u8440 1AFC  
                                            u8360 1A36                                              u8280 18EC  
                                            u9241 2BC6                                              u9161 2ACE  
                                            u9081 2940                                              u9401 2044  
                                            u9321 1DA8                                              u8601 1CFA  
                                            u8521 1C32                                              u8441 1AF8  
                                            u8361 1A30                                              u8281 18E8  
                                            u9250 2BDE                                              u9170 2AFC  
                                            u9090 2954                                              u9410 205A  
                                            u9330 1DEC                                              u8610 1D0E  
                                            u8530 1C46                                              u8450 1B1A  
                                            u8370 1A38                                              u8290 192E  
                                            u9251 2BDA                                              u9171 2AF8  
                                            u9091 2950                                              u9411 2056  
                                            u9331 1DE8                                              u8611 1D0A  
                                            u8531 1C42                                              u8451 1B16  
                                            u8291 192A                                              u9500 4836  
                                            u9260 2BF8                                              u9180 2B20  
                                            u9420 2088                                              u9340 1DFE  
                                            u8620 1D2E                                              u8540 1C58  
                                            u8460 1B52                                              u8380 1A60  
                                            u8700 44B2                                              u9501 4832  
                                            u9261 2BF4                                              u9181 2B1C  
                                            u9421 2084                                              u9341 1DFA  
                                            u8621 1D2A                                              u8541 1C54  
                                            u8461 1B4E                                              u8381 1A5C  
                                            u9510 485C                                              u9270 2C40  
                                            u9190 2B36                                              u9430 209E  
                                            u9350 1E0E                                              u8630 1D40  
                                            u8550 1C6E                                              u8470 1B98  
                                            u8390 1A7E                                              u8710 44D0  
                                            u9511 4858                                              u9271 2C3C  
                                            u9191 2B32                                              u9431 209A  
                                            u9351 1E0A                                              u8631 1D3C  
                                            u8551 1C6A                                              u8471 1B94  
                                            u8391 1A7A                                              u8711 44CC  
                                            u9520 487A                                              u9600 4A2E  
                                            u9280 2C70                                              u9440 20B2  
                                            u9360 1E44                                              u8640 1D5C  
                                            u8560 1C84                                              u8480 1BCE  
                                            u8720 44F8                                              u8800 505C  
                                            u9521 4876                                              u9601 4A2A  
                                            u9281 2C6C                                              u9441 20AE  
                                            u9361 1E40                                              u8641 1D58  
                                            u8561 1C80                                              u8481 1BCA  
                                            u8721 44F4                                              u8705 44A8  
                                            u8650 48DC                                              u9530 4896  
                                            u9290 2C9E                                              u9610 4BC6  
                                            u9450 20CC                                              u9370 1E54  
                                            u8570 1C98                                              u8490 1BDE  
                                            u8730 4522                                              u8810 5072  
                                            u8651 48D8                                              u9531 4892  
                                            u9291 2C9A                                              u9611 4BC2  
                                            u9451 20C8                                              u9371 1E50  
                                            u8571 1C94                                              u8491 1BDA  
                                            u8731 451E                                              u8811 506E  
                                            u8660 48FE                                              u9540 48BC  
                                            u9620 4C04                                              u9460 2114  
                                            u9380 1FCE                                              u8580 1CB2  
                                            u9700 427E                                              u8900 339A  
                                            u8820 322C                                              u8661 48FA  
                                            u9541 48B8                                              u9621 4C00  
                                            u9461 2110                                              u8581 1CAE  
                                            u9701 427A                                              u8901 3396  
                                            u8670 4954                                              u9550 49A2  
                                            u9630 4C38                                              u9470 2142  
                                            u9390 2028                                              u8590 1CEC  
                                            u9710 42B2                                              u8750 455C  
                                            u8910 33D6                                              u8830 325A  
                                            u8671 4950                                              u9551 499E  
                                            u9631 4C34                                              u9471 213E  
                                            u9391 2024                                              u8591 1CE8  
                                            u8751 4556                                              u8911 33D2  
                                            u8831 3256                                              u9640 439C  
                                            u8920 56AE                                              u8680 4962  
                                            u9560 49BC                                              u9480 217C  
                                            u9720 42E0                                              u8760 455E  
                                            u8840 327C                                              u9800 3686  
                                            u9641 4398                                              u8921 56A8  
                                            u8681 495E                                              u9561 49B8  
                                            u9481 2178                                              u9385 1FC4  
                                            u9721 42DC                                              u8745 4534  
                                            u8841 3278                                              u8825 3222  
                                            u9801 3682                                              u9650 43DA  
                                            u8930 56B0                                              u8690 55E8  
                                            u9490 481C                                              u9570 49D6  
                                            u9730 42F4                                              u8770 5130  
                                            u9810 36D0                                              u9651 43D6  
                                            u8691 55E4                                              u9491 4818  
                                            u9571 49D2                                              u9731 42F0  
                                            u9715 42A8                                              u9811 36CC  
                                            u9660 43F8                                              u8940 3A9A  
                                            u9580 49F4                                              u9740 431C  
                                            u8860 32EA                                              u8780 5142  
                                            u9820 36EE                                              u9661 43F4  
                                            u8941 3A96                                              u9581 49F0  
                                            u9741 4318                                              u8861 32E6  
                                            u8781 513E                                              u9821 36EA  
                                            u9670 4418                                              u8950 3ACC  
                                            u9590 4A0A                                              u9750 433C  
                                            u8870 330E                                              u8790 505A  
                                            u9830 36FE                                              u9671 4414  
                                            u8951 3AC8                                              u9591 4A06  
                                            u9751 4338                                              u8855 3290  
                                            u8791 5054                                              u9831 36FA  
                                            u9680 4468                                              u9920 5158  
                                            u9760 434C                                              u8880 332A  
                                            u8856 329A                                              u9840 370C  
                                            u9681 4464                                              u9921 5154  
                                            u8961 3AF6                                              u9761 4348  
                                            u8881 3326                                              u8857 32AA  
                                            u8777 5126                                              u9841 3708  
                                            u9905 3512                                              u8970 3B1A  
                                            u9930 2CE2                                              u9690 565C  
                                            u8890 337E                                              u9850 3746  
                                            u9770 35C6                                              u9906 351C  
                                            u8971 3B16                                              u9931 2CDC  
                                            u9691 5658                                              u8875 3304  
                                            u9851 3742                                              u9771 35C2  
                                            u9915 3556                                              u9907 352C  
                                            u8980 3B44                                              u9940 2CE4  
                                            u9860 3754                                              u9780 35D4  
                                            u9916 3560                                              u8981 3B40  
                                            u9861 3750                                              u9781 35D0  
                                            u9917 3570                                              u9870 5308  
                                            u8990 3B84                                              u9950 2CFA  
                                            u9790 3630                                              u9871 5304  
                                            u8991 3B80                                              u9951 2CF6  
                                            u8895 3374                                              u9791 362C  
                                            u9880 5336                                              u9960 2D2A  
                                            u9881 5332                                              u9961 2D26  
                                            u9970 2D46                                              u9890 3478  
                                            u9971 2D42                                              u9891 3474  
                                            u9980 2D74                                              u9981 2D70  
                                            u9990 2D82                                              u9991 2D7E  
                                ??_forzarParoAuto 0006                                              abs@a 0018  
                                            _dbuf 0142                                              _atoi 3768  
                                            _ctoa 5144                                              _main 4C42  
                                            _dtoa 2CB2                                              _prec 0134  
                                            _nout 0130                                              pad@i 001D  
                                            pad@p 001A                                              fsr0h 000FEA  
                                            fsr1h 000FE2                                              indf0 000FEF  
                                            fsr2h 000FDA                                              fsr0l 000FE9  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 001F                                              map@x 0020  
                                            fsr2l 000FD9                                              btemp 005A  
                                   ___fpclassifyf 4472                          __end_of_decidirDireccion 1308  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 000E                                     __CFG_IESO$OFF 000000  
                                 ___fldiv@new_exp 0065                                      _tolower$1557 0012  
                                   __CFG_MCLRE$ON 000000                                     ?_leerSensores 0001  
                                    ___param_bank 000000                                             ??_PID 0088  
                                           ??_abs 001A                                             ??_map 0034  
                                           ??_pad 001C                                   ??_velocidadBaja 0054  
                                   __CFG_PLLDIV$1 000000                                    __CFG_CCP2MX$ON 000000  
                                           l10011 56F0                                             l10005 3A84  
                                           l10021 4D8C                                             l10013 5712  
                                           l10101 0C50                                             l10023 4D9C  
                                           l10103 0C6A                                             l10025 4DAC  
                                           l10017 4D78                                             l10009 56EC  
                                           l10201 0E2E                                             l10113 0CD2  
                                           l10105 0C7A                                             l10121 0D0A  
                                           l10041 3D4A                                             l10019 4D7C  
                                           l10131 0D9E                                             l10115 0CE6  
                                           l10107 0C9A                                             l10123 0D44  
                                           l10035 3C10                                             l10051 4162  
                                           l10029 4DBC                                             l10133 0DA6  
                                           l10125 0D5C                                             l10109 0CAE  
                                           l10037 3D2A                                             l10061 41C2  
                                           l10053 416E                                             l10215 0E36  
                                           l10135 0DC4                                             l10127 0D76  
                                           l10039 3D3A                                             l10063 41D2  
                                           l10055 4186                                             l10401 127E  
                                           l10241 0EAA                                             l10217 0E54  
                                           l10137 0DC8                                             l10129 0D7E  
                                           l10065 41D6                                             l10057 4192  
                                           l10411 12E2                                             l10403 1286  
                                           l10243 0EB6                                             l10219 0E60  
                                           l10139 0DD4                                             l10091 0C04  
                                           l10067 41EE                                             l10059 41AC  
                                           l10413 12F2                                             l10405 12B8  
                                           l10237 0E6C                                             l10333 0F3C  
                                           l10093 0C14                                             l10341 0F9E  
                                           l10085 0BCC                                             l10069 4208  
                                           l10077 4228                                             l10501 5348  
                                           l10511 4EE6                                             l10415 1300  
                                           l10407 12C0                                             l10351 1002  
                                           l10343 0FB6                                             l10327 0F10  
                                           l10239 0E8C                                             l10335 0F78  
                                           l10095 0C2C                                             l10087 0BD4  
                                           l10431 4AEC                                             l10521 4F46  
                                           l10513 4EE6                                             l10409 12D2  
                                           l10361 1076                                             l10353 1014  
                                           l10345 0FCE                                             l10337 0F88  
                                           l10329 0F34                                             l10097 0C38  
                                           l10089 0BEC                                             l10441 4B3A  
                                           l10433 4AFE                                             l10601 22BE  
                                           l10505 5364                                             l10531 4F50  
                                           l10523 4F48                                             l10515 4EE8  
                                           l10371 10E8                                             l10363 10A8  
                                           l10355 1036                                             l10347 0FDE  
                                           l10339 0F94                                             l10283 0EBE  
                                           l10195 0DE8                                             l10099 0C48  
                                           l10451 4B70                                             l10443 4B3E  
                                           l10435 4B0A                                             l10611 22DA  
                                           l10603 22C2                                             l10533 4F52  
                                           l10525 4F4A                                             l10517 4EEA  
                                           l10381 113E                                             l10365 10B0  
                                           l10373 10F4                                             l10357 103E  
                                           l10349 0FF6                                             l10285 0EDE  
                                           l10197 0E02                                             l10461 5392  
                                           l10453 4B74                                             l10445 4B46  
                                           l10621 2342                                             l11261 2302  
                                           l10613 22E2                                             l10605 22CA  
                                           l10541 4A54                                             l10527 4F4C  
                                           l10519 4F1E                                             l10391 11A6  
                                           l10383 1142                                             l10367 10D4  
                                           l10359 106E                                             l10375 10FE  
                                           l10199 0E22                                             l11271 3FB4  
                                           l10463 539E                                             l10471 4570  
                                           l10447 4B64                                             l10455 4B86  
                                           l10439 4B1C                                             l11263 2538  
                                           l10631 2398                                             l10623 2352  
                                           l10607 22CE                                             l10535 5840  
                                           l10543 4A64                                             l10551 4AC0  
                                           l10529 4F4E                                             l11281 4DD0  
                                           l10393 1202                                             l10385 115A  
                                           l10377 110E                                             l10369 10D8  
                                           l10297 0F00                                             l11273 0D26  
                                           l10465 53AE                                             l10481 45F8  
                                           l10473 45B8                                             l11265 4D4E  
                                           l10457 4B8A                                             l10449 4B68  
                                           l10641 23BA                                             l10633 239E  
                                           l10625 2364                                             l10617 22EA  
                                           l10609 22D6                                             l10561 53E6  
                                           l10553 4ADE                                             l11257 4A9A  
                                           l10545 4A74                                             l10537 4A40  
                                           l10387 1172                                             l10395 1212  
                                           l10379 1116                                             l11275 0F5A  
                                           l10467 53B2                                             l11267 463E  
                                           l10483 4610                                             l10475 45C8  
                                           l10651 23EA                                             l10643 23CA  
                                           l10635 23A2                                             l10627 236E  
                                           l10619 2330                                             l10571 21A0  
                                           l11259 5378                                             l10563 53FC  
                                           l10539 4A44                                             l11277 359C  
                                           l10397 1244                                             l10389 11A2  
                                           l10469 53D0                                             l11269 423E  
                                           l10477 45DA                                             l10661 2426  
                                           l10653 23FC                                             l10645 23DC  
                                           l10629 2384                                             l10581 2202  
                                           l10573 21B8                                             l10565 5412  
                                           l10549 4A84                                             l10901 4C72  
                                           l11279 3824                                             l10399 124C  
                                           l10479 45E0                                             l10487 4628  
                                           l10671 2452                                             l10663 2436  
                                           l10655 240E                                             l10639 23A8  
                                           l10583 2212                                             l10591 2230  
                                           l10575 21CA                                             l10495 5344  
                                           l10567 5428                                             l10559 53E2  
                                           l10911 4CA8                                             l10903 4C78  
                                           l10489 465C                                             l10681 24C0  
                                           l10665 243A                                             l10657 241C  
                                           l10593 2234                                             l10585 221A  
                                           l10577 21DA                                             l10569 219A  
                                           l10913 4CBA                                             l10921 4CC2  
                                           l10905 4C7E                                             l10691 2504  
                                           l10683 24C6                                             l10667 2442  
                                           l10659 2420                                             l10675 245C  
                                           l10595 2292                                             l10587 2226  
                                           l10579 21EC                                             l10923 4CC6  
                                           l10915 4CBE                                             l10907 4C82  
                                           l10693 2516                                             l10685 24D2  
                                           l10677 246E                                             l10669 2446  
                                           l10597 22A4                                             l10589 222A  
                                           l10925 4CCE                                             l10909 4C96  
                                           l10861 4C42                                             l10695 251A  
                                           l10679 2480                                             l10599 22B6  
                                           l10871 4C50                                             l10863 4C48  
                                           l10689 24F0                                             l10881 4C5A  
                                           l10873 4C52                                             l10865 4C4A  
                                           l10699 2522                                             l10891 4C64  
                                           l10883 4C5C                                             l10875 4C54  
                                           l10867 4C4C                                             l10893 4C66  
                                           l10885 4C5E                                             l10877 4C56  
                                           l10869 4C4E                                             l10895 4C68  
                                           l10887 4C60                                             l10879 4C58  
                                           l10897 4C6A                                             l10889 4C62  
                                           l10899 4C6C                                     ___fltol@sign1 007A  
                                 __end_of___aldiv 415E                                   __end_of___aodiv 3C10  
                                           ?_atoi 000D                                             ?_ctoa 0021  
                                 __end_of___fladd 1D70                                             ?_main 0001  
                                           ?_dtoa 0021                                   __end_of___aomod 3EF0  
                                 __end_of___fldiv 2CB2                                   __end_of___awdiv 48CE  
                                 __end_of___flneg 567E                                             STR_10 7FE5  
                                           STR_11 7ECA                                             STR_20 7DE4  
                                           STR_12 7D7B                                             STR_13 7E65  
                                           STR_21 7DB3                                             STR_14 7F7A  
                                           STR_22 7E14                                             STR_31 7FFB  
                                           STR_23 7FEB                                             STR_15 7EEA  
                                           STR_24 7FF3                                             STR_16 7EA9  
                                           STR_33 7FFB                                             STR_17 7F2A  
                                           STR_18 7F0A                                             STR_27 7FEF  
                                           STR_19 7E87                                             STR_28 7FF7  
                                 __end_of___awmod 4A40                                   __end_of___flmul 219A  
                                 __end_of___flsub 5504                                   __end_of___fltol 436E  
                                           u10000 2EAA                                             u10001 2EA6  
                                           u10010 2EC8                                             u10011 2EC4  
                                           u10020 2EE2                                             u10100 0098  
                                           u10021 2EDE                                             u10101 0094  
                                           u10030 2EFC                                             u10110 00AA  
                                           u10031 2EF8                                             u10111 00A6  
                                           u10040 2F0A                                             u10200 0292  
                                           u10120 00F2                                             u11000 2804  
                                           u10041 2F06                                             u10201 028E  
                                           u10121 00EE                                             u11001 2800  
                                           u10050 2F1C                                             u10210 0326  
                                           u10130 0122                                             u11010 28C4  
                                           u10051 2F18                                             u10211 0322  
                                           u10131 011C                                             u10060 2F2A  
                                           u10300 04AE                                             u10220 0398  
                                           u10140 0124                                             u11100 3F4E  
                                           u11020 28E0                                             u10061 2F26  
                                           u10301 04AA                                             u10221 0394  
                                           u11101 3F4A                                             u11021 28DC  
                                           u10070 2F42                                             u10310 04C0  
                                           u10230 03BE                                             u10150 013A  
                                           u11030 5020                                             u11110 3F5E  
                                           u10071 2F3E                                             u10311 04BC  
                                           u10231 03BA                                             u10151 0136  
                                           u11031 501C                                             u11111 3F5A  
                                           u11015 28BA                                             u10400 078A  
                                           u10320 04CE                                             u10240 03D2  
                                           u10160 01C6                                             u10080 003A  
                                           u11040 4E8C                                             u11120 3F6C  
                                           u11200 3192                                             u10401 0786  
                                           u10321 04CA                                             u10241 03CE  
                                           u10161 01C2                                             u10081 0036  
                                           u11041 4E88                                             u11121 3F68  
                                           u11201 318E                                             u10410 082C  
                                           u10330 04E4                                             u10250 03F4  
                                           u10170 01F6                                             u10090 008A  
                                           u11050 4EAA                                             u11130 3F7E  
                                           u11210 55C0                                             u10411 0828  
                                           u10331 04E0                                             u10251 03F0  
                                           u10171 01F0                                             u10091 0086  
                                           u11051 4EA6                                             u11131 3F7A  
                                           u11211 55BC                                             u11300 3A7E  
                                           u11220 391A                                             u10500 09E2  
                                           u10420 0840                                             u10340 04F2  
                                           u10260 041E                                             u10180 01F8  
                                           u11060 4EC6                                             u11140 3F8E  
                                           u11301 3A7A                                             u11221 3916  
                                           u10501 09DE                                             u10421 083C  
                                           u10341 04EE                                             u10261 041A  
                                           u11061 4EC2                                             u11141 3F8A  
                                           u11230 394C                                             u11310 5712  
                                           u10510 09F0                                             u10430 0852  
                                           u10350 051C                                             u10270 0436  
                                           u10190 020E                                             u11150 3F9C  
                                           u11070 3F1E                                             u11231 3948  
                                           u11311 570E                                             u10511 09EC  
                                           u10431 084E                                             u10351 0518  
                                           u10271 0432                                             u10191 020A  
                                           u11151 3F98                                             u11071 3F1A  
                                           u11240 3986                                             u10600 37A0  
                                           u10520 0A26                                             u10440 0860  
                                           u10360 0664                                             u10280 0452  
                                           u11400 0C9A                                             u11160 3FE2  
                                           u11080 3F2E                                             u11320 4186  
                                           u11241 3982                                             u10601 379C  
                                           u10521 0A22                                             u10441 085C  
                                           u10361 0660                                             u10281 044E  
                                           u11401 0C96                                             u11161 3FDE  
                                           u11081 3F2A                                             u11321 4182  
                                           u11250 39C0                                             u10610 37D6  
                                           u10530 0A54                                             u10450 087C  
                                           u10370 06CA                                             u10290 0488  
                                           u11410 0CCE                                             u11090 3F3C  
                                           u11330 41D2                                             u11170 30F6  
                                           u11251 39BC                                             u10611 37D2  
                                           u10531 0A50                                             u10451 0878  
                                           u10371 06C6                                             u10291 0484  
                                           u11411 0CCA                                             u11091 3F38  
                                           u11331 41CE                                             u11171 30F2  
                                           u12107 24DE                                             u11260 39D8  
                                           u10620 37F2                                             u10540 0AD8  
                                           u10460 088A                                             u10380 0712  
                                           u10700 46F4                                             u11500 0E8C  
                                           u11420 0D06                                             u11340 0BEC  
                                           u11180 3122                                   ___awdiv@divisor 0008  
                                           u11261 39D4                                             u10621 37EE  
                                           u10541 0AD4                                             u10461 0886  
                                           u10381 070E                                             u10701 46F0  
                                           u11501 0E88                                             u11421 0D02  
                                           u11341 0BE8                                             u11181 311E  
                                           u12117 4CEE                                             u11270 39EA  
                                           u10630 38A8                                             u10550 0AF2  
                                           u10470 08E2                                             u10390 0722  
                                           u10710 471C                                             u11510 0EAA  
                                           u11430 0D5C                                             u11350 0C04  
                                           u11190 316A                                             u11271 39E6  
                                           u10631 38A2                                             u10551 0AEE  
                                           u10471 08DE                                             u10391 071E  
                                           u10711 4718                                             u11511 0EA6  
                                           u11431 0D58                                             u11351 0C00  
                                           u12207 5484                                             u11191 3166  
                                           u12127 4D0E                                             u11280 3A1E  
                                           u10720 583E                                             u10640 38AA  
                                           u10560 0B0A                                             u10480 09B4  
                                           u10800 14E4                                             u11600 106E  
                                           u11520 0EDE                                             u11440 0D76  
                                           u11360 0C14                                             u12080 4CA8  
                                           _T1CON 000FCD                                             u11281 3A1A  
                                           u10721 583A                                             u10561 0B06  
                                           u10481 09B0                                             u10801 14E0  
                                           u11601 106A                                             u11521 0EDA  
                                           u11441 0D72                                             u11361 0C10  
                                           u12217 549A                                             u12137 419E  
                                           u12081 4CA4                                             u11290 3A52  
                                           u10650 38C0                                             u10570 0B68  
                                           u10490 09D0                                             u10810 153A  
                                           u10730 132C                                             u11610 10A8  
                                           u11530 0EFC                                             u11450 0D9E  
                                           u11370 0C2C                                             u12090 4CBA  
                                           u11291 3A4E                                             u10651 38BC  
                                           u10571 0B62                                             u10491 09CC  
                                           u10811 1536                                             u10731 1328  
                                           u11611 10A4                                             u11531 0EF8  
                                           u11451 0D9A                                             u11371 0C28  
                                           u12227 54B0                                             u12147 41B4  
                                           u12091 4CB6                                             u10900 50AE  
                                           u10660 38D2                                             u10580 0B6A  
                                           u10820 15AC                                             u10740 1374  
                                           u11700 12D2                                             u11620 10E8  
                                           u11540 0F88                                             u11460 0DC4  
                                           u11380 0C48                                             u10661 38CE  
                                           u10821 15A8                                             u10741 1370  
                                           u11701 12CE                                             u11621 10E4  
                                           u11541 0F84                                             u11461 0DC0  
                                           u11381 0C44                                             u12237 579E  
                                           u12157 41FA                                             u10910 50D6  
                                           u10590 0B80                                             u10670 4694  
                                           u10830 15D0                                             u10750 13AE  
                                           u11710 12E2                                             u11630 110E  
                                           u11550 0FB6                                             u11470 0E02  
                                           u11390 0C6A                                             u10591 0B7C  
                                           u10671 4690                                             u10831 15CC  
                                           u10751 13AA                                             u11711 12DE  
                                           u11631 110A                                             u11551 0FB2  
                                           u11471 0DFE                                             u11391 0C66  
                                           u12247 581E                                             u12167 543C  
                                           u10920 50E6                                             u10680 46C6  
                                           u10840 1662                                             u10760 1458  
                                           u11720 12F2                                             u11640 113E  
                                           u11560 0FCE                                             u11480 0E22  
                                           u11800 21EC                                             u10921 50E2  
                                           u10681 46C2                                             u10841 165E  
                                           u10761 1452                                             u11721 12EE  
                                           u11641 113A                                             u11561 0FCA  
                                           u11481 0E1E                                             u12257 5802  
                                           u12177 5452                                             u11801 21E8  
                                           u10930 5534                                             u10690 46E2  
                                           u10850 1710                                             u10770 145A  
                                           u11650 115A                                             u11570 0FDE  
                                           u11490 0E54                                             u11730 4B18  
                                           u11810 2202                                             u10907 50A4  
                                           u10931 5530                                             u10691 46DE  
                                           u10851 170C                                             u11651 1156  
                                           u11571 0FDA                                             u11491 0E50  
                                           u12267 57C0                                             u12187 5468  
                                           u11731 4B14                                             u11811 21FE  
                                           u10860 1778                                             u10780 1470  
                                           u11660 1172                                             u11580 0FF6  
                                           u10940 25A4                                             u11740 4B3A  
                                           u11900 240E                                             u11820 22B6  
                                           u10917 50CC                                             u10861 1772  
                                           u10781 146C                                             u11661 116E  
                                           u11581 0FF2                                             u12277 3F06  
                                           u12197 57E2                                             u11741 4B36  
                                           u11901 240A                                             u11821 22B2  
                                           u10870 177A                                             u10790 14A2  
                                           u11670 1244                                             u11590 1014  
                                           u10950 25CE                                             u11750 4B64  
                                           u11910 2436                                             u11830 2342  
                                           u12287 5508                                             u10791 149E  
                                           u11671 1240                                             u11591 1010  
                                           u10951 25CA                                             u11751 4B60  
                                           u11911 2432                                             u11831 233E  
                                           u10880 1790                                             u11680 127E  
                                           u11760 53D0                                             u10960 2602  
                                           u11920 246E                                             u11840 2352  
                                           _LATB4 007C54                                             u10881 178C  
                                           u11681 127A                                             u11761 53CC  
                                           u10945 259A                                             u11921 246A  
                                           u11841 234E                                             _LATB5 007C55  
                                           u10890 182C                                             u11690 12B8  
                                           u11770 45C8                                             u10970 261E  
                                           u11930 2480                                             u11850 2364  
                                           _LATD2 007C62                                             _LATB6 007C56  
                                           u10891 1828                                             u11691 12B4  
                                           u11771 45C4                                             u10971 261A  
                                           u11931 247C                                             u11851 2360  
                                           _LATD3 007C63                                             _LATB7 007C57  
                                           u10980 2660                                             u11940 2504  
                                           u11860 23BA                                             u11780 21CA  
                                           u10981 265C                                             u10965 25F8  
                                           u11941 2500                                             u11861 23B6  
                                           u11781 21C6                                             u10990 2766  
                                           u11950 2516                                             u11870 23CA  
                                           u11790 21DA                                             u10991 2762  
                                           u11951 2512                                             u11871 23C6  
                                           u11791 21D6                                             u11880 23DC  
                                           u11881 23D8                                             u11890 23FC  
                                           u11891 23F8                                   __end_of___lwdiv 4EE6  
                                           i2l320 51A4                                             i2l323 51B2  
                                           i2l328 51F4                                             i2l284 5292  
                                           i2l286 529A                                      main@iniciado 02CC  
                                 ___awdiv@counter 000A                                             _RCREG 000FAE  
                                    vfpfcnvrt@fmt 00C3                                             _TMR1H 000FCF  
                                           _TMR1L 000FCE                                             _SPBRG 000FAF  
                decidirDireccion@posicionInvCruce 01EA                                     __CFG_USBDIV$1 000000  
                                           _TXREG 000FAD                                     __CFG_PWRT$OFF 000000  
                                   __CFG_WRT0$OFF 000000                                     __CFG_WRT1$OFF 000000  
                                   __CFG_WRT2$OFF 000000                               ___lmul@multiplicand 000A  
                                   __CFG_WRT3$OFF 000000                                    __CFG_EBTR0$OFF 000000  
                                  __CFG_FCMEN$OFF 000000                                    __CFG_EBTR1$OFF 000000  
                                  __CFG_EBTR2$OFF 000000                                    __CFG_EBTR3$OFF 000000  
                       hayCruce@investigandoCruce 0042                                     __CFG_WRTB$OFF 000000  
                                   __CFG_WRTC$OFF 000000                                     __CFG_WRTD$OFF 000000  
                                  __CFG_EBTRB$OFF 000000                                __size_of_UART_init 0070  
                                           _flags 0055                                             _boton 0008  
                                           _fputc 4740                                             _fputs 554A  
                                 __end_of_isdigit 56B6                                             _pausa 01FB  
                                           _mover 4CDC                                             _mouse 0057  
                                     ?_UART_write 0001                                             atoi@n 001A  
                                           pad@fp 0016                                             atoi@s 000D  
                                           _width 0132                                             ctoa@c 0023  
                                           _putch 5850                                             _toint 7D77  
                                           ctoa@w 0024                                             dtoa@d 0023  
                                           dtoa@i 0043                                             dtoa@n 003B  
                                           dtoa@p 0035                                             dtoa@s 0039  
                                           dtoa@w 0037                                 ??_regresarAlCruce 0054  
                                 __end_of_isspace 5342                                   __end_of_isupper 5646  
                                           tablat 000FF5                                   __end_of_pwmDuty 35B4  
probarMapeoDireccionCruces@cambioOrientacionCarro 01F3                                             ttemp5 005B  
                                           ttemp6 005E                                             ttemp7 0062  
                                           status 000FD8                                             wtemp8 005B  
                                 __end_of_sprintf 52F0                                    ?___fpclassifyf 0006  
                                 __end_of_tolower 508A                                   __end_of_strncmp 4740  
                                  __CFG_ICPRT$OFF 000000                                    ??_leerSensores 0050  
                                 __initialization 51F6                                  ??_dameLecturaAdc 0008  
                                    __end_of_atoi 38F8                                      __end_of_ctoa 519E  
                                    __end_of_main 4CDC                                      __end_of_dtoa 2F90  
                                 ??_configurarAdc 0006                               dameDistancia@conteo 0026  
                          dameDistancia@distancia 0022                  limpiarMovimientos@numMovimientos 0008  
                                          ??_atoi 000F                                            ??_ctoa 0024  
                                          ??_main 0055                                            ??_dtoa 002B  
             comportamientoBasico@caminosRecorrer 01D8                                     __activetblptr 000002  
                                          PID@dif 0096                __end_of_probarMapeoDireccionCruces 466A  
                      _probarMapeoDireccionCruces 4570                                            _ADCON1 000FC1  
                                          _ADCON2 000FC0                                            ?_boton 0001  
                                          _CCP1M2 007DEA                                            _CCP1M3 007DEB  
                                          _CCP2M2 007DD2                                            _CCP2M3 007DD3  
                                          ?_fputc 0006                                            ?_fputs 000F  
                                          _ADRESH 000FC4                                            _ADRESL 000FC3  
                                          _CCPR1L 000FBE                                            _CCPR2L 000FBB  
                                ___awdiv@dividend 0006                                            ?_mover 0001  
                                          ?_putch 0001                                            _INT0IF 007F91  
                                          i2l7371 51C0                                            i2l7375 51D2  
                                          i2l7369 51A0                                            i2l7571 5276  
                                          i2l7563 524C                                            i2l7573 5278  
                                          i2l7565 525A                                            i2l7575 5294  
                                          i2l7567 5260                                            i2l7577 5298  
                                          i2l7569 5272                           _mostrarDireccionElegida 4D76  
                                          _TMR1IF 007CF0                                            _TMR1ON 007E68  
                                          _TMR2ON 007E52                                            _TRISB0 007C98  
                                          _TRISB1 007C99                                            _TRISB2 007C9A  
                                          _TRISC1 007CA1                                            _TRISB3 007C9B  
                                          _TRISC2 007CA2                                            _TRISB4 007C9C  
                                          _TRISB5 007C9D                                            _TRISB6 007C9E  
                                          _TRISD3 007CAB                                            _TRISB7 007C9F  
                                          _TRISC6 007CA6                                            _TRISC7 007CA7  
                                __end_of___xxtofl 3768                                  __end_of_hayCruce 3A88  
                                  __CFG_XINST$OFF 000000                          __end_of_seLlegoAlDestino 571A  
              comportamientoBasico@numMovimientos 01DB                                      vfprintf@cfmt 00E5  
                       dameDistancia@numeroSensor 0021                                            ___flge 436E  
                                          ___fleq 4B98                                            ___lmul 4F56  
                                       ??___aldiv 001A                                         ??___aodiv 0016  
                                       ??___fladd 003C                                         ??___aomod 0016  
                                          ___wmul 5766                                 __end_of_UART_init 4F56  
                                       ??___fldiv 004C                                         ??___awdiv 000A  
                                       ??___flneg 000A                comportamientoBasico@espejearCarroY 0138  
                                       ??___awmod 000A                                         ??___flmul 0023  
                                       ??___flsub 004C                                         ??___fltol 0076  
                                          _efgtoa 0012                                         ??___lwdiv 000A  
                      moverCarrito@espejearCarroY 008E                                            _buffer 0192  
                             _forzarGiroIzquierda 57D0                                            _floorf 31E2  
                             __size_of_UART_write 0016                                      ?_UART_printf 0007  
                                          clear_0 521C                                            clear_1 5228  
                                ___awdiv@quotient 000C                                   ___awmod@divisor 0008  
                                 ___awmod@counter 000A                                            pad@buf 0018  
                                          ctoa@fp 0021                                            _roundf 2564  
                                          dtoa@fp 0021                                            _strcpy 50E8  
                     ??_visualizarPasosRealizados 00FD                                            _strlen 56B6  
                               _oldSensorEnfrente 0118                                            fputc@c 0006  
                                          fputs@c 0013                                            fputs@i 0014  
                                          fputs@s 000F                                         ??_isdigit 0008  
                           _SENSOR_PRIORIDAD_BAJA 01FC                             _SENSOR_PRIORIDAD_ALTA 01FE  
                                 ___fpclassifyf@e 000E           mostrarDireccionElegida@direccionElegida 000B  
                                 ___fpclassifyf@u 0010                                   ___fpclassifyf@x 0006  
                                    __mediumconst 7D76                                         ??_isspace 0008  
                         ?_forzarEspejeoIzquierda 0001                                            tblptrh 000FF7  
                                       ??_isupper 0008                                            tblptrl 000FF6  
                                          tblptru 000FF8                            __size_of_forzarEspejeo 0040  
                                       ??_pwmDuty 007F                                            putch@c 0001  
                                __end_of_vfprintf 502A                                  _posicionDestinoX 013D  
                                _posicionDestinoY 013C                                         ??_sprintf 0054  
                                       ??_tolower 000E                                         ??_strncmp 000C  
                            ?_forzarGiroIzquierda 0001                                 _forzarAvanceRecto 57AE  
                          __size_of_forzarReversa 0022                                        ___flge@ff1 0034  
                               _velocidadEstandar 571A                                        ___flge@ff2 0038  
                                 ??___fpclassifyf 000A                                      ___xxtofl@arg 0017  
                                    ___xxtofl@exp 0016                                      ___xxtofl@val 000D  
                                      ___fleq@ff1 0006                                        ___fleq@ff2 000A  
                                      __accesstop 0060                           __end_of__initialization 523C  
     probarMapeoDireccionCruces@investigandoCruce 01E9                                ?_forzarAvanceRecto 0001  
                                 __CFG_PBADEN$OFF 000000                                        ___flneg@f1 0006  
                                 __CFG_FOSC$XT_XT 000000                                ?_velocidadEstandar 0001  
         visualizarPasosRealizados@numMovimientos 00FB                                     ___rparam_used 000001  
                   __size_of_forzarEspejeoDerecha 0048                                        ___fltol@f1 0072  
                             ??_forzarAvanceRecto 0006                            __size_of_dameDistancia 0162  
                                  __pcstackCOMRAM 0001                               ??_velocidadEstandar 0054  
                                    __pidataBANK1 584A                                   _sensorIzquierda 0128  
                                   __end_of_boton 529E                                     __end_of_fputc 480A  
                                   __end_of_fputs 558E                                     __end_of_mover 4D76  
                                   __end_of_putch 5852                                     __end_of_toint 7D7B  
                               _forzarGiroDerecha 57F0                                ?_forzarGiroDerecha 0001  
                  __end_of_forzarEspejeoIzquierda 5476         comportamientoBasico@movimientosRealizados 0200  
                            __end_of_leerSensores 3D8C                                __size_of_configPwm 0050  
                       __end_of_forzarAvanceRecto 57D0                                         PID@difAnt 0136  
                       __end_of_velocidadEstandar 5740                                           ??_boton 0004  
                       ??_mostrarDireccionElegida 0009                             ??_forzarGiroIzquierda 0006  
                                         ??_fputc 000A                                           ??_fputs 0013  
                             ??_forzarGiroDerecha 0006                                           ??_mover 0008  
                                         ??_putch 0006                                        __pbssBANK0 00FF  
                                      __pbssBANK1 0100                                        __pbssBANK2 0200  
                    moverCarrito@avanceRectoLargo 008A                                     _paredEnfrente 013B  
                   __size_of_comportamientoBasico 03CA                         _visualizarPasosRealizados 4A40  
                               ?_decidirDireccion 01E6                             PID@velocidadIzquierda 008E  
                                      _efgtoa$923 008D                                        _efgtoa$932 0093  
                                      _efgtoa$924 008F                                        _efgtoa$933 0095  
                                      _efgtoa$934 0097                                        _efgtoa$928 0091  
                                   _forzarEspejeo 558E                                ??_decidirDireccion 00FB  
                                         ?___flge 0034                                           ?___fleq 0006  
                                         ?___lmul 0006                                           ?___wmul 0006  
                       __end_of_forzarGiroDerecha 5810                                           ?_efgtoa 007D  
                                   _forzarReversa 578C                                           _CCP1CON 000FBD  
                                         _CCP2CON 000FBA                                           ?_floorf 0050  
                   limpiarMovimientos@movimientos 0006                                    ___lmul@product 000E  
          decidirDireccion@cambioOrientacionCarro 01F0                                        _antiRebote 519E  
                                         ?_roundf 004C                                           ?_strcpy 0006  
                                         ?_strlen 0006                                           _T2CKPS0 007E50  
                                         _T2CKPS1 007E51                                   _regresarAlCruce 4AEC  
                                         _PID$737 0090                                           _PID$739 0094  
      probarMapeoDireccionCruces@posicionInvCruce 01EB                                           i2l11283 51E6  
                                       ?___xxtofl 000D                        __end_of_limpiarMovimientos 53E2  
                                   _dameDistancia 3EF0                                __size_of_vfpfcnvrt 05A8  
                                       ?_hayCruce 0040                                      ??_UART_write 0006  
                                   ?_moverCarrito 0088                                   __CFG_VREGEN$OFF 000000  
       comportamientoBasico@contCaminosRecorridos 01E0   probarMapeoDireccionCruces@contCaminosRecorridos 01F1  
                                         __Hparam 0000                                    ?_forzarEspejeo 0001  
                                         __Lparam 0000                                 __end_of_configPwm 5392  
                 __end_of_mostrarDireccionElegida 4DF8                                           ___aldiv 4052  
                                 __size_of___flge 0104                                    ?_forzarReversa 0001  
                                 __size_of___fleq 00AA                                           ___aodiv 3A88  
                                         ___fladd 18B0                                           ___aomod 3D8C  
                                         ___fldiv 2916                                           ___awdiv 480A  
                                         ___flneg 5646                                   __size_of___lmul 006A  
                                         ___awmod 4990                                           ___flmul 1D70  
                                         ___flsub 54BE                                           ___fltol 4266  
                                 __size_of___wmul 0026                                           ___lwdiv 4E72  
                                       ?_vfprintf 00DF             probarMapeoDireccionCruces@caminoFinal 01E6  
                                 __size_of_efgtoa 0BBA                                   __CFG_STVREN$OFF 000000  
                                 __size_of_floorf 0216                                           __pcinit 51F6  
                                         __ramtop 0800                                __end_of_UART_write 5840  
                           __end_of_velocidadBaja 5766                                           __ptext0 4C42  
                                         __ptext1 4A40                                           __ptext2 53E2  
                                         __ptext3 5840                                           __ptext4 5342  
                                         __ptext5 219A                                           __ptext6 4AEC  
                                         __ptext7 4CDC                                           __ptext8 2F90  
                                         __ptext9 2564                                   __size_of_roundf 03B2  
                                    __size_of_PID 0252                                   __size_of_strcpy 005C  
                                 __size_of_strlen 0036                              __size_of_UART_printf 005E  
                                    __size_of_abs 0040                                      __size_of_pad 00C2  
                                    __size_of_map 007A                                           _isdigit 567E  
                                      ??___xxtofl 0011                                  ___awmod@dividend 0006  
                                  ?_dameDistancia 001B                                  ___aldiv@dividend 0012  
                                         _isspace 52F0                       ?_probarMapeoDireccionCruces 01E6  
                                         _isupper 560E                                           efgtoa@c 0083  
                                         efgtoa@d 00A1                                           efgtoa@e 00B9  
                                         efgtoa@f 007F                                           efgtoa@g 00B5  
                                         efgtoa@h 00AB                                           efgtoa@i 00B3  
                                         efgtoa@l 00AF                                           efgtoa@m 009D  
                                         efgtoa@n 00BB                                           efgtoa@p 00A5  
                                         efgtoa@t 0099                                           efgtoa@u 00BD  
                                         efgtoa@w 00A8                        __size_of_forzarAvanceRecto 0022  
                                      ??_hayCruce 0043                                           _pwmDuty 33F8  
                                         atoi@neg 0013                        __size_of_velocidadEstandar 0026  
                                         _sprintf 529E                                           _tolower 502A  
                                         _strncmp 466A                                    __pintcode_body 524A  
                            end_of_initialization 523C                                    ??_moverCarrito 008C  
                                         floorf@e 0077                                           floorf@m 0073  
                                         floorf@u 0079                                           floorf@x 0050  
                     decidirDireccion@caminoFinal 01F8                  decidirDireccion@direccionElegida 0054  
                                         fputc@fp 0008                                     __Lmediumconst 7D76  
                                         int_func 524A                                           fputs@fp 0011  
                                       i2u1230_47 51C6                                         i2u1229_47 5282  
                          _SENSOR_PRIORIDAD_MEDIA 01FD                                 ?_seLlegoAlDestino 0001  
                               __end_of_vfpfcnvrt 18B0                                        efgtoa@mode 00AA  
                                      efgtoa@sign 00A3                                         _RCSTAbits 000FAB  
                                ___aldiv@quotient 001C                  decidirDireccion@avanceRectoLargo 01F6  
                                         postdec1 000FE5                                           postdec2 000FDD  
                         __end_of_regresarAlCruce 4B98                                           postinc0 000FEE  
                                         postinc1 000FE6                                           postinc2 000FDE  
                         __size_of_forzarParoAuto 001A                                           roundf@e 0064  
                                         roundf@u 006A                                           roundf@x 004C  
                                         roundf@y 006E                        __size_of_forzarGiroDerecha 0020  
                              ??_seLlegoAlDestino 000B                                        ??_vfprintf 0054  
                           __end_of_configurarAdc 584A                                           strcpy@d 000E  
                                         strlen@a 0008                                           strcpy@s 000C  
                                         strlen@s 0006                                       ?_antiRebote 0001  
                                       _PORTBbits 000F81                                         _UART_init 4EE6  
                           __size_of_leerSensores 017C                                       ___fladd@grs 0043  
                                     pwmDuty@duty 0084                                     ___xxtofl@sign 0015  
                                       _TRISDbits 000F95                                       ___fldiv@grs 0067  
                              _oldSensorIzquierda 011C                                       ___fldiv@rem 0060  
            comportamientoBasico@posicionInvCruce 01E1                                        map@out_max 0030  
                                      map@out_min 002C                                       ___flmul@grs 0029  
                                  _UART_init$1825 0028                                         _TXSTAbits 000FAC  
                                 ??_forzarEspejeo 0055                                   ??_forzarReversa 0006  
                   regresarAlCruce@numMovimientos 009C                                      _leerSensores 3C10  
              __size_of_visualizarPasosRealizados 00AC                                    __end_of___flge 4472  
                                  __end_of___fleq 4C42                                    __end_of___lmul 4FC0  
                                     vfpfcnvrt@ap 00C5                                       vfpfcnvrt@ct 00DB  
                                     vfpfcnvrt@fp 00C1                                       vfpfcnvrt@ll 00CB  
                                  __end_of___wmul 578C                                    __end_of_efgtoa 0BCC  
                                  __end_of_floorf 33F8                                        ?_UART_init 0020  
                                      floorf@F524 0104                      __end_of_forzarEspejeoDerecha 54BE  
                                 ??_dameDistancia 001F             comportamientoBasico@investigandoCruce 01E2  
                                  __end_of_roundf 2916                           __size_of_dameLecturaAdc 0046  
                                  __end_of_strcpy 5144                                    __end_of_strlen 56EC  
                             start_initialization 51F6                               PID@velocidadDerecha 0092  
                                     __end_of_PID 31E2                                       __end_of_abs 560E  
                                     __end_of_pad 4990                                       __end_of_map 4E72  
                                regresarAlCruce@i 009E                               __size_of_antiRebote 0058  
                           __end_of___fpclassifyf 4570                               pwmDuty@cicloTrabajo 007C  
                                     vfprintf@fmt 00E1                                          ??___flge 003C  
                                        ??___fleq 000E                                          ??___lmul 000E  
                                        ??___wmul 000A                                  ?_regresarAlCruce 009A  
        probarMapeoDireccionCruces@cruceDetectado 01EF                                  _oldSensorDerecha 0120  
                      comportamientoBasico@mapear 01E4                                    _sensorEnfrente 0124  
                                        ??_efgtoa 0084                                       __pdataBANK1 01FA  
                                        ??_floorf 006D                                  __CFG_LPT1OSC$OFF 000000  
                    __end_of_comportamientoBasico 2564                 __end_of_visualizarPasosRealizados 4AEC  
                            __end_of_moverCarrito 4266                                          ??_roundf 0050  
                                        ??_strcpy 000A                                          ??_strlen 0008  
                                       ___fladd@a 0038                                         ___fladd@b 0034  
                       __size_of_decidirDireccion 073C                       __end_of_forzarGiroIzquierda 57F0  
                                       ___fldiv@a 0048                                         ___fldiv@b 0044  
                                    _llegoDestino 00FF                                         ___flmul@a 001F  
                                       ___flmul@b 001B                                       __pbssCOMRAM 0055  
                                       ___flsub@a 0048                                         ___flsub@b 0044  
                comportamientoBasico@caminoActual 01DF                                     __pcstackBANK0 0060  
                                   __pcstackBANK1 01E6                                     __pcstackBANK2 02C8  
                                ___aodiv@dividend 0006                                 __size_of___xxtofl 01B4  
                         hayCruce@caminosRecorrer 0040                                 __size_of_hayCruce 0190  
                 decidirDireccion@caminosRecorrer 01E6                                      _paredDerecha 013A  
                              _limpiarMovimientos 5392                                 UART_printf@cadena 0007  
                                        PID@error 0098                                         _atoi$1427 0015  
                                       _atoi$1428 0019                                         _atoi$1429 0017  
                       _DISTANCIA_PRIORIDAD_MEDIA 0110                                  ___lwdiv@dividend 0006  
                                       __pintcode 0008                               ?_limpiarMovimientos 0006  
                                   __pmediumconst 7D76                                    _forzarParoAuto 5810  
                                        ?___aldiv 0012                                          ?___aodiv 0006  
                                        ?___fladd 0034                                          ?___aomod 0006  
                                        ?___fldiv 0044                                          ?___awdiv 0006  
                                ___aodiv@quotient 0018                                          ?___flneg 0006  
                                        ?___awmod 0006                                          ?___flmul 001B  
                                        ?___flsub 0044                                          ?___fltol 0072  
                                        ?___lwdiv 0006                                         _configPwm 5342  
                                  _paredIzquierda 0139                                       ??_UART_init 0024  
                               __size_of_vfprintf 006A                                          ?_isdigit 0006  
                        ?_mostrarDireccionElegida 0001                                          ?_isspace 0006  
                                        ?_isupper 0006        comportamientoBasico@cambioOrientacionCarro 01DE  
                                        ?_pwmDuty 007C                              ??_limpiarMovimientos 000A  
                                ___lwdiv@quotient 000B                                    __size_of_boton 5296  
                                        ?_sprintf 00E7                                          ?_tolower 000C  
                                  __size_of_fputc 00CA                                    __size_of_fputs 0044  
                                        _PID$1826 008A                                          ?_strncmp 0006  
                                  __size_of_mover 009A             decidirDireccion@contCaminosRecorridos 01EC  
                                  __size_of_putch 0002                                   ___aldiv@divisor 0016  
                                 ___aldiv@counter 001A                                    ___wmul@product 000A  
               decidirDireccion@investigandoCruce 01E8                      seLlegoAlDestino@llegoDestino 000B  
                            _forzarEspejeoDerecha 5476                            __end_of_forzarParoAuto 582A  
                                        i2u774_40 51B2                                          i2u774_41 51AE  
                                        i2u775_40 51C0                                          i2u775_41 51BC  
                                        i2u794_40 525A                                          i2u794_41 5256  
                                        i2u795_40 5272                                          i2u795_41 526E  
                                __CFG_WDTPS$32768 000000                          ??_forzarEspejeoIzquierda 0054  
                                   ??_UART_printf 0009                                      ??_antiRebote 0001  
                                       _vfpfcnvrt 1308                                        ?_configPwm 0001  
                                       map@in_max 0028                                         map@in_min 0024  
                          decidirDireccion@mapear 01F2                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0006                                  configPwm@channel 0008  
                                  _dameLecturaAdc 5504                                    UART_write@dato 0006  
                       __size_of_seLlegoAlDestino 002E                                      _isspace$1458 000C  
                                      vfpfcnvrt@c 00DE                                        vfpfcnvrt@f 00D7  
                               ___lmul@multiplier 0006                                       _INTCON2bits 000FF1  
                                       copy_data0 520A                              _comportamientoBasico 219A  
                                _caminoEncontrado 0059                             ?_forzarEspejeoDerecha 0001  
                          __size_of_velocidadBaja 0026                                __end_of_antiRebote 51F6  
                                      roundf@F525 0100                                          __Hrparam 0000  
                                 ?_forzarParoAuto 0001                                     UART_init@BAUD 0020  
                                   _sensorDerecha 012C                                        vfprintf@ap 00E3  
                                        __Lrparam 0000                                        vfprintf@fp 00DF  
                           __size_of_moverCarrito 0108                                    _posicionCarroX 013F  
                                  _posicionCarroY 013E                                  __size_of___aldiv 010C  
                                __size_of___aodiv 0188                                  __size_of___fladd 04C0  
                                __size_of___aomod 0164                                  __size_of___fldiv 039C  
                                __size_of___awdiv 00C4                                  __size_of___flneg 0038  
                                __size_of___awmod 00B0                                  __size_of___flmul 042A  
                                __size_of___flsub 0046                                  __size_of___fltol 0108  
                                      ?_vfpfcnvrt 00C1                                  __size_of___lwdiv 0074  
                          __end_of_dameLecturaAdc 554A                                   ___aodiv@divisor 000E  
          probarMapeoDireccionCruces@caminoActual 01E8                                   ___aodiv@counter 0016  
                              ___fpclassifyf@F463 0108                               hayCruce@contCaminos 0043  
                                _decidirDireccion 0BCC                                        sprintf@fmt 00E9  
                                        ___xxtofl 35B4                               __end_of_UART_printf 50E8  
                                __size_of_isdigit 0038                                          _dtoa$900 0033  
                                 ___lwdiv@divisor 0008                                          _hayCruce 38F8  
                                __size_of_isspace 0052                                   ___lwdiv@counter 000A  
                                        __ptext10 4570                                          __ptext11 415E  
                                        __ptext20 57AE                                          __ptext12 558E  
                                        __ptext21 5392                                          __ptext13 542E  
                                        __ptext30 35B4                                          __ptext22 3C10  
                                        __ptext14 57D0                                          __ptext31 529E  
                                        __ptext23 3EF0                                          __ptext15 5476  
                                        __ptext40 4472                                          __ptext32 4FC0  
                                        __ptext24 4E72                                          __ptext16 571A  
                                        __ptext41 4266                                          __ptext33 1308  
                                        __ptext25 0BCC                                          __ptext17 578C  
                                        __ptext50 2CB2                                          __ptext42 54BE  
                                        __ptext34 466A                                          __ptext26 5740  
                                        __ptext18 5810                                          __ptext51 55CE  
                                        __ptext43 18B0                                          __ptext35 0012  
                                        __ptext27 33F8                                          __ptext19 57F0  
                                        __ptext60 3768                                          __ptext52 3D8C  
                                        __ptext44 5646                                          __ptext36 502A  
                                        __ptext28 4DF8                                          __ptext61 52F0  
                                        __ptext53 3A88                                          __ptext45 1D70  
                                        __ptext37 560E                                          __ptext29 4F56  
                                        __ptext70 436E                                          __ptext62 567E  
                                        __ptext54 5144                                          __ptext46 4B98  
                                        __ptext38 50E8                                          __ptext71 4EE6  
                                        __ptext63 5766                                          __ptext55 48CE  
                                        __ptext47 2916                                          __ptext39 31E2  
                                        __ptext72 4052                                          __ptext64 56EC  
                                        __ptext56 56B6                                          __ptext48 4990  
                                        __ptext65 5504                                          __ptext57 554A  
                                        __ptext49 480A                                          __ptext74 519E  
                                        __ptext66 4D76                                          __ptext58 4740  
                                        __ptext67 508A                                          __ptext59 5850  
                                        __ptext68 582A                                          __ptext69 38F8  
                                __size_of_isupper 0038                                  __size_of_pwmDuty 01BC  
                probarMapeoDireccionCruces@mapear 01ED           __end_of_inicializarComportamientoBasico 542E  
        __size_of_inicializarComportamientoBasico 004C                 ??_inicializarComportamientoBasico 0054  
                ?_inicializarComportamientoBasico 0001                   _inicializarComportamientoBasico 53E2  
                                __size_of_sprintf 0052                                  __size_of_tolower 0060  
                                   antiRebote@pin 0003                                        strcpy@dest 0006  
                                __size_of_strncmp 00D6                             ?_comportamientoBasico 0001  
              comportamientoBasico@cruceDetectado 01E3                                      _moverCarrito 415E  
                          __size_of_configurarAdc 000A                                     __size_of_atoi 0190  
                                   __size_of_ctoa 005A                                     __size_of_main 009A  
                                   __size_of_dtoa 02DE                             __end_of_forzarEspejeo 55CE  
                                        efgtoa@fp 007D                                          efgtoa@ne 009F  
                                        efgtoa@pp 009B                                          efgtoa@ou 0089  
            comportamientoBasico@direccionElegida 00FE                             __end_of_forzarReversa 57AE  
                                        int$flags 005A                           dameLecturaAdc@canalLeer 000A  
                                        _vfprintf 4FC0                   __size_of_forzarEspejeoIzquierda 0048  
                                     ??_configPwm 0006                                   ?_dameLecturaAdc 0006  
                                ___aomod@dividend 0006                             __CFG_CPUDIV$OSC1_PLL2 000000  
                                   _velocidadBaja 5740              comportamientoBasico@avanceRectoLargo 01DD  
                    decidirDireccion@caminoActual 01EE                    decidirDireccion@cruceDetectado 01F4  
                                      _INTCONbits 000FF2                             __end_of_dameDistancia 4052  
                             limpiarMovimientos@i 000C                                  _crucesRecorridos 0140  
                                        isdigit@c 0006                                          intlevel2 0000  
                                       sprintf@ap 00F3                            ??_forzarEspejeoDerecha 0054  
                                        isspace@c 0006                                         strcpy@src 0008  
                                        isupper@c 0006                                         strncmp@_l 0006  
                                       strncmp@_r 0008                                       efgtoa@nmode 00A7  
                                 ___aomod@divisor 000E                                       ??_vfpfcnvrt 00C7  
                                 ___aomod@counter 0016                                     _vfpfcnvrt$954 00D5  
                                   _vfpfcnvrt$948 00D3                                       _UART_printf 508A  
                                   _configurarAdc 5840                                    ?_velocidadBaja 0001  
                      ?_visualizarPasosRealizados 00FB                                    pwmDuty@channel 007E  
                                        sprintf@f 00F5                                          tolower@c 000C  
                                        sprintf@s 00E7                            __size_of___fpclassifyf 00FE  
                        __size_of_regresarAlCruce 00AC                                  _seLlegoAlDestino 56EC  
                                        strncmp@l 000D                                          strncmp@n 000A  
                                        strncmp@r 000F                comportamientoBasico@carroEspejeado 01E5  
                                    ___aldiv@sign 001B                        moverCarrito@carroEspejeado 0088  
                    ??_probarMapeoDireccionCruces 00FB                                     ___fladd@signs 0040  
                          ??_comportamientoBasico 02C8                                        _UART_write 582A  
                          _forzarEspejeoIzquierda 542E                      __size_of_forzarGiroIzquierda 0020  
                                    ___aodiv@sign 0017                                      ___fladd@aexp 0041  
                                    ___fladd@bexp 0042                  __size_of_mostrarDireccionElegida 0082  
                      regresarAlCruce@movimientos 009A                                      ___aomod@sign 0017  
                                     _roundf$1827 0066                                       _roundf$1828 0060  
