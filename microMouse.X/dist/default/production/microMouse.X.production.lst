

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 13 02:16:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98  0000                     
    99                           ; Version 2.10
   100                           ; Generated 31/07/2019 GMT
   101                           ; 
   102                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F4550 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataBANK1
   135  005518                     __pidataBANK1:
   136                           	opt callstack 0
   137                           
   138                           ;initializer for _pausa
   139  005518  01                 	db	1
   140                           
   141                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   142  005519  03                 	db	3
   143                           
   144                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   145  00551A  02                 	db	2
   146                           
   147                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   148  00551B  01                 	db	1
   149                           
   150                           	psect	mediumconst
   151  007E8C                     __pmediumconst:
   152                           	opt callstack 0
   153  007E8C  00                 	db	0
   154  007E8D  0000               	dw	0
   155  007E8F  4B00               	dw	19200
   156  007E91                     __end_of_toint:
   157                           	opt callstack 0
   158  0000                     _T1CON	set	4045
   159  0000                     _TRISDbits	set	3989
   160  0000                     _INTCON2bits	set	4081
   161  0000                     _INTCONbits	set	4082
   162  0000                     _ADRESL	set	4035
   163  0000                     _ADRESH	set	4036
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON2	set	4032
   166  0000                     _ADCON1	set	4033
   167  0000                     _TXREG	set	4013
   168  0000                     _RCREG	set	4014
   169  0000                     _RCSTAbits	set	4011
   170  0000                     _TXSTAbits	set	4012
   171  0000                     _SPBRG	set	4015
   172  0000                     _PORTBbits	set	3969
   173  0000                     _TMR1L	set	4046
   174  0000                     _TMR1H	set	4047
   175  0000                     _PR2	set	4043
   176  0000                     _CCP2CON	set	4026
   177  0000                     _CCPR2L	set	4027
   178  0000                     _CCP1CON	set	4029
   179  0000                     _CCPR1L	set	4030
   180  0000                     _TRISB0	set	31896
   181  0000                     _TRISB7	set	31903
   182  0000                     _TRISB6	set	31902
   183  0000                     _TRISB5	set	31901
   184  0000                     _TRISB4	set	31900
   185  0000                     _TRISB3	set	31899
   186  0000                     _TRISB2	set	31898
   187  0000                     _TRISB1	set	31897
   188  0000                     _TRISD3	set	31915
   189  0000                     _LATB7	set	31831
   190  0000                     _LATB6	set	31830
   191  0000                     _LATB5	set	31829
   192  0000                     _LATB4	set	31828
   193  0000                     _LATD2	set	31842
   194  0000                     _INT0IF	set	32657
   195  0000                     _RCIF	set	31989
   196  0000                     _TRISC7	set	31911
   197  0000                     _TRISC6	set	31910
   198  0000                     _TMR1IF	set	31984
   199  0000                     _TMR1ON	set	32360
   200  0000                     _LATD3	set	31843
   201  0000                     _TMR2ON	set	32338
   202  0000                     _CCP2M2	set	32210
   203  0000                     _CCP2M3	set	32211
   204  0000                     _TRISC1	set	31905
   205  0000                     _CCP1M2	set	32234
   206  0000                     _CCP1M3	set	32235
   207  0000                     _TRISC2	set	31906
   208  0000                     _T2CKPS1	set	32337
   209  0000                     _T2CKPS0	set	32336
   210  007E91                     STR_13:
   211  007E91  0A                 	db	10
   212  007E92  0A                 	db	10
   213  007E93  4F                 	db	79	;'O'
   214  007E94  56                 	db	86	;'V'
   215  007E95  45                 	db	69	;'E'
   216  007E96  52                 	db	82	;'R'
   217  007E97  46                 	db	70	;'F'
   218  007E98  4C                 	db	76	;'L'
   219  007E99  4F                 	db	79	;'O'
   220  007E9A  57                 	db	87	;'W'
   221  007E9B  20                 	db	32
   222  007E9C  65                 	db	101	;'e'
   223  007E9D  6E                 	db	110	;'n'
   224  007E9E  20                 	db	32
   225  007E9F  65                 	db	101	;'e'
   226  007EA0  6C                 	db	108	;'l'
   227  007EA1  20                 	db	32
   228  007EA2  6D                 	db	109	;'m'
   229  007EA3  61                 	db	97	;'a'
   230  007EA4  70                 	db	112	;'p'
   231  007EA5  65                 	db	101	;'e'
   232  007EA6  6F                 	db	111	;'o'
   233  007EA7  20                 	db	32
   234  007EA8  64                 	db	100	;'d'
   235  007EA9  65                 	db	101	;'e'
   236  007EAA  20                 	db	32
   237  007EAB  70                 	db	112	;'p'
   238  007EAC  61                 	db	97	;'a'
   239  007EAD  73                 	db	115	;'s'
   240  007EAE  6F                 	db	111	;'o'
   241  007EAF  73                 	db	115	;'s'
   242  007EB0  20                 	db	32
   243  007EB1  52                 	db	82	;'R'
   244  007EB2  65                 	db	101	;'e'
   245  007EB3  61                 	db	97	;'a'
   246  007EB4  6C                 	db	108	;'l'
   247  007EB5  69                 	db	105	;'i'
   248  007EB6  7A                 	db	122	;'z'
   249  007EB7  61                 	db	97	;'a'
   250  007EB8  64                 	db	100	;'d'
   251  007EB9  6F                 	db	111	;'o'
   252  007EBA  73                 	db	115	;'s'
   253  007EBB  20                 	db	32
   254  007EBC  70                 	db	112	;'p'
   255  007EBD  61                 	db	97	;'a'
   256  007EBE  72                 	db	114	;'r'
   257  007EBF  61                 	db	97	;'a'
   258  007EC0  20                 	db	32
   259  007EC1  63                 	db	99	;'c'
   260  007EC2  61                 	db	97	;'a'
   261  007EC3  6D                 	db	109	;'m'
   262  007EC4  69                 	db	105	;'i'
   263  007EC5  6E                 	db	110	;'n'
   264  007EC6  6F                 	db	111	;'o'
   265  007EC7  20                 	db	32
   266  007EC8  54                 	db	84	;'T'
   267  007EC9  6F                 	db	111	;'o'
   268  007ECA  74                 	db	116	;'t'
   269  007ECB  61                 	db	97	;'a'
   270  007ECC  6C                 	db	108	;'l'
   271  007ECD  0A                 	db	10
   272  007ECE  0A                 	db	10
   273  007ECF  00                 	db	0
   274  007ED0                     STR_12:
   275  007ED0  0A                 	db	10
   276  007ED1  0A                 	db	10
   277  007ED2  4F                 	db	79	;'O'
   278  007ED3  56                 	db	86	;'V'
   279  007ED4  45                 	db	69	;'E'
   280  007ED5  52                 	db	82	;'R'
   281  007ED6  46                 	db	70	;'F'
   282  007ED7  4C                 	db	76	;'L'
   283  007ED8  4F                 	db	79	;'O'
   284  007ED9  57                 	db	87	;'W'
   285  007EDA  20                 	db	32
   286  007EDB  65                 	db	101	;'e'
   287  007EDC  6E                 	db	110	;'n'
   288  007EDD  20                 	db	32
   289  007EDE  65                 	db	101	;'e'
   290  007EDF  6C                 	db	108	;'l'
   291  007EE0  20                 	db	32
   292  007EE1  6D                 	db	109	;'m'
   293  007EE2  61                 	db	97	;'a'
   294  007EE3  70                 	db	112	;'p'
   295  007EE4  65                 	db	101	;'e'
   296  007EE5  6F                 	db	111	;'o'
   297  007EE6  20                 	db	32
   298  007EE7  64                 	db	100	;'d'
   299  007EE8  65                 	db	101	;'e'
   300  007EE9  20                 	db	32
   301  007EEA  70                 	db	112	;'p'
   302  007EEB  61                 	db	97	;'a'
   303  007EEC  73                 	db	115	;'s'
   304  007EED  6F                 	db	111	;'o'
   305  007EEE  73                 	db	115	;'s'
   306  007EEF  20                 	db	32
   307  007EF0  52                 	db	82	;'R'
   308  007EF1  65                 	db	101	;'e'
   309  007EF2  61                 	db	97	;'a'
   310  007EF3  6C                 	db	108	;'l'
   311  007EF4  69                 	db	105	;'i'
   312  007EF5  7A                 	db	122	;'z'
   313  007EF6  61                 	db	97	;'a'
   314  007EF7  64                 	db	100	;'d'
   315  007EF8  6F                 	db	111	;'o'
   316  007EF9  73                 	db	115	;'s'
   317  007EFA  20                 	db	32
   318  007EFB  70                 	db	112	;'p'
   319  007EFC  61                 	db	97	;'a'
   320  007EFD  72                 	db	114	;'r'
   321  007EFE  61                 	db	97	;'a'
   322  007EFF  20                 	db	32
   323  007F00  63                 	db	99	;'c'
   324  007F01  72                 	db	114	;'r'
   325  007F02  75                 	db	117	;'u'
   326  007F03  63                 	db	99	;'c'
   327  007F04  65                 	db	101	;'e'
   328  007F05  0A                 	db	10
   329  007F06  0A                 	db	10
   330  007F07  00                 	db	0
   331  007F08  0D                 	db	13
   332  007F09  4C                 	db	76	;'L'
   333  007F0A  65                 	db	101	;'e'
   334  007F0B  63                 	db	99	;'c'
   335  007F0C  74                 	db	116	;'t'
   336  007F0D  75                 	db	117	;'u'
   337  007F0E  72                 	db	114	;'r'
   338  007F0F  61                 	db	97	;'a'
   339  007F10  20                 	db	32
   340  007F11  64                 	db	100	;'d'
   341  007F12  65                 	db	101	;'e'
   342  007F13  20                 	db	32
   343  007F14  73                 	db	115	;'s'
   344  007F15  65                 	db	101	;'e'
   345  007F16  6E                 	db	110	;'n'
   346  007F17  73                 	db	115	;'s'
   347  007F18  6F                 	db	111	;'o'
   348  007F19  72                 	db	114	;'r'
   349  007F1A  20                 	db	32
   350  007F1B  4F                 	db	79	;'O'
   351  007F1C  70                 	db	112	;'p'
   352  007F1D  74                 	db	116	;'t'
   353  007F1E  69                 	db	105	;'i'
   354  007F1F  63                 	db	99	;'c'
   355  007F20  6F                 	db	111	;'o'
   356  007F21  20                 	db	32
   357  007F22  3D                 	db	61	;'='
   358  007F23  20                 	db	32
   359  007F24  25                 	db	37
   360  007F25  64                 	db	100	;'d'
   361  007F26  0D                 	db	13
   362  007F27  0A                 	db	10
   363  007F28  0A                 	db	10
   364  007F29  00                 	db	0
   365  007F2A                     STR_11:
   366  007F2A  0D                 	db	13
   367  007F2B  4D                 	db	77	;'M'
   368  007F2C  6F                 	db	111	;'o'
   369  007F2D  76                 	db	118	;'v'
   370  007F2E  69                 	db	105	;'i'
   371  007F2F  6D                 	db	109	;'m'
   372  007F30  69                 	db	105	;'i'
   373  007F31  65                 	db	101	;'e'
   374  007F32  6E                 	db	110	;'n'
   375  007F33  74                 	db	116	;'t'
   376  007F34  6F                 	db	111	;'o'
   377  007F35  73                 	db	115	;'s'
   378  007F36  20                 	db	32
   379  007F37  52                 	db	82	;'R'
   380  007F38  65                 	db	101	;'e'
   381  007F39  61                 	db	97	;'a'
   382  007F3A  6C                 	db	108	;'l'
   383  007F3B  69                 	db	105	;'i'
   384  007F3C  7A                 	db	122	;'z'
   385  007F3D  61                 	db	97	;'a'
   386  007F3E  64                 	db	100	;'d'
   387  007F3F  6F                 	db	111	;'o'
   388  007F40  73                 	db	115	;'s'
   389  007F41  20                 	db	32
   390  007F42  3D                 	db	61	;'='
   391  007F43  20                 	db	32
   392  007F44  25                 	db	37
   393  007F45  64                 	db	100	;'d'
   394  007F46  0D                 	db	13
   395  007F47  0A                 	db	10
   396  007F48  0A                 	db	10
   397  007F49  00                 	db	0
   398  007F4A  0D                 	db	13
   399  007F4B  44                 	db	68	;'D'
   400  007F4C  65                 	db	101	;'e'
   401  007F4D  73                 	db	115	;'s'
   402  007F4E  74                 	db	116	;'t'
   403  007F4F  69                 	db	105	;'i'
   404  007F50  6E                 	db	110	;'n'
   405  007F51  6F                 	db	111	;'o'
   406  007F52  20                 	db	32
   407  007F53  6E                 	db	110	;'n'
   408  007F54  6F                 	db	111	;'o'
   409  007F55  20                 	db	32
   410  007F56  64                 	db	100	;'d'
   411  007F57  65                 	db	101	;'e'
   412  007F58  74                 	db	116	;'t'
   413  007F59  65                 	db	101	;'e'
   414  007F5A  63                 	db	99	;'c'
   415  007F5B  74                 	db	116	;'t'
   416  007F5C  61                 	db	97	;'a'
   417  007F5D  64                 	db	100	;'d'
   418  007F5E  6F                 	db	111	;'o'
   419  007F5F  20                 	db	32
   420  007F60  0D                 	db	13
   421  007F61  0A                 	db	10
   422  007F62  00                 	db	0
   423  007F63  0D                 	db	13
   424  007F64  53                 	db	83	;'S'
   425  007F65  65                 	db	101	;'e'
   426  007F66  20                 	db	32
   427  007F67  6C                 	db	108	;'l'
   428  007F68  6C                 	db	108	;'l'
   429  007F69  65                 	db	101	;'e'
   430  007F6A  67                 	db	103	;'g'
   431  007F6B  6F                 	db	111	;'o'
   432  007F6C  20                 	db	32
   433  007F6D  61                 	db	97	;'a'
   434  007F6E  6C                 	db	108	;'l'
   435  007F6F  20                 	db	32
   436  007F70  64                 	db	100	;'d'
   437  007F71  65                 	db	101	;'e'
   438  007F72  73                 	db	115	;'s'
   439  007F73  74                 	db	116	;'t'
   440  007F74  69                 	db	105	;'i'
   441  007F75  6E                 	db	110	;'n'
   442  007F76  6F                 	db	111	;'o'
   443  007F77  20                 	db	32
   444  007F78  0D                 	db	13
   445  007F79  0A                 	db	10
   446  007F7A  00                 	db	0
   447  007F7B                     STR_14:
   448  007F7B  0D                 	db	13
   449  007F7C  53                 	db	83	;'S'
   450  007F7D  65                 	db	101	;'e'
   451  007F7E  20                 	db	32
   452  007F7F  6C                 	db	108	;'l'
   453  007F80  6C                 	db	108	;'l'
   454  007F81  65                 	db	101	;'e'
   455  007F82  67                 	db	103	;'g'
   456  007F83  6F                 	db	111	;'o'
   457  007F84  20                 	db	32
   458  007F85  41                 	db	65	;'A'
   459  007F86  6C                 	db	108	;'l'
   460  007F87  20                 	db	32
   461  007F88  64                 	db	100	;'d'
   462  007F89  65                 	db	101	;'e'
   463  007F8A  73                 	db	115	;'s'
   464  007F8B  74                 	db	116	;'t'
   465  007F8C  69                 	db	105	;'i'
   466  007F8D  6E                 	db	110	;'n'
   467  007F8E  6F                 	db	111	;'o'
   468  007F8F  0D                 	db	13
   469  007F90  0A                 	db	10
   470  007F91  00                 	db	0
   471  007F92  0D                 	db	13
   472  007F93  49                 	db	73	;'I'
   473  007F94  7A                 	db	122	;'z'
   474  007F95  71                 	db	113	;'q'
   475  007F96  75                 	db	117	;'u'
   476  007F97  69                 	db	105	;'i'
   477  007F98  65                 	db	101	;'e'
   478  007F99  72                 	db	114	;'r'
   479  007F9A  64                 	db	100	;'d'
   480  007F9B  61                 	db	97	;'a'
   481  007F9C  3A                 	db	58	;':'
   482  007F9D  20                 	db	32
   483  007F9E  25                 	db	37
   484  007F9F  2E                 	db	46
   485  007FA0  32                 	db	50	;'2'
   486  007FA1  66                 	db	102	;'f'
   487  007FA2  0D                 	db	13
   488  007FA3  0A                 	db	10
   489  007FA4  00                 	db	0
   490  007FA5  0D                 	db	13
   491  007FA6  45                 	db	69	;'E'
   492  007FA7  6E                 	db	110	;'n'
   493  007FA8  66                 	db	102	;'f'
   494  007FA9  72                 	db	114	;'r'
   495  007FAA  65                 	db	101	;'e'
   496  007FAB  6E                 	db	110	;'n'
   497  007FAC  74                 	db	116	;'t'
   498  007FAD  65                 	db	101	;'e'
   499  007FAE  3A                 	db	58	;':'
   500  007FAF  20                 	db	32
   501  007FB0  25                 	db	37
   502  007FB1  2E                 	db	46
   503  007FB2  32                 	db	50	;'2'
   504  007FB3  66                 	db	102	;'f'
   505  007FB4  0D                 	db	13
   506  007FB5  0A                 	db	10
   507  007FB6  00                 	db	0
   508  007FB7  0D                 	db	13
   509  007FB8  44                 	db	68	;'D'
   510  007FB9  65                 	db	101	;'e'
   511  007FBA  72                 	db	114	;'r'
   512  007FBB  65                 	db	101	;'e'
   513  007FBC  63                 	db	99	;'c'
   514  007FBD  68                 	db	104	;'h'
   515  007FBE  61                 	db	97	;'a'
   516  007FBF  3A                 	db	58	;':'
   517  007FC0  20                 	db	32
   518  007FC1  25                 	db	37
   519  007FC2  2E                 	db	46
   520  007FC3  32                 	db	50	;'2'
   521  007FC4  66                 	db	102	;'f'
   522  007FC5  0D                 	db	13
   523  007FC6  0A                 	db	10
   524  007FC7  00                 	db	0
   525  007FC8                     STR_8:
   526  007FC8  49                 	db	73	;'I'
   527  007FC9  7A                 	db	122	;'z'
   528  007FCA  71                 	db	113	;'q'
   529  007FCB  75                 	db	117	;'u'
   530  007FCC  69                 	db	105	;'i'
   531  007FCD  65                 	db	101	;'e'
   532  007FCE  72                 	db	114	;'r'
   533  007FCF  64                 	db	100	;'d'
   534  007FD0  61                 	db	97	;'a'
   535  007FD1  0A                 	db	10
   536  007FD2  00                 	db	0
   537  007FD3                     STR_7:
   538  007FD3  45                 	db	69	;'E'
   539  007FD4  6E                 	db	110	;'n'
   540  007FD5  66                 	db	102	;'f'
   541  007FD6  72                 	db	114	;'r'
   542  007FD7  65                 	db	101	;'e'
   543  007FD8  6E                 	db	110	;'n'
   544  007FD9  74                 	db	116	;'t'
   545  007FDA  65                 	db	101	;'e'
   546  007FDB  0A                 	db	10
   547  007FDC  00                 	db	0
   548  007FDD                     STR_9:
   549  007FDD  44                 	db	68	;'D'
   550  007FDE  65                 	db	101	;'e'
   551  007FDF  72                 	db	114	;'r'
   552  007FE0  65                 	db	101	;'e'
   553  007FE1  63                 	db	99	;'c'
   554  007FE2  68                 	db	104	;'h'
   555  007FE3  61                 	db	97	;'a'
   556  007FE4  0A                 	db	10
   557  007FE5  00                 	db	0
   558  007FE6                     STR_10:
   559  007FE6  41                 	db	65	;'A'
   560  007FE7  6C                 	db	108	;'l'
   561  007FE8  74                 	db	116	;'t'
   562  007FE9  6F                 	db	111	;'o'
   563  007FEA  0A                 	db	10
   564  007FEB  00                 	db	0
   565  007FEC                     STR_15:
   566  007FEC  49                 	db	73	;'I'
   567  007FED  4E                 	db	78	;'N'
   568  007FEE  46                 	db	70	;'F'
   569  007FEF  00                 	db	0
   570  007FF0                     STR_19:
   571  007FF0  4E                 	db	78	;'N'
   572  007FF1  41                 	db	65	;'A'
   573  007FF2  4E                 	db	78	;'N'
   574  007FF3  00                 	db	0
   575  007FF4                     STR_16:
   576  007FF4  69                 	db	105	;'i'
   577  007FF5  6E                 	db	110	;'n'
   578  007FF6  66                 	db	102	;'f'
   579  007FF7  00                 	db	0
   580  007FF8                     STR_20:
   581  007FF8  6E                 	db	110	;'n'
   582  007FF9  61                 	db	97	;'a'
   583  007FFA  6E                 	db	110	;'n'
   584  007FFB  00                 	db	0
   585  007FFC                     STR_23:
   586  007FFC  6C                 	db	108	;'l'
   587  007FFD  66                 	db	102	;'f'
   588  007FFE  00                 	db	0
   589  0000                     
   590                           ; #config settings
   591  007FFF  00                 	db	0	; dummy byte at the end
   592  0000                     
   593                           	psect	cinit
   594  004B92                     __pcinit:
   595                           	opt callstack 0
   596  004B92                     start_initialization:
   597                           	opt callstack 0
   598  004B92                     __initialization:
   599                           	opt callstack 0
   600                           
   601                           ; Initialize objects allocated to BANK1 (4 bytes)
   602                           ; load TBLPTR registers with __pidataBANK1
   603  004B92  0E18               	movlw	low __pidataBANK1
   604  004B94  6EF6               	movwf	tblptrl,c
   605  004B96  0E55               	movlw	high __pidataBANK1
   606  004B98  6EF7               	movwf	tblptrh,c
   607  004B9A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   608  004B9C  6EF8               	movwf	tblptru,c
   609  004B9E  EE01  F0D3         	lfsr	0,__pdataBANK1
   610  004BA2  EE10 F004          	lfsr	1,4
   611  004BA6                     copy_data0:
   612  004BA6  0009               	tblrd		*+
   613  004BA8  CFF5 FFEE          	movff	tablat,postinc0
   614  004BAC  50E5               	movf	postdec1,w,c
   615  004BAE  50E1               	movf	fsr1l,w,c
   616  004BB0  E1FA               	bnz	copy_data0
   617                           
   618                           ; Clear objects allocated to BIGRAM (1000 bytes)
   619  004BB2  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   620  004BB6  EE13 F0E8          	lfsr	1,1000
   621  004BBA                     clear_0:
   622  004BBA  6AEE               	clrf	postinc0,c
   623  004BBC  50E5               	movf	postdec1,w,c
   624  004BBE  50E1               	movf	fsr1l,w,c
   625  004BC0  E1FC               	bnz	clear_0
   626  004BC2  50E2               	movf	fsr1h,w,c
   627  004BC4  E1FA               	bnz	clear_0
   628                           
   629                           ; Clear objects allocated to BANK2 (200 bytes)
   630  004BC6  EE02  F000         	lfsr	0,__pbssBANK2
   631  004BCA  0EC8               	movlw	200
   632  004BCC                     clear_1:
   633  004BCC  6AEE               	clrf	postinc0,c
   634  004BCE  06E8               	decf	wreg,f,c
   635  004BD0  E1FD               	bnz	clear_1
   636                           
   637                           ; Clear objects allocated to BANK1 (204 bytes)
   638  004BD2  EE01  F000         	lfsr	0,__pbssBANK1
   639  004BD6  0ECC               	movlw	204
   640  004BD8                     clear_2:
   641  004BD8  6AEE               	clrf	postinc0,c
   642  004BDA  06E8               	decf	wreg,f,c
   643  004BDC  E1FD               	bnz	clear_2
   644                           
   645                           ; Clear objects allocated to BANK0 (6 bytes)
   646  004BDE  0100               	movlb	0
   647  004BE0  6BFE               	clrf	(__pbssBANK0+5)& (0+255),b
   648  004BE2  6BFD               	clrf	(__pbssBANK0+4)& (0+255),b
   649  004BE4  6BFC               	clrf	(__pbssBANK0+3)& (0+255),b
   650  004BE6  6BFB               	clrf	(__pbssBANK0+2)& (0+255),b
   651  004BE8  6BFA               	clrf	(__pbssBANK0+1)& (0+255),b
   652  004BEA  6BF9               	clrf	__pbssBANK0& (0+255),b
   653                           
   654                           ; Clear objects allocated to COMRAM (5 bytes)
   655  004BEC  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   656  004BEE  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   657  004BF0  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   658  004BF2  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   659  004BF4  6A55               	clrf	__pbssCOMRAM& (0+255),c
   660  004BF6                     end_of_initialization:
   661                           	opt callstack 0
   662  004BF6                     __end_of__initialization:
   663                           	opt callstack 0
   664  004BF6  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   665  004BF8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   666  004BFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   667  004BFC  6EF8               	movwf	tblptru,c
   668  004BFE  0100               	movlb	0
   669  004C00  EFC2  F024         	goto	_main	;jump to C main() function
   670                           
   671                           	psect	bssCOMRAM
   672  000055                     __pbssCOMRAM:
   673                           	opt callstack 0
   674  000055                     _sensorIzquierda:
   675                           	opt callstack 0
   676  000055                     	ds	4
   677  000059                     _llegoDestino:
   678                           	opt callstack 0
   679  000059                     	ds	1
   680                           
   681                           	psect	bssBANK0
   682  0000F9                     __pbssBANK0:
   683                           	opt callstack 0
   684  0000F9                     _sensorDerecha:
   685                           	opt callstack 0
   686  0000F9                     	ds	4
   687  0000FD                     _mouse:
   688                           	opt callstack 0
   689  0000FD                     	ds	2
   690                           
   691                           	psect	bssBANK1
   692  000100                     __pbssBANK1:
   693                           	opt callstack 0
   694  000100                     roundf@F525:
   695                           	opt callstack 0
   696  000100                     	ds	4
   697  000104                     floorf@F524:
   698                           	opt callstack 0
   699  000104                     	ds	4
   700  000108                     ___fpclassifyf@F463:
   701                           	opt callstack 0
   702  000108                     	ds	4
   703  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   704                           	opt callstack 0
   705  00010C                     	ds	4
   706  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   707                           	opt callstack 0
   708  000110                     	ds	4
   709  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   710                           	opt callstack 0
   711  000114                     	ds	4
   712  000118                     _oldSensorEnfrente:
   713                           	opt callstack 0
   714  000118                     	ds	4
   715  00011C                     _oldSensorIzquierda:
   716                           	opt callstack 0
   717  00011C                     	ds	4
   718  000120                     _oldSensorDerecha:
   719                           	opt callstack 0
   720  000120                     	ds	4
   721  000124                     _sensorEnfrente:
   722                           	opt callstack 0
   723  000124                     	ds	4
   724  000128                     _nout:
   725                           	opt callstack 0
   726  000128                     	ds	2
   727  00012A                     _width:
   728                           	opt callstack 0
   729  00012A                     	ds	2
   730  00012C                     _prec:
   731                           	opt callstack 0
   732  00012C                     	ds	2
   733  00012E                     _flags:
   734                           	opt callstack 0
   735  00012E                     	ds	2
   736  000130                     PID@difAnt:
   737                           	opt callstack 0
   738  000130                     	ds	2
   739  000132                     comportamientoBasico@caminoEncontrado:
   740                           	opt callstack 0
   741  000132                     	ds	1
   742  000133                     comportamientoBasico@cruceDetectado:
   743                           	opt callstack 0
   744  000133                     	ds	1
   745  000134                     comportamientoBasico@mapear:
   746                           	opt callstack 0
   747  000134                     	ds	1
   748  000135                     comportamientoBasico@espejearCarroY:
   749                           	opt callstack 0
   750  000135                     	ds	1
   751  000136                     _paredIzquierda:
   752                           	opt callstack 0
   753  000136                     	ds	1
   754  000137                     _paredDerecha:
   755                           	opt callstack 0
   756  000137                     	ds	1
   757  000138                     _paredEnfrente:
   758                           	opt callstack 0
   759  000138                     	ds	1
   760  000139                     _posicionDestinoY:
   761                           	opt callstack 0
   762  000139                     	ds	1
   763  00013A                     _posicionDestinoX:
   764                           	opt callstack 0
   765  00013A                     	ds	1
   766  00013B                     _posicionCarroY:
   767                           	opt callstack 0
   768  00013B                     	ds	1
   769  00013C                     _posicionCarroX:
   770                           	opt callstack 0
   771  00013C                     	ds	1
   772  00013D                     _dbuf:
   773                           	opt callstack 0
   774  00013D                     	ds	80
   775  00018D                     _buffer:
   776                           	opt callstack 0
   777  00018D                     	ds	50
   778  0001BF                     comportamientoBasico@caminosRecorrer:
   779                           	opt callstack 0
   780  0001BF                     	ds	3
   781  0001C2                     comportamientoBasico@numMovimientosTotales:
   782                           	opt callstack 0
   783  0001C2                     	ds	2
   784  0001C4                     comportamientoBasico@numMovimientos:
   785                           	opt callstack 0
   786  0001C4                     	ds	2
   787  0001C6                     comportamientoBasico@cambioOrientacionCarro:
   788                           	opt callstack 0
   789  0001C6                     	ds	1
   790  0001C7                     comportamientoBasico@caminoActual:
   791                           	opt callstack 0
   792  0001C7                     	ds	1
   793  0001C8                     comportamientoBasico@contCaminosRecorridos:
   794                           	opt callstack 0
   795  0001C8                     	ds	1
   796  0001C9                     comportamientoBasico@posicionInvCruce:
   797                           	opt callstack 0
   798  0001C9                     	ds	1
   799  0001CA                     comportamientoBasico@investigandoCruce:
   800                           	opt callstack 0
   801  0001CA                     	ds	1
   802  0001CB                     comportamientoBasico@carroEspejeado:
   803                           	opt callstack 0
   804  0001CB                     	ds	1
   805                           
   806                           	psect	dataBANK1
   807  0001D3                     __pdataBANK1:
   808                           	opt callstack 0
   809  0001D3                     _pausa:
   810                           	opt callstack 0
   811  0001D3                     	ds	1
   812  0001D4                     _SENSOR_PRIORIDAD_BAJA:
   813                           	opt callstack 0
   814  0001D4                     	ds	1
   815  0001D5                     _SENSOR_PRIORIDAD_MEDIA:
   816                           	opt callstack 0
   817  0001D5                     	ds	1
   818  0001D6                     _SENSOR_PRIORIDAD_ALTA:
   819                           	opt callstack 0
   820  0001D6                     	ds	1
   821                           
   822                           	psect	bssBANK2
   823  000200                     __pbssBANK2:
   824                           	opt callstack 0
   825  000200                     comportamientoBasico@movimientosRealizados:
   826                           	opt callstack 0
   827  000200                     	ds	200
   828                           
   829                           	psect	bssBIGRAM
   830  0002C8                     __pbssBIGRAM:
   831                           	opt callstack 0
   832  0002C8                     comportamientoBasico@caminoFinal:
   833                           	opt callstack 0
   834  0002C8                     	ds	1000
   835                           
   836                           	psect	cstackBANK1
   837  0001CC                     __pcstackBANK1:
   838                           	opt callstack 0
   839  0001CC                     visualizarPasosRealizados@numMovimientos:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x0
   843  0001CC                     	ds	2
   844  0001CE                     ??_visualizarPasosRealizados:
   845                           
   846                           ; 1 bytes @ 0x2
   847  0001CE                     	ds	4
   848  0001D2                     main@iniciado:
   849                           	opt callstack 0
   850                           
   851                           ; 1 bytes @ 0x6
   852  0001D2                     	ds	1
   853                           
   854                           	psect	cstackBANK0
   855  000060                     __pcstackBANK0:
   856                           	opt callstack 0
   857  000060                     ___fldiv@rem:
   858                           	opt callstack 0
   859  000060                     _roundf$1820:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x0
   863  000060                     	ds	4
   864  000064                     ___fldiv@sign:
   865                           	opt callstack 0
   866  000064                     roundf@e:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x4
   870  000064                     	ds	1
   871  000065                     ___fldiv@new_exp:
   872                           	opt callstack 0
   873                           
   874                           ; 2 bytes @ 0x5
   875  000065                     	ds	1
   876  000066                     _roundf$1819:
   877                           	opt callstack 0
   878                           
   879                           ; 4 bytes @ 0x6
   880  000066                     	ds	1
   881  000067                     ___fldiv@grs:
   882                           	opt callstack 0
   883                           
   884                           ; 4 bytes @ 0x7
   885  000067                     	ds	3
   886  00006A                     roundf@u:
   887                           	opt callstack 0
   888                           
   889                           ; 4 bytes @ 0xA
   890  00006A                     	ds	1
   891  00006B                     ___fldiv@bexp:
   892                           	opt callstack 0
   893                           
   894                           ; 1 bytes @ 0xB
   895  00006B                     	ds	1
   896  00006C                     ___fldiv@aexp:
   897                           	opt callstack 0
   898                           
   899                           ; 1 bytes @ 0xC
   900  00006C                     	ds	1
   901  00006D                     ??_floorf:
   902                           
   903                           ; 1 bytes @ 0xD
   904  00006D                     	ds	1
   905  00006E                     roundf@y:
   906                           	opt callstack 0
   907                           
   908                           ; 4 bytes @ 0xE
   909  00006E                     	ds	4
   910  000072                     ?___fltol:
   911                           	opt callstack 0
   912  000072                     ___fltol@f1:
   913                           	opt callstack 0
   914                           
   915                           ; 4 bytes @ 0x12
   916  000072                     	ds	1
   917  000073                     floorf@m:
   918                           	opt callstack 0
   919                           
   920                           ; 4 bytes @ 0x13
   921  000073                     	ds	3
   922  000076                     ??___fltol:
   923                           
   924                           ; 1 bytes @ 0x16
   925  000076                     	ds	1
   926  000077                     floorf@e:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x17
   930  000077                     	ds	2
   931  000079                     floorf@u:
   932                           	opt callstack 0
   933                           
   934                           ; 4 bytes @ 0x19
   935  000079                     	ds	1
   936  00007A                     ___fltol@sign1:
   937                           	opt callstack 0
   938                           
   939                           ; 1 bytes @ 0x1A
   940  00007A                     	ds	1
   941  00007B                     ___fltol@exp1:
   942                           	opt callstack 0
   943                           
   944                           ; 1 bytes @ 0x1B
   945  00007B                     	ds	1
   946  00007C                     pwmDuty@cicloTrabajo:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x1C
   950  00007C                     	ds	1
   951  00007D                     ?_efgtoa:
   952                           	opt callstack 0
   953  00007D                     efgtoa@fp:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x1D
   957  00007D                     	ds	1
   958  00007E                     pwmDuty@channel:
   959                           	opt callstack 0
   960                           
   961                           ; 1 bytes @ 0x1E
   962  00007E                     	ds	1
   963  00007F                     ??_pwmDuty:
   964  00007F                     efgtoa@f:
   965                           	opt callstack 0
   966                           
   967                           ; 4 bytes @ 0x1F
   968  00007F                     	ds	4
   969  000083                     efgtoa@c:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0x23
   973  000083                     	ds	1
   974  000084                     ??_efgtoa:
   975  000084                     pwmDuty@duty:
   976                           	opt callstack 0
   977                           
   978                           ; 4 bytes @ 0x24
   979  000084                     	ds	4
   980  000088                     ??_PID:
   981  000088                     moverCarrito@carroEspejeado:
   982                           	opt callstack 0
   983                           
   984                           ; 2 bytes @ 0x28
   985  000088                     	ds	1
   986  000089                     efgtoa@ou:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x29
   990  000089                     	ds	1
   991  00008A                     ??_moverCarrito:
   992  00008A                     _PID$1818:
   993                           	opt callstack 0
   994                           
   995                           ; 4 bytes @ 0x2A
   996  00008A                     	ds	3
   997  00008D                     _efgtoa$922:
   998                           	opt callstack 0
   999                           
  1000                           ; 2 bytes @ 0x2D
  1001  00008D                     	ds	1
  1002  00008E                     PID@velocidadIzquierda:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x2E
  1006  00008E                     	ds	1
  1007  00008F                     _efgtoa$923:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x2F
  1011  00008F                     	ds	1
  1012  000090                     _PID$748:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x30
  1016  000090                     	ds	1
  1017  000091                     _efgtoa$927:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x31
  1021  000091                     	ds	1
  1022  000092                     PID@velocidadDerecha:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x32
  1026  000092                     	ds	1
  1027  000093                     _efgtoa$931:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x33
  1031  000093                     	ds	1
  1032  000094                     _PID$750:
  1033                           	opt callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x34
  1036  000094                     	ds	1
  1037  000095                     _efgtoa$932:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x35
  1041  000095                     	ds	1
  1042  000096                     PID@dif:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x36
  1046  000096                     	ds	1
  1047  000097                     _efgtoa$933:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x37
  1051  000097                     	ds	1
  1052  000098                     PID@error:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x38
  1056  000098                     	ds	1
  1057  000099                     efgtoa@t:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x39
  1061  000099                     	ds	1
  1062  00009A                     regresarPuntoPartida@movimientos:
  1063                           	opt callstack 0
  1064  00009A                     regresarAlCruce@movimientos:
  1065                           	opt callstack 0
  1066  00009A                     recorrerCaminoEncontrado@movimientos:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x3A
  1070  00009A                     	ds	1
  1071  00009B                     efgtoa@pp:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x3B
  1075  00009B                     	ds	1
  1076  00009C                     regresarPuntoPartida@numMovimientos:
  1077                           	opt callstack 0
  1078  00009C                     regresarAlCruce@numMovimientos:
  1079                           	opt callstack 0
  1080  00009C                     recorrerCaminoEncontrado@numMovimientos:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x3C
  1084  00009C                     	ds	1
  1085  00009D                     efgtoa@m:
  1086                           	opt callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x3D
  1089  00009D                     	ds	1
  1090  00009E                     regresarPuntoPartida@i:
  1091                           	opt callstack 0
  1092  00009E                     regresarAlCruce@i:
  1093                           	opt callstack 0
  1094  00009E                     recorrerCaminoEncontrado@i:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x3E
  1098  00009E                     	ds	1
  1099  00009F                     efgtoa@ne:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x3F
  1103  00009F                     	ds	1
  1104  0000A0                     ??_comportamientoBasico:
  1105                           
  1106                           ; 1 bytes @ 0x40
  1107  0000A0                     	ds	1
  1108  0000A1                     efgtoa@d:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x41
  1112  0000A1                     	ds	1
  1113  0000A2                     comportamientoBasico@direccionElegida:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x42
  1117  0000A2                     	ds	1
  1118  0000A3                     efgtoa@sign:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x43
  1122  0000A3                     	ds	2
  1123  0000A5                     efgtoa@p:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x45
  1127  0000A5                     	ds	2
  1128  0000A7                     efgtoa@nmode:
  1129                           	opt callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x47
  1132  0000A7                     	ds	1
  1133  0000A8                     efgtoa@w:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x48
  1137  0000A8                     	ds	2
  1138  0000AA                     efgtoa@mode:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x4A
  1142  0000AA                     	ds	1
  1143  0000AB                     efgtoa@h:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x4B
  1147  0000AB                     	ds	4
  1148  0000AF                     efgtoa@l:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x4F
  1152  0000AF                     	ds	4
  1153  0000B3                     efgtoa@i:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x53
  1157  0000B3                     	ds	2
  1158  0000B5                     efgtoa@g:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x55
  1162  0000B5                     	ds	4
  1163  0000B9                     efgtoa@e:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x59
  1167  0000B9                     	ds	2
  1168  0000BB                     efgtoa@n:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x5B
  1172  0000BB                     	ds	2
  1173  0000BD                     efgtoa@u:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x5D
  1177  0000BD                     	ds	4
  1178  0000C1                     ?_vfpfcnvrt:
  1179                           	opt callstack 0
  1180  0000C1                     vfpfcnvrt@fp:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x61
  1184  0000C1                     	ds	2
  1185  0000C3                     vfpfcnvrt@fmt:
  1186                           	opt callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x63
  1189  0000C3                     	ds	2
  1190  0000C5                     vfpfcnvrt@ap:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x65
  1194  0000C5                     	ds	2
  1195  0000C7                     ??_vfpfcnvrt:
  1196                           
  1197                           ; 1 bytes @ 0x67
  1198  0000C7                     	ds	4
  1199  0000CB                     vfpfcnvrt@ll:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 8 bytes @ 0x6B
  1203  0000CB                     	ds	8
  1204  0000D3                     _vfpfcnvrt$947:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x73
  1208  0000D3                     	ds	2
  1209  0000D5                     _vfpfcnvrt$952:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x75
  1213  0000D5                     	ds	2
  1214  0000D7                     vfpfcnvrt@f:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x77
  1218  0000D7                     	ds	4
  1219  0000DB                     vfpfcnvrt@ct:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 3 bytes @ 0x7B
  1223  0000DB                     	ds	3
  1224  0000DE                     vfpfcnvrt@c:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x7E
  1228  0000DE                     	ds	1
  1229  0000DF                     ?_vfprintf:
  1230                           	opt callstack 0
  1231  0000DF                     vfprintf@fp:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x7F
  1235  0000DF                     	ds	2
  1236  0000E1                     vfprintf@fmt:
  1237                           	opt callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x81
  1240  0000E1                     	ds	2
  1241  0000E3                     vfprintf@ap:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x83
  1245  0000E3                     	ds	2
  1246  0000E5                     vfprintf@cfmt:
  1247                           	opt callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x85
  1250  0000E5                     	ds	2
  1251  0000E7                     ?_sprintf:
  1252                           	opt callstack 0
  1253  0000E7                     sprintf@s:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x87
  1257  0000E7                     	ds	2
  1258  0000E9                     sprintf@fmt:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x89
  1262  0000E9                     	ds	8
  1263  0000F1                     sprintf@ap:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x91
  1267  0000F1                     	ds	2
  1268  0000F3                     sprintf@f:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 6 bytes @ 0x93
  1272  0000F3                     	ds	6
  1273                           
  1274                           	psect	cstackCOMRAM
  1275  000001                     __pcstackCOMRAM:
  1276                           	opt callstack 0
  1277  000001                     ??_antiRebote:
  1278  000001                     
  1279                           ; 1 bytes @ 0x0
  1280  000001                     	ds	2
  1281  000003                     antiRebote@pin:
  1282                           	opt callstack 0
  1283                           
  1284                           ; 1 bytes @ 0x2
  1285  000003                     	ds	1
  1286  000004                     ??_boton:
  1287                           
  1288                           ; 1 bytes @ 0x3
  1289  000004                     	ds	2
  1290  000006                     ??_forzarParoAuto:
  1291  000006                     ??_configPwm:
  1292  000006                     ??_forzarReversa:
  1293  000006                     ??_forzarAvanceRecto:
  1294  000006                     ??_forzarGiroIzquierda:
  1295  000006                     ??_forzarGiroDerecha:
  1296  000006                     ?_strlen:
  1297                           	opt callstack 0
  1298  000006                     ?___fpclassifyf:
  1299                           	opt callstack 0
  1300  000006                     ?_isupper:
  1301                           	opt callstack 0
  1302  000006                     ?_isdigit:
  1303                           	opt callstack 0
  1304  000006                     ?_strncmp:
  1305                           	opt callstack 0
  1306  000006                     ?_isspace:
  1307                           	opt callstack 0
  1308  000006                     ?_dameLecturaAdc:
  1309                           	opt callstack 0
  1310  000006                     ?___wmul:
  1311                           	opt callstack 0
  1312  000006                     ?___awdiv:
  1313                           	opt callstack 0
  1314  000006                     ?___awmod:
  1315                           	opt callstack 0
  1316  000006                     ?___lwdiv:
  1317                           	opt callstack 0
  1318  000006                     ?___lmul:
  1319                           	opt callstack 0
  1320  000006                     ?___flneg:
  1321                           	opt callstack 0
  1322  000006                     ?___aodiv:
  1323                           	opt callstack 0
  1324  000006                     ?___aomod:
  1325                           	opt callstack 0
  1326  000006                     UART_write@dato:
  1327                           	opt callstack 0
  1328  000006                     limpiarMovimientos@movimientos:
  1329                           	opt callstack 0
  1330  000006                     combinarArreglos@movimientos:
  1331                           	opt callstack 0
  1332  000006                     ___wmul@multiplier:
  1333                           	opt callstack 0
  1334  000006                     ___awdiv@dividend:
  1335                           	opt callstack 0
  1336  000006                     ___awmod@dividend:
  1337                           	opt callstack 0
  1338  000006                     ___lwdiv@dividend:
  1339                           	opt callstack 0
  1340  000006                     isdigit@c:
  1341                           	opt callstack 0
  1342  000006                     isspace@c:
  1343                           	opt callstack 0
  1344  000006                     isupper@c:
  1345                           	opt callstack 0
  1346  000006                     fputc@c:
  1347                           	opt callstack 0
  1348  000006                     strcpy@dest:
  1349                           	opt callstack 0
  1350  000006                     strlen@s:
  1351                           	opt callstack 0
  1352  000006                     strncmp@_l:
  1353                           	opt callstack 0
  1354  000006                     ___lmul@multiplier:
  1355                           	opt callstack 0
  1356  000006                     ___fleq@ff1:
  1357                           	opt callstack 0
  1358  000006                     ___flneg@f1:
  1359                           	opt callstack 0
  1360  000006                     ___fpclassifyf@x:
  1361                           	opt callstack 0
  1362  000006                     ___aodiv@dividend:
  1363                           	opt callstack 0
  1364  000006                     ___aomod@dividend:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 8 bytes @ 0x5
  1368  000006                     	ds	1
  1369  000007                     UART_printf@cadena:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x6
  1373  000007                     	ds	1
  1374  000008                     ??_mover:
  1375  000008                     ??_isupper:
  1376  000008                     ??_isdigit:
  1377  000008                     ??_isspace:
  1378  000008                     ??_dameLecturaAdc:
  1379  000008                     configPwm@channel:
  1380                           	opt callstack 0
  1381  000008                     limpiarMovimientos@numMovimientos:
  1382                           	opt callstack 0
  1383  000008                     combinarArreglos@caminoFinal:
  1384                           	opt callstack 0
  1385  000008                     ___wmul@multiplicand:
  1386                           	opt callstack 0
  1387  000008                     ___awdiv@divisor:
  1388                           	opt callstack 0
  1389  000008                     ___awmod@divisor:
  1390                           	opt callstack 0
  1391  000008                     ___lwdiv@divisor:
  1392                           	opt callstack 0
  1393  000008                     fputc@fp:
  1394                           	opt callstack 0
  1395  000008                     strcpy@src:
  1396                           	opt callstack 0
  1397  000008                     strlen@a:
  1398                           	opt callstack 0
  1399  000008                     strncmp@_r:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x7
  1403  000008                     	ds	1
  1404  000009                     
  1405                           ; 1 bytes @ 0x8
  1406  000009                     	ds	1
  1407  00000A                     ??_fputc:
  1408  00000A                     ??___fpclassifyf:
  1409  00000A                     ??_strcpy:
  1410  00000A                     dameLecturaAdc@canalLeer:
  1411                           	opt callstack 0
  1412  00000A                     ___awdiv@counter:
  1413                           	opt callstack 0
  1414  00000A                     ___awmod@counter:
  1415                           	opt callstack 0
  1416  00000A                     ___lwdiv@counter:
  1417                           	opt callstack 0
  1418  00000A                     combinarArreglos@numMovimientos:
  1419                           	opt callstack 0
  1420  00000A                     ___wmul@product:
  1421                           	opt callstack 0
  1422  00000A                     strncmp@n:
  1423                           	opt callstack 0
  1424  00000A                     ___lmul@multiplicand:
  1425                           	opt callstack 0
  1426  00000A                     ___fleq@ff2:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x9
  1430  00000A                     	ds	1
  1431  00000B                     seLlegoAlDestino@llegoDestino:
  1432                           	opt callstack 0
  1433  00000B                     ___awdiv@sign:
  1434                           	opt callstack 0
  1435  00000B                     ___awmod@sign:
  1436                           	opt callstack 0
  1437  00000B                     ___lwdiv@quotient:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 2 bytes @ 0xA
  1441  00000B                     	ds	1
  1442  00000C                     ??_strncmp:
  1443  00000C                     ?_tolower:
  1444                           	opt callstack 0
  1445  00000C                     _isspace$1456:
  1446                           	opt callstack 0
  1447  00000C                     limpiarMovimientos@i:
  1448                           	opt callstack 0
  1449  00000C                     combinarArreglos@numMovimientosFinal:
  1450                           	opt callstack 0
  1451  00000C                     ___awdiv@quotient:
  1452                           	opt callstack 0
  1453  00000C                     strcpy@s:
  1454                           	opt callstack 0
  1455  00000C                     tolower@c:
  1456                           	opt callstack 0
  1457                           
  1458                           ; 2 bytes @ 0xB
  1459  00000C                     	ds	1
  1460  00000D                     ?_atoi:
  1461                           	opt callstack 0
  1462  00000D                     ?___xxtofl:
  1463                           	opt callstack 0
  1464  00000D                     atoi@s:
  1465                           	opt callstack 0
  1466  00000D                     strncmp@l:
  1467                           	opt callstack 0
  1468  00000D                     ___xxtofl@val:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 4 bytes @ 0xC
  1472  00000D                     	ds	1
  1473  00000E                     ??_combinarArreglos:
  1474  00000E                     ??_tolower:
  1475  00000E                     ??___fleq:
  1476  00000E                     ___fpclassifyf@e:
  1477                           	opt callstack 0
  1478  00000E                     strcpy@d:
  1479                           	opt callstack 0
  1480  00000E                     ___lmul@product:
  1481                           	opt callstack 0
  1482  00000E                     ___aodiv@divisor:
  1483                           	opt callstack 0
  1484  00000E                     ___aomod@divisor:
  1485                           	opt callstack 0
  1486                           
  1487                           ; 8 bytes @ 0xD
  1488  00000E                     	ds	1
  1489  00000F                     ??_atoi:
  1490  00000F                     fputs@s:
  1491                           	opt callstack 0
  1492  00000F                     strncmp@r:
  1493                           	opt callstack 0
  1494                           
  1495                           ; 2 bytes @ 0xE
  1496  00000F                     	ds	1
  1497  000010                     combinarArreglos@i:
  1498                           	opt callstack 0
  1499  000010                     ___fpclassifyf@u:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 4 bytes @ 0xF
  1503  000010                     	ds	1
  1504  000011                     ??___xxtofl:
  1505  000011                     fputs@fp:
  1506                           	opt callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x10
  1509  000011                     	ds	1
  1510  000012                     ?___aldiv:
  1511                           	opt callstack 0
  1512  000012                     caminoCorrecto@movimientos:
  1513                           	opt callstack 0
  1514  000012                     _tolower$1555:
  1515                           	opt callstack 0
  1516  000012                     ___aldiv@dividend:
  1517                           	opt callstack 0
  1518                           
  1519                           ; 4 bytes @ 0x11
  1520  000012                     	ds	1
  1521  000013                     fputs@c:
  1522                           	opt callstack 0
  1523  000013                     atoi@neg:
  1524                           	opt callstack 0
  1525                           
  1526                           ; 2 bytes @ 0x12
  1527  000013                     	ds	1
  1528  000014                     caminoCorrecto@caminoFinal:
  1529                           	opt callstack 0
  1530  000014                     fputs@i:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 2 bytes @ 0x13
  1534  000014                     	ds	1
  1535  000015                     ___xxtofl@sign:
  1536                           	opt callstack 0
  1537  000015                     _atoi$1425:
  1538                           	opt callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x14
  1541  000015                     	ds	1
  1542  000016                     ?_pad:
  1543                           	opt callstack 0
  1544  000016                     ___aodiv@counter:
  1545                           	opt callstack 0
  1546  000016                     ___aomod@counter:
  1547                           	opt callstack 0
  1548  000016                     ___xxtofl@exp:
  1549                           	opt callstack 0
  1550  000016                     caminoCorrecto@numMovimientos:
  1551                           	opt callstack 0
  1552  000016                     pad@fp:
  1553                           	opt callstack 0
  1554  000016                     ___aldiv@divisor:
  1555                           	opt callstack 0
  1556                           
  1557                           ; 4 bytes @ 0x15
  1558  000016                     	ds	1
  1559  000017                     ___aodiv@sign:
  1560                           	opt callstack 0
  1561  000017                     ___aomod@sign:
  1562                           	opt callstack 0
  1563  000017                     _atoi$1427:
  1564                           	opt callstack 0
  1565  000017                     ___xxtofl@arg:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x16
  1569  000017                     	ds	1
  1570  000018                     ?_abs:
  1571                           	opt callstack 0
  1572  000018                     caminoCorrecto@numMovimientosFinal:
  1573                           	opt callstack 0
  1574  000018                     pad@buf:
  1575                           	opt callstack 0
  1576  000018                     abs@a:
  1577                           	opt callstack 0
  1578  000018                     ___aodiv@quotient:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 8 bytes @ 0x17
  1582  000018                     	ds	1
  1583  000019                     _atoi$1426:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 1 bytes @ 0x18
  1587  000019                     	ds	1
  1588  00001A                     ??_abs:
  1589  00001A                     caminoCorrecto@caminoActual:
  1590                           	opt callstack 0
  1591  00001A                     ___aldiv@counter:
  1592                           	opt callstack 0
  1593  00001A                     pad@p:
  1594                           	opt callstack 0
  1595  00001A                     atoi@n:
  1596                           	opt callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x19
  1599  00001A                     	ds	1
  1600  00001B                     ?___flmul:
  1601                           	opt callstack 0
  1602  00001B                     ?_dameDistancia:
  1603                           	opt callstack 0
  1604  00001B                     ___aldiv@sign:
  1605                           	opt callstack 0
  1606  00001B                     ___flmul@b:
  1607                           	opt callstack 0
  1608                           
  1609                           ; 4 bytes @ 0x1A
  1610  00001B                     	ds	1
  1611  00001C                     ??_pad:
  1612  00001C                     ___aldiv@quotient:
  1613                           	opt callstack 0
  1614                           
  1615                           ; 4 bytes @ 0x1B
  1616  00001C                     	ds	1
  1617  00001D                     pad@i:
  1618                           	opt callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x1C
  1621  00001D                     	ds	2
  1622  00001F                     ??_dameDistancia:
  1623  00001F                     pad@w:
  1624                           	opt callstack 0
  1625  00001F                     ___flmul@a:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 4 bytes @ 0x1E
  1629  00001F                     	ds	1
  1630  000020                     ?_map:
  1631                           	opt callstack 0
  1632  000020                     map@x:
  1633                           	opt callstack 0
  1634  000020                     UART_init@BAUD:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 4 bytes @ 0x1F
  1638  000020                     	ds	1
  1639  000021                     ?_dtoa:
  1640                           	opt callstack 0
  1641  000021                     dameDistancia@numeroSensor:
  1642                           	opt callstack 0
  1643  000021                     dtoa@fp:
  1644                           	opt callstack 0
  1645                           
  1646                           ; 2 bytes @ 0x20
  1647  000021                     	ds	1
  1648  000022                     dameDistancia@distancia:
  1649                           	opt callstack 0
  1650                           
  1651                           ; 4 bytes @ 0x21
  1652  000022                     	ds	1
  1653  000023                     ??___flmul:
  1654  000023                     dtoa@d:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 8 bytes @ 0x22
  1658  000023                     	ds	1
  1659  000024                     map@in_min:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 4 bytes @ 0x23
  1663  000024                     	ds	2
  1664  000026                     dameDistancia@conteo:
  1665                           	opt callstack 0
  1666                           
  1667                           ; 2 bytes @ 0x25
  1668  000026                     	ds	1
  1669  000027                     ___flmul@sign:
  1670                           	opt callstack 0
  1671                           
  1672                           ; 1 bytes @ 0x26
  1673  000027                     	ds	1
  1674  000028                     ___flmul@aexp:
  1675                           	opt callstack 0
  1676  000028                     map@in_max:
  1677                           	opt callstack 0
  1678  000028                     _UART_init$1817:
  1679                           	opt callstack 0
  1680                           
  1681                           ; 4 bytes @ 0x27
  1682  000028                     	ds	1
  1683  000029                     ___flmul@grs:
  1684                           	opt callstack 0
  1685                           
  1686                           ; 4 bytes @ 0x28
  1687  000029                     	ds	2
  1688  00002B                     ??_dtoa:
  1689                           
  1690                           ; 1 bytes @ 0x2A
  1691  00002B                     	ds	1
  1692  00002C                     map@out_min:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 4 bytes @ 0x2B
  1696  00002C                     	ds	1
  1697  00002D                     ___flmul@bexp:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x2C
  1701  00002D                     	ds	1
  1702  00002E                     ___flmul@prod:
  1703                           	opt callstack 0
  1704                           
  1705                           ; 4 bytes @ 0x2D
  1706  00002E                     	ds	2
  1707  000030                     map@out_max:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x2F
  1711  000030                     	ds	2
  1712  000032                     ___flmul@temp:
  1713                           	opt callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x31
  1716  000032                     	ds	1
  1717  000033                     _dtoa$898:
  1718                           	opt callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x32
  1721  000033                     	ds	1
  1722  000034                     ?___fladd:
  1723                           	opt callstack 0
  1724  000034                     ___flge@ff1:
  1725                           	opt callstack 0
  1726  000034                     ___fladd@b:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 4 bytes @ 0x33
  1730  000034                     	ds	1
  1731  000035                     dtoa@p:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x34
  1735  000035                     	ds	2
  1736  000037                     dtoa@w:
  1737                           	opt callstack 0
  1738                           
  1739                           ; 2 bytes @ 0x36
  1740  000037                     	ds	1
  1741  000038                     ___flge@ff2:
  1742                           	opt callstack 0
  1743  000038                     ___fladd@a:
  1744                           	opt callstack 0
  1745                           
  1746                           ; 4 bytes @ 0x37
  1747  000038                     	ds	1
  1748  000039                     dtoa@s:
  1749                           	opt callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x38
  1752  000039                     	ds	2
  1753  00003B                     dtoa@n:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 8 bytes @ 0x3A
  1757  00003B                     	ds	1
  1758  00003C                     ??___fladd:
  1759  00003C                     ??___flge:
  1760                           
  1761                           ; 1 bytes @ 0x3B
  1762  00003C                     	ds	4
  1763  000040                     ___fladd@signs:
  1764                           	opt callstack 0
  1765  000040                     hayCruce@caminosRecorrer:
  1766                           	opt callstack 0
  1767  000040                     decidirDireccion@caminosRecorrer:
  1768                           	opt callstack 0
  1769                           
  1770                           ; 2 bytes @ 0x3F
  1771  000040                     	ds	1
  1772  000041                     ___fladd@aexp:
  1773                           	opt callstack 0
  1774                           
  1775                           ; 1 bytes @ 0x40
  1776  000041                     	ds	1
  1777  000042                     hayCruce@investigandoCruce:
  1778                           	opt callstack 0
  1779  000042                     ___fladd@bexp:
  1780                           	opt callstack 0
  1781  000042                     decidirDireccion@investigandoCruce:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 2 bytes @ 0x41
  1785  000042                     	ds	1
  1786  000043                     hayCruce@contCaminos:
  1787                           	opt callstack 0
  1788  000043                     ___fladd@grs:
  1789                           	opt callstack 0
  1790  000043                     dtoa@i:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 2 bytes @ 0x42
  1794  000043                     	ds	1
  1795  000044                     ?___fldiv:
  1796                           	opt callstack 0
  1797  000044                     ?___flsub:
  1798                           	opt callstack 0
  1799  000044                     decidirDireccion@posicionInvCruce:
  1800                           	opt callstack 0
  1801  000044                     ___flsub@b:
  1802                           	opt callstack 0
  1803  000044                     ___fldiv@b:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 4 bytes @ 0x43
  1807  000044                     	ds	2
  1808  000046                     decidirDireccion@contCaminosRecorridos:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 2 bytes @ 0x45
  1812  000046                     	ds	2
  1813  000048                     decidirDireccion@caminoActual:
  1814                           	opt callstack 0
  1815  000048                     ___flsub@a:
  1816                           	opt callstack 0
  1817  000048                     ___fldiv@a:
  1818                           	opt callstack 0
  1819                           
  1820                           ; 4 bytes @ 0x47
  1821  000048                     	ds	2
  1822  00004A                     decidirDireccion@cambioOrientacionCarro:
  1823                           	opt callstack 0
  1824                           
  1825                           ; 2 bytes @ 0x49
  1826  00004A                     	ds	2
  1827  00004C                     ??_decidirDireccion:
  1828  00004C                     ??___fldiv:
  1829  00004C                     ?_roundf:
  1830                           	opt callstack 0
  1831  00004C                     roundf@x:
  1832                           	opt callstack 0
  1833                           
  1834                           ; 4 bytes @ 0x4B
  1835  00004C                     	ds	2
  1836  00004E                     decidirDireccion@direccionElegida:
  1837                           	opt callstack 0
  1838                           
  1839                           ; 1 bytes @ 0x4D
  1840  00004E                     	ds	2
  1841  000050                     ??_roundf:
  1842  000050                     ?_floorf:
  1843                           	opt callstack 0
  1844  000050                     floorf@x:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 4 bytes @ 0x4F
  1848  000050                     	ds	4
  1849  000054                     moverCarrito@espejearCarroY:
  1850                           	opt callstack 0
  1851                           
  1852                           ; 1 bytes @ 0x53
  1853  000054                     	ds	1
  1854  000055                     
  1855                           ; 1 bytes @ 0x54
  1856 ;;
  1857 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1858 ;;
  1859 ;; *************** function _main *****************
  1860 ;; Defined at:
  1861 ;;		line 1305 in file "main.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  numMovimient    2    0        int 
  1866 ;;  iniciado        1    6[BANK1 ] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0
  1877 ;;      Locals:         0       0       3       0       0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1879 ;;      Totals:         0       0       3       0       0       0       0       0       0
  1880 ;;Total ram usage:        3 bytes
  1881 ;; Hardware stack levels required when called:   11
  1882 ;; This function calls:
  1883 ;;		_UART_init
  1884 ;;		_comportamientoBasico
  1885 ;;		_configPwm
  1886 ;;		_configurarAdc
  1887 ;;		_forzarParoAuto
  1888 ;;		_inicializarComportamientoBasico
  1889 ;;		_visualizarPasosRealizados
  1890 ;; This function is called by:
  1891 ;;		Startup code after reset
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text0
  1896  004984                     __ptext0:
  1897                           	opt callstack 0
  1898  004984                     _main:
  1899                           	opt callstack 20
  1900  004984                     
  1901                           ;main.c: 1307:     T_BOOL iniciado = 0;
  1902  004984  0E00               	movlw	0
  1903  004986  0101               	movlb	1	; () banked
  1904  004988  6FD2               	movwf	main@iniciado& (0+255),b
  1905  00498A                     
  1906                           ; BSR set to: 1
  1907                           ;main.c: 1311:     INTCONbits.GIE = 1;
  1908  00498A  8EF2               	bsf	242,7,c	;volatile
  1909  00498C                     
  1910                           ; BSR set to: 1
  1911                           ;main.c: 1312:     INTCONbits.INT0IE = 1;
  1912  00498C  88F2               	bsf	242,4,c	;volatile
  1913  00498E                     
  1914                           ; BSR set to: 1
  1915                           ;main.c: 1313:     INTCON2bits.INTEDG0 = 1;
  1916  00498E  8CF1               	bsf	241,6,c	;volatile
  1917  004990                     
  1918                           ; BSR set to: 1
  1919                           ;main.c: 1315:     TRISD3 = 0;
  1920  004990  9695               	bcf	3989,3,c	;volatile
  1921  004992                     
  1922                           ; BSR set to: 1
  1923                           ;main.c: 1316:     TRISB1 = 1;
  1924  004992  8293               	bsf	3987,1,c	;volatile
  1925  004994                     
  1926                           ; BSR set to: 1
  1927                           ;main.c: 1317:     TRISB2 = 1;
  1928  004994  8493               	bsf	3987,2,c	;volatile
  1929  004996                     
  1930                           ; BSR set to: 1
  1931                           ;main.c: 1318:     TRISB3 = 1;
  1932  004996  8693               	bsf	3987,3,c	;volatile
  1933  004998                     
  1934                           ; BSR set to: 1
  1935                           ;main.c: 1320:     TRISB4 = 0;
  1936  004998  9893               	bcf	3987,4,c	;volatile
  1937  00499A                     
  1938                           ; BSR set to: 1
  1939                           ;main.c: 1321:     TRISB5 = 0;
  1940  00499A  9A93               	bcf	3987,5,c	;volatile
  1941  00499C                     
  1942                           ; BSR set to: 1
  1943                           ;main.c: 1322:     TRISB6 = 0;
  1944  00499C  9C93               	bcf	3987,6,c	;volatile
  1945  00499E                     
  1946                           ; BSR set to: 1
  1947                           ;main.c: 1323:     TRISB7 = 0;
  1948  00499E  9E93               	bcf	3987,7,c	;volatile
  1949  0049A0                     
  1950                           ; BSR set to: 1
  1951                           ;main.c: 1325:     TRISDbits.RD2 = 0;
  1952  0049A0  9495               	bcf	149,2,c	;volatile
  1953  0049A2                     
  1954                           ; BSR set to: 1
  1955                           ;main.c: 1326:     TRISB0 = 1;
  1956  0049A2  8093               	bsf	3987,0,c	;volatile
  1957  0049A4                     
  1958                           ; BSR set to: 1
  1959                           ;main.c: 1328:     LATD3 = 0;
  1960  0049A4  968C               	bcf	3980,3,c	;volatile
  1961  0049A6                     
  1962                           ; BSR set to: 1
  1963                           ;main.c: 1329:     LATB4 = 0;
  1964  0049A6  988A               	bcf	3978,4,c	;volatile
  1965  0049A8                     
  1966                           ; BSR set to: 1
  1967                           ;main.c: 1330:     LATB5 = 0;
  1968  0049A8  9A8A               	bcf	3978,5,c	;volatile
  1969  0049AA                     
  1970                           ; BSR set to: 1
  1971                           ;main.c: 1331:     LATB6 = 0;
  1972  0049AA  9C8A               	bcf	3978,6,c	;volatile
  1973  0049AC                     
  1974                           ; BSR set to: 1
  1975                           ;main.c: 1332:     LATB7 = 0;
  1976  0049AC  9E8A               	bcf	3978,7,c	;volatile
  1977  0049AE                     
  1978                           ; BSR set to: 1
  1979                           ;main.c: 1333:     LATD2 = 0;
  1980  0049AE  948C               	bcf	3980,2,c	;volatile
  1981                           
  1982                           ;main.c: 1336:     T1CON = 0b00000000;
  1983  0049B0  0E00               	movlw	0
  1984  0049B2  6ECD               	movwf	205,c	;volatile
  1985  0049B4                     
  1986                           ; BSR set to: 1
  1987                           ;main.c: 1338:     configPwm(1);
  1988  0049B4  0E01               	movlw	1
  1989  0049B6  EC0A  F028         	call	_configPwm
  1990  0049BA                     
  1991                           ;main.c: 1339:     configPwm(2);
  1992  0049BA  0E02               	movlw	2
  1993  0049BC  EC0A  F028         	call	_configPwm
  1994  0049C0                     
  1995                           ;main.c: 1340:     configurarAdc();
  1996  0049C0  EC87  F02A         	call	_configurarAdc	;wreg free
  1997  0049C4                     
  1998                           ;main.c: 1342:     UART_init(9600);
  1999  0049C4  0E80               	movlw	128
  2000  0049C6  6E20               	movwf	UART_init@BAUD^0,c
  2001  0049C8  0E25               	movlw	37
  2002  0049CA  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2003  0049CC  0E00               	movlw	0
  2004  0049CE  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2005  0049D0  0E00               	movlw	0
  2006  0049D2  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2007  0049D4  EC02  F026         	call	_UART_init	;wreg free
  2008  0049D8                     l10562:
  2009                           
  2010                           ;main.c: 1347:         if (!pausa) {
  2011  0049D8  0101               	movlb	1	; () banked
  2012  0049DA  51D3               	movf	_pausa& (0+255),w,b
  2013  0049DC  A4D8               	btfss	status,2,c
  2014  0049DE  EFF3  F024         	goto	u11841
  2015  0049E2  EFF5  F024         	goto	u11840
  2016  0049E6                     u11841:
  2017  0049E6  EF07  F025         	goto	l10578
  2018  0049EA                     u11840:
  2019  0049EA                     
  2020                           ; BSR set to: 1
  2021                           ;main.c: 1349:             if (!iniciado) {
  2022  0049EA  51D2               	movf	main@iniciado& (0+255),w,b
  2023  0049EC  A4D8               	btfss	status,2,c
  2024  0049EE  EFFB  F024         	goto	u11851
  2025  0049F2  EFFD  F024         	goto	u11850
  2026  0049F6                     u11851:
  2027  0049F6  EF01  F025         	goto	l10574
  2028  0049FA                     u11850:
  2029  0049FA                     
  2030                           ; BSR set to: 1
  2031                           ;main.c: 1350:                 iniciado = 1;
  2032  0049FA  0E01               	movlw	1
  2033  0049FC  6FD2               	movwf	main@iniciado& (0+255),b
  2034  0049FE                     
  2035                           ; BSR set to: 1
  2036                           ;main.c: 1351:                 inicializarComportamientoBasico();
  2037  0049FE  EC5A  F028         	call	_inicializarComportamientoBasico	;wreg free
  2038  004A02                     l10574:
  2039                           
  2040                           ;main.c: 1362:             comportamientoBasico();
  2041  004A02  ECE7  F00A         	call	_comportamientoBasico	;wreg free
  2042  004A06                     
  2043                           ;main.c: 1363:             forzarParoAuto();
  2044  004A06  EC67  F02A         	call	_forzarParoAuto	;wreg free
  2045                           
  2046                           ;main.c: 1365:         } else {
  2047  004A0A  EFEC  F024         	goto	l10562
  2048  004A0E                     l10578:
  2049                           
  2050                           ; BSR set to: 1
  2051                           ;main.c: 1367:             iniciado = 0;
  2052  004A0E  0E00               	movlw	0
  2053  004A10  6FD2               	movwf	main@iniciado& (0+255),b
  2054  004A12  EFEC  F024         	goto	l10562
  2055  004A16  EF07  F000         	goto	start
  2056  004A1A                     __end_of_main:
  2057                           	opt callstack 0
  2058                           
  2059 ;; *************** function _visualizarPasosRealizados *****************
  2060 ;; Defined at:
  2061 ;;		line 219 in file "main.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  numMovimient    2    0[BANK1 ] unsigned int 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2075 ;;      Params:         0       0       2       0       0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2077 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2078 ;;      Totals:         0       0       4       0       0       0       0       0       0
  2079 ;;Total ram usage:        4 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:   10
  2082 ;; This function calls:
  2083 ;;		_UART_printf
  2084 ;;		_sprintf
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text1
  2091  0046E6                     __ptext1:
  2092                           	opt callstack 0
  2093  0046E6                     _visualizarPasosRealizados:
  2094                           	opt callstack 20
  2095  0046E6                     
  2096                           ;main.c: 221:     switch (mouse.curr_state) {
  2097  0046E6  EF95  F023         	goto	l10186
  2098  0046EA                     l10176:
  2099                           
  2100                           ; BSR set to: 1
  2101                           ;main.c: 223:             UART_printf("Enfrente\n");
  2102  0046EA  0ED3               	movlw	low STR_7
  2103  0046EC  6E07               	movwf	UART_printf@cadena^0,c
  2104  0046EE  0E7F               	movlw	high STR_7
  2105  0046F0  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2106  0046F2  EC05  F027         	call	_UART_printf	;wreg free
  2107                           
  2108                           ;main.c: 224:             break;
  2109  0046F6  EFB4  F023         	goto	l10188
  2110  0046FA                     l10178:
  2111                           
  2112                           ; BSR set to: 1
  2113                           ;main.c: 227:             UART_printf("Izquierda\n");
  2114  0046FA  0EC8               	movlw	low STR_8
  2115  0046FC  6E07               	movwf	UART_printf@cadena^0,c
  2116  0046FE  0E7F               	movlw	high STR_8
  2117  004700  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2118  004702  EC05  F027         	call	_UART_printf	;wreg free
  2119                           
  2120                           ;main.c: 228:             break;
  2121  004706  EFB4  F023         	goto	l10188
  2122  00470A                     l10180:
  2123                           
  2124                           ; BSR set to: 1
  2125                           ;main.c: 231:             UART_printf("Derecha\n");
  2126  00470A  0EDD               	movlw	low STR_9
  2127  00470C  6E07               	movwf	UART_printf@cadena^0,c
  2128  00470E  0E7F               	movlw	high STR_9
  2129  004710  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2130  004712  EC05  F027         	call	_UART_printf	;wreg free
  2131                           
  2132                           ;main.c: 232:             break;
  2133  004716  EFB4  F023         	goto	l10188
  2134  00471A                     l10182:
  2135                           
  2136                           ; BSR set to: 1
  2137                           ;main.c: 235:             UART_printf("Alto\n");
  2138  00471A  0EE6               	movlw	low STR_10
  2139  00471C  6E07               	movwf	UART_printf@cadena^0,c
  2140  00471E  0E7F               	movlw	high STR_10
  2141  004720  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2142  004722  EC05  F027         	call	_UART_printf	;wreg free
  2143                           
  2144                           ;main.c: 236:             break;
  2145  004726  EFB4  F023         	goto	l10188
  2146  00472A                     l10186:
  2147  00472A  0100               	movlb	0	; () banked
  2148  00472C  51FD               	movf	_mouse& (0+255),w,b
  2149  00472E  0101               	movlb	1	; () banked
  2150  004730  6FCE               	movwf	??_visualizarPasosRealizados& (0+255),b
  2151  004732  6BCF               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2152                           
  2153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2154                           ; Switch size 1, requested type "simple"
  2155                           ; Number of cases is 1, Range of values is 0 to 0
  2156                           ; switch strategies available:
  2157                           ; Name         Instructions Cycles
  2158                           ; simple_byte            4     3 (average)
  2159                           ;	Chosen strategy is simple_byte
  2160  004734  51CF               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2161  004736  0A00               	xorlw	0	; case 0
  2162  004738  B4D8               	btfsc	status,2,c
  2163  00473A  EFA1  F023         	goto	l10870
  2164  00473E  EFB4  F023         	goto	l10188
  2165  004742                     l10870:
  2166                           
  2167                           ; BSR set to: 1
  2168                           ; Switch size 1, requested type "simple"
  2169                           ; Number of cases is 4, Range of values is 1 to 4
  2170                           ; switch strategies available:
  2171                           ; Name         Instructions Cycles
  2172                           ; simple_byte           13     7 (average)
  2173                           ;	Chosen strategy is simple_byte
  2174  004742  51CE               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2175  004744  0A01               	xorlw	1	; case 1
  2176  004746  B4D8               	btfsc	status,2,c
  2177  004748  EF75  F023         	goto	l10176
  2178  00474C  0A03               	xorlw	3	; case 2
  2179  00474E  B4D8               	btfsc	status,2,c
  2180  004750  EF7D  F023         	goto	l10178
  2181  004754  0A01               	xorlw	1	; case 3
  2182  004756  B4D8               	btfsc	status,2,c
  2183  004758  EF85  F023         	goto	l10180
  2184  00475C  0A07               	xorlw	7	; case 4
  2185  00475E  B4D8               	btfsc	status,2,c
  2186  004760  EF8D  F023         	goto	l10182
  2187  004764  EFB4  F023         	goto	l10188
  2188  004768                     l10188:
  2189                           
  2190                           ;main.c: 239:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2191  004768  0E8D               	movlw	low _buffer
  2192  00476A  0100               	movlb	0	; () banked
  2193  00476C  6FE7               	movwf	sprintf@s& (0+255),b
  2194  00476E  0E01               	movlw	high _buffer
  2195  004770  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2196  004772  0E2A               	movlw	low STR_11
  2197  004774  6FE9               	movwf	sprintf@fmt& (0+255),b
  2198  004776  0E7F               	movlw	high STR_11
  2199  004778  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2200  00477A  C1CC  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2201  00477E  C1CD  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2202  004782  ECB8  F027         	call	_sprintf	;wreg free
  2203  004786                     
  2204                           ;main.c: 240:     UART_printf(buffer);
  2205  004786  0E8D               	movlw	low _buffer
  2206  004788  6E07               	movwf	UART_printf@cadena^0,c
  2207  00478A  0E01               	movlw	high _buffer
  2208  00478C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2209  00478E  EC05  F027         	call	_UART_printf	;wreg free
  2210  004792  0012               	return		;funcret
  2211  004794                     __end_of_visualizarPasosRealizados:
  2212                           	opt callstack 0
  2213                           
  2214 ;; *************** function _sprintf *****************
  2215 ;; Defined at:
  2216 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  s               2  135[BANK0 ] PTR unsigned char 
  2219 ;;		 -> buffer(50), 
  2220 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  2221 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2222 ;;		 -> STR_3(34), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  f               6  147[BANK0 ] struct _IO_FILE
  2225 ;;  ap              2  145[BANK0 ] PTR void [1]
  2226 ;;		 -> ?_sprintf(2), 
  2227 ;;  ret             2    0        int 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  2  135[BANK0 ] int 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2237 ;;      Params:         0       8       0       0       0       0       0       0       0
  2238 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2240 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2241 ;;Total ram usage:       18 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    9
  2244 ;; This function calls:
  2245 ;;		_vfprintf
  2246 ;; This function is called by:
  2247 ;;		_visualizarPasosRealizados
  2248 ;;		_probarSensores
  2249 ;;		_probarUltrasonico
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text2
  2254  004F70                     __ptext2:
  2255                           	opt callstack 0
  2256  004F70                     _sprintf:
  2257                           	opt callstack 20
  2258  004F70  0EEB               	movlw	low (?_sprintf+4)
  2259  004F72  0100               	movlb	0	; () banked
  2260  004F74  6FF1               	movwf	sprintf@ap& (0+255),b
  2261  004F76  0E00               	movlw	high (?_sprintf+4)
  2262  004F78  6FF2               	movwf	(sprintf@ap+1)& (0+255),b
  2263  004F7A  C0E7  F0F3         	movff	sprintf@s,sprintf@f
  2264  004F7E  C0E8  F0F4         	movff	sprintf@s+1,sprintf@f+1
  2265  004F82                     
  2266                           ; BSR set to: 0
  2267  004F82  0E00               	movlw	0
  2268  004F84  6FF6               	movwf	(sprintf@f+3)& (0+255),b
  2269  004F86  0E00               	movlw	0
  2270  004F88  6FF5               	movwf	(sprintf@f+2)& (0+255),b
  2271  004F8A                     
  2272                           ; BSR set to: 0
  2273  004F8A  0E00               	movlw	0
  2274  004F8C  6FF8               	movwf	(sprintf@f+5)& (0+255),b
  2275  004F8E  0E00               	movlw	0
  2276  004F90  6FF7               	movwf	(sprintf@f+4)& (0+255),b
  2277  004F92                     
  2278                           ; BSR set to: 0
  2279  004F92  0EF3               	movlw	low sprintf@f
  2280  004F94  6FDF               	movwf	vfprintf@fp& (0+255),b
  2281  004F96  0E00               	movlw	high sprintf@f
  2282  004F98  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  2283  004F9A  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  2284  004F9E  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2285  004FA2  0EF1               	movlw	low sprintf@ap
  2286  004FA4  6FE3               	movwf	vfprintf@ap& (0+255),b
  2287  004FA6  0E00               	movlw	high sprintf@ap
  2288  004FA8  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  2289  004FAA  EC3A  F026         	call	_vfprintf	;wreg free
  2290  004FAE  0100               	movlb	0	; () banked
  2291  004FB0  51F5               	movf	(sprintf@f+2)& (0+255),w,b
  2292  004FB2  25E7               	addwf	sprintf@s& (0+255),w,b
  2293  004FB4  6ED9               	movwf	fsr2l,c
  2294  004FB6  51F6               	movf	(sprintf@f+3)& (0+255),w,b
  2295  004FB8  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  2296  004FBA  6EDA               	movwf	fsr2h,c
  2297  004FBC  0E00               	movlw	0
  2298  004FBE  6EDF               	movwf	indf2,c
  2299  004FC0                     
  2300                           ; BSR set to: 0
  2301  004FC0  0012               	return		;funcret
  2302  004FC2                     __end_of_sprintf:
  2303                           	opt callstack 0
  2304                           
  2305 ;; *************** function _vfprintf *****************
  2306 ;; Defined at:
  2307 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  2310 ;;		 -> sprintf@f(6), 
  2311 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  2312 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2313 ;;		 -> STR_3(34), 
  2314 ;;  ap              2  131[BANK0 ] PTR PTR void 
  2315 ;;		 -> sprintf@ap(2), 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  2318 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  2319 ;;		 -> STR_3(34), 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  2  127[BANK0 ] int 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2329 ;;      Params:         0       6       0       0       0       0       0       0       0
  2330 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2332 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2333 ;;Total ram usage:        8 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    8
  2336 ;; This function calls:
  2337 ;;		_vfpfcnvrt
  2338 ;; This function is called by:
  2339 ;;		_sprintf
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text3
  2344  004C74                     __ptext3:
  2345                           	opt callstack 0
  2346  004C74                     _vfprintf:
  2347                           	opt callstack 20
  2348  004C74                     
  2349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2350  004C74  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  2351  004C78  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2352  004C7C                     
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2354  004C7C  0E00               	movlw	0
  2355  004C7E  0101               	movlb	1	; () banked
  2356  004C80  6F29               	movwf	(_nout+1)& (0+255),b
  2357  004C82  0E00               	movlw	0
  2358  004C84  6F28               	movwf	_nout& (0+255),b
  2359                           
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2361  004C86  EF5C  F026         	goto	l9614
  2362  004C8A                     l9612:
  2363                           
  2364                           ; BSR set to: 1
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2366  004C8A  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  2367  004C8E  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2368  004C92  0EE5               	movlw	low vfprintf@cfmt
  2369  004C94  0100               	movlb	0	; () banked
  2370  004C96  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  2371  004C98  0E00               	movlw	high vfprintf@cfmt
  2372  004C9A  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2373  004C9C  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  2374  004CA0  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2375  004CA4  ECEC  F005         	call	_vfpfcnvrt	;wreg free
  2376  004CA8  0100               	movlb	0	; () banked
  2377  004CAA  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  2378  004CAC  0101               	movlb	1	; () banked
  2379  004CAE  2728               	addwf	_nout& (0+255),f,b
  2380  004CB0  0100               	movlb	0	; () banked
  2381  004CB2  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2382  004CB4  0101               	movlb	1	; () banked
  2383  004CB6  2329               	addwfc	(_nout+1)& (0+255),f,b
  2384  004CB8                     l9614:
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2388  004CB8  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  2389  004CBC  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2390  004CC0                     	if	0	;tblptru may be non-zero
  2391  004CC0                     	endif
  2392  004CC0                     	if	0	;tblptru may be non-zero
  2393  004CC0                     	endif
  2394  004CC0  0008               	tblrd		*
  2395  004CC2  50F5               	movf	tablat,w,c
  2396  004CC4  0900               	iorlw	0
  2397  004CC6  A4D8               	btfss	status,2,c
  2398  004CC8  EF68  F026         	goto	u11031
  2399  004CCC  EF6A  F026         	goto	u11030
  2400  004CD0                     u11031:
  2401  004CD0  EF45  F026         	goto	l9612
  2402  004CD4                     u11030:
  2403  004CD4                     
  2404                           ; BSR set to: 1
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2406  004CD4  C128  F0DF         	movff	_nout,?_vfprintf
  2407  004CD8  C129  F0E0         	movff	_nout+1,?_vfprintf+1
  2408  004CDC                     
  2409                           ; BSR set to: 1
  2410  004CDC  0012               	return		;funcret
  2411  004CDE                     __end_of_vfprintf:
  2412                           	opt callstack 0
  2413                           
  2414 ;; *************** function _vfpfcnvrt *****************
  2415 ;; Defined at:
  2416 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  2419 ;;		 -> sprintf@f(6), 
  2420 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  2421 ;;		 -> vfprintf@cfmt(2), 
  2422 ;;  ap              2  101[BANK0 ] PTR PTR void 
  2423 ;;		 -> sprintf@ap(2), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  ll              8  107[BANK0 ] long long 
  2426 ;;  llu             8    0        unsigned long long 
  2427 ;;  f               4  119[BANK0 ] unsigned long long 
  2428 ;;  ct              3  123[BANK0 ] unsigned char [3]
  2429 ;;  vp              3    0        PTR void 
  2430 ;;  cp              3    0        PTR unsigned char 
  2431 ;;  i               2    0        int 
  2432 ;;  done            2    0        int 
  2433 ;;  c               1  126[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2   97[BANK0 ] int 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2443 ;;      Params:         0       6       0       0       0       0       0       0       0
  2444 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2445 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2446 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2447 ;;Total ram usage:       30 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    7
  2450 ;; This function calls:
  2451 ;;		_atoi
  2452 ;;		_dtoa
  2453 ;;		_efgtoa
  2454 ;;		_fputc
  2455 ;;		_isdigit
  2456 ;;		_isupper
  2457 ;;		_strncmp
  2458 ;;		_tolower
  2459 ;; This function is called by:
  2460 ;;		_vfprintf
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text4
  2465  000BD8                     __ptext4:
  2466                           	opt callstack 0
  2467  000BD8                     _vfpfcnvrt:
  2468                           	opt callstack 20
  2469  000BD8                     
  2470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2471  000BD8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  000BDC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  000BE0  CFDE FFF6          	movff	postinc2,tblptrl
  2474  000BE4  CFDD FFF7          	movff	postdec2,tblptrh
  2475  000BE8                     	if	0	;tblptru may be non-zero
  2476  000BE8                     	endif
  2477  000BE8                     	if	0	;tblptru may be non-zero
  2478  000BE8                     	endif
  2479  000BE8  0008               	tblrd		*
  2480  000BEA  50F5               	movf	tablat,w,c
  2481  000BEC  0A25               	xorlw	37
  2482  000BEE  A4D8               	btfss	status,2,c
  2483  000BF0  EFFC  F005         	goto	u10651
  2484  000BF4  EFFE  F005         	goto	u10650
  2485  000BF8                     u10651:
  2486  000BF8  EF6B  F008         	goto	l9448
  2487  000BFC                     u10650:
  2488  000BFC                     
  2489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2490  000BFC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2491  000C00  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2492  000C04  2ADE               	incf	postinc2,f,c
  2493  000C06  0E00               	movlw	0
  2494  000C08  22DD               	addwfc	postdec2,f,c
  2495  000C0A                     
  2496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2497  000C0A  0E00               	movlw	0
  2498  000C0C  0101               	movlb	1	; () banked
  2499  000C0E  6F2B               	movwf	(_width+1)& (0+255),b
  2500  000C10  0E00               	movlw	0
  2501  000C12  6F2A               	movwf	_width& (0+255),b
  2502  000C14  C12A  F12E         	movff	_width,_flags
  2503  000C18  C12B  F12F         	movff	_width+1,_flags+1
  2504  000C1C                     
  2505                           ; BSR set to: 1
  2506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2507  000C1C  692C               	setf	_prec& (0+255),b
  2508  000C1E  692D               	setf	(_prec+1)& (0+255),b
  2509  000C20                     
  2510                           ; BSR set to: 1
  2511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2512  000C20  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2513  000C24  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2514  000C28  CFDE FFF6          	movff	postinc2,tblptrl
  2515  000C2C  CFDD FFF7          	movff	postdec2,tblptrh
  2516  000C30                     	if	0	;tblptru may be non-zero
  2517  000C30                     	endif
  2518  000C30                     	if	0	;tblptru may be non-zero
  2519  000C30                     	endif
  2520  000C30  0008               	tblrd		*
  2521  000C32  50F5               	movf	tablat,w,c
  2522  000C34  0A2E               	xorlw	46
  2523  000C36  A4D8               	btfss	status,2,c
  2524  000C38  EF20  F006         	goto	u10661
  2525  000C3C  EF22  F006         	goto	u10660
  2526  000C40                     u10661:
  2527  000C40  EFA0  F006         	goto	l9384
  2528  000C44                     u10660:
  2529  000C44                     
  2530                           ; BSR set to: 1
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2532  000C44  0E00               	movlw	0
  2533  000C46  6F2D               	movwf	(_prec+1)& (0+255),b
  2534  000C48  0E00               	movlw	0
  2535  000C4A  6F2C               	movwf	_prec& (0+255),b
  2536  000C4C                     
  2537                           ; BSR set to: 1
  2538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2539  000C4C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2540  000C50  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2541  000C54  2ADE               	incf	postinc2,f,c
  2542  000C56  0E00               	movlw	0
  2543  000C58  22DD               	addwfc	postdec2,f,c
  2544  000C5A                     
  2545                           ; BSR set to: 1
  2546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2547  000C5A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2548  000C5E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2549  000C62  CFDE FFF6          	movff	postinc2,tblptrl
  2550  000C66  CFDD FFF7          	movff	postdec2,tblptrh
  2551  000C6A                     	if	0	;tblptru may be non-zero
  2552  000C6A                     	endif
  2553  000C6A                     	if	0	;tblptru may be non-zero
  2554  000C6A                     	endif
  2555  000C6A  0008               	tblrd		*
  2556  000C6C  50F5               	movf	tablat,w,c
  2557  000C6E  0A2A               	xorlw	42
  2558  000C70  A4D8               	btfss	status,2,c
  2559  000C72  EF3D  F006         	goto	u10671
  2560  000C76  EF3F  F006         	goto	u10670
  2561  000C7A                     u10671:
  2562  000C7A  EF5C  F006         	goto	l9374
  2563  000C7E                     u10670:
  2564  000C7E                     
  2565                           ; BSR set to: 1
  2566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2567  000C7E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2568  000C82  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2569  000C86  2ADE               	incf	postinc2,f,c
  2570  000C88  0E00               	movlw	0
  2571  000C8A  22DD               	addwfc	postdec2,f,c
  2572                           
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2574  000C8C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2575  000C90  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2576  000C94  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2577  000C98  0E02               	movlw	2
  2578  000C9A  26DE               	addwf	postinc2,f,c
  2579  000C9C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2580  000CA0  0E00               	movlw	0
  2581  000CA2  22DD               	addwfc	postdec2,f,c
  2582  000CA4  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2583  000CA8  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2584  000CAC  CFDE F12C          	movff	postinc2,_prec
  2585  000CB0  CFDD F12D          	movff	postdec2,_prec+1
  2586                           
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2588  000CB4  EFA0  F006         	goto	l9384
  2589  000CB8                     l9374:
  2590                           
  2591                           ; BSR set to: 1
  2592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2593  000CB8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2594  000CBC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2595  000CC0  CFDE F00D          	movff	postinc2,atoi@s
  2596  000CC4  CFDD F00E          	movff	postdec2,atoi@s+1
  2597  000CC8  EC41  F01A         	call	_atoi	;wreg free
  2598  000CCC  C00D  F12C         	movff	?_atoi,_prec
  2599  000CD0  C00E  F12D         	movff	?_atoi+1,_prec+1
  2600                           
  2601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2602  000CD4  EF73  F006         	goto	l9378
  2603  000CD8                     l9376:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2607  000CD8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2608  000CDC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2609  000CE0  2ADE               	incf	postinc2,f,c
  2610  000CE2  0E00               	movlw	0
  2611  000CE4  22DD               	addwfc	postdec2,f,c
  2612  000CE6                     l9378:
  2613  000CE6  0ED0               	movlw	208
  2614  000CE8  0100               	movlb	0	; () banked
  2615  000CEA  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2616  000CEC  0EFF               	movlw	255
  2617  000CEE  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2618  000CF0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2619  000CF4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2620  000CF8  CFDE FFF6          	movff	postinc2,tblptrl
  2621  000CFC  CFDD FFF7          	movff	postdec2,tblptrh
  2622  000D00                     	if	0	;tblptru may be non-zero
  2623  000D00                     	endif
  2624  000D00                     	if	0	;tblptru may be non-zero
  2625  000D00                     	endif
  2626  000D00  0008               	tblrd		*
  2627  000D02  50F5               	movf	tablat,w,c
  2628  000D04  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2629  000D06  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2630  000D08  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2631  000D0A  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2632  000D0C  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2633  000D0E  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2634  000D10  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2635  000D12  E10A               	bnz	u10680
  2636  000D14  0E0A               	movlw	10
  2637  000D16  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2638  000D18  A0D8               	btfss	status,0,c
  2639  000D1A  EF91  F006         	goto	u10681
  2640  000D1E  EF94  F006         	goto	u10680
  2641  000D22                     u10681:
  2642  000D22  0E01               	movlw	1
  2643  000D24  EF95  F006         	goto	u10690
  2644  000D28                     u10680:
  2645  000D28  0E00               	movlw	0
  2646  000D2A                     u10690:
  2647  000D2A  6FD3               	movwf	_vfpfcnvrt$947& (0+255),b
  2648  000D2C  6BD4               	clrf	(_vfpfcnvrt$947+1)& (0+255),b
  2649  000D2E                     
  2650                           ; BSR set to: 0
  2651  000D2E  51D3               	movf	_vfpfcnvrt$947& (0+255),w,b
  2652  000D30  11D4               	iorwf	(_vfpfcnvrt$947+1)& (0+255),w,b
  2653  000D32  A4D8               	btfss	status,2,c
  2654  000D34  EF9E  F006         	goto	u10701
  2655  000D38  EFA0  F006         	goto	u10700
  2656  000D3C                     u10701:
  2657  000D3C  EF6C  F006         	goto	l9376
  2658  000D40                     u10700:
  2659  000D40                     l9384:
  2660                           
  2661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2662  000D40  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2663  000D44  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2664  000D48  CFDE FFF6          	movff	postinc2,tblptrl
  2665  000D4C  CFDD FFF7          	movff	postdec2,tblptrh
  2666  000D50                     	if	0	;tblptru may be non-zero
  2667  000D50                     	endif
  2668  000D50                     	if	0	;tblptru may be non-zero
  2669  000D50                     	endif
  2670  000D50  0008               	tblrd		*
  2671  000D52  50F5               	movf	tablat,w,c
  2672  000D54  6E0C               	movwf	tolower@c^0,c
  2673  000D56  6A0D               	clrf	(tolower@c+1)^0,c
  2674  000D58  ECD5  F026         	call	_tolower	;wreg free
  2675  000D5C  500C               	movf	?_tolower^0,w,c
  2676  000D5E  0100               	movlb	0	; () banked
  2677  000D60  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  2678  000D62                     
  2679                           ; BSR set to: 0
  2680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2681  000D62  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  2682  000D64  B4D8               	btfsc	status,2,c
  2683  000D66  EFB7  F006         	goto	u10711
  2684  000D6A  EFB9  F006         	goto	u10710
  2685  000D6E                     u10711:
  2686  000D6E  EFF3  F006         	goto	l9394
  2687  000D72                     u10710:
  2688  000D72                     
  2689                           ; BSR set to: 0
  2690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2691  000D72  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2692  000D76  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2693  000D7A  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2694  000D7E  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2695  000D82  0E01               	movlw	1
  2696  000D84  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2697  000D86  0E00               	movlw	0
  2698  000D88  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2699  000D8A  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2700  000D8E  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2701  000D92                     	if	0	;tblptru may be non-zero
  2702  000D92                     	endif
  2703  000D92                     	if	0	;tblptru may be non-zero
  2704  000D92                     	endif
  2705  000D92  0008               	tblrd		*
  2706  000D94  50F5               	movf	tablat,w,c
  2707  000D96  6E0C               	movwf	tolower@c^0,c
  2708  000D98  6A0D               	clrf	(tolower@c+1)^0,c
  2709  000D9A  ECD5  F026         	call	_tolower	;wreg free
  2710  000D9E  500C               	movf	?_tolower^0,w,c
  2711  000DA0  0100               	movlb	0	; () banked
  2712  000DA2  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2713  000DA4                     
  2714                           ; BSR set to: 0
  2715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2716  000DA4  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2717  000DA6  B4D8               	btfsc	status,2,c
  2718  000DA8  EFD8  F006         	goto	u10721
  2719  000DAC  EFDA  F006         	goto	u10720
  2720  000DB0                     u10721:
  2721  000DB0  EFF3  F006         	goto	l9394
  2722  000DB4                     u10720:
  2723  000DB4                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2726  000DB4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2727  000DB8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2728  000DBC  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2729  000DC0  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2730  000DC4  0E02               	movlw	2
  2731  000DC6  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2732  000DC8  0E00               	movlw	0
  2733  000DCA  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2734  000DCC  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2735  000DD0  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2736  000DD4                     	if	0	;tblptru may be non-zero
  2737  000DD4                     	endif
  2738  000DD4                     	if	0	;tblptru may be non-zero
  2739  000DD4                     	endif
  2740  000DD4  0008               	tblrd		*
  2741  000DD6  50F5               	movf	tablat,w,c
  2742  000DD8  6E0C               	movwf	tolower@c^0,c
  2743  000DDA  6A0D               	clrf	(tolower@c+1)^0,c
  2744  000DDC  ECD5  F026         	call	_tolower	;wreg free
  2745  000DE0  500C               	movf	?_tolower^0,w,c
  2746  000DE2  0100               	movlb	0	; () banked
  2747  000DE4  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2748  000DE6                     l9394:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2752  000DE6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2753  000DEA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2754  000DEE  CFDE FFF6          	movff	postinc2,tblptrl
  2755  000DF2  CFDD FFF7          	movff	postdec2,tblptrh
  2756  000DF6                     	if	0	;tblptru may be non-zero
  2757  000DF6                     	endif
  2758  000DF6                     	if	0	;tblptru may be non-zero
  2759  000DF6                     	endif
  2760  000DF6  0008               	tblrd		*
  2761  000DF8  50F5               	movf	tablat,w,c
  2762  000DFA  0A64               	xorlw	100
  2763  000DFC  B4D8               	btfsc	status,2,c
  2764  000DFE  EF03  F007         	goto	u10731
  2765  000E02  EF05  F007         	goto	u10730
  2766  000E06                     u10731:
  2767  000E06  EF17  F007         	goto	l9398
  2768  000E0A                     u10730:
  2769  000E0A                     
  2770                           ; BSR set to: 0
  2771  000E0A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2772  000E0E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2773  000E12  CFDE FFF6          	movff	postinc2,tblptrl
  2774  000E16  CFDD FFF7          	movff	postdec2,tblptrh
  2775  000E1A                     	if	0	;tblptru may be non-zero
  2776  000E1A                     	endif
  2777  000E1A                     	if	0	;tblptru may be non-zero
  2778  000E1A                     	endif
  2779  000E1A  0008               	tblrd		*
  2780  000E1C  50F5               	movf	tablat,w,c
  2781  000E1E  0A69               	xorlw	105
  2782  000E20  A4D8               	btfss	status,2,c
  2783  000E22  EF15  F007         	goto	u10741
  2784  000E26  EF17  F007         	goto	u10740
  2785  000E2A                     u10741:
  2786  000E2A  EF57  F007         	goto	l9404
  2787  000E2E                     u10740:
  2788  000E2E                     l9398:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  2792  000E2E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2793  000E32  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2794  000E36  2ADE               	incf	postinc2,f,c
  2795  000E38  0E00               	movlw	0
  2796  000E3A  22DD               	addwfc	postdec2,f,c
  2797                           
  2798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2799  000E3C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2800  000E40  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2801  000E44  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2802  000E48  0E02               	movlw	2
  2803  000E4A  26DE               	addwf	postinc2,f,c
  2804  000E4C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2805  000E50  0E00               	movlw	0
  2806  000E52  22DD               	addwfc	postdec2,f,c
  2807  000E54  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2808  000E58  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2809  000E5C  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  2810  000E60  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  2811  000E64  0E00               	movlw	0
  2812  000E66  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2813  000E68  0EFF               	movlw	-1
  2814  000E6A  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2815  000E6C  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2816  000E6E  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2817  000E70  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2818  000E72  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2819  000E74  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2820  000E76                     
  2821                           ; BSR set to: 0
  2822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  2823  000E76  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  2824  000E7A  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2825  000E7E  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  2826  000E82  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2827  000E86  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2828  000E8A  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2829  000E8E  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2830  000E92  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2831  000E96  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2832  000E9A  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2833  000E9E  ECE4  F014         	call	_dtoa	;wreg free
  2834  000EA2  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  2835  000EA6  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2836  000EAA  EF86  F008         	goto	l922
  2837  000EAE                     l9404:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2841  000EAE  0E66               	movlw	102
  2842  000EB0  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2843  000EB2  A4D8               	btfss	status,2,c
  2844  000EB4  EF5E  F007         	goto	u10751
  2845  000EB8  EF60  F007         	goto	u10750
  2846  000EBC                     u10751:
  2847  000EBC  EFA0  F007         	goto	l9416
  2848  000EC0                     u10750:
  2849  000EC0                     
  2850                           ; BSR set to: 0
  2851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2852  000EC0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2853  000EC4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2854  000EC8  CFDE FFF6          	movff	postinc2,tblptrl
  2855  000ECC  CFDD FFF7          	movff	postdec2,tblptrh
  2856  000ED0                     	if	0	;tblptru may be non-zero
  2857  000ED0                     	endif
  2858  000ED0                     	if	0	;tblptru may be non-zero
  2859  000ED0                     	endif
  2860  000ED0  0008               	tblrd		*
  2861  000ED2  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2862  000ED6                     
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2865  000ED6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2866  000EDA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2867  000EDE  2ADE               	incf	postinc2,f,c
  2868  000EE0  0E00               	movlw	0
  2869  000EE2  22DD               	addwfc	postdec2,f,c
  2870  000EE4                     
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2873  000EE4  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2874  000EE8  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2875  000EEC  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2876  000EF0  0E04               	movlw	4
  2877  000EF2  26DE               	addwf	postinc2,f,c
  2878  000EF4  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  2879  000EF8  0E00               	movlw	0
  2880  000EFA  22DD               	addwfc	postdec2,f,c
  2881  000EFC  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2882  000F00  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2883  000F04  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  2884  000F08  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  2885  000F0C  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  2886  000F10  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  2887  000F14                     l9412:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2891  000F14  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  2892  000F18  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2893  000F1C  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  2894  000F20  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2895  000F24  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2896  000F28  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2897  000F2C  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  2898  000F30  EC09  F000         	call	_efgtoa	;wreg free
  2899  000F34  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  2900  000F38  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2901  000F3C  EF86  F008         	goto	l922
  2902  000F40                     l9416:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2906  000F40  0EDB               	movlw	low vfpfcnvrt@ct
  2907  000F42  6E06               	movwf	strncmp@_l^0,c
  2908  000F44  0E00               	movlw	high vfpfcnvrt@ct
  2909  000F46  6E07               	movwf	(strncmp@_l+1)^0,c
  2910  000F48  0EFC               	movlw	low STR_23
  2911  000F4A  6E08               	movwf	strncmp@_r^0,c
  2912  000F4C  0E7F               	movlw	high STR_23
  2913  000F4E  6E09               	movwf	(strncmp@_r+1)^0,c
  2914  000F50  0E00               	movlw	0
  2915  000F52  6E0B               	movwf	(strncmp@n+1)^0,c
  2916  000F54  0E02               	movlw	2
  2917  000F56  6E0A               	movwf	strncmp@n^0,c
  2918  000F58  ECC1  F020         	call	_strncmp	;wreg free
  2919  000F5C  5006               	movf	?_strncmp^0,w,c
  2920  000F5E  1007               	iorwf	(?_strncmp+1)^0,w,c
  2921  000F60  A4D8               	btfss	status,2,c
  2922  000F62  EFB5  F007         	goto	u10761
  2923  000F66  EFB7  F007         	goto	u10760
  2924  000F6A                     u10761:
  2925  000F6A  EF33  F008         	goto	l9432
  2926  000F6E                     u10760:
  2927  000F6E                     
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2929  000F6E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  000F72  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  000F76  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  2932  000F7A  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  2933  000F7E  0E01               	movlw	1
  2934  000F80  0100               	movlb	0	; () banked
  2935  000F82  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2936  000F84  0E00               	movlw	0
  2937  000F86  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2938  000F88  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2939  000F8C  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2940  000F90                     	if	0	;tblptru may be non-zero
  2941  000F90                     	endif
  2942  000F90                     	if	0	;tblptru may be non-zero
  2943  000F90                     	endif
  2944  000F90  0008               	tblrd		*
  2945  000F92  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  2946  000F96  0EBF               	movlw	191
  2947  000F98  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  2948  000F9A  0EFF               	movlw	255
  2949  000F9C  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2950  000F9E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2951  000FA2  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2952  000FA6  CFDE FFF6          	movff	postinc2,tblptrl
  2953  000FAA  CFDD FFF7          	movff	postdec2,tblptrh
  2954  000FAE                     	if	0	;tblptru may be non-zero
  2955  000FAE                     	endif
  2956  000FAE                     	if	0	;tblptru may be non-zero
  2957  000FAE                     	endif
  2958  000FAE  0008               	tblrd		*
  2959  000FB0  50F5               	movf	tablat,w,c
  2960  000FB2  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2961  000FB4  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2962  000FB6  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  2963  000FB8  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2964  000FBA  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2965  000FBC  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2966  000FBE  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2967  000FC0  E10A               	bnz	u10770
  2968  000FC2  0E1A               	movlw	26
  2969  000FC4  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2970  000FC6  A0D8               	btfss	status,0,c
  2971  000FC8  EFE8  F007         	goto	u10771
  2972  000FCC  EFEB  F007         	goto	u10770
  2973  000FD0                     u10771:
  2974  000FD0  0E01               	movlw	1
  2975  000FD2  EFEC  F007         	goto	u10780
  2976  000FD6                     u10770:
  2977  000FD6  0E00               	movlw	0
  2978  000FD8                     u10780:
  2979  000FD8  6FD5               	movwf	_vfpfcnvrt$952& (0+255),b
  2980  000FDA  6BD6               	clrf	(_vfpfcnvrt$952+1)& (0+255),b
  2981  000FDC                     
  2982                           ; BSR set to: 0
  2983  000FDC  51D5               	movf	_vfpfcnvrt$952& (0+255),w,b
  2984  000FDE  11D6               	iorwf	(_vfpfcnvrt$952+1)& (0+255),w,b
  2985  000FE0  B4D8               	btfsc	status,2,c
  2986  000FE2  EFF5  F007         	goto	u10791
  2987  000FE6  EFF7  F007         	goto	u10790
  2988  000FEA                     u10791:
  2989  000FEA  EF11  F008         	goto	l9426
  2990  000FEE                     u10790:
  2991  000FEE                     
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2994  000FEE  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2995  000FF2  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2996  000FF6  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  2997  000FFA  0E04               	movlw	4
  2998  000FFC  26DE               	addwf	postinc2,f,c
  2999  000FFE  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  3000  001002  0E00               	movlw	0
  3001  001004  22DD               	addwfc	postdec2,f,c
  3002  001006  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3003  00100A  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3004  00100E  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  3005  001012  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  3006  001016  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  3007  00101A  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  3008                           
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3010  00101E  EF29  F008         	goto	l930
  3011  001022                     l9426:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3015  001022  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3016  001026  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3017  00102A  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  3018  00102E  0E04               	movlw	4
  3019  001030  26DE               	addwf	postinc2,f,c
  3020  001032  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  3021  001036  0E00               	movlw	0
  3022  001038  22DD               	addwfc	postdec2,f,c
  3023  00103A  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3024  00103E  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3025  001042  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  3026  001046  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  3027  00104A  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  3028  00104E  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  3029  001052                     l930:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3033  001052  0E02               	movlw	2
  3034  001054  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3035  001058  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3036  00105C  26DE               	addwf	postinc2,f,c
  3037  00105E  0E00               	movlw	0
  3038  001060  22DD               	addwfc	postdec2,f,c
  3039  001062  EF8A  F007         	goto	l9412
  3040  001066                     l9432:
  3041                           
  3042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3043  001066  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3044  00106A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3045  00106E  CFDE FFF6          	movff	postinc2,tblptrl
  3046  001072  CFDD FFF7          	movff	postdec2,tblptrh
  3047  001076                     	if	0	;tblptru may be non-zero
  3048  001076                     	endif
  3049  001076                     	if	0	;tblptru may be non-zero
  3050  001076                     	endif
  3051  001076  0008               	tblrd		*
  3052  001078  50F5               	movf	tablat,w,c
  3053  00107A  0A25               	xorlw	37
  3054  00107C  A4D8               	btfss	status,2,c
  3055  00107E  EF43  F008         	goto	u10801
  3056  001082  EF45  F008         	goto	u10800
  3057  001086                     u10801:
  3058  001086  EF5D  F008         	goto	l9442
  3059  00108A                     u10800:
  3060  00108A                     
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3062  00108A  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3063  00108E  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3064  001092  2ADE               	incf	postinc2,f,c
  3065  001094  0E00               	movlw	0
  3066  001096  22DD               	addwfc	postdec2,f,c
  3067  001098                     
  3068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3069  001098  0E00               	movlw	0
  3070  00109A  6E07               	movwf	(fputc@c+1)^0,c
  3071  00109C  0E25               	movlw	37
  3072  00109E  6E06               	movwf	fputc@c^0,c
  3073  0010A0  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  3074  0010A4  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3075  0010A8  EC2C  F021         	call	_fputc	;wreg free
  3076  0010AC                     l9438:
  3077                           
  3078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3079  0010AC  0E00               	movlw	0
  3080  0010AE  0100               	movlb	0	; () banked
  3081  0010B0  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3082  0010B2  0E01               	movlw	1
  3083  0010B4  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  3084  0010B6  EF86  F008         	goto	l922
  3085  0010BA                     l9442:
  3086                           
  3087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3088  0010BA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3089  0010BE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3090  0010C2  2ADE               	incf	postinc2,f,c
  3091  0010C4  0E00               	movlw	0
  3092  0010C6  22DD               	addwfc	postdec2,f,c
  3093  0010C8                     
  3094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3095  0010C8  0E00               	movlw	0
  3096  0010CA  0100               	movlb	0	; () banked
  3097  0010CC  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3098  0010CE  0E00               	movlw	0
  3099  0010D0  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  3100  0010D2  EF86  F008         	goto	l922
  3101  0010D6                     l9448:
  3102                           
  3103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3104  0010D6  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3105  0010DA  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3106  0010DE  CFDE FFF6          	movff	postinc2,tblptrl
  3107  0010E2  CFDD FFF7          	movff	postdec2,tblptrh
  3108  0010E6                     	if	0	;tblptru may be non-zero
  3109  0010E6                     	endif
  3110  0010E6                     	if	0	;tblptru may be non-zero
  3111  0010E6                     	endif
  3112  0010E6  0008               	tblrd		*
  3113  0010E8  50F5               	movf	tablat,w,c
  3114  0010EA  6E06               	movwf	fputc@c^0,c
  3115  0010EC  6A07               	clrf	(fputc@c+1)^0,c
  3116  0010EE  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  3117  0010F2  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3118  0010F6  EC2C  F021         	call	_fputc	;wreg free
  3119  0010FA                     
  3120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3121  0010FA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3122  0010FE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3123  001102  2ADE               	incf	postinc2,f,c
  3124  001104  0E00               	movlw	0
  3125  001106  22DD               	addwfc	postdec2,f,c
  3126  001108  EF56  F008         	goto	l9438
  3127  00110C                     l922:
  3128  00110C  0012               	return		;funcret
  3129  00110E                     __end_of_vfpfcnvrt:
  3130                           	opt callstack 0
  3131                           
  3132 ;; *************** function _strncmp *****************
  3133 ;; Defined at:
  3134 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  3137 ;;		 -> vfpfcnvrt@ct(3), 
  3138 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  3139 ;;		 -> STR_25(3), 
  3140 ;;  n               2    9[COMRAM] unsigned int 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  r               2   14[COMRAM] PTR const unsigned char 
  3143 ;;		 -> STR_25(3), 
  3144 ;;  l               2   12[COMRAM] PTR const unsigned char 
  3145 ;;		 -> vfpfcnvrt@ct(3), 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  2    5[COMRAM] int 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3155 ;;      Params:         6       0       0       0       0       0       0       0       0
  3156 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3157 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3158 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3159 ;;Total ram usage:       11 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    2
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_vfpfcnvrt
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text5
  3170  004182                     __ptext5:
  3171                           	opt callstack 0
  3172  004182                     _strncmp:
  3173                           	opt callstack 24
  3174  004182  C006  F00D         	movff	strncmp@_l,strncmp@l
  3175  004186  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  3176  00418A  C008  F00F         	movff	strncmp@_r,strncmp@r
  3177  00418E  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  3178  004192  060A               	decf	strncmp@n^0,f,c
  3179  004194  A0D8               	btfss	status,0,c
  3180  004196  060B               	decf	(strncmp@n+1)^0,f,c
  3181  004198  280A               	incf	strncmp@n^0,w,c
  3182  00419A  E106               	bnz	u10501
  3183  00419C  280B               	incf	(strncmp@n+1)^0,w,c
  3184  00419E  A4D8               	btfss	status,2,c
  3185  0041A0  EFD4  F020         	goto	u10501
  3186  0041A4  EFD6  F020         	goto	u10500
  3187  0041A8                     u10501:
  3188  0041A8  EFE3  F020         	goto	l9268
  3189  0041AC                     u10500:
  3190  0041AC  0E00               	movlw	0
  3191  0041AE  6E07               	movwf	(?_strncmp+1)^0,c
  3192  0041B0  0E00               	movlw	0
  3193  0041B2  6E06               	movwf	?_strncmp^0,c
  3194  0041B4  EF2B  F021         	goto	l1754
  3195  0041B8                     l9266:
  3196  0041B8  4A0D               	infsnz	strncmp@l^0,f,c
  3197  0041BA  2A0E               	incf	(strncmp@l+1)^0,f,c
  3198  0041BC  4A0F               	infsnz	strncmp@r^0,f,c
  3199  0041BE  2A10               	incf	(strncmp@r+1)^0,f,c
  3200  0041C0  060A               	decf	strncmp@n^0,f,c
  3201  0041C2  A0D8               	btfss	status,0,c
  3202  0041C4  060B               	decf	(strncmp@n+1)^0,f,c
  3203  0041C6                     l9268:
  3204  0041C6  C00D  FFD9         	movff	strncmp@l,fsr2l
  3205  0041CA  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3206  0041CE  50DF               	movf	indf2,w,c
  3207  0041D0  B4D8               	btfsc	status,2,c
  3208  0041D2  EFED  F020         	goto	u10511
  3209  0041D6  EFEF  F020         	goto	u10510
  3210  0041DA                     u10511:
  3211  0041DA  EF1A  F021         	goto	l9276
  3212  0041DE                     u10510:
  3213  0041DE  C00F  FFF6         	movff	strncmp@r,tblptrl
  3214  0041E2  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3215  0041E6                     	if	0	;tblptru may be non-zero
  3216  0041E6                     	endif
  3217  0041E6                     	if	0	;tblptru may be non-zero
  3218  0041E6                     	endif
  3219  0041E6  0008               	tblrd		*
  3220  0041E8  50F5               	movf	tablat,w,c
  3221  0041EA  0900               	iorlw	0
  3222  0041EC  B4D8               	btfsc	status,2,c
  3223  0041EE  EFFB  F020         	goto	u10521
  3224  0041F2  EFFD  F020         	goto	u10520
  3225  0041F6                     u10521:
  3226  0041F6  EF1A  F021         	goto	l9276
  3227  0041FA                     u10520:
  3228  0041FA  500A               	movf	strncmp@n^0,w,c
  3229  0041FC  100B               	iorwf	(strncmp@n+1)^0,w,c
  3230  0041FE  B4D8               	btfsc	status,2,c
  3231  004200  EF04  F021         	goto	u10531
  3232  004204  EF06  F021         	goto	u10530
  3233  004208                     u10531:
  3234  004208  EF1A  F021         	goto	l9276
  3235  00420C                     u10530:
  3236  00420C  C00D  FFD9         	movff	strncmp@l,fsr2l
  3237  004210  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3238  004214  50DF               	movf	indf2,w,c
  3239  004216  6E0C               	movwf	??_strncmp^0,c
  3240  004218  C00F  FFF6         	movff	strncmp@r,tblptrl
  3241  00421C  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3242  004220                     	if	0	;tblptru may be non-zero
  3243  004220                     	endif
  3244  004220                     	if	0	;tblptru may be non-zero
  3245  004220                     	endif
  3246  004220  0008               	tblrd		*
  3247  004222  50F5               	movf	tablat,w,c
  3248  004224  180C               	xorwf	??_strncmp^0,w,c
  3249  004226  B4D8               	btfsc	status,2,c
  3250  004228  EF18  F021         	goto	u10541
  3251  00422C  EF1A  F021         	goto	u10540
  3252  004230                     u10541:
  3253  004230  EFDC  F020         	goto	l9266
  3254  004234                     u10540:
  3255  004234                     l9276:
  3256  004234  C00D  FFD9         	movff	strncmp@l,fsr2l
  3257  004238  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  3258  00423C  50DF               	movf	indf2,w,c
  3259  00423E  6E0C               	movwf	??_strncmp^0,c
  3260  004240  C00F  FFF6         	movff	strncmp@r,tblptrl
  3261  004244  C010  FFF7         	movff	strncmp@r+1,tblptrh
  3262  004248                     	if	0	;tblptru may be non-zero
  3263  004248                     	endif
  3264  004248                     	if	0	;tblptru may be non-zero
  3265  004248                     	endif
  3266  004248  0008               	tblrd		*
  3267  00424A  50F5               	movf	tablat,w,c
  3268  00424C  5C0C               	subwf	??_strncmp^0,w,c
  3269  00424E  6E06               	movwf	?_strncmp^0,c
  3270  004250  6A07               	clrf	(?_strncmp+1)^0,c
  3271  004252  A0D8               	btfss	status,0,c
  3272  004254  0607               	decf	(?_strncmp+1)^0,f,c
  3273  004256                     l1754:
  3274  004256  0012               	return		;funcret
  3275  004258                     __end_of_strncmp:
  3276                           	opt callstack 0
  3277                           
  3278 ;; *************** function _efgtoa *****************
  3279 ;; Defined at:
  3280 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  3283 ;;		 -> sprintf@f(6), 
  3284 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  3285 ;;  c               1   35[BANK0 ] unsigned char 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  u               4   93[BANK0 ] unsigned char 
  3288 ;;  g               4   85[BANK0 ] unsigned char 
  3289 ;;  l               4   79[BANK0 ] unsigned char 
  3290 ;;  h               4   75[BANK0 ] unsigned char 
  3291 ;;  ou              4   41[BANK0 ] unsigned char 
  3292 ;;  n               2   91[BANK0 ] int 
  3293 ;;  e               2   89[BANK0 ] int 
  3294 ;;  i               2   83[BANK0 ] int 
  3295 ;;  w               2   72[BANK0 ] int 
  3296 ;;  p               2   69[BANK0 ] int 
  3297 ;;  sign            2   67[BANK0 ] int 
  3298 ;;  d               2   65[BANK0 ] int 
  3299 ;;  ne              2   63[BANK0 ] int 
  3300 ;;  m               2   61[BANK0 ] int 
  3301 ;;  pp              2   59[BANK0 ] int 
  3302 ;;  t               2   57[BANK0 ] int 
  3303 ;;  mode            1   74[BANK0 ] unsigned char 
  3304 ;;  nmode           1   71[BANK0 ] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  2   29[BANK0 ] int 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3314 ;;      Params:         0       7       0       0       0       0       0       0       0
  3315 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3316 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3317 ;;      Totals:         0      68       0       0       0       0       0       0       0
  3318 ;;Total ram usage:       68 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    6
  3321 ;; This function calls:
  3322 ;;		___awdiv
  3323 ;;		___awmod
  3324 ;;		___fladd
  3325 ;;		___fldiv
  3326 ;;		___fleq
  3327 ;;		___flge
  3328 ;;		___flmul
  3329 ;;		___flneg
  3330 ;;		___flsub
  3331 ;;		___fltol
  3332 ;;		___fpclassifyf
  3333 ;;		_floorf
  3334 ;;		_isupper
  3335 ;;		_pad
  3336 ;;		_strcpy
  3337 ;;		_tolower
  3338 ;; This function is called by:
  3339 ;;		_vfpfcnvrt
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text6
  3344  000012                     __ptext6:
  3345                           	opt callstack 0
  3346  000012                     _efgtoa:
  3347                           	opt callstack 20
  3348  000012                     
  3349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3350  000012  0E00               	movlw	0
  3351  000014  0100               	movlb	0	; () banked
  3352  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  3353  000018  0E00               	movlw	0
  3354  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  3355  00001C                     
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3358  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  3359  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  3360  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  3361  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  3362  00002C                     
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3365  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3366  00002E  EF1D  F000         	goto	u9910
  3367  000032  EF1B  F000         	goto	u9911
  3368  000036                     u9911:
  3369  000036  EF33  F000         	goto	l8930
  3370  00003A                     u9910:
  3371  00003A                     
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3374  00003A  0E00               	movlw	0
  3375  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  3376  00003E  0E01               	movlw	1
  3377  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  3378  000042                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3381  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  3382  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  3383  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  3384  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  3385  000052  EC84  F029         	call	___flneg	;wreg free
  3386  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  3387  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  3388  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  3389  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  3390  000066                     l8930:
  3391                           
  3392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3393  000066  0E00               	movlw	0
  3394  000068  0100               	movlb	0	; () banked
  3395  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  3396  00006C  0E00               	movlw	0
  3397  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  3398  000070                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3401  000070  C12A  F0A8         	movff	_width,efgtoa@w
  3402  000074  C12B  F0A9         	movff	_width+1,efgtoa@w+1
  3403  000078                     
  3404                           ; BSR set to: 0
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3406  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  3407  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3408  00007C  A4D8               	btfss	status,2,c
  3409  00007E  EF43  F000         	goto	u9921
  3410  000082  EF45  F000         	goto	u9920
  3411  000086                     u9921:
  3412  000086  EF4D  F000         	goto	l8938
  3413  00008A                     u9920:
  3414  00008A                     
  3415                           ; BSR set to: 0
  3416  00008A  0101               	movlb	1	; () banked
  3417  00008C  A52E               	btfss	_flags& (0+255),2,b
  3418  00008E  EF4B  F000         	goto	u9931
  3419  000092  EF4D  F000         	goto	u9930
  3420  000096                     u9931:
  3421  000096  EF68  F000         	goto	l8950
  3422  00009A                     u9930:
  3423  00009A                     l8938:
  3424                           
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3426  00009A  0100               	movlb	0	; () banked
  3427  00009C  51A3               	movf	efgtoa@sign& (0+255),w,b
  3428  00009E  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3429  0000A0  A4D8               	btfss	status,2,c
  3430  0000A2  EF55  F000         	goto	u9941
  3431  0000A6  EF57  F000         	goto	u9940
  3432  0000AA                     u9941:
  3433  0000AA  EF5D  F000         	goto	l8942
  3434  0000AE                     u9940:
  3435  0000AE                     
  3436                           ; BSR set to: 0
  3437  0000AE  0E00               	movlw	0
  3438  0000B0  6F8E               	movwf	(_efgtoa$922+1)& (0+255),b
  3439  0000B2  0E2B               	movlw	43
  3440  0000B4  6F8D               	movwf	_efgtoa$922& (0+255),b
  3441  0000B6  EF61  F000         	goto	l8944
  3442  0000BA                     l8942:
  3443                           
  3444                           ; BSR set to: 0
  3445  0000BA  0E00               	movlw	0
  3446  0000BC  6F8E               	movwf	(_efgtoa$922+1)& (0+255),b
  3447  0000BE  0E2D               	movlw	45
  3448  0000C0  6F8D               	movwf	_efgtoa$922& (0+255),b
  3449  0000C2                     l8944:
  3450                           
  3451                           ; BSR set to: 0
  3452  0000C2  C08D  F13D         	movff	_efgtoa$922,_dbuf
  3453  0000C6                     
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3456  0000C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  3457  0000C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  3458  0000CA                     
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3461  0000CA  07A8               	decf	efgtoa@w& (0+255),f,b
  3462  0000CC  A0D8               	btfss	status,0,c
  3463  0000CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  3464  0000D0                     l8950:
  3465                           
  3466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3467  0000D0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  3468  0000D4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3469  0000D8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3470  0000DC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3471  0000E0  EC42  F020         	call	___fpclassifyf	;wreg free
  3472  0000E4  0406               	decf	?___fpclassifyf^0,w,c
  3473  0000E6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3474  0000E8  A4D8               	btfss	status,2,c
  3475  0000EA  EF79  F000         	goto	u9951
  3476  0000EE  EF7B  F000         	goto	u9950
  3477  0000F2                     u9951:
  3478  0000F2  EFD2  F000         	goto	l8968
  3479  0000F6                     u9950:
  3480  0000F6  0EBF               	movlw	191
  3481  0000F8  0100               	movlb	0	; () banked
  3482  0000FA  6F84               	movwf	??_efgtoa& (0+255),b
  3483  0000FC  0EFF               	movlw	255
  3484  0000FE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3485  000100  5183               	movf	efgtoa@c& (0+255),w,b
  3486  000102  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3487  000104  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3488  000106  5184               	movf	??_efgtoa& (0+255),w,b
  3489  000108  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3490  00010A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3491  00010C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3492  00010E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3493  000110  E10A               	bnz	u9960
  3494  000112  0E1A               	movlw	26
  3495  000114  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3496  000116  A0D8               	btfss	status,0,c
  3497  000118  EF90  F000         	goto	u9961
  3498  00011C  EF93  F000         	goto	u9960
  3499  000120                     u9961:
  3500  000120  0E01               	movlw	1
  3501  000122  EF94  F000         	goto	u9970
  3502  000126                     u9960:
  3503  000126  0E00               	movlw	0
  3504  000128                     u9970:
  3505  000128  6F8F               	movwf	_efgtoa$923& (0+255),b
  3506  00012A  6B90               	clrf	(_efgtoa$923+1)& (0+255),b
  3507  00012C                     
  3508                           ; BSR set to: 0
  3509  00012C  518F               	movf	_efgtoa$923& (0+255),w,b
  3510  00012E  1190               	iorwf	(_efgtoa$923+1)& (0+255),w,b
  3511  000130  B4D8               	btfsc	status,2,c
  3512  000132  EF9D  F000         	goto	u9981
  3513  000136  EF9F  F000         	goto	u9980
  3514  00013A                     u9981:
  3515  00013A  EFAD  F000         	goto	l8960
  3516  00013E                     u9980:
  3517  00013E                     
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3520  00013E  0E3D               	movlw	low _dbuf
  3521  000140  25BB               	addwf	efgtoa@n& (0+255),w,b
  3522  000142  6E06               	movwf	strcpy@dest^0,c
  3523  000144  0E01               	movlw	high _dbuf
  3524  000146  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3525  000148  6E07               	movwf	(strcpy@dest+1)^0,c
  3526  00014A  0EEC               	movlw	low STR_15
  3527  00014C  6E08               	movwf	strcpy@src^0,c
  3528  00014E  0E7F               	movlw	high STR_15
  3529  000150  6E09               	movwf	(strcpy@src+1)^0,c
  3530  000152  EC34  F027         	call	_strcpy	;wreg free
  3531                           
  3532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3533  000156  EFB9  F000         	goto	l8962
  3534  00015A                     l8960:
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3538  00015A  0E3D               	movlw	low _dbuf
  3539  00015C  25BB               	addwf	efgtoa@n& (0+255),w,b
  3540  00015E  6E06               	movwf	strcpy@dest^0,c
  3541  000160  0E01               	movlw	high _dbuf
  3542  000162  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3543  000164  6E07               	movwf	(strcpy@dest+1)^0,c
  3544  000166  0EF4               	movlw	low STR_16
  3545  000168  6E08               	movwf	strcpy@src^0,c
  3546  00016A  0E7F               	movlw	high STR_16
  3547  00016C  6E09               	movwf	(strcpy@src+1)^0,c
  3548  00016E  EC34  F027         	call	_strcpy	;wreg free
  3549  000172                     l8962:
  3550                           
  3551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3552  000172  0100               	movlb	0	; () banked
  3553  000174  0EFD               	movlw	253
  3554  000176  27A8               	addwf	efgtoa@w& (0+255),f,b
  3555  000178  0EFF               	movlw	255
  3556  00017A  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3557  00017C                     l8964:
  3558                           
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3560  00017C  C07D  F016         	movff	efgtoa@fp,pad@fp
  3561  000180  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  3562  000184  0E3D               	movlw	low _dbuf
  3563  000186  6E18               	movwf	pad@buf^0,c
  3564  000188  0E01               	movlw	high _dbuf
  3565  00018A  6E19               	movwf	(pad@buf+1)^0,c
  3566  00018C  C0A8  F01A         	movff	efgtoa@w,pad@p
  3567  000190  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  3568  000194  ECF5  F021         	call	_pad	;wreg free
  3569  000198  C016  F07D         	movff	?_pad,?_efgtoa
  3570  00019C  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  3571  0001A0  EFEB  F005         	goto	l830
  3572  0001A4                     l8968:
  3573                           
  3574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3575  0001A4  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  3576  0001A8  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3577  0001AC  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3578  0001B0  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3579  0001B4  EC42  F020         	call	___fpclassifyf	;wreg free
  3580  0001B8  5006               	movf	?___fpclassifyf^0,w,c
  3581  0001BA  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  3582  0001BC  A4D8               	btfss	status,2,c
  3583  0001BE  EFE3  F000         	goto	u9991
  3584  0001C2  EFE5  F000         	goto	u9990
  3585  0001C6                     u9991:
  3586  0001C6  EF25  F001         	goto	l8986
  3587  0001CA                     u9990:
  3588  0001CA  0EBF               	movlw	191
  3589  0001CC  0100               	movlb	0	; () banked
  3590  0001CE  6F84               	movwf	??_efgtoa& (0+255),b
  3591  0001D0  0EFF               	movlw	255
  3592  0001D2  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3593  0001D4  5183               	movf	efgtoa@c& (0+255),w,b
  3594  0001D6  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3595  0001D8  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3596  0001DA  5184               	movf	??_efgtoa& (0+255),w,b
  3597  0001DC  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3598  0001DE  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3599  0001E0  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3600  0001E2  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3601  0001E4  E10A               	bnz	u10000
  3602  0001E6  0E1A               	movlw	26
  3603  0001E8  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3604  0001EA  A0D8               	btfss	status,0,c
  3605  0001EC  EFFA  F000         	goto	u10001
  3606  0001F0  EFFD  F000         	goto	u10000
  3607  0001F4                     u10001:
  3608  0001F4  0E01               	movlw	1
  3609  0001F6  EFFE  F000         	goto	u10010
  3610  0001FA                     u10000:
  3611  0001FA  0E00               	movlw	0
  3612  0001FC                     u10010:
  3613  0001FC  6F91               	movwf	_efgtoa$927& (0+255),b
  3614  0001FE  6B92               	clrf	(_efgtoa$927+1)& (0+255),b
  3615  000200                     
  3616                           ; BSR set to: 0
  3617  000200  5191               	movf	_efgtoa$927& (0+255),w,b
  3618  000202  1192               	iorwf	(_efgtoa$927+1)& (0+255),w,b
  3619  000204  B4D8               	btfsc	status,2,c
  3620  000206  EF07  F001         	goto	u10021
  3621  00020A  EF09  F001         	goto	u10020
  3622  00020E                     u10021:
  3623  00020E  EF17  F001         	goto	l8978
  3624  000212                     u10020:
  3625  000212                     
  3626                           ; BSR set to: 0
  3627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3628  000212  0E3D               	movlw	low _dbuf
  3629  000214  25BB               	addwf	efgtoa@n& (0+255),w,b
  3630  000216  6E06               	movwf	strcpy@dest^0,c
  3631  000218  0E01               	movlw	high _dbuf
  3632  00021A  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3633  00021C  6E07               	movwf	(strcpy@dest+1)^0,c
  3634  00021E  0EF0               	movlw	low STR_19
  3635  000220  6E08               	movwf	strcpy@src^0,c
  3636  000222  0E7F               	movlw	high STR_19
  3637  000224  6E09               	movwf	(strcpy@src+1)^0,c
  3638  000226  EC34  F027         	call	_strcpy	;wreg free
  3639                           
  3640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3641  00022A  EFB9  F000         	goto	l8962
  3642  00022E                     l8978:
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3646  00022E  0E3D               	movlw	low _dbuf
  3647  000230  25BB               	addwf	efgtoa@n& (0+255),w,b
  3648  000232  6E06               	movwf	strcpy@dest^0,c
  3649  000234  0E01               	movlw	high _dbuf
  3650  000236  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3651  000238  6E07               	movwf	(strcpy@dest+1)^0,c
  3652  00023A  0EF8               	movlw	low STR_20
  3653  00023C  6E08               	movwf	strcpy@src^0,c
  3654  00023E  0E7F               	movlw	high STR_20
  3655  000240  6E09               	movwf	(strcpy@src+1)^0,c
  3656  000242  EC34  F027         	call	_strcpy	;wreg free
  3657  000246  EFB9  F000         	goto	l8962
  3658  00024A                     l8986:
  3659                           
  3660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3661  00024A  0E00               	movlw	0
  3662  00024C  0100               	movlb	0	; () banked
  3663  00024E  6FBD               	movwf	efgtoa@u& (0+255),b
  3664  000250  0E00               	movlw	0
  3665  000252  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  3666  000254  0E80               	movlw	128
  3667  000256  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  3668  000258  0E3F               	movlw	63
  3669  00025A  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  3670                           
  3671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3672  00025C  0E00               	movlw	0
  3673  00025E  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  3674  000260  0E00               	movlw	0
  3675  000262  6FB9               	movwf	efgtoa@e& (0+255),b
  3676  000264                     
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3679  000264  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  3680  000268  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  3681  00026C  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  3682  000270  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  3683  000274  0E00               	movlw	0
  3684  000276  6E0A               	movwf	___fleq@ff2^0,c
  3685  000278  0E00               	movlw	0
  3686  00027A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  3687  00027C  0E00               	movlw	0
  3688  00027E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  3689  000280  0E00               	movlw	0
  3690  000282  6E0D               	movwf	(___fleq@ff2+3)^0,c
  3691  000284  ECCA  F023         	call	___fleq	;wreg free
  3692  000288  B0D8               	btfsc	status,0,c
  3693  00028A  EF49  F001         	goto	u10031
  3694  00028E  EF4B  F001         	goto	u10030
  3695  000292                     u10031:
  3696  000292  EFCE  F001         	goto	l9004
  3697  000296                     u10030:
  3698  000296  EF6A  F001         	goto	l8996
  3699  00029A                     l8992:
  3700                           
  3701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3702  00029A  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  3703  00029E  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  3704  0002A2  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  3705  0002A6  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  3706  0002AA  0E00               	movlw	0
  3707  0002AC  6E1F               	movwf	___flmul@a^0,c
  3708  0002AE  0E00               	movlw	0
  3709  0002B0  6E20               	movwf	(___flmul@a+1)^0,c
  3710  0002B2  0E20               	movlw	32
  3711  0002B4  6E21               	movwf	(___flmul@a+2)^0,c
  3712  0002B6  0E41               	movlw	65
  3713  0002B8  6E22               	movwf	(___flmul@a+3)^0,c
  3714  0002BA  EC28  F00F         	call	___flmul	;wreg free
  3715  0002BE  C01B  F0BD         	movff	?___flmul,efgtoa@u
  3716  0002C2  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  3717  0002C6  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  3718  0002CA  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  3719  0002CE                     
  3720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3721  0002CE  0100               	movlb	0	; () banked
  3722  0002D0  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  3723  0002D2  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  3724  0002D4                     l8996:
  3725                           
  3726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3727  0002D4  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  3728  0002D8  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  3729  0002DC  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  3730  0002E0  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  3731  0002E4  0E00               	movlw	0
  3732  0002E6  6E1F               	movwf	___flmul@a^0,c
  3733  0002E8  0E00               	movlw	0
  3734  0002EA  6E20               	movwf	(___flmul@a+1)^0,c
  3735  0002EC  0E20               	movlw	32
  3736  0002EE  6E21               	movwf	(___flmul@a+2)^0,c
  3737  0002F0  0E41               	movlw	65
  3738  0002F2  6E22               	movwf	(___flmul@a+3)^0,c
  3739  0002F4  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  3740  0002F8  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  3741  0002FC  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  3742  000300  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  3743  000304  EC28  F00F         	call	___flmul	;wreg free
  3744  000308  C01B  F038         	movff	?___flmul,___flge@ff2
  3745  00030C  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  3746  000310  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  3747  000314  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  3748  000318  ECC0  F01F         	call	___flge	;wreg free
  3749  00031C  B0D8               	btfsc	status,0,c
  3750  00031E  EF93  F001         	goto	u10041
  3751  000322  EF95  F001         	goto	u10040
  3752  000326                     u10041:
  3753  000326  EF4D  F001         	goto	l8992
  3754  00032A                     u10040:
  3755  00032A  EFB5  F001         	goto	l9002
  3756  00032E                     l8998:
  3757                           
  3758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3759  00032E  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  3760  000332  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3761  000336  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3762  00033A  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3763  00033E  0E00               	movlw	0
  3764  000340  6E48               	movwf	___fldiv@a^0,c
  3765  000342  0E00               	movlw	0
  3766  000344  6E49               	movwf	(___fldiv@a+1)^0,c
  3767  000346  0E20               	movlw	32
  3768  000348  6E4A               	movwf	(___fldiv@a+2)^0,c
  3769  00034A  0E41               	movlw	65
  3770  00034C  6E4B               	movwf	(___fldiv@a+3)^0,c
  3771  00034E  EC16  F013         	call	___fldiv	;wreg free
  3772  000352  C044  F0BD         	movff	?___fldiv,efgtoa@u
  3773  000356  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  3774  00035A  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  3775  00035E  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  3776  000362                     
  3777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3778  000362  0100               	movlb	0	; () banked
  3779  000364  07B9               	decf	efgtoa@e& (0+255),f,b
  3780  000366  A0D8               	btfss	status,0,c
  3781  000368  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  3782  00036A                     l9002:
  3783                           
  3784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3785  00036A  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  3786  00036E  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  3787  000372  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  3788  000376  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  3789  00037A  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  3790  00037E  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  3791  000382  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  3792  000386  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  3793  00038A  ECC0  F01F         	call	___flge	;wreg free
  3794  00038E  A0D8               	btfss	status,0,c
  3795  000390  EFCC  F001         	goto	u10051
  3796  000394  EFCE  F001         	goto	u10050
  3797  000398                     u10051:
  3798  000398  EF97  F001         	goto	l8998
  3799  00039C                     u10050:
  3800  00039C                     l9004:
  3801                           
  3802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3803  00039C  C083  F00C         	movff	efgtoa@c,tolower@c
  3804  0003A0  6A0D               	clrf	(tolower@c+1)^0,c
  3805  0003A2  ECD5  F026         	call	_tolower	;wreg free
  3806  0003A6  500C               	movf	?_tolower^0,w,c
  3807  0003A8  0100               	movlb	0	; () banked
  3808  0003AA  6FAA               	movwf	efgtoa@mode& (0+255),b
  3809  0003AC                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3812  0003AC  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  3813  0003B0                     
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3816  0003B0  0E67               	movlw	103
  3817  0003B2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3818  0003B4  A4D8               	btfss	status,2,c
  3819  0003B6  EFDF  F001         	goto	u10061
  3820  0003BA  EFE1  F001         	goto	u10060
  3821  0003BE                     u10061:
  3822  0003BE  EF09  F002         	goto	l9018
  3823  0003C2                     u10060:
  3824  0003C2                     
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3827  0003C2  0101               	movlb	1	; () banked
  3828  0003C4  512C               	movf	_prec& (0+255),w,b
  3829  0003C6  112D               	iorwf	(_prec+1)& (0+255),w,b
  3830  0003C8  A4D8               	btfss	status,2,c
  3831  0003CA  EFE9  F001         	goto	u10071
  3832  0003CE  EFEB  F001         	goto	u10070
  3833  0003D2                     u10071:
  3834  0003D2  EFEF  F001         	goto	l9014
  3835  0003D6                     u10070:
  3836  0003D6                     
  3837                           ; BSR set to: 1
  3838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3839  0003D6  0E00               	movlw	0
  3840  0003D8  6F2D               	movwf	(_prec+1)& (0+255),b
  3841  0003DA  0E01               	movlw	1
  3842  0003DC  6F2C               	movwf	_prec& (0+255),b
  3843  0003DE                     l9014:
  3844                           
  3845                           ; BSR set to: 1
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3847  0003DE  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  3848  0003E0  EFFC  F001         	goto	u10080
  3849  0003E4  512D               	movf	(_prec+1)& (0+255),w,b
  3850  0003E6  E106               	bnz	u10081
  3851  0003E8  052C               	decf	_prec& (0+255),w,b
  3852  0003EA  B0D8               	btfsc	status,0,c
  3853  0003EC  EFFA  F001         	goto	u10081
  3854  0003F0  EFFC  F001         	goto	u10080
  3855  0003F4                     u10081:
  3856  0003F4  EF03  F002         	goto	l848
  3857  0003F8                     u10080:
  3858  0003F8                     l9016:
  3859                           
  3860                           ; BSR set to: 1
  3861  0003F8  0E00               	movlw	0
  3862  0003FA  0100               	movlb	0	; () banked
  3863  0003FC  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  3864  0003FE  0E06               	movlw	6
  3865  000400  6FA5               	movwf	efgtoa@p& (0+255),b
  3866  000402  EF13  F002         	goto	l9024
  3867  000406                     l848:
  3868                           
  3869                           ; BSR set to: 1
  3870  000406  C12C  F0A5         	movff	_prec,efgtoa@p
  3871  00040A  C12D  F0A6         	movff	_prec+1,efgtoa@p+1
  3872  00040E  EF13  F002         	goto	l9024
  3873  000412                     l9018:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3877  000412  0101               	movlb	1	; () banked
  3878  000414  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  3879  000416  EF0F  F002         	goto	u10091
  3880  00041A  EF11  F002         	goto	u10090
  3881  00041E                     u10091:
  3882  00041E  EFFC  F001         	goto	l9016
  3883  000422                     u10090:
  3884  000422  EF03  F002         	goto	l848
  3885  000426                     l9024:
  3886                           
  3887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3888  000426  0E67               	movlw	103
  3889  000428  0100               	movlb	0	; () banked
  3890  00042A  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3891  00042C  A4D8               	btfss	status,2,c
  3892  00042E  EF1B  F002         	goto	u10101
  3893  000432  EF1D  F002         	goto	u10100
  3894  000436                     u10101:
  3895  000436  EF4C  F002         	goto	l9034
  3896  00043A                     u10100:
  3897  00043A                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3900  00043A  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3901  00043C  EF2B  F002         	goto	u10110
  3902  000440  0EFC               	movlw	252
  3903  000442  5DB9               	subwf	efgtoa@e& (0+255),w,b
  3904  000444  0EFF               	movlw	255
  3905  000446  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3906  000448  A0D8               	btfss	status,0,c
  3907  00044A  EF29  F002         	goto	u10111
  3908  00044E  EF2B  F002         	goto	u10110
  3909  000452                     u10111:
  3910  000452  EF4A  F002         	goto	l9032
  3911  000456                     u10110:
  3912  000456                     
  3913                           ; BSR set to: 0
  3914  000456  0EFF               	movlw	255
  3915  000458  6F84               	movwf	??_efgtoa& (0+255),b
  3916  00045A  0EFF               	movlw	255
  3917  00045C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3918  00045E  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  3919  000462  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  3920  000466  5184               	movf	??_efgtoa& (0+255),w,b
  3921  000468  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3922  00046A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3923  00046C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3924  00046E  51B9               	movf	efgtoa@e& (0+255),w,b
  3925  000470  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3926  000472  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3927  000474  0A80               	xorlw	128
  3928  000476  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  3929  000478  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  3930  00047A  0A80               	xorlw	128
  3931  00047C  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3932  00047E  A0D8               	btfss	status,0,c
  3933  000480  EF44  F002         	goto	u10121
  3934  000484  EF46  F002         	goto	u10120
  3935  000488                     u10121:
  3936  000488  EF4A  F002         	goto	l9032
  3937  00048C                     u10120:
  3938  00048C                     
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3941  00048C  0E66               	movlw	102
  3942  00048E  6FA7               	movwf	efgtoa@nmode& (0+255),b
  3943                           
  3944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3945  000490  EF4C  F002         	goto	l9034
  3946  000494                     l9032:
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3950  000494  0E65               	movlw	101
  3951  000496  6FA7               	movwf	efgtoa@nmode& (0+255),b
  3952  000498                     l9034:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3956  000498  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  3957  00049C  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  3958  0004A0                     
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3961  0004A0  0E67               	movlw	103
  3962  0004A2  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  3963  0004A4  A4D8               	btfss	status,2,c
  3964  0004A6  EF57  F002         	goto	u10131
  3965  0004AA  EF59  F002         	goto	u10130
  3966  0004AE                     u10131:
  3967  0004AE  EF69  F002         	goto	l9042
  3968  0004B2                     u10130:
  3969  0004B2                     
  3970                           ; BSR set to: 0
  3971  0004B2  0E66               	movlw	102
  3972  0004B4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  3973  0004B6  A4D8               	btfss	status,2,c
  3974  0004B8  EF60  F002         	goto	u10141
  3975  0004BC  EF62  F002         	goto	u10140
  3976  0004C0                     u10141:
  3977  0004C0  EF6B  F002         	goto	l9044
  3978  0004C4                     u10140:
  3979  0004C4                     
  3980                           ; BSR set to: 0
  3981  0004C4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3982  0004C6  EF69  F002         	goto	u10150
  3983  0004CA  EF67  F002         	goto	u10151
  3984  0004CE                     u10151:
  3985  0004CE  EF6B  F002         	goto	l9044
  3986  0004D2                     u10150:
  3987  0004D2                     l9042:
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3991  0004D2  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  3992  0004D4  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  3993  0004D6                     l9044:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3997  0004D6  0E66               	movlw	102
  3998  0004D8  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  3999  0004DA  A4D8               	btfss	status,2,c
  4000  0004DC  EF72  F002         	goto	u10161
  4001  0004E0  EF74  F002         	goto	u10160
  4002  0004E4                     u10161:
  4003  0004E4  EF94  F002         	goto	l9054
  4004  0004E8                     u10160:
  4005  0004E8                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4008  0004E8  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4009  0004EA  EF7B  F002         	goto	u10170
  4010  0004EE  EF79  F002         	goto	u10171
  4011  0004F2                     u10171:
  4012  0004F2  EF87  F002         	goto	l9050
  4013  0004F6                     u10170:
  4014  0004F6                     
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4017  0004F6  0E00               	movlw	0
  4018  0004F8  6FBD               	movwf	efgtoa@u& (0+255),b
  4019  0004FA  0E00               	movlw	0
  4020  0004FC  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  4021  0004FE  0E80               	movlw	128
  4022  000500  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  4023  000502  0E3F               	movlw	63
  4024  000504  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  4025                           
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4027  000506  0E00               	movlw	0
  4028  000508  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  4029  00050A  0E00               	movlw	0
  4030  00050C  6FB9               	movwf	efgtoa@e& (0+255),b
  4031  00050E                     l9050:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4035  00050E  0E67               	movlw	103
  4036  000510  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  4037  000512  B4D8               	btfsc	status,2,c
  4038  000514  EF8E  F002         	goto	u10181
  4039  000518  EF90  F002         	goto	u10180
  4040  00051C                     u10181:
  4041  00051C  EF94  F002         	goto	l9054
  4042  000520                     u10180:
  4043  000520                     
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4046  000520  51B9               	movf	efgtoa@e& (0+255),w,b
  4047  000522  279D               	addwf	efgtoa@m& (0+255),f,b
  4048  000524  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  4049  000526  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4050  000528                     l9054:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4054  000528  0E00               	movlw	0
  4055  00052A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4056  00052C  0E00               	movlw	0
  4057  00052E  6FB3               	movwf	efgtoa@i& (0+255),b
  4058  000530                     
  4059                           ; BSR set to: 0
  4060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4061  000530  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  4062  000534  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  4063  000538  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  4064  00053C  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  4065  000540                     
  4066                           ; BSR set to: 0
  4067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4068  000540  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  4069  000544  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  4070  000548  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  4071  00054C  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  4072                           
  4073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4074  000550  EF25  F003         	goto	l9068
  4075  000554                     l9060:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4079  000554  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  4080  000558  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  4081  00055C  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  4082  000560  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  4083  000564  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  4084  000568  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  4085  00056C  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  4086  000570  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  4087  000574  EC16  F013         	call	___fldiv	;wreg free
  4088  000578  C044  F050         	movff	?___fldiv,floorf@x
  4089  00057C  C045  F051         	movff	?___fldiv+1,floorf@x+1
  4090  000580  C046  F052         	movff	?___fldiv+2,floorf@x+2
  4091  000584  C047  F053         	movff	?___fldiv+3,floorf@x+3
  4092  000588  EC7E  F017         	call	_floorf	;wreg free
  4093  00058C  C050  F0AF         	movff	?_floorf,efgtoa@l
  4094  000590  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  4095  000594  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  4096  000598  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  4097                           
  4098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4099  00059C  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  4100  0005A0  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  4101  0005A4  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  4102  0005A8  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  4103  0005AC  EC3C  F01F         	call	___fltol	;wreg free
  4104  0005B0  C072  F0A1         	movff	?___fltol,efgtoa@d
  4105  0005B4  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  4106  0005B8                     
  4107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4108  0005B8  C0AB  F044         	movff	efgtoa@h,___flsub@b
  4109  0005BC  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  4110  0005C0  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  4111  0005C4  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  4112  0005C8  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  4113  0005CC  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  4114  0005D0  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  4115  0005D4  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  4116  0005D8  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  4117  0005DC  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  4118  0005E0  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  4119  0005E4  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  4120  0005E8  EC28  F00F         	call	___flmul	;wreg free
  4121  0005EC  C01B  F048         	movff	?___flmul,___flsub@a
  4122  0005F0  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  4123  0005F4  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  4124  0005F8  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  4125  0005FC  EC81  F028         	call	___flsub	;wreg free
  4126  000600  C044  F0AB         	movff	?___flsub,efgtoa@h
  4127  000604  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  4128  000608  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  4129  00060C  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  4130  000610                     
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4132  000610  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  4133  000614  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  4134  000618  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  4135  00061C  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  4136  000620  0E00               	movlw	0
  4137  000622  6E48               	movwf	___fldiv@a^0,c
  4138  000624  0E00               	movlw	0
  4139  000626  6E49               	movwf	(___fldiv@a+1)^0,c
  4140  000628  0E20               	movlw	32
  4141  00062A  6E4A               	movwf	(___fldiv@a+2)^0,c
  4142  00062C  0E41               	movlw	65
  4143  00062E  6E4B               	movwf	(___fldiv@a+3)^0,c
  4144  000630  EC16  F013         	call	___fldiv	;wreg free
  4145  000634  C044  F0BD         	movff	?___fldiv,efgtoa@u
  4146  000638  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  4147  00063C  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  4148  000640  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  4149  000644                     
  4150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4151  000644  0100               	movlb	0	; () banked
  4152  000646  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  4153  000648  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  4154  00064A                     l9068:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4158  00064A  519D               	movf	efgtoa@m& (0+255),w,b
  4159  00064C  5DB3               	subwf	efgtoa@i& (0+255),w,b
  4160  00064E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4161  000650  0A80               	xorlw	128
  4162  000652  6F84               	movwf	??_efgtoa& (0+255),b
  4163  000654  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  4164  000656  0A80               	xorlw	128
  4165  000658  5984               	subwfb	??_efgtoa& (0+255),w,b
  4166  00065A  A0D8               	btfss	status,0,c
  4167  00065C  EF32  F003         	goto	u10191
  4168  000660  EF34  F003         	goto	u10190
  4169  000664                     u10191:
  4170  000664  EFAA  F002         	goto	l9060
  4171  000668                     u10190:
  4172  000668                     
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4175  000668  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  4176  00066C  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  4177  000670  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  4178  000674  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  4179  000678  0E00               	movlw	0
  4180  00067A  6E1F               	movwf	___flmul@a^0,c
  4181  00067C  0E00               	movlw	0
  4182  00067E  6E20               	movwf	(___flmul@a+1)^0,c
  4183  000680  0EA0               	movlw	160
  4184  000682  6E21               	movwf	(___flmul@a+2)^0,c
  4185  000684  0E40               	movlw	64
  4186  000686  6E22               	movwf	(___flmul@a+3)^0,c
  4187  000688  EC28  F00F         	call	___flmul	;wreg free
  4188  00068C  C01B  F0AF         	movff	?___flmul,efgtoa@l
  4189  000690  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
  4190  000694  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
  4191  000698  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
  4192  00069C                     
  4193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4194  00069C  C0AB  F034         	movff	efgtoa@h,___flge@ff1
  4195  0006A0  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
  4196  0006A4  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
  4197  0006A8  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
  4198  0006AC  C0AF  F038         	movff	efgtoa@l,___flge@ff2
  4199  0006B0  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
  4200  0006B4  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  4201  0006B8  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  4202  0006BC  ECC0  F01F         	call	___flge	;wreg free
  4203  0006C0  B0D8               	btfsc	status,0,c
  4204  0006C2  EF65  F003         	goto	u10201
  4205  0006C6  EF67  F003         	goto	u10200
  4206  0006CA                     u10201:
  4207  0006CA  EF72  F003         	goto	l9076
  4208  0006CE                     u10200:
  4209  0006CE                     
  4210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4211  0006CE  0E00               	movlw	0
  4212  0006D0  0100               	movlb	0	; () banked
  4213  0006D2  6FAF               	movwf	efgtoa@l& (0+255),b
  4214  0006D4  0E00               	movlw	0
  4215  0006D6  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  4216  0006D8  0E00               	movlw	0
  4217  0006DA  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  4218  0006DC  0E00               	movlw	0
  4219  0006DE  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  4220                           
  4221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  4222  0006E0  EF9B  F003         	goto	l9082
  4223  0006E4                     l9076:
  4224                           
  4225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4226  0006E4  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
  4227  0006E8  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  4228  0006EC  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  4229  0006F0  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  4230  0006F4  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
  4231  0006F8  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  4232  0006FC  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  4233  000700  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  4234  000704  ECCA  F023         	call	___fleq	;wreg free
  4235  000708  A0D8               	btfss	status,0,c
  4236  00070A  EF89  F003         	goto	u10211
  4237  00070E  EF8B  F003         	goto	u10210
  4238  000712                     u10211:
  4239  000712  EF9B  F003         	goto	l9082
  4240  000716                     u10210:
  4241  000716  0100               	movlb	0	; () banked
  4242  000718  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  4243  00071A  EF91  F003         	goto	u10221
  4244  00071E  EF93  F003         	goto	u10220
  4245  000722                     u10221:
  4246  000722  EF9B  F003         	goto	l9082
  4247  000726                     u10220:
  4248  000726                     
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4251  000726  0E00               	movlw	0
  4252  000728  6FAF               	movwf	efgtoa@l& (0+255),b
  4253  00072A  0E00               	movlw	0
  4254  00072C  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  4255  00072E  0E00               	movlw	0
  4256  000730  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  4257  000732  0E00               	movlw	0
  4258  000734  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  4259  000736                     l9082:
  4260                           
  4261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4262  000736  C0B5  F034         	movff	efgtoa@g,___fladd@b
  4263  00073A  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
  4264  00073E  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
  4265  000742  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
  4266  000746  C0AF  F038         	movff	efgtoa@l,___fladd@a
  4267  00074A  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
  4268  00074E  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  4269  000752  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  4270  000756  EC87  F008         	call	___fladd	;wreg free
  4271  00075A  C034  F0AB         	movff	?___fladd,efgtoa@h
  4272  00075E  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
  4273  000762  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
  4274  000766  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
  4275  00076A                     
  4276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4277  00076A  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
  4278  00076E  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  4279  000772  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  4280  000776  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  4281  00077A                     
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4283  00077A  0E65               	movlw	101
  4284  00077C  0100               	movlb	0	; () banked
  4285  00077E  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  4286  000780  B4D8               	btfsc	status,2,c
  4287  000782  EFC5  F003         	goto	u10231
  4288  000786  EFC7  F003         	goto	u10230
  4289  00078A                     u10231:
  4290  00078A  EFCD  F003         	goto	l9090
  4291  00078E                     u10230:
  4292  00078E                     
  4293                           ; BSR set to: 0
  4294  00078E  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
  4295  000792  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  4296  000796  EFD1  F003         	goto	l874
  4297  00079A                     l9090:
  4298                           
  4299                           ; BSR set to: 0
  4300  00079A  0E00               	movlw	0
  4301  00079C  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  4302  00079E  0E00               	movlw	0
  4303  0007A0  6F9F               	movwf	efgtoa@ne& (0+255),b
  4304  0007A2                     l874:
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4308  0007A2  0E00               	movlw	0
  4309  0007A4  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  4310  0007A6  0E00               	movlw	0
  4311  0007A8  6F9B               	movwf	efgtoa@pp& (0+255),b
  4312                           
  4313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4314  0007AA  0E00               	movlw	0
  4315  0007AC  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  4316  0007AE  0E00               	movlw	0
  4317  0007B0  6F99               	movwf	efgtoa@t& (0+255),b
  4318                           
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4320  0007B2  0E00               	movlw	0
  4321  0007B4  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4322  0007B6  0E00               	movlw	0
  4323  0007B8  6FB3               	movwf	efgtoa@i& (0+255),b
  4324                           
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4326  0007BA  EFCE  F004         	goto	l9140
  4327  0007BE                     l9092:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4331  0007BE  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  4332  0007C2  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  4333  0007C6  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  4334  0007CA  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  4335  0007CE  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  4336  0007D2  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  4337  0007D6  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  4338  0007DA  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  4339  0007DE  EC16  F013         	call	___fldiv	;wreg free
  4340  0007E2  C044  F050         	movff	?___fldiv,floorf@x
  4341  0007E6  C045  F051         	movff	?___fldiv+1,floorf@x+1
  4342  0007EA  C046  F052         	movff	?___fldiv+2,floorf@x+2
  4343  0007EE  C047  F053         	movff	?___fldiv+3,floorf@x+3
  4344  0007F2  EC7E  F017         	call	_floorf	;wreg free
  4345  0007F6  C050  F0AF         	movff	?_floorf,efgtoa@l
  4346  0007FA  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  4347  0007FE  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  4348  000802  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  4349                           
  4350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4351  000806  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  4352  00080A  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  4353  00080E  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  4354  000812  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  4355  000816  EC3C  F01F         	call	___fltol	;wreg free
  4356  00081A  C072  F0A1         	movff	?___fltol,efgtoa@d
  4357  00081E  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  4358  000822                     
  4359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4360  000822  0101               	movlb	1	; () banked
  4361  000824  B92E               	btfsc	_flags& (0+255),4,b
  4362  000826  EF17  F004         	goto	u10241
  4363  00082A  EF19  F004         	goto	u10240
  4364  00082E                     u10241:
  4365  00082E  EF37  F004         	goto	l9104
  4366  000832                     u10240:
  4367  000832                     
  4368                           ; BSR set to: 1
  4369  000832  0100               	movlb	0	; () banked
  4370  000834  51A1               	movf	efgtoa@d& (0+255),w,b
  4371  000836  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4372  000838  A4D8               	btfss	status,2,c
  4373  00083A  EF21  F004         	goto	u10251
  4374  00083E  EF23  F004         	goto	u10250
  4375  000842                     u10251:
  4376  000842  EF37  F004         	goto	l9104
  4377  000846                     u10250:
  4378  000846                     
  4379                           ; BSR set to: 0
  4380  000846  0E67               	movlw	103
  4381  000848  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  4382  00084A  A4D8               	btfss	status,2,c
  4383  00084C  EF2A  F004         	goto	u10261
  4384  000850  EF2C  F004         	goto	u10260
  4385  000854                     u10261:
  4386  000854  EF37  F004         	goto	l9104
  4387  000858                     u10260:
  4388  000858                     
  4389                           ; BSR set to: 0
  4390  000858  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4391  00085A  EF33  F004         	goto	u10270
  4392  00085E  EF31  F004         	goto	u10271
  4393  000862                     u10271:
  4394  000862  EF37  F004         	goto	l9104
  4395  000866                     u10270:
  4396  000866                     
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4399  000866  4B99               	infsnz	efgtoa@t& (0+255),f,b
  4400  000868  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  4401                           
  4402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4403  00086A  EF82  F004         	goto	l9132
  4404  00086E                     l9104:
  4405                           
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4407  00086E  0100               	movlb	0	; () banked
  4408  000870  519B               	movf	efgtoa@pp& (0+255),w,b
  4409  000872  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4410  000874  A4D8               	btfss	status,2,c
  4411  000876  EF3F  F004         	goto	u10281
  4412  00087A  EF41  F004         	goto	u10280
  4413  00087E                     u10281:
  4414  00087E  EF6B  F004         	goto	l9124
  4415  000882                     u10280:
  4416  000882                     
  4417                           ; BSR set to: 0
  4418  000882  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4419  000884  EF48  F004         	goto	u10290
  4420  000888  EF46  F004         	goto	u10291
  4421  00088C                     u10291:
  4422  00088C  EF6B  F004         	goto	l9124
  4423  000890                     u10290:
  4424  000890                     
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4427  000890  0E3D               	movlw	low _dbuf
  4428  000892  25BB               	addwf	efgtoa@n& (0+255),w,b
  4429  000894  6ED9               	movwf	fsr2l,c
  4430  000896  0E01               	movlw	high _dbuf
  4431  000898  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4432  00089A  6EDA               	movwf	fsr2h,c
  4433  00089C  0E2E               	movlw	46
  4434  00089E  6EDF               	movwf	indf2,c
  4435  0008A0                     
  4436                           ; BSR set to: 0
  4437  0008A0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4438  0008A2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4439  0008A4                     
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4442  0008A4  07A8               	decf	efgtoa@w& (0+255),f,b
  4443  0008A6  A0D8               	btfss	status,0,c
  4444  0008A8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4445  0008AA                     
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4448  0008AA  0E00               	movlw	0
  4449  0008AC  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  4450  0008AE  0E01               	movlw	1
  4451  0008B0  6F9B               	movwf	efgtoa@pp& (0+255),b
  4452  0008B2  EF6B  F004         	goto	l9124
  4453  0008B6                     l9116:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4457  0008B6  0E3D               	movlw	low _dbuf
  4458  0008B8  25BB               	addwf	efgtoa@n& (0+255),w,b
  4459  0008BA  6ED9               	movwf	fsr2l,c
  4460  0008BC  0E01               	movlw	high _dbuf
  4461  0008BE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4462  0008C0  6EDA               	movwf	fsr2h,c
  4463  0008C2  0E30               	movlw	48
  4464  0008C4  6EDF               	movwf	indf2,c
  4465  0008C6                     
  4466                           ; BSR set to: 0
  4467  0008C6  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4468  0008C8  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4469  0008CA                     
  4470                           ; BSR set to: 0
  4471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4472  0008CA  07A8               	decf	efgtoa@w& (0+255),f,b
  4473  0008CC  A0D8               	btfss	status,0,c
  4474  0008CE  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4475  0008D0                     
  4476                           ; BSR set to: 0
  4477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4478  0008D0  0799               	decf	efgtoa@t& (0+255),f,b
  4479  0008D2  A0D8               	btfss	status,0,c
  4480  0008D4  079A               	decf	(efgtoa@t+1)& (0+255),f,b
  4481  0008D6                     l9124:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4485  0008D6  5199               	movf	efgtoa@t& (0+255),w,b
  4486  0008D8  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4487  0008DA  A4D8               	btfss	status,2,c
  4488  0008DC  EF72  F004         	goto	u10301
  4489  0008E0  EF74  F004         	goto	u10300
  4490  0008E4                     u10301:
  4491  0008E4  EF5B  F004         	goto	l9116
  4492  0008E8                     u10300:
  4493  0008E8                     
  4494                           ; BSR set to: 0
  4495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4496  0008E8  0E3D               	movlw	low _dbuf
  4497  0008EA  25BB               	addwf	efgtoa@n& (0+255),w,b
  4498  0008EC  6ED9               	movwf	fsr2l,c
  4499  0008EE  0E01               	movlw	high _dbuf
  4500  0008F0  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4501  0008F2  6EDA               	movwf	fsr2h,c
  4502  0008F4  51A1               	movf	efgtoa@d& (0+255),w,b
  4503  0008F6  0F30               	addlw	48
  4504  0008F8  6EDF               	movwf	indf2,c
  4505  0008FA                     
  4506                           ; BSR set to: 0
  4507  0008FA  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4508  0008FC  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4509  0008FE                     
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4512  0008FE  07A8               	decf	efgtoa@w& (0+255),f,b
  4513  000900  A0D8               	btfss	status,0,c
  4514  000902  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4515  000904                     l9132:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4519  000904  C0AB  F044         	movff	efgtoa@h,___flsub@b
  4520  000908  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  4521  00090C  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  4522  000910  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  4523  000914  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  4524  000918  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  4525  00091C  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  4526  000920  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  4527  000924  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  4528  000928  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  4529  00092C  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  4530  000930  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  4531  000934  EC28  F00F         	call	___flmul	;wreg free
  4532  000938  C01B  F048         	movff	?___flmul,___flsub@a
  4533  00093C  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  4534  000940  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  4535  000944  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  4536  000948  EC81  F028         	call	___flsub	;wreg free
  4537  00094C  C044  F0AB         	movff	?___flsub,efgtoa@h
  4538  000950  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  4539  000954  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  4540  000958  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  4541  00095C                     
  4542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4543  00095C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  4544  000960  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  4545  000964  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  4546  000968  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  4547  00096C  0E00               	movlw	0
  4548  00096E  6E48               	movwf	___fldiv@a^0,c
  4549  000970  0E00               	movlw	0
  4550  000972  6E49               	movwf	(___fldiv@a+1)^0,c
  4551  000974  0E20               	movlw	32
  4552  000976  6E4A               	movwf	(___fldiv@a+2)^0,c
  4553  000978  0E41               	movlw	65
  4554  00097A  6E4B               	movwf	(___fldiv@a+3)^0,c
  4555  00097C  EC16  F013         	call	___fldiv	;wreg free
  4556  000980  C044  F0BD         	movff	?___fldiv,efgtoa@u
  4557  000984  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  4558  000988  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  4559  00098C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  4560  000990                     
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4562  000990  0100               	movlb	0	; () banked
  4563  000992  079F               	decf	efgtoa@ne& (0+255),f,b
  4564  000994  A0D8               	btfss	status,0,c
  4565  000996  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  4566  000998                     
  4567                           ; BSR set to: 0
  4568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4569  000998  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  4570  00099A  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  4571  00099C                     l9140:
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4575  00099C  519D               	movf	efgtoa@m& (0+255),w,b
  4576  00099E  5DB3               	subwf	efgtoa@i& (0+255),w,b
  4577  0009A0  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4578  0009A2  0A80               	xorlw	128
  4579  0009A4  6F84               	movwf	??_efgtoa& (0+255),b
  4580  0009A6  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  4581  0009A8  0A80               	xorlw	128
  4582  0009AA  5984               	subwfb	??_efgtoa& (0+255),w,b
  4583  0009AC  B0D8               	btfsc	status,0,c
  4584  0009AE  EFDB  F004         	goto	u10311
  4585  0009B2  EFDD  F004         	goto	u10310
  4586  0009B6                     u10311:
  4587  0009B6  EFEB  F004         	goto	l9144
  4588  0009BA                     u10310:
  4589  0009BA                     
  4590                           ; BSR set to: 0
  4591  0009BA  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4592  0009BC  EFE9  F004         	goto	u10321
  4593  0009C0  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
  4594  0009C2  E109               	bnz	u10320
  4595  0009C4  0E4B               	movlw	75
  4596  0009C6  5DBB               	subwf	efgtoa@n& (0+255),w,b
  4597  0009C8  A0D8               	btfss	status,0,c
  4598  0009CA  EFE9  F004         	goto	u10321
  4599  0009CE  EFEB  F004         	goto	u10320
  4600  0009D2                     u10321:
  4601  0009D2  EFDF  F003         	goto	l9092
  4602  0009D6                     u10320:
  4603  0009D6                     l9144:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4607  0009D6  519B               	movf	efgtoa@pp& (0+255),w,b
  4608  0009D8  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4609  0009DA  A4D8               	btfss	status,2,c
  4610  0009DC  EFF2  F004         	goto	u10331
  4611  0009E0  EFF4  F004         	goto	u10330
  4612  0009E4                     u10331:
  4613  0009E4  EF07  F005         	goto	l9152
  4614  0009E8                     u10330:
  4615  0009E8                     
  4616                           ; BSR set to: 0
  4617  0009E8  0101               	movlb	1	; () banked
  4618  0009EA  A92E               	btfss	_flags& (0+255),4,b
  4619  0009EC  EFFA  F004         	goto	u10341
  4620  0009F0  EFFC  F004         	goto	u10340
  4621  0009F4                     u10341:
  4622  0009F4  EF07  F005         	goto	l9152
  4623  0009F8                     u10340:
  4624  0009F8                     
  4625                           ; BSR set to: 1
  4626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4627  0009F8  0E3D               	movlw	low _dbuf
  4628  0009FA  0100               	movlb	0	; () banked
  4629  0009FC  25BB               	addwf	efgtoa@n& (0+255),w,b
  4630  0009FE  6ED9               	movwf	fsr2l,c
  4631  000A00  0E01               	movlw	high _dbuf
  4632  000A02  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4633  000A04  6EDA               	movwf	fsr2h,c
  4634  000A06  0E2E               	movlw	46
  4635  000A08  6EDF               	movwf	indf2,c
  4636  000A0A                     
  4637                           ; BSR set to: 0
  4638  000A0A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4639  000A0C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4640  000A0E                     l9152:
  4641                           
  4642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4643  000A0E  0E3D               	movlw	low _dbuf
  4644  000A10  0100               	movlb	0	; () banked
  4645  000A12  25BB               	addwf	efgtoa@n& (0+255),w,b
  4646  000A14  6ED9               	movwf	fsr2l,c
  4647  000A16  0E01               	movlw	high _dbuf
  4648  000A18  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4649  000A1A  6EDA               	movwf	fsr2h,c
  4650  000A1C  0E00               	movlw	0
  4651  000A1E  6EDF               	movwf	indf2,c
  4652  000A20                     
  4653                           ; BSR set to: 0
  4654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4655  000A20  0E65               	movlw	101
  4656  000A22  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  4657  000A24  A4D8               	btfss	status,2,c
  4658  000A26  EF17  F005         	goto	u10351
  4659  000A2A  EF19  F005         	goto	u10350
  4660  000A2E                     u10351:
  4661  000A2E  EFBE  F000         	goto	l8964
  4662  000A32                     u10350:
  4663  000A32                     
  4664                           ; BSR set to: 0
  4665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4666  000A32  0E00               	movlw	0
  4667  000A34  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  4668  000A36  0E4F               	movlw	79
  4669  000A38  6FB3               	movwf	efgtoa@i& (0+255),b
  4670  000A3A                     
  4671                           ; BSR set to: 0
  4672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4673  000A3A  0E3D               	movlw	low _dbuf
  4674  000A3C  25B3               	addwf	efgtoa@i& (0+255),w,b
  4675  000A3E  6ED9               	movwf	fsr2l,c
  4676  000A40  0E01               	movlw	high _dbuf
  4677  000A42  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4678  000A44  6EDA               	movwf	fsr2h,c
  4679  000A46  0E00               	movlw	0
  4680  000A48  6EDF               	movwf	indf2,c
  4681  000A4A                     
  4682                           ; BSR set to: 0
  4683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4684  000A4A  0E00               	movlw	0
  4685  000A4C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4686  000A4E  0E00               	movlw	0
  4687  000A50  6FA3               	movwf	efgtoa@sign& (0+255),b
  4688  000A52                     
  4689                           ; BSR set to: 0
  4690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4691  000A52  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4692  000A54  EF30  F005         	goto	u10360
  4693  000A58  EF2E  F005         	goto	u10361
  4694  000A5C                     u10361:
  4695  000A5C  EF38  F005         	goto	l9168
  4696  000A60                     u10360:
  4697  000A60                     
  4698                           ; BSR set to: 0
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4700  000A60  0E00               	movlw	0
  4701  000A62  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4702  000A64  0E01               	movlw	1
  4703  000A66  6FA3               	movwf	efgtoa@sign& (0+255),b
  4704  000A68                     
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4707  000A68  6DB9               	negf	efgtoa@e& (0+255),b
  4708  000A6A  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
  4709  000A6C  B0D8               	btfsc	status,0,c
  4710  000A6E  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  4711  000A70                     l9168:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4715  000A70  0E00               	movlw	0
  4716  000A72  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  4717  000A74  0E02               	movlw	2
  4718  000A76  6FA5               	movwf	efgtoa@p& (0+255),b
  4719                           
  4720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4721  000A78  EF69  F005         	goto	l9180
  4722  000A7C                     l9170:
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4726  000A7C  07B3               	decf	efgtoa@i& (0+255),f,b
  4727  000A7E  A0D8               	btfss	status,0,c
  4728  000A80  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4729  000A82                     
  4730                           ; BSR set to: 0
  4731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4732  000A82  0E3D               	movlw	low _dbuf
  4733  000A84  25B3               	addwf	efgtoa@i& (0+255),w,b
  4734  000A86  6ED9               	movwf	fsr2l,c
  4735  000A88  0E01               	movlw	high _dbuf
  4736  000A8A  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4737  000A8C  6EDA               	movwf	fsr2h,c
  4738  000A8E  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
  4739  000A92  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  4740  000A96  0E00               	movlw	0
  4741  000A98  6E09               	movwf	(___awmod@divisor+1)^0,c
  4742  000A9A  0E0A               	movlw	10
  4743  000A9C  6E08               	movwf	___awmod@divisor^0,c
  4744  000A9E  EC1B  F023         	call	___awmod	;wreg free
  4745  000AA2  5006               	movf	?___awmod^0,w,c
  4746  000AA4  0F30               	addlw	48
  4747  000AA6  6EDF               	movwf	indf2,c
  4748  000AA8                     
  4749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4750  000AA8  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
  4751  000AAC  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  4752  000AB0  0E00               	movlw	0
  4753  000AB2  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4754  000AB4  0E0A               	movlw	10
  4755  000AB6  6E08               	movwf	___awdiv@divisor^0,c
  4756  000AB8  EC58  F022         	call	___awdiv	;wreg free
  4757  000ABC  C006  F0B9         	movff	?___awdiv,efgtoa@e
  4758  000AC0  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
  4759  000AC4                     
  4760                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4761  000AC4  0100               	movlb	0	; () banked
  4762  000AC6  07A5               	decf	efgtoa@p& (0+255),f,b
  4763  000AC8  A0D8               	btfss	status,0,c
  4764  000ACA  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
  4765  000ACC                     
  4766                           ; BSR set to: 0
  4767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4768  000ACC  07A8               	decf	efgtoa@w& (0+255),f,b
  4769  000ACE  A0D8               	btfss	status,0,c
  4770  000AD0  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4771  000AD2                     l9180:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4775  000AD2  51B9               	movf	efgtoa@e& (0+255),w,b
  4776  000AD4  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4777  000AD6  A4D8               	btfss	status,2,c
  4778  000AD8  EF70  F005         	goto	u10371
  4779  000ADC  EF72  F005         	goto	u10370
  4780  000AE0                     u10371:
  4781  000AE0  EF3E  F005         	goto	l9170
  4782  000AE4                     u10370:
  4783  000AE4                     
  4784                           ; BSR set to: 0
  4785  000AE4  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4786  000AE6  EF7F  F005         	goto	u10380
  4787  000AEA  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
  4788  000AEC  E106               	bnz	u10381
  4789  000AEE  05A5               	decf	efgtoa@p& (0+255),w,b
  4790  000AF0  B0D8               	btfsc	status,0,c
  4791  000AF2  EF7D  F005         	goto	u10381
  4792  000AF6  EF7F  F005         	goto	u10380
  4793  000AFA                     u10381:
  4794  000AFA  EF3E  F005         	goto	l9170
  4795  000AFE                     u10380:
  4796  000AFE                     
  4797                           ; BSR set to: 0
  4798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4799  000AFE  07B3               	decf	efgtoa@i& (0+255),f,b
  4800  000B00  A0D8               	btfss	status,0,c
  4801  000B02  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4802  000B04                     
  4803                           ; BSR set to: 0
  4804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4805  000B04  51A3               	movf	efgtoa@sign& (0+255),w,b
  4806  000B06  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4807  000B08  A4D8               	btfss	status,2,c
  4808  000B0A  EF89  F005         	goto	u10391
  4809  000B0E  EF8B  F005         	goto	u10390
  4810  000B12                     u10391:
  4811  000B12  EF91  F005         	goto	l9190
  4812  000B16                     u10390:
  4813  000B16                     
  4814                           ; BSR set to: 0
  4815  000B16  0E00               	movlw	0
  4816  000B18  6F94               	movwf	(_efgtoa$931+1)& (0+255),b
  4817  000B1A  0E2B               	movlw	43
  4818  000B1C  6F93               	movwf	_efgtoa$931& (0+255),b
  4819  000B1E  EF95  F005         	goto	l9192
  4820  000B22                     l9190:
  4821                           
  4822                           ; BSR set to: 0
  4823  000B22  0E00               	movlw	0
  4824  000B24  6F94               	movwf	(_efgtoa$931+1)& (0+255),b
  4825  000B26  0E2D               	movlw	45
  4826  000B28  6F93               	movwf	_efgtoa$931& (0+255),b
  4827  000B2A                     l9192:
  4828                           
  4829                           ; BSR set to: 0
  4830  000B2A  0E3D               	movlw	low _dbuf
  4831  000B2C  25B3               	addwf	efgtoa@i& (0+255),w,b
  4832  000B2E  6ED9               	movwf	fsr2l,c
  4833  000B30  0E01               	movlw	high _dbuf
  4834  000B32  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4835  000B34  6EDA               	movwf	fsr2h,c
  4836  000B36  C093  FFDF         	movff	_efgtoa$931,indf2
  4837  000B3A                     
  4838                           ; BSR set to: 0
  4839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4840  000B3A  07A8               	decf	efgtoa@w& (0+255),f,b
  4841  000B3C  A0D8               	btfss	status,0,c
  4842  000B3E  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4843  000B40                     
  4844                           ; BSR set to: 0
  4845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4846  000B40  07B3               	decf	efgtoa@i& (0+255),f,b
  4847  000B42  A0D8               	btfss	status,0,c
  4848  000B44  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  4849  000B46                     
  4850                           ; BSR set to: 0
  4851  000B46  0EBF               	movlw	191
  4852  000B48  6F84               	movwf	??_efgtoa& (0+255),b
  4853  000B4A  0EFF               	movlw	255
  4854  000B4C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4855  000B4E  5183               	movf	efgtoa@c& (0+255),w,b
  4856  000B50  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4857  000B52  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4858  000B54  5184               	movf	??_efgtoa& (0+255),w,b
  4859  000B56  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4860  000B58  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4861  000B5A  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4862  000B5C  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4863  000B5E  E10A               	bnz	u10400
  4864  000B60  0E1A               	movlw	26
  4865  000B62  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4866  000B64  A0D8               	btfss	status,0,c
  4867  000B66  EFB7  F005         	goto	u10401
  4868  000B6A  EFBA  F005         	goto	u10400
  4869  000B6E                     u10401:
  4870  000B6E  0E01               	movlw	1
  4871  000B70  EFBB  F005         	goto	u10410
  4872  000B74                     u10400:
  4873  000B74  0E00               	movlw	0
  4874  000B76                     u10410:
  4875  000B76  6F97               	movwf	_efgtoa$933& (0+255),b
  4876  000B78  6B98               	clrf	(_efgtoa$933+1)& (0+255),b
  4877  000B7A                     
  4878                           ; BSR set to: 0
  4879  000B7A  5197               	movf	_efgtoa$933& (0+255),w,b
  4880  000B7C  1198               	iorwf	(_efgtoa$933+1)& (0+255),w,b
  4881  000B7E  A4D8               	btfss	status,2,c
  4882  000B80  EFC4  F005         	goto	u10421
  4883  000B84  EFC6  F005         	goto	u10420
  4884  000B88                     u10421:
  4885  000B88  EFCC  F005         	goto	l9206
  4886  000B8C                     u10420:
  4887  000B8C                     
  4888                           ; BSR set to: 0
  4889  000B8C  0E00               	movlw	0
  4890  000B8E  6F96               	movwf	(_efgtoa$932+1)& (0+255),b
  4891  000B90  0E65               	movlw	101
  4892  000B92  6F95               	movwf	_efgtoa$932& (0+255),b
  4893  000B94  EFD0  F005         	goto	l9208
  4894  000B98                     l9206:
  4895                           
  4896                           ; BSR set to: 0
  4897  000B98  0E00               	movlw	0
  4898  000B9A  6F96               	movwf	(_efgtoa$932+1)& (0+255),b
  4899  000B9C  0E45               	movlw	69
  4900  000B9E  6F95               	movwf	_efgtoa$932& (0+255),b
  4901  000BA0                     l9208:
  4902                           
  4903                           ; BSR set to: 0
  4904  000BA0  0E3D               	movlw	low _dbuf
  4905  000BA2  25B3               	addwf	efgtoa@i& (0+255),w,b
  4906  000BA4  6ED9               	movwf	fsr2l,c
  4907  000BA6  0E01               	movlw	high _dbuf
  4908  000BA8  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4909  000BAA  6EDA               	movwf	fsr2h,c
  4910  000BAC  C095  FFDF         	movff	_efgtoa$932,indf2
  4911  000BB0                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4914  000BB0  07A8               	decf	efgtoa@w& (0+255),f,b
  4915  000BB2  A0D8               	btfss	status,0,c
  4916  000BB4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4917  000BB6                     
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4920  000BB6  0E3D               	movlw	low _dbuf
  4921  000BB8  25BB               	addwf	efgtoa@n& (0+255),w,b
  4922  000BBA  6E06               	movwf	strcpy@dest^0,c
  4923  000BBC  0E01               	movlw	high _dbuf
  4924  000BBE  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4925  000BC0  6E07               	movwf	(strcpy@dest+1)^0,c
  4926  000BC2  0E3D               	movlw	low _dbuf
  4927  000BC4  25B3               	addwf	efgtoa@i& (0+255),w,b
  4928  000BC6  6E08               	movwf	strcpy@src^0,c
  4929  000BC8  0E01               	movlw	high _dbuf
  4930  000BCA  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4931  000BCC  6E09               	movwf	(strcpy@src+1)^0,c
  4932  000BCE  EC34  F027         	call	_strcpy	;wreg free
  4933  000BD2  EFBE  F000         	goto	l8964
  4934  000BD6                     l830:
  4935  000BD6  0012               	return		;funcret
  4936  000BD8                     __end_of_efgtoa:
  4937                           	opt callstack 0
  4938                           
  4939 ;; *************** function _tolower *****************
  4940 ;; Defined at:
  4941 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  c               2   11[COMRAM] int 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  2   11[COMRAM] int 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4955 ;;      Params:         2       0       0       0       0       0       0       0       0
  4956 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4957 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4958 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4959 ;;Total ram usage:        8 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    3
  4962 ;; This function calls:
  4963 ;;		_isupper
  4964 ;; This function is called by:
  4965 ;;		_efgtoa
  4966 ;;		_vfpfcnvrt
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text7
  4971  004DAA                     __ptext7:
  4972                           	opt callstack 0
  4973  004DAA                     _tolower:
  4974                           	opt callstack 23
  4975  004DAA  0EBF               	movlw	191
  4976  004DAC  6E0E               	movwf	??_tolower^0,c
  4977  004DAE  0EFF               	movlw	255
  4978  004DB0  6E0F               	movwf	(??_tolower+1)^0,c
  4979  004DB2  C00C  F010         	movff	tolower@c,??_tolower+2
  4980  004DB6  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4981  004DBA  500E               	movf	??_tolower^0,w,c
  4982  004DBC  2610               	addwf	(??_tolower+2)^0,f,c
  4983  004DBE  500F               	movf	(??_tolower+1)^0,w,c
  4984  004DC0  2211               	addwfc	(??_tolower+3)^0,f,c
  4985  004DC2  5011               	movf	(??_tolower+3)^0,w,c
  4986  004DC4  E10A               	bnz	u9250
  4987  004DC6  0E1A               	movlw	26
  4988  004DC8  5C10               	subwf	(??_tolower+2)^0,w,c
  4989  004DCA  A0D8               	btfss	status,0,c
  4990  004DCC  EFEA  F026         	goto	u9251
  4991  004DD0  EFED  F026         	goto	u9250
  4992  004DD4                     u9251:
  4993  004DD4  0E01               	movlw	1
  4994  004DD6  EFEE  F026         	goto	u9260
  4995  004DDA                     u9250:
  4996  004DDA  0E00               	movlw	0
  4997  004DDC                     u9260:
  4998  004DDC  6E12               	movwf	_tolower$1555^0,c
  4999  004DDE  6A13               	clrf	(_tolower$1555+1)^0,c
  5000  004DE0  5012               	movf	_tolower$1555^0,w,c
  5001  004DE2  1013               	iorwf	(_tolower$1555+1)^0,w,c
  5002  004DE4  B4D8               	btfsc	status,2,c
  5003  004DE6  EFF7  F026         	goto	u9271
  5004  004DEA  EFF9  F026         	goto	u9270
  5005  004DEE                     u9271:
  5006  004DEE  EF00  F027         	goto	l1764
  5007  004DF2                     u9270:
  5008  004DF2  0E20               	movlw	32
  5009  004DF4  100C               	iorwf	tolower@c^0,w,c
  5010  004DF6  6E0C               	movwf	?_tolower^0,c
  5011  004DF8  500D               	movf	(tolower@c+1)^0,w,c
  5012  004DFA  6E0D               	movwf	(?_tolower+1)^0,c
  5013  004DFC  EF04  F027         	goto	l1769
  5014  004E00                     l1764:
  5015  004E00  C00C  F00C         	movff	tolower@c,?_tolower
  5016  004E04  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  5017  004E08                     l1769:
  5018  004E08  0012               	return		;funcret
  5019  004E0A                     __end_of_tolower:
  5020                           	opt callstack 0
  5021                           
  5022 ;; *************** function _isupper *****************
  5023 ;; Defined at:
  5024 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  c               2    5[COMRAM] int 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  2    5[COMRAM] int 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5038 ;;      Params:         2       0       0       0       0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5040 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5041 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5042 ;;Total ram usage:        6 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    2
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_efgtoa
  5049 ;;		_vfpfcnvrt
  5050 ;;		_tolower
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text8
  5055  005298                     __ptext8:
  5056                           	opt callstack 0
  5057  005298                     _isupper:
  5058                           	opt callstack 23
  5059  005298  0EBF               	movlw	191
  5060  00529A  6E08               	movwf	??_isupper^0,c
  5061  00529C  0EFF               	movlw	255
  5062  00529E  6E09               	movwf	(??_isupper+1)^0,c
  5063  0052A0  C006  F00A         	movff	isupper@c,??_isupper+2
  5064  0052A4  C007  F00B         	movff	isupper@c+1,??_isupper+3
  5065  0052A8  5008               	movf	??_isupper^0,w,c
  5066  0052AA  260A               	addwf	(??_isupper+2)^0,f,c
  5067  0052AC  5009               	movf	(??_isupper+1)^0,w,c
  5068  0052AE  220B               	addwfc	(??_isupper+3)^0,f,c
  5069  0052B0  500B               	movf	(??_isupper+3)^0,w,c
  5070  0052B2  E10A               	bnz	u8080
  5071  0052B4  0E1A               	movlw	26
  5072  0052B6  5C0A               	subwf	(??_isupper+2)^0,w,c
  5073  0052B8  A0D8               	btfss	status,0,c
  5074  0052BA  EF61  F029         	goto	u8081
  5075  0052BE  EF64  F029         	goto	u8080
  5076  0052C2                     u8081:
  5077  0052C2  0E01               	movlw	1
  5078  0052C4  EF65  F029         	goto	u8090
  5079  0052C8                     u8080:
  5080  0052C8  0E00               	movlw	0
  5081  0052CA                     u8090:
  5082  0052CA  6E06               	movwf	?_isupper^0,c
  5083  0052CC  6A07               	clrf	(?_isupper+1)^0,c
  5084  0052CE  0012               	return		;funcret
  5085  0052D0                     __end_of_isupper:
  5086                           	opt callstack 0
  5087                           
  5088 ;; *************** function _strcpy *****************
  5089 ;; Defined at:
  5090 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  dest            2    5[COMRAM] PTR unsigned char 
  5093 ;;		 -> dbuf(80), 
  5094 ;;  src             2    7[COMRAM] PTR const unsigned char 
  5095 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  5096 ;;		 -> dbuf(80), 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  d               2   13[COMRAM] PTR unsigned char 
  5099 ;;		 -> dbuf(80), 
  5100 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5101 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  5102 ;;		 -> dbuf(80), 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2    5[COMRAM] PTR unsigned char 
  5105 ;; Registers used:
  5106 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5112 ;;      Params:         4       0       0       0       0       0       0       0       0
  5113 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5114 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5115 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5116 ;;Total ram usage:       10 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    2
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_efgtoa
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text9
  5127  004E68                     __ptext9:
  5128                           	opt callstack 0
  5129  004E68                     _strcpy:
  5130                           	opt callstack 23
  5131  004E68  C008  F00C         	movff	strcpy@src,strcpy@s
  5132  004E6C  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  5133  004E70  C006  F00E         	movff	strcpy@dest,strcpy@d
  5134  004E74  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  5135  004E78                     l8566:
  5136  004E78  500C               	movf	strcpy@s^0,w,c
  5137  004E7A  6E0A               	movwf	??_strcpy^0,c
  5138  004E7C  500D               	movf	(strcpy@s+1)^0,w,c
  5139  004E7E  6E0B               	movwf	(??_strcpy+1)^0,c
  5140  004E80  4A0C               	infsnz	strcpy@s^0,f,c
  5141  004E82  2A0D               	incf	(strcpy@s+1)^0,f,c
  5142  004E84  C00A  FFF6         	movff	??_strcpy,tblptrl
  5143  004E88  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  5144  004E8C  6AF8               	clrf	tblptru,c
  5145  004E8E  C00E  FFD9         	movff	strcpy@d,fsr2l
  5146  004E92  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  5147  004E96  4A0E               	infsnz	strcpy@d^0,f,c
  5148  004E98  2A0F               	incf	(strcpy@d+1)^0,f,c
  5149  004E9A  0E07               	movlw	(high __ramtop+-1)
  5150  004E9C  64F7               	cpfsgt	tblptrh,c
  5151  004E9E  D003               	bra	u9237
  5152  004EA0  0008               	tblrd		*
  5153  004EA2  50F5               	movf	tablat,w,c
  5154  004EA4  D005               	bra	u9230
  5155  004EA6                     u9237:
  5156  004EA6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5157  004EAA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5158  004EAE  50EF               	movf	indf0,w,c
  5159  004EB0                     u9230:
  5160  004EB0  6EDF               	movwf	indf2,c
  5161  004EB2  50DF               	movf	indf2,w,c
  5162  004EB4  A4D8               	btfss	status,2,c
  5163  004EB6  EF5F  F027         	goto	u9241
  5164  004EBA  EF61  F027         	goto	u9240
  5165  004EBE                     u9241:
  5166  004EBE  EF3C  F027         	goto	l8566
  5167  004EC2                     u9240:
  5168  004EC2  0012               	return		;funcret
  5169  004EC4                     __end_of_strcpy:
  5170                           	opt callstack 0
  5171                           
  5172 ;; *************** function _floorf *****************
  5173 ;; Defined at:
  5174 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  x               4   79[COMRAM] float 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  u               4   25[BANK0 ] struct .
  5179 ;;  m               4   19[BANK0 ] unsigned long 
  5180 ;;  e               2   23[BANK0 ] int 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  4   79[COMRAM] float 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5190 ;;      Params:         4       0       0       0       0       0       0       0       0
  5191 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5192 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5193 ;;      Totals:         4      16       0       0       0       0       0       0       0
  5194 ;;Total ram usage:       20 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    2
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_efgtoa
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text10
  5205  002EFC                     __ptext10:
  5206                           	opt callstack 0
  5207  002EFC                     _floorf:
  5208                           	opt callstack 23
  5209  002EFC  C104  F079         	movff	floorf@F524,floorf@u
  5210  002F00  C105  F07A         	movff	floorf@F524+1,floorf@u+1
  5211  002F04  C106  F07B         	movff	floorf@F524+2,floorf@u+2
  5212  002F08  C107  F07C         	movff	floorf@F524+3,floorf@u+3
  5213  002F0C  C050  F079         	movff	floorf@x,floorf@u
  5214  002F10  C051  F07A         	movff	floorf@x+1,floorf@u+1
  5215  002F14  C052  F07B         	movff	floorf@x+2,floorf@u+2
  5216  002F18  C053  F07C         	movff	floorf@x+3,floorf@u+3
  5217  002F1C  0E81               	movlw	129
  5218  002F1E  0100               	movlb	0	; () banked
  5219  002F20  6F6D               	movwf	??_floorf& (0+255),b
  5220  002F22  0EFF               	movlw	255
  5221  002F24  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5222  002F26  C079  F06F         	movff	floorf@u,??_floorf+2
  5223  002F2A  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5224  002F2E  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5225  002F32  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5226  002F36  0E18               	movlw	24
  5227  002F38  EFA3  F017         	goto	u9280
  5228  002F3C                     u9285:
  5229  002F3C  90D8               	bcf	status,0,c
  5230  002F3E  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5231  002F40  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5232  002F42  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5233  002F44  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5234  002F46                     u9280:
  5235  002F46  2EE8               	decfsz	wreg,f,c
  5236  002F48  EF9E  F017         	goto	u9285
  5237  002F4C  516F               	movf	(??_floorf+2)& (0+255),w,b
  5238  002F4E  256D               	addwf	??_floorf& (0+255),w,b
  5239  002F50  6F77               	movwf	floorf@e& (0+255),b
  5240  002F52  0E00               	movlw	0
  5241  002F54  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5242  002F56  6F78               	movwf	(floorf@e+1)& (0+255),b
  5243  002F58  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5244  002F5A  EFB8  F017         	goto	u9291
  5245  002F5E  5178               	movf	(floorf@e+1)& (0+255),w,b
  5246  002F60  E109               	bnz	u9290
  5247  002F62  0E17               	movlw	23
  5248  002F64  5D77               	subwf	floorf@e& (0+255),w,b
  5249  002F66  A0D8               	btfss	status,0,c
  5250  002F68  EFB8  F017         	goto	u9291
  5251  002F6C  EFBA  F017         	goto	u9290
  5252  002F70                     u9291:
  5253  002F70  EFC4  F017         	goto	l8584
  5254  002F74                     u9290:
  5255  002F74                     l8582:
  5256                           
  5257                           ; BSR set to: 0
  5258  002F74  C050  F050         	movff	floorf@x,?_floorf
  5259  002F78  C051  F051         	movff	floorf@x+1,?_floorf+1
  5260  002F7C  C052  F052         	movff	floorf@x+2,?_floorf+2
  5261  002F80  C053  F053         	movff	floorf@x+3,?_floorf+3
  5262  002F84  EF88  F018         	goto	l1666
  5263  002F88                     l8584:
  5264                           
  5265                           ; BSR set to: 0
  5266  002F88  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5267  002F8A  EFC9  F017         	goto	u9301
  5268  002F8E  EFCB  F017         	goto	u9300
  5269  002F92                     u9301:
  5270  002F92  EF3C  F018         	goto	l8594
  5271  002F96                     u9300:
  5272  002F96                     
  5273                           ; BSR set to: 0
  5274  002F96  C077  F06D         	movff	floorf@e,??_floorf
  5275  002F9A  0EFF               	movlw	255
  5276  002F9C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5277  002F9E  0EFF               	movlw	255
  5278  002FA0  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5279  002FA2  0E7F               	movlw	127
  5280  002FA4  6F70               	movwf	(??_floorf+3)& (0+255),b
  5281  002FA6  0E00               	movlw	0
  5282  002FA8  6F71               	movwf	(??_floorf+4)& (0+255),b
  5283  002FAA                     u9315:
  5284  002FAA  676D               	tstfsz	??_floorf& (0+255),b
  5285  002FAC  EFDA  F017         	goto	u9316
  5286  002FB0  EFE2  F017         	goto	u9317
  5287  002FB4                     u9316:
  5288  002FB4  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5289  002FB6  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5290  002FB8  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5291  002FBA  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5292  002FBC  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5293  002FBE  2F6D               	decfsz	??_floorf& (0+255),f,b
  5294  002FC0  EFD5  F017         	goto	u9315
  5295  002FC4                     u9317:
  5296  002FC4  C06E  F073         	movff	??_floorf+1,floorf@m
  5297  002FC8  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5298  002FCC  C070  F075         	movff	??_floorf+3,floorf@m+2
  5299  002FD0  C071  F076         	movff	??_floorf+4,floorf@m+3
  5300  002FD4  0100               	movlb	0	; () banked
  5301  002FD6  5173               	movf	floorf@m& (0+255),w,b
  5302  002FD8  1579               	andwf	floorf@u& (0+255),w,b
  5303  002FDA  6F6D               	movwf	??_floorf& (0+255),b
  5304  002FDC  5174               	movf	(floorf@m+1)& (0+255),w,b
  5305  002FDE  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5306  002FE0  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5307  002FE2  5175               	movf	(floorf@m+2)& (0+255),w,b
  5308  002FE4  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5309  002FE6  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5310  002FE8  5176               	movf	(floorf@m+3)& (0+255),w,b
  5311  002FEA  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5312  002FEC  6F70               	movwf	(??_floorf+3)& (0+255),b
  5313  002FEE  516D               	movf	??_floorf& (0+255),w,b
  5314  002FF0  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5315  002FF2  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5316  002FF4  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5317  002FF6  A4D8               	btfss	status,2,c
  5318  002FF8  EF00  F018         	goto	u9321
  5319  002FFC  EF02  F018         	goto	u9320
  5320  003000                     u9321:
  5321  003000  EF04  F018         	goto	l8590
  5322  003004                     u9320:
  5323  003004  EFBA  F017         	goto	l8582
  5324  003008                     l8590:
  5325                           
  5326                           ; BSR set to: 0
  5327  003008  C079  F06D         	movff	floorf@u,??_floorf
  5328  00300C  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5329  003010  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5330  003014  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5331  003018  0E20               	movlw	32
  5332  00301A  EF14  F018         	goto	u9330
  5333  00301E                     u9335:
  5334  00301E  90D8               	bcf	status,0,c
  5335  003020  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5336  003022  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5337  003024  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5338  003026  336D               	rrcf	??_floorf& (0+255),f,b
  5339  003028                     u9330:
  5340  003028  2EE8               	decfsz	wreg,f,c
  5341  00302A  EF0F  F018         	goto	u9335
  5342  00302E  516D               	movf	??_floorf& (0+255),w,b
  5343  003030  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5344  003032  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5345  003034  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5346  003036  B4D8               	btfsc	status,2,c
  5347  003038  EF20  F018         	goto	u9341
  5348  00303C  EF22  F018         	goto	u9340
  5349  003040                     u9341:
  5350  003040  EF2A  F018         	goto	l1669
  5351  003044                     u9340:
  5352  003044                     
  5353                           ; BSR set to: 0
  5354  003044  5173               	movf	floorf@m& (0+255),w,b
  5355  003046  2779               	addwf	floorf@u& (0+255),f,b
  5356  003048  5174               	movf	(floorf@m+1)& (0+255),w,b
  5357  00304A  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  5358  00304C  5175               	movf	(floorf@m+2)& (0+255),w,b
  5359  00304E  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  5360  003050  5176               	movf	(floorf@m+3)& (0+255),w,b
  5361  003052  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  5362  003054                     l1669:
  5363                           
  5364                           ; BSR set to: 0
  5365  003054  1D73               	comf	floorf@m& (0+255),w,b
  5366  003056  6F6D               	movwf	??_floorf& (0+255),b
  5367  003058  1D74               	comf	(floorf@m+1)& (0+255),w,b
  5368  00305A  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5369  00305C  1D75               	comf	(floorf@m+2)& (0+255),w,b
  5370  00305E  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5371  003060  1D76               	comf	(floorf@m+3)& (0+255),w,b
  5372  003062  6F70               	movwf	(??_floorf+3)& (0+255),b
  5373  003064  516D               	movf	??_floorf& (0+255),w,b
  5374  003066  1779               	andwf	floorf@u& (0+255),f,b
  5375  003068  516E               	movf	(??_floorf+1)& (0+255),w,b
  5376  00306A  177A               	andwf	(floorf@u+1)& (0+255),f,b
  5377  00306C  516F               	movf	(??_floorf+2)& (0+255),w,b
  5378  00306E  177B               	andwf	(floorf@u+2)& (0+255),f,b
  5379  003070  5170               	movf	(??_floorf+3)& (0+255),w,b
  5380  003072  177C               	andwf	(floorf@u+3)& (0+255),f,b
  5381  003074  EF80  F018         	goto	l8602
  5382  003078                     l8594:
  5383                           
  5384                           ; BSR set to: 0
  5385  003078  C079  F06D         	movff	floorf@u,??_floorf
  5386  00307C  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5387  003080  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5388  003084  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5389  003088  0E20               	movlw	32
  5390  00308A  EF4C  F018         	goto	u9350
  5391  00308E                     u9355:
  5392  00308E  90D8               	bcf	status,0,c
  5393  003090  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5394  003092  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5395  003094  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5396  003096  336D               	rrcf	??_floorf& (0+255),f,b
  5397  003098                     u9350:
  5398  003098  2EE8               	decfsz	wreg,f,c
  5399  00309A  EF47  F018         	goto	u9355
  5400  00309E  516D               	movf	??_floorf& (0+255),w,b
  5401  0030A0  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5402  0030A2  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5403  0030A4  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5404  0030A6  A4D8               	btfss	status,2,c
  5405  0030A8  EF58  F018         	goto	u9361
  5406  0030AC  EF5A  F018         	goto	u9360
  5407  0030B0                     u9361:
  5408  0030B0  EF64  F018         	goto	l8598
  5409  0030B4                     u9360:
  5410  0030B4                     
  5411                           ; BSR set to: 0
  5412  0030B4  0E00               	movlw	0
  5413  0030B6  6F79               	movwf	floorf@u& (0+255),b
  5414  0030B8  0E00               	movlw	0
  5415  0030BA  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5416  0030BC  0E00               	movlw	0
  5417  0030BE  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5418  0030C0  0E00               	movlw	0
  5419  0030C2  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5420  0030C4  EF80  F018         	goto	l8602
  5421  0030C8                     l8598:
  5422                           
  5423                           ; BSR set to: 0
  5424  0030C8  90D8               	bcf	status,0,c
  5425  0030CA  3579               	rlcf	floorf@u& (0+255),w,b
  5426  0030CC  6F6D               	movwf	??_floorf& (0+255),b
  5427  0030CE  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  5428  0030D0  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5429  0030D2  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  5430  0030D4  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5431  0030D6  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  5432  0030D8  6F70               	movwf	(??_floorf+3)& (0+255),b
  5433  0030DA  516D               	movf	??_floorf& (0+255),w,b
  5434  0030DC  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5435  0030DE  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5436  0030E0  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5437  0030E2  B4D8               	btfsc	status,2,c
  5438  0030E4  EF76  F018         	goto	u9371
  5439  0030E8  EF78  F018         	goto	u9370
  5440  0030EC                     u9371:
  5441  0030EC  EF80  F018         	goto	l8602
  5442  0030F0                     u9370:
  5443  0030F0                     
  5444                           ; BSR set to: 0
  5445  0030F0  0E00               	movlw	0
  5446  0030F2  6F79               	movwf	floorf@u& (0+255),b
  5447  0030F4  0E00               	movlw	0
  5448  0030F6  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5449  0030F8  0E80               	movlw	128
  5450  0030FA  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5451  0030FC  0EBF               	movlw	191
  5452  0030FE  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5453  003100                     l8602:
  5454                           
  5455                           ; BSR set to: 0
  5456  003100  C079  F050         	movff	floorf@u,?_floorf
  5457  003104  C07A  F051         	movff	floorf@u+1,?_floorf+1
  5458  003108  C07B  F052         	movff	floorf@u+2,?_floorf+2
  5459  00310C  C07C  F053         	movff	floorf@u+3,?_floorf+3
  5460  003110                     l1666:
  5461                           
  5462                           ; BSR set to: 0
  5463  003110  0012               	return		;funcret
  5464  003112                     __end_of_floorf:
  5465                           	opt callstack 0
  5466                           
  5467 ;; *************** function ___fpclassifyf *****************
  5468 ;; Defined at:
  5469 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  x               4    5[COMRAM] float 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  u               4   15[COMRAM] struct .
  5474 ;;  e               2   13[COMRAM] int 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  2    5[COMRAM] int 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5484 ;;      Params:         4       0       0       0       0       0       0       0       0
  5485 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5486 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5487 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5488 ;;Total ram usage:       14 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    2
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_efgtoa
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text11
  5499  004084                     __ptext11:
  5500                           	opt callstack 0
  5501  004084                     ___fpclassifyf:
  5502                           	opt callstack 23
  5503  004084  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5504  004088  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5505  00408C  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5506  004090  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5507  004094  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5508  004098  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5509  00409C  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5510  0040A0  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5511  0040A4  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5512  0040A8  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5513  0040AC  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5514  0040B0  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5515  0040B4  0E18               	movlw	24
  5516  0040B6  EF62  F020         	goto	u9160
  5517  0040BA                     u9165:
  5518  0040BA  90D8               	bcf	status,0,c
  5519  0040BC  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5520  0040BE  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5521  0040C0  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5522  0040C2  320A               	rrcf	??___fpclassifyf^0,f,c
  5523  0040C4                     u9160:
  5524  0040C4  2EE8               	decfsz	wreg,f,c
  5525  0040C6  EF5D  F020         	goto	u9165
  5526  0040CA  500A               	movf	??___fpclassifyf^0,w,c
  5527  0040CC  6E0E               	movwf	___fpclassifyf@e^0,c
  5528  0040CE  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5529  0040D0  500E               	movf	___fpclassifyf@e^0,w,c
  5530  0040D2  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5531  0040D4  A4D8               	btfss	status,2,c
  5532  0040D6  EF6F  F020         	goto	u9171
  5533  0040DA  EF71  F020         	goto	u9170
  5534  0040DE                     u9171:
  5535  0040DE  EF91  F020         	goto	l8554
  5536  0040E2                     u9170:
  5537  0040E2  90D8               	bcf	status,0,c
  5538  0040E4  3410               	rlcf	___fpclassifyf@u^0,w,c
  5539  0040E6  6E0A               	movwf	??___fpclassifyf^0,c
  5540  0040E8  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5541  0040EA  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5542  0040EC  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5543  0040EE  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5544  0040F0  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5545  0040F2  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5546  0040F4  500A               	movf	??___fpclassifyf^0,w,c
  5547  0040F6  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5548  0040F8  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5549  0040FA  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5550  0040FC  A4D8               	btfss	status,2,c
  5551  0040FE  EF83  F020         	goto	u9181
  5552  004102  EF85  F020         	goto	u9180
  5553  004106                     u9181:
  5554  004106  EF8B  F020         	goto	l8550
  5555  00410A                     u9180:
  5556  00410A  0E00               	movlw	0
  5557  00410C  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5558  00410E  0E02               	movlw	2
  5559  004110  6E06               	movwf	?___fpclassifyf^0,c
  5560  004112  EFC0  F020         	goto	l1621
  5561  004116                     l8550:
  5562  004116  0E00               	movlw	0
  5563  004118  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5564  00411A  0E03               	movlw	3
  5565  00411C  6E06               	movwf	?___fpclassifyf^0,c
  5566  00411E  EFC0  F020         	goto	l1621
  5567  004122                     l8554:
  5568  004122  280E               	incf	___fpclassifyf@e^0,w,c
  5569  004124  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5570  004126  A4D8               	btfss	status,2,c
  5571  004128  EF98  F020         	goto	u9191
  5572  00412C  EF9A  F020         	goto	u9190
  5573  004130                     u9191:
  5574  004130  EFBC  F020         	goto	l8560
  5575  004134                     u9190:
  5576  004134  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5577  004138  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5578  00413C  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5579  004140  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5580  004144  0E09               	movlw	9
  5581  004146                     u9205:
  5582  004146  90D8               	bcf	status,0,c
  5583  004148  360A               	rlcf	??___fpclassifyf^0,f,c
  5584  00414A  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5585  00414C  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5586  00414E  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5587  004150  2EE8               	decfsz	wreg,f,c
  5588  004152  EFA3  F020         	goto	u9205
  5589  004156  500A               	movf	??___fpclassifyf^0,w,c
  5590  004158  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5591  00415A  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5592  00415C  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5593  00415E  B4D8               	btfsc	status,2,c
  5594  004160  EFB4  F020         	goto	u9211
  5595  004164  EFB7  F020         	goto	u9210
  5596  004168                     u9211:
  5597  004168  0E01               	movlw	1
  5598  00416A  EFB8  F020         	goto	u9220
  5599  00416E                     u9210:
  5600  00416E  0E00               	movlw	0
  5601  004170                     u9220:
  5602  004170  6E06               	movwf	?___fpclassifyf^0,c
  5603  004172  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5604  004174  EFC0  F020         	goto	l1621
  5605  004178                     l8560:
  5606  004178  0E00               	movlw	0
  5607  00417A  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5608  00417C  0E04               	movlw	4
  5609  00417E  6E06               	movwf	?___fpclassifyf^0,c
  5610  004180                     l1621:
  5611  004180  0012               	return		;funcret
  5612  004182                     __end_of___fpclassifyf:
  5613                           	opt callstack 0
  5614                           
  5615 ;; *************** function ___fleq *****************
  5616 ;; Defined at:
  5617 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  ff1             4    5[COMRAM] int 
  5620 ;;  ff2             4    9[COMRAM] int 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;		None               void
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5632 ;;      Params:         8       0       0       0       0       0       0       0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5634 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5635 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5636 ;;Total ram usage:       12 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    2
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_efgtoa
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text12
  5647  004794                     __ptext12:
  5648                           	opt callstack 0
  5649  004794                     ___fleq:
  5650                           	opt callstack 23
  5651  004794  0E00               	movlw	0
  5652  004796  1406               	andwf	___fleq@ff1^0,w,c
  5653  004798  6E0E               	movwf	??___fleq^0,c
  5654  00479A  0E00               	movlw	0
  5655  00479C  1407               	andwf	(___fleq@ff1+1)^0,w,c
  5656  00479E  6E0F               	movwf	(??___fleq+1)^0,c
  5657  0047A0  0E80               	movlw	128
  5658  0047A2  1408               	andwf	(___fleq@ff1+2)^0,w,c
  5659  0047A4  6E10               	movwf	(??___fleq+2)^0,c
  5660  0047A6  0E7F               	movlw	127
  5661  0047A8  1409               	andwf	(___fleq@ff1+3)^0,w,c
  5662  0047AA  6E11               	movwf	(??___fleq+3)^0,c
  5663  0047AC  500E               	movf	??___fleq^0,w,c
  5664  0047AE  100F               	iorwf	(??___fleq+1)^0,w,c
  5665  0047B0  1010               	iorwf	(??___fleq+2)^0,w,c
  5666  0047B2  1011               	iorwf	(??___fleq+3)^0,w,c
  5667  0047B4  A4D8               	btfss	status,2,c
  5668  0047B6  EFDF  F023         	goto	u9651
  5669  0047BA  EFE1  F023         	goto	u9650
  5670  0047BE                     u9651:
  5671  0047BE  EFE9  F023         	goto	l8786
  5672  0047C2                     u9650:
  5673  0047C2  0E00               	movlw	0
  5674  0047C4  6E06               	movwf	___fleq@ff1^0,c
  5675  0047C6  0E00               	movlw	0
  5676  0047C8  6E07               	movwf	(___fleq@ff1+1)^0,c
  5677  0047CA  0E00               	movlw	0
  5678  0047CC  6E08               	movwf	(___fleq@ff1+2)^0,c
  5679  0047CE  0E00               	movlw	0
  5680  0047D0  6E09               	movwf	(___fleq@ff1+3)^0,c
  5681  0047D2                     l8786:
  5682  0047D2  0E00               	movlw	0
  5683  0047D4  140A               	andwf	___fleq@ff2^0,w,c
  5684  0047D6  6E0E               	movwf	??___fleq^0,c
  5685  0047D8  0E00               	movlw	0
  5686  0047DA  140B               	andwf	(___fleq@ff2+1)^0,w,c
  5687  0047DC  6E0F               	movwf	(??___fleq+1)^0,c
  5688  0047DE  0E80               	movlw	128
  5689  0047E0  140C               	andwf	(___fleq@ff2+2)^0,w,c
  5690  0047E2  6E10               	movwf	(??___fleq+2)^0,c
  5691  0047E4  0E7F               	movlw	127
  5692  0047E6  140D               	andwf	(___fleq@ff2+3)^0,w,c
  5693  0047E8  6E11               	movwf	(??___fleq+3)^0,c
  5694  0047EA  500E               	movf	??___fleq^0,w,c
  5695  0047EC  100F               	iorwf	(??___fleq+1)^0,w,c
  5696  0047EE  1010               	iorwf	(??___fleq+2)^0,w,c
  5697  0047F0  1011               	iorwf	(??___fleq+3)^0,w,c
  5698  0047F2  A4D8               	btfss	status,2,c
  5699  0047F4  EFFE  F023         	goto	u9661
  5700  0047F8  EF00  F024         	goto	u9660
  5701  0047FC                     u9661:
  5702  0047FC  EF08  F024         	goto	l8790
  5703  004800                     u9660:
  5704  004800  0E00               	movlw	0
  5705  004802  6E0A               	movwf	___fleq@ff2^0,c
  5706  004804  0E00               	movlw	0
  5707  004806  6E0B               	movwf	(___fleq@ff2+1)^0,c
  5708  004808  0E00               	movlw	0
  5709  00480A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  5710  00480C  0E00               	movlw	0
  5711  00480E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  5712  004810                     l8790:
  5713  004810  500A               	movf	___fleq@ff2^0,w,c
  5714  004812  1806               	xorwf	___fleq@ff1^0,w,c
  5715  004814  E10F               	bnz	u9670
  5716  004816  500B               	movf	(___fleq@ff2+1)^0,w,c
  5717  004818  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  5718  00481A  E10C               	bnz	u9670
  5719  00481C  500C               	movf	(___fleq@ff2+2)^0,w,c
  5720  00481E  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  5721  004820  E109               	bnz	u9670
  5722  004822  500D               	movf	(___fleq@ff2+3)^0,w,c
  5723  004824  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  5724  004826  B4D8               	btfsc	status,2,c
  5725  004828  EF18  F024         	goto	u9671
  5726  00482C  EF1A  F024         	goto	u9670
  5727  004830                     u9671:
  5728  004830  EF1D  F024         	goto	l8794
  5729  004834                     u9670:
  5730  004834  90D8               	bcf	status,0,c
  5731  004836  EF1E  F024         	goto	l1199
  5732  00483A                     l8794:
  5733  00483A  80D8               	bsf	status,0,c
  5734  00483C                     l1199:
  5735  00483C  0012               	return		;funcret
  5736  00483E                     __end_of___fleq:
  5737                           	opt callstack 0
  5738                           
  5739 ;; *************** function ___awmod *****************
  5740 ;; Defined at:
  5741 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  dividend        2    5[COMRAM] int 
  5744 ;;  divisor         2    7[COMRAM] int 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  sign            1   10[COMRAM] unsigned char 
  5747 ;;  counter         1    9[COMRAM] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  2    5[COMRAM] int 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5757 ;;      Params:         4       0       0       0       0       0       0       0       0
  5758 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5760 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5761 ;;Total ram usage:        6 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    2
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_efgtoa
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text13
  5772  004636                     __ptext13:
  5773                           	opt callstack 0
  5774  004636                     ___awmod:
  5775                           	opt callstack 23
  5776  004636  0E00               	movlw	0
  5777  004638  6E0B               	movwf	___awmod@sign^0,c
  5778  00463A  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5779  00463C  EF24  F023         	goto	u9590
  5780  004640  EF22  F023         	goto	u9591
  5781  004644                     u9591:
  5782  004644  EF2A  F023         	goto	l8754
  5783  004648                     u9590:
  5784  004648  6C06               	negf	___awmod@dividend^0,c
  5785  00464A  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5786  00464C  B0D8               	btfsc	status,0,c
  5787  00464E  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5788  004650  0E01               	movlw	1
  5789  004652  6E0B               	movwf	___awmod@sign^0,c
  5790  004654                     l8754:
  5791  004654  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5792  004656  EF31  F023         	goto	u9600
  5793  00465A  EF2F  F023         	goto	u9601
  5794  00465E                     u9601:
  5795  00465E  EF35  F023         	goto	l8758
  5796  004662                     u9600:
  5797  004662  6C08               	negf	___awmod@divisor^0,c
  5798  004664  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5799  004666  B0D8               	btfsc	status,0,c
  5800  004668  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5801  00466A                     l8758:
  5802  00466A  5008               	movf	___awmod@divisor^0,w,c
  5803  00466C  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5804  00466E  B4D8               	btfsc	status,2,c
  5805  004670  EF3C  F023         	goto	u9611
  5806  004674  EF3E  F023         	goto	u9610
  5807  004678                     u9611:
  5808  004678  EF62  F023         	goto	l8774
  5809  00467C                     u9610:
  5810  00467C  0E01               	movlw	1
  5811  00467E  6E0A               	movwf	___awmod@counter^0,c
  5812  004680  EF46  F023         	goto	l8764
  5813  004684                     l8762:
  5814  004684  90D8               	bcf	status,0,c
  5815  004686  3608               	rlcf	___awmod@divisor^0,f,c
  5816  004688  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5817  00468A  2A0A               	incf	___awmod@counter^0,f,c
  5818  00468C                     l8764:
  5819  00468C  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5820  00468E  EF4B  F023         	goto	u9621
  5821  004692  EF4D  F023         	goto	u9620
  5822  004696                     u9621:
  5823  004696  EF42  F023         	goto	l8762
  5824  00469A                     u9620:
  5825  00469A                     l8766:
  5826  00469A  5008               	movf	___awmod@divisor^0,w,c
  5827  00469C  5C06               	subwf	___awmod@dividend^0,w,c
  5828  00469E  5009               	movf	(___awmod@divisor+1)^0,w,c
  5829  0046A0  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5830  0046A2  A0D8               	btfss	status,0,c
  5831  0046A4  EF56  F023         	goto	u9631
  5832  0046A8  EF58  F023         	goto	u9630
  5833  0046AC                     u9631:
  5834  0046AC  EF5C  F023         	goto	l8770
  5835  0046B0                     u9630:
  5836  0046B0  5008               	movf	___awmod@divisor^0,w,c
  5837  0046B2  5E06               	subwf	___awmod@dividend^0,f,c
  5838  0046B4  5009               	movf	(___awmod@divisor+1)^0,w,c
  5839  0046B6  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5840  0046B8                     l8770:
  5841  0046B8  90D8               	bcf	status,0,c
  5842  0046BA  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5843  0046BC  3208               	rrcf	___awmod@divisor^0,f,c
  5844  0046BE  2E0A               	decfsz	___awmod@counter^0,f,c
  5845  0046C0  EF4D  F023         	goto	l8766
  5846  0046C4                     l8774:
  5847  0046C4  500B               	movf	___awmod@sign^0,w,c
  5848  0046C6  B4D8               	btfsc	status,2,c
  5849  0046C8  EF68  F023         	goto	u9641
  5850  0046CC  EF6A  F023         	goto	u9640
  5851  0046D0                     u9641:
  5852  0046D0  EF6E  F023         	goto	l8778
  5853  0046D4                     u9640:
  5854  0046D4  6C06               	negf	___awmod@dividend^0,c
  5855  0046D6  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5856  0046D8  B0D8               	btfsc	status,0,c
  5857  0046DA  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5858  0046DC                     l8778:
  5859  0046DC  C006  F006         	movff	___awmod@dividend,?___awmod
  5860  0046E0  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5861  0046E4  0012               	return		;funcret
  5862  0046E6                     __end_of___awmod:
  5863                           	opt callstack 0
  5864                           
  5865 ;; *************** function ___awdiv *****************
  5866 ;; Defined at:
  5867 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  dividend        2    5[COMRAM] int 
  5870 ;;  divisor         2    7[COMRAM] int 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  quotient        2   11[COMRAM] int 
  5873 ;;  sign            1   10[COMRAM] unsigned char 
  5874 ;;  counter         1    9[COMRAM] unsigned char 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  2    5[COMRAM] int 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5884 ;;      Params:         4       0       0       0       0       0       0       0       0
  5885 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5887 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5888 ;;Total ram usage:        8 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    2
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_efgtoa
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text14
  5899  0044B0                     __ptext14:
  5900                           	opt callstack 0
  5901  0044B0                     ___awdiv:
  5902                           	opt callstack 23
  5903  0044B0  0E00               	movlw	0
  5904  0044B2  6E0B               	movwf	___awdiv@sign^0,c
  5905  0044B4  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5906  0044B6  EF61  F022         	goto	u9530
  5907  0044BA  EF5F  F022         	goto	u9531
  5908  0044BE                     u9531:
  5909  0044BE  EF67  F022         	goto	l8710
  5910  0044C2                     u9530:
  5911  0044C2  6C08               	negf	___awdiv@divisor^0,c
  5912  0044C4  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5913  0044C6  B0D8               	btfsc	status,0,c
  5914  0044C8  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5915  0044CA  0E01               	movlw	1
  5916  0044CC  6E0B               	movwf	___awdiv@sign^0,c
  5917  0044CE                     l8710:
  5918  0044CE  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5919  0044D0  EF6E  F022         	goto	u9540
  5920  0044D4  EF6C  F022         	goto	u9541
  5921  0044D8                     u9541:
  5922  0044D8  EF74  F022         	goto	l8716
  5923  0044DC                     u9540:
  5924  0044DC  6C06               	negf	___awdiv@dividend^0,c
  5925  0044DE  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5926  0044E0  B0D8               	btfsc	status,0,c
  5927  0044E2  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5928  0044E4  0E01               	movlw	1
  5929  0044E6  1A0B               	xorwf	___awdiv@sign^0,f,c
  5930  0044E8                     l8716:
  5931  0044E8  0E00               	movlw	0
  5932  0044EA  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5933  0044EC  0E00               	movlw	0
  5934  0044EE  6E0C               	movwf	___awdiv@quotient^0,c
  5935  0044F0  5008               	movf	___awdiv@divisor^0,w,c
  5936  0044F2  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5937  0044F4  B4D8               	btfsc	status,2,c
  5938  0044F6  EF7F  F022         	goto	u9551
  5939  0044FA  EF81  F022         	goto	u9550
  5940  0044FE                     u9551:
  5941  0044FE  EFA9  F022         	goto	l8738
  5942  004502                     u9550:
  5943  004502  0E01               	movlw	1
  5944  004504  6E0A               	movwf	___awdiv@counter^0,c
  5945  004506  EF89  F022         	goto	l8724
  5946  00450A                     l8722:
  5947  00450A  90D8               	bcf	status,0,c
  5948  00450C  3608               	rlcf	___awdiv@divisor^0,f,c
  5949  00450E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5950  004510  2A0A               	incf	___awdiv@counter^0,f,c
  5951  004512                     l8724:
  5952  004512  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  5953  004514  EF8E  F022         	goto	u9561
  5954  004518  EF90  F022         	goto	u9560
  5955  00451C                     u9561:
  5956  00451C  EF85  F022         	goto	l8722
  5957  004520                     u9560:
  5958  004520                     l8726:
  5959  004520  90D8               	bcf	status,0,c
  5960  004522  360C               	rlcf	___awdiv@quotient^0,f,c
  5961  004524  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  5962  004526  5008               	movf	___awdiv@divisor^0,w,c
  5963  004528  5C06               	subwf	___awdiv@dividend^0,w,c
  5964  00452A  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5965  00452C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  5966  00452E  A0D8               	btfss	status,0,c
  5967  004530  EF9C  F022         	goto	u9571
  5968  004534  EF9E  F022         	goto	u9570
  5969  004538                     u9571:
  5970  004538  EFA3  F022         	goto	l8734
  5971  00453C                     u9570:
  5972  00453C  5008               	movf	___awdiv@divisor^0,w,c
  5973  00453E  5E06               	subwf	___awdiv@dividend^0,f,c
  5974  004540  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5975  004542  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  5976  004544  800C               	bsf	___awdiv@quotient^0,0,c
  5977  004546                     l8734:
  5978  004546  90D8               	bcf	status,0,c
  5979  004548  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  5980  00454A  3208               	rrcf	___awdiv@divisor^0,f,c
  5981  00454C  2E0A               	decfsz	___awdiv@counter^0,f,c
  5982  00454E  EF90  F022         	goto	l8726
  5983  004552                     l8738:
  5984  004552  500B               	movf	___awdiv@sign^0,w,c
  5985  004554  B4D8               	btfsc	status,2,c
  5986  004556  EFAF  F022         	goto	u9581
  5987  00455A  EFB1  F022         	goto	u9580
  5988  00455E                     u9581:
  5989  00455E  EFB5  F022         	goto	l8742
  5990  004562                     u9580:
  5991  004562  6C0C               	negf	___awdiv@quotient^0,c
  5992  004564  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  5993  004566  B0D8               	btfsc	status,0,c
  5994  004568  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  5995  00456A                     l8742:
  5996  00456A  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5997  00456E  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5998  004572  0012               	return		;funcret
  5999  004574                     __end_of___awdiv:
  6000                           	opt callstack 0
  6001                           
  6002 ;; *************** function _dtoa *****************
  6003 ;; Defined at:
  6004 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  6007 ;;		 -> sprintf@f(6), 
  6008 ;;  d               8   34[COMRAM] long long 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  n               8   58[COMRAM] long long 
  6011 ;;  i               2   66[COMRAM] int 
  6012 ;;  s               2   56[COMRAM] int 
  6013 ;;  w               2   54[COMRAM] int 
  6014 ;;  p               2   52[COMRAM] int 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  2   32[COMRAM] int 
  6017 ;; Registers used:
  6018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6024 ;;      Params:        10       0       0       0       0       0       0       0       0
  6025 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6026 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6027 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6028 ;;Total ram usage:       36 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    6
  6031 ;; This function calls:
  6032 ;;		___aodiv
  6033 ;;		___aomod
  6034 ;;		_abs
  6035 ;;		_pad
  6036 ;; This function is called by:
  6037 ;;		_vfpfcnvrt
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text15
  6042  0029C8                     __ptext15:
  6043                           	opt callstack 0
  6044  0029C8                     _dtoa:
  6045                           	opt callstack 20
  6046  0029C8                     
  6047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  6048  0029C8  C023  F03B         	movff	dtoa@d,dtoa@n
  6049  0029CC  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
  6050  0029D0  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
  6051  0029D4  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
  6052  0029D8  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
  6053  0029DC  C028  F040         	movff	dtoa@d+5,dtoa@n+5
  6054  0029E0  C029  F041         	movff	dtoa@d+6,dtoa@n+6
  6055  0029E4  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
  6056  0029E8                     
  6057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  6058  0029E8  BE42               	btfsc	(dtoa@n+7)^0,7,c
  6059  0029EA  EFF9  F014         	goto	u9761
  6060  0029EE  EFFC  F014         	goto	u9760
  6061  0029F2                     u9761:
  6062  0029F2  0E01               	movlw	1
  6063  0029F4  EFFD  F014         	goto	u9770
  6064  0029F8                     u9760:
  6065  0029F8  0E00               	movlw	0
  6066  0029FA                     u9770:
  6067  0029FA  6E39               	movwf	dtoa@s^0,c
  6068  0029FC  6A3A               	clrf	(dtoa@s+1)^0,c
  6069                           
  6070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  6071  0029FE  5039               	movf	dtoa@s^0,w,c
  6072  002A00  103A               	iorwf	(dtoa@s+1)^0,w,c
  6073  002A02  B4D8               	btfsc	status,2,c
  6074  002A04  EF06  F015         	goto	u9781
  6075  002A08  EF08  F015         	goto	u9780
  6076  002A0C                     u9781:
  6077  002A0C  EF18  F015         	goto	l8864
  6078  002A10                     u9780:
  6079  002A10                     
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  6081  002A10  1E42               	comf	(dtoa@n+7)^0,f,c
  6082  002A12  1E41               	comf	(dtoa@n+6)^0,f,c
  6083  002A14  1E40               	comf	(dtoa@n+5)^0,f,c
  6084  002A16  1E3F               	comf	(dtoa@n+4)^0,f,c
  6085  002A18  1E3E               	comf	(dtoa@n+3)^0,f,c
  6086  002A1A  1E3D               	comf	(dtoa@n+2)^0,f,c
  6087  002A1C  1E3C               	comf	(dtoa@n+1)^0,f,c
  6088  002A1E  6C3B               	negf	dtoa@n^0,c
  6089  002A20  0E00               	movlw	0
  6090  002A22  223C               	addwfc	(dtoa@n+1)^0,f,c
  6091  002A24  223D               	addwfc	(dtoa@n+2)^0,f,c
  6092  002A26  223E               	addwfc	(dtoa@n+3)^0,f,c
  6093  002A28  223F               	addwfc	(dtoa@n+4)^0,f,c
  6094  002A2A  2240               	addwfc	(dtoa@n+5)^0,f,c
  6095  002A2C  2241               	addwfc	(dtoa@n+6)^0,f,c
  6096  002A2E  2242               	addwfc	(dtoa@n+7)^0,f,c
  6097  002A30                     l8864:
  6098                           
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  6100  002A30  0101               	movlb	1	; () banked
  6101  002A32  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  6102  002A34  EF1E  F015         	goto	u9791
  6103  002A38  EF20  F015         	goto	u9790
  6104  002A3C                     u9791:
  6105  002A3C  EF21  F015         	goto	l8868
  6106  002A40                     u9790:
  6107  002A40                     
  6108                           ; BSR set to: 1
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  6110  002A40  932E               	bcf	_flags& (0+255),1,b
  6111  002A42                     l8868:
  6112                           
  6113                           ; BSR set to: 1
  6114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  6115  002A42  BF2D               	btfsc	(_prec+1)& (0+255),7,b
  6116  002A44  EF2E  F015         	goto	u9800
  6117  002A48  512D               	movf	(_prec+1)& (0+255),w,b
  6118  002A4A  E106               	bnz	u9801
  6119  002A4C  052C               	decf	_prec& (0+255),w,b
  6120  002A4E  B0D8               	btfsc	status,0,c
  6121  002A50  EF2C  F015         	goto	u9801
  6122  002A54  EF2E  F015         	goto	u9800
  6123  002A58                     u9801:
  6124  002A58  EF34  F015         	goto	l792
  6125  002A5C                     u9800:
  6126  002A5C                     
  6127                           ; BSR set to: 1
  6128  002A5C  0E00               	movlw	0
  6129  002A5E  6E36               	movwf	(dtoa@p+1)^0,c
  6130  002A60  0E01               	movlw	1
  6131  002A62  6E35               	movwf	dtoa@p^0,c
  6132  002A64  EF38  F015         	goto	l794
  6133  002A68                     l792:
  6134                           
  6135                           ; BSR set to: 1
  6136  002A68  C12C  F035         	movff	_prec,dtoa@p
  6137  002A6C  C12D  F036         	movff	_prec+1,dtoa@p+1
  6138  002A70                     l794:
  6139                           
  6140                           ; BSR set to: 1
  6141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  6142  002A70  C12A  F037         	movff	_width,dtoa@w
  6143  002A74  C12B  F038         	movff	_width+1,dtoa@w+1
  6144  002A78                     
  6145                           ; BSR set to: 1
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  6147  002A78  5039               	movf	dtoa@s^0,w,c
  6148  002A7A  103A               	iorwf	(dtoa@s+1)^0,w,c
  6149  002A7C  A4D8               	btfss	status,2,c
  6150  002A7E  EF43  F015         	goto	u9811
  6151  002A82  EF45  F015         	goto	u9810
  6152  002A86                     u9811:
  6153  002A86  EF4C  F015         	goto	l8876
  6154  002A8A                     u9810:
  6155  002A8A                     
  6156                           ; BSR set to: 1
  6157  002A8A  A52E               	btfss	_flags& (0+255),2,b
  6158  002A8C  EF4A  F015         	goto	u9821
  6159  002A90  EF4C  F015         	goto	u9820
  6160  002A94                     u9821:
  6161  002A94  EF4F  F015         	goto	l8878
  6162  002A98                     u9820:
  6163  002A98                     l8876:
  6164                           
  6165                           ; BSR set to: 1
  6166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  6167  002A98  0637               	decf	dtoa@w^0,f,c
  6168  002A9A  A0D8               	btfss	status,0,c
  6169  002A9C  0638               	decf	(dtoa@w+1)^0,f,c
  6170  002A9E                     l8878:
  6171                           
  6172                           ; BSR set to: 1
  6173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  6174  002A9E  0E00               	movlw	0
  6175  002AA0  6E44               	movwf	(dtoa@i+1)^0,c
  6176  002AA2  0E4F               	movlw	79
  6177  002AA4  6E43               	movwf	dtoa@i^0,c
  6178  002AA6                     
  6179                           ; BSR set to: 1
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  6181  002AA6  0E00               	movlw	0
  6182  002AA8  6F8C               	movwf	(_dbuf+79)& (0+255),b
  6183                           
  6184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6185  002AAA  EFD3  F015         	goto	l8892
  6186  002AAE                     l8882:
  6187                           
  6188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  6189  002AAE  0643               	decf	dtoa@i^0,f,c
  6190  002AB0  A0D8               	btfss	status,0,c
  6191  002AB2  0644               	decf	(dtoa@i+1)^0,f,c
  6192  002AB4                     
  6193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  6194  002AB4  0E3D               	movlw	low _dbuf
  6195  002AB6  2443               	addwf	dtoa@i^0,w,c
  6196  002AB8  6ED9               	movwf	fsr2l,c
  6197  002ABA  0E01               	movlw	high _dbuf
  6198  002ABC  2044               	addwfc	(dtoa@i+1)^0,w,c
  6199  002ABE  6EDA               	movwf	fsr2h,c
  6200  002AC0  C03B  F006         	movff	dtoa@n,___aomod@dividend
  6201  002AC4  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
  6202  002AC8  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
  6203  002ACC  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
  6204  002AD0  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
  6205  002AD4  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
  6206  002AD8  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
  6207  002ADC  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
  6208  002AE0  0E0A               	movlw	10
  6209  002AE2  6E0E               	movwf	___aomod@divisor^0,c
  6210  002AE4  0E00               	movlw	0
  6211  002AE6  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6212  002AE8  0E00               	movlw	0
  6213  002AEA  6E10               	movwf	(___aomod@divisor+2)^0,c
  6214  002AEC  0E00               	movlw	0
  6215  002AEE  6E11               	movwf	(___aomod@divisor+3)^0,c
  6216  002AF0  0E00               	movlw	0
  6217  002AF2  6E12               	movwf	(___aomod@divisor+4)^0,c
  6218  002AF4  0E00               	movlw	0
  6219  002AF6  6E13               	movwf	(___aomod@divisor+5)^0,c
  6220  002AF8  0E00               	movlw	0
  6221  002AFA  6E14               	movwf	(___aomod@divisor+6)^0,c
  6222  002AFC  0E00               	movlw	0
  6223  002AFE  6E15               	movwf	(___aomod@divisor+7)^0,c
  6224  002B00  EC53  F01D         	call	___aomod	;wreg free
  6225  002B04  C006  F02B         	movff	?___aomod,??_dtoa
  6226  002B08  C007  F02C         	movff	?___aomod+1,??_dtoa+1
  6227  002B0C  C008  F02D         	movff	?___aomod+2,??_dtoa+2
  6228  002B10  C009  F02E         	movff	?___aomod+3,??_dtoa+3
  6229  002B14  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
  6230  002B18  C00B  F030         	movff	?___aomod+5,??_dtoa+5
  6231  002B1C  C00C  F031         	movff	?___aomod+6,??_dtoa+6
  6232  002B20  C00D  F032         	movff	?___aomod+7,??_dtoa+7
  6233  002B24  C02B  F018         	movff	??_dtoa,abs@a
  6234  002B28  C02D  F019         	movff	??_dtoa+2,abs@a+1
  6235  002B2C  EC0C  F029         	call	_abs	;wreg free
  6236  002B30  5018               	movf	?_abs^0,w,c
  6237  002B32  0F30               	addlw	48
  6238  002B34  6EDF               	movwf	indf2,c
  6239  002B36                     
  6240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  6241  002B36  0635               	decf	dtoa@p^0,f,c
  6242  002B38  A0D8               	btfss	status,0,c
  6243  002B3A  0636               	decf	(dtoa@p+1)^0,f,c
  6244  002B3C                     
  6245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  6246  002B3C  0637               	decf	dtoa@w^0,f,c
  6247  002B3E  A0D8               	btfss	status,0,c
  6248  002B40  0638               	decf	(dtoa@w+1)^0,f,c
  6249  002B42                     
  6250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  6251  002B42  C03B  F006         	movff	dtoa@n,___aodiv@dividend
  6252  002B46  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
  6253  002B4A  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
  6254  002B4E  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
  6255  002B52  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
  6256  002B56  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
  6257  002B5A  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
  6258  002B5E  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
  6259  002B62  0E0A               	movlw	10
  6260  002B64  6E0E               	movwf	___aodiv@divisor^0,c
  6261  002B66  0E00               	movlw	0
  6262  002B68  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6263  002B6A  0E00               	movlw	0
  6264  002B6C  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6265  002B6E  0E00               	movlw	0
  6266  002B70  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6267  002B72  0E00               	movlw	0
  6268  002B74  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6269  002B76  0E00               	movlw	0
  6270  002B78  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6271  002B7A  0E00               	movlw	0
  6272  002B7C  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6273  002B7E  0E00               	movlw	0
  6274  002B80  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6275  002B82  ECD1  F01B         	call	___aodiv	;wreg free
  6276  002B86  C006  F03B         	movff	?___aodiv,dtoa@n
  6277  002B8A  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
  6278  002B8E  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
  6279  002B92  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
  6280  002B96  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
  6281  002B9A  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
  6282  002B9E  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
  6283  002BA2  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
  6284  002BA6                     l8892:
  6285                           
  6286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6287  002BA6  BE44               	btfsc	(dtoa@i+1)^0,7,c
  6288  002BA8  EFDE  F015         	goto	u9831
  6289  002BAC  5044               	movf	(dtoa@i+1)^0,w,c
  6290  002BAE  E108               	bnz	u9830
  6291  002BB0  0443               	decf	dtoa@i^0,w,c
  6292  002BB2  A0D8               	btfss	status,0,c
  6293  002BB4  EFDE  F015         	goto	u9831
  6294  002BB8  EFE0  F015         	goto	u9830
  6295  002BBC                     u9831:
  6296  002BBC  EF11  F016         	goto	l8902
  6297  002BC0                     u9830:
  6298  002BC0  503B               	movf	dtoa@n^0,w,c
  6299  002BC2  103C               	iorwf	(dtoa@n+1)^0,w,c
  6300  002BC4  103D               	iorwf	(dtoa@n+2)^0,w,c
  6301  002BC6  103E               	iorwf	(dtoa@n+3)^0,w,c
  6302  002BC8  103F               	iorwf	(dtoa@n+4)^0,w,c
  6303  002BCA  1040               	iorwf	(dtoa@n+5)^0,w,c
  6304  002BCC  1041               	iorwf	(dtoa@n+6)^0,w,c
  6305  002BCE  1042               	iorwf	(dtoa@n+7)^0,w,c
  6306  002BD0  A4D8               	btfss	status,2,c
  6307  002BD2  EFED  F015         	goto	u9841
  6308  002BD6  EFEF  F015         	goto	u9840
  6309  002BDA                     u9841:
  6310  002BDA  EF57  F015         	goto	l8882
  6311  002BDE                     u9840:
  6312  002BDE  BE36               	btfsc	(dtoa@p+1)^0,7,c
  6313  002BE0  EFFC  F015         	goto	u9850
  6314  002BE4  5036               	movf	(dtoa@p+1)^0,w,c
  6315  002BE6  E106               	bnz	u9851
  6316  002BE8  0435               	decf	dtoa@p^0,w,c
  6317  002BEA  B0D8               	btfsc	status,0,c
  6318  002BEC  EFFA  F015         	goto	u9851
  6319  002BF0  EFFC  F015         	goto	u9850
  6320  002BF4                     u9851:
  6321  002BF4  EF57  F015         	goto	l8882
  6322  002BF8                     u9850:
  6323  002BF8  BE38               	btfsc	(dtoa@w+1)^0,7,c
  6324  002BFA  EF07  F016         	goto	u9861
  6325  002BFE  5038               	movf	(dtoa@w+1)^0,w,c
  6326  002C00  E108               	bnz	u9860
  6327  002C02  0437               	decf	dtoa@w^0,w,c
  6328  002C04  A0D8               	btfss	status,0,c
  6329  002C06  EF07  F016         	goto	u9861
  6330  002C0A  EF09  F016         	goto	u9860
  6331  002C0E                     u9861:
  6332  002C0E  EF11  F016         	goto	l8902
  6333  002C12                     u9860:
  6334  002C12  0101               	movlb	1	; () banked
  6335  002C14  B32E               	btfsc	_flags& (0+255),1,b
  6336  002C16  EF0F  F016         	goto	u9871
  6337  002C1A  EF11  F016         	goto	u9870
  6338  002C1E                     u9871:
  6339  002C1E  EF57  F015         	goto	l8882
  6340  002C22                     u9870:
  6341  002C22                     l8902:
  6342                           
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  6344  002C22  5039               	movf	dtoa@s^0,w,c
  6345  002C24  103A               	iorwf	(dtoa@s+1)^0,w,c
  6346  002C26  A4D8               	btfss	status,2,c
  6347  002C28  EF18  F016         	goto	u9881
  6348  002C2C  EF1A  F016         	goto	u9880
  6349  002C30                     u9881:
  6350  002C30  EF22  F016         	goto	l8906
  6351  002C34                     u9880:
  6352  002C34  0101               	movlb	1	; () banked
  6353  002C36  A52E               	btfss	_flags& (0+255),2,b
  6354  002C38  EF20  F016         	goto	u9891
  6355  002C3C  EF22  F016         	goto	u9890
  6356  002C40                     u9891:
  6357  002C40  EF40  F016         	goto	l8916
  6358  002C44                     u9890:
  6359  002C44                     l8906:
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  6362  002C44  0643               	decf	dtoa@i^0,f,c
  6363  002C46  A0D8               	btfss	status,0,c
  6364  002C48  0644               	decf	(dtoa@i+1)^0,f,c
  6365  002C4A                     
  6366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  6367  002C4A  5039               	movf	dtoa@s^0,w,c
  6368  002C4C  103A               	iorwf	(dtoa@s+1)^0,w,c
  6369  002C4E  A4D8               	btfss	status,2,c
  6370  002C50  EF2C  F016         	goto	u9901
  6371  002C54  EF2E  F016         	goto	u9900
  6372  002C58                     u9901:
  6373  002C58  EF34  F016         	goto	l8912
  6374  002C5C                     u9900:
  6375  002C5C  0E00               	movlw	0
  6376  002C5E  6E34               	movwf	(_dtoa$898+1)^0,c
  6377  002C60  0E2B               	movlw	43
  6378  002C62  6E33               	movwf	_dtoa$898^0,c
  6379  002C64  EF38  F016         	goto	l8914
  6380  002C68                     l8912:
  6381  002C68  0E00               	movlw	0
  6382  002C6A  6E34               	movwf	(_dtoa$898+1)^0,c
  6383  002C6C  0E2D               	movlw	45
  6384  002C6E  6E33               	movwf	_dtoa$898^0,c
  6385  002C70                     l8914:
  6386  002C70  0E3D               	movlw	low _dbuf
  6387  002C72  2443               	addwf	dtoa@i^0,w,c
  6388  002C74  6ED9               	movwf	fsr2l,c
  6389  002C76  0E01               	movlw	high _dbuf
  6390  002C78  2044               	addwfc	(dtoa@i+1)^0,w,c
  6391  002C7A  6EDA               	movwf	fsr2h,c
  6392  002C7C  C033  FFDF         	movff	_dtoa$898,indf2
  6393  002C80                     l8916:
  6394                           
  6395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  6396  002C80  C021  F016         	movff	dtoa@fp,pad@fp
  6397  002C84  C022  F017         	movff	dtoa@fp+1,pad@fp+1
  6398  002C88  0E3D               	movlw	low _dbuf
  6399  002C8A  2443               	addwf	dtoa@i^0,w,c
  6400  002C8C  6E18               	movwf	pad@buf^0,c
  6401  002C8E  0E01               	movlw	high _dbuf
  6402  002C90  2044               	addwfc	(dtoa@i+1)^0,w,c
  6403  002C92  6E19               	movwf	(pad@buf+1)^0,c
  6404  002C94  C037  F01A         	movff	dtoa@w,pad@p
  6405  002C98  C038  F01B         	movff	dtoa@w+1,pad@p+1
  6406  002C9C  ECF5  F021         	call	_pad	;wreg free
  6407  002CA0  C016  F021         	movff	?_pad,?_dtoa
  6408  002CA4  C017  F022         	movff	?_pad+1,?_dtoa+1
  6409  002CA8  0012               	return		;funcret
  6410  002CAA                     __end_of_dtoa:
  6411                           	opt callstack 0
  6412                           
  6413 ;; *************** function _pad *****************
  6414 ;; Defined at:
  6415 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  6418 ;;		 -> sprintf@f(6), 
  6419 ;;  buf             2   23[COMRAM] PTR unsigned char 
  6420 ;;		 -> dbuf(80), 
  6421 ;;  p               2   25[COMRAM] int 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  w               2   30[COMRAM] int 
  6424 ;;  i               2   28[COMRAM] int 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  2   21[COMRAM] int 
  6427 ;; Registers used:
  6428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6434 ;;      Params:         6       0       0       0       0       0       0       0       0
  6435 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6436 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6437 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6438 ;;Total ram usage:       11 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    5
  6441 ;; This function calls:
  6442 ;;		_fputc
  6443 ;;		_fputs
  6444 ;;		_strlen
  6445 ;; This function is called by:
  6446 ;;		_dtoa
  6447 ;;		_efgtoa
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text16
  6452  0043EA                     __ptext16:
  6453                           	opt callstack 0
  6454  0043EA                     _pad:
  6455                           	opt callstack 20
  6456  0043EA                     
  6457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6458  0043EA  0101               	movlb	1	; () banked
  6459  0043EC  A12E               	btfss	_flags& (0+255),0,b
  6460  0043EE  EFFB  F021         	goto	u9111
  6461  0043F2  EFFD  F021         	goto	u9110
  6462  0043F6                     u9111:
  6463  0043F6  EF07  F022         	goto	l8520
  6464  0043FA                     u9110:
  6465  0043FA                     
  6466                           ; BSR set to: 1
  6467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6468  0043FA  C018  F00F         	movff	pad@buf,fputs@s
  6469  0043FE  C019  F010         	movff	pad@buf+1,fputs@s+1
  6470  004402  C016  F011         	movff	pad@fp,fputs@fp
  6471  004406  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6472  00440A  ECEA  F028         	call	_fputs	;wreg free
  6473  00440E                     l8520:
  6474                           
  6475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6476  00440E  BE1B               	btfsc	(pad@p+1)^0,7,c
  6477  004410  EF0C  F022         	goto	u9121
  6478  004414  EF0E  F022         	goto	u9120
  6479  004418                     u9121:
  6480  004418  EF14  F022         	goto	l8524
  6481  00441C                     u9120:
  6482  00441C  C01A  F01F         	movff	pad@p,pad@w
  6483  004420  C01B  F020         	movff	pad@p+1,pad@w+1
  6484  004424  EF18  F022         	goto	l781
  6485  004428                     l8524:
  6486  004428  0E00               	movlw	0
  6487  00442A  6E20               	movwf	(pad@w+1)^0,c
  6488  00442C  0E00               	movlw	0
  6489  00442E  6E1F               	movwf	pad@w^0,c
  6490  004430                     l781:
  6491                           
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6493  004430  0E00               	movlw	0
  6494  004432  6E1E               	movwf	(pad@i+1)^0,c
  6495  004434  0E00               	movlw	0
  6496  004436  6E1D               	movwf	pad@i^0,c
  6497                           
  6498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6499  004438  EF2A  F022         	goto	l8530
  6500  00443C                     l8526:
  6501                           
  6502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6503  00443C  0E00               	movlw	0
  6504  00443E  6E07               	movwf	(fputc@c+1)^0,c
  6505  004440  0E20               	movlw	32
  6506  004442  6E06               	movwf	fputc@c^0,c
  6507  004444  C016  F008         	movff	pad@fp,fputc@fp
  6508  004448  C017  F009         	movff	pad@fp+1,fputc@fp+1
  6509  00444C  EC2C  F021         	call	_fputc	;wreg free
  6510  004450                     
  6511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6512  004450  4A1D               	infsnz	pad@i^0,f,c
  6513  004452  2A1E               	incf	(pad@i+1)^0,f,c
  6514  004454                     l8530:
  6515                           
  6516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6517  004454  501F               	movf	pad@w^0,w,c
  6518  004456  5C1D               	subwf	pad@i^0,w,c
  6519  004458  501E               	movf	(pad@i+1)^0,w,c
  6520  00445A  0A80               	xorlw	128
  6521  00445C  6E1C               	movwf	??_pad^0,c
  6522  00445E  5020               	movf	(pad@w+1)^0,w,c
  6523  004460  0A80               	xorlw	128
  6524  004462  581C               	subwfb	??_pad^0,w,c
  6525  004464  A0D8               	btfss	status,0,c
  6526  004466  EF37  F022         	goto	u9131
  6527  00446A  EF39  F022         	goto	u9130
  6528  00446E                     u9131:
  6529  00446E  EF1E  F022         	goto	l8526
  6530  004472                     u9130:
  6531  004472                     
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6533  004472  0101               	movlb	1	; () banked
  6534  004474  B12E               	btfsc	_flags& (0+255),0,b
  6535  004476  EF3F  F022         	goto	u9141
  6536  00447A  EF41  F022         	goto	u9140
  6537  00447E                     u9141:
  6538  00447E  EF4B  F022         	goto	l8534
  6539  004482                     u9140:
  6540  004482                     
  6541                           ; BSR set to: 1
  6542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6543  004482  C018  F00F         	movff	pad@buf,fputs@s
  6544  004486  C019  F010         	movff	pad@buf+1,fputs@s+1
  6545  00448A  C016  F011         	movff	pad@fp,fputs@fp
  6546  00448E  C017  F012         	movff	pad@fp+1,fputs@fp+1
  6547  004492  ECEA  F028         	call	_fputs	;wreg free
  6548  004496                     l8534:
  6549                           
  6550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6551  004496  C018  F006         	movff	pad@buf,strlen@s
  6552  00449A  C019  F007         	movff	pad@buf+1,strlen@s+1
  6553  00449E  ECA0  F029         	call	_strlen	;wreg free
  6554  0044A2  501F               	movf	pad@w^0,w,c
  6555  0044A4  2406               	addwf	?_strlen^0,w,c
  6556  0044A6  6E16               	movwf	?_pad^0,c
  6557  0044A8  5020               	movf	(pad@w+1)^0,w,c
  6558  0044AA  2007               	addwfc	(?_strlen+1)^0,w,c
  6559  0044AC  6E17               	movwf	(?_pad+1)^0,c
  6560  0044AE  0012               	return		;funcret
  6561  0044B0                     __end_of_pad:
  6562                           	opt callstack 0
  6563                           
  6564 ;; *************** function _strlen *****************
  6565 ;; Defined at:
  6566 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  s               2    5[COMRAM] PTR const unsigned char 
  6569 ;;		 -> dbuf(80), 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  a               2    7[COMRAM] PTR const unsigned char 
  6572 ;;		 -> dbuf(80), 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  2    5[COMRAM] unsigned int 
  6575 ;; Registers used:
  6576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6582 ;;      Params:         2       0       0       0       0       0       0       0       0
  6583 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6585 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6586 ;;Total ram usage:        4 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    2
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_pad
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           	psect	text17
  6597  005340                     __ptext17:
  6598                           	opt callstack 0
  6599  005340                     _strlen:
  6600                           	opt callstack 22
  6601  005340  C006  F008         	movff	strlen@s,strlen@a
  6602  005344  C007  F009         	movff	strlen@s+1,strlen@a+1
  6603  005348  EFA8  F029         	goto	l7928
  6604  00534C                     l7926:
  6605  00534C  4A06               	infsnz	strlen@s^0,f,c
  6606  00534E  2A07               	incf	(strlen@s+1)^0,f,c
  6607  005350                     l7928:
  6608  005350  C006  FFD9         	movff	strlen@s,fsr2l
  6609  005354  C007  FFDA         	movff	strlen@s+1,fsr2h
  6610  005358  50DF               	movf	indf2,w,c
  6611  00535A  A4D8               	btfss	status,2,c
  6612  00535C  EFB2  F029         	goto	u8071
  6613  005360  EFB4  F029         	goto	u8070
  6614  005364                     u8071:
  6615  005364  EFA6  F029         	goto	l7926
  6616  005368                     u8070:
  6617  005368  5008               	movf	strlen@a^0,w,c
  6618  00536A  5C06               	subwf	strlen@s^0,w,c
  6619  00536C  6E06               	movwf	?_strlen^0,c
  6620  00536E  5009               	movf	(strlen@a+1)^0,w,c
  6621  005370  5807               	subwfb	(strlen@s+1)^0,w,c
  6622  005372  6E07               	movwf	(?_strlen+1)^0,c
  6623  005374  0012               	return		;funcret
  6624  005376                     __end_of_strlen:
  6625                           	opt callstack 0
  6626                           
  6627 ;; *************** function _fputs *****************
  6628 ;; Defined at:
  6629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  s               2   14[COMRAM] PTR const unsigned char 
  6632 ;;		 -> dbuf(80), 
  6633 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6634 ;;		 -> sprintf@f(6), 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  i               2   19[COMRAM] int 
  6637 ;;  c               1   18[COMRAM] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  2   14[COMRAM] int 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6647 ;;      Params:         4       0       0       0       0       0       0       0       0
  6648 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6650 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6651 ;;Total ram usage:        7 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    4
  6654 ;; This function calls:
  6655 ;;		_fputc
  6656 ;; This function is called by:
  6657 ;;		_pad
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text18
  6662  0051D4                     __ptext18:
  6663                           	opt callstack 0
  6664  0051D4                     _fputs:
  6665                           	opt callstack 20
  6666  0051D4  0E00               	movlw	0
  6667  0051D6  6E15               	movwf	(fputs@i+1)^0,c
  6668  0051D8  0E00               	movlw	0
  6669  0051DA  6E14               	movwf	fputs@i^0,c
  6670  0051DC  EFFB  F028         	goto	l7922
  6671  0051E0                     l7918:
  6672  0051E0  C013  F006         	movff	fputs@c,fputc@c
  6673  0051E4  6A07               	clrf	(fputc@c+1)^0,c
  6674  0051E6  C011  F008         	movff	fputs@fp,fputc@fp
  6675  0051EA  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  6676  0051EE  EC2C  F021         	call	_fputc	;wreg free
  6677  0051F2  4A14               	infsnz	fputs@i^0,f,c
  6678  0051F4  2A15               	incf	(fputs@i+1)^0,f,c
  6679  0051F6                     l7922:
  6680  0051F6  5014               	movf	fputs@i^0,w,c
  6681  0051F8  240F               	addwf	fputs@s^0,w,c
  6682  0051FA  6ED9               	movwf	fsr2l,c
  6683  0051FC  5015               	movf	(fputs@i+1)^0,w,c
  6684  0051FE  2010               	addwfc	(fputs@s+1)^0,w,c
  6685  005200  6EDA               	movwf	fsr2h,c
  6686  005202  50DF               	movf	indf2,w,c
  6687  005204  6E13               	movwf	fputs@c^0,c
  6688  005206  5013               	movf	fputs@c^0,w,c
  6689  005208  A4D8               	btfss	status,2,c
  6690  00520A  EF09  F029         	goto	u8061
  6691  00520E  EF0B  F029         	goto	u8060
  6692  005212                     u8061:
  6693  005212  EFF0  F028         	goto	l7918
  6694  005216                     u8060:
  6695  005216  0012               	return		;funcret
  6696  005218                     __end_of_fputs:
  6697                           	opt callstack 0
  6698                           
  6699 ;; *************** function _fputc *****************
  6700 ;; Defined at:
  6701 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  c               2    5[COMRAM] int 
  6704 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  6705 ;;		 -> sprintf@f(6), 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  2    5[COMRAM] int 
  6710 ;; Registers used:
  6711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6717 ;;      Params:         4       0       0       0       0       0       0       0       0
  6718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6719 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6720 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6721 ;;Total ram usage:        9 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    3
  6724 ;; This function calls:
  6725 ;;		_putch
  6726 ;; This function is called by:
  6727 ;;		_pad
  6728 ;;		_vfpfcnvrt
  6729 ;;		_fputs
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text19
  6734  004258                     __ptext19:
  6735                           	opt callstack 0
  6736  004258                     _fputc:
  6737                           	opt callstack 23
  6738  004258  5008               	movf	fputc@fp^0,w,c
  6739  00425A  1009               	iorwf	(fputc@fp+1)^0,w,c
  6740  00425C  B4D8               	btfsc	status,2,c
  6741  00425E  EF33  F021         	goto	u7941
  6742  004262  EF35  F021         	goto	u7940
  6743  004266                     u7941:
  6744  004266  EF3E  F021         	goto	l7848
  6745  00426A                     u7940:
  6746  00426A  5008               	movf	fputc@fp^0,w,c
  6747  00426C  1009               	iorwf	(fputc@fp+1)^0,w,c
  6748  00426E  A4D8               	btfss	status,2,c
  6749  004270  EF3C  F021         	goto	u7951
  6750  004274  EF3E  F021         	goto	u7950
  6751  004278                     u7951:
  6752  004278  EF43  F021         	goto	l7850
  6753  00427C                     u7950:
  6754  00427C                     l7848:
  6755  00427C  5006               	movf	fputc@c^0,w,c
  6756  00427E  EC8E  F02A         	call	_putch
  6757  004282  EF90  F021         	goto	l1705
  6758  004286                     l7850:
  6759  004286  EE20 F004          	lfsr	2,4
  6760  00428A  5008               	movf	fputc@fp^0,w,c
  6761  00428C  26D9               	addwf	fsr2l,f,c
  6762  00428E  5009               	movf	(fputc@fp+1)^0,w,c
  6763  004290  22DA               	addwfc	fsr2h,f,c
  6764  004292  50DE               	movf	postinc2,w,c
  6765  004294  10DE               	iorwf	postinc2,w,c
  6766  004296  B4D8               	btfsc	status,2,c
  6767  004298  EF50  F021         	goto	u7961
  6768  00429C  EF52  F021         	goto	u7960
  6769  0042A0                     u7961:
  6770  0042A0  EF6D  F021         	goto	l7854
  6771  0042A4                     u7960:
  6772  0042A4  EE20 F004          	lfsr	2,4
  6773  0042A8  5008               	movf	fputc@fp^0,w,c
  6774  0042AA  26D9               	addwf	fsr2l,f,c
  6775  0042AC  5009               	movf	(fputc@fp+1)^0,w,c
  6776  0042AE  22DA               	addwfc	fsr2h,f,c
  6777  0042B0  EE10 F002          	lfsr	1,2
  6778  0042B4  5008               	movf	fputc@fp^0,w,c
  6779  0042B6  26E1               	addwf	fsr1l,f,c
  6780  0042B8  5009               	movf	(fputc@fp+1)^0,w,c
  6781  0042BA  22E2               	addwfc	fsr1h,f,c
  6782  0042BC  50DE               	movf	postinc2,w,c
  6783  0042BE  5CE6               	subwf	postinc1,w,c
  6784  0042C0  50E6               	movf	postinc1,w,c
  6785  0042C2  0A80               	xorlw	128
  6786  0042C4  6E0E               	movwf	(??_fputc+4)^0,c
  6787  0042C6  50DE               	movf	postinc2,w,c
  6788  0042C8  0A80               	xorlw	128
  6789  0042CA  580E               	subwfb	(??_fputc+4)^0,w,c
  6790  0042CC  B0D8               	btfsc	status,0,c
  6791  0042CE  EF6B  F021         	goto	u7971
  6792  0042D2  EF6D  F021         	goto	u7970
  6793  0042D6                     u7971:
  6794  0042D6  EF90  F021         	goto	l1705
  6795  0042DA                     u7970:
  6796  0042DA                     l7854:
  6797  0042DA  EE20 F002          	lfsr	2,2
  6798  0042DE  5008               	movf	fputc@fp^0,w,c
  6799  0042E0  26D9               	addwf	fsr2l,f,c
  6800  0042E2  5009               	movf	(fputc@fp+1)^0,w,c
  6801  0042E4  22DA               	addwfc	fsr2h,f,c
  6802  0042E6  CFDE F00A          	movff	postinc2,??_fputc
  6803  0042EA  CFDD F00B          	movff	postdec2,??_fputc+1
  6804  0042EE  C008  FFD9         	movff	fputc@fp,fsr2l
  6805  0042F2  C009  FFDA         	movff	fputc@fp+1,fsr2h
  6806  0042F6  CFDE F00C          	movff	postinc2,??_fputc+2
  6807  0042FA  CFDD F00D          	movff	postdec2,??_fputc+3
  6808  0042FE  500A               	movf	??_fputc^0,w,c
  6809  004300  240C               	addwf	(??_fputc+2)^0,w,c
  6810  004302  6ED9               	movwf	fsr2l,c
  6811  004304  500B               	movf	(??_fputc+1)^0,w,c
  6812  004306  200D               	addwfc	(??_fputc+3)^0,w,c
  6813  004308  6EDA               	movwf	fsr2h,c
  6814  00430A  C006  FFDF         	movff	fputc@c,indf2
  6815  00430E  EE20 F002          	lfsr	2,2
  6816  004312  5008               	movf	fputc@fp^0,w,c
  6817  004314  26D9               	addwf	fsr2l,f,c
  6818  004316  5009               	movf	(fputc@fp+1)^0,w,c
  6819  004318  22DA               	addwfc	fsr2h,f,c
  6820  00431A  2ADE               	incf	postinc2,f,c
  6821  00431C  0E00               	movlw	0
  6822  00431E  22DD               	addwfc	postdec2,f,c
  6823  004320                     l1705:
  6824  004320  0012               	return		;funcret
  6825  004322                     __end_of_fputc:
  6826                           	opt callstack 0
  6827                           
  6828 ;; *************** function _putch *****************
  6829 ;; Defined at:
  6830 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  c               1    wreg     unsigned char 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  c               1    0[COMRAM] unsigned char 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6847 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6848 ;;Total ram usage:        0 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    2
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_fputc
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text20
  6859  00551C                     __ptext20:
  6860                           	opt callstack 0
  6861  00551C                     _putch:
  6862                           	opt callstack 23
  6863  00551C  0012               	return		;funcret
  6864  00551E                     __end_of_putch:
  6865                           	opt callstack 0
  6866                           
  6867 ;; *************** function _abs *****************
  6868 ;; Defined at:
  6869 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;  a               2   23[COMRAM] int 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  2   23[COMRAM] int 
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6883 ;;      Params:         2       0       0       0       0       0       0       0       0
  6884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6885 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6886 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6887 ;;Total ram usage:        4 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    2
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_dtoa
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text21
  6898  005218                     __ptext21:
  6899                           	opt callstack 0
  6900  005218                     _abs:
  6901                           	opt callstack 23
  6902  005218  BE19               	btfsc	(abs@a+1)^0,7,c
  6903  00521A  EF19  F029         	goto	u9150
  6904  00521E  5019               	movf	(abs@a+1)^0,w,c
  6905  005220  E106               	bnz	u9151
  6906  005222  0418               	decf	abs@a^0,w,c
  6907  005224  B0D8               	btfsc	status,0,c
  6908  005226  EF17  F029         	goto	u9151
  6909  00522A  EF19  F029         	goto	u9150
  6910  00522E                     u9151:
  6911  00522E  EF27  F029         	goto	l1626
  6912  005232                     u9150:
  6913  005232  C018  F01A         	movff	abs@a,??_abs
  6914  005236  C019  F01B         	movff	abs@a+1,??_abs+1
  6915  00523A  1E1A               	comf	??_abs^0,f,c
  6916  00523C  1E1B               	comf	(??_abs+1)^0,f,c
  6917  00523E  4A1A               	infsnz	??_abs^0,f,c
  6918  005240  2A1B               	incf	(??_abs+1)^0,f,c
  6919  005242  C01A  F018         	movff	??_abs,?_abs
  6920  005246  C01B  F019         	movff	??_abs+1,?_abs+1
  6921  00524A  EF2B  F029         	goto	l1629
  6922  00524E                     l1626:
  6923  00524E  C018  F018         	movff	abs@a,?_abs
  6924  005252  C019  F019         	movff	abs@a+1,?_abs+1
  6925  005256                     l1629:
  6926  005256  0012               	return		;funcret
  6927  005258                     __end_of_abs:
  6928                           	opt callstack 0
  6929                           
  6930 ;; *************** function ___aomod *****************
  6931 ;; Defined at:
  6932 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  dividend        8    5[COMRAM] long long 
  6935 ;;  divisor         8   13[COMRAM] long long 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  sign            1   22[COMRAM] unsigned char 
  6938 ;;  counter         1   21[COMRAM] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  8    5[COMRAM] long long 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6948 ;;      Params:        16       0       0       0       0       0       0       0       0
  6949 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6951 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6952 ;;Total ram usage:       18 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    2
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_dtoa
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text22
  6963  003AA6                     __ptext22:
  6964                           	opt callstack 0
  6965  003AA6                     ___aomod:
  6966                           	opt callstack 23
  6967  003AA6  0E00               	movlw	0
  6968  003AA8  6E17               	movwf	___aomod@sign^0,c
  6969  003AAA  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
  6970  003AAC  EF5C  F01D         	goto	u9470
  6971  003AB0  EF5A  F01D         	goto	u9471
  6972  003AB4                     u9471:
  6973  003AB4  EF6E  F01D         	goto	l8668
  6974  003AB8                     u9470:
  6975  003AB8  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  6976  003ABA  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  6977  003ABC  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  6978  003ABE  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  6979  003AC0  1E09               	comf	(___aomod@dividend+3)^0,f,c
  6980  003AC2  1E08               	comf	(___aomod@dividend+2)^0,f,c
  6981  003AC4  1E07               	comf	(___aomod@dividend+1)^0,f,c
  6982  003AC6  6C06               	negf	___aomod@dividend^0,c
  6983  003AC8  0E00               	movlw	0
  6984  003ACA  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  6985  003ACC  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  6986  003ACE  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  6987  003AD0  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  6988  003AD2  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  6989  003AD4  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  6990  003AD6  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  6991  003AD8  0E01               	movlw	1
  6992  003ADA  6E17               	movwf	___aomod@sign^0,c
  6993  003ADC                     l8668:
  6994  003ADC  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
  6995  003ADE  EF75  F01D         	goto	u9480
  6996  003AE2  EF73  F01D         	goto	u9481
  6997  003AE6                     u9481:
  6998  003AE6  EF85  F01D         	goto	l8672
  6999  003AEA                     u9480:
  7000  003AEA  1E15               	comf	(___aomod@divisor+7)^0,f,c
  7001  003AEC  1E14               	comf	(___aomod@divisor+6)^0,f,c
  7002  003AEE  1E13               	comf	(___aomod@divisor+5)^0,f,c
  7003  003AF0  1E12               	comf	(___aomod@divisor+4)^0,f,c
  7004  003AF2  1E11               	comf	(___aomod@divisor+3)^0,f,c
  7005  003AF4  1E10               	comf	(___aomod@divisor+2)^0,f,c
  7006  003AF6  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  7007  003AF8  6C0E               	negf	___aomod@divisor^0,c
  7008  003AFA  0E00               	movlw	0
  7009  003AFC  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  7010  003AFE  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  7011  003B00  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  7012  003B02  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  7013  003B04  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  7014  003B06  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  7015  003B08  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  7016  003B0A                     l8672:
  7017  003B0A  500E               	movf	___aomod@divisor^0,w,c
  7018  003B0C  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  7019  003B0E  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  7020  003B10  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  7021  003B12  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  7022  003B14  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  7023  003B16  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  7024  003B18  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7025  003B1A  B4D8               	btfsc	status,2,c
  7026  003B1C  EF92  F01D         	goto	u9491
  7027  003B20  EF94  F01D         	goto	u9490
  7028  003B24                     u9491:
  7029  003B24  EFDC  F01D         	goto	l8688
  7030  003B28                     u9490:
  7031  003B28  0E01               	movlw	1
  7032  003B2A  6E16               	movwf	___aomod@counter^0,c
  7033  003B2C  EFA2  F01D         	goto	l8678
  7034  003B30                     l8676:
  7035  003B30  90D8               	bcf	status,0,c
  7036  003B32  360E               	rlcf	___aomod@divisor^0,f,c
  7037  003B34  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7038  003B36  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7039  003B38  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7040  003B3A  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7041  003B3C  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7042  003B3E  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7043  003B40  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7044  003B42  2A16               	incf	___aomod@counter^0,f,c
  7045  003B44                     l8678:
  7046  003B44  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7047  003B46  EFA7  F01D         	goto	u9501
  7048  003B4A  EFA9  F01D         	goto	u9500
  7049  003B4E                     u9501:
  7050  003B4E  EF98  F01D         	goto	l8676
  7051  003B52                     u9500:
  7052  003B52                     l8680:
  7053  003B52  500E               	movf	___aomod@divisor^0,w,c
  7054  003B54  5C06               	subwf	___aomod@dividend^0,w,c
  7055  003B56  500F               	movf	(___aomod@divisor+1)^0,w,c
  7056  003B58  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7057  003B5A  5010               	movf	(___aomod@divisor+2)^0,w,c
  7058  003B5C  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7059  003B5E  5011               	movf	(___aomod@divisor+3)^0,w,c
  7060  003B60  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7061  003B62  5012               	movf	(___aomod@divisor+4)^0,w,c
  7062  003B64  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7063  003B66  5013               	movf	(___aomod@divisor+5)^0,w,c
  7064  003B68  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7065  003B6A  5014               	movf	(___aomod@divisor+6)^0,w,c
  7066  003B6C  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7067  003B6E  5015               	movf	(___aomod@divisor+7)^0,w,c
  7068  003B70  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7069  003B72  A0D8               	btfss	status,0,c
  7070  003B74  EFBE  F01D         	goto	u9511
  7071  003B78  EFC0  F01D         	goto	u9510
  7072  003B7C                     u9511:
  7073  003B7C  EFD0  F01D         	goto	l8684
  7074  003B80                     u9510:
  7075  003B80  500E               	movf	___aomod@divisor^0,w,c
  7076  003B82  5E06               	subwf	___aomod@dividend^0,f,c
  7077  003B84  500F               	movf	(___aomod@divisor+1)^0,w,c
  7078  003B86  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7079  003B88  5010               	movf	(___aomod@divisor+2)^0,w,c
  7080  003B8A  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7081  003B8C  5011               	movf	(___aomod@divisor+3)^0,w,c
  7082  003B8E  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7083  003B90  5012               	movf	(___aomod@divisor+4)^0,w,c
  7084  003B92  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7085  003B94  5013               	movf	(___aomod@divisor+5)^0,w,c
  7086  003B96  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7087  003B98  5014               	movf	(___aomod@divisor+6)^0,w,c
  7088  003B9A  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7089  003B9C  5015               	movf	(___aomod@divisor+7)^0,w,c
  7090  003B9E  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7091  003BA0                     l8684:
  7092  003BA0  90D8               	bcf	status,0,c
  7093  003BA2  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7094  003BA4  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7095  003BA6  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7096  003BA8  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7097  003BAA  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7098  003BAC  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7099  003BAE  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7100  003BB0  320E               	rrcf	___aomod@divisor^0,f,c
  7101  003BB2  2E16               	decfsz	___aomod@counter^0,f,c
  7102  003BB4  EFA9  F01D         	goto	l8680
  7103  003BB8                     l8688:
  7104  003BB8  5017               	movf	___aomod@sign^0,w,c
  7105  003BBA  B4D8               	btfsc	status,2,c
  7106  003BBC  EFE2  F01D         	goto	u9521
  7107  003BC0  EFE4  F01D         	goto	u9520
  7108  003BC4                     u9521:
  7109  003BC4  EFF4  F01D         	goto	l8692
  7110  003BC8                     u9520:
  7111  003BC8  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7112  003BCA  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7113  003BCC  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7114  003BCE  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7115  003BD0  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7116  003BD2  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7117  003BD4  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7118  003BD6  6C06               	negf	___aomod@dividend^0,c
  7119  003BD8  0E00               	movlw	0
  7120  003BDA  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7121  003BDC  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7122  003BDE  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7123  003BE0  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7124  003BE2  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7125  003BE4  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7126  003BE6  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7127  003BE8                     l8692:
  7128  003BE8  C006  F006         	movff	___aomod@dividend,?___aomod
  7129  003BEC  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
  7130  003BF0  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
  7131  003BF4  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
  7132  003BF8  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
  7133  003BFC  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
  7134  003C00  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
  7135  003C04  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
  7136  003C08  0012               	return		;funcret
  7137  003C0A                     __end_of___aomod:
  7138                           	opt callstack 0
  7139                           
  7140 ;; *************** function ___aodiv *****************
  7141 ;; Defined at:
  7142 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  dividend        8    5[COMRAM] long long 
  7145 ;;  divisor         8   13[COMRAM] long long 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  quotient        8   23[COMRAM] long long 
  7148 ;;  sign            1   22[COMRAM] unsigned char 
  7149 ;;  counter         1   21[COMRAM] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  8    5[COMRAM] long long 
  7152 ;; Registers used:
  7153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7159 ;;      Params:        16       0       0       0       0       0       0       0       0
  7160 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7162 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7163 ;;Total ram usage:       26 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    2
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_dtoa
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text23
  7174  0037A2                     __ptext23:
  7175                           	opt callstack 0
  7176  0037A2                     ___aodiv:
  7177                           	opt callstack 23
  7178  0037A2  0E00               	movlw	0
  7179  0037A4  6E17               	movwf	___aodiv@sign^0,c
  7180  0037A6  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
  7181  0037A8  EFDA  F01B         	goto	u9400
  7182  0037AC  EFD8  F01B         	goto	u9401
  7183  0037B0                     u9401:
  7184  0037B0  EFEC  F01B         	goto	l8624
  7185  0037B4                     u9400:
  7186  0037B4  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7187  0037B6  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7188  0037B8  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7189  0037BA  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7190  0037BC  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7191  0037BE  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7192  0037C0  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7193  0037C2  6C0E               	negf	___aodiv@divisor^0,c
  7194  0037C4  0E00               	movlw	0
  7195  0037C6  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7196  0037C8  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7197  0037CA  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7198  0037CC  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7199  0037CE  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7200  0037D0  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7201  0037D2  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7202  0037D4  0E01               	movlw	1
  7203  0037D6  6E17               	movwf	___aodiv@sign^0,c
  7204  0037D8                     l8624:
  7205  0037D8  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
  7206  0037DA  EFF3  F01B         	goto	u9410
  7207  0037DE  EFF1  F01B         	goto	u9411
  7208  0037E2                     u9411:
  7209  0037E2  EF05  F01C         	goto	l8630
  7210  0037E6                     u9410:
  7211  0037E6  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7212  0037E8  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7213  0037EA  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7214  0037EC  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7215  0037EE  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7216  0037F0  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7217  0037F2  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7218  0037F4  6C06               	negf	___aodiv@dividend^0,c
  7219  0037F6  0E00               	movlw	0
  7220  0037F8  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7221  0037FA  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7222  0037FC  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7223  0037FE  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7224  003800  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7225  003802  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7226  003804  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7227  003806  0E01               	movlw	1
  7228  003808  1A17               	xorwf	___aodiv@sign^0,f,c
  7229  00380A                     l8630:
  7230  00380A  EE20  F018         	lfsr	2,___aodiv@quotient
  7231  00380E  0E07               	movlw	7
  7232  003810                     u9421:
  7233  003810  6ADE               	clrf	postinc2,c
  7234  003812  06E8               	decf	wreg,f,c
  7235  003814  E2FD               	bc	u9421
  7236  003816  500E               	movf	___aodiv@divisor^0,w,c
  7237  003818  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7238  00381A  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7239  00381C  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7240  00381E  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7241  003820  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7242  003822  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7243  003824  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7244  003826  B4D8               	btfsc	status,2,c
  7245  003828  EF18  F01C         	goto	u9431
  7246  00382C  EF1A  F01C         	goto	u9430
  7247  003830                     u9431:
  7248  003830  EF6C  F01C         	goto	l8652
  7249  003834                     u9430:
  7250  003834  0E01               	movlw	1
  7251  003836  6E16               	movwf	___aodiv@counter^0,c
  7252  003838  EF28  F01C         	goto	l8638
  7253  00383C                     l8636:
  7254  00383C  90D8               	bcf	status,0,c
  7255  00383E  360E               	rlcf	___aodiv@divisor^0,f,c
  7256  003840  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7257  003842  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7258  003844  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7259  003846  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7260  003848  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7261  00384A  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7262  00384C  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7263  00384E  2A16               	incf	___aodiv@counter^0,f,c
  7264  003850                     l8638:
  7265  003850  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7266  003852  EF2D  F01C         	goto	u9441
  7267  003856  EF2F  F01C         	goto	u9440
  7268  00385A                     u9441:
  7269  00385A  EF1E  F01C         	goto	l8636
  7270  00385E                     u9440:
  7271  00385E                     l8640:
  7272  00385E  90D8               	bcf	status,0,c
  7273  003860  3618               	rlcf	___aodiv@quotient^0,f,c
  7274  003862  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7275  003864  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7276  003866  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7277  003868  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7278  00386A  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7279  00386C  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7280  00386E  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7281  003870  500E               	movf	___aodiv@divisor^0,w,c
  7282  003872  5C06               	subwf	___aodiv@dividend^0,w,c
  7283  003874  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7284  003876  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7285  003878  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7286  00387A  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7287  00387C  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7288  00387E  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7289  003880  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7290  003882  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7291  003884  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7292  003886  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7293  003888  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7294  00388A  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  7295  00388C  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7296  00388E  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  7297  003890  A0D8               	btfss	status,0,c
  7298  003892  EF4D  F01C         	goto	u9451
  7299  003896  EF4F  F01C         	goto	u9450
  7300  00389A                     u9451:
  7301  00389A  EF60  F01C         	goto	l8648
  7302  00389E                     u9450:
  7303  00389E  500E               	movf	___aodiv@divisor^0,w,c
  7304  0038A0  5E06               	subwf	___aodiv@dividend^0,f,c
  7305  0038A2  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7306  0038A4  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  7307  0038A6  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7308  0038A8  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  7309  0038AA  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7310  0038AC  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  7311  0038AE  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7312  0038B0  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  7313  0038B2  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7314  0038B4  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  7315  0038B6  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7316  0038B8  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  7317  0038BA  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7318  0038BC  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  7319  0038BE  8018               	bsf	___aodiv@quotient^0,0,c
  7320  0038C0                     l8648:
  7321  0038C0  90D8               	bcf	status,0,c
  7322  0038C2  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  7323  0038C4  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  7324  0038C6  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  7325  0038C8  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  7326  0038CA  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  7327  0038CC  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  7328  0038CE  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  7329  0038D0  320E               	rrcf	___aodiv@divisor^0,f,c
  7330  0038D2  2E16               	decfsz	___aodiv@counter^0,f,c
  7331  0038D4  EF2F  F01C         	goto	l8640
  7332  0038D8                     l8652:
  7333  0038D8  5017               	movf	___aodiv@sign^0,w,c
  7334  0038DA  B4D8               	btfsc	status,2,c
  7335  0038DC  EF72  F01C         	goto	u9461
  7336  0038E0  EF74  F01C         	goto	u9460
  7337  0038E4                     u9461:
  7338  0038E4  EF84  F01C         	goto	l8656
  7339  0038E8                     u9460:
  7340  0038E8  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  7341  0038EA  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  7342  0038EC  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  7343  0038EE  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  7344  0038F0  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  7345  0038F2  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  7346  0038F4  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  7347  0038F6  6C18               	negf	___aodiv@quotient^0,c
  7348  0038F8  0E00               	movlw	0
  7349  0038FA  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  7350  0038FC  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  7351  0038FE  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  7352  003900  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  7353  003902  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  7354  003904  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  7355  003906  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  7356  003908                     l8656:
  7357  003908  C018  F006         	movff	___aodiv@quotient,?___aodiv
  7358  00390C  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
  7359  003910  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
  7360  003914  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
  7361  003918  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
  7362  00391C  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
  7363  003920  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
  7364  003924  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
  7365  003928  0012               	return		;funcret
  7366  00392A                     __end_of___aodiv:
  7367                           	opt callstack 0
  7368                           
  7369 ;; *************** function _atoi *****************
  7370 ;; Defined at:
  7371 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7374 ;;		 -> STR_11(32), STR_6(17), STR_5(19), STR_4(18), 
  7375 ;;		 -> STR_3(34), 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  n               2   25[COMRAM] int 
  7378 ;;  neg             2   18[COMRAM] int 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  2   12[COMRAM] int 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7388 ;;      Params:         2       0       0       0       0       0       0       0       0
  7389 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7390 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7391 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7392 ;;Total ram usage:       15 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    3
  7395 ;; This function calls:
  7396 ;;		___wmul
  7397 ;;		_isdigit
  7398 ;;		_isspace
  7399 ;; This function is called by:
  7400 ;;		_vfpfcnvrt
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text24
  7405  003482                     __ptext24:
  7406                           	opt callstack 0
  7407  003482                     _atoi:
  7408                           	opt callstack 23
  7409  003482  0E00               	movlw	0
  7410  003484  6E1B               	movwf	(atoi@n+1)^0,c
  7411  003486  0E00               	movlw	0
  7412  003488  6E1A               	movwf	atoi@n^0,c
  7413  00348A  0E00               	movlw	0
  7414  00348C  6E14               	movwf	(atoi@neg+1)^0,c
  7415  00348E  0E00               	movlw	0
  7416  003490  6E13               	movwf	atoi@neg^0,c
  7417  003492  EF4D  F01A         	goto	l9222
  7418  003496                     l9220:
  7419  003496  4A0D               	infsnz	atoi@s^0,f,c
  7420  003498  2A0E               	incf	(atoi@s+1)^0,f,c
  7421  00349A                     l9222:
  7422  00349A  0E01               	movlw	1
  7423  00349C  6E19               	movwf	_atoi$1426^0,c
  7424  00349E  C00D  FFF6         	movff	atoi@s,tblptrl
  7425  0034A2  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7426  0034A6                     	if	0	;tblptru may be non-zero
  7427  0034A6                     	endif
  7428  0034A6                     	if	0	;tblptru may be non-zero
  7429  0034A6                     	endif
  7430  0034A6  0008               	tblrd		*
  7431  0034A8  50F5               	movf	tablat,w,c
  7432  0034AA  0A20               	xorlw	32
  7433  0034AC  B4D8               	btfsc	status,2,c
  7434  0034AE  EF5B  F01A         	goto	u10431
  7435  0034B2  EF5D  F01A         	goto	u10430
  7436  0034B6                     u10431:
  7437  0034B6  EF7A  F01A         	goto	l9230
  7438  0034BA                     u10430:
  7439  0034BA  0EF7               	movlw	247
  7440  0034BC  6E0F               	movwf	??_atoi^0,c
  7441  0034BE  0EFF               	movlw	255
  7442  0034C0  6E10               	movwf	(??_atoi+1)^0,c
  7443  0034C2  C00D  FFF6         	movff	atoi@s,tblptrl
  7444  0034C6  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7445  0034CA                     	if	0	;tblptru may be non-zero
  7446  0034CA                     	endif
  7447  0034CA                     	if	0	;tblptru may be non-zero
  7448  0034CA                     	endif
  7449  0034CA  0008               	tblrd		*
  7450  0034CC  50F5               	movf	tablat,w,c
  7451  0034CE  6E11               	movwf	(??_atoi+2)^0,c
  7452  0034D0  6A12               	clrf	(??_atoi+3)^0,c
  7453  0034D2  500F               	movf	??_atoi^0,w,c
  7454  0034D4  2611               	addwf	(??_atoi+2)^0,f,c
  7455  0034D6  5010               	movf	(??_atoi+1)^0,w,c
  7456  0034D8  2212               	addwfc	(??_atoi+3)^0,f,c
  7457  0034DA  5012               	movf	(??_atoi+3)^0,w,c
  7458  0034DC  E109               	bnz	u10440
  7459  0034DE  0E05               	movlw	5
  7460  0034E0  5C11               	subwf	(??_atoi+2)^0,w,c
  7461  0034E2  A0D8               	btfss	status,0,c
  7462  0034E4  EF76  F01A         	goto	u10441
  7463  0034E8  EF78  F01A         	goto	u10440
  7464  0034EC                     u10441:
  7465  0034EC  EF7A  F01A         	goto	l9230
  7466  0034F0                     u10440:
  7467  0034F0  0E00               	movlw	0
  7468  0034F2  6E19               	movwf	_atoi$1426^0,c
  7469  0034F4                     l9230:
  7470  0034F4  C019  F015         	movff	_atoi$1426,_atoi$1425
  7471  0034F8  6A16               	clrf	(_atoi$1425+1)^0,c
  7472  0034FA  5015               	movf	_atoi$1425^0,w,c
  7473  0034FC  1016               	iorwf	(_atoi$1425+1)^0,w,c
  7474  0034FE  A4D8               	btfss	status,2,c
  7475  003500  EF84  F01A         	goto	u10451
  7476  003504  EF86  F01A         	goto	u10450
  7477  003508                     u10451:
  7478  003508  EF4B  F01A         	goto	l9220
  7479  00350C                     u10450:
  7480  00350C  EF90  F01A         	goto	l9240
  7481  003510                     l9236:
  7482  003510  0E00               	movlw	0
  7483  003512  6E14               	movwf	(atoi@neg+1)^0,c
  7484  003514  0E01               	movlw	1
  7485  003516  6E13               	movwf	atoi@neg^0,c
  7486  003518                     l9238:
  7487  003518  4A0D               	infsnz	atoi@s^0,f,c
  7488  00351A  2A0E               	incf	(atoi@s+1)^0,f,c
  7489  00351C  EFC5  F01A         	goto	l9246
  7490  003520                     l9240:
  7491  003520  C00D  FFF6         	movff	atoi@s,tblptrl
  7492  003524  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7493  003528                     	if	0	;tblptru may be non-zero
  7494  003528                     	endif
  7495  003528                     	if	0	;tblptru may be non-zero
  7496  003528                     	endif
  7497  003528  0008               	tblrd		*
  7498  00352A  50F5               	movf	tablat,w,c
  7499  00352C  6E0F               	movwf	??_atoi^0,c
  7500  00352E  6A10               	clrf	(??_atoi+1)^0,c
  7501                           
  7502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7503                           ; Switch size 1, requested type "simple"
  7504                           ; Number of cases is 1, Range of values is 0 to 0
  7505                           ; switch strategies available:
  7506                           ; Name         Instructions Cycles
  7507                           ; simple_byte            4     3 (average)
  7508                           ;	Chosen strategy is simple_byte
  7509  003530  5010               	movf	(??_atoi+1)^0,w,c
  7510  003532  0A00               	xorlw	0	; case 0
  7511  003534  B4D8               	btfsc	status,2,c
  7512  003536  EF9F  F01A         	goto	l10872
  7513  00353A  EFC5  F01A         	goto	l9246
  7514  00353E                     l10872:
  7515                           
  7516                           ; Switch size 1, requested type "simple"
  7517                           ; Number of cases is 2, Range of values is 43 to 45
  7518                           ; switch strategies available:
  7519                           ; Name         Instructions Cycles
  7520                           ; simple_byte            7     4 (average)
  7521                           ;	Chosen strategy is simple_byte
  7522  00353E  500F               	movf	??_atoi^0,w,c
  7523  003540  0A2B               	xorlw	43	; case 43
  7524  003542  B4D8               	btfsc	status,2,c
  7525  003544  EF8C  F01A         	goto	l9238
  7526  003548  0A06               	xorlw	6	; case 45
  7527  00354A  B4D8               	btfsc	status,2,c
  7528  00354C  EF88  F01A         	goto	l9236
  7529  003550  EFC5  F01A         	goto	l9246
  7530  003554                     l9242:
  7531  003554  C01A  F006         	movff	atoi@n,___wmul@multiplier
  7532  003558  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  7533  00355C  0E00               	movlw	0
  7534  00355E  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7535  003560  0E0A               	movlw	10
  7536  003562  6E08               	movwf	___wmul@multiplicand^0,c
  7537  003564  ECD2  F029         	call	___wmul	;wreg free
  7538  003568  C00D  FFF6         	movff	atoi@s,tblptrl
  7539  00356C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7540  003570                     	if	0	;tblptru may be non-zero
  7541  003570                     	endif
  7542  003570                     	if	0	;tblptru may be non-zero
  7543  003570                     	endif
  7544  003570  0008               	tblrd		*
  7545  003572  50F5               	movf	tablat,w,c
  7546  003574  5E06               	subwf	?___wmul^0,f,c
  7547  003576  0E00               	movlw	0
  7548  003578  5A07               	subwfb	(?___wmul+1)^0,f,c
  7549  00357A  0E30               	movlw	48
  7550  00357C  2406               	addwf	?___wmul^0,w,c
  7551  00357E  6E1A               	movwf	atoi@n^0,c
  7552  003580  0E00               	movlw	0
  7553  003582  2007               	addwfc	(?___wmul+1)^0,w,c
  7554  003584  6E1B               	movwf	(atoi@n+1)^0,c
  7555  003586  EF8C  F01A         	goto	l9238
  7556  00358A                     l9246:
  7557  00358A  0ED0               	movlw	208
  7558  00358C  6E0F               	movwf	??_atoi^0,c
  7559  00358E  0EFF               	movlw	255
  7560  003590  6E10               	movwf	(??_atoi+1)^0,c
  7561  003592  C00D  FFF6         	movff	atoi@s,tblptrl
  7562  003596  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7563  00359A                     	if	0	;tblptru may be non-zero
  7564  00359A                     	endif
  7565  00359A                     	if	0	;tblptru may be non-zero
  7566  00359A                     	endif
  7567  00359A  0008               	tblrd		*
  7568  00359C  50F5               	movf	tablat,w,c
  7569  00359E  6E11               	movwf	(??_atoi+2)^0,c
  7570  0035A0  6A12               	clrf	(??_atoi+3)^0,c
  7571  0035A2  500F               	movf	??_atoi^0,w,c
  7572  0035A4  2611               	addwf	(??_atoi+2)^0,f,c
  7573  0035A6  5010               	movf	(??_atoi+1)^0,w,c
  7574  0035A8  2212               	addwfc	(??_atoi+3)^0,f,c
  7575  0035AA  5012               	movf	(??_atoi+3)^0,w,c
  7576  0035AC  E10A               	bnz	u10460
  7577  0035AE  0E0A               	movlw	10
  7578  0035B0  5C11               	subwf	(??_atoi+2)^0,w,c
  7579  0035B2  A0D8               	btfss	status,0,c
  7580  0035B4  EFDE  F01A         	goto	u10461
  7581  0035B8  EFE1  F01A         	goto	u10460
  7582  0035BC                     u10461:
  7583  0035BC  0E01               	movlw	1
  7584  0035BE  EFE2  F01A         	goto	u10470
  7585  0035C2                     u10460:
  7586  0035C2  0E00               	movlw	0
  7587  0035C4                     u10470:
  7588  0035C4  6E17               	movwf	_atoi$1427^0,c
  7589  0035C6  6A18               	clrf	(_atoi$1427+1)^0,c
  7590  0035C8  5017               	movf	_atoi$1427^0,w,c
  7591  0035CA  1018               	iorwf	(_atoi$1427+1)^0,w,c
  7592  0035CC  A4D8               	btfss	status,2,c
  7593  0035CE  EFEB  F01A         	goto	u10481
  7594  0035D2  EFED  F01A         	goto	u10480
  7595  0035D6                     u10481:
  7596  0035D6  EFAA  F01A         	goto	l9242
  7597  0035DA                     u10480:
  7598  0035DA  5013               	movf	atoi@neg^0,w,c
  7599  0035DC  1014               	iorwf	(atoi@neg+1)^0,w,c
  7600  0035DE  A4D8               	btfss	status,2,c
  7601  0035E0  EFF4  F01A         	goto	u10491
  7602  0035E4  EFF6  F01A         	goto	u10490
  7603  0035E8                     u10491:
  7604  0035E8  EF04  F01B         	goto	l1657
  7605  0035EC                     u10490:
  7606  0035EC  C01A  F00F         	movff	atoi@n,??_atoi
  7607  0035F0  C01B  F010         	movff	atoi@n+1,??_atoi+1
  7608  0035F4  1E0F               	comf	??_atoi^0,f,c
  7609  0035F6  1E10               	comf	(??_atoi+1)^0,f,c
  7610  0035F8  4A0F               	infsnz	??_atoi^0,f,c
  7611  0035FA  2A10               	incf	(??_atoi+1)^0,f,c
  7612  0035FC  C00F  F00D         	movff	??_atoi,?_atoi
  7613  003600  C010  F00E         	movff	??_atoi+1,?_atoi+1
  7614  003604  EF08  F01B         	goto	l1660
  7615  003608                     l1657:
  7616  003608  C01A  F00D         	movff	atoi@n,?_atoi
  7617  00360C  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  7618  003610                     l1660:
  7619  003610  0012               	return		;funcret
  7620  003612                     __end_of_atoi:
  7621                           	opt callstack 0
  7622                           
  7623 ;; *************** function _isspace *****************
  7624 ;; Defined at:
  7625 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  c               2    5[COMRAM] int 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  2    5[COMRAM] int 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7639 ;;      Params:         2       0       0       0       0       0       0       0       0
  7640 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7641 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7642 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7643 ;;Total ram usage:        7 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    2
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_atoi
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text25
  7654  004FC2                     __ptext25:
  7655                           	opt callstack 0
  7656  004FC2                     _isspace:
  7657                           	opt callstack 23
  7658  004FC2  0E01               	movlw	1
  7659  004FC4  6E0C               	movwf	_isspace$1456^0,c
  7660  004FC6  0E20               	movlw	32
  7661  004FC8  1806               	xorwf	isspace@c^0,w,c
  7662  004FCA  1007               	iorwf	(isspace@c+1)^0,w,c
  7663  004FCC  B4D8               	btfsc	status,2,c
  7664  004FCE  EFEB  F027         	goto	u9741
  7665  004FD2  EFED  F027         	goto	u9740
  7666  004FD6                     u9741:
  7667  004FD6  EF06  F028         	goto	l8836
  7668  004FDA                     u9740:
  7669  004FDA  0EF7               	movlw	247
  7670  004FDC  6E08               	movwf	??_isspace^0,c
  7671  004FDE  0EFF               	movlw	255
  7672  004FE0  6E09               	movwf	(??_isspace+1)^0,c
  7673  004FE2  C006  F00A         	movff	isspace@c,??_isspace+2
  7674  004FE6  C007  F00B         	movff	isspace@c+1,??_isspace+3
  7675  004FEA  5008               	movf	??_isspace^0,w,c
  7676  004FEC  260A               	addwf	(??_isspace+2)^0,f,c
  7677  004FEE  5009               	movf	(??_isspace+1)^0,w,c
  7678  004FF0  220B               	addwfc	(??_isspace+3)^0,f,c
  7679  004FF2  500B               	movf	(??_isspace+3)^0,w,c
  7680  004FF4  E109               	bnz	u9750
  7681  004FF6  0E05               	movlw	5
  7682  004FF8  5C0A               	subwf	(??_isspace+2)^0,w,c
  7683  004FFA  A0D8               	btfss	status,0,c
  7684  004FFC  EF02  F028         	goto	u9751
  7685  005000  EF04  F028         	goto	u9750
  7686  005004                     u9751:
  7687  005004  EF06  F028         	goto	l8836
  7688  005008                     u9750:
  7689  005008  0E00               	movlw	0
  7690  00500A  6E0C               	movwf	_isspace$1456^0,c
  7691  00500C                     l8836:
  7692  00500C  C00C  F006         	movff	_isspace$1456,?_isspace
  7693  005010  6A07               	clrf	(?_isspace+1)^0,c
  7694  005012  0012               	return		;funcret
  7695  005014                     __end_of_isspace:
  7696                           	opt callstack 0
  7697                           
  7698 ;; *************** function _isdigit *****************
  7699 ;; Defined at:
  7700 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  c               2    5[COMRAM] int 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  2    5[COMRAM] int 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7714 ;;      Params:         2       0       0       0       0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7716 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7717 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7718 ;;Total ram usage:        6 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    2
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_vfpfcnvrt
  7725 ;;		_atoi
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text26
  7730  0052D0                     __ptext26:
  7731                           	opt callstack 0
  7732  0052D0                     _isdigit:
  7733                           	opt callstack 24
  7734  0052D0  0ED0               	movlw	208
  7735  0052D2  6E08               	movwf	??_isdigit^0,c
  7736  0052D4  0EFF               	movlw	255
  7737  0052D6  6E09               	movwf	(??_isdigit+1)^0,c
  7738  0052D8  C006  F00A         	movff	isdigit@c,??_isdigit+2
  7739  0052DC  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  7740  0052E0  5008               	movf	??_isdigit^0,w,c
  7741  0052E2  260A               	addwf	(??_isdigit+2)^0,f,c
  7742  0052E4  5009               	movf	(??_isdigit+1)^0,w,c
  7743  0052E6  220B               	addwfc	(??_isdigit+3)^0,f,c
  7744  0052E8  500B               	movf	(??_isdigit+3)^0,w,c
  7745  0052EA  E10A               	bnz	u9380
  7746  0052EC  0E0A               	movlw	10
  7747  0052EE  5C0A               	subwf	(??_isdigit+2)^0,w,c
  7748  0052F0  A0D8               	btfss	status,0,c
  7749  0052F2  EF7D  F029         	goto	u9381
  7750  0052F6  EF80  F029         	goto	u9380
  7751  0052FA                     u9381:
  7752  0052FA  0E01               	movlw	1
  7753  0052FC  EF81  F029         	goto	u9390
  7754  005300                     u9380:
  7755  005300  0E00               	movlw	0
  7756  005302                     u9390:
  7757  005302  6E06               	movwf	?_isdigit^0,c
  7758  005304  6A07               	clrf	(?_isdigit+1)^0,c
  7759  005306  0012               	return		;funcret
  7760  005308                     __end_of_isdigit:
  7761                           	opt callstack 0
  7762                           
  7763 ;; *************** function ___wmul *****************
  7764 ;; Defined at:
  7765 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  multiplier      2    5[COMRAM] unsigned int 
  7768 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  product         2    9[COMRAM] unsigned int 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  2    5[COMRAM] unsigned int 
  7773 ;; Registers used:
  7774 ;;		wreg, status,2, status,0, prodl, prodh
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7780 ;;      Params:         4       0       0       0       0       0       0       0       0
  7781 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7783 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7784 ;;Total ram usage:        6 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:    2
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_atoi
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text27
  7795  0053A4                     __ptext27:
  7796                           	opt callstack 0
  7797  0053A4                     ___wmul:
  7798                           	opt callstack 23
  7799  0053A4  5006               	movf	___wmul@multiplier^0,w,c
  7800  0053A6  0208               	mulwf	___wmul@multiplicand^0,c
  7801  0053A8  CFF3 F00A          	movff	prodl,___wmul@product
  7802  0053AC  CFF4 F00B          	movff	prodh,___wmul@product+1
  7803  0053B0  5006               	movf	___wmul@multiplier^0,w,c
  7804  0053B2  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7805  0053B4  50F3               	movf	243,w,c
  7806  0053B6  260B               	addwf	(___wmul@product+1)^0,f,c
  7807  0053B8  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7808  0053BA  0208               	mulwf	___wmul@multiplicand^0,c
  7809  0053BC  50F3               	movf	243,w,c
  7810  0053BE  260B               	addwf	(___wmul@product+1)^0,f,c
  7811  0053C0  C00A  F006         	movff	___wmul@product,?___wmul
  7812  0053C4  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7813  0053C8  0012               	return		;funcret
  7814  0053CA                     __end_of___wmul:
  7815                           	opt callstack 0
  7816                           
  7817 ;; *************** function _inicializarComportamientoBasico *****************
  7818 ;; Defined at:
  7819 ;;		line 258 in file "main.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;		None
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;		None
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  1    wreg      void 
  7826 ;; Registers used:
  7827 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7833 ;;      Params:         0       0       0       0       0       0       0       0       0
  7834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7836 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7837 ;;Total ram usage:        0 bytes
  7838 ;; Hardware stack levels used:    1
  7839 ;; Hardware stack levels required when called:    6
  7840 ;; This function calls:
  7841 ;;		_dameDistancia
  7842 ;;		_velocidadEstandar
  7843 ;; This function is called by:
  7844 ;;		_main
  7845 ;; This function uses a non-reentrant model
  7846 ;;
  7847                           
  7848                           	psect	text28
  7849  0050B4                     __ptext28:
  7850                           	opt callstack 0
  7851  0050B4                     _inicializarComportamientoBasico:
  7852                           	opt callstack 24
  7853  0050B4                     
  7854                           ;main.c: 260:     mouse.curr_state = ENFRENTE;
  7855  0050B4  0E01               	movlw	1
  7856  0050B6  0100               	movlb	0	; () banked
  7857  0050B8  6FFD               	movwf	_mouse& (0+255),b
  7858  0050BA                     
  7859                           ; BSR set to: 0
  7860                           ;main.c: 262:     oldSensorDerecha = dameDistancia(DERECHA);
  7861  0050BA  0E03               	movlw	3
  7862  0050BC  EC05  F01E         	call	_dameDistancia
  7863  0050C0  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  7864  0050C4  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  7865  0050C8  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  7866  0050CC  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  7867  0050D0                     
  7868                           ;main.c: 263:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  7869  0050D0  0E02               	movlw	2
  7870  0050D2  EC05  F01E         	call	_dameDistancia
  7871  0050D6  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  7872  0050DA  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  7873  0050DE  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  7874  0050E2  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  7875  0050E6                     
  7876                           ;main.c: 264:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  7877  0050E6  0E01               	movlw	1
  7878  0050E8  EC05  F01E         	call	_dameDistancia
  7879  0050EC  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  7880  0050F0  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  7881  0050F4  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  7882  0050F8  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  7883  0050FC                     
  7884                           ;main.c: 266:     velocidadEstandar();
  7885  0050FC  ECF8  F029         	call	_velocidadEstandar	;wreg free
  7886  005100  0012               	return		;funcret
  7887  005102                     __end_of_inicializarComportamientoBasico:
  7888                           	opt callstack 0
  7889                           
  7890 ;; *************** function _configurarAdc *****************
  7891 ;; Defined at:
  7892 ;;		line 7 in file "./adc.h"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7909 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    2
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_main
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text29
  7921  00550E                     __ptext29:
  7922                           	opt callstack 0
  7923  00550E                     _configurarAdc:
  7924                           	opt callstack 28
  7925  00550E                     
  7926                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  7927  00550E  0E0E               	movlw	14
  7928  005510  6EC1               	movwf	193,c	;volatile
  7929                           
  7930                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  7931  005512  0EA5               	movlw	165
  7932  005514  6EC0               	movwf	192,c	;volatile
  7933  005516  0012               	return		;funcret
  7934  005518                     __end_of_configurarAdc:
  7935                           	opt callstack 0
  7936                           
  7937 ;; *************** function _configPwm *****************
  7938 ;; Defined at:
  7939 ;;		line 47 in file "./pwm.h"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  channel         1    wreg     unsigned char 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  channel         1    7[COMRAM] unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0
  7954 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7955 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7956 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7957 ;;Total ram usage:        3 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    2
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_main
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           	psect	text30
  7968  005014                     __ptext30:
  7969                           	opt callstack 0
  7970  005014                     _configPwm:
  7971                           	opt callstack 28
  7972                           
  7973                           ;incstack = 0
  7974                           ;configPwm@channel stored from wreg
  7975  005014  6E08               	movwf	configPwm@channel^0,c
  7976  005016                     
  7977                           ;./pwm.h: 56:         T2CKPS0 = 1;
  7978  005016  80CA               	bsf	4042,0,c	;volatile
  7979                           
  7980                           ;./pwm.h: 57:         T2CKPS1 = 1;
  7981  005018  82CA               	bsf	4042,1,c	;volatile
  7982  00501A                     
  7983                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  7984  00501A  0E7C               	movlw	124
  7985  00501C  6ECB               	movwf	203,c	;volatile
  7986                           
  7987                           ;./pwm.h: 63:     switch (channel) {
  7988  00501E  EF1B  F028         	goto	l10142
  7989  005022                     l165:
  7990                           
  7991                           ;./pwm.h: 66:             TRISC2 = 0;
  7992  005022  9494               	bcf	3988,2,c	;volatile
  7993                           
  7994                           ;./pwm.h: 67:             CCP1M3 = 1;
  7995  005024  86BD               	bsf	4029,3,c	;volatile
  7996                           
  7997                           ;./pwm.h: 68:             CCP1M2 = 1;
  7998  005026  84BD               	bsf	4029,2,c	;volatile
  7999                           
  8000                           ;./pwm.h: 71:             break;
  8001  005028  EF30  F028         	goto	l166
  8002  00502C                     l167:
  8003                           
  8004                           ;./pwm.h: 74:             TRISC1 = 0;
  8005  00502C  9294               	bcf	3988,1,c	;volatile
  8006                           
  8007                           ;./pwm.h: 75:             CCP2M3 = 1;
  8008  00502E  86BA               	bsf	4026,3,c	;volatile
  8009                           
  8010                           ;./pwm.h: 76:             CCP2M2 = 1;
  8011  005030  84BA               	bsf	4026,2,c	;volatile
  8012                           
  8013                           ;./pwm.h: 77:             break;
  8014  005032  EF30  F028         	goto	l166
  8015  005036                     l10142:
  8016  005036  5008               	movf	configPwm@channel^0,w,c
  8017  005038  6E06               	movwf	??_configPwm^0,c
  8018  00503A  6A07               	clrf	(??_configPwm+1)^0,c
  8019                           
  8020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8021                           ; Switch size 1, requested type "simple"
  8022                           ; Number of cases is 1, Range of values is 0 to 0
  8023                           ; switch strategies available:
  8024                           ; Name         Instructions Cycles
  8025                           ; simple_byte            4     3 (average)
  8026                           ;	Chosen strategy is simple_byte
  8027  00503C  5007               	movf	(??_configPwm+1)^0,w,c
  8028  00503E  0A00               	xorlw	0	; case 0
  8029  005040  B4D8               	btfsc	status,2,c
  8030  005042  EF25  F028         	goto	l10874
  8031  005046  EF30  F028         	goto	l166
  8032  00504A                     l10874:
  8033                           
  8034                           ; Switch size 1, requested type "simple"
  8035                           ; Number of cases is 2, Range of values is 1 to 2
  8036                           ; switch strategies available:
  8037                           ; Name         Instructions Cycles
  8038                           ; simple_byte            7     4 (average)
  8039                           ;	Chosen strategy is simple_byte
  8040  00504A  5006               	movf	??_configPwm^0,w,c
  8041  00504C  0A01               	xorlw	1	; case 1
  8042  00504E  B4D8               	btfsc	status,2,c
  8043  005050  EF11  F028         	goto	l165
  8044  005054  0A03               	xorlw	3	; case 2
  8045  005056  B4D8               	btfsc	status,2,c
  8046  005058  EF16  F028         	goto	l167
  8047  00505C  EF30  F028         	goto	l166
  8048  005060                     l166:
  8049                           
  8050                           ;./pwm.h: 81:     TMR2ON = 1;
  8051  005060  84CA               	bsf	4042,2,c	;volatile
  8052  005062  0012               	return		;funcret
  8053  005064                     __end_of_configPwm:
  8054                           	opt callstack 0
  8055                           
  8056 ;; *************** function _comportamientoBasico *****************
  8057 ;; Defined at:
  8058 ;;		line 278 in file "main.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;		None
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;  direccionEle    1   66[BANK0 ] unsigned char 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8072 ;;      Params:         0       0       0       0       0       0       0       0       0
  8073 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8074 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8075 ;;      Totals:         0       3       0       0       0       0       0       0       0
  8076 ;;Total ram usage:        3 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; Hardware stack levels required when called:    9
  8079 ;; This function calls:
  8080 ;;		_PID
  8081 ;;		_UART_printf
  8082 ;;		_caminoCorrecto
  8083 ;;		_decidirDireccion
  8084 ;;		_finalizarRecorrido
  8085 ;;		_forzarEspejeo
  8086 ;;		_forzarParoAuto
  8087 ;;		_hayCruce
  8088 ;;		_leerSensores
  8089 ;;		_limpiarMovimientos
  8090 ;;		_moverCarrito
  8091 ;;		_recorrerCaminoEncontrado
  8092 ;;		_regresarAlCruce
  8093 ;;		_regresarPuntoPartida
  8094 ;;		_velocidadBaja
  8095 ;;		_velocidadEstandar
  8096 ;; This function is called by:
  8097 ;;		_main
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text31
  8102  0015CE                     __ptext31:
  8103                           	opt callstack 0
  8104  0015CE                     _comportamientoBasico:
  8105                           	opt callstack 21
  8106  0015CE                     
  8107                           ;main.c: 297:     if (!caminoEncontrado) {
  8108  0015CE  0101               	movlb	1	; () banked
  8109  0015D0  5132               	movf	comportamientoBasico@caminoEncontrado& (0+255),w,b
  8110  0015D2  A4D8               	btfss	status,2,c
  8111  0015D4  EFEE  F00A         	goto	u11511
  8112  0015D8  EFF0  F00A         	goto	u11510
  8113  0015DC                     u11511:
  8114  0015DC  EFE3  F00C         	goto	l10350
  8115  0015E0                     u11510:
  8116  0015E0                     
  8117                           ; BSR set to: 1
  8118                           ;main.c: 299:         moverCarrito(espejearCarroY, &carroEspejeado);
  8119  0015E0  0ECB               	movlw	low comportamientoBasico@carroEspejeado
  8120  0015E2  0100               	movlb	0	; () banked
  8121  0015E4  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  8122  0015E6  0E01               	movlw	high comportamientoBasico@carroEspejeado
  8123  0015E8  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  8124  0015EA  0101               	movlb	1	; () banked
  8125  0015EC  5135               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  8126  0015EE  EC91  F021         	call	_moverCarrito
  8127  0015F2                     
  8128                           ;main.c: 302:         if (!llegoDestino) {
  8129  0015F2  5059               	movf	_llegoDestino^0,w,c
  8130  0015F4  A4D8               	btfss	status,2,c
  8131  0015F6  EFFF  F00A         	goto	u11521
  8132  0015FA  EF01  F00B         	goto	u11520
  8133  0015FE                     u11521:
  8134  0015FE  EF55  F00B         	goto	l10242
  8135  001602                     u11520:
  8136  001602                     
  8137                           ;main.c: 304:             if (mapear)
  8138  001602  0101               	movlb	1	; () banked
  8139  001604  5134               	movf	comportamientoBasico@mapear& (0+255),w,b
  8140  001606  B4D8               	btfsc	status,2,c
  8141  001608  EF08  F00B         	goto	u11531
  8142  00160C  EF0A  F00B         	goto	u11530
  8143  001610                     u11531:
  8144  001610  EF2E  F00B         	goto	l10228
  8145  001614                     u11530:
  8146  001614                     
  8147                           ; BSR set to: 1
  8148                           ;main.c: 305:             {;main.c: 306:                 if (numMovimientos < 200)
  8149  001614  51C5               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  8150  001616  E107               	bnz	u11541
  8151  001618  0EC8               	movlw	200
  8152  00161A  5DC4               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  8153  00161C  B0D8               	btfsc	status,0,c
  8154  00161E  EF13  F00B         	goto	u11541
  8155  001622  EF15  F00B         	goto	u11540
  8156  001626                     u11541:
  8157  001626  EF21  F00B         	goto	l10222
  8158  00162A                     u11540:
  8159  00162A                     
  8160                           ; BSR set to: 1
  8161                           ;main.c: 307:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  8162  00162A  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  8163  00162C  25C4               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  8164  00162E  6ED9               	movwf	fsr2l,c
  8165  001630  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  8166  001632  21C5               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  8167  001634  6EDA               	movwf	fsr2h,c
  8168  001636  C0FD  FFDF         	movff	_mouse,indf2
  8169  00163A                     
  8170                           ; BSR set to: 1
  8171  00163A  4BC4               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  8172  00163C  2BC5               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  8173  00163E  EF55  F00B         	goto	l10242
  8174  001642                     l10222:
  8175                           
  8176                           ; BSR set to: 1
  8177                           ;main.c: 309:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  8178  001642  0ED0               	movlw	low STR_12
  8179  001644  6E07               	movwf	UART_printf@cadena^0,c
  8180  001646  0E7E               	movlw	high STR_12
  8181  001648  6E08               	movwf	(UART_printf@cadena+1)^0,c
  8182  00164A  EC05  F027         	call	_UART_printf	;wreg free
  8183  00164E                     l10224:
  8184                           
  8185                           ;main.c: 310:                     forzarParoAuto();
  8186  00164E  EC67  F02A         	call	_forzarParoAuto	;wreg free
  8187  001652                     
  8188                           ;main.c: 311:                     pausa = 1;
  8189  001652  0E01               	movlw	1
  8190  001654  0101               	movlb	1	; () banked
  8191  001656  6FD3               	movwf	_pausa& (0+255),b
  8192  001658  EF55  F00B         	goto	l10242
  8193  00165C                     l10228:
  8194                           
  8195                           ; BSR set to: 1
  8196                           ;main.c: 332:                 if (!investigandoCruce) {
  8197  00165C  51CA               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  8198  00165E  A4D8               	btfss	status,2,c
  8199  001660  EF34  F00B         	goto	u11551
  8200  001664  EF36  F00B         	goto	u11550
  8201  001668                     u11551:
  8202  001668  EF55  F00B         	goto	l10242
  8203  00166C                     u11550:
  8204  00166C                     
  8205                           ; BSR set to: 1
  8206                           ;main.c: 333:                     if (numMovimientosTotales < 1000)
  8207  00166C  0EE8               	movlw	232
  8208  00166E  5DC2               	subwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  8209  001670  0E03               	movlw	3
  8210  001672  59C3               	subwfb	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  8211  001674  B0D8               	btfsc	status,0,c
  8212  001676  EF3F  F00B         	goto	u11561
  8213  00167A  EF41  F00B         	goto	u11560
  8214  00167E                     u11561:
  8215  00167E  EF4D  F00B         	goto	l10236
  8216  001682                     u11560:
  8217  001682                     
  8218                           ; BSR set to: 1
  8219                           ;main.c: 334:                         caminoFinal[numMovimientosTotales++] = mouse.curr_
      +                          state;
  8220  001682  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8221  001684  25C2               	addwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  8222  001686  6ED9               	movwf	fsr2l,c
  8223  001688  0E02               	movlw	high comportamientoBasico@caminoFinal
  8224  00168A  21C3               	addwfc	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  8225  00168C  6EDA               	movwf	fsr2h,c
  8226  00168E  C0FD  FFDF         	movff	_mouse,indf2
  8227  001692                     
  8228                           ; BSR set to: 1
  8229  001692  4BC2               	infsnz	comportamientoBasico@numMovimientosTotales& (0+255),f,b
  8230  001694  2BC3               	incf	(comportamientoBasico@numMovimientosTotales+1)& (0+255),f,b
  8231  001696  EF55  F00B         	goto	l10242
  8232  00169A                     l10236:
  8233                           
  8234                           ; BSR set to: 1
  8235                           ;main.c: 336:                         UART_printf("\n\nOVERFLOW en el mapeo de pasos Rea
      +                          lizados para camino Total\n\n");
  8236  00169A  0E91               	movlw	low STR_13
  8237  00169C  6E07               	movwf	UART_printf@cadena^0,c
  8238  00169E  0E7E               	movlw	high STR_13
  8239  0016A0  6E08               	movwf	(UART_printf@cadena+1)^0,c
  8240  0016A2  EC05  F027         	call	_UART_printf	;wreg free
  8241  0016A6  EF27  F00B         	goto	l10224
  8242  0016AA                     l10242:
  8243                           
  8244                           ;main.c: 345:         leerSensores();
  8245  0016AA  EC95  F01C         	call	_leerSensores	;wreg free
  8246  0016AE                     
  8247                           ;main.c: 348:         direccionElegida = decidirDireccion(caminosRecorrer, &investigando
      +                          Cruce,
  8248  0016AE  0EBF               	movlw	low comportamientoBasico@caminosRecorrer
  8249  0016B0  6E40               	movwf	decidirDireccion@caminosRecorrer^0,c
  8250  0016B2  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  8251  0016B4  6E41               	movwf	(decidirDireccion@caminosRecorrer+1)^0,c
  8252  0016B6  0ECA               	movlw	low comportamientoBasico@investigandoCruce
  8253  0016B8  6E42               	movwf	decidirDireccion@investigandoCruce^0,c
  8254  0016BA  0E01               	movlw	high comportamientoBasico@investigandoCruce
  8255  0016BC  6E43               	movwf	(decidirDireccion@investigandoCruce+1)^0,c
  8256  0016BE  0EC9               	movlw	low comportamientoBasico@posicionInvCruce
  8257  0016C0  6E44               	movwf	decidirDireccion@posicionInvCruce^0,c
  8258  0016C2  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  8259  0016C4  6E45               	movwf	(decidirDireccion@posicionInvCruce+1)^0,c
  8260  0016C6  0EC8               	movlw	low comportamientoBasico@contCaminosRecorridos
  8261  0016C8  6E46               	movwf	decidirDireccion@contCaminosRecorridos^0,c
  8262  0016CA  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  8263  0016CC  6E47               	movwf	(decidirDireccion@contCaminosRecorridos+1)^0,c
  8264  0016CE  0EC7               	movlw	low comportamientoBasico@caminoActual
  8265  0016D0  6E48               	movwf	decidirDireccion@caminoActual^0,c
  8266  0016D2  0E01               	movlw	high comportamientoBasico@caminoActual
  8267  0016D4  6E49               	movwf	(decidirDireccion@caminoActual+1)^0,c
  8268  0016D6  0EC6               	movlw	low comportamientoBasico@cambioOrientacionCarro
  8269  0016D8  6E4A               	movwf	decidirDireccion@cambioOrientacionCarro^0,c
  8270  0016DA  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  8271  0016DC  6E4B               	movwf	(decidirDireccion@cambioOrientacionCarro+1)^0,c
  8272  0016DE  EC0B  F00D         	call	_decidirDireccion	;wreg free
  8273  0016E2  0100               	movlb	0	; () banked
  8274  0016E4  6FA2               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  8275                           
  8276                           ;main.c: 352:         switch (mouse.curr_state) {
  8277  0016E6  EFC2  F00C         	goto	l10348
  8278  0016EA                     l10246:
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;main.c: 359:                         mapear = 0;
  8282  0016EA  0E00               	movlw	0
  8283  0016EC  0101               	movlb	1	; () banked
  8284  0016EE  6F34               	movwf	comportamientoBasico@mapear& (0+255),b
  8285                           
  8286                           ;main.c: 360:                         espejearCarroY = 1;
  8287  0016F0  0E01               	movlw	1
  8288  0016F2  6F35               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  8289                           
  8290                           ;main.c: 361:                         mouse.Next_state = IZQUIERDA;
  8291  0016F4  0E02               	movlw	2
  8292  0016F6  0100               	movlb	0	; () banked
  8293  0016F8  6FFE               	movwf	(_mouse+1)& (0+255),b
  8294                           
  8295                           ;main.c: 362:                         break;
  8296  0016FA  EFDF  F00C         	goto	l391
  8297  0016FE                     l10248:
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;main.c: 365:                         if (hayCruce(caminosRecorrer, investigandoCruce)) 
      +                          {
  8301  0016FE  0EBF               	movlw	low comportamientoBasico@caminosRecorrer
  8302  001700  6E40               	movwf	hayCruce@caminosRecorrer^0,c
  8303  001702  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  8304  001704  6E41               	movwf	(hayCruce@caminosRecorrer+1)^0,c
  8305  001706  C1CA  F042         	movff	comportamientoBasico@investigandoCruce,hayCruce@investigandoCruce
  8306  00170A  EC09  F01B         	call	_hayCruce	;wreg free
  8307  00170E  0900               	iorlw	0
  8308  001710  B4D8               	btfsc	status,2,c
  8309  001712  EF8D  F00B         	goto	u11571
  8310  001716  EF8F  F00B         	goto	u11570
  8311  00171A                     u11571:
  8312  00171A  EFAC  F00B         	goto	l10258
  8313  00171E                     u11570:
  8314  00171E                     
  8315                           ;main.c: 367:                             velocidadBaja();
  8316  00171E  ECE5  F029         	call	_velocidadBaja	;wreg free
  8317  001722                     
  8318                           ;main.c: 369:                             if (!cruceDetectado) {
  8319  001722  0101               	movlb	1	; () banked
  8320  001724  5133               	movf	comportamientoBasico@cruceDetectado& (0+255),w,b
  8321  001726  A4D8               	btfss	status,2,c
  8322  001728  EF98  F00B         	goto	u11581
  8323  00172C  EF9A  F00B         	goto	u11580
  8324  001730                     u11581:
  8325  001730  EFBB  F00B         	goto	l10264
  8326  001734                     u11580:
  8327  001734                     
  8328                           ; BSR set to: 1
  8329                           ;main.c: 371:                                 if (!investigandoCruce)
  8330  001734  51CA               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  8331  001736  A4D8               	btfss	status,2,c
  8332  001738  EFA0  F00B         	goto	u11591
  8333  00173C  EFA2  F00B         	goto	u11590
  8334  001740                     u11591:
  8335  001740  EFA4  F00B         	goto	l384
  8336  001744                     u11590:
  8337  001744                     
  8338                           ; BSR set to: 1
  8339                           ;main.c: 372:                                     posicionInvCruce = 1;
  8340  001744  0E01               	movlw	1
  8341  001746  6FC9               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  8342  001748                     l384:
  8343                           
  8344                           ; BSR set to: 1
  8345                           ;main.c: 374:                                 mapear = 1;
  8346  001748  0E01               	movlw	1
  8347  00174A  6F34               	movwf	comportamientoBasico@mapear& (0+255),b
  8348                           
  8349                           ;main.c: 375:                                 cruceDetectado = 1;
  8350  00174C  0E01               	movlw	1
  8351  00174E  6F33               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  8352                           
  8353                           ;main.c: 376:                                 investigandoCruce = 1;
  8354  001750  0E01               	movlw	1
  8355  001752  6FCA               	movwf	comportamientoBasico@investigandoCruce& (0+255),b
  8356  001754  EFBB  F00B         	goto	l10264
  8357  001758                     l10258:
  8358  001758  0101               	movlb	1	; () banked
  8359  00175A  5138               	movf	_paredEnfrente& (0+255),w,b
  8360  00175C  A4D8               	btfss	status,2,c
  8361  00175E  EFB3  F00B         	goto	u11601
  8362  001762  EFB5  F00B         	goto	u11600
  8363  001766                     u11601:
  8364  001766  EFB9  F00B         	goto	l10262
  8365  00176A                     u11600:
  8366  00176A                     
  8367                           ; BSR set to: 1
  8368                           ;main.c: 380:                             velocidadBaja();
  8369  00176A  ECE5  F029         	call	_velocidadBaja	;wreg free
  8370  00176E  EFBB  F00B         	goto	l10264
  8371  001772                     l10262:
  8372                           
  8373                           ; BSR set to: 1
  8374                           ;main.c: 382:                             PID();
  8375  001772  EC55  F016         	call	_PID	;wreg free
  8376  001776                     l10264:
  8377                           
  8378                           ;main.c: 384:                         mouse.Next_state = ENFRENTE;
  8379  001776  0E01               	movlw	1
  8380  001778  0100               	movlb	0	; () banked
  8381  00177A  6FFE               	movwf	(_mouse+1)& (0+255),b
  8382                           
  8383                           ;main.c: 385:                         break;
  8384  00177C  EFDF  F00C         	goto	l391
  8385  001780                     l10266:
  8386                           
  8387                           ; BSR set to: 0
  8388                           ;main.c: 388:                         velocidadEstandar();
  8389  001780  ECF8  F029         	call	_velocidadEstandar	;wreg free
  8390  001784                     l10268:
  8391                           
  8392                           ;main.c: 389:                         mouse.Next_state = IZQUIERDA;
  8393  001784  0E02               	movlw	2
  8394  001786  0100               	movlb	0	; () banked
  8395  001788  6FFE               	movwf	(_mouse+1)& (0+255),b
  8396                           
  8397                           ;main.c: 390:                         break;
  8398  00178A  EFDF  F00C         	goto	l391
  8399  00178E                     l10270:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;main.c: 393:                         velocidadEstandar();
  8403  00178E  ECF8  F029         	call	_velocidadEstandar	;wreg free
  8404  001792                     
  8405                           ;main.c: 394:                         mouse.Next_state = DERECHA;
  8406  001792  0E03               	movlw	3
  8407  001794  0100               	movlb	0	; () banked
  8408  001796  6FFE               	movwf	(_mouse+1)& (0+255),b
  8409                           
  8410                           ;main.c: 395:                         break;
  8411  001798  EFDF  F00C         	goto	l391
  8412  00179C                     l10274:
  8413                           
  8414                           ;main.c: 399:                         mouse.Next_state = ALTO;
  8415  00179C  0E04               	movlw	4
  8416  00179E  0100               	movlb	0	; () banked
  8417  0017A0  6FFE               	movwf	(_mouse+1)& (0+255),b
  8418                           
  8419                           ;main.c: 400:                         break;
  8420  0017A2  EFDF  F00C         	goto	l391
  8421  0017A6                     l10278:
  8422                           
  8423                           ; BSR set to: 0
  8424  0017A6  51A2               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  8425  0017A8  6FA0               	movwf	??_comportamientoBasico& (0+255),b
  8426  0017AA  6BA1               	clrf	(??_comportamientoBasico+1)& (0+255),b
  8427                           
  8428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8429                           ; Switch size 1, requested type "simple"
  8430                           ; Number of cases is 1, Range of values is 0 to 0
  8431                           ; switch strategies available:
  8432                           ; Name         Instructions Cycles
  8433                           ; simple_byte            4     3 (average)
  8434                           ;	Chosen strategy is simple_byte
  8435  0017AC  51A1               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  8436  0017AE  0A00               	xorlw	0	; case 0
  8437  0017B0  B4D8               	btfsc	status,2,c
  8438  0017B2  EFDD  F00B         	goto	l10876
  8439  0017B6  EFDF  F00C         	goto	l391
  8440  0017BA                     l10876:
  8441                           
  8442                           ; BSR set to: 0
  8443                           ; Switch size 1, requested type "simple"
  8444                           ; Number of cases is 5, Range of values is 0 to 4
  8445                           ; switch strategies available:
  8446                           ; Name         Instructions Cycles
  8447                           ; simple_byte           16     9 (average)
  8448                           ;	Chosen strategy is simple_byte
  8449  0017BA  51A0               	movf	??_comportamientoBasico& (0+255),w,b
  8450  0017BC  0A00               	xorlw	0	; case 0
  8451  0017BE  B4D8               	btfsc	status,2,c
  8452  0017C0  EF75  F00B         	goto	l10246
  8453  0017C4  0A01               	xorlw	1	; case 1
  8454  0017C6  B4D8               	btfsc	status,2,c
  8455  0017C8  EF7F  F00B         	goto	l10248
  8456  0017CC  0A03               	xorlw	3	; case 2
  8457  0017CE  B4D8               	btfsc	status,2,c
  8458  0017D0  EFC0  F00B         	goto	l10266
  8459  0017D4  0A01               	xorlw	1	; case 3
  8460  0017D6  B4D8               	btfsc	status,2,c
  8461  0017D8  EFC7  F00B         	goto	l10270
  8462  0017DC  0A07               	xorlw	7	; case 4
  8463  0017DE  B4D8               	btfsc	status,2,c
  8464  0017E0  EFCE  F00B         	goto	l10274
  8465  0017E4  EFDF  F00C         	goto	l391
  8466  0017E8                     l10280:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;main.c: 408:                 if (carroEspejeado && espejearCarroY) {
  8470  0017E8  0101               	movlb	1	; () banked
  8471  0017EA  51CB               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  8472  0017EC  B4D8               	btfsc	status,2,c
  8473  0017EE  EFFB  F00B         	goto	u11611
  8474  0017F2  EFFD  F00B         	goto	u11610
  8475  0017F6                     u11611:
  8476  0017F6  EF26  F00C         	goto	l10298
  8477  0017FA                     u11610:
  8478  0017FA                     
  8479                           ; BSR set to: 1
  8480  0017FA  5135               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  8481  0017FC  B4D8               	btfsc	status,2,c
  8482  0017FE  EF03  F00C         	goto	u11621
  8483  001802  EF05  F00C         	goto	u11620
  8484  001806                     u11621:
  8485  001806  EF26  F00C         	goto	l10298
  8486  00180A                     u11620:
  8487  00180A                     
  8488                           ; BSR set to: 1
  8489                           ;main.c: 410:                     espejearCarroY = 0;
  8490  00180A  0E00               	movlw	0
  8491  00180C  6F35               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  8492                           
  8493                           ;main.c: 411:                     carroEspejeado = 0;
  8494  00180E  0E00               	movlw	0
  8495  001810  6FCB               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  8496  001812                     
  8497                           ; BSR set to: 1
  8498                           ;main.c: 413:                     regresarAlCruce(movimientosRealizados, numMovimientos)
      +                          ;
  8499  001812  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  8500  001814  0100               	movlb	0	; () banked
  8501  001816  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  8502  001818  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  8503  00181A  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  8504  00181C  C1C4  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  8505  001820  C1C5  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  8506  001824  ECBA  F022         	call	_regresarAlCruce	;wreg free
  8507  001828                     
  8508                           ;main.c: 414:                     limpiarMovimientos(movimientosRealizados, &numMovimien
      +                          tos);
  8509  001828  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  8510  00182A  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  8511  00182C  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  8512  00182E  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  8513  001830  0EC4               	movlw	low comportamientoBasico@numMovimientos
  8514  001832  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  8515  001834  0E01               	movlw	high comportamientoBasico@numMovimientos
  8516  001836  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  8517  001838  EC32  F028         	call	_limpiarMovimientos	;wreg free
  8518  00183C                     
  8519                           ;main.c: 416:                     cruceDetectado = 0;
  8520  00183C  0E00               	movlw	0
  8521  00183E  0101               	movlb	1	; () banked
  8522  001840  6F33               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  8523  001842                     
  8524                           ; BSR set to: 1
  8525                           ;main.c: 417:                     posicionInvCruce = 1;
  8526  001842  0E01               	movlw	1
  8527  001844  6FC9               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  8528  001846                     
  8529                           ; BSR set to: 1
  8530                           ;main.c: 418:                     contCaminosRecorridos++;
  8531  001846  2BC8               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  8532  001848  EFCE  F00B         	goto	l10274
  8533  00184C                     l10298:
  8534                           
  8535                           ; BSR set to: 1
  8536  00184C  5135               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  8537  00184E  B4D8               	btfsc	status,2,c
  8538  001850  EF2C  F00C         	goto	u11631
  8539  001854  EF2E  F00C         	goto	u11630
  8540  001858                     u11631:
  8541  001858  EFBB  F00B         	goto	l10264
  8542  00185C                     u11630:
  8543  00185C                     
  8544                           ; BSR set to: 1
  8545  00185C  51CB               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  8546  00185E  B4D8               	btfsc	status,2,c
  8547  001860  EF34  F00C         	goto	u11641
  8548  001864  EF36  F00C         	goto	u11640
  8549  001868                     u11641:
  8550  001868  EFBB  F00B         	goto	l10264
  8551  00186C                     u11640:
  8552  00186C                     
  8553                           ; BSR set to: 1
  8554  00186C  5059               	movf	_llegoDestino^0,w,c
  8555  00186E  B4D8               	btfsc	status,2,c
  8556  001870  EF3C  F00C         	goto	u11651
  8557  001874  EF3E  F00C         	goto	u11650
  8558  001878                     u11651:
  8559  001878  EFBB  F00B         	goto	l10264
  8560  00187C                     u11650:
  8561  00187C                     
  8562                           ; BSR set to: 1
  8563                           ;main.c: 421:                     espejearCarroY = 0;
  8564  00187C  0E00               	movlw	0
  8565  00187E  6F35               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  8566                           
  8567                           ;main.c: 422:                     mouse.Next_state = ALTO;
  8568  001880  0E04               	movlw	4
  8569  001882  0100               	movlb	0	; () banked
  8570  001884  6FFE               	movwf	(_mouse+1)& (0+255),b
  8571                           
  8572                           ;main.c: 424:                 } else {
  8573  001886  EFDF  F00C         	goto	l391
  8574  00188A                     l10310:
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;main.c: 436:                 if (llegoDestino && carroEspejeado) {
  8578  00188A  5059               	movf	_llegoDestino^0,w,c
  8579  00188C  B4D8               	btfsc	status,2,c
  8580  00188E  EF4B  F00C         	goto	u11661
  8581  001892  EF4D  F00C         	goto	u11660
  8582  001896                     u11661:
  8583  001896  EF6C  F00C         	goto	l10324
  8584  00189A                     u11660:
  8585  00189A                     
  8586                           ; BSR set to: 0
  8587  00189A  0101               	movlb	1	; () banked
  8588  00189C  51CB               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  8589  00189E  B4D8               	btfsc	status,2,c
  8590  0018A0  EF54  F00C         	goto	u11671
  8591  0018A4  EF56  F00C         	goto	u11670
  8592  0018A8                     u11671:
  8593  0018A8  EF6C  F00C         	goto	l10324
  8594  0018AC                     u11670:
  8595  0018AC                     
  8596                           ; BSR set to: 1
  8597                           ;main.c: 438:                     carroEspejeado = 0;
  8598  0018AC  0E00               	movlw	0
  8599  0018AE  6FCB               	movwf	comportamientoBasico@carroEspejeado& (0+255),b
  8600  0018B0                     
  8601                           ; BSR set to: 1
  8602                           ;main.c: 439:                     regresarPuntoPartida(caminoFinal, numMovimientosTotale
      +                          s);
  8603  0018B0  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8604  0018B2  0100               	movlb	0	; () banked
  8605  0018B4  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  8606  0018B6  0E02               	movlw	high comportamientoBasico@caminoFinal
  8607  0018B8  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  8608  0018BA  C1C2  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  8609  0018BE  C1C3  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  8610  0018C2  EC1F  F024         	call	_regresarPuntoPartida	;wreg free
  8611  0018C6                     
  8612                           ;main.c: 440:                     llegoDestino = 0;
  8613  0018C6  0E00               	movlw	0
  8614  0018C8  6E59               	movwf	_llegoDestino^0,c
  8615  0018CA                     
  8616                           ;main.c: 441:                     caminoEncontrado = 1;
  8617  0018CA  0E01               	movlw	1
  8618  0018CC  0101               	movlb	1	; () banked
  8619  0018CE  6F32               	movwf	comportamientoBasico@caminoEncontrado& (0+255),b
  8620  0018D0                     
  8621                           ; BSR set to: 1
  8622                           ;main.c: 442:                     finalizarRecorrido();
  8623  0018D0  EC7F  F02A         	call	_finalizarRecorrido	;wreg free
  8624                           
  8625                           ;main.c: 443:                 } else if (llegoDestino && !carroEspejeado) {
  8626  0018D4  EFDF  F00C         	goto	l391
  8627  0018D8                     l10324:
  8628  0018D8  5059               	movf	_llegoDestino^0,w,c
  8629  0018DA  B4D8               	btfsc	status,2,c
  8630  0018DC  EF72  F00C         	goto	u11681
  8631  0018E0  EF74  F00C         	goto	u11680
  8632  0018E4                     u11681:
  8633  0018E4  EFA9  F00C         	goto	l10338
  8634  0018E8                     u11680:
  8635  0018E8  0101               	movlb	1	; () banked
  8636  0018EA  51CB               	movf	comportamientoBasico@carroEspejeado& (0+255),w,b
  8637  0018EC  A4D8               	btfss	status,2,c
  8638  0018EE  EF7B  F00C         	goto	u11691
  8639  0018F2  EF7D  F00C         	goto	u11690
  8640  0018F6                     u11691:
  8641  0018F6  EFA9  F00C         	goto	l10338
  8642  0018FA                     u11690:
  8643  0018FA                     
  8644                           ; BSR set to: 1
  8645                           ;main.c: 445:                     caminoCorrecto(movimientosRealizados, caminoFinal, num
      +                          Movimientos,
  8646  0018FA  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  8647  0018FC  6E12               	movwf	caminoCorrecto@movimientos^0,c
  8648  0018FE  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  8649  001900  6E13               	movwf	(caminoCorrecto@movimientos+1)^0,c
  8650  001902  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8651  001904  6E14               	movwf	caminoCorrecto@caminoFinal^0,c
  8652  001906  0E02               	movlw	high comportamientoBasico@caminoFinal
  8653  001908  6E15               	movwf	(caminoCorrecto@caminoFinal+1)^0,c
  8654  00190A  C1C4  F016         	movff	comportamientoBasico@numMovimientos,caminoCorrecto@numMovimientos
  8655  00190E  C1C5  F017         	movff	comportamientoBasico@numMovimientos+1,caminoCorrecto@numMovimientos+1
  8656  001912  0EC2               	movlw	low comportamientoBasico@numMovimientosTotales
  8657  001914  6E18               	movwf	caminoCorrecto@numMovimientosFinal^0,c
  8658  001916  0E01               	movlw	high comportamientoBasico@numMovimientosTotales
  8659  001918  6E19               	movwf	(caminoCorrecto@numMovimientosFinal+1)^0,c
  8660  00191A  C1C7  F01A         	movff	comportamientoBasico@caminoActual,caminoCorrecto@caminoActual
  8661  00191E  ECC7  F028         	call	_caminoCorrecto	;wreg free
  8662  001922                     
  8663                           ;main.c: 448:                     espejearCarroY = 1;
  8664  001922  0E01               	movlw	1
  8665  001924  0101               	movlb	1	; () banked
  8666  001926  6F35               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  8667  001928                     
  8668                           ; BSR set to: 1
  8669                           ;main.c: 449:                     UART_printf("\rSe llego Al destino\r\n");
  8670  001928  0E7B               	movlw	low STR_14
  8671  00192A  6E07               	movwf	UART_printf@cadena^0,c
  8672  00192C  0E7F               	movlw	high STR_14
  8673  00192E  6E08               	movwf	(UART_printf@cadena+1)^0,c
  8674  001930  EC05  F027         	call	_UART_printf	;wreg free
  8675  001934                     
  8676                           ;main.c: 450:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  8677  001934  0E10               	movlw	16
  8678  001936  0100               	movlb	0	; () banked
  8679  001938  6FA1               	movwf	(??_comportamientoBasico+1)& (0+255),b
  8680  00193A  0E39               	movlw	57
  8681  00193C  6FA0               	movwf	??_comportamientoBasico& (0+255),b
  8682  00193E  0E0D               	movlw	13
  8683  001940                     u11867:
  8684  001940  2EE8               	decfsz	wreg,f,c
  8685  001942  D7FE               	bra	u11867
  8686  001944  2FA0               	decfsz	??_comportamientoBasico& (0+255),f,b
  8687  001946  D7FC               	bra	u11867
  8688  001948  2FA1               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  8689  00194A  D7FA               	bra	u11867
  8690  00194C  D000               	nop2	
  8691  00194E  EFC2  F00B         	goto	l10268
  8692  001952                     l10338:
  8693                           
  8694                           ;main.c: 454:                     if (direccionElegida == IZQUIERDA || direccionElegida 
      +                          == DERECHA)
  8695  001952  0E02               	movlw	2
  8696  001954  0100               	movlb	0	; () banked
  8697  001956  19A2               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  8698  001958  B4D8               	btfsc	status,2,c
  8699  00195A  EFB1  F00C         	goto	u11701
  8700  00195E  EFB3  F00C         	goto	u11700
  8701  001962                     u11701:
  8702  001962  EFBC  F00C         	goto	l10342
  8703  001966                     u11700:
  8704  001966                     
  8705                           ; BSR set to: 0
  8706  001966  0E03               	movlw	3
  8707  001968  19A2               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  8708  00196A  A4D8               	btfss	status,2,c
  8709  00196C  EFBA  F00C         	goto	u11711
  8710  001970  EFBC  F00C         	goto	u11710
  8711  001974                     u11711:
  8712  001974  EFBE  F00C         	goto	l10344
  8713  001978                     u11710:
  8714  001978                     l10342:
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;main.c: 455:                         velocidadEstandar();
  8718  001978  ECF8  F029         	call	_velocidadEstandar	;wreg free
  8719  00197C                     l10344:
  8720                           
  8721                           ;main.c: 457:                     mouse.Next_state = direccionElegida;
  8722  00197C  C0A2  F0FE         	movff	comportamientoBasico@direccionElegida,_mouse+1
  8723  001980  EFDF  F00C         	goto	l391
  8724  001984                     l10348:
  8725                           
  8726                           ; BSR set to: 0
  8727  001984  51FD               	movf	_mouse& (0+255),w,b
  8728  001986  6FA0               	movwf	??_comportamientoBasico& (0+255),b
  8729  001988  6BA1               	clrf	(??_comportamientoBasico+1)& (0+255),b
  8730                           
  8731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8732                           ; Switch size 1, requested type "simple"
  8733                           ; Number of cases is 1, Range of values is 0 to 0
  8734                           ; switch strategies available:
  8735                           ; Name         Instructions Cycles
  8736                           ; simple_byte            4     3 (average)
  8737                           ;	Chosen strategy is simple_byte
  8738  00198A  51A1               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  8739  00198C  0A00               	xorlw	0	; case 0
  8740  00198E  B4D8               	btfsc	status,2,c
  8741  001990  EFCC  F00C         	goto	l10878
  8742  001994  EFDF  F00C         	goto	l391
  8743  001998                     l10878:
  8744                           
  8745                           ; BSR set to: 0
  8746                           ; Switch size 1, requested type "simple"
  8747                           ; Number of cases is 4, Range of values is 1 to 4
  8748                           ; switch strategies available:
  8749                           ; Name         Instructions Cycles
  8750                           ; simple_byte           13     7 (average)
  8751                           ;	Chosen strategy is simple_byte
  8752  001998  51A0               	movf	??_comportamientoBasico& (0+255),w,b
  8753  00199A  0A01               	xorlw	1	; case 1
  8754  00199C  B4D8               	btfsc	status,2,c
  8755  00199E  EFD3  F00B         	goto	l10278
  8756  0019A2  0A03               	xorlw	3	; case 2
  8757  0019A4  B4D8               	btfsc	status,2,c
  8758  0019A6  EFF4  F00B         	goto	l10280
  8759  0019AA  0A01               	xorlw	1	; case 3
  8760  0019AC  B4D8               	btfsc	status,2,c
  8761  0019AE  EFBB  F00B         	goto	l10264
  8762  0019B2  0A07               	xorlw	7	; case 4
  8763  0019B4  B4D8               	btfsc	status,2,c
  8764  0019B6  EF45  F00C         	goto	l10310
  8765  0019BA  EFDF  F00C         	goto	l391
  8766  0019BE                     l391:
  8767                           
  8768                           ;main.c: 463:         mouse.curr_state = mouse.Next_state;
  8769  0019BE  C0FE  F0FD         	movff	_mouse+1,_mouse
  8770                           
  8771                           ;main.c: 465:     } else {
  8772  0019C2  EF0A  F00D         	goto	l407
  8773  0019C6                     l10350:
  8774                           
  8775                           ; BSR set to: 1
  8776                           ;main.c: 466:         recorrerCaminoEncontrado(caminoFinal, numMovimientosTotales);
  8777  0019C6  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8778  0019C8  0100               	movlb	0	; () banked
  8779  0019CA  6F9A               	movwf	recorrerCaminoEncontrado@movimientos& (0+255),b
  8780  0019CC  0E02               	movlw	high comportamientoBasico@caminoFinal
  8781  0019CE  6F9B               	movwf	(recorrerCaminoEncontrado@movimientos+1)& (0+255),b
  8782  0019D0  C1C2  F09C         	movff	comportamientoBasico@numMovimientosTotales,recorrerCaminoEncontrado@numMovimiento
      +                          s
  8783  0019D4  C1C3  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,recorrerCaminoEncontrado@numMovimien
      +                          tos+1
  8784  0019D8  EC0D  F025         	call	_recorrerCaminoEncontrado	;wreg free
  8785  0019DC                     
  8786                           ;main.c: 467:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  8787  0019DC  0E10               	movlw	16
  8788  0019DE  0100               	movlb	0	; () banked
  8789  0019E0  6FA1               	movwf	(??_comportamientoBasico+1)& (0+255),b
  8790  0019E2  0E39               	movlw	57
  8791  0019E4  6FA0               	movwf	??_comportamientoBasico& (0+255),b
  8792  0019E6  0E0D               	movlw	13
  8793  0019E8                     u11877:
  8794  0019E8  2EE8               	decfsz	wreg,f,c
  8795  0019EA  D7FE               	bra	u11877
  8796  0019EC  2FA0               	decfsz	??_comportamientoBasico& (0+255),f,b
  8797  0019EE  D7FC               	bra	u11877
  8798  0019F0  2FA1               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  8799  0019F2  D7FA               	bra	u11877
  8800  0019F4  D000               	nop2	
  8801  0019F6                     
  8802                           ;main.c: 468:         forzarEspejeo();
  8803  0019F6  EC2C  F029         	call	_forzarEspejeo	;wreg free
  8804  0019FA                     
  8805                           ;main.c: 469:         regresarPuntoPartida(caminoFinal, numMovimientosTotales);
  8806  0019FA  0EC8               	movlw	low comportamientoBasico@caminoFinal
  8807  0019FC  0100               	movlb	0	; () banked
  8808  0019FE  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  8809  001A00  0E02               	movlw	high comportamientoBasico@caminoFinal
  8810  001A02  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  8811  001A04  C1C2  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  8812  001A08  C1C3  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  8813  001A0C  EC1F  F024         	call	_regresarPuntoPartida	;wreg free
  8814  001A10                     
  8815                           ;main.c: 470:         finalizarRecorrido();
  8816  001A10  EC7F  F02A         	call	_finalizarRecorrido	;wreg free
  8817  001A14                     l407:
  8818  001A14  0012               	return		;funcret
  8819  001A16                     __end_of_comportamientoBasico:
  8820                           	opt callstack 0
  8821                           
  8822 ;; *************** function _velocidadBaja *****************
  8823 ;; Defined at:
  8824 ;;		line 1289 in file "main.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;		None
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;		None
  8829 ;; Return value:  Size  Location     Type
  8830 ;;                  1    wreg      void 
  8831 ;; Registers used:
  8832 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8838 ;;      Params:         0       0       0       0       0       0       0       0       0
  8839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8841 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8842 ;;Total ram usage:        0 bytes
  8843 ;; Hardware stack levels used:    1
  8844 ;; Hardware stack levels required when called:    5
  8845 ;; This function calls:
  8846 ;;		_pwmDuty
  8847 ;; This function is called by:
  8848 ;;		_comportamientoBasico
  8849 ;;		_probarCruceT
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text32
  8854  0053CA                     __ptext32:
  8855                           	opt callstack 0
  8856  0053CA                     _velocidadBaja:
  8857                           	opt callstack 24
  8858  0053CA                     
  8859                           ;main.c: 1291:     pwmDuty(70, 1);
  8860  0053CA  0E00               	movlw	0
  8861  0053CC  0100               	movlb	0	; () banked
  8862  0053CE  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8863  0053D0  0E46               	movlw	70
  8864  0053D2  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8865  0053D4  0E01               	movlw	1
  8866  0053D6  6F7E               	movwf	pwmDuty@channel& (0+255),b
  8867  0053D8  EC89  F018         	call	_pwmDuty	;wreg free
  8868                           
  8869                           ;main.c: 1292:     pwmDuty(70, 2);
  8870  0053DC  0E00               	movlw	0
  8871  0053DE  0100               	movlb	0	; () banked
  8872  0053E0  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  8873  0053E2  0E46               	movlw	70
  8874  0053E4  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  8875  0053E6  0E02               	movlw	2
  8876  0053E8  6F7E               	movwf	pwmDuty@channel& (0+255),b
  8877  0053EA  EC89  F018         	call	_pwmDuty	;wreg free
  8878  0053EE  0012               	return		;funcret
  8879  0053F0                     __end_of_velocidadBaja:
  8880                           	opt callstack 0
  8881                           
  8882 ;; *************** function _regresarPuntoPartida *****************
  8883 ;; Defined at:
  8884 ;;		line 672 in file "main.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  8887 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  8888 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  i               2   62[BANK0 ] int 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8900 ;;      Params:         0       4       0       0       0       0       0       0       0
  8901 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8902 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8903 ;;      Totals:         1       6       0       0       0       0       0       0       0
  8904 ;;Total ram usage:        7 bytes
  8905 ;; Hardware stack levels used:    1
  8906 ;; Hardware stack levels required when called:    6
  8907 ;; This function calls:
  8908 ;;		_PID
  8909 ;;		_mover
  8910 ;;		_velocidadEstandar
  8911 ;; This function is called by:
  8912 ;;		_comportamientoBasico
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text33
  8917  00483E                     __ptext33:
  8918                           	opt callstack 0
  8919  00483E                     _regresarPuntoPartida:
  8920                           	opt callstack 23
  8921  00483E                     
  8922                           ;main.c: 674:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  8923  00483E  0EFF               	movlw	255
  8924  004840  0100               	movlb	0	; () banked
  8925  004842  259C               	addwf	regresarPuntoPartida@numMovimientos& (0+255),w,b
  8926  004844  6F9E               	movwf	regresarPuntoPartida@i& (0+255),b
  8927  004846  0EFF               	movlw	255
  8928  004848  219D               	addwfc	(regresarPuntoPartida@numMovimientos+1)& (0+255),w,b
  8929  00484A  6F9F               	movwf	(regresarPuntoPartida@i+1)& (0+255),b
  8930  00484C  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  8931  00484E  EF2D  F024         	goto	u11440
  8932  004852  EF2B  F024         	goto	u11441
  8933  004856                     u11441:
  8934  004856  EF2F  F024         	goto	l10086
  8935  00485A                     u11440:
  8936  00485A  EF73  F024         	goto	l468
  8937  00485E                     l10086:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;main.c: 676:         if (movimientos[i] == IZQUIERDA) {
  8941  00485E  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  8942  004860  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  8943  004862  6ED9               	movwf	fsr2l,c
  8944  004864  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  8945  004866  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  8946  004868  6EDA               	movwf	fsr2h,c
  8947  00486A  0E02               	movlw	2
  8948  00486C  18DE               	xorwf	postinc2,w,c
  8949  00486E  A4D8               	btfss	status,2,c
  8950  004870  EF3C  F024         	goto	u11451
  8951  004874  EF3E  F024         	goto	u11450
  8952  004878                     u11451:
  8953  004878  EF45  F024         	goto	l10092
  8954  00487C                     u11450:
  8955  00487C                     
  8956                           ; BSR set to: 0
  8957                           ;main.c: 677:             velocidadEstandar();
  8958  00487C  ECF8  F029         	call	_velocidadEstandar	;wreg free
  8959  004880                     
  8960                           ;main.c: 678:             mouse.curr_state = DERECHA;
  8961  004880  0E03               	movlw	3
  8962  004882  0100               	movlb	0	; () banked
  8963  004884  6FFD               	movwf	_mouse& (0+255),b
  8964                           
  8965                           ;main.c: 679:         } else if (movimientos[i] == DERECHA) {
  8966  004886  EF66  F024         	goto	l10102
  8967  00488A                     l10092:
  8968                           
  8969                           ; BSR set to: 0
  8970  00488A  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  8971  00488C  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  8972  00488E  6ED9               	movwf	fsr2l,c
  8973  004890  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  8974  004892  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  8975  004894  6EDA               	movwf	fsr2h,c
  8976  004896  0E03               	movlw	3
  8977  004898  18DE               	xorwf	postinc2,w,c
  8978  00489A  A4D8               	btfss	status,2,c
  8979  00489C  EF52  F024         	goto	u11461
  8980  0048A0  EF54  F024         	goto	u11460
  8981  0048A4                     u11461:
  8982  0048A4  EF5B  F024         	goto	l10098
  8983  0048A8                     u11460:
  8984  0048A8                     
  8985                           ; BSR set to: 0
  8986                           ;main.c: 680:             velocidadEstandar();
  8987  0048A8  ECF8  F029         	call	_velocidadEstandar	;wreg free
  8988  0048AC                     
  8989                           ;main.c: 681:             mouse.curr_state = IZQUIERDA;
  8990  0048AC  0E02               	movlw	2
  8991  0048AE  0100               	movlb	0	; () banked
  8992  0048B0  6FFD               	movwf	_mouse& (0+255),b
  8993                           
  8994                           ;main.c: 682:         } else {
  8995  0048B2  EF66  F024         	goto	l10102
  8996  0048B6                     l10098:
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;main.c: 684:             PID();
  9000  0048B6  EC55  F016         	call	_PID	;wreg free
  9001  0048BA                     
  9002                           ;main.c: 685:             mouse.curr_state = movimientos[i];
  9003  0048BA  0100               	movlb	0	; () banked
  9004  0048BC  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  9005  0048BE  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  9006  0048C0  6ED9               	movwf	fsr2l,c
  9007  0048C2  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  9008  0048C4  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  9009  0048C6  6EDA               	movwf	fsr2h,c
  9010  0048C8  50DF               	movf	indf2,w,c
  9011  0048CA  6FFD               	movwf	_mouse& (0+255),b
  9012  0048CC                     l10102:
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;main.c: 688:         mover();
  9016  0048CC  EC74  F024         	call	_mover	;wreg free
  9017  0048D0                     
  9018                           ;main.c: 689:     }
  9019  0048D0  0100               	movlb	0	; () banked
  9020  0048D2  079E               	decf	regresarPuntoPartida@i& (0+255),f,b
  9021  0048D4  A0D8               	btfss	status,0,c
  9022  0048D6  079F               	decf	(regresarPuntoPartida@i+1)& (0+255),f,b
  9023  0048D8                     
  9024                           ; BSR set to: 0
  9025  0048D8  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  9026  0048DA  EF73  F024         	goto	u11470
  9027  0048DE  EF71  F024         	goto	u11471
  9028  0048E2                     u11471:
  9029  0048E2  EF2F  F024         	goto	l10086
  9030  0048E6                     u11470:
  9031  0048E6                     l468:
  9032                           
  9033                           ; BSR set to: 0
  9034  0048E6  0012               	return		;funcret
  9035  0048E8                     __end_of_regresarPuntoPartida:
  9036                           	opt callstack 0
  9037                           
  9038 ;; *************** function _regresarAlCruce *****************
  9039 ;; Defined at:
  9040 ;;		line 692 in file "main.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  9043 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  9044 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  i               2   62[BANK0 ] int 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      void 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9056 ;;      Params:         0       4       0       0       0       0       0       0       0
  9057 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9058 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9059 ;;      Totals:         1       6       0       0       0       0       0       0       0
  9060 ;;Total ram usage:        7 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    6
  9063 ;; This function calls:
  9064 ;;		_PID
  9065 ;;		_mover
  9066 ;;		_velocidadEstandar
  9067 ;; This function is called by:
  9068 ;;		_comportamientoBasico
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text34
  9073  004574                     __ptext34:
  9074                           	opt callstack 0
  9075  004574                     _regresarAlCruce:
  9076                           	opt callstack 23
  9077  004574                     
  9078                           ;main.c: 694:     for (T_INT i = numMovimientos - 1; i > 0; i--) {
  9079  004574  0EFF               	movlw	255
  9080  004576  0100               	movlb	0	; () banked
  9081  004578  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  9082  00457A  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  9083  00457C  0EFF               	movlw	255
  9084  00457E  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  9085  004580  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  9086  004582  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  9087  004584  EFCE  F022         	goto	u11400
  9088  004588  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9089  00458A  E106               	bnz	u11401
  9090  00458C  059E               	decf	regresarAlCruce@i& (0+255),w,b
  9091  00458E  B0D8               	btfsc	status,0,c
  9092  004590  EFCC  F022         	goto	u11401
  9093  004594  EFCE  F022         	goto	u11400
  9094  004598                     u11401:
  9095  004598  EFD0  F022         	goto	l10060
  9096  00459C                     u11400:
  9097  00459C  EF1A  F023         	goto	l477
  9098  0045A0                     l10060:
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;main.c: 698:         if (movimientos[i] == IZQUIERDA) {
  9102  0045A0  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9103  0045A2  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9104  0045A4  6ED9               	movwf	fsr2l,c
  9105  0045A6  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9106  0045A8  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9107  0045AA  6EDA               	movwf	fsr2h,c
  9108  0045AC  0E02               	movlw	2
  9109  0045AE  18DE               	xorwf	postinc2,w,c
  9110  0045B0  A4D8               	btfss	status,2,c
  9111  0045B2  EFDD  F022         	goto	u11411
  9112  0045B6  EFDF  F022         	goto	u11410
  9113  0045BA                     u11411:
  9114  0045BA  EFE6  F022         	goto	l10066
  9115  0045BE                     u11410:
  9116  0045BE                     
  9117                           ; BSR set to: 0
  9118                           ;main.c: 699:             velocidadEstandar();
  9119  0045BE  ECF8  F029         	call	_velocidadEstandar	;wreg free
  9120  0045C2                     
  9121                           ;main.c: 700:             mouse.curr_state = DERECHA;
  9122  0045C2  0E03               	movlw	3
  9123  0045C4  0100               	movlb	0	; () banked
  9124  0045C6  6FFD               	movwf	_mouse& (0+255),b
  9125                           
  9126                           ;main.c: 701:         } else if (movimientos[i] == DERECHA) {
  9127  0045C8  EF07  F023         	goto	l10076
  9128  0045CC                     l10066:
  9129                           
  9130                           ; BSR set to: 0
  9131  0045CC  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9132  0045CE  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9133  0045D0  6ED9               	movwf	fsr2l,c
  9134  0045D2  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9135  0045D4  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9136  0045D6  6EDA               	movwf	fsr2h,c
  9137  0045D8  0E03               	movlw	3
  9138  0045DA  18DE               	xorwf	postinc2,w,c
  9139  0045DC  A4D8               	btfss	status,2,c
  9140  0045DE  EFF3  F022         	goto	u11421
  9141  0045E2  EFF5  F022         	goto	u11420
  9142  0045E6                     u11421:
  9143  0045E6  EFFC  F022         	goto	l10072
  9144  0045EA                     u11420:
  9145  0045EA                     
  9146                           ; BSR set to: 0
  9147                           ;main.c: 702:             velocidadEstandar();
  9148  0045EA  ECF8  F029         	call	_velocidadEstandar	;wreg free
  9149  0045EE                     
  9150                           ;main.c: 703:             mouse.curr_state = IZQUIERDA;
  9151  0045EE  0E02               	movlw	2
  9152  0045F0  0100               	movlb	0	; () banked
  9153  0045F2  6FFD               	movwf	_mouse& (0+255),b
  9154                           
  9155                           ;main.c: 704:         } else {
  9156  0045F4  EF07  F023         	goto	l10076
  9157  0045F8                     l10072:
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;main.c: 706:             PID();
  9161  0045F8  EC55  F016         	call	_PID	;wreg free
  9162  0045FC                     
  9163                           ;main.c: 707:             mouse.curr_state = movimientos[i];
  9164  0045FC  0100               	movlb	0	; () banked
  9165  0045FE  519E               	movf	regresarAlCruce@i& (0+255),w,b
  9166  004600  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  9167  004602  6ED9               	movwf	fsr2l,c
  9168  004604  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9169  004606  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  9170  004608  6EDA               	movwf	fsr2h,c
  9171  00460A  50DF               	movf	indf2,w,c
  9172  00460C  6FFD               	movwf	_mouse& (0+255),b
  9173  00460E                     l10076:
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;main.c: 710:         mover();
  9177  00460E  EC74  F024         	call	_mover	;wreg free
  9178  004612                     
  9179                           ;main.c: 711:     }
  9180  004612  0100               	movlb	0	; () banked
  9181  004614  079E               	decf	regresarAlCruce@i& (0+255),f,b
  9182  004616  A0D8               	btfss	status,0,c
  9183  004618  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  9184  00461A                     
  9185                           ; BSR set to: 0
  9186  00461A  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  9187  00461C  EF1A  F023         	goto	u11430
  9188  004620  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  9189  004622  E106               	bnz	u11431
  9190  004624  059E               	decf	regresarAlCruce@i& (0+255),w,b
  9191  004626  B0D8               	btfsc	status,0,c
  9192  004628  EF18  F023         	goto	u11431
  9193  00462C  EF1A  F023         	goto	u11430
  9194  004630                     u11431:
  9195  004630  EFD0  F022         	goto	l10060
  9196  004634                     u11430:
  9197  004634                     l477:
  9198                           
  9199                           ; BSR set to: 0
  9200  004634  0012               	return		;funcret
  9201  004636                     __end_of_regresarAlCruce:
  9202                           	opt callstack 0
  9203                           
  9204 ;; *************** function _recorrerCaminoEncontrado *****************
  9205 ;; Defined at:
  9206 ;;		line 714 in file "main.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  9209 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  9210 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  i               2   62[BANK0 ] int 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      void 
  9215 ;; Registers used:
  9216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9222 ;;      Params:         0       4       0       0       0       0       0       0       0
  9223 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9224 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9225 ;;      Totals:         1       6       0       0       0       0       0       0       0
  9226 ;;Total ram usage:        7 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:    6
  9229 ;; This function calls:
  9230 ;;		_PID
  9231 ;;		_mover
  9232 ;;		_velocidadEstandar
  9233 ;; This function is called by:
  9234 ;;		_comportamientoBasico
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text35
  9239  004A1A                     __ptext35:
  9240                           	opt callstack 0
  9241  004A1A                     _recorrerCaminoEncontrado:
  9242                           	opt callstack 23
  9243  004A1A                     
  9244                           ;main.c: 716:     for (T_INT i = 0; i < numMovimientos; i++) {
  9245  004A1A  0E00               	movlw	0
  9246  004A1C  0100               	movlb	0	; () banked
  9247  004A1E  6F9F               	movwf	(recorrerCaminoEncontrado@i+1)& (0+255),b
  9248  004A20  0E00               	movlw	0
  9249  004A22  6F9E               	movwf	recorrerCaminoEncontrado@i& (0+255),b
  9250  004A24  EF46  F025         	goto	l10130
  9251  004A28                     l10116:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;main.c: 718:         if (movimientos[i] == IZQUIERDA || movimientos[i] == DERECHA)
  9255  004A28  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9256  004A2A  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9257  004A2C  6ED9               	movwf	fsr2l,c
  9258  004A2E  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9259  004A30  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9260  004A32  6EDA               	movwf	fsr2h,c
  9261  004A34  0E02               	movlw	2
  9262  004A36  18DE               	xorwf	postinc2,w,c
  9263  004A38  B4D8               	btfsc	status,2,c
  9264  004A3A  EF21  F025         	goto	u11481
  9265  004A3E  EF23  F025         	goto	u11480
  9266  004A42                     u11481:
  9267  004A42  EF32  F025         	goto	l10120
  9268  004A46                     u11480:
  9269  004A46                     
  9270                           ; BSR set to: 0
  9271  004A46  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9272  004A48  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9273  004A4A  6ED9               	movwf	fsr2l,c
  9274  004A4C  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9275  004A4E  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9276  004A50  6EDA               	movwf	fsr2h,c
  9277  004A52  0E03               	movlw	3
  9278  004A54  18DE               	xorwf	postinc2,w,c
  9279  004A56  A4D8               	btfss	status,2,c
  9280  004A58  EF30  F025         	goto	u11491
  9281  004A5C  EF32  F025         	goto	u11490
  9282  004A60                     u11491:
  9283  004A60  EF36  F025         	goto	l10122
  9284  004A64                     u11490:
  9285  004A64                     l10120:
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;main.c: 719:             velocidadEstandar();
  9289  004A64  ECF8  F029         	call	_velocidadEstandar	;wreg free
  9290  004A68  EF38  F025         	goto	l10124
  9291  004A6C                     l10122:
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;main.c: 722:             PID();
  9295  004A6C  EC55  F016         	call	_PID	;wreg free
  9296  004A70                     l10124:
  9297                           
  9298                           ;main.c: 724:         mouse.curr_state = movimientos[i];
  9299  004A70  0100               	movlb	0	; () banked
  9300  004A72  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  9301  004A74  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  9302  004A76  6ED9               	movwf	fsr2l,c
  9303  004A78  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9304  004A7A  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  9305  004A7C  6EDA               	movwf	fsr2h,c
  9306  004A7E  50DF               	movf	indf2,w,c
  9307  004A80  6FFD               	movwf	_mouse& (0+255),b
  9308  004A82                     
  9309                           ; BSR set to: 0
  9310                           ;main.c: 725:         mover();
  9311  004A82  EC74  F024         	call	_mover	;wreg free
  9312  004A86                     
  9313                           ;main.c: 726:     }
  9314  004A86  0100               	movlb	0	; () banked
  9315  004A88  4B9E               	infsnz	recorrerCaminoEncontrado@i& (0+255),f,b
  9316  004A8A  2B9F               	incf	(recorrerCaminoEncontrado@i+1)& (0+255),f,b
  9317  004A8C                     l10130:
  9318                           
  9319                           ; BSR set to: 0
  9320  004A8C  519C               	movf	recorrerCaminoEncontrado@numMovimientos& (0+255),w,b
  9321  004A8E  5D9E               	subwf	recorrerCaminoEncontrado@i& (0+255),w,b
  9322  004A90  519D               	movf	(recorrerCaminoEncontrado@numMovimientos+1)& (0+255),w,b
  9323  004A92  599F               	subwfb	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  9324  004A94  A0D8               	btfss	status,0,c
  9325  004A96  EF4F  F025         	goto	u11501
  9326  004A9A  EF51  F025         	goto	u11500
  9327  004A9E                     u11501:
  9328  004A9E  EF14  F025         	goto	l10116
  9329  004AA2                     u11500:
  9330  004AA2                     
  9331                           ; BSR set to: 0
  9332  004AA2  0012               	return		;funcret
  9333  004AA4                     __end_of_recorrerCaminoEncontrado:
  9334                           	opt callstack 0
  9335                           
  9336 ;; *************** function _mover *****************
  9337 ;; Defined at:
  9338 ;;		line 617 in file "main.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, status,2, status,0, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9354 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9355 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9356 ;;Total ram usage:        2 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:    3
  9359 ;; This function calls:
  9360 ;;		_forzarAvanceRecto
  9361 ;; This function is called by:
  9362 ;;		_regresarPuntoPartida
  9363 ;;		_regresarAlCruce
  9364 ;;		_recorrerCaminoEncontrado
  9365 ;;		_probarGirosAuto
  9366 ;;		_probarPID
  9367 ;;		_probarCruceT
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           	psect	text36
  9372  0048E8                     __ptext36:
  9373                           	opt callstack 0
  9374  0048E8                     _mover:
  9375                           	opt callstack 25
  9376  0048E8                     
  9377                           ;main.c: 619:     switch (mouse.curr_state) {
  9378  0048E8  EFA3  F024         	goto	l9528
  9379  0048EC                     l453:
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;main.c: 623:             LATB4 = 1;
  9383  0048EC  888A               	bsf	3978,4,c	;volatile
  9384                           
  9385                           ;main.c: 624:             LATB5 = 0;
  9386  0048EE  9A8A               	bcf	3978,5,c	;volatile
  9387                           
  9388                           ;main.c: 625:             LATB6 = 1;
  9389  0048F0  8C8A               	bsf	3978,6,c	;volatile
  9390                           
  9391                           ;main.c: 628:             if (!0)
  9392  0048F2  9E8A               	bcf	3978,7,c	;volatile
  9393  0048F4                     
  9394                           ; BSR set to: 0
  9395                           ;main.c: 629:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  9396  0048F4  0E48               	movlw	72
  9397  0048F6  6E08               	movwf	??_mover^0,c
  9398  0048F8  0E6C               	movlw	108
  9399  0048FA                     u11887:
  9400  0048FA  2EE8               	decfsz	wreg,f,c
  9401  0048FC  D7FE               	bra	u11887
  9402  0048FE  2E08               	decfsz	??_mover^0,f,c
  9403  004900  D7FC               	bra	u11887
  9404  004902  D000               	nop2	
  9405  004904  EFC1  F024         	goto	l459
  9406  004908                     l456:
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;main.c: 635:             LATB4 = 0;
  9410  004908  988A               	bcf	3978,4,c	;volatile
  9411                           
  9412                           ;main.c: 636:             LATB5 = 0;
  9413  00490A  9A8A               	bcf	3978,5,c	;volatile
  9414                           
  9415                           ;main.c: 637:             LATB6 = 1;
  9416  00490C  8C8A               	bsf	3978,6,c	;volatile
  9417                           
  9418                           ;main.c: 638:             LATB7 = 0;
  9419  00490E  9E8A               	bcf	3978,7,c	;volatile
  9420  004910                     l9518:
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;main.c: 640:             _delay((unsigned long)((410)*(4000000/4000.0)));
  9424  004910  0E03               	movlw	3
  9425  004912  6E09               	movwf	(??_mover+1)^0,c
  9426  004914  0E15               	movlw	21
  9427  004916  6E08               	movwf	??_mover^0,c
  9428  004918  0E74               	movlw	116
  9429  00491A                     u11897:
  9430  00491A  2EE8               	decfsz	wreg,f,c
  9431  00491C  D7FE               	bra	u11897
  9432  00491E  2E08               	decfsz	??_mover^0,f,c
  9433  004920  D7FC               	bra	u11897
  9434  004922  2E09               	decfsz	(??_mover+1)^0,f,c
  9435  004924  D7FA               	bra	u11897
  9436  004926                     
  9437                           ;main.c: 642:             forzarAvanceRecto();
  9438  004926  EC0B  F02A         	call	_forzarAvanceRecto	;wreg free
  9439                           
  9440                           ;main.c: 644:             break;
  9441  00492A  EFC1  F024         	goto	l459
  9442  00492E                     l457:
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;main.c: 648:             LATB4 = 1;
  9446  00492E  888A               	bsf	3978,4,c	;volatile
  9447                           
  9448                           ;main.c: 649:             LATB5 = 0;
  9449  004930  9A8A               	bcf	3978,5,c	;volatile
  9450                           
  9451                           ;main.c: 650:             LATB6 = 0;
  9452  004932  9C8A               	bcf	3978,6,c	;volatile
  9453                           
  9454                           ;main.c: 651:             LATB7 = 0;
  9455  004934  9E8A               	bcf	3978,7,c	;volatile
  9456  004936  EF88  F024         	goto	l9518
  9457  00493A                     l458:
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;main.c: 661:             LATB4 = 0;
  9461  00493A  988A               	bcf	3978,4,c	;volatile
  9462                           
  9463                           ;main.c: 662:             LATB5 = 0;
  9464  00493C  9A8A               	bcf	3978,5,c	;volatile
  9465                           
  9466                           ;main.c: 663:             LATB6 = 0;
  9467  00493E  9C8A               	bcf	3978,6,c	;volatile
  9468                           
  9469                           ;main.c: 664:             LATB7 = 0;
  9470  004940  9E8A               	bcf	3978,7,c	;volatile
  9471                           
  9472                           ;main.c: 666:             break;
  9473  004942  EFC1  F024         	goto	l459
  9474  004946                     l9528:
  9475  004946  0100               	movlb	0	; () banked
  9476  004948  51FD               	movf	_mouse& (0+255),w,b
  9477  00494A  6E08               	movwf	??_mover^0,c
  9478  00494C  6A09               	clrf	(??_mover+1)^0,c
  9479                           
  9480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9481                           ; Switch size 1, requested type "simple"
  9482                           ; Number of cases is 1, Range of values is 0 to 0
  9483                           ; switch strategies available:
  9484                           ; Name         Instructions Cycles
  9485                           ; simple_byte            4     3 (average)
  9486                           ;	Chosen strategy is simple_byte
  9487  00494E  5009               	movf	(??_mover+1)^0,w,c
  9488  004950  0A00               	xorlw	0	; case 0
  9489  004952  B4D8               	btfsc	status,2,c
  9490  004954  EFAE  F024         	goto	l10880
  9491  004958  EFC1  F024         	goto	l459
  9492  00495C                     l10880:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ; Switch size 1, requested type "simple"
  9496                           ; Number of cases is 4, Range of values is 1 to 4
  9497                           ; switch strategies available:
  9498                           ; Name         Instructions Cycles
  9499                           ; simple_byte           13     7 (average)
  9500                           ;	Chosen strategy is simple_byte
  9501  00495C  5008               	movf	??_mover^0,w,c
  9502  00495E  0A01               	xorlw	1	; case 1
  9503  004960  B4D8               	btfsc	status,2,c
  9504  004962  EF76  F024         	goto	l453
  9505  004966  0A03               	xorlw	3	; case 2
  9506  004968  B4D8               	btfsc	status,2,c
  9507  00496A  EF84  F024         	goto	l456
  9508  00496E  0A01               	xorlw	1	; case 3
  9509  004970  B4D8               	btfsc	status,2,c
  9510  004972  EF97  F024         	goto	l457
  9511  004976  0A07               	xorlw	7	; case 4
  9512  004978  B4D8               	btfsc	status,2,c
  9513  00497A  EF9D  F024         	goto	l458
  9514  00497E  EFC1  F024         	goto	l459
  9515  004982                     l459:
  9516  004982  0012               	return		;funcret
  9517  004984                     __end_of_mover:
  9518                           	opt callstack 0
  9519                           
  9520 ;; *************** function _PID *****************
  9521 ;; Defined at:
  9522 ;;		line 1202 in file "main.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;		None
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  error           2   56[BANK0 ] int 
  9527 ;;  dif             2   54[BANK0 ] int 
  9528 ;;  velocidadDer    2   50[BANK0 ] int 
  9529 ;;  velocidadIzq    2   46[BANK0 ] int 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9539 ;;      Params:         0       0       0       0       0       0       0       0       0
  9540 ;;      Locals:         0      16       0       0       0       0       0       0       0
  9541 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9542 ;;      Totals:         0      18       0       0       0       0       0       0       0
  9543 ;;Total ram usage:       18 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:    5
  9546 ;; This function calls:
  9547 ;;		___fladd
  9548 ;;		___flmul
  9549 ;;		___flsub
  9550 ;;		___fltol
  9551 ;;		___xxtofl
  9552 ;;		_pwmDuty
  9553 ;;		_roundf
  9554 ;; This function is called by:
  9555 ;;		_comportamientoBasico
  9556 ;;		_regresarPuntoPartida
  9557 ;;		_regresarAlCruce
  9558 ;;		_recorrerCaminoEncontrado
  9559 ;;		_probarPID
  9560 ;;		_probarCruceT
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text37
  9565  002CAA                     __ptext37:
  9566                           	opt callstack 0
  9567  002CAA                     _PID:
  9568                           	opt callstack 23
  9569  002CAA                     
  9570                           ;main.c: 1205:     T_INT error = 0;
  9571  002CAA  0E00               	movlw	0
  9572  002CAC  0100               	movlb	0	; () banked
  9573  002CAE  6F99               	movwf	(PID@error+1)& (0+255),b
  9574  002CB0  0E00               	movlw	0
  9575  002CB2  6F98               	movwf	PID@error& (0+255),b
  9576  002CB4                     
  9577                           ; BSR set to: 0
  9578                           ;main.c: 1206:     static T_INT difAnt = 0;;main.c: 1209:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  9579  002CB4  C0F9  F048         	movff	_sensorDerecha,___flsub@a
  9580  002CB8  C0FA  F049         	movff	_sensorDerecha+1,___flsub@a+1
  9581  002CBC  C0FB  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  9582  002CC0  C0FC  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  9583  002CC4  C055  F044         	movff	_sensorIzquierda,___flsub@b
  9584  002CC8  C056  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  9585  002CCC  C057  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  9586  002CD0  C058  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  9587  002CD4  EC81  F028         	call	___flsub	;wreg free
  9588  002CD8  C044  F072         	movff	?___flsub,___fltol@f1
  9589  002CDC  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  9590  002CE0  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  9591  002CE4  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  9592  002CE8  EC3C  F01F         	call	___fltol	;wreg free
  9593  002CEC  C072  F096         	movff	?___fltol,PID@dif
  9594  002CF0  C073  F097         	movff	?___fltol+1,PID@dif+1
  9595  002CF4                     
  9596                           ;main.c: 1211:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  9597  002CF4  0ECD               	movlw	205
  9598  002CF6  6E1F               	movwf	___flmul@a^0,c
  9599  002CF8  0ECC               	movlw	204
  9600  002CFA  6E20               	movwf	(___flmul@a+1)^0,c
  9601  002CFC  0ECC               	movlw	204
  9602  002CFE  6E21               	movwf	(___flmul@a+2)^0,c
  9603  002D00  0E3D               	movlw	61
  9604  002D02  6E22               	movwf	(___flmul@a+3)^0,c
  9605  002D04  0100               	movlb	0	; () banked
  9606  002D06  5196               	movf	PID@dif& (0+255),w,b
  9607  002D08  0101               	movlb	1	; () banked
  9608  002D0A  5D30               	subwf	PID@difAnt& (0+255),w,b
  9609  002D0C  0100               	movlb	0	; () banked
  9610  002D0E  6F88               	movwf	??_PID& (0+255),b
  9611  002D10  5197               	movf	(PID@dif+1)& (0+255),w,b
  9612  002D12  0101               	movlb	1	; () banked
  9613  002D14  5931               	subwfb	(PID@difAnt+1)& (0+255),w,b
  9614  002D16  0100               	movlb	0	; () banked
  9615  002D18  6F89               	movwf	(??_PID+1)& (0+255),b
  9616  002D1A  C088  F00D         	movff	??_PID,___xxtofl@val
  9617  002D1E  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  9618  002D22  0E00               	movlw	0
  9619  002D24  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9620  002D26  0EFF               	movlw	-1
  9621  002D28  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9622  002D2A  6E10               	movwf	(___xxtofl@val+3)^0,c
  9623  002D2C  0E01               	movlw	1
  9624  002D2E  EC67  F019         	call	___xxtofl
  9625  002D32  C00D  F01B         	movff	?___xxtofl,___flmul@b
  9626  002D36  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  9627  002D3A  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  9628  002D3E  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  9629  002D42  EC28  F00F         	call	___flmul	;wreg free
  9630  002D46  C01B  F038         	movff	?___flmul,___fladd@a
  9631  002D4A  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  9632  002D4E  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  9633  002D52  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  9634  002D56  0E66               	movlw	102
  9635  002D58  6E1F               	movwf	___flmul@a^0,c
  9636  002D5A  0E66               	movlw	102
  9637  002D5C  6E20               	movwf	(___flmul@a+1)^0,c
  9638  002D5E  0E66               	movlw	102
  9639  002D60  6E21               	movwf	(___flmul@a+2)^0,c
  9640  002D62  0E3F               	movlw	63
  9641  002D64  6E22               	movwf	(___flmul@a+3)^0,c
  9642  002D66  C096  F00D         	movff	PID@dif,___xxtofl@val
  9643  002D6A  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  9644  002D6E  0E00               	movlw	0
  9645  002D70  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  9646  002D72  0EFF               	movlw	-1
  9647  002D74  6E0F               	movwf	(___xxtofl@val+2)^0,c
  9648  002D76  6E10               	movwf	(___xxtofl@val+3)^0,c
  9649  002D78  0E01               	movlw	1
  9650  002D7A  EC67  F019         	call	___xxtofl
  9651  002D7E  C00D  F01B         	movff	?___xxtofl,___flmul@b
  9652  002D82  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  9653  002D86  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  9654  002D8A  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  9655  002D8E  EC28  F00F         	call	___flmul	;wreg free
  9656  002D92  C01B  F034         	movff	?___flmul,___fladd@b
  9657  002D96  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  9658  002D9A  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  9659  002D9E  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  9660  002DA2  EC87  F008         	call	___fladd	;wreg free
  9661  002DA6  C034  F08A         	movff	?___fladd,_PID$1818
  9662  002DAA  C035  F08B         	movff	?___fladd+1,_PID$1818+1
  9663  002DAE  C036  F08C         	movff	?___fladd+2,_PID$1818+2
  9664  002DB2  C037  F08D         	movff	?___fladd+3,_PID$1818+3
  9665  002DB6                     
  9666                           ;main.c: 1211:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  9667  002DB6  C08A  F04C         	movff	_PID$1818,roundf@x
  9668  002DBA  C08B  F04D         	movff	_PID$1818+1,roundf@x+1
  9669  002DBE  C08C  F04E         	movff	_PID$1818+2,roundf@x+2
  9670  002DC2  C08D  F04F         	movff	_PID$1818+3,roundf@x+3
  9671  002DC6  EC3D  F011         	call	_roundf	;wreg free
  9672  002DCA  C04C  F072         	movff	?_roundf,___fltol@f1
  9673  002DCE  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  9674  002DD2  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  9675  002DD6  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  9676  002DDA  EC3C  F01F         	call	___fltol	;wreg free
  9677  002DDE  C072  F098         	movff	?___fltol,PID@error
  9678  002DE2  C073  F099         	movff	?___fltol+1,PID@error+1
  9679  002DE6                     
  9680                           ;main.c: 1213:     difAnt = dif;
  9681  002DE6  C096  F130         	movff	PID@dif,PID@difAnt
  9682  002DEA  C097  F131         	movff	PID@dif+1,PID@difAnt+1
  9683  002DEE                     
  9684                           ;main.c: 1215:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  9685  002DEE  0E64               	movlw	100
  9686  002DF0  0100               	movlb	0	; () banked
  9687  002DF2  6F88               	movwf	??_PID& (0+255),b
  9688  002DF4  0E00               	movlw	0
  9689  002DF6  6F89               	movwf	(??_PID+1)& (0+255),b
  9690  002DF8  5198               	movf	PID@error& (0+255),w,b
  9691  002DFA  5D88               	subwf	??_PID& (0+255),w,b
  9692  002DFC  5199               	movf	(PID@error+1)& (0+255),w,b
  9693  002DFE  5989               	subwfb	(??_PID+1)& (0+255),w,b
  9694  002E00  0B80               	andlw	128
  9695  002E02  A4D8               	btfss	status,2,c
  9696  002E04  EF06  F017         	goto	u10971
  9697  002E08  EF08  F017         	goto	u10970
  9698  002E0C                     u10971:
  9699  002E0C  EF32  F017         	goto	l9576
  9700  002E10                     u10970:
  9701  002E10                     
  9702                           ; BSR set to: 0
  9703  002E10  0E64               	movlw	100
  9704  002E12  6F88               	movwf	??_PID& (0+255),b
  9705  002E14  0E00               	movlw	0
  9706  002E16  6F89               	movwf	(??_PID+1)& (0+255),b
  9707  002E18  5198               	movf	PID@error& (0+255),w,b
  9708  002E1A  5F88               	subwf	??_PID& (0+255),f,b
  9709  002E1C  5199               	movf	(PID@error+1)& (0+255),w,b
  9710  002E1E  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  9711  002E20  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  9712  002E22  EF1E  F017         	goto	u10980
  9713  002E26  5189               	movf	(??_PID+1)& (0+255),w,b
  9714  002E28  E107               	bnz	u10981
  9715  002E2A  0E65               	movlw	101
  9716  002E2C  5D88               	subwf	??_PID& (0+255),w,b
  9717  002E2E  B0D8               	btfsc	status,0,c
  9718  002E30  EF1C  F017         	goto	u10981
  9719  002E34  EF1E  F017         	goto	u10980
  9720  002E38                     u10981:
  9721  002E38  EF28  F017         	goto	l9572
  9722  002E3C                     u10980:
  9723  002E3C                     
  9724                           ; BSR set to: 0
  9725  002E3C  5198               	movf	PID@error& (0+255),w,b
  9726  002E3E  0864               	sublw	100
  9727  002E40  6F90               	movwf	_PID$748& (0+255),b
  9728  002E42  5199               	movf	(PID@error+1)& (0+255),w,b
  9729  002E44  A0D8               	btfss	status,0,c
  9730  002E46  2AE8               	incf	wreg,f,c
  9731  002E48  0800               	sublw	0
  9732  002E4A  6F91               	movwf	(_PID$748+1)& (0+255),b
  9733  002E4C  EF2C  F017         	goto	l9574
  9734  002E50                     l9572:
  9735                           
  9736                           ; BSR set to: 0
  9737  002E50  0E00               	movlw	0
  9738  002E52  6F91               	movwf	(_PID$748+1)& (0+255),b
  9739  002E54  0E64               	movlw	100
  9740  002E56  6F90               	movwf	_PID$748& (0+255),b
  9741  002E58                     l9574:
  9742                           
  9743                           ; BSR set to: 0
  9744  002E58  C090  F08E         	movff	_PID$748,PID@velocidadIzquierda
  9745  002E5C  C091  F08F         	movff	_PID$748+1,PID@velocidadIzquierda+1
  9746  002E60  EF36  F017         	goto	l9578
  9747  002E64                     l9576:
  9748                           
  9749                           ; BSR set to: 0
  9750  002E64  0E00               	movlw	0
  9751  002E66  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  9752  002E68  0E00               	movlw	0
  9753  002E6A  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  9754  002E6C                     l9578:
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;main.c: 1216:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  9758  002E6C  0E64               	movlw	100
  9759  002E6E  2598               	addwf	PID@error& (0+255),w,b
  9760  002E70  0E00               	movlw	0
  9761  002E72  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9762  002E74  0B80               	andlw	128
  9763  002E76  A4D8               	btfss	status,2,c
  9764  002E78  EF40  F017         	goto	u10991
  9765  002E7C  EF42  F017         	goto	u10990
  9766  002E80                     u10991:
  9767  002E80  EF68  F017         	goto	l9588
  9768  002E84                     u10990:
  9769  002E84                     
  9770                           ; BSR set to: 0
  9771  002E84  0E64               	movlw	100
  9772  002E86  2598               	addwf	PID@error& (0+255),w,b
  9773  002E88  6F88               	movwf	??_PID& (0+255),b
  9774  002E8A  0E00               	movlw	0
  9775  002E8C  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9776  002E8E  6F89               	movwf	(??_PID+1)& (0+255),b
  9777  002E90  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  9778  002E92  EF56  F017         	goto	u11000
  9779  002E96  5189               	movf	(??_PID+1)& (0+255),w,b
  9780  002E98  E107               	bnz	u11001
  9781  002E9A  0E65               	movlw	101
  9782  002E9C  5D88               	subwf	??_PID& (0+255),w,b
  9783  002E9E  B0D8               	btfsc	status,0,c
  9784  002EA0  EF54  F017         	goto	u11001
  9785  002EA4  EF56  F017         	goto	u11000
  9786  002EA8                     u11001:
  9787  002EA8  EF5E  F017         	goto	l9584
  9788  002EAC                     u11000:
  9789  002EAC                     
  9790                           ; BSR set to: 0
  9791  002EAC  0E64               	movlw	100
  9792  002EAE  2598               	addwf	PID@error& (0+255),w,b
  9793  002EB0  6F94               	movwf	_PID$750& (0+255),b
  9794  002EB2  0E00               	movlw	0
  9795  002EB4  2199               	addwfc	(PID@error+1)& (0+255),w,b
  9796  002EB6  6F95               	movwf	(_PID$750+1)& (0+255),b
  9797  002EB8  EF62  F017         	goto	l9586
  9798  002EBC                     l9584:
  9799                           
  9800                           ; BSR set to: 0
  9801  002EBC  0E00               	movlw	0
  9802  002EBE  6F95               	movwf	(_PID$750+1)& (0+255),b
  9803  002EC0  0E64               	movlw	100
  9804  002EC2  6F94               	movwf	_PID$750& (0+255),b
  9805  002EC4                     l9586:
  9806                           
  9807                           ; BSR set to: 0
  9808  002EC4  C094  F092         	movff	_PID$750,PID@velocidadDerecha
  9809  002EC8  C095  F093         	movff	_PID$750+1,PID@velocidadDerecha+1
  9810  002ECC  EF6C  F017         	goto	l9590
  9811  002ED0                     l9588:
  9812                           
  9813                           ; BSR set to: 0
  9814  002ED0  0E00               	movlw	0
  9815  002ED2  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  9816  002ED4  0E00               	movlw	0
  9817  002ED6  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  9818  002ED8                     l9590:
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;main.c: 1218:     pwmDuty(velocidadIzquierda, 1);
  9822  002ED8  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  9823  002EDC  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  9824  002EE0  0E01               	movlw	1
  9825  002EE2  6F7E               	movwf	pwmDuty@channel& (0+255),b
  9826  002EE4  EC89  F018         	call	_pwmDuty	;wreg free
  9827  002EE8                     
  9828                           ;main.c: 1219:     pwmDuty(velocidadDerecha, 2);
  9829  002EE8  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  9830  002EEC  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  9831  002EF0  0E02               	movlw	2
  9832  002EF2  0100               	movlb	0	; () banked
  9833  002EF4  6F7E               	movwf	pwmDuty@channel& (0+255),b
  9834  002EF6  EC89  F018         	call	_pwmDuty	;wreg free
  9835  002EFA  0012               	return		;funcret
  9836  002EFC                     __end_of_PID:
  9837                           	opt callstack 0
  9838                           
  9839 ;; *************** function _roundf *****************
  9840 ;; Defined at:
  9841 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;  x               4   75[COMRAM] float 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  y               4   14[BANK0 ] float 
  9846 ;;  u               4   10[BANK0 ] struct .
  9847 ;;  e               2    4[BANK0 ] int 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  4   75[COMRAM] float 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9857 ;;      Params:         4       0       0       0       0       0       0       0       0
  9858 ;;      Locals:         0      18       0       0       0       0       0       0       0
  9859 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9860 ;;      Totals:         8      18       0       0       0       0       0       0       0
  9861 ;;Total ram usage:       26 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    4
  9864 ;; This function calls:
  9865 ;;		___fladd
  9866 ;;		___flge
  9867 ;;		___flmul
  9868 ;;		___flneg
  9869 ;;		___flsub
  9870 ;; This function is called by:
  9871 ;;		_PID
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text38
  9876  00227A                     __ptext38:
  9877                           	opt callstack 0
  9878  00227A                     _roundf:
  9879                           	opt callstack 23
  9880  00227A  C100  F06A         	movff	roundf@F525,roundf@u
  9881  00227E  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  9882  002282  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  9883  002286  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  9884  00228A  C04C  F06A         	movff	roundf@x,roundf@u
  9885  00228E  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  9886  002292  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  9887  002296  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  9888  00229A  C06A  F050         	movff	roundf@u,??_roundf
  9889  00229E  C06B  F051         	movff	roundf@u+1,??_roundf+1
  9890  0022A2  C06C  F052         	movff	roundf@u+2,??_roundf+2
  9891  0022A6  C06D  F053         	movff	roundf@u+3,??_roundf+3
  9892  0022AA  0E18               	movlw	24
  9893  0022AC  EF5D  F011         	goto	u10560
  9894  0022B0                     u10565:
  9895  0022B0  90D8               	bcf	status,0,c
  9896  0022B2  3253               	rrcf	(??_roundf+3)^0,f,c
  9897  0022B4  3252               	rrcf	(??_roundf+2)^0,f,c
  9898  0022B6  3251               	rrcf	(??_roundf+1)^0,f,c
  9899  0022B8  3250               	rrcf	??_roundf^0,f,c
  9900  0022BA                     u10560:
  9901  0022BA  2EE8               	decfsz	wreg,f,c
  9902  0022BC  EF58  F011         	goto	u10565
  9903  0022C0  5050               	movf	??_roundf^0,w,c
  9904  0022C2  0100               	movlb	0	; () banked
  9905  0022C4  6F64               	movwf	roundf@e& (0+255),b
  9906  0022C6  6B65               	clrf	(roundf@e+1)& (0+255),b
  9907  0022C8  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  9908  0022CA  EF70  F011         	goto	u10571
  9909  0022CE  5165               	movf	(roundf@e+1)& (0+255),w,b
  9910  0022D0  E109               	bnz	u10570
  9911  0022D2  0E96               	movlw	150
  9912  0022D4  5D64               	subwf	roundf@e& (0+255),w,b
  9913  0022D6  A0D8               	btfss	status,0,c
  9914  0022D8  EF70  F011         	goto	u10571
  9915  0022DC  EF72  F011         	goto	u10570
  9916  0022E0                     u10571:
  9917  0022E0  EF7C  F011         	goto	l9328
  9918  0022E4                     u10570:
  9919  0022E4                     
  9920                           ; BSR set to: 0
  9921  0022E4  C04C  F04C         	movff	roundf@x,?_roundf
  9922  0022E8  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  9923  0022EC  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  9924  0022F0  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  9925  0022F4  EF15  F013         	goto	l1731
  9926  0022F8                     l9328:
  9927                           
  9928                           ; BSR set to: 0
  9929  0022F8  C06A  F050         	movff	roundf@u,??_roundf
  9930  0022FC  C06B  F051         	movff	roundf@u+1,??_roundf+1
  9931  002300  C06C  F052         	movff	roundf@u+2,??_roundf+2
  9932  002304  C06D  F053         	movff	roundf@u+3,??_roundf+3
  9933  002308  0E20               	movlw	32
  9934  00230A  EF8C  F011         	goto	u10580
  9935  00230E                     u10585:
  9936  00230E  90D8               	bcf	status,0,c
  9937  002310  3253               	rrcf	(??_roundf+3)^0,f,c
  9938  002312  3252               	rrcf	(??_roundf+2)^0,f,c
  9939  002314  3251               	rrcf	(??_roundf+1)^0,f,c
  9940  002316  3250               	rrcf	??_roundf^0,f,c
  9941  002318                     u10580:
  9942  002318  2EE8               	decfsz	wreg,f,c
  9943  00231A  EF87  F011         	goto	u10585
  9944  00231E  5050               	movf	??_roundf^0,w,c
  9945  002320  1051               	iorwf	(??_roundf+1)^0,w,c
  9946  002322  1052               	iorwf	(??_roundf+2)^0,w,c
  9947  002324  1053               	iorwf	(??_roundf+3)^0,w,c
  9948  002326  B4D8               	btfsc	status,2,c
  9949  002328  EF98  F011         	goto	u10591
  9950  00232C  EF9A  F011         	goto	u10590
  9951  002330                     u10591:
  9952  002330  EFAC  F011         	goto	l9332
  9953  002334                     u10590:
  9954  002334                     
  9955                           ; BSR set to: 0
  9956  002334  C04C  F006         	movff	roundf@x,___flneg@f1
  9957  002338  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  9958  00233C  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  9959  002340  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  9960  002344  EC84  F029         	call	___flneg	;wreg free
  9961  002348  C006  F04C         	movff	?___flneg,roundf@x
  9962  00234C  C007  F04D         	movff	?___flneg+1,roundf@x+1
  9963  002350  C008  F04E         	movff	?___flneg+2,roundf@x+2
  9964  002354  C009  F04F         	movff	?___flneg+3,roundf@x+3
  9965  002358                     l9332:
  9966  002358  0100               	movlb	0	; () banked
  9967  00235A  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  9968  00235C  EFBB  F011         	goto	u10600
  9969  002360  5165               	movf	(roundf@e+1)& (0+255),w,b
  9970  002362  E107               	bnz	u10601
  9971  002364  0E7E               	movlw	126
  9972  002366  5D64               	subwf	roundf@e& (0+255),w,b
  9973  002368  B0D8               	btfsc	status,0,c
  9974  00236A  EFB9  F011         	goto	u10601
  9975  00236E  EFBB  F011         	goto	u10600
  9976  002372                     u10601:
  9977  002372  EFD7  F011         	goto	l9338
  9978  002376                     u10600:
  9979  002376                     
  9980                           ; BSR set to: 0
  9981  002376  C06A  F01B         	movff	roundf@u,___flmul@b
  9982  00237A  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  9983  00237E  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  9984  002382  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  9985  002386  0E00               	movlw	0
  9986  002388  6E1F               	movwf	___flmul@a^0,c
  9987  00238A  0E00               	movlw	0
  9988  00238C  6E20               	movwf	(___flmul@a+1)^0,c
  9989  00238E  0E00               	movlw	0
  9990  002390  6E21               	movwf	(___flmul@a+2)^0,c
  9991  002392  0E00               	movlw	0
  9992  002394  6E22               	movwf	(___flmul@a+3)^0,c
  9993  002396  EC28  F00F         	call	___flmul	;wreg free
  9994  00239A  C01B  F04C         	movff	?___flmul,?_roundf
  9995  00239E  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  9996  0023A2  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  9997  0023A6  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  9998  0023AA  EF15  F013         	goto	l1731
  9999  0023AE                     l9338:
 10000                           
 10001                           ; BSR set to: 0
 10002  0023AE  0E00               	movlw	0
 10003  0023B0  6E38               	movwf	___fladd@a^0,c
 10004  0023B2  0E00               	movlw	0
 10005  0023B4  6E39               	movwf	(___fladd@a+1)^0,c
 10006  0023B6  0E00               	movlw	0
 10007  0023B8  6E3A               	movwf	(___fladd@a+2)^0,c
 10008  0023BA  0E4B               	movlw	75
 10009  0023BC  6E3B               	movwf	(___fladd@a+3)^0,c
 10010  0023BE  C04C  F034         	movff	roundf@x,___fladd@b
 10011  0023C2  C04D  F035         	movff	roundf@x+1,___fladd@b+1
 10012  0023C6  C04E  F036         	movff	roundf@x+2,___fladd@b+2
 10013  0023CA  C04F  F037         	movff	roundf@x+3,___fladd@b+3
 10014  0023CE  EC87  F008         	call	___fladd	;wreg free
 10015  0023D2  C034  F066         	movff	?___fladd,_roundf$1819
 10016  0023D6  C035  F067         	movff	?___fladd+1,_roundf$1819+1
 10017  0023DA  C036  F068         	movff	?___fladd+2,_roundf$1819+2
 10018  0023DE  C037  F069         	movff	?___fladd+3,_roundf$1819+3
 10019  0023E2  0E00               	movlw	0
 10020  0023E4  6E38               	movwf	___fladd@a^0,c
 10021  0023E6  0E00               	movlw	0
 10022  0023E8  6E39               	movwf	(___fladd@a+1)^0,c
 10023  0023EA  0E00               	movlw	0
 10024  0023EC  6E3A               	movwf	(___fladd@a+2)^0,c
 10025  0023EE  0ECB               	movlw	203
 10026  0023F0  6E3B               	movwf	(___fladd@a+3)^0,c
 10027  0023F2  C066  F034         	movff	_roundf$1819,___fladd@b
 10028  0023F6  C067  F035         	movff	_roundf$1819+1,___fladd@b+1
 10029  0023FA  C068  F036         	movff	_roundf$1819+2,___fladd@b+2
 10030  0023FE  C069  F037         	movff	_roundf$1819+3,___fladd@b+3
 10031  002402  EC87  F008         	call	___fladd	;wreg free
 10032  002406  C034  F060         	movff	?___fladd,_roundf$1820
 10033  00240A  C035  F061         	movff	?___fladd+1,_roundf$1820+1
 10034  00240E  C036  F062         	movff	?___fladd+2,_roundf$1820+2
 10035  002412  C037  F063         	movff	?___fladd+3,_roundf$1820+3
 10036  002416  C060  F044         	movff	_roundf$1820,___flsub@b
 10037  00241A  C061  F045         	movff	_roundf$1820+1,___flsub@b+1
 10038  00241E  C062  F046         	movff	_roundf$1820+2,___flsub@b+2
 10039  002422  C063  F047         	movff	_roundf$1820+3,___flsub@b+3
 10040  002426  C04C  F048         	movff	roundf@x,___flsub@a
 10041  00242A  C04D  F049         	movff	roundf@x+1,___flsub@a+1
 10042  00242E  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
 10043  002432  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
 10044  002436  EC81  F028         	call	___flsub	;wreg free
 10045  00243A  C044  F06E         	movff	?___flsub,roundf@y
 10046  00243E  C045  F06F         	movff	?___flsub+1,roundf@y+1
 10047  002442  C046  F070         	movff	?___flsub+2,roundf@y+2
 10048  002446  C047  F071         	movff	?___flsub+3,roundf@y+3
 10049  00244A  0E00               	movlw	0
 10050  00244C  6E34               	movwf	___flge@ff1^0,c
 10051  00244E  0E00               	movlw	0
 10052  002450  6E35               	movwf	(___flge@ff1+1)^0,c
 10053  002452  0E00               	movlw	0
 10054  002454  6E36               	movwf	(___flge@ff1+2)^0,c
 10055  002456  0E3F               	movlw	63
 10056  002458  6E37               	movwf	(___flge@ff1+3)^0,c
 10057  00245A  C06E  F038         	movff	roundf@y,___flge@ff2
 10058  00245E  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
 10059  002462  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
 10060  002466  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
 10061  00246A  ECC0  F01F         	call	___flge	;wreg free
 10062  00246E  B0D8               	btfsc	status,0,c
 10063  002470  EF3C  F012         	goto	u10611
 10064  002474  EF3E  F012         	goto	u10610
 10065  002478                     u10611:
 10066  002478  EF74  F012         	goto	l9342
 10067  00247C                     u10610:
 10068  00247C  C04C  F038         	movff	roundf@x,___fladd@a
 10069  002480  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10070  002484  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10071  002488  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10072  00248C  C06E  F034         	movff	roundf@y,___fladd@b
 10073  002490  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10074  002494  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10075  002498  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10076  00249C  EC87  F008         	call	___fladd	;wreg free
 10077  0024A0  C034  F066         	movff	?___fladd,_roundf$1819
 10078  0024A4  C035  F067         	movff	?___fladd+1,_roundf$1819+1
 10079  0024A8  C036  F068         	movff	?___fladd+2,_roundf$1819+2
 10080  0024AC  C037  F069         	movff	?___fladd+3,_roundf$1819+3
 10081  0024B0  C066  F034         	movff	_roundf$1819,___fladd@b
 10082  0024B4  C067  F035         	movff	_roundf$1819+1,___fladd@b+1
 10083  0024B8  C068  F036         	movff	_roundf$1819+2,___fladd@b+2
 10084  0024BC  C069  F037         	movff	_roundf$1819+3,___fladd@b+3
 10085  0024C0  0E00               	movlw	0
 10086  0024C2  6E38               	movwf	___fladd@a^0,c
 10087  0024C4  0E00               	movlw	0
 10088  0024C6  6E39               	movwf	(___fladd@a+1)^0,c
 10089  0024C8  0E80               	movlw	128
 10090  0024CA  6E3A               	movwf	(___fladd@a+2)^0,c
 10091  0024CC  0EBF               	movlw	191
 10092  0024CE  6E3B               	movwf	(___fladd@a+3)^0,c
 10093  0024D0  EC87  F008         	call	___fladd	;wreg free
 10094  0024D4  C034  F06E         	movff	?___fladd,roundf@y
 10095  0024D8  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10096  0024DC  C036  F070         	movff	?___fladd+2,roundf@y+2
 10097  0024E0  C037  F071         	movff	?___fladd+3,roundf@y+3
 10098  0024E4  EFDD  F012         	goto	l9348
 10099  0024E8                     l9342:
 10100  0024E8  0E00               	movlw	0
 10101  0024EA  6E34               	movwf	___flge@ff1^0,c
 10102  0024EC  0E00               	movlw	0
 10103  0024EE  6E35               	movwf	(___flge@ff1+1)^0,c
 10104  0024F0  0E00               	movlw	0
 10105  0024F2  6E36               	movwf	(___flge@ff1+2)^0,c
 10106  0024F4  0EBF               	movlw	191
 10107  0024F6  6E37               	movwf	(___flge@ff1+3)^0,c
 10108  0024F8  C06E  F038         	movff	roundf@y,___flge@ff2
 10109  0024FC  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
 10110  002500  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
 10111  002504  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
 10112  002508  ECC0  F01F         	call	___flge	;wreg free
 10113  00250C  A0D8               	btfss	status,0,c
 10114  00250E  EF8B  F012         	goto	u10621
 10115  002512  EF8D  F012         	goto	u10620
 10116  002516                     u10621:
 10117  002516  EFC3  F012         	goto	l9346
 10118  00251A                     u10620:
 10119  00251A  C04C  F038         	movff	roundf@x,___fladd@a
 10120  00251E  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10121  002522  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10122  002526  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10123  00252A  C06E  F034         	movff	roundf@y,___fladd@b
 10124  00252E  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10125  002532  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10126  002536  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10127  00253A  EC87  F008         	call	___fladd	;wreg free
 10128  00253E  C034  F066         	movff	?___fladd,_roundf$1819
 10129  002542  C035  F067         	movff	?___fladd+1,_roundf$1819+1
 10130  002546  C036  F068         	movff	?___fladd+2,_roundf$1819+2
 10131  00254A  C037  F069         	movff	?___fladd+3,_roundf$1819+3
 10132  00254E  C066  F034         	movff	_roundf$1819,___fladd@b
 10133  002552  C067  F035         	movff	_roundf$1819+1,___fladd@b+1
 10134  002556  C068  F036         	movff	_roundf$1819+2,___fladd@b+2
 10135  00255A  C069  F037         	movff	_roundf$1819+3,___fladd@b+3
 10136  00255E  0E00               	movlw	0
 10137  002560  6E38               	movwf	___fladd@a^0,c
 10138  002562  0E00               	movlw	0
 10139  002564  6E39               	movwf	(___fladd@a+1)^0,c
 10140  002566  0E80               	movlw	128
 10141  002568  6E3A               	movwf	(___fladd@a+2)^0,c
 10142  00256A  0E3F               	movlw	63
 10143  00256C  6E3B               	movwf	(___fladd@a+3)^0,c
 10144  00256E  EC87  F008         	call	___fladd	;wreg free
 10145  002572  C034  F06E         	movff	?___fladd,roundf@y
 10146  002576  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10147  00257A  C036  F070         	movff	?___fladd+2,roundf@y+2
 10148  00257E  C037  F071         	movff	?___fladd+3,roundf@y+3
 10149  002582  EFDD  F012         	goto	l9348
 10150  002586                     l9346:
 10151  002586  C06E  F034         	movff	roundf@y,___fladd@b
 10152  00258A  C06F  F035         	movff	roundf@y+1,___fladd@b+1
 10153  00258E  C070  F036         	movff	roundf@y+2,___fladd@b+2
 10154  002592  C071  F037         	movff	roundf@y+3,___fladd@b+3
 10155  002596  C04C  F038         	movff	roundf@x,___fladd@a
 10156  00259A  C04D  F039         	movff	roundf@x+1,___fladd@a+1
 10157  00259E  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
 10158  0025A2  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
 10159  0025A6  EC87  F008         	call	___fladd	;wreg free
 10160  0025AA  C034  F06E         	movff	?___fladd,roundf@y
 10161  0025AE  C035  F06F         	movff	?___fladd+1,roundf@y+1
 10162  0025B2  C036  F070         	movff	?___fladd+2,roundf@y+2
 10163  0025B6  C037  F071         	movff	?___fladd+3,roundf@y+3
 10164  0025BA                     l9348:
 10165  0025BA  C06A  F050         	movff	roundf@u,??_roundf
 10166  0025BE  C06B  F051         	movff	roundf@u+1,??_roundf+1
 10167  0025C2  C06C  F052         	movff	roundf@u+2,??_roundf+2
 10168  0025C6  C06D  F053         	movff	roundf@u+3,??_roundf+3
 10169  0025CA  0E20               	movlw	32
 10170  0025CC  EFED  F012         	goto	u10630
 10171  0025D0                     u10635:
 10172  0025D0  90D8               	bcf	status,0,c
 10173  0025D2  3253               	rrcf	(??_roundf+3)^0,f,c
 10174  0025D4  3252               	rrcf	(??_roundf+2)^0,f,c
 10175  0025D6  3251               	rrcf	(??_roundf+1)^0,f,c
 10176  0025D8  3250               	rrcf	??_roundf^0,f,c
 10177  0025DA                     u10630:
 10178  0025DA  2EE8               	decfsz	wreg,f,c
 10179  0025DC  EFE8  F012         	goto	u10635
 10180  0025E0  5050               	movf	??_roundf^0,w,c
 10181  0025E2  1051               	iorwf	(??_roundf+1)^0,w,c
 10182  0025E4  1052               	iorwf	(??_roundf+2)^0,w,c
 10183  0025E6  1053               	iorwf	(??_roundf+3)^0,w,c
 10184  0025E8  B4D8               	btfsc	status,2,c
 10185  0025EA  EFF9  F012         	goto	u10641
 10186  0025EE  EFFB  F012         	goto	u10640
 10187  0025F2                     u10641:
 10188  0025F2  EF0D  F013         	goto	l9352
 10189  0025F6                     u10640:
 10190  0025F6  C06E  F006         	movff	roundf@y,___flneg@f1
 10191  0025FA  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
 10192  0025FE  C070  F008         	movff	roundf@y+2,___flneg@f1+2
 10193  002602  C071  F009         	movff	roundf@y+3,___flneg@f1+3
 10194  002606  EC84  F029         	call	___flneg	;wreg free
 10195  00260A  C006  F06E         	movff	?___flneg,roundf@y
 10196  00260E  C007  F06F         	movff	?___flneg+1,roundf@y+1
 10197  002612  C008  F070         	movff	?___flneg+2,roundf@y+2
 10198  002616  C009  F071         	movff	?___flneg+3,roundf@y+3
 10199  00261A                     l9352:
 10200  00261A  C06E  F04C         	movff	roundf@y,?_roundf
 10201  00261E  C06F  F04D         	movff	roundf@y+1,?_roundf+1
 10202  002622  C070  F04E         	movff	roundf@y+2,?_roundf+2
 10203  002626  C071  F04F         	movff	roundf@y+3,?_roundf+3
 10204  00262A                     l1731:
 10205  00262A  0012               	return		;funcret
 10206  00262C                     __end_of_roundf:
 10207                           	opt callstack 0
 10208                           
 10209 ;; *************** function ___flsub *****************
 10210 ;; Defined at:
 10211 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  b               4   67[COMRAM] float 
 10214 ;;  a               4   71[COMRAM] float 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;		None
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  4   67[COMRAM] float 
 10219 ;; Registers used:
 10220 ;;		wreg, status,2, status,0, cstack
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10226 ;;      Params:         8       0       0       0       0       0       0       0       0
 10227 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10228 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10229 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10230 ;;Total ram usage:        8 bytes
 10231 ;; Hardware stack levels used:    1
 10232 ;; Hardware stack levels required when called:    3
 10233 ;; This function calls:
 10234 ;;		___fladd
 10235 ;; This function is called by:
 10236 ;;		_PID
 10237 ;;		_efgtoa
 10238 ;;		_roundf
 10239 ;; This function uses a non-reentrant model
 10240 ;;
 10241                           
 10242                           	psect	text39
 10243  005102                     __ptext39:
 10244                           	opt callstack 0
 10245  005102                     ___flsub:
 10246                           	opt callstack 22
 10247  005102  0E00               	movlw	0
 10248  005104  1A48               	xorwf	___flsub@a^0,f,c
 10249  005106  0E00               	movlw	0
 10250  005108  1A49               	xorwf	(___flsub@a+1)^0,f,c
 10251  00510A  0E00               	movlw	0
 10252  00510C  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 10253  00510E  0E80               	movlw	128
 10254  005110  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 10255  005112  C044  F034         	movff	___flsub@b,___fladd@b
 10256  005116  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 10257  00511A  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 10258  00511E  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 10259  005122  C048  F038         	movff	___flsub@a,___fladd@a
 10260  005126  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 10261  00512A  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 10262  00512E  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 10263  005132  EC87  F008         	call	___fladd	;wreg free
 10264  005136  C034  F044         	movff	?___fladd,?___flsub
 10265  00513A  C035  F045         	movff	?___fladd+1,?___flsub+1
 10266  00513E  C036  F046         	movff	?___fladd+2,?___flsub+2
 10267  005142  C037  F047         	movff	?___fladd+3,?___flsub+3
 10268  005146  0012               	return		;funcret
 10269  005148                     __end_of___flsub:
 10270                           	opt callstack 0
 10271                           
 10272 ;; *************** function ___flneg *****************
 10273 ;; Defined at:
 10274 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  f1              4    5[COMRAM] float 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;		None
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  4    5[COMRAM] float 
 10281 ;; Registers used:
 10282 ;;		wreg, status,2, status,0
 10283 ;; Tracked objects:
 10284 ;;		On entry : 0/0
 10285 ;;		On exit  : 0/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10288 ;;      Params:         4       0       0       0       0       0       0       0       0
 10289 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10290 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10291 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10292 ;;Total ram usage:        4 bytes
 10293 ;; Hardware stack levels used:    1
 10294 ;; Hardware stack levels required when called:    2
 10295 ;; This function calls:
 10296 ;;		Nothing
 10297 ;; This function is called by:
 10298 ;;		_efgtoa
 10299 ;;		_roundf
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text40
 10304  005308                     __ptext40:
 10305                           	opt callstack 0
 10306  005308                     ___flneg:
 10307                           	opt callstack 23
 10308  005308  5006               	movf	___flneg@f1^0,w,c
 10309  00530A  1007               	iorwf	(___flneg@f1+1)^0,w,c
 10310  00530C  1008               	iorwf	(___flneg@f1+2)^0,w,c
 10311  00530E  1009               	iorwf	(___flneg@f1+3)^0,w,c
 10312  005310  B4D8               	btfsc	status,2,c
 10313  005312  EF8D  F029         	goto	u9731
 10314  005316  EF8F  F029         	goto	u9730
 10315  00531A                     u9731:
 10316  00531A  EF97  F029         	goto	l8824
 10317  00531E                     u9730:
 10318  00531E  0E00               	movlw	0
 10319  005320  1A06               	xorwf	___flneg@f1^0,f,c
 10320  005322  0E00               	movlw	0
 10321  005324  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 10322  005326  0E00               	movlw	0
 10323  005328  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 10324  00532A  0E80               	movlw	128
 10325  00532C  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 10326  00532E                     l8824:
 10327  00532E  C006  F006         	movff	___flneg@f1,?___flneg
 10328  005332  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 10329  005336  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 10330  00533A  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 10331  00533E  0012               	return		;funcret
 10332  005340                     __end_of___flneg:
 10333                           	opt callstack 0
 10334                           
 10335 ;; *************** function _moverCarrito *****************
 10336 ;; Defined at:
 10337 ;;		line 559 in file "main.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  espejearCarr    1    wreg     unsigned char 
 10340 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
 10341 ;;		 -> comportamientoBasico@carroEspejeado(1), 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  espejearCarr    1   83[COMRAM] unsigned char 
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      void 
 10346 ;; Registers used:
 10347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10353 ;;      Params:         0       2       0       0       0       0       0       0       0
 10354 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10355 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10356 ;;      Totals:         1       4       0       0       0       0       0       0       0
 10357 ;;Total ram usage:        5 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; Hardware stack levels required when called:    8
 10360 ;; This function calls:
 10361 ;;		_forzarAvanceRecto
 10362 ;;		_forzarEspejeo
 10363 ;; This function is called by:
 10364 ;;		_comportamientoBasico
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           	psect	text41
 10369  004322                     __ptext41:
 10370                           	opt callstack 0
 10371  004322                     _moverCarrito:
 10372                           	opt callstack 21
 10373                           
 10374                           ;incstack = 0
 10375                           ;moverCarrito@espejearCarroY stored from wreg
 10376  004322  6E54               	movwf	moverCarrito@espejearCarroY^0,c
 10377  004324                     
 10378                           ;main.c: 561:     switch (mouse.curr_state) {
 10379  004324  EFD6  F021         	goto	l9678
 10380  004328                     l441:
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;main.c: 565:             LATB4 = 1;
 10384  004328  888A               	bsf	3978,4,c	;volatile
 10385                           
 10386                           ;main.c: 566:             LATB5 = 0;
 10387  00432A  9A8A               	bcf	3978,5,c	;volatile
 10388                           
 10389                           ;main.c: 567:             LATB6 = 1;
 10390  00432C  8C8A               	bsf	3978,6,c	;volatile
 10391                           
 10392                           ;main.c: 570:             if (!0)
 10393  00432E  9E8A               	bcf	3978,7,c	;volatile
 10394  004330                     
 10395                           ; BSR set to: 0
 10396                           ;main.c: 571:                 _delay((unsigned long)((55)*(4000000/4000.0)));
 10397  004330  0E48               	movlw	72
 10398  004332  0100               	movlb	0	; () banked
 10399  004334  6F8A               	movwf	??_moverCarrito& (0+255),b
 10400  004336  0E6C               	movlw	108
 10401  004338                     u11907:
 10402  004338  2EE8               	decfsz	wreg,f,c
 10403  00433A  D7FE               	bra	u11907
 10404  00433C  2F8A               	decfsz	??_moverCarrito& (0+255),f,b
 10405  00433E  D7FC               	bra	u11907
 10406  004340  F000               	nop	
 10407  004342  EFF4  F021         	goto	l449
 10408  004346                     l9662:
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;main.c: 577:             if (espejearCarroY) {
 10412  004346  5054               	movf	moverCarrito@espejearCarroY^0,w,c
 10413  004348  B4D8               	btfsc	status,2,c
 10414  00434A  EFA9  F021         	goto	u11071
 10415  00434E  EFAB  F021         	goto	u11070
 10416  004352                     u11071:
 10417  004352  EFB5  F021         	goto	l445
 10418  004356                     u11070:
 10419  004356                     
 10420                           ; BSR set to: 0
 10421                           ;main.c: 578:                 forzarEspejeo();
 10422  004356  EC2C  F029         	call	_forzarEspejeo	;wreg free
 10423  00435A                     
 10424                           ;main.c: 579:                 *carroEspejeado = 1;
 10425  00435A  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
 10426  00435E  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
 10427  004362  0E01               	movlw	1
 10428  004364  6EDF               	movwf	indf2,c
 10429                           
 10430                           ;main.c: 580:             } else {
 10431  004366  EFF4  F021         	goto	l449
 10432  00436A                     l445:
 10433                           
 10434                           ; BSR set to: 0
 10435                           ;main.c: 581:                 LATB4 = 0;
 10436  00436A  988A               	bcf	3978,4,c	;volatile
 10437                           
 10438                           ;main.c: 582:                 LATB5 = 0;
 10439  00436C  9A8A               	bcf	3978,5,c	;volatile
 10440                           
 10441                           ;main.c: 583:                 LATB6 = 1;
 10442  00436E  8C8A               	bsf	3978,6,c	;volatile
 10443                           
 10444                           ;main.c: 584:                 LATB7 = 0;
 10445  004370  9E8A               	bcf	3978,7,c	;volatile
 10446  004372                     l9668:
 10447                           
 10448                           ; BSR set to: 0
 10449                           ;main.c: 585:                 _delay((unsigned long)((410)*(4000000/4000.0)));
 10450  004372  0E03               	movlw	3
 10451  004374  0100               	movlb	0	; () banked
 10452  004376  6F8B               	movwf	(??_moverCarrito+1)& (0+255),b
 10453  004378  0E15               	movlw	21
 10454  00437A  6F8A               	movwf	??_moverCarrito& (0+255),b
 10455  00437C  0E73               	movlw	115
 10456  00437E                     u11917:
 10457  00437E  2EE8               	decfsz	wreg,f,c
 10458  004380  D7FE               	bra	u11917
 10459  004382  2F8A               	decfsz	??_moverCarrito& (0+255),f,b
 10460  004384  D7FC               	bra	u11917
 10461  004386  2F8B               	decfsz	(??_moverCarrito+1)& (0+255),f,b
 10462  004388  D7FA               	bra	u11917
 10463  00438A  D000               	nop2	
 10464  00438C                     
 10465                           ;main.c: 586:                 forzarAvanceRecto();
 10466  00438C  EC0B  F02A         	call	_forzarAvanceRecto	;wreg free
 10467  004390  EFF4  F021         	goto	l449
 10468  004394                     l447:
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;main.c: 594:             LATB4 = 1;
 10472  004394  888A               	bsf	3978,4,c	;volatile
 10473                           
 10474                           ;main.c: 595:             LATB5 = 0;
 10475  004396  9A8A               	bcf	3978,5,c	;volatile
 10476                           
 10477                           ;main.c: 596:             LATB6 = 0;
 10478  004398  9C8A               	bcf	3978,6,c	;volatile
 10479                           
 10480                           ;main.c: 597:             LATB7 = 0;
 10481  00439A  9E8A               	bcf	3978,7,c	;volatile
 10482  00439C  EFB9  F021         	goto	l9668
 10483  0043A0                     l448:
 10484                           
 10485                           ; BSR set to: 0
 10486                           ;main.c: 606:             LATB4 = 0;
 10487  0043A0  988A               	bcf	3978,4,c	;volatile
 10488                           
 10489                           ;main.c: 607:             LATB5 = 0;
 10490  0043A2  9A8A               	bcf	3978,5,c	;volatile
 10491                           
 10492                           ;main.c: 608:             LATB6 = 0;
 10493  0043A4  9C8A               	bcf	3978,6,c	;volatile
 10494                           
 10495                           ;main.c: 609:             LATB7 = 0;
 10496  0043A6  9E8A               	bcf	3978,7,c	;volatile
 10497                           
 10498                           ;main.c: 611:             break;
 10499  0043A8  EFF4  F021         	goto	l449
 10500  0043AC                     l9678:
 10501  0043AC  0100               	movlb	0	; () banked
 10502  0043AE  51FD               	movf	_mouse& (0+255),w,b
 10503  0043B0  6F8A               	movwf	??_moverCarrito& (0+255),b
 10504  0043B2  6B8B               	clrf	(??_moverCarrito+1)& (0+255),b
 10505                           
 10506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10507                           ; Switch size 1, requested type "simple"
 10508                           ; Number of cases is 1, Range of values is 0 to 0
 10509                           ; switch strategies available:
 10510                           ; Name         Instructions Cycles
 10511                           ; simple_byte            4     3 (average)
 10512                           ;	Chosen strategy is simple_byte
 10513  0043B4  518B               	movf	(??_moverCarrito+1)& (0+255),w,b
 10514  0043B6  0A00               	xorlw	0	; case 0
 10515  0043B8  B4D8               	btfsc	status,2,c
 10516  0043BA  EFE1  F021         	goto	l10882
 10517  0043BE  EFF4  F021         	goto	l449
 10518  0043C2                     l10882:
 10519                           
 10520                           ; BSR set to: 0
 10521                           ; Switch size 1, requested type "simple"
 10522                           ; Number of cases is 4, Range of values is 1 to 4
 10523                           ; switch strategies available:
 10524                           ; Name         Instructions Cycles
 10525                           ; simple_byte           13     7 (average)
 10526                           ;	Chosen strategy is simple_byte
 10527  0043C2  518A               	movf	??_moverCarrito& (0+255),w,b
 10528  0043C4  0A01               	xorlw	1	; case 1
 10529  0043C6  B4D8               	btfsc	status,2,c
 10530  0043C8  EF94  F021         	goto	l441
 10531  0043CC  0A03               	xorlw	3	; case 2
 10532  0043CE  B4D8               	btfsc	status,2,c
 10533  0043D0  EFA3  F021         	goto	l9662
 10534  0043D4  0A01               	xorlw	1	; case 3
 10535  0043D6  B4D8               	btfsc	status,2,c
 10536  0043D8  EFCA  F021         	goto	l447
 10537  0043DC  0A07               	xorlw	7	; case 4
 10538  0043DE  B4D8               	btfsc	status,2,c
 10539  0043E0  EFD0  F021         	goto	l448
 10540  0043E4  EFF4  F021         	goto	l449
 10541  0043E8                     l449:
 10542  0043E8  0012               	return		;funcret
 10543  0043EA                     __end_of_moverCarrito:
 10544                           	opt callstack 0
 10545                           
 10546 ;; *************** function _forzarAvanceRecto *****************
 10547 ;; Defined at:
 10548 ;;		line 503 in file "main.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;		None
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;		None
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  1    wreg      void 
 10555 ;; Registers used:
 10556 ;;		wreg
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10562 ;;      Params:         0       0       0       0       0       0       0       0       0
 10563 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10564 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10565 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10566 ;;Total ram usage:        2 bytes
 10567 ;; Hardware stack levels used:    1
 10568 ;; Hardware stack levels required when called:    2
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_moverCarrito
 10573 ;;		_mover
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           	psect	text42
 10578  005416                     __ptext42:
 10579                           	opt callstack 0
 10580  005416                     _forzarAvanceRecto:
 10581                           	opt callstack 25
 10582  005416                     
 10583                           ;main.c: 504:     LATB4 = 1;
 10584  005416  888A               	bsf	3978,4,c	;volatile
 10585                           
 10586                           ;main.c: 505:     LATB5 = 0;
 10587  005418  9A8A               	bcf	3978,5,c	;volatile
 10588                           
 10589                           ;main.c: 506:     LATB6 = 1;
 10590  00541A  8C8A               	bsf	3978,6,c	;volatile
 10591                           
 10592                           ;main.c: 507:     LATB7 = 0;
 10593  00541C  9E8A               	bcf	3978,7,c	;volatile
 10594  00541E                     
 10595                           ;main.c: 509:     _delay((unsigned long)((550)*(4000000/4000.0)));
 10596  00541E  0E03               	movlw	3
 10597  005420  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
 10598  005422  0ECB               	movlw	203
 10599  005424  6E06               	movwf	??_forzarAvanceRecto^0,c
 10600  005426  0E45               	movlw	69
 10601  005428                     u11927:
 10602  005428  2EE8               	decfsz	wreg,f,c
 10603  00542A  D7FE               	bra	u11927
 10604  00542C  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
 10605  00542E  D7FC               	bra	u11927
 10606  005430  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
 10607  005432  D7FA               	bra	u11927
 10608  005434  F000               	nop	
 10609  005436  0012               	return		;funcret
 10610  005438                     __end_of_forzarAvanceRecto:
 10611                           	opt callstack 0
 10612                           
 10613 ;; *************** function _leerSensores *****************
 10614 ;; Defined at:
 10615 ;;		line 1169 in file "main.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;		None
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;		None
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      void 
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, status,0, cstack
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10629 ;;      Params:         0       0       0       0       0       0       0       0       0
 10630 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10632 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10633 ;;Total ram usage:        0 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:    4
 10636 ;; This function calls:
 10637 ;;		___fladd
 10638 ;;		___fldiv
 10639 ;;		_dameDistancia
 10640 ;; This function is called by:
 10641 ;;		_comportamientoBasico
 10642 ;;		_probarSensores
 10643 ;;		_probarPID
 10644 ;;		_probarCruceT
 10645 ;; This function uses a non-reentrant model
 10646 ;;
 10647                           
 10648                           	psect	text43
 10649  00392A                     __ptext43:
 10650                           	opt callstack 0
 10651  00392A                     _leerSensores:
 10652                           	opt callstack 25
 10653  00392A                     
 10654                           ;main.c: 1171:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
 10655  00392A  C120  F038         	movff	_oldSensorDerecha,___fladd@a
 10656  00392E  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
 10657  003932  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
 10658  003936  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
 10659  00393A  0E03               	movlw	3
 10660  00393C  EC05  F01E         	call	_dameDistancia
 10661  003940  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10662  003944  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10663  003948  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10664  00394C  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10665  003950  EC87  F008         	call	___fladd	;wreg free
 10666  003954  C034  F044         	movff	?___fladd,___fldiv@b
 10667  003958  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10668  00395C  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10669  003960  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10670  003964  0E00               	movlw	0
 10671  003966  6E48               	movwf	___fldiv@a^0,c
 10672  003968  0E00               	movlw	0
 10673  00396A  6E49               	movwf	(___fldiv@a+1)^0,c
 10674  00396C  0E00               	movlw	0
 10675  00396E  6E4A               	movwf	(___fldiv@a+2)^0,c
 10676  003970  0E40               	movlw	64
 10677  003972  6E4B               	movwf	(___fldiv@a+3)^0,c
 10678  003974  EC16  F013         	call	___fldiv	;wreg free
 10679  003978  C044  F0F9         	movff	?___fldiv,_sensorDerecha
 10680  00397C  C045  F0FA         	movff	?___fldiv+1,_sensorDerecha+1
 10681  003980  C046  F0FB         	movff	?___fldiv+2,_sensorDerecha+2
 10682  003984  C047  F0FC         	movff	?___fldiv+3,_sensorDerecha+3
 10683                           
 10684                           ;main.c: 1172:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
 10685  003988  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
 10686  00398C  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
 10687  003990  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
 10688  003994  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
 10689  003998  0E02               	movlw	2
 10690  00399A  EC05  F01E         	call	_dameDistancia
 10691  00399E  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10692  0039A2  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10693  0039A6  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10694  0039AA  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10695  0039AE  EC87  F008         	call	___fladd	;wreg free
 10696  0039B2  C034  F044         	movff	?___fladd,___fldiv@b
 10697  0039B6  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10698  0039BA  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10699  0039BE  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10700  0039C2  0E00               	movlw	0
 10701  0039C4  6E48               	movwf	___fldiv@a^0,c
 10702  0039C6  0E00               	movlw	0
 10703  0039C8  6E49               	movwf	(___fldiv@a+1)^0,c
 10704  0039CA  0E00               	movlw	0
 10705  0039CC  6E4A               	movwf	(___fldiv@a+2)^0,c
 10706  0039CE  0E40               	movlw	64
 10707  0039D0  6E4B               	movwf	(___fldiv@a+3)^0,c
 10708  0039D2  EC16  F013         	call	___fldiv	;wreg free
 10709  0039D6  C044  F055         	movff	?___fldiv,_sensorIzquierda
 10710  0039DA  C045  F056         	movff	?___fldiv+1,_sensorIzquierda+1
 10711  0039DE  C046  F057         	movff	?___fldiv+2,_sensorIzquierda+2
 10712  0039E2  C047  F058         	movff	?___fldiv+3,_sensorIzquierda+3
 10713                           
 10714                           ;main.c: 1173:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
 10715  0039E6  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
 10716  0039EA  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
 10717  0039EE  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
 10718  0039F2  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
 10719  0039F6  0E01               	movlw	1
 10720  0039F8  EC05  F01E         	call	_dameDistancia
 10721  0039FC  C01B  F034         	movff	?_dameDistancia,___fladd@b
 10722  003A00  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
 10723  003A04  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
 10724  003A08  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
 10725  003A0C  EC87  F008         	call	___fladd	;wreg free
 10726  003A10  C034  F044         	movff	?___fladd,___fldiv@b
 10727  003A14  C035  F045         	movff	?___fladd+1,___fldiv@b+1
 10728  003A18  C036  F046         	movff	?___fladd+2,___fldiv@b+2
 10729  003A1C  C037  F047         	movff	?___fladd+3,___fldiv@b+3
 10730  003A20  0E00               	movlw	0
 10731  003A22  6E48               	movwf	___fldiv@a^0,c
 10732  003A24  0E00               	movlw	0
 10733  003A26  6E49               	movwf	(___fldiv@a+1)^0,c
 10734  003A28  0E00               	movlw	0
 10735  003A2A  6E4A               	movwf	(___fldiv@a+2)^0,c
 10736  003A2C  0E40               	movlw	64
 10737  003A2E  6E4B               	movwf	(___fldiv@a+3)^0,c
 10738  003A30  EC16  F013         	call	___fldiv	;wreg free
 10739  003A34  C044  F124         	movff	?___fldiv,_sensorEnfrente
 10740  003A38  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
 10741  003A3C  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
 10742  003A40  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
 10743  003A44                     
 10744                           ;main.c: 1175:     oldSensorDerecha = sensorDerecha;
 10745  003A44  C0F9  F120         	movff	_sensorDerecha,_oldSensorDerecha
 10746  003A48  C0FA  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
 10747  003A4C  C0FB  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
 10748  003A50  C0FC  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
 10749  003A54                     
 10750                           ;main.c: 1176:     oldSensorIzquierda = sensorIzquierda;
 10751  003A54  C055  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
 10752  003A58  C056  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
 10753  003A5C  C057  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
 10754  003A60  C058  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
 10755  003A64                     
 10756                           ;main.c: 1177:     oldSensorEnfrente = sensorEnfrente;
 10757  003A64  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
 10758  003A68  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
 10759  003A6C  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
 10760  003A70  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
 10761  003A74                     
 10762                           ;main.c: 1182:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
 10763  003A74  C0F9  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
 10764  003A78  C0FA  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
 10765  003A7C  C0FB  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
 10766  003A80  C0FC  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
 10767  003A84                     
 10768                           ;main.c: 1191:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
 10769  003A84  C055  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
 10770  003A88  C056  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
 10771  003A8C  C057  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
 10772  003A90  C058  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
 10773  003A94                     
 10774                           ;main.c: 1194:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
 10775  003A94  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
 10776  003A98  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
 10777  003A9C  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
 10778  003AA0  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
 10779  003AA4  0012               	return		;funcret
 10780  003AA6                     __end_of_leerSensores:
 10781                           	opt callstack 0
 10782                           
 10783 ;; *************** function _dameDistancia *****************
 10784 ;; Defined at:
 10785 ;;		line 26 in file "./ultrasonico.h"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;  numeroSensor    1    wreg     unsigned char 
 10788 ;; Auto vars:     Size  Location     Type
 10789 ;;  numeroSensor    1   32[COMRAM] unsigned char 
 10790 ;;  distancia       4   33[COMRAM] float 
 10791 ;;  conteo          2   37[COMRAM] unsigned int 
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  4   26[COMRAM] float 
 10794 ;; Registers used:
 10795 ;;		wreg, status,2, status,0, cstack
 10796 ;; Tracked objects:
 10797 ;;		On entry : 0/0
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10801 ;;      Params:         4       0       0       0       0       0       0       0       0
 10802 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10803 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10804 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10805 ;;Total ram usage:       13 bytes
 10806 ;; Hardware stack levels used:    1
 10807 ;; Hardware stack levels required when called:    3
 10808 ;; This function calls:
 10809 ;;		___lwdiv
 10810 ;;		___xxtofl
 10811 ;; This function is called by:
 10812 ;;		_inicializarComportamientoBasico
 10813 ;;		_leerSensores
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           	psect	text44
 10818  003C0A                     __ptext44:
 10819                           	opt callstack 0
 10820  003C0A                     _dameDistancia:
 10821                           	opt callstack 26
 10822                           
 10823                           ;incstack = 0
 10824                           ;dameDistancia@numeroSensor stored from wreg
 10825  003C0A  6E21               	movwf	dameDistancia@numeroSensor^0,c
 10826  003C0C                     
 10827                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
 10828  003C0C  0E00               	movlw	0
 10829  003C0E  6ECF               	movwf	207,c	;volatile
 10830                           
 10831                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
 10832  003C10  0E00               	movlw	0
 10833  003C12  6ECE               	movwf	206,c	;volatile
 10834                           
 10835                           ;./ultrasonico.h: 33:     conteo = 0;
 10836  003C14  0E00               	movlw	0
 10837  003C16  6E27               	movwf	(dameDistancia@conteo+1)^0,c
 10838  003C18  0E00               	movlw	0
 10839  003C1A  6E26               	movwf	dameDistancia@conteo^0,c
 10840  003C1C                     
 10841                           ;./ultrasonico.h: 34:     LATD3 = 1;
 10842  003C1C  868C               	bsf	3980,3,c	;volatile
 10843  003C1E                     
 10844                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
 10845  003C1E  0E04               	movlw	4
 10846  003C20                     u11937:
 10847  003C20  2EE8               	decfsz	wreg,f,c
 10848  003C22  D7FE               	bra	u11937
 10849  003C24                     
 10850                           ;./ultrasonico.h: 36:     LATD3 = 0;
 10851  003C24  968C               	bcf	3980,3,c	;volatile
 10852                           
 10853                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
 10854  003C26  EF5D  F01E         	goto	l9494
 10855  003C2A                     l185:
 10856  003C2A  A281               	btfss	129,1,c	;volatile
 10857  003C2C  EF1A  F01E         	goto	u10841
 10858  003C30  EF1C  F01E         	goto	u10840
 10859  003C34                     u10841:
 10860  003C34  EF15  F01E         	goto	l185
 10861  003C38                     u10840:
 10862  003C38                     
 10863                           ;./ultrasonico.h: 43:             TMR1ON = 1;
 10864  003C38  80CD               	bsf	4045,0,c	;volatile
 10865  003C3A                     l188:
 10866  003C3A  A281               	btfss	129,1,c	;volatile
 10867  003C3C  EF22  F01E         	goto	u10851
 10868  003C40  EF24  F01E         	goto	u10850
 10869  003C44                     u10851:
 10870  003C44  EF76  F01E         	goto	l193
 10871  003C48                     u10850:
 10872  003C48  A09E               	btfss	3998,0,c	;volatile
 10873  003C4A  EF29  F01E         	goto	u10861
 10874  003C4E  EF2B  F01E         	goto	u10860
 10875  003C52                     u10861:
 10876  003C52  EF1D  F01E         	goto	l188
 10877  003C56                     u10860:
 10878  003C56  EF76  F01E         	goto	l193
 10879  003C5A                     l195:
 10880  003C5A  A481               	btfss	129,2,c	;volatile
 10881  003C5C  EF32  F01E         	goto	u10871
 10882  003C60  EF34  F01E         	goto	u10870
 10883  003C64                     u10871:
 10884  003C64  EF2D  F01E         	goto	l195
 10885  003C68                     u10870:
 10886  003C68                     
 10887                           ;./ultrasonico.h: 51:             TMR1ON = 1;
 10888  003C68  80CD               	bsf	4045,0,c	;volatile
 10889  003C6A                     l198:
 10890  003C6A  A481               	btfss	129,2,c	;volatile
 10891  003C6C  EF3A  F01E         	goto	u10881
 10892  003C70  EF3C  F01E         	goto	u10880
 10893  003C74                     u10881:
 10894  003C74  EF76  F01E         	goto	l193
 10895  003C78                     u10880:
 10896  003C78  A09E               	btfss	3998,0,c	;volatile
 10897  003C7A  EF41  F01E         	goto	u10891
 10898  003C7E  EF43  F01E         	goto	u10890
 10899  003C82                     u10891:
 10900  003C82  EF35  F01E         	goto	l198
 10901  003C86                     u10890:
 10902  003C86  EF76  F01E         	goto	l193
 10903  003C8A                     l204:
 10904  003C8A  A681               	btfss	129,3,c	;volatile
 10905  003C8C  EF4A  F01E         	goto	u10901
 10906  003C90  EF4C  F01E         	goto	u10900
 10907  003C94                     u10901:
 10908  003C94  EF45  F01E         	goto	l204
 10909  003C98                     u10900:
 10910  003C98                     
 10911                           ;./ultrasonico.h: 59:             TMR1ON = 1;
 10912  003C98  80CD               	bsf	4045,0,c	;volatile
 10913  003C9A                     l207:
 10914  003C9A  A681               	btfss	129,3,c	;volatile
 10915  003C9C  EF52  F01E         	goto	u10911
 10916  003CA0  EF54  F01E         	goto	u10910
 10917  003CA4                     u10911:
 10918  003CA4  EF76  F01E         	goto	l193
 10919  003CA8                     u10910:
 10920  003CA8  A09E               	btfss	3998,0,c	;volatile
 10921  003CAA  EF59  F01E         	goto	u10921
 10922  003CAE  EF5B  F01E         	goto	u10920
 10923  003CB2                     u10921:
 10924  003CB2  EF4D  F01E         	goto	l207
 10925  003CB6                     u10920:
 10926  003CB6  EF76  F01E         	goto	l193
 10927  003CBA                     l9494:
 10928  003CBA  5021               	movf	dameDistancia@numeroSensor^0,w,c
 10929  003CBC  6E1F               	movwf	??_dameDistancia^0,c
 10930  003CBE  6A20               	clrf	(??_dameDistancia+1)^0,c
 10931                           
 10932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10933                           ; Switch size 1, requested type "simple"
 10934                           ; Number of cases is 1, Range of values is 0 to 0
 10935                           ; switch strategies available:
 10936                           ; Name         Instructions Cycles
 10937                           ; simple_byte            4     3 (average)
 10938                           ;	Chosen strategy is simple_byte
 10939  003CC0  5020               	movf	(??_dameDistancia+1)^0,w,c
 10940  003CC2  0A00               	xorlw	0	; case 0
 10941  003CC4  B4D8               	btfsc	status,2,c
 10942  003CC6  EF67  F01E         	goto	l10884
 10943  003CCA  EF76  F01E         	goto	l193
 10944  003CCE                     l10884:
 10945                           
 10946                           ; Switch size 1, requested type "simple"
 10947                           ; Number of cases is 3, Range of values is 1 to 3
 10948                           ; switch strategies available:
 10949                           ; Name         Instructions Cycles
 10950                           ; simple_byte           10     6 (average)
 10951                           ;	Chosen strategy is simple_byte
 10952  003CCE  501F               	movf	??_dameDistancia^0,w,c
 10953  003CD0  0A01               	xorlw	1	; case 1
 10954  003CD2  B4D8               	btfsc	status,2,c
 10955  003CD4  EF15  F01E         	goto	l185
 10956  003CD8  0A03               	xorlw	3	; case 2
 10957  003CDA  B4D8               	btfsc	status,2,c
 10958  003CDC  EF2D  F01E         	goto	l195
 10959  003CE0  0A01               	xorlw	1	; case 3
 10960  003CE2  B4D8               	btfsc	status,2,c
 10961  003CE4  EF45  F01E         	goto	l204
 10962  003CE8  EF76  F01E         	goto	l193
 10963  003CEC                     l193:
 10964                           
 10965                           ;./ultrasonico.h: 66:     TMR1ON = 0;
 10966  003CEC  90CD               	bcf	4045,0,c	;volatile
 10967                           
 10968                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
 10969  003CEE  B09E               	btfsc	3998,0,c	;volatile
 10970  003CF0  EF7C  F01E         	goto	u10931
 10971  003CF4  EF7E  F01E         	goto	u10930
 10972  003CF8                     u10931:
 10973  003CF8  EFA4  F01E         	goto	l9500
 10974  003CFC                     u10930:
 10975  003CFC                     
 10976                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
 10977  003CFC  50CF               	movf	207,w,c	;volatile
 10978  003CFE  6E20               	movwf	(??_dameDistancia+1)^0,c
 10979  003D00  6A1F               	clrf	??_dameDistancia^0,c
 10980  003D02  501F               	movf	??_dameDistancia^0,w,c
 10981  003D04  1226               	iorwf	dameDistancia@conteo^0,f,c
 10982  003D06  5020               	movf	(??_dameDistancia+1)^0,w,c
 10983  003D08  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
 10984                           
 10985                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
 10986  003D0A  50CE               	movf	206,w,c	;volatile
 10987  003D0C  1226               	iorwf	dameDistancia@conteo^0,f,c
 10988  003D0E                     
 10989                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
 10990  003D0E  0E00               	movlw	0
 10991  003D10  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 10992  003D12  0E3A               	movlw	58
 10993  003D14  6E08               	movwf	___lwdiv@divisor^0,c
 10994  003D16  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
 10995  003D1A  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
 10996  003D1E  EC8F  F025         	call	___lwdiv	;wreg free
 10997  003D22  C006  F00D         	movff	?___lwdiv,___xxtofl@val
 10998  003D26  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
 10999  003D2A  6A0F               	clrf	(___xxtofl@val+2)^0,c
 11000  003D2C  6A10               	clrf	(___xxtofl@val+3)^0,c
 11001  003D2E  0E00               	movlw	0
 11002  003D30  EC67  F019         	call	___xxtofl
 11003  003D34  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
 11004  003D38  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
 11005  003D3C  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
 11006  003D40  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
 11007                           
 11008                           ;./ultrasonico.h: 73:     } else {
 11009  003D44  EFAD  F01E         	goto	l9504
 11010  003D48                     l9500:
 11011  003D48                     
 11012                           ;./ultrasonico.h: 75:         TMR1IF = 0;
 11013  003D48  909E               	bcf	3998,0,c	;volatile
 11014                           
 11015                           ;./ultrasonico.h: 76:         distancia = 0;
 11016  003D4A  0E00               	movlw	0
 11017  003D4C  6E22               	movwf	dameDistancia@distancia^0,c
 11018  003D4E  0E00               	movlw	0
 11019  003D50  6E23               	movwf	(dameDistancia@distancia+1)^0,c
 11020  003D52  0E00               	movlw	0
 11021  003D54  6E24               	movwf	(dameDistancia@distancia+2)^0,c
 11022  003D56  0E00               	movlw	0
 11023  003D58  6E25               	movwf	(dameDistancia@distancia+3)^0,c
 11024  003D5A                     l9504:
 11025                           
 11026                           ;./ultrasonico.h: 80:     return distancia;
 11027  003D5A  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
 11028  003D5E  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
 11029  003D62  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
 11030  003D66  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
 11031  003D6A  0012               	return		;funcret
 11032  003D6C                     __end_of_dameDistancia:
 11033                           	opt callstack 0
 11034                           
 11035 ;; *************** function ___lwdiv *****************
 11036 ;; Defined at:
 11037 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;  dividend        2    5[COMRAM] unsigned int 
 11040 ;;  divisor         2    7[COMRAM] unsigned int 
 11041 ;; Auto vars:     Size  Location     Type
 11042 ;;  quotient        2   10[COMRAM] unsigned int 
 11043 ;;  counter         1    9[COMRAM] unsigned char 
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  2    5[COMRAM] unsigned int 
 11046 ;; Registers used:
 11047 ;;		wreg, status,2, status,0
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11053 ;;      Params:         4       0       0       0       0       0       0       0       0
 11054 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11056 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11057 ;;Total ram usage:        7 bytes
 11058 ;; Hardware stack levels used:    1
 11059 ;; Hardware stack levels required when called:    2
 11060 ;; This function calls:
 11061 ;;		Nothing
 11062 ;; This function is called by:
 11063 ;;		_dameDistancia
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text45
 11068  004B1E                     __ptext45:
 11069                           	opt callstack 0
 11070  004B1E                     ___lwdiv:
 11071                           	opt callstack 26
 11072  004B1E  0E00               	movlw	0
 11073  004B20  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11074  004B22  0E00               	movlw	0
 11075  004B24  6E0B               	movwf	___lwdiv@quotient^0,c
 11076  004B26  5008               	movf	___lwdiv@divisor^0,w,c
 11077  004B28  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11078  004B2A  B4D8               	btfsc	status,2,c
 11079  004B2C  EF9A  F025         	goto	u10811
 11080  004B30  EF9C  F025         	goto	u10810
 11081  004B34                     u10811:
 11082  004B34  EFC4  F025         	goto	l1431
 11083  004B38                     u10810:
 11084  004B38  0E01               	movlw	1
 11085  004B3A  6E0A               	movwf	___lwdiv@counter^0,c
 11086  004B3C  EFA4  F025         	goto	l9464
 11087  004B40                     l9462:
 11088  004B40  90D8               	bcf	status,0,c
 11089  004B42  3608               	rlcf	___lwdiv@divisor^0,f,c
 11090  004B44  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11091  004B46  2A0A               	incf	___lwdiv@counter^0,f,c
 11092  004B48                     l9464:
 11093  004B48  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 11094  004B4A  EFA9  F025         	goto	u10821
 11095  004B4E  EFAB  F025         	goto	u10820
 11096  004B52                     u10821:
 11097  004B52  EFA0  F025         	goto	l9462
 11098  004B56                     u10820:
 11099  004B56                     l9466:
 11100  004B56  90D8               	bcf	status,0,c
 11101  004B58  360B               	rlcf	___lwdiv@quotient^0,f,c
 11102  004B5A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11103  004B5C  5008               	movf	___lwdiv@divisor^0,w,c
 11104  004B5E  5C06               	subwf	___lwdiv@dividend^0,w,c
 11105  004B60  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11106  004B62  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11107  004B64  A0D8               	btfss	status,0,c
 11108  004B66  EFB7  F025         	goto	u10831
 11109  004B6A  EFB9  F025         	goto	u10830
 11110  004B6E                     u10831:
 11111  004B6E  EFBE  F025         	goto	l9474
 11112  004B72                     u10830:
 11113  004B72  5008               	movf	___lwdiv@divisor^0,w,c
 11114  004B74  5E06               	subwf	___lwdiv@dividend^0,f,c
 11115  004B76  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 11116  004B78  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11117  004B7A  800B               	bsf	___lwdiv@quotient^0,0,c
 11118  004B7C                     l9474:
 11119  004B7C  90D8               	bcf	status,0,c
 11120  004B7E  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11121  004B80  3208               	rrcf	___lwdiv@divisor^0,f,c
 11122  004B82  2E0A               	decfsz	___lwdiv@counter^0,f,c
 11123  004B84  EFAB  F025         	goto	l9466
 11124  004B88                     l1431:
 11125  004B88  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
 11126  004B8C  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11127  004B90  0012               	return		;funcret
 11128  004B92                     __end_of___lwdiv:
 11129                           	opt callstack 0
 11130                           
 11131 ;; *************** function ___fladd *****************
 11132 ;; Defined at:
 11133 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;  b               4   51[COMRAM] unsigned int 
 11136 ;;  a               4   55[COMRAM] unsigned int 
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;  grs             1   66[COMRAM] unsigned char 
 11139 ;;  bexp            1   65[COMRAM] unsigned char 
 11140 ;;  aexp            1   64[COMRAM] unsigned char 
 11141 ;;  signs           1   63[COMRAM] unsigned char 
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  4   51[COMRAM] unsigned char 
 11144 ;; Registers used:
 11145 ;;		wreg, status,2, status,0
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11151 ;;      Params:         8       0       0       0       0       0       0       0       0
 11152 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11153 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11154 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11155 ;;Total ram usage:       16 bytes
 11156 ;; Hardware stack levels used:    1
 11157 ;; Hardware stack levels required when called:    2
 11158 ;; This function calls:
 11159 ;;		Nothing
 11160 ;; This function is called by:
 11161 ;;		_leerSensores
 11162 ;;		_PID
 11163 ;;		_efgtoa
 11164 ;;		___flsub
 11165 ;;		_roundf
 11166 ;; This function uses a non-reentrant model
 11167 ;;
 11168                           
 11169                           	psect	text46
 11170  00110E                     __ptext46:
 11171                           	opt callstack 0
 11172  00110E                     ___fladd:
 11173                           	opt callstack 22
 11174  00110E  5037               	movf	(___fladd@b+3)^0,w,c
 11175  001110  0B80               	andlw	128
 11176  001112  6E40               	movwf	___fladd@signs^0,c
 11177  001114  5037               	movf	(___fladd@b+3)^0,w,c
 11178  001116  2437               	addwf	(___fladd@b+3)^0,w,c
 11179  001118  6E42               	movwf	___fladd@bexp^0,c
 11180  00111A  AE36               	btfss	(___fladd@b+2)^0,7,c
 11181  00111C  EF92  F008         	goto	u8101
 11182  001120  EF94  F008         	goto	u8100
 11183  001124                     u8101:
 11184  001124  EF95  F008         	goto	l7944
 11185  001128                     u8100:
 11186  001128  8042               	bsf	___fladd@bexp^0,0,c
 11187  00112A                     l7944:
 11188  00112A  5042               	movf	___fladd@bexp^0,w,c
 11189  00112C  B4D8               	btfsc	status,2,c
 11190  00112E  EF9B  F008         	goto	u8111
 11191  001132  EF9D  F008         	goto	u8110
 11192  001136                     u8111:
 11193  001136  EFB2  F008         	goto	l7954
 11194  00113A                     u8110:
 11195  00113A  2842               	incf	___fladd@bexp^0,w,c
 11196  00113C  A4D8               	btfss	status,2,c
 11197  00113E  EFA3  F008         	goto	u8121
 11198  001142  EFA5  F008         	goto	u8120
 11199  001146                     u8121:
 11200  001146  EFAD  F008         	goto	l7950
 11201  00114A                     u8120:
 11202  00114A  0E00               	movlw	0
 11203  00114C  6E34               	movwf	___fladd@b^0,c
 11204  00114E  0E00               	movlw	0
 11205  001150  6E35               	movwf	(___fladd@b+1)^0,c
 11206  001152  0E00               	movlw	0
 11207  001154  6E36               	movwf	(___fladd@b+2)^0,c
 11208  001156  0E00               	movlw	0
 11209  001158  6E37               	movwf	(___fladd@b+3)^0,c
 11210  00115A                     l7950:
 11211  00115A  8E36               	bsf	(___fladd@b+2)^0,7,c
 11212  00115C  0E00               	movlw	0
 11213  00115E  6E37               	movwf	(___fladd@b+3)^0,c
 11214  001160  EFBA  F008         	goto	l7956
 11215  001164                     l7954:
 11216  001164  0E00               	movlw	0
 11217  001166  6E34               	movwf	___fladd@b^0,c
 11218  001168  0E00               	movlw	0
 11219  00116A  6E35               	movwf	(___fladd@b+1)^0,c
 11220  00116C  0E00               	movlw	0
 11221  00116E  6E36               	movwf	(___fladd@b+2)^0,c
 11222  001170  0E00               	movlw	0
 11223  001172  6E37               	movwf	(___fladd@b+3)^0,c
 11224  001174                     l7956:
 11225  001174  503B               	movf	(___fladd@a+3)^0,w,c
 11226  001176  0B80               	andlw	128
 11227  001178  6E41               	movwf	___fladd@aexp^0,c
 11228  00117A  5040               	movf	___fladd@signs^0,w,c
 11229  00117C  1841               	xorwf	___fladd@aexp^0,w,c
 11230  00117E  B4D8               	btfsc	status,2,c
 11231  001180  EFC4  F008         	goto	u8131
 11232  001184  EFC6  F008         	goto	u8130
 11233  001188                     u8131:
 11234  001188  EFC7  F008         	goto	l7962
 11235  00118C                     u8130:
 11236  00118C  8C40               	bsf	___fladd@signs^0,6,c
 11237  00118E                     l7962:
 11238  00118E  503B               	movf	(___fladd@a+3)^0,w,c
 11239  001190  243B               	addwf	(___fladd@a+3)^0,w,c
 11240  001192  6E41               	movwf	___fladd@aexp^0,c
 11241  001194  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11242  001196  EFCF  F008         	goto	u8141
 11243  00119A  EFD1  F008         	goto	u8140
 11244  00119E                     u8141:
 11245  00119E  EFD2  F008         	goto	l7968
 11246  0011A2                     u8140:
 11247  0011A2  8041               	bsf	___fladd@aexp^0,0,c
 11248  0011A4                     l7968:
 11249  0011A4  5041               	movf	___fladd@aexp^0,w,c
 11250  0011A6  B4D8               	btfsc	status,2,c
 11251  0011A8  EFD8  F008         	goto	u8151
 11252  0011AC  EFDA  F008         	goto	u8150
 11253  0011B0                     u8151:
 11254  0011B0  EFEF  F008         	goto	l7978
 11255  0011B4                     u8150:
 11256  0011B4  2841               	incf	___fladd@aexp^0,w,c
 11257  0011B6  A4D8               	btfss	status,2,c
 11258  0011B8  EFE0  F008         	goto	u8161
 11259  0011BC  EFE2  F008         	goto	u8160
 11260  0011C0                     u8161:
 11261  0011C0  EFEA  F008         	goto	l7974
 11262  0011C4                     u8160:
 11263  0011C4  0E00               	movlw	0
 11264  0011C6  6E38               	movwf	___fladd@a^0,c
 11265  0011C8  0E00               	movlw	0
 11266  0011CA  6E39               	movwf	(___fladd@a+1)^0,c
 11267  0011CC  0E00               	movlw	0
 11268  0011CE  6E3A               	movwf	(___fladd@a+2)^0,c
 11269  0011D0  0E00               	movlw	0
 11270  0011D2  6E3B               	movwf	(___fladd@a+3)^0,c
 11271  0011D4                     l7974:
 11272  0011D4  8E3A               	bsf	(___fladd@a+2)^0,7,c
 11273  0011D6  0E00               	movlw	0
 11274  0011D8  6E3B               	movwf	(___fladd@a+3)^0,c
 11275  0011DA  EFF7  F008         	goto	l7980
 11276  0011DE                     l7978:
 11277  0011DE  0E00               	movlw	0
 11278  0011E0  6E38               	movwf	___fladd@a^0,c
 11279  0011E2  0E00               	movlw	0
 11280  0011E4  6E39               	movwf	(___fladd@a+1)^0,c
 11281  0011E6  0E00               	movlw	0
 11282  0011E8  6E3A               	movwf	(___fladd@a+2)^0,c
 11283  0011EA  0E00               	movlw	0
 11284  0011EC  6E3B               	movwf	(___fladd@a+3)^0,c
 11285  0011EE                     l7980:
 11286  0011EE  5042               	movf	___fladd@bexp^0,w,c
 11287  0011F0  5C41               	subwf	___fladd@aexp^0,w,c
 11288  0011F2  B0D8               	btfsc	status,0,c
 11289  0011F4  EFFE  F008         	goto	u8171
 11290  0011F8  EF00  F009         	goto	u8170
 11291  0011FC                     u8171:
 11292  0011FC  EF27  F009         	goto	l8016
 11293  001200                     u8170:
 11294  001200  AC40               	btfss	___fladd@signs^0,6,c
 11295  001202  EF05  F009         	goto	u8181
 11296  001206  EF07  F009         	goto	u8180
 11297  00120A                     u8181:
 11298  00120A  EF09  F009         	goto	l7986
 11299  00120E                     u8180:
 11300  00120E  0E80               	movlw	128
 11301  001210  1A40               	xorwf	___fladd@signs^0,f,c
 11302  001212                     l7986:
 11303  001212  C042  F043         	movff	___fladd@bexp,___fladd@grs
 11304  001216  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11305  00121A  C043  F041         	movff	___fladd@grs,___fladd@aexp
 11306  00121E  C034  F043         	movff	___fladd@b,___fladd@grs
 11307  001222  C038  F034         	movff	___fladd@a,___fladd@b
 11308  001226  C043  F038         	movff	___fladd@grs,___fladd@a
 11309  00122A  C035  F043         	movff	___fladd@b+1,___fladd@grs
 11310  00122E  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 11311  001232  C043  F039         	movff	___fladd@grs,___fladd@a+1
 11312  001236  C036  F043         	movff	___fladd@b+2,___fladd@grs
 11313  00123A  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 11314  00123E  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 11315  001242  C037  F043         	movff	___fladd@b+3,___fladd@grs
 11316  001246  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 11317  00124A  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 11318  00124E                     l8016:
 11319  00124E  0E00               	movlw	0
 11320  001250  6E43               	movwf	___fladd@grs^0,c
 11321  001252  5042               	movf	___fladd@bexp^0,w,c
 11322  001254  C041  F03C         	movff	___fladd@aexp,??___fladd
 11323  001258  6A3D               	clrf	(??___fladd+1)^0,c
 11324  00125A  5E3C               	subwf	??___fladd^0,f,c
 11325  00125C  0E00               	movlw	0
 11326  00125E  5A3D               	subwfb	(??___fladd+1)^0,f,c
 11327  001260  BE3D               	btfsc	(??___fladd+1)^0,7,c
 11328  001262  EF3C  F009         	goto	u8191
 11329  001266  503D               	movf	(??___fladd+1)^0,w,c
 11330  001268  E109               	bnz	u8190
 11331  00126A  0E1A               	movlw	26
 11332  00126C  5C3C               	subwf	??___fladd^0,w,c
 11333  00126E  A0D8               	btfss	status,0,c
 11334  001270  EF3C  F009         	goto	u8191
 11335  001274  EF3E  F009         	goto	u8190
 11336  001278                     u8191:
 11337  001278  EF75  F009         	goto	l1469
 11338  00127C                     u8190:
 11339  00127C  5034               	movf	___fladd@b^0,w,c
 11340  00127E  1035               	iorwf	(___fladd@b+1)^0,w,c
 11341  001280  1036               	iorwf	(___fladd@b+2)^0,w,c
 11342  001282  1037               	iorwf	(___fladd@b+3)^0,w,c
 11343  001284  A4D8               	btfss	status,2,c
 11344  001286  EF47  F009         	goto	u8201
 11345  00128A  EF4A  F009         	goto	u8200
 11346  00128E                     u8201:
 11347  00128E  0E01               	movlw	1
 11348  001290  EF4B  F009         	goto	u8210
 11349  001294                     u8200:
 11350  001294  0E00               	movlw	0
 11351  001296                     u8210:
 11352  001296  6E43               	movwf	___fladd@grs^0,c
 11353  001298  0E00               	movlw	0
 11354  00129A  6E34               	movwf	___fladd@b^0,c
 11355  00129C  0E00               	movlw	0
 11356  00129E  6E35               	movwf	(___fladd@b+1)^0,c
 11357  0012A0  0E00               	movlw	0
 11358  0012A2  6E36               	movwf	(___fladd@b+2)^0,c
 11359  0012A4  0E00               	movlw	0
 11360  0012A6  6E37               	movwf	(___fladd@b+3)^0,c
 11361  0012A8  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11362  0012AC  EF7E  F009         	goto	l1468
 11363  0012B0                     l1470:
 11364  0012B0  A043               	btfss	___fladd@grs^0,0,c
 11365  0012B2  EF5D  F009         	goto	u8221
 11366  0012B6  EF5F  F009         	goto	u8220
 11367  0012BA                     u8221:
 11368  0012BA  EF65  F009         	goto	l8028
 11369  0012BE                     u8220:
 11370  0012BE  90D8               	bcf	status,0,c
 11371  0012C0  3043               	rrcf	___fladd@grs^0,w,c
 11372  0012C2  0901               	iorlw	1
 11373  0012C4  6E43               	movwf	___fladd@grs^0,c
 11374  0012C6  EF67  F009         	goto	l8030
 11375  0012CA                     l8028:
 11376  0012CA  90D8               	bcf	status,0,c
 11377  0012CC  3243               	rrcf	___fladd@grs^0,f,c
 11378  0012CE                     l8030:
 11379  0012CE  A034               	btfss	___fladd@b^0,0,c
 11380  0012D0  EF6C  F009         	goto	u8231
 11381  0012D4  EF6E  F009         	goto	u8230
 11382  0012D8                     u8231:
 11383  0012D8  EF6F  F009         	goto	l8034
 11384  0012DC                     u8230:
 11385  0012DC  8E43               	bsf	___fladd@grs^0,7,c
 11386  0012DE                     l8034:
 11387  0012DE  3437               	rlcf	(___fladd@b+3)^0,w,c
 11388  0012E0  3237               	rrcf	(___fladd@b+3)^0,f,c
 11389  0012E2  3236               	rrcf	(___fladd@b+2)^0,f,c
 11390  0012E4  3235               	rrcf	(___fladd@b+1)^0,f,c
 11391  0012E6  3234               	rrcf	___fladd@b^0,f,c
 11392  0012E8  2A42               	incf	___fladd@bexp^0,f,c
 11393  0012EA                     l1469:
 11394  0012EA  5041               	movf	___fladd@aexp^0,w,c
 11395  0012EC  5C42               	subwf	___fladd@bexp^0,w,c
 11396  0012EE  A0D8               	btfss	status,0,c
 11397  0012F0  EF7C  F009         	goto	u8241
 11398  0012F4  EF7E  F009         	goto	u8240
 11399  0012F8                     u8241:
 11400  0012F8  EF58  F009         	goto	l1470
 11401  0012FC                     u8240:
 11402  0012FC                     l1468:
 11403  0012FC  BC40               	btfsc	___fladd@signs^0,6,c
 11404  0012FE  EF83  F009         	goto	u8251
 11405  001302  EF85  F009         	goto	u8250
 11406  001306                     u8251:
 11407  001306  EFC5  F009         	goto	l8062
 11408  00130A                     u8250:
 11409  00130A  5042               	movf	___fladd@bexp^0,w,c
 11410  00130C  A4D8               	btfss	status,2,c
 11411  00130E  EF8B  F009         	goto	u8261
 11412  001312  EF8D  F009         	goto	u8260
 11413  001316                     u8261:
 11414  001316  EF97  F009         	goto	l8044
 11415  00131A                     u8260:
 11416  00131A  0E00               	movlw	0
 11417  00131C  6E34               	movwf	?___fladd^0,c
 11418  00131E  0E00               	movlw	0
 11419  001320  6E35               	movwf	(?___fladd+1)^0,c
 11420  001322  0E00               	movlw	0
 11421  001324  6E36               	movwf	(?___fladd+2)^0,c
 11422  001326  0E00               	movlw	0
 11423  001328  6E37               	movwf	(?___fladd+3)^0,c
 11424  00132A  EFE6  F00A         	goto	l1477
 11425  00132E                     l8044:
 11426  00132E  5038               	movf	___fladd@a^0,w,c
 11427  001330  2634               	addwf	___fladd@b^0,f,c
 11428  001332  5039               	movf	(___fladd@a+1)^0,w,c
 11429  001334  2235               	addwfc	(___fladd@b+1)^0,f,c
 11430  001336  503A               	movf	(___fladd@a+2)^0,w,c
 11431  001338  2236               	addwfc	(___fladd@b+2)^0,f,c
 11432  00133A  503B               	movf	(___fladd@a+3)^0,w,c
 11433  00133C  2237               	addwfc	(___fladd@b+3)^0,f,c
 11434  00133E  A037               	btfss	(___fladd@b+3)^0,0,c
 11435  001340  EFA4  F009         	goto	u8271
 11436  001344  EFA6  F009         	goto	u8270
 11437  001348                     u8271:
 11438  001348  EF52  F00A         	goto	l8098
 11439  00134C                     u8270:
 11440  00134C  A043               	btfss	___fladd@grs^0,0,c
 11441  00134E  EFAB  F009         	goto	u8281
 11442  001352  EFAD  F009         	goto	u8280
 11443  001356                     u8281:
 11444  001356  EFB3  F009         	goto	l8052
 11445  00135A                     u8280:
 11446  00135A  90D8               	bcf	status,0,c
 11447  00135C  3043               	rrcf	___fladd@grs^0,w,c
 11448  00135E  0901               	iorlw	1
 11449  001360  6E43               	movwf	___fladd@grs^0,c
 11450  001362  EFB5  F009         	goto	l8054
 11451  001366                     l8052:
 11452  001366  90D8               	bcf	status,0,c
 11453  001368  3243               	rrcf	___fladd@grs^0,f,c
 11454  00136A                     l8054:
 11455  00136A  A034               	btfss	___fladd@b^0,0,c
 11456  00136C  EFBA  F009         	goto	u8291
 11457  001370  EFBC  F009         	goto	u8290
 11458  001374                     u8291:
 11459  001374  EFBD  F009         	goto	l8058
 11460  001378                     u8290:
 11461  001378  8E43               	bsf	___fladd@grs^0,7,c
 11462  00137A                     l8058:
 11463  00137A  3437               	rlcf	(___fladd@b+3)^0,w,c
 11464  00137C  3237               	rrcf	(___fladd@b+3)^0,f,c
 11465  00137E  3236               	rrcf	(___fladd@b+2)^0,f,c
 11466  001380  3235               	rrcf	(___fladd@b+1)^0,f,c
 11467  001382  3234               	rrcf	___fladd@b^0,f,c
 11468  001384  2A42               	incf	___fladd@bexp^0,f,c
 11469  001386  EF52  F00A         	goto	l8098
 11470  00138A                     l8062:
 11471  00138A  5038               	movf	___fladd@a^0,w,c
 11472  00138C  5C34               	subwf	___fladd@b^0,w,c
 11473  00138E  5039               	movf	(___fladd@a+1)^0,w,c
 11474  001390  5835               	subwfb	(___fladd@b+1)^0,w,c
 11475  001392  503A               	movf	(___fladd@a+2)^0,w,c
 11476  001394  5836               	subwfb	(___fladd@b+2)^0,w,c
 11477  001396  5037               	movf	(___fladd@b+3)^0,w,c
 11478  001398  0A80               	xorlw	128
 11479  00139A  6E3C               	movwf	??___fladd^0,c
 11480  00139C  503B               	movf	(___fladd@a+3)^0,w,c
 11481  00139E  0A80               	xorlw	128
 11482  0013A0  583C               	subwfb	??___fladd^0,w,c
 11483  0013A2  B0D8               	btfsc	status,0,c
 11484  0013A4  EFD6  F009         	goto	u8301
 11485  0013A8  EFD8  F009         	goto	u8300
 11486  0013AC                     u8301:
 11487  0013AC  EF03  F00A         	goto	l8072
 11488  0013B0                     u8300:
 11489  0013B0  5034               	movf	___fladd@b^0,w,c
 11490  0013B2  5C38               	subwf	___fladd@a^0,w,c
 11491  0013B4  6E3C               	movwf	??___fladd^0,c
 11492  0013B6  5035               	movf	(___fladd@b+1)^0,w,c
 11493  0013B8  5839               	subwfb	(___fladd@a+1)^0,w,c
 11494  0013BA  6E3D               	movwf	(??___fladd+1)^0,c
 11495  0013BC  5036               	movf	(___fladd@b+2)^0,w,c
 11496  0013BE  583A               	subwfb	(___fladd@a+2)^0,w,c
 11497  0013C0  6E3E               	movwf	(??___fladd+2)^0,c
 11498  0013C2  5037               	movf	(___fladd@b+3)^0,w,c
 11499  0013C4  583B               	subwfb	(___fladd@a+3)^0,w,c
 11500  0013C6  6E3F               	movwf	(??___fladd+3)^0,c
 11501  0013C8  0EFF               	movlw	255
 11502  0013CA  243C               	addwf	??___fladd^0,w,c
 11503  0013CC  6E34               	movwf	___fladd@b^0,c
 11504  0013CE  0EFF               	movlw	255
 11505  0013D0  203D               	addwfc	(??___fladd+1)^0,w,c
 11506  0013D2  6E35               	movwf	(___fladd@b+1)^0,c
 11507  0013D4  0EFF               	movlw	255
 11508  0013D6  203E               	addwfc	(??___fladd+2)^0,w,c
 11509  0013D8  6E36               	movwf	(___fladd@b+2)^0,c
 11510  0013DA  0EFF               	movlw	255
 11511  0013DC  203F               	addwfc	(??___fladd+3)^0,w,c
 11512  0013DE  6E37               	movwf	(___fladd@b+3)^0,c
 11513  0013E0  0E80               	movlw	128
 11514  0013E2  1A40               	xorwf	___fladd@signs^0,f,c
 11515  0013E4  6C43               	negf	___fladd@grs^0,c
 11516  0013E6  5043               	movf	___fladd@grs^0,w,c
 11517  0013E8  A4D8               	btfss	status,2,c
 11518  0013EA  EFF9  F009         	goto	u8311
 11519  0013EE  EFFB  F009         	goto	u8310
 11520  0013F2                     u8311:
 11521  0013F2  EF0B  F00A         	goto	l1485
 11522  0013F6                     u8310:
 11523  0013F6  0E01               	movlw	1
 11524  0013F8  2634               	addwf	___fladd@b^0,f,c
 11525  0013FA  0E00               	movlw	0
 11526  0013FC  2235               	addwfc	(___fladd@b+1)^0,f,c
 11527  0013FE  2236               	addwfc	(___fladd@b+2)^0,f,c
 11528  001400  2237               	addwfc	(___fladd@b+3)^0,f,c
 11529  001402  EF0B  F00A         	goto	l1485
 11530  001406                     l8072:
 11531  001406  5038               	movf	___fladd@a^0,w,c
 11532  001408  5E34               	subwf	___fladd@b^0,f,c
 11533  00140A  5039               	movf	(___fladd@a+1)^0,w,c
 11534  00140C  5A35               	subwfb	(___fladd@b+1)^0,f,c
 11535  00140E  503A               	movf	(___fladd@a+2)^0,w,c
 11536  001410  5A36               	subwfb	(___fladd@b+2)^0,f,c
 11537  001412  503B               	movf	(___fladd@a+3)^0,w,c
 11538  001414  5A37               	subwfb	(___fladd@b+3)^0,f,c
 11539  001416                     l1485:
 11540  001416  5034               	movf	___fladd@b^0,w,c
 11541  001418  1035               	iorwf	(___fladd@b+1)^0,w,c
 11542  00141A  1036               	iorwf	(___fladd@b+2)^0,w,c
 11543  00141C  1037               	iorwf	(___fladd@b+3)^0,w,c
 11544  00141E  A4D8               	btfss	status,2,c
 11545  001420  EF14  F00A         	goto	u8321
 11546  001424  EF16  F00A         	goto	u8320
 11547  001428                     u8321:
 11548  001428  EF4B  F00A         	goto	l8096
 11549  00142C                     u8320:
 11550  00142C  5043               	movf	___fladd@grs^0,w,c
 11551  00142E  A4D8               	btfss	status,2,c
 11552  001430  EF1C  F00A         	goto	u8331
 11553  001434  EF1E  F00A         	goto	u8330
 11554  001438                     u8331:
 11555  001438  EF4B  F00A         	goto	l8096
 11556  00143C                     u8330:
 11557  00143C  0E00               	movlw	0
 11558  00143E  6E34               	movwf	?___fladd^0,c
 11559  001440  0E00               	movlw	0
 11560  001442  6E35               	movwf	(?___fladd+1)^0,c
 11561  001444  0E00               	movlw	0
 11562  001446  6E36               	movwf	(?___fladd+2)^0,c
 11563  001448  0E00               	movlw	0
 11564  00144A  6E37               	movwf	(?___fladd+3)^0,c
 11565  00144C  EFE6  F00A         	goto	l1477
 11566  001450                     l8080:
 11567  001450  90D8               	bcf	status,0,c
 11568  001452  3634               	rlcf	___fladd@b^0,f,c
 11569  001454  3635               	rlcf	(___fladd@b+1)^0,f,c
 11570  001456  3636               	rlcf	(___fladd@b+2)^0,f,c
 11571  001458  3637               	rlcf	(___fladd@b+3)^0,f,c
 11572  00145A  AE43               	btfss	___fladd@grs^0,7,c
 11573  00145C  EF32  F00A         	goto	u8341
 11574  001460  EF34  F00A         	goto	u8340
 11575  001464                     u8341:
 11576  001464  EF35  F00A         	goto	l8086
 11577  001468                     u8340:
 11578  001468  8034               	bsf	___fladd@b^0,0,c
 11579  00146A                     l8086:
 11580  00146A  A043               	btfss	___fladd@grs^0,0,c
 11581  00146C  EF3A  F00A         	goto	u8351
 11582  001470  EF3C  F00A         	goto	u8350
 11583  001474                     u8351:
 11584  001474  EF40  F00A         	goto	l8090
 11585  001478                     u8350:
 11586  001478  80D8               	bsf	status,0,c
 11587  00147A  3643               	rlcf	___fladd@grs^0,f,c
 11588  00147C  EF42  F00A         	goto	l8092
 11589  001480                     l8090:
 11590  001480  90D8               	bcf	status,0,c
 11591  001482  3643               	rlcf	___fladd@grs^0,f,c
 11592  001484                     l8092:
 11593  001484  5042               	movf	___fladd@bexp^0,w,c
 11594  001486  B4D8               	btfsc	status,2,c
 11595  001488  EF48  F00A         	goto	u8361
 11596  00148C  EF4A  F00A         	goto	u8360
 11597  001490                     u8361:
 11598  001490  EF4B  F00A         	goto	l8096
 11599  001494                     u8360:
 11600  001494  0642               	decf	___fladd@bexp^0,f,c
 11601  001496                     l8096:
 11602  001496  AE36               	btfss	(___fladd@b+2)^0,7,c
 11603  001498  EF50  F00A         	goto	u8371
 11604  00149C  EF52  F00A         	goto	u8370
 11605  0014A0                     u8371:
 11606  0014A0  EF28  F00A         	goto	l8080
 11607  0014A4                     u8370:
 11608  0014A4                     l8098:
 11609  0014A4  0E00               	movlw	0
 11610  0014A6  6E41               	movwf	___fladd@aexp^0,c
 11611  0014A8  AE43               	btfss	___fladd@grs^0,7,c
 11612  0014AA  EF59  F00A         	goto	u8381
 11613  0014AE  EF5B  F00A         	goto	u8380
 11614  0014B2                     u8381:
 11615  0014B2  EF73  F00A         	goto	l1494
 11616  0014B6                     u8380:
 11617  0014B6  C043  F03C         	movff	___fladd@grs,??___fladd
 11618  0014BA  0E7F               	movlw	127
 11619  0014BC  163C               	andwf	??___fladd^0,f,c
 11620  0014BE  B4D8               	btfsc	status,2,c
 11621  0014C0  EF64  F00A         	goto	u8391
 11622  0014C4  EF66  F00A         	goto	u8390
 11623  0014C8                     u8391:
 11624  0014C8  EF6A  F00A         	goto	l1495
 11625  0014CC                     u8390:
 11626  0014CC                     l8104:
 11627  0014CC  0E01               	movlw	1
 11628  0014CE  6E41               	movwf	___fladd@aexp^0,c
 11629  0014D0  EF73  F00A         	goto	l1494
 11630  0014D4                     l1495:
 11631  0014D4  A034               	btfss	___fladd@b^0,0,c
 11632  0014D6  EF6F  F00A         	goto	u8401
 11633  0014DA  EF71  F00A         	goto	u8400
 11634  0014DE                     u8401:
 11635  0014DE  EF73  F00A         	goto	l1494
 11636  0014E2                     u8400:
 11637  0014E2  EF66  F00A         	goto	l8104
 11638  0014E6                     l1494:
 11639  0014E6  5041               	movf	___fladd@aexp^0,w,c
 11640  0014E8  B4D8               	btfsc	status,2,c
 11641  0014EA  EF79  F00A         	goto	u8411
 11642  0014EE  EF7B  F00A         	goto	u8410
 11643  0014F2                     u8411:
 11644  0014F2  EFA6  F00A         	goto	l8116
 11645  0014F6                     u8410:
 11646  0014F6  0E01               	movlw	1
 11647  0014F8  2634               	addwf	___fladd@b^0,f,c
 11648  0014FA  0E00               	movlw	0
 11649  0014FC  2235               	addwfc	(___fladd@b+1)^0,f,c
 11650  0014FE  2236               	addwfc	(___fladd@b+2)^0,f,c
 11651  001500  2237               	addwfc	(___fladd@b+3)^0,f,c
 11652  001502  A037               	btfss	(___fladd@b+3)^0,0,c
 11653  001504  EF86  F00A         	goto	u8421
 11654  001508  EF88  F00A         	goto	u8420
 11655  00150C                     u8421:
 11656  00150C  EFA6  F00A         	goto	l8116
 11657  001510                     u8420:
 11658  001510  C034  F03C         	movff	___fladd@b,??___fladd
 11659  001514  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 11660  001518  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 11661  00151C  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 11662  001520  343F               	rlcf	(??___fladd+3)^0,w,c
 11663  001522  323F               	rrcf	(??___fladd+3)^0,f,c
 11664  001524  323E               	rrcf	(??___fladd+2)^0,f,c
 11665  001526  323D               	rrcf	(??___fladd+1)^0,f,c
 11666  001528  323C               	rrcf	??___fladd^0,f,c
 11667  00152A  C03C  F034         	movff	??___fladd,___fladd@b
 11668  00152E  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 11669  001532  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 11670  001536  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 11671  00153A  2842               	incf	___fladd@bexp^0,w,c
 11672  00153C  B4D8               	btfsc	status,2,c
 11673  00153E  EFA3  F00A         	goto	u8431
 11674  001542  EFA5  F00A         	goto	u8430
 11675  001546                     u8431:
 11676  001546  EFA6  F00A         	goto	l8116
 11677  00154A                     u8430:
 11678  00154A  2A42               	incf	___fladd@bexp^0,f,c
 11679  00154C                     l8116:
 11680  00154C  2842               	incf	___fladd@bexp^0,w,c
 11681  00154E  B4D8               	btfsc	status,2,c
 11682  001550  EFAC  F00A         	goto	u8441
 11683  001554  EFAE  F00A         	goto	u8440
 11684  001558                     u8441:
 11685  001558  EFB6  F00A         	goto	l8120
 11686  00155C                     u8440:
 11687  00155C  5042               	movf	___fladd@bexp^0,w,c
 11688  00155E  A4D8               	btfss	status,2,c
 11689  001560  EFB4  F00A         	goto	u8451
 11690  001564  EFB6  F00A         	goto	u8450
 11691  001568                     u8451:
 11692  001568  EFC8  F00A         	goto	l8124
 11693  00156C                     u8450:
 11694  00156C                     l8120:
 11695  00156C  0E00               	movlw	0
 11696  00156E  6E34               	movwf	___fladd@b^0,c
 11697  001570  0E00               	movlw	0
 11698  001572  6E35               	movwf	(___fladd@b+1)^0,c
 11699  001574  0E00               	movlw	0
 11700  001576  6E36               	movwf	(___fladd@b+2)^0,c
 11701  001578  0E00               	movlw	0
 11702  00157A  6E37               	movwf	(___fladd@b+3)^0,c
 11703  00157C  5042               	movf	___fladd@bexp^0,w,c
 11704  00157E  A4D8               	btfss	status,2,c
 11705  001580  EFC4  F00A         	goto	u8461
 11706  001584  EFC6  F00A         	goto	u8460
 11707  001588                     u8461:
 11708  001588  EFC8  F00A         	goto	l8124
 11709  00158C                     u8460:
 11710  00158C  0E00               	movlw	0
 11711  00158E  6E40               	movwf	___fladd@signs^0,c
 11712  001590                     l8124:
 11713  001590  A042               	btfss	___fladd@bexp^0,0,c
 11714  001592  EFCD  F00A         	goto	u8471
 11715  001596  EFCF  F00A         	goto	u8470
 11716  00159A                     u8471:
 11717  00159A  EFD2  F00A         	goto	l8128
 11718  00159E                     u8470:
 11719  00159E  8E36               	bsf	(___fladd@b+2)^0,7,c
 11720  0015A0  EFD3  F00A         	goto	l8130
 11721  0015A4                     l8128:
 11722  0015A4  9E36               	bcf	(___fladd@b+2)^0,7,c
 11723  0015A6                     l8130:
 11724  0015A6  90D8               	bcf	status,0,c
 11725  0015A8  3042               	rrcf	___fladd@bexp^0,w,c
 11726  0015AA  6E37               	movwf	(___fladd@b+3)^0,c
 11727  0015AC  AE40               	btfss	___fladd@signs^0,7,c
 11728  0015AE  EFDB  F00A         	goto	u8481
 11729  0015B2  EFDD  F00A         	goto	u8480
 11730  0015B6                     u8481:
 11731  0015B6  EFDE  F00A         	goto	l8136
 11732  0015BA                     u8480:
 11733  0015BA  8E37               	bsf	(___fladd@b+3)^0,7,c
 11734  0015BC                     l8136:
 11735  0015BC  C034  F034         	movff	___fladd@b,?___fladd
 11736  0015C0  C035  F035         	movff	___fladd@b+1,?___fladd+1
 11737  0015C4  C036  F036         	movff	___fladd@b+2,?___fladd+2
 11738  0015C8  C037  F037         	movff	___fladd@b+3,?___fladd+3
 11739  0015CC                     l1477:
 11740  0015CC  0012               	return		;funcret
 11741  0015CE                     __end_of___fladd:
 11742                           	opt callstack 0
 11743                           
 11744 ;; *************** function _hayCruce *****************
 11745 ;; Defined at:
 11746 ;;		line 729 in file "main.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 11749 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 11750 ;;  investigando    1   65[COMRAM] unsigned char 
 11751 ;; Auto vars:     Size  Location     Type
 11752 ;;  contCaminos     1   66[COMRAM] unsigned char 
 11753 ;; Return value:  Size  Location     Type
 11754 ;;                  1    wreg      unsigned char 
 11755 ;; Registers used:
 11756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11757 ;; Tracked objects:
 11758 ;;		On entry : 0/0
 11759 ;;		On exit  : 0/0
 11760 ;;		Unchanged: 0/0
 11761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11762 ;;      Params:         3       0       0       0       0       0       0       0       0
 11763 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11764 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11765 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11766 ;;Total ram usage:        4 bytes
 11767 ;; Hardware stack levels used:    1
 11768 ;; Hardware stack levels required when called:    3
 11769 ;; This function calls:
 11770 ;;		___flge
 11771 ;; This function is called by:
 11772 ;;		_comportamientoBasico
 11773 ;; This function uses a non-reentrant model
 11774 ;;
 11775                           
 11776                           	psect	text47
 11777  003612                     __ptext47:
 11778                           	opt callstack 0
 11779  003612                     _hayCruce:
 11780                           	opt callstack 26
 11781  003612                     
 11782                           ;main.c: 731:     T_UBYTE contCaminos = 0;
 11783  003612  0E00               	movlw	0
 11784  003614  6E43               	movwf	hayCruce@contCaminos^0,c
 11785                           
 11786                           ;main.c: 733:     paredEnfrente = 0;
 11787  003616  0E00               	movlw	0
 11788  003618  0101               	movlb	1	; () banked
 11789  00361A  6F38               	movwf	_paredEnfrente& (0+255),b
 11790                           
 11791                           ;main.c: 734:     paredDerecha = 0;
 11792  00361C  0E00               	movlw	0
 11793  00361E  6F37               	movwf	_paredDerecha& (0+255),b
 11794                           
 11795                           ;main.c: 735:     paredIzquierda = 0;
 11796  003620  0E00               	movlw	0
 11797  003622  6F36               	movwf	_paredIzquierda& (0+255),b
 11798  003624                     
 11799                           ; BSR set to: 1
 11800                           ;main.c: 738:     if (sensorIzquierda > 25) {
 11801  003624  0E00               	movlw	0
 11802  003626  6E34               	movwf	___flge@ff1^0,c
 11803  003628  0E00               	movlw	0
 11804  00362A  6E35               	movwf	(___flge@ff1+1)^0,c
 11805  00362C  0EC8               	movlw	200
 11806  00362E  6E36               	movwf	(___flge@ff1+2)^0,c
 11807  003630  0E41               	movlw	65
 11808  003632  6E37               	movwf	(___flge@ff1+3)^0,c
 11809  003634  C055  F038         	movff	_sensorIzquierda,___flge@ff2
 11810  003638  C056  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 11811  00363C  C057  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 11812  003640  C058  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 11813  003644  ECC0  F01F         	call	___flge	;wreg free
 11814  003648  B0D8               	btfsc	status,0,c
 11815  00364A  EF29  F01B         	goto	u11311
 11816  00364E  EF2B  F01B         	goto	u11310
 11817  003652                     u11311:
 11818  003652  EF2F  F01B         	goto	l9970
 11819  003656                     u11310:
 11820  003656                     
 11821                           ;main.c: 739:         paredIzquierda = 1;
 11822  003656  0E01               	movlw	1
 11823  003658  0101               	movlb	1	; () banked
 11824  00365A  6F36               	movwf	_paredIzquierda& (0+255),b
 11825  00365C                     
 11826                           ; BSR set to: 1
 11827                           ;main.c: 740:         contCaminos++;
 11828  00365C  2A43               	incf	hayCruce@contCaminos^0,f,c
 11829  00365E                     l9970:
 11830                           
 11831                           ;main.c: 743:     if (sensorDerecha > 25) {
 11832  00365E  0E00               	movlw	0
 11833  003660  6E34               	movwf	___flge@ff1^0,c
 11834  003662  0E00               	movlw	0
 11835  003664  6E35               	movwf	(___flge@ff1+1)^0,c
 11836  003666  0EC8               	movlw	200
 11837  003668  6E36               	movwf	(___flge@ff1+2)^0,c
 11838  00366A  0E41               	movlw	65
 11839  00366C  6E37               	movwf	(___flge@ff1+3)^0,c
 11840  00366E  C0F9  F038         	movff	_sensorDerecha,___flge@ff2
 11841  003672  C0FA  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 11842  003676  C0FB  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 11843  00367A  C0FC  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 11844  00367E  ECC0  F01F         	call	___flge	;wreg free
 11845  003682  B0D8               	btfsc	status,0,c
 11846  003684  EF46  F01B         	goto	u11321
 11847  003688  EF48  F01B         	goto	u11320
 11848  00368C                     u11321:
 11849  00368C  EF4C  F01B         	goto	l9976
 11850  003690                     u11320:
 11851  003690                     
 11852                           ;main.c: 744:         paredDerecha = 1;
 11853  003690  0E01               	movlw	1
 11854  003692  0101               	movlb	1	; () banked
 11855  003694  6F37               	movwf	_paredDerecha& (0+255),b
 11856  003696                     
 11857                           ; BSR set to: 1
 11858                           ;main.c: 745:         contCaminos++;
 11859  003696  2A43               	incf	hayCruce@contCaminos^0,f,c
 11860  003698                     l9976:
 11861                           
 11862                           ;main.c: 748:     if (sensorEnfrente > 30) {
 11863  003698  0E00               	movlw	0
 11864  00369A  6E34               	movwf	___flge@ff1^0,c
 11865  00369C  0E00               	movlw	0
 11866  00369E  6E35               	movwf	(___flge@ff1+1)^0,c
 11867  0036A0  0EF0               	movlw	240
 11868  0036A2  6E36               	movwf	(___flge@ff1+2)^0,c
 11869  0036A4  0E41               	movlw	65
 11870  0036A6  6E37               	movwf	(___flge@ff1+3)^0,c
 11871  0036A8  C124  F038         	movff	_sensorEnfrente,___flge@ff2
 11872  0036AC  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 11873  0036B0  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 11874  0036B4  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 11875  0036B8  ECC0  F01F         	call	___flge	;wreg free
 11876  0036BC  B0D8               	btfsc	status,0,c
 11877  0036BE  EF63  F01B         	goto	u11331
 11878  0036C2  EF65  F01B         	goto	u11330
 11879  0036C6                     u11331:
 11880  0036C6  EF69  F01B         	goto	l9982
 11881  0036CA                     u11330:
 11882  0036CA                     
 11883                           ;main.c: 749:         paredEnfrente = 1;
 11884  0036CA  0E01               	movlw	1
 11885  0036CC  0101               	movlb	1	; () banked
 11886  0036CE  6F38               	movwf	_paredEnfrente& (0+255),b
 11887  0036D0                     
 11888                           ; BSR set to: 1
 11889                           ;main.c: 750:         contCaminos++;
 11890  0036D0  2A43               	incf	hayCruce@contCaminos^0,f,c
 11891  0036D2                     l9982:
 11892                           
 11893                           ;main.c: 753:     if (contCaminos > 1 && !investigandoCruce) {
 11894  0036D2  0E01               	movlw	1
 11895  0036D4  6443               	cpfsgt	hayCruce@contCaminos^0,c
 11896  0036D6  EF6F  F01B         	goto	u11341
 11897  0036DA  EF71  F01B         	goto	u11340
 11898  0036DE                     u11341:
 11899  0036DE  EFC4  F01B         	goto	l10042
 11900  0036E2                     u11340:
 11901  0036E2  5042               	movf	hayCruce@investigandoCruce^0,w,c
 11902  0036E4  A4D8               	btfss	status,2,c
 11903  0036E6  EF77  F01B         	goto	u11351
 11904  0036EA  EF79  F01B         	goto	u11350
 11905  0036EE                     u11351:
 11906  0036EE  EFC4  F01B         	goto	l10042
 11907  0036F2                     u11350:
 11908  0036F2                     
 11909                           ;main.c: 764:             if (paredDerecha)
 11910  0036F2  0101               	movlb	1	; () banked
 11911  0036F4  5137               	movf	_paredDerecha& (0+255),w,b
 11912  0036F6  B4D8               	btfsc	status,2,c
 11913  0036F8  EF80  F01B         	goto	u11361
 11914  0036FC  EF82  F01B         	goto	u11360
 11915  003700                     u11361:
 11916  003700  EF8C  F01B         	goto	l9998
 11917  003704                     u11360:
 11918  003704                     
 11919                           ; BSR set to: 1
 11920                           ;main.c: 765:                 caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1] = 1;
 11921  003704  EE20 F002          	lfsr	2,2
 11922  003708  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 11923  00370A  26D9               	addwf	fsr2l,f,c
 11924  00370C  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 11925  00370E  22DA               	addwfc	fsr2h,f,c
 11926  003710  0E01               	movlw	1
 11927  003712  6EDF               	movwf	indf2,c
 11928  003714  EF94  F01B         	goto	l10018
 11929  003718                     l9998:
 11930                           
 11931                           ; BSR set to: 1
 11932                           ;main.c: 767:                 caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1] = 0;
 11933  003718  EE20 F002          	lfsr	2,2
 11934  00371C  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 11935  00371E  26D9               	addwf	fsr2l,f,c
 11936  003720  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 11937  003722  22DA               	addwfc	fsr2h,f,c
 11938  003724  0E00               	movlw	0
 11939  003726  6EDF               	movwf	indf2,c
 11940  003728                     l10018:
 11941                           
 11942                           ; BSR set to: 1
 11943                           ;main.c: 794:             if (paredIzquierda)
 11944  003728  5136               	movf	_paredIzquierda& (0+255),w,b
 11945  00372A  B4D8               	btfsc	status,2,c
 11946  00372C  EF9A  F01B         	goto	u11371
 11947  003730  EF9C  F01B         	goto	u11370
 11948  003734                     u11371:
 11949  003734  EFA6  F01B         	goto	l10022
 11950  003738                     u11370:
 11951  003738                     
 11952                           ; BSR set to: 1
 11953                           ;main.c: 795:                 caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1] = 1;
 11954  003738  EE20 F001          	lfsr	2,1
 11955  00373C  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 11956  00373E  26D9               	addwf	fsr2l,f,c
 11957  003740  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 11958  003742  22DA               	addwfc	fsr2h,f,c
 11959  003744  0E01               	movlw	1
 11960  003746  6EDF               	movwf	indf2,c
 11961  003748  EFAE  F01B         	goto	l10024
 11962  00374C                     l10022:
 11963                           
 11964                           ; BSR set to: 1
 11965                           ;main.c: 797:                 caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1] = 0;
 11966  00374C  EE20 F001          	lfsr	2,1
 11967  003750  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 11968  003752  26D9               	addwf	fsr2l,f,c
 11969  003754  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 11970  003756  22DA               	addwfc	fsr2h,f,c
 11971  003758  0E00               	movlw	0
 11972  00375A  6EDF               	movwf	indf2,c
 11973  00375C                     l10024:
 11974                           
 11975                           ; BSR set to: 1
 11976                           ;main.c: 803:             if (paredEnfrente)
 11977  00375C  5138               	movf	_paredEnfrente& (0+255),w,b
 11978  00375E  B4D8               	btfsc	status,2,c
 11979  003760  EFB4  F01B         	goto	u11381
 11980  003764  EFB6  F01B         	goto	u11380
 11981  003768                     u11381:
 11982  003768  EFBE  F01B         	goto	l10028
 11983  00376C                     u11380:
 11984  00376C                     
 11985                           ; BSR set to: 1
 11986                           ;main.c: 804:                 caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = 1;
 11987  00376C  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 11988  003770  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 11989  003774  0E01               	movlw	1
 11990  003776  6EDF               	movwf	indf2,c
 11991  003778  EFC4  F01B         	goto	l10042
 11992  00377C                     l10028:
 11993                           
 11994                           ; BSR set to: 1
 11995                           ;main.c: 806:                 caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = 0;
 11996  00377C  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 11997  003780  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 11998  003784  0E00               	movlw	0
 11999  003786  6EDF               	movwf	indf2,c
 12000  003788                     l10042:
 12001                           
 12002                           ;main.c: 829:     if (contCaminos > 1)
 12003  003788  0E01               	movlw	1
 12004  00378A  6443               	cpfsgt	hayCruce@contCaminos^0,c
 12005  00378C  EFCA  F01B         	goto	u11391
 12006  003790  EFCC  F01B         	goto	u11390
 12007  003794                     u11391:
 12008  003794  EFCF  F01B         	goto	l10050
 12009  003798                     u11390:
 12010  003798                     
 12011                           ;main.c: 830:         return 1;
 12012  003798  0E01               	movlw	1
 12013  00379A  EFD0  F01B         	goto	l525
 12014  00379E                     l10050:
 12015                           
 12016                           ;main.c: 833:         return 0;
 12017  00379E  0E00               	movlw	0
 12018  0037A0                     l525:
 12019  0037A0  0012               	return		;funcret
 12020  0037A2                     __end_of_hayCruce:
 12021                           	opt callstack 0
 12022                           
 12023 ;; *************** function _finalizarRecorrido *****************
 12024 ;; Defined at:
 12025 ;;		line 475 in file "main.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;		None
 12028 ;; Auto vars:     Size  Location     Type
 12029 ;;		None
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  1    wreg      void 
 12032 ;; Registers used:
 12033 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12039 ;;      Params:         0       0       0       0       0       0       0       0       0
 12040 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12041 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12042 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12043 ;;Total ram usage:        0 bytes
 12044 ;; Hardware stack levels used:    1
 12045 ;; Hardware stack levels required when called:    8
 12046 ;; This function calls:
 12047 ;;		_forzarEspejeo
 12048 ;;		_forzarParoAuto
 12049 ;; This function is called by:
 12050 ;;		_comportamientoBasico
 12051 ;;		_probarPID
 12052 ;;		_probarCruceT
 12053 ;; This function uses a non-reentrant model
 12054 ;;
 12055                           
 12056                           	psect	text48
 12057  0054FE                     __ptext48:
 12058                           	opt callstack 0
 12059  0054FE                     _finalizarRecorrido:
 12060                           	opt callstack 21
 12061  0054FE                     
 12062                           ;main.c: 476:     forzarEspejeo();
 12063  0054FE  EC2C  F029         	call	_forzarEspejeo	;wreg free
 12064  005502                     
 12065                           ;main.c: 477:     forzarParoAuto();
 12066  005502  EC67  F02A         	call	_forzarParoAuto	;wreg free
 12067  005506                     
 12068                           ;main.c: 478:     pausa = 1;
 12069  005506  0E01               	movlw	1
 12070  005508  0101               	movlb	1	; () banked
 12071  00550A  6FD3               	movwf	_pausa& (0+255),b
 12072  00550C                     
 12073                           ; BSR set to: 1
 12074  00550C  0012               	return		;funcret
 12075  00550E                     __end_of_finalizarRecorrido:
 12076                           	opt callstack 0
 12077                           
 12078 ;; *************** function _forzarEspejeo *****************
 12079 ;; Defined at:
 12080 ;;		line 551 in file "main.c"
 12081 ;; Parameters:    Size  Location     Type
 12082 ;;		None
 12083 ;; Auto vars:     Size  Location     Type
 12084 ;;		None
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  1    wreg      void 
 12087 ;; Registers used:
 12088 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12094 ;;      Params:         0       0       0       0       0       0       0       0       0
 12095 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12096 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12097 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12098 ;;Total ram usage:        0 bytes
 12099 ;; Hardware stack levels used:    1
 12100 ;; Hardware stack levels required when called:    7
 12101 ;; This function calls:
 12102 ;;		___flge
 12103 ;;		_forzarEspejeoDerecha
 12104 ;;		_forzarEspejeoIzquierda
 12105 ;; This function is called by:
 12106 ;;		_comportamientoBasico
 12107 ;;		_finalizarRecorrido
 12108 ;;		_moverCarrito
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           	psect	text49
 12113  005258                     __ptext49:
 12114                           	opt callstack 0
 12115  005258                     _forzarEspejeo:
 12116                           	opt callstack 21
 12117  005258                     
 12118                           ;main.c: 553:     if (sensorIzquierda > sensorDerecha)
 12119  005258  C0F9  F034         	movff	_sensorDerecha,___flge@ff1
 12120  00525C  C0FA  F035         	movff	_sensorDerecha+1,___flge@ff1+1
 12121  005260  C0FB  F036         	movff	_sensorDerecha+2,___flge@ff1+2
 12122  005264  C0FC  F037         	movff	_sensorDerecha+3,___flge@ff1+3
 12123  005268  C055  F038         	movff	_sensorIzquierda,___flge@ff2
 12124  00526C  C056  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 12125  005270  C057  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 12126  005274  C058  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 12127  005278  ECC0  F01F         	call	___flge	;wreg free
 12128  00527C  B0D8               	btfsc	status,0,c
 12129  00527E  EF43  F029         	goto	u11011
 12130  005282  EF45  F029         	goto	u11010
 12131  005286                     u11011:
 12132  005286  EF49  F029         	goto	l9598
 12133  00528A                     u11010:
 12134  00528A                     
 12135                           ;main.c: 554:         forzarEspejeoIzquierda();
 12136  00528A  EC4D  F02A         	call	_forzarEspejeoIzquierda	;wreg free
 12137  00528E  EF4B  F029         	goto	l437
 12138  005292                     l9598:
 12139                           
 12140                           ;main.c: 556:         forzarEspejeoDerecha();
 12141  005292  EC5A  F02A         	call	_forzarEspejeoDerecha	;wreg free
 12142  005296                     l437:
 12143  005296  0012               	return		;funcret
 12144  005298                     __end_of_forzarEspejeo:
 12145                           	opt callstack 0
 12146                           
 12147 ;; *************** function _forzarEspejeoIzquierda *****************
 12148 ;; Defined at:
 12149 ;;		line 531 in file "main.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;		None
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;		None
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  1    wreg      void 
 12156 ;; Registers used:
 12157 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12158 ;; Tracked objects:
 12159 ;;		On entry : 0/0
 12160 ;;		On exit  : 0/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12163 ;;      Params:         0       0       0       0       0       0       0       0       0
 12164 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12165 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12166 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12167 ;;Total ram usage:        0 bytes
 12168 ;; Hardware stack levels used:    1
 12169 ;; Hardware stack levels required when called:    6
 12170 ;; This function calls:
 12171 ;;		_forzarGiroIzquierda
 12172 ;;		_forzarParoAuto
 12173 ;;		_forzarReversa
 12174 ;;		_velocidadEstandar
 12175 ;; This function is called by:
 12176 ;;		_forzarEspejeo
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           	psect	text50
 12181  00549A                     __ptext50:
 12182                           	opt callstack 0
 12183  00549A                     _forzarEspejeoIzquierda:
 12184                           	opt callstack 21
 12185  00549A                     
 12186                           ;main.c: 533:     forzarParoAuto();
 12187  00549A  EC67  F02A         	call	_forzarParoAuto	;wreg free
 12188  00549E                     
 12189                           ;main.c: 534:     velocidadEstandar();
 12190  00549E  ECF8  F029         	call	_velocidadEstandar	;wreg free
 12191  0054A2                     
 12192                           ;main.c: 535:     forzarReversa();
 12193  0054A2  EC1C  F02A         	call	_forzarReversa	;wreg free
 12194  0054A6                     
 12195                           ;main.c: 536:     forzarGiroIzquierda();
 12196  0054A6  EC2D  F02A         	call	_forzarGiroIzquierda	;wreg free
 12197  0054AA                     
 12198                           ;main.c: 537:     forzarReversa();
 12199  0054AA  EC1C  F02A         	call	_forzarReversa	;wreg free
 12200  0054AE                     
 12201                           ;main.c: 538:     forzarGiroIzquierda();
 12202  0054AE  EC2D  F02A         	call	_forzarGiroIzquierda	;wreg free
 12203  0054B2  0012               	return		;funcret
 12204  0054B4                     __end_of_forzarEspejeoIzquierda:
 12205                           	opt callstack 0
 12206                           
 12207 ;; *************** function _forzarGiroIzquierda *****************
 12208 ;; Defined at:
 12209 ;;		line 513 in file "main.c"
 12210 ;; Parameters:    Size  Location     Type
 12211 ;;		None
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;		None
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  1    wreg      void 
 12216 ;; Registers used:
 12217 ;;		wreg
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12223 ;;      Params:         0       0       0       0       0       0       0       0       0
 12224 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12225 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12226 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12227 ;;Total ram usage:        2 bytes
 12228 ;; Hardware stack levels used:    1
 12229 ;; Hardware stack levels required when called:    2
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		_forzarEspejeoIzquierda
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           	psect	text51
 12238  00545A                     __ptext51:
 12239                           	opt callstack 0
 12240  00545A                     _forzarGiroIzquierda:
 12241                           	opt callstack 24
 12242  00545A                     
 12243                           ;main.c: 514:     LATB4 = 0;
 12244  00545A  988A               	bcf	3978,4,c	;volatile
 12245                           
 12246                           ;main.c: 515:     LATB5 = 0;
 12247  00545C  9A8A               	bcf	3978,5,c	;volatile
 12248                           
 12249                           ;main.c: 516:     LATB6 = 1;
 12250  00545E  8C8A               	bsf	3978,6,c	;volatile
 12251                           
 12252                           ;main.c: 517:     LATB7 = 0;
 12253  005460  9E8A               	bcf	3978,7,c	;volatile
 12254  005462                     
 12255                           ;main.c: 518:     _delay((unsigned long)((410)*(4000000/4000.0)));
 12256  005462  0E03               	movlw	3
 12257  005464  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
 12258  005466  0E15               	movlw	21
 12259  005468  6E06               	movwf	??_forzarGiroIzquierda^0,c
 12260  00546A  0E74               	movlw	116
 12261  00546C                     u11947:
 12262  00546C  2EE8               	decfsz	wreg,f,c
 12263  00546E  D7FE               	bra	u11947
 12264  005470  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
 12265  005472  D7FC               	bra	u11947
 12266  005474  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
 12267  005476  D7FA               	bra	u11947
 12268  005478  0012               	return		;funcret
 12269  00547A                     __end_of_forzarGiroIzquierda:
 12270                           	opt callstack 0
 12271                           
 12272 ;; *************** function _forzarEspejeoDerecha *****************
 12273 ;; Defined at:
 12274 ;;		line 541 in file "main.c"
 12275 ;; Parameters:    Size  Location     Type
 12276 ;;		None
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;		None
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  1    wreg      void 
 12281 ;; Registers used:
 12282 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12283 ;; Tracked objects:
 12284 ;;		On entry : 0/0
 12285 ;;		On exit  : 0/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12288 ;;      Params:         0       0       0       0       0       0       0       0       0
 12289 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12290 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12291 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12292 ;;Total ram usage:        0 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:    6
 12295 ;; This function calls:
 12296 ;;		_forzarGiroDerecha
 12297 ;;		_forzarParoAuto
 12298 ;;		_forzarReversa
 12299 ;;		_velocidadEstandar
 12300 ;; This function is called by:
 12301 ;;		_forzarEspejeo
 12302 ;; This function uses a non-reentrant model
 12303 ;;
 12304                           
 12305                           	psect	text52
 12306  0054B4                     __ptext52:
 12307                           	opt callstack 0
 12308  0054B4                     _forzarEspejeoDerecha:
 12309                           	opt callstack 21
 12310  0054B4                     
 12311                           ;main.c: 543:     forzarParoAuto();
 12312  0054B4  EC67  F02A         	call	_forzarParoAuto	;wreg free
 12313  0054B8                     
 12314                           ;main.c: 544:     velocidadEstandar();
 12315  0054B8  ECF8  F029         	call	_velocidadEstandar	;wreg free
 12316  0054BC                     
 12317                           ;main.c: 545:     forzarReversa();
 12318  0054BC  EC1C  F02A         	call	_forzarReversa	;wreg free
 12319  0054C0                     
 12320                           ;main.c: 546:     forzarGiroDerecha();
 12321  0054C0  EC3D  F02A         	call	_forzarGiroDerecha	;wreg free
 12322  0054C4                     
 12323                           ;main.c: 547:     forzarReversa();
 12324  0054C4  EC1C  F02A         	call	_forzarReversa	;wreg free
 12325  0054C8                     
 12326                           ;main.c: 548:     forzarGiroDerecha();
 12327  0054C8  EC3D  F02A         	call	_forzarGiroDerecha	;wreg free
 12328  0054CC  0012               	return		;funcret
 12329  0054CE                     __end_of_forzarEspejeoDerecha:
 12330                           	opt callstack 0
 12331                           
 12332 ;; *************** function _velocidadEstandar *****************
 12333 ;; Defined at:
 12334 ;;		line 1282 in file "main.c"
 12335 ;; Parameters:    Size  Location     Type
 12336 ;;		None
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;		None
 12339 ;; Return value:  Size  Location     Type
 12340 ;;                  1    wreg      void 
 12341 ;; Registers used:
 12342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12343 ;; Tracked objects:
 12344 ;;		On entry : 0/0
 12345 ;;		On exit  : 0/0
 12346 ;;		Unchanged: 0/0
 12347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12348 ;;      Params:         0       0       0       0       0       0       0       0       0
 12349 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12350 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12351 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12352 ;;Total ram usage:        0 bytes
 12353 ;; Hardware stack levels used:    1
 12354 ;; Hardware stack levels required when called:    5
 12355 ;; This function calls:
 12356 ;;		_pwmDuty
 12357 ;; This function is called by:
 12358 ;;		_inicializarComportamientoBasico
 12359 ;;		_comportamientoBasico
 12360 ;;		_forzarEspejeoIzquierda
 12361 ;;		_forzarEspejeoDerecha
 12362 ;;		_regresarPuntoPartida
 12363 ;;		_regresarAlCruce
 12364 ;;		_recorrerCaminoEncontrado
 12365 ;;		_probarCruceT
 12366 ;; This function uses a non-reentrant model
 12367 ;;
 12368                           
 12369                           	psect	text53
 12370  0053F0                     __ptext53:
 12371                           	opt callstack 0
 12372  0053F0                     _velocidadEstandar:
 12373                           	opt callstack 24
 12374  0053F0                     
 12375                           ;main.c: 1284:     pwmDuty(100, 1);
 12376  0053F0  0E00               	movlw	0
 12377  0053F2  0100               	movlb	0	; () banked
 12378  0053F4  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 12379  0053F6  0E64               	movlw	100
 12380  0053F8  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 12381  0053FA  0E01               	movlw	1
 12382  0053FC  6F7E               	movwf	pwmDuty@channel& (0+255),b
 12383  0053FE  EC89  F018         	call	_pwmDuty	;wreg free
 12384                           
 12385                           ;main.c: 1285:     pwmDuty(100, 2);
 12386  005402  0E00               	movlw	0
 12387  005404  0100               	movlb	0	; () banked
 12388  005406  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
 12389  005408  0E64               	movlw	100
 12390  00540A  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
 12391  00540C  0E02               	movlw	2
 12392  00540E  6F7E               	movwf	pwmDuty@channel& (0+255),b
 12393  005410  EC89  F018         	call	_pwmDuty	;wreg free
 12394  005414  0012               	return		;funcret
 12395  005416                     __end_of_velocidadEstandar:
 12396                           	opt callstack 0
 12397                           
 12398 ;; *************** function _pwmDuty *****************
 12399 ;; Defined at:
 12400 ;;		line 20 in file "./pwm.h"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
 12403 ;;  channel         1   30[BANK0 ] unsigned char 
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;  duty            4   36[BANK0 ] long 
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      void 
 12408 ;; Registers used:
 12409 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12415 ;;      Params:         0       3       0       0       0       0       0       0       0
 12416 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12417 ;;      Temps:          0       5       0       0       0       0       0       0       0
 12418 ;;      Totals:         0      12       0       0       0       0       0       0       0
 12419 ;;Total ram usage:       12 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    4
 12422 ;; This function calls:
 12423 ;;		___fldiv
 12424 ;;		___flmul
 12425 ;;		___fltol
 12426 ;;		___xxtofl
 12427 ;;		_map
 12428 ;; This function is called by:
 12429 ;;		_PID
 12430 ;;		_velocidadEstandar
 12431 ;;		_velocidadBaja
 12432 ;; This function uses a non-reentrant model
 12433 ;;
 12434                           
 12435                           	psect	text54
 12436  003112                     __ptext54:
 12437                           	opt callstack 0
 12438  003112                     _pwmDuty:
 12439                           	opt callstack 24
 12440  003112                     
 12441                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
 12442  003112  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
 12443  003116  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
 12444  00311A  6A22               	clrf	(map@x+2)^0,c
 12445  00311C  6A23               	clrf	(map@x+3)^0,c
 12446  00311E  0E00               	movlw	0
 12447  003120  6E24               	movwf	map@in_min^0,c
 12448  003122  0E00               	movlw	0
 12449  003124  6E25               	movwf	(map@in_min+1)^0,c
 12450  003126  0E00               	movlw	0
 12451  003128  6E26               	movwf	(map@in_min+2)^0,c
 12452  00312A  0E00               	movlw	0
 12453  00312C  6E27               	movwf	(map@in_min+3)^0,c
 12454  00312E  0E64               	movlw	100
 12455  003130  6E28               	movwf	map@in_max^0,c
 12456  003132  0E00               	movlw	0
 12457  003134  6E29               	movwf	(map@in_max+1)^0,c
 12458  003136  0E00               	movlw	0
 12459  003138  6E2A               	movwf	(map@in_max+2)^0,c
 12460  00313A  0E00               	movlw	0
 12461  00313C  6E2B               	movwf	(map@in_max+3)^0,c
 12462  00313E  0E00               	movlw	0
 12463  003140  6E2C               	movwf	map@out_min^0,c
 12464  003142  0E00               	movlw	0
 12465  003144  6E2D               	movwf	(map@out_min+1)^0,c
 12466  003146  0E00               	movlw	0
 12467  003148  6E2E               	movwf	(map@out_min+2)^0,c
 12468  00314A  0E00               	movlw	0
 12469  00314C  6E2F               	movwf	(map@out_min+3)^0,c
 12470  00314E  0EFF               	movlw	255
 12471  003150  6E30               	movwf	map@out_max^0,c
 12472  003152  0E03               	movlw	3
 12473  003154  6E31               	movwf	(map@out_max+1)^0,c
 12474  003156  0E00               	movlw	0
 12475  003158  6E32               	movwf	(map@out_max+2)^0,c
 12476  00315A  0E00               	movlw	0
 12477  00315C  6E33               	movwf	(map@out_max+3)^0,c
 12478  00315E  EC52  F025         	call	_map	;wreg free
 12479  003162  C020  F084         	movff	?_map,pwmDuty@duty
 12480  003166  C021  F085         	movff	?_map+1,pwmDuty@duty+1
 12481  00316A  C022  F086         	movff	?_map+2,pwmDuty@duty+2
 12482  00316E  C023  F087         	movff	?_map+3,pwmDuty@duty+3
 12483  003172                     
 12484                           ;./pwm.h: 24:     if (duty < 1024) {
 12485  003172  0100               	movlb	0	; () banked
 12486  003174  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
 12487  003176  EFC9  F018         	goto	u9080
 12488  00317A  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
 12489  00317C  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
 12490  00317E  E107               	bnz	u9081
 12491  003180  0E04               	movlw	4
 12492  003182  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
 12493  003184  B0D8               	btfsc	status,0,c
 12494  003186  EFC7  F018         	goto	u9081
 12495  00318A  EFC9  F018         	goto	u9080
 12496  00318E                     u9081:
 12497  00318E  EF66  F019         	goto	l157
 12498  003192                     u9080:
 12499  003192                     
 12500                           ; BSR set to: 0
 12501                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
 12502  003192  0E00               	movlw	0
 12503  003194  6E1F               	movwf	___flmul@a^0,c
 12504  003196  0E00               	movlw	0
 12505  003198  6E20               	movwf	(___flmul@a+1)^0,c
 12506  00319A  0EFA               	movlw	250
 12507  00319C  6E21               	movwf	(___flmul@a+2)^0,c
 12508  00319E  0E43               	movlw	67
 12509  0031A0  6E22               	movwf	(___flmul@a+3)^0,c
 12510  0031A2  0E00               	movlw	0
 12511  0031A4  6E48               	movwf	___fldiv@a^0,c
 12512  0031A6  0EC0               	movlw	192
 12513  0031A8  6E49               	movwf	(___fldiv@a+1)^0,c
 12514  0031AA  0E7F               	movlw	127
 12515  0031AC  6E4A               	movwf	(___fldiv@a+2)^0,c
 12516  0031AE  0E44               	movlw	68
 12517  0031B0  6E4B               	movwf	(___fldiv@a+3)^0,c
 12518  0031B2  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
 12519  0031B6  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
 12520  0031BA  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
 12521  0031BE  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
 12522  0031C2  0E01               	movlw	1
 12523  0031C4  EC67  F019         	call	___xxtofl
 12524  0031C8  C00D  F044         	movff	?___xxtofl,___fldiv@b
 12525  0031CC  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
 12526  0031D0  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
 12527  0031D4  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
 12528  0031D8  EC16  F013         	call	___fldiv	;wreg free
 12529  0031DC  C044  F01B         	movff	?___fldiv,___flmul@b
 12530  0031E0  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
 12531  0031E4  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
 12532  0031E8  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
 12533  0031EC  EC28  F00F         	call	___flmul	;wreg free
 12534  0031F0  C01B  F072         	movff	?___flmul,___fltol@f1
 12535  0031F4  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
 12536  0031F8  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
 12537  0031FC  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
 12538  003200  EC3C  F01F         	call	___fltol	;wreg free
 12539  003204  C072  F084         	movff	?___fltol,pwmDuty@duty
 12540  003208  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
 12541  00320C  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
 12542  003210  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
 12543                           
 12544                           ;./pwm.h: 28:         switch (channel) {
 12545  003214  EF50  F019         	goto	l8510
 12546  003218                     l8504:
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
 12550  003218  0E02               	movlw	2
 12551  00321A  6F7F               	movwf	??_pwmDuty& (0+255),b
 12552  00321C  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 12553  003220  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 12554  003224  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 12555  003228  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 12556  00322C                     u9095:
 12557  00322C  677F               	tstfsz	??_pwmDuty& (0+255),b
 12558  00322E  EF1B  F019         	goto	u9096
 12559  003232  EF23  F019         	goto	u9097
 12560  003236                     u9096:
 12561  003236  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 12562  003238  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 12563  00323A  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 12564  00323C  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 12565  00323E  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 12566  003240  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 12567  003242  EF16  F019         	goto	u9095
 12568  003246                     u9097:
 12569  003246  0100               	movlb	0	; () banked
 12570  003248  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12571  00324A  6EBE               	movwf	190,c	;volatile
 12572                           
 12573                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
 12574  00324C  0ECF               	movlw	207
 12575  00324E  16BD               	andwf	189,f,c	;volatile
 12576                           
 12577                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
 12578  003250  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 12579  003252  0BF0               	andlw	240
 12580  003254  0B30               	andlw	48
 12581  003256  12BD               	iorwf	189,f,c	;volatile
 12582                           
 12583                           ;./pwm.h: 34:                 break;
 12584  003258  EF66  F019         	goto	l157
 12585  00325C                     l8506:
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
 12589  00325C  0E02               	movlw	2
 12590  00325E  6F7F               	movwf	??_pwmDuty& (0+255),b
 12591  003260  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
 12592  003264  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
 12593  003268  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
 12594  00326C  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
 12595  003270                     u9105:
 12596  003270  677F               	tstfsz	??_pwmDuty& (0+255),b
 12597  003272  EF3D  F019         	goto	u9106
 12598  003276  EF45  F019         	goto	u9107
 12599  00327A                     u9106:
 12600  00327A  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
 12601  00327C  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
 12602  00327E  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
 12603  003280  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
 12604  003282  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
 12605  003284  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
 12606  003286  EF38  F019         	goto	u9105
 12607  00328A                     u9107:
 12608  00328A  0100               	movlb	0	; () banked
 12609  00328C  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12610  00328E  6EBB               	movwf	187,c	;volatile
 12611                           
 12612                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
 12613  003290  0ECF               	movlw	207
 12614  003292  16BA               	andwf	186,f,c	;volatile
 12615                           
 12616                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
 12617  003294  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
 12618  003296  0BF0               	andlw	240
 12619  003298  0B30               	andlw	48
 12620  00329A  12BA               	iorwf	186,f,c	;volatile
 12621                           
 12622                           ;./pwm.h: 40:                 break;
 12623  00329C  EF66  F019         	goto	l157
 12624  0032A0                     l8510:
 12625  0032A0  0100               	movlb	0	; () banked
 12626  0032A2  517E               	movf	pwmDuty@channel& (0+255),w,b
 12627  0032A4  6F7F               	movwf	??_pwmDuty& (0+255),b
 12628  0032A6  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
 12629                           
 12630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12631                           ; Switch size 1, requested type "simple"
 12632                           ; Number of cases is 1, Range of values is 0 to 0
 12633                           ; switch strategies available:
 12634                           ; Name         Instructions Cycles
 12635                           ; simple_byte            4     3 (average)
 12636                           ;	Chosen strategy is simple_byte
 12637  0032A8  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
 12638  0032AA  0A00               	xorlw	0	; case 0
 12639  0032AC  B4D8               	btfsc	status,2,c
 12640  0032AE  EF5B  F019         	goto	l10886
 12641  0032B2  EF66  F019         	goto	l157
 12642  0032B6                     l10886:
 12643                           
 12644                           ; BSR set to: 0
 12645                           ; Switch size 1, requested type "simple"
 12646                           ; Number of cases is 2, Range of values is 1 to 2
 12647                           ; switch strategies available:
 12648                           ; Name         Instructions Cycles
 12649                           ; simple_byte            7     4 (average)
 12650                           ;	Chosen strategy is simple_byte
 12651  0032B6  517F               	movf	??_pwmDuty& (0+255),w,b
 12652  0032B8  0A01               	xorlw	1	; case 1
 12653  0032BA  B4D8               	btfsc	status,2,c
 12654  0032BC  EF0C  F019         	goto	l8504
 12655  0032C0  0A03               	xorlw	3	; case 2
 12656  0032C2  B4D8               	btfsc	status,2,c
 12657  0032C4  EF2E  F019         	goto	l8506
 12658  0032C8  EF66  F019         	goto	l157
 12659  0032CC                     l157:
 12660                           
 12661                           ; BSR set to: 0
 12662  0032CC  0012               	return		;funcret
 12663  0032CE                     __end_of_pwmDuty:
 12664                           	opt callstack 0
 12665                           
 12666 ;; *************** function _map *****************
 12667 ;; Defined at:
 12668 ;;		line 16 in file "./pwm.h"
 12669 ;; Parameters:    Size  Location     Type
 12670 ;;  x               4   31[COMRAM] long 
 12671 ;;  in_min          4   35[COMRAM] long 
 12672 ;;  in_max          4   39[COMRAM] long 
 12673 ;;  out_min         4   43[COMRAM] long 
 12674 ;;  out_max         4   47[COMRAM] long 
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;		None
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  4   31[COMRAM] long 
 12679 ;; Registers used:
 12680 ;;		wreg, status,2, status,0, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12686 ;;      Params:        20       0       0       0       0       0       0       0       0
 12687 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12688 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12689 ;;      Totals:        20       0       0       0       0       0       0       0       0
 12690 ;;Total ram usage:       20 bytes
 12691 ;; Hardware stack levels used:    1
 12692 ;; Hardware stack levels required when called:    3
 12693 ;; This function calls:
 12694 ;;		___aldiv
 12695 ;;		___lmul
 12696 ;; This function is called by:
 12697 ;;		_pwmDuty
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701                           	psect	text55
 12702  004AA4                     __ptext55:
 12703                           	opt callstack 0
 12704  004AA4                     _map:
 12705                           	opt callstack 24
 12706  004AA4                     
 12707                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
 12708  004AA4  5024               	movf	map@in_min^0,w,c
 12709  004AA6  5C20               	subwf	map@x^0,w,c
 12710  004AA8  6E06               	movwf	___lmul@multiplier^0,c
 12711  004AAA  5025               	movf	(map@in_min+1)^0,w,c
 12712  004AAC  5821               	subwfb	(map@x+1)^0,w,c
 12713  004AAE  6E07               	movwf	(___lmul@multiplier+1)^0,c
 12714  004AB0  5026               	movf	(map@in_min+2)^0,w,c
 12715  004AB2  5822               	subwfb	(map@x+2)^0,w,c
 12716  004AB4  6E08               	movwf	(___lmul@multiplier+2)^0,c
 12717  004AB6  5027               	movf	(map@in_min+3)^0,w,c
 12718  004AB8  5823               	subwfb	(map@x+3)^0,w,c
 12719  004ABA  6E09               	movwf	(___lmul@multiplier+3)^0,c
 12720  004ABC  502C               	movf	map@out_min^0,w,c
 12721  004ABE  5C30               	subwf	map@out_max^0,w,c
 12722  004AC0  6E0A               	movwf	___lmul@multiplicand^0,c
 12723  004AC2  502D               	movf	(map@out_min+1)^0,w,c
 12724  004AC4  5831               	subwfb	(map@out_max+1)^0,w,c
 12725  004AC6  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 12726  004AC8  502E               	movf	(map@out_min+2)^0,w,c
 12727  004ACA  5832               	subwfb	(map@out_max+2)^0,w,c
 12728  004ACC  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 12729  004ACE  502F               	movf	(map@out_min+3)^0,w,c
 12730  004AD0  5833               	subwfb	(map@out_max+3)^0,w,c
 12731  004AD2  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 12732  004AD4  EC6F  F026         	call	___lmul	;wreg free
 12733  004AD8  C006  F012         	movff	?___lmul,___aldiv@dividend
 12734  004ADC  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 12735  004AE0  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 12736  004AE4  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 12737  004AE8  5024               	movf	map@in_min^0,w,c
 12738  004AEA  5C28               	subwf	map@in_max^0,w,c
 12739  004AEC  6E16               	movwf	___aldiv@divisor^0,c
 12740  004AEE  5025               	movf	(map@in_min+1)^0,w,c
 12741  004AF0  5829               	subwfb	(map@in_max+1)^0,w,c
 12742  004AF2  6E17               	movwf	(___aldiv@divisor+1)^0,c
 12743  004AF4  5026               	movf	(map@in_min+2)^0,w,c
 12744  004AF6  582A               	subwfb	(map@in_max+2)^0,w,c
 12745  004AF8  6E18               	movwf	(___aldiv@divisor+2)^0,c
 12746  004AFA  5027               	movf	(map@in_min+3)^0,w,c
 12747  004AFC  582B               	subwfb	(map@in_max+3)^0,w,c
 12748  004AFE  6E19               	movwf	(___aldiv@divisor+3)^0,c
 12749  004B00  ECB6  F01E         	call	___aldiv	;wreg free
 12750  004B04  502C               	movf	map@out_min^0,w,c
 12751  004B06  2412               	addwf	?___aldiv^0,w,c
 12752  004B08  6E20               	movwf	?_map^0,c
 12753  004B0A  502D               	movf	(map@out_min+1)^0,w,c
 12754  004B0C  2013               	addwfc	(?___aldiv+1)^0,w,c
 12755  004B0E  6E21               	movwf	(?_map+1)^0,c
 12756  004B10  502E               	movf	(map@out_min+2)^0,w,c
 12757  004B12  2014               	addwfc	(?___aldiv+2)^0,w,c
 12758  004B14  6E22               	movwf	(?_map+2)^0,c
 12759  004B16  502F               	movf	(map@out_min+3)^0,w,c
 12760  004B18  2015               	addwfc	(?___aldiv+3)^0,w,c
 12761  004B1A  6E23               	movwf	(?_map+3)^0,c
 12762  004B1C  0012               	return		;funcret
 12763  004B1E                     __end_of_map:
 12764                           	opt callstack 0
 12765                           
 12766 ;; *************** function ___lmul *****************
 12767 ;; Defined at:
 12768 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 12769 ;; Parameters:    Size  Location     Type
 12770 ;;  multiplier      4    5[COMRAM] unsigned long 
 12771 ;;  multiplicand    4    9[COMRAM] unsigned long 
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;  product         4   13[COMRAM] unsigned long 
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  4    5[COMRAM] unsigned long 
 12776 ;; Registers used:
 12777 ;;		wreg, status,2, status,0
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12783 ;;      Params:         8       0       0       0       0       0       0       0       0
 12784 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12786 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12787 ;;Total ram usage:       12 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:    2
 12790 ;; This function calls:
 12791 ;;		Nothing
 12792 ;; This function is called by:
 12793 ;;		_map
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           	psect	text56
 12798  004CDE                     __ptext56:
 12799                           	opt callstack 0
 12800  004CDE                     ___lmul:
 12801                           	opt callstack 24
 12802  004CDE  0E00               	movlw	0
 12803  004CE0  6E0E               	movwf	___lmul@product^0,c
 12804  004CE2  0E00               	movlw	0
 12805  004CE4  6E0F               	movwf	(___lmul@product+1)^0,c
 12806  004CE6  0E00               	movlw	0
 12807  004CE8  6E10               	movwf	(___lmul@product+2)^0,c
 12808  004CEA  0E00               	movlw	0
 12809  004CEC  6E11               	movwf	(___lmul@product+3)^0,c
 12810  004CEE                     l7860:
 12811  004CEE  A006               	btfss	___lmul@multiplier^0,0,c
 12812  004CF0  EF7C  F026         	goto	u7981
 12813  004CF4  EF7E  F026         	goto	u7980
 12814  004CF8                     u7981:
 12815  004CF8  EF86  F026         	goto	l7864
 12816  004CFC                     u7980:
 12817  004CFC  500A               	movf	___lmul@multiplicand^0,w,c
 12818  004CFE  260E               	addwf	___lmul@product^0,f,c
 12819  004D00  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 12820  004D02  220F               	addwfc	(___lmul@product+1)^0,f,c
 12821  004D04  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 12822  004D06  2210               	addwfc	(___lmul@product+2)^0,f,c
 12823  004D08  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 12824  004D0A  2211               	addwfc	(___lmul@product+3)^0,f,c
 12825  004D0C                     l7864:
 12826  004D0C  90D8               	bcf	status,0,c
 12827  004D0E  360A               	rlcf	___lmul@multiplicand^0,f,c
 12828  004D10  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 12829  004D12  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 12830  004D14  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 12831  004D16  90D8               	bcf	status,0,c
 12832  004D18  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 12833  004D1A  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 12834  004D1C  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 12835  004D1E  3206               	rrcf	___lmul@multiplier^0,f,c
 12836  004D20  5006               	movf	___lmul@multiplier^0,w,c
 12837  004D22  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 12838  004D24  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 12839  004D26  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 12840  004D28  A4D8               	btfss	status,2,c
 12841  004D2A  EF99  F026         	goto	u7991
 12842  004D2E  EF9B  F026         	goto	u7990
 12843  004D32                     u7991:
 12844  004D32  EF77  F026         	goto	l7860
 12845  004D36                     u7990:
 12846  004D36  C00E  F006         	movff	___lmul@product,?___lmul
 12847  004D3A  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 12848  004D3E  C010  F008         	movff	___lmul@product+2,?___lmul+2
 12849  004D42  C011  F009         	movff	___lmul@product+3,?___lmul+3
 12850  004D46  0012               	return		;funcret
 12851  004D48                     __end_of___lmul:
 12852                           	opt callstack 0
 12853                           
 12854 ;; *************** function ___xxtofl *****************
 12855 ;; Defined at:
 12856 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  sign            1    wreg     unsigned char 
 12859 ;;  val             4   12[COMRAM] long 
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;  sign            1   20[COMRAM] unsigned char 
 12862 ;;  arg             4   22[COMRAM] unsigned long 
 12863 ;;  exp             1   21[COMRAM] unsigned char 
 12864 ;; Return value:  Size  Location     Type
 12865 ;;                  4   12[COMRAM] unsigned char 
 12866 ;; Registers used:
 12867 ;;		wreg, status,2, status,0
 12868 ;; Tracked objects:
 12869 ;;		On entry : 0/0
 12870 ;;		On exit  : 0/0
 12871 ;;		Unchanged: 0/0
 12872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12873 ;;      Params:         4       0       0       0       0       0       0       0       0
 12874 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12875 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12876 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12877 ;;Total ram usage:       14 bytes
 12878 ;; Hardware stack levels used:    1
 12879 ;; Hardware stack levels required when called:    2
 12880 ;; This function calls:
 12881 ;;		Nothing
 12882 ;; This function is called by:
 12883 ;;		_pwmDuty
 12884 ;;		_dameDistancia
 12885 ;;		_PID
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           	psect	text57
 12890  0032CE                     __ptext57:
 12891                           	opt callstack 0
 12892  0032CE                     ___xxtofl:
 12893                           	opt callstack 25
 12894                           
 12895                           ;incstack = 0
 12896                           ;___xxtofl@sign stored from wreg
 12897  0032CE  6E15               	movwf	___xxtofl@sign^0,c
 12898  0032D0  5015               	movf	___xxtofl@sign^0,w,c
 12899  0032D2  B4D8               	btfsc	status,2,c
 12900  0032D4  EF6E  F019         	goto	u8981
 12901  0032D8  EF70  F019         	goto	u8980
 12902  0032DC                     u8981:
 12903  0032DC  EF92  F019         	goto	l1595
 12904  0032E0                     u8980:
 12905  0032E0  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12906  0032E2  EF77  F019         	goto	u8990
 12907  0032E6  EF75  F019         	goto	u8991
 12908  0032EA                     u8991:
 12909  0032EA  EF92  F019         	goto	l1595
 12910  0032EE                     u8990:
 12911  0032EE  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 12912  0032F2  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 12913  0032F6  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 12914  0032FA  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 12915  0032FE  1E11               	comf	??___xxtofl^0,f,c
 12916  003300  1E12               	comf	(??___xxtofl+1)^0,f,c
 12917  003302  1E13               	comf	(??___xxtofl+2)^0,f,c
 12918  003304  1E14               	comf	(??___xxtofl+3)^0,f,c
 12919  003306  2A11               	incf	??___xxtofl^0,f,c
 12920  003308  0E00               	movlw	0
 12921  00330A  2212               	addwfc	(??___xxtofl+1)^0,f,c
 12922  00330C  2213               	addwfc	(??___xxtofl+2)^0,f,c
 12923  00330E  2214               	addwfc	(??___xxtofl+3)^0,f,c
 12924  003310  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 12925  003314  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 12926  003318  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 12927  00331C  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 12928  003320  EF9A  F019         	goto	l8458
 12929  003324                     l1595:
 12930  003324  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 12931  003328  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12932  00332C  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12933  003330  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12934  003334                     l8458:
 12935  003334  500D               	movf	___xxtofl@val^0,w,c
 12936  003336  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 12937  003338  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 12938  00333A  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 12939  00333C  A4D8               	btfss	status,2,c
 12940  00333E  EFA3  F019         	goto	u9001
 12941  003342  EFA5  F019         	goto	u9000
 12942  003346                     u9001:
 12943  003346  EFAF  F019         	goto	l8464
 12944  00334A                     u9000:
 12945  00334A  0E00               	movlw	0
 12946  00334C  6E0D               	movwf	?___xxtofl^0,c
 12947  00334E  0E00               	movlw	0
 12948  003350  6E0E               	movwf	(?___xxtofl+1)^0,c
 12949  003352  0E00               	movlw	0
 12950  003354  6E0F               	movwf	(?___xxtofl+2)^0,c
 12951  003356  0E00               	movlw	0
 12952  003358  6E10               	movwf	(?___xxtofl+3)^0,c
 12953  00335A  EF40  F01A         	goto	l1598
 12954  00335E                     l8464:
 12955  00335E  0E96               	movlw	150
 12956  003360  6E16               	movwf	___xxtofl@exp^0,c
 12957  003362  EFB9  F019         	goto	l8468
 12958  003366                     l8466:
 12959  003366  2A16               	incf	___xxtofl@exp^0,f,c
 12960  003368  90D8               	bcf	status,0,c
 12961  00336A  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12962  00336C  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12963  00336E  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12964  003370  3217               	rrcf	___xxtofl@arg^0,f,c
 12965  003372                     l8468:
 12966  003372  0E00               	movlw	0
 12967  003374  1417               	andwf	___xxtofl@arg^0,w,c
 12968  003376  6E11               	movwf	??___xxtofl^0,c
 12969  003378  0E00               	movlw	0
 12970  00337A  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12971  00337C  6E12               	movwf	(??___xxtofl+1)^0,c
 12972  00337E  0E00               	movlw	0
 12973  003380  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12974  003382  6E13               	movwf	(??___xxtofl+2)^0,c
 12975  003384  0EFE               	movlw	254
 12976  003386  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12977  003388  6E14               	movwf	(??___xxtofl+3)^0,c
 12978  00338A  5011               	movf	??___xxtofl^0,w,c
 12979  00338C  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12980  00338E  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12981  003390  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12982  003392  A4D8               	btfss	status,2,c
 12983  003394  EFCE  F019         	goto	u9011
 12984  003398  EFD0  F019         	goto	u9010
 12985  00339C                     u9011:
 12986  00339C  EFB3  F019         	goto	l8466
 12987  0033A0                     u9010:
 12988  0033A0  EFDE  F019         	goto	l1602
 12989  0033A4                     l8470:
 12990  0033A4  2A16               	incf	___xxtofl@exp^0,f,c
 12991  0033A6  0E01               	movlw	1
 12992  0033A8  2617               	addwf	___xxtofl@arg^0,f,c
 12993  0033AA  0E00               	movlw	0
 12994  0033AC  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 12995  0033AE  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 12996  0033B0  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 12997  0033B2  90D8               	bcf	status,0,c
 12998  0033B4  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12999  0033B6  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 13000  0033B8  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 13001  0033BA  3217               	rrcf	___xxtofl@arg^0,f,c
 13002  0033BC                     l1602:
 13003  0033BC  0E00               	movlw	0
 13004  0033BE  1417               	andwf	___xxtofl@arg^0,w,c
 13005  0033C0  6E11               	movwf	??___xxtofl^0,c
 13006  0033C2  0E00               	movlw	0
 13007  0033C4  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 13008  0033C6  6E12               	movwf	(??___xxtofl+1)^0,c
 13009  0033C8  0E00               	movlw	0
 13010  0033CA  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 13011  0033CC  6E13               	movwf	(??___xxtofl+2)^0,c
 13012  0033CE  0EFF               	movlw	255
 13013  0033D0  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 13014  0033D2  6E14               	movwf	(??___xxtofl+3)^0,c
 13015  0033D4  5011               	movf	??___xxtofl^0,w,c
 13016  0033D6  1012               	iorwf	(??___xxtofl+1)^0,w,c
 13017  0033D8  1013               	iorwf	(??___xxtofl+2)^0,w,c
 13018  0033DA  1014               	iorwf	(??___xxtofl+3)^0,w,c
 13019  0033DC  A4D8               	btfss	status,2,c
 13020  0033DE  EFF3  F019         	goto	u9021
 13021  0033E2  EFF5  F019         	goto	u9020
 13022  0033E6                     u9021:
 13023  0033E6  EFD2  F019         	goto	l8470
 13024  0033EA                     u9020:
 13025  0033EA  EFFD  F019         	goto	l8478
 13026  0033EE                     l8476:
 13027  0033EE  0616               	decf	___xxtofl@exp^0,f,c
 13028  0033F0  90D8               	bcf	status,0,c
 13029  0033F2  3617               	rlcf	___xxtofl@arg^0,f,c
 13030  0033F4  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 13031  0033F6  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 13032  0033F8  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 13033  0033FA                     l8478:
 13034  0033FA  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 13035  0033FC  EF02  F01A         	goto	u9031
 13036  003400  EF04  F01A         	goto	u9030
 13037  003404                     u9031:
 13038  003404  EF0C  F01A         	goto	l1609
 13039  003408                     u9030:
 13040  003408  0E02               	movlw	2
 13041  00340A  6016               	cpfslt	___xxtofl@exp^0,c
 13042  00340C  EF0A  F01A         	goto	u9041
 13043  003410  EF0C  F01A         	goto	u9040
 13044  003414                     u9041:
 13045  003414  EFF7  F019         	goto	l8476
 13046  003418                     u9040:
 13047  003418                     l1609:
 13048  003418  B016               	btfsc	___xxtofl@exp^0,0,c
 13049  00341A  EF11  F01A         	goto	u9051
 13050  00341E  EF13  F01A         	goto	u9050
 13051  003422                     u9051:
 13052  003422  EF14  F01A         	goto	l8484
 13053  003426                     u9050:
 13054  003426  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 13055  003428                     l8484:
 13056  003428  90D8               	bcf	status,0,c
 13057  00342A  3216               	rrcf	___xxtofl@exp^0,f,c
 13058  00342C  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 13059  003430  6A12               	clrf	(??___xxtofl+1)^0,c
 13060  003432  6A13               	clrf	(??___xxtofl+2)^0,c
 13061  003434  6A14               	clrf	(??___xxtofl+3)^0,c
 13062  003436  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 13063  00343A  6A13               	clrf	(??___xxtofl+2)^0,c
 13064  00343C  6A12               	clrf	(??___xxtofl+1)^0,c
 13065  00343E  6A11               	clrf	??___xxtofl^0,c
 13066  003440  5011               	movf	??___xxtofl^0,w,c
 13067  003442  1217               	iorwf	___xxtofl@arg^0,f,c
 13068  003444  5012               	movf	(??___xxtofl+1)^0,w,c
 13069  003446  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 13070  003448  5013               	movf	(??___xxtofl+2)^0,w,c
 13071  00344A  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 13072  00344C  5014               	movf	(??___xxtofl+3)^0,w,c
 13073  00344E  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 13074  003450  5015               	movf	___xxtofl@sign^0,w,c
 13075  003452  B4D8               	btfsc	status,2,c
 13076  003454  EF2E  F01A         	goto	u9061
 13077  003458  EF30  F01A         	goto	u9060
 13078  00345C                     u9061:
 13079  00345C  EF38  F01A         	goto	l8494
 13080  003460                     u9060:
 13081  003460  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 13082  003462  EF37  F01A         	goto	u9070
 13083  003466  EF35  F01A         	goto	u9071
 13084  00346A                     u9071:
 13085  00346A  EF38  F01A         	goto	l8494
 13086  00346E                     u9070:
 13087  00346E  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 13088  003470                     l8494:
 13089  003470  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 13090  003474  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 13091  003478  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 13092  00347C  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 13093  003480                     l1598:
 13094  003480  0012               	return		;funcret
 13095  003482                     __end_of___xxtofl:
 13096                           	opt callstack 0
 13097                           
 13098 ;; *************** function ___fltol *****************
 13099 ;; Defined at:
 13100 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;  f1              4   18[BANK0 ] unsigned char 
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;  exp1            1   27[BANK0 ] unsigned char 
 13105 ;;  sign1           1   26[BANK0 ] unsigned char 
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  4   18[BANK0 ] long 
 13108 ;; Registers used:
 13109 ;;		wreg, status,2, status,0
 13110 ;; Tracked objects:
 13111 ;;		On entry : 0/0
 13112 ;;		On exit  : 0/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13115 ;;      Params:         0       4       0       0       0       0       0       0       0
 13116 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13117 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13118 ;;      Totals:         0      10       0       0       0       0       0       0       0
 13119 ;;Total ram usage:       10 bytes
 13120 ;; Hardware stack levels used:    1
 13121 ;; Hardware stack levels required when called:    2
 13122 ;; This function calls:
 13123 ;;		Nothing
 13124 ;; This function is called by:
 13125 ;;		_pwmDuty
 13126 ;;		_PID
 13127 ;;		_efgtoa
 13128 ;; This function uses a non-reentrant model
 13129 ;;
 13130                           
 13131                           	psect	text58
 13132  003E78                     __ptext58:
 13133                           	opt callstack 0
 13134  003E78                     ___fltol:
 13135                           	opt callstack 23
 13136  003E78  0100               	movlb	0	; () banked
 13137  003E7A  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 13138  003E7C  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 13139  003E7E  6F7B               	movwf	___fltol@exp1& (0+255),b
 13140  003E80  517B               	movf	___fltol@exp1& (0+255),w,b
 13141  003E82  A4D8               	btfss	status,2,c
 13142  003E84  EF46  F01F         	goto	u8911
 13143  003E88  EF48  F01F         	goto	u8910
 13144  003E8C                     u8911:
 13145  003E8C  EF52  F01F         	goto	l8414
 13146  003E90                     u8910:
 13147  003E90                     l8410:
 13148                           
 13149                           ; BSR set to: 0
 13150  003E90  0E00               	movlw	0
 13151  003E92  6F72               	movwf	?___fltol& (0+255),b
 13152  003E94  0E00               	movlw	0
 13153  003E96  6F73               	movwf	(?___fltol+1)& (0+255),b
 13154  003E98  0E00               	movlw	0
 13155  003E9A  6F74               	movwf	(?___fltol+2)& (0+255),b
 13156  003E9C  0E00               	movlw	0
 13157  003E9E  6F75               	movwf	(?___fltol+3)& (0+255),b
 13158  003EA0  EFBF  F01F         	goto	l1237
 13159  003EA4                     l8414:
 13160                           
 13161                           ; BSR set to: 0
 13162  003EA4  C072  F076         	movff	___fltol@f1,??___fltol
 13163  003EA8  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 13164  003EAC  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 13165  003EB0  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 13166  003EB4  0E20               	movlw	32
 13167  003EB6  EF62  F01F         	goto	u8920
 13168  003EBA                     u8925:
 13169  003EBA  90D8               	bcf	status,0,c
 13170  003EBC  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 13171  003EBE  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 13172  003EC0  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 13173  003EC2  3376               	rrcf	??___fltol& (0+255),f,b
 13174  003EC4                     u8920:
 13175  003EC4  2EE8               	decfsz	wreg,f,c
 13176  003EC6  EF5D  F01F         	goto	u8925
 13177  003ECA  5176               	movf	??___fltol& (0+255),w,b
 13178  003ECC  6F7A               	movwf	___fltol@sign1& (0+255),b
 13179  003ECE                     
 13180                           ; BSR set to: 0
 13181  003ECE  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 13182  003ED0                     
 13183                           ; BSR set to: 0
 13184  003ED0  0EFF               	movlw	255
 13185  003ED2  1772               	andwf	___fltol@f1& (0+255),f,b
 13186  003ED4  0EFF               	movlw	255
 13187  003ED6  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 13188  003ED8  0EFF               	movlw	255
 13189  003EDA  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 13190  003EDC  0E00               	movlw	0
 13191  003EDE  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 13192  003EE0                     
 13193                           ; BSR set to: 0
 13194  003EE0  0E96               	movlw	150
 13195  003EE2  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 13196  003EE4                     
 13197                           ; BSR set to: 0
 13198  003EE4  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 13199  003EE6  EF79  F01F         	goto	u8930
 13200  003EEA  EF77  F01F         	goto	u8931
 13201  003EEE                     u8931:
 13202  003EEE  EF8F  F01F         	goto	l8434
 13203  003EF2                     u8930:
 13204  003EF2                     
 13205                           ; BSR set to: 0
 13206  003EF2  517B               	movf	___fltol@exp1& (0+255),w,b
 13207  003EF4  0A80               	xorlw	128
 13208  003EF6  0F97               	addlw	151
 13209  003EF8  B0D8               	btfsc	status,0,c
 13210  003EFA  EF81  F01F         	goto	u8941
 13211  003EFE  EF83  F01F         	goto	u8940
 13212  003F02                     u8941:
 13213  003F02  EF85  F01F         	goto	l8430
 13214  003F06                     u8940:
 13215  003F06  EF48  F01F         	goto	l8410
 13216  003F0A                     l8430:
 13217                           
 13218                           ; BSR set to: 0
 13219  003F0A  90D8               	bcf	status,0,c
 13220  003F0C  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13221  003F0E  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13222  003F10  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13223  003F12  3372               	rrcf	___fltol@f1& (0+255),f,b
 13224  003F14                     
 13225                           ; BSR set to: 0
 13226  003F14  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 13227  003F16  EF85  F01F         	goto	l8430
 13228  003F1A  EFA7  F01F         	goto	l8444
 13229  003F1E                     l8434:
 13230                           
 13231                           ; BSR set to: 0
 13232  003F1E  0E1F               	movlw	31
 13233  003F20  657B               	cpfsgt	___fltol@exp1& (0+255),b
 13234  003F22  EF95  F01F         	goto	u8951
 13235  003F26  EF97  F01F         	goto	u8950
 13236  003F2A                     u8951:
 13237  003F2A  EF9F  F01F         	goto	l8442
 13238  003F2E                     u8950:
 13239  003F2E  EF48  F01F         	goto	l8410
 13240  003F32                     l8440:
 13241                           
 13242                           ; BSR set to: 0
 13243  003F32  90D8               	bcf	status,0,c
 13244  003F34  3772               	rlcf	___fltol@f1& (0+255),f,b
 13245  003F36  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13246  003F38  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13247  003F3A  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13248  003F3C  077B               	decf	___fltol@exp1& (0+255),f,b
 13249  003F3E                     l8442:
 13250                           
 13251                           ; BSR set to: 0
 13252  003F3E  517B               	movf	___fltol@exp1& (0+255),w,b
 13253  003F40  A4D8               	btfss	status,2,c
 13254  003F42  EFA5  F01F         	goto	u8961
 13255  003F46  EFA7  F01F         	goto	u8960
 13256  003F4A                     u8961:
 13257  003F4A  EF99  F01F         	goto	l8440
 13258  003F4E                     u8960:
 13259  003F4E                     l8444:
 13260                           
 13261                           ; BSR set to: 0
 13262  003F4E  517A               	movf	___fltol@sign1& (0+255),w,b
 13263  003F50  B4D8               	btfsc	status,2,c
 13264  003F52  EFAD  F01F         	goto	u8971
 13265  003F56  EFAF  F01F         	goto	u8970
 13266  003F5A                     u8971:
 13267  003F5A  EFB7  F01F         	goto	l8448
 13268  003F5E                     u8970:
 13269  003F5E                     
 13270                           ; BSR set to: 0
 13271  003F5E  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 13272  003F60  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 13273  003F62  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 13274  003F64  6D72               	negf	___fltol@f1& (0+255),b
 13275  003F66  0E00               	movlw	0
 13276  003F68  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13277  003F6A  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13278  003F6C  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13279  003F6E                     l8448:
 13280                           
 13281                           ; BSR set to: 0
 13282  003F6E  C072  F072         	movff	___fltol@f1,?___fltol
 13283  003F72  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 13284  003F76  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 13285  003F7A  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 13286  003F7E                     l1237:
 13287                           
 13288                           ; BSR set to: 0
 13289  003F7E  0012               	return		;funcret
 13290  003F80                     __end_of___fltol:
 13291                           	opt callstack 0
 13292                           
 13293 ;; *************** function ___flmul *****************
 13294 ;; Defined at:
 13295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;  b               4   26[COMRAM] long 
 13298 ;;  a               4   30[COMRAM] long 
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;  prod            4   45[COMRAM] struct .
 13301 ;;  grs             4   40[COMRAM] unsigned long 
 13302 ;;  temp            2   49[COMRAM] struct .
 13303 ;;  bexp            1   44[COMRAM] unsigned char 
 13304 ;;  aexp            1   39[COMRAM] unsigned char 
 13305 ;;  sign            1   38[COMRAM] unsigned char 
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  4   26[COMRAM] unsigned char 
 13308 ;; Registers used:
 13309 ;;		wreg, status,2, status,0, prodl, prodh
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13315 ;;      Params:         8       0       0       0       0       0       0       0       0
 13316 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13317 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13318 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13319 ;;Total ram usage:       25 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:    2
 13322 ;; This function calls:
 13323 ;;		Nothing
 13324 ;; This function is called by:
 13325 ;;		_pwmDuty
 13326 ;;		_PID
 13327 ;;		_efgtoa
 13328 ;;		_roundf
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           
 13332                           	psect	text59
 13333  001E50                     __ptext59:
 13334                           	opt callstack 0
 13335  001E50                     ___flmul:
 13336                           	opt callstack 23
 13337  001E50  501E               	movf	(___flmul@b+3)^0,w,c
 13338  001E52  0B80               	andlw	128
 13339  001E54  6E27               	movwf	___flmul@sign^0,c
 13340  001E56  501E               	movf	(___flmul@b+3)^0,w,c
 13341  001E58  241E               	addwf	(___flmul@b+3)^0,w,c
 13342  001E5A  6E2D               	movwf	___flmul@bexp^0,c
 13343  001E5C  AE1D               	btfss	(___flmul@b+2)^0,7,c
 13344  001E5E  EF33  F00F         	goto	u8721
 13345  001E62  EF35  F00F         	goto	u8720
 13346  001E66                     u8721:
 13347  001E66  EF36  F00F         	goto	l8284
 13348  001E6A                     u8720:
 13349  001E6A  802D               	bsf	___flmul@bexp^0,0,c
 13350  001E6C                     l8284:
 13351  001E6C  502D               	movf	___flmul@bexp^0,w,c
 13352  001E6E  B4D8               	btfsc	status,2,c
 13353  001E70  EF3C  F00F         	goto	u8731
 13354  001E74  EF3E  F00F         	goto	u8730
 13355  001E78                     u8731:
 13356  001E78  EF51  F00F         	goto	l8292
 13357  001E7C                     u8730:
 13358  001E7C  282D               	incf	___flmul@bexp^0,w,c
 13359  001E7E  A4D8               	btfss	status,2,c
 13360  001E80  EF44  F00F         	goto	u8741
 13361  001E84  EF46  F00F         	goto	u8740
 13362  001E88                     u8741:
 13363  001E88  EF4E  F00F         	goto	l8290
 13364  001E8C                     u8740:
 13365  001E8C  0E00               	movlw	0
 13366  001E8E  6E1B               	movwf	___flmul@b^0,c
 13367  001E90  0E00               	movlw	0
 13368  001E92  6E1C               	movwf	(___flmul@b+1)^0,c
 13369  001E94  0E00               	movlw	0
 13370  001E96  6E1D               	movwf	(___flmul@b+2)^0,c
 13371  001E98  0E00               	movlw	0
 13372  001E9A  6E1E               	movwf	(___flmul@b+3)^0,c
 13373  001E9C                     l8290:
 13374  001E9C  8E1D               	bsf	(___flmul@b+2)^0,7,c
 13375  001E9E  EF59  F00F         	goto	l8294
 13376  001EA2                     l8292:
 13377  001EA2  0E00               	movlw	0
 13378  001EA4  6E1B               	movwf	___flmul@b^0,c
 13379  001EA6  0E00               	movlw	0
 13380  001EA8  6E1C               	movwf	(___flmul@b+1)^0,c
 13381  001EAA  0E00               	movlw	0
 13382  001EAC  6E1D               	movwf	(___flmul@b+2)^0,c
 13383  001EAE  0E00               	movlw	0
 13384  001EB0  6E1E               	movwf	(___flmul@b+3)^0,c
 13385  001EB2                     l8294:
 13386  001EB2  5022               	movf	(___flmul@a+3)^0,w,c
 13387  001EB4  0B80               	andlw	128
 13388  001EB6  1A27               	xorwf	___flmul@sign^0,f,c
 13389  001EB8  5022               	movf	(___flmul@a+3)^0,w,c
 13390  001EBA  2422               	addwf	(___flmul@a+3)^0,w,c
 13391  001EBC  6E28               	movwf	___flmul@aexp^0,c
 13392  001EBE  AE21               	btfss	(___flmul@a+2)^0,7,c
 13393  001EC0  EF64  F00F         	goto	u8751
 13394  001EC4  EF66  F00F         	goto	u8750
 13395  001EC8                     u8751:
 13396  001EC8  EF67  F00F         	goto	l8302
 13397  001ECC                     u8750:
 13398  001ECC  8028               	bsf	___flmul@aexp^0,0,c
 13399  001ECE                     l8302:
 13400  001ECE  5028               	movf	___flmul@aexp^0,w,c
 13401  001ED0  B4D8               	btfsc	status,2,c
 13402  001ED2  EF6D  F00F         	goto	u8761
 13403  001ED6  EF6F  F00F         	goto	u8760
 13404  001EDA                     u8761:
 13405  001EDA  EF82  F00F         	goto	l8310
 13406  001EDE                     u8760:
 13407  001EDE  2828               	incf	___flmul@aexp^0,w,c
 13408  001EE0  A4D8               	btfss	status,2,c
 13409  001EE2  EF75  F00F         	goto	u8771
 13410  001EE6  EF77  F00F         	goto	u8770
 13411  001EEA                     u8771:
 13412  001EEA  EF7F  F00F         	goto	l8308
 13413  001EEE                     u8770:
 13414  001EEE  0E00               	movlw	0
 13415  001EF0  6E1F               	movwf	___flmul@a^0,c
 13416  001EF2  0E00               	movlw	0
 13417  001EF4  6E20               	movwf	(___flmul@a+1)^0,c
 13418  001EF6  0E00               	movlw	0
 13419  001EF8  6E21               	movwf	(___flmul@a+2)^0,c
 13420  001EFA  0E00               	movlw	0
 13421  001EFC  6E22               	movwf	(___flmul@a+3)^0,c
 13422  001EFE                     l8308:
 13423  001EFE  8E21               	bsf	(___flmul@a+2)^0,7,c
 13424  001F00  EF8A  F00F         	goto	l1554
 13425  001F04                     l8310:
 13426  001F04  0E00               	movlw	0
 13427  001F06  6E1F               	movwf	___flmul@a^0,c
 13428  001F08  0E00               	movlw	0
 13429  001F0A  6E20               	movwf	(___flmul@a+1)^0,c
 13430  001F0C  0E00               	movlw	0
 13431  001F0E  6E21               	movwf	(___flmul@a+2)^0,c
 13432  001F10  0E00               	movlw	0
 13433  001F12  6E22               	movwf	(___flmul@a+3)^0,c
 13434  001F14                     l1554:
 13435  001F14  5028               	movf	___flmul@aexp^0,w,c
 13436  001F16  B4D8               	btfsc	status,2,c
 13437  001F18  EF90  F00F         	goto	u8781
 13438  001F1C  EF92  F00F         	goto	u8780
 13439  001F20                     u8781:
 13440  001F20  EF9A  F00F         	goto	l8314
 13441  001F24                     u8780:
 13442  001F24  502D               	movf	___flmul@bexp^0,w,c
 13443  001F26  A4D8               	btfss	status,2,c
 13444  001F28  EF98  F00F         	goto	u8791
 13445  001F2C  EF9A  F00F         	goto	u8790
 13446  001F30                     u8791:
 13447  001F30  EFA4  F00F         	goto	l8318
 13448  001F34                     u8790:
 13449  001F34                     l8314:
 13450  001F34  0E00               	movlw	0
 13451  001F36  6E1B               	movwf	?___flmul^0,c
 13452  001F38  0E00               	movlw	0
 13453  001F3A  6E1C               	movwf	(?___flmul+1)^0,c
 13454  001F3C  0E00               	movlw	0
 13455  001F3E  6E1D               	movwf	(?___flmul+2)^0,c
 13456  001F40  0E00               	movlw	0
 13457  001F42  6E1E               	movwf	(?___flmul+3)^0,c
 13458  001F44  EF3C  F011         	goto	l1558
 13459  001F48                     l8318:
 13460  001F48  5021               	movf	(___flmul@a+2)^0,w,c
 13461  001F4A  021B               	mulwf	___flmul@b^0,c
 13462  001F4C  CFF3 F032          	movff	prodl,___flmul@temp
 13463  001F50  CFF4 F033          	movff	prodh,___flmul@temp+1
 13464  001F54  5032               	movf	___flmul@temp^0,w,c
 13465  001F56  6E29               	movwf	___flmul@grs^0,c
 13466  001F58  6A2A               	clrf	(___flmul@grs+1)^0,c
 13467  001F5A  6A2B               	clrf	(___flmul@grs+2)^0,c
 13468  001F5C  6A2C               	clrf	(___flmul@grs+3)^0,c
 13469  001F5E  5033               	movf	(___flmul@temp+1)^0,w,c
 13470  001F60  6E2E               	movwf	___flmul@prod^0,c
 13471  001F62  6A2F               	clrf	(___flmul@prod+1)^0,c
 13472  001F64  6A30               	clrf	(___flmul@prod+2)^0,c
 13473  001F66  6A31               	clrf	(___flmul@prod+3)^0,c
 13474  001F68  5020               	movf	(___flmul@a+1)^0,w,c
 13475  001F6A  021C               	mulwf	(___flmul@b+1)^0,c
 13476  001F6C  CFF3 F032          	movff	prodl,___flmul@temp
 13477  001F70  CFF4 F033          	movff	prodh,___flmul@temp+1
 13478  001F74  5032               	movf	___flmul@temp^0,w,c
 13479  001F76  2629               	addwf	___flmul@grs^0,f,c
 13480  001F78  0E00               	movlw	0
 13481  001F7A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13482  001F7C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13483  001F7E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13484  001F80  5033               	movf	(___flmul@temp+1)^0,w,c
 13485  001F82  262E               	addwf	___flmul@prod^0,f,c
 13486  001F84  0E00               	movlw	0
 13487  001F86  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13488  001F88  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13489  001F8A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13490  001F8C  501F               	movf	___flmul@a^0,w,c
 13491  001F8E  021D               	mulwf	(___flmul@b+2)^0,c
 13492  001F90  CFF3 F032          	movff	prodl,___flmul@temp
 13493  001F94  CFF4 F033          	movff	prodh,___flmul@temp+1
 13494  001F98  5032               	movf	___flmul@temp^0,w,c
 13495  001F9A  2629               	addwf	___flmul@grs^0,f,c
 13496  001F9C  0E00               	movlw	0
 13497  001F9E  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13498  001FA0  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13499  001FA2  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13500  001FA4  5033               	movf	(___flmul@temp+1)^0,w,c
 13501  001FA6  262E               	addwf	___flmul@prod^0,f,c
 13502  001FA8  0E00               	movlw	0
 13503  001FAA  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13504  001FAC  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13505  001FAE  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13506  001FB0  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13507  001FB4  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13508  001FB8  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13509  001FBC  6A29               	clrf	___flmul@grs^0,c
 13510  001FBE  501F               	movf	___flmul@a^0,w,c
 13511  001FC0  021C               	mulwf	(___flmul@b+1)^0,c
 13512  001FC2  CFF3 F032          	movff	prodl,___flmul@temp
 13513  001FC6  CFF4 F033          	movff	prodh,___flmul@temp+1
 13514  001FCA  5032               	movf	___flmul@temp^0,w,c
 13515  001FCC  2629               	addwf	___flmul@grs^0,f,c
 13516  001FCE  5033               	movf	(___flmul@temp+1)^0,w,c
 13517  001FD0  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13518  001FD2  0E00               	movlw	0
 13519  001FD4  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13520  001FD6  0E00               	movlw	0
 13521  001FD8  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13522  001FDA  5020               	movf	(___flmul@a+1)^0,w,c
 13523  001FDC  021B               	mulwf	___flmul@b^0,c
 13524  001FDE  CFF3 F032          	movff	prodl,___flmul@temp
 13525  001FE2  CFF4 F033          	movff	prodh,___flmul@temp+1
 13526  001FE6  5032               	movf	___flmul@temp^0,w,c
 13527  001FE8  2629               	addwf	___flmul@grs^0,f,c
 13528  001FEA  5033               	movf	(___flmul@temp+1)^0,w,c
 13529  001FEC  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13530  001FEE  0E00               	movlw	0
 13531  001FF0  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13532  001FF2  0E00               	movlw	0
 13533  001FF4  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13534  001FF6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13535  001FFA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13536  001FFE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13537  002002  6A29               	clrf	___flmul@grs^0,c
 13538  002004  501F               	movf	___flmul@a^0,w,c
 13539  002006  021B               	mulwf	___flmul@b^0,c
 13540  002008  CFF3 F032          	movff	prodl,___flmul@temp
 13541  00200C  CFF4 F033          	movff	prodh,___flmul@temp+1
 13542  002010  5032               	movf	___flmul@temp^0,w,c
 13543  002012  2629               	addwf	___flmul@grs^0,f,c
 13544  002014  5033               	movf	(___flmul@temp+1)^0,w,c
 13545  002016  222A               	addwfc	(___flmul@grs+1)^0,f,c
 13546  002018  0E00               	movlw	0
 13547  00201A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 13548  00201C  0E00               	movlw	0
 13549  00201E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 13550  002020  5021               	movf	(___flmul@a+2)^0,w,c
 13551  002022  021C               	mulwf	(___flmul@b+1)^0,c
 13552  002024  CFF3 F032          	movff	prodl,___flmul@temp
 13553  002028  CFF4 F033          	movff	prodh,___flmul@temp+1
 13554  00202C  5032               	movf	___flmul@temp^0,w,c
 13555  00202E  262E               	addwf	___flmul@prod^0,f,c
 13556  002030  5033               	movf	(___flmul@temp+1)^0,w,c
 13557  002032  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13558  002034  0E00               	movlw	0
 13559  002036  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13560  002038  0E00               	movlw	0
 13561  00203A  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13562  00203C  5020               	movf	(___flmul@a+1)^0,w,c
 13563  00203E  021D               	mulwf	(___flmul@b+2)^0,c
 13564  002040  CFF3 F032          	movff	prodl,___flmul@temp
 13565  002044  CFF4 F033          	movff	prodh,___flmul@temp+1
 13566  002048  5032               	movf	___flmul@temp^0,w,c
 13567  00204A  262E               	addwf	___flmul@prod^0,f,c
 13568  00204C  5033               	movf	(___flmul@temp+1)^0,w,c
 13569  00204E  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13570  002050  0E00               	movlw	0
 13571  002052  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13572  002054  0E00               	movlw	0
 13573  002056  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13574  002058  5021               	movf	(___flmul@a+2)^0,w,c
 13575  00205A  021D               	mulwf	(___flmul@b+2)^0,c
 13576  00205C  CFF3 F032          	movff	prodl,___flmul@temp
 13577  002060  CFF4 F033          	movff	prodh,___flmul@temp+1
 13578  002064  5032               	movf	___flmul@temp^0,w,c
 13579  002066  6E23               	movwf	??___flmul^0,c
 13580  002068  5033               	movf	(___flmul@temp+1)^0,w,c
 13581  00206A  6E24               	movwf	(??___flmul+1)^0,c
 13582  00206C  6A25               	clrf	(??___flmul+2)^0,c
 13583  00206E  6A26               	clrf	(??___flmul+3)^0,c
 13584  002070  C025  F026         	movff	??___flmul+2,??___flmul+3
 13585  002074  C024  F025         	movff	??___flmul+1,??___flmul+2
 13586  002078  C023  F024         	movff	??___flmul,??___flmul+1
 13587  00207C  6A23               	clrf	??___flmul^0,c
 13588  00207E  5023               	movf	??___flmul^0,w,c
 13589  002080  262E               	addwf	___flmul@prod^0,f,c
 13590  002082  5024               	movf	(??___flmul+1)^0,w,c
 13591  002084  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13592  002086  5025               	movf	(??___flmul+2)^0,w,c
 13593  002088  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13594  00208A  5026               	movf	(??___flmul+3)^0,w,c
 13595  00208C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13596  00208E  C029  F023         	movff	___flmul@grs,??___flmul
 13597  002092  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 13598  002096  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 13599  00209A  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 13600  00209E  0E19               	movlw	25
 13601  0020A0  EF57  F010         	goto	u8800
 13602  0020A4                     u8805:
 13603  0020A4  90D8               	bcf	status,0,c
 13604  0020A6  3226               	rrcf	(??___flmul+3)^0,f,c
 13605  0020A8  3225               	rrcf	(??___flmul+2)^0,f,c
 13606  0020AA  3224               	rrcf	(??___flmul+1)^0,f,c
 13607  0020AC  3223               	rrcf	??___flmul^0,f,c
 13608  0020AE                     u8800:
 13609  0020AE  2EE8               	decfsz	wreg,f,c
 13610  0020B0  EF52  F010         	goto	u8805
 13611  0020B4  5023               	movf	??___flmul^0,w,c
 13612  0020B6  262E               	addwf	___flmul@prod^0,f,c
 13613  0020B8  5024               	movf	(??___flmul+1)^0,w,c
 13614  0020BA  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13615  0020BC  5025               	movf	(??___flmul+2)^0,w,c
 13616  0020BE  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13617  0020C0  5026               	movf	(??___flmul+3)^0,w,c
 13618  0020C2  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13619  0020C4  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 13620  0020C8  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 13621  0020CC  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 13622  0020D0  6A29               	clrf	___flmul@grs^0,c
 13623  0020D2  5028               	movf	___flmul@aexp^0,w,c
 13624  0020D4  C02D  F023         	movff	___flmul@bexp,??___flmul
 13625  0020D8  6A24               	clrf	(??___flmul+1)^0,c
 13626  0020DA  2623               	addwf	??___flmul^0,f,c
 13627  0020DC  0E00               	movlw	0
 13628  0020DE  2224               	addwfc	(??___flmul+1)^0,f,c
 13629  0020E0  0E82               	movlw	130
 13630  0020E2  2423               	addwf	??___flmul^0,w,c
 13631  0020E4  6E32               	movwf	___flmul@temp^0,c
 13632  0020E6  0EFF               	movlw	255
 13633  0020E8  2024               	addwfc	(??___flmul+1)^0,w,c
 13634  0020EA  6E33               	movwf	(___flmul@temp+1)^0,c
 13635  0020EC  EF8D  F010         	goto	l8366
 13636  0020F0                     l8360:
 13637  0020F0  90D8               	bcf	status,0,c
 13638  0020F2  362E               	rlcf	___flmul@prod^0,f,c
 13639  0020F4  362F               	rlcf	(___flmul@prod+1)^0,f,c
 13640  0020F6  3630               	rlcf	(___flmul@prod+2)^0,f,c
 13641  0020F8  3631               	rlcf	(___flmul@prod+3)^0,f,c
 13642  0020FA  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 13643  0020FC  EF82  F010         	goto	u8811
 13644  002100  EF84  F010         	goto	u8810
 13645  002104                     u8811:
 13646  002104  EF85  F010         	goto	l1561
 13647  002108                     u8810:
 13648  002108  802E               	bsf	___flmul@prod^0,0,c
 13649  00210A                     l1561:
 13650  00210A  90D8               	bcf	status,0,c
 13651  00210C  3629               	rlcf	___flmul@grs^0,f,c
 13652  00210E  362A               	rlcf	(___flmul@grs+1)^0,f,c
 13653  002110  362B               	rlcf	(___flmul@grs+2)^0,f,c
 13654  002112  362C               	rlcf	(___flmul@grs+3)^0,f,c
 13655  002114  0632               	decf	___flmul@temp^0,f,c
 13656  002116  A0D8               	btfss	status,0,c
 13657  002118  0633               	decf	(___flmul@temp+1)^0,f,c
 13658  00211A                     l8366:
 13659  00211A  AE30               	btfss	(___flmul@prod+2)^0,7,c
 13660  00211C  EF92  F010         	goto	u8821
 13661  002120  EF94  F010         	goto	u8820
 13662  002124                     u8821:
 13663  002124  EF78  F010         	goto	l8360
 13664  002128                     u8820:
 13665  002128  0E00               	movlw	0
 13666  00212A  6E28               	movwf	___flmul@aexp^0,c
 13667  00212C  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 13668  00212E  EF9B  F010         	goto	u8831
 13669  002132  EF9D  F010         	goto	u8830
 13670  002136                     u8831:
 13671  002136  EFC1  F010         	goto	l1563
 13672  00213A                     u8830:
 13673  00213A  0EFF               	movlw	255
 13674  00213C  1429               	andwf	___flmul@grs^0,w,c
 13675  00213E  6E23               	movwf	??___flmul^0,c
 13676  002140  0EFF               	movlw	255
 13677  002142  142A               	andwf	(___flmul@grs+1)^0,w,c
 13678  002144  6E24               	movwf	(??___flmul+1)^0,c
 13679  002146  0EFF               	movlw	255
 13680  002148  142B               	andwf	(___flmul@grs+2)^0,w,c
 13681  00214A  6E25               	movwf	(??___flmul+2)^0,c
 13682  00214C  0E7F               	movlw	127
 13683  00214E  142C               	andwf	(___flmul@grs+3)^0,w,c
 13684  002150  6E26               	movwf	(??___flmul+3)^0,c
 13685  002152  5023               	movf	??___flmul^0,w,c
 13686  002154  1024               	iorwf	(??___flmul+1)^0,w,c
 13687  002156  1025               	iorwf	(??___flmul+2)^0,w,c
 13688  002158  1026               	iorwf	(??___flmul+3)^0,w,c
 13689  00215A  B4D8               	btfsc	status,2,c
 13690  00215C  EFB2  F010         	goto	u8841
 13691  002160  EFB4  F010         	goto	u8840
 13692  002164                     u8841:
 13693  002164  EFB8  F010         	goto	l1564
 13694  002168                     u8840:
 13695  002168                     l8374:
 13696  002168  0E01               	movlw	1
 13697  00216A  6E28               	movwf	___flmul@aexp^0,c
 13698  00216C  EFC1  F010         	goto	l1563
 13699  002170                     l1564:
 13700  002170  A02E               	btfss	___flmul@prod^0,0,c
 13701  002172  EFBD  F010         	goto	u8851
 13702  002176  EFBF  F010         	goto	u8850
 13703  00217A                     u8851:
 13704  00217A  EFC1  F010         	goto	l1563
 13705  00217E                     u8850:
 13706  00217E  EFB4  F010         	goto	l8374
 13707  002182                     l1563:
 13708  002182  5028               	movf	___flmul@aexp^0,w,c
 13709  002184  B4D8               	btfsc	status,2,c
 13710  002186  EFC7  F010         	goto	u8861
 13711  00218A  EFC9  F010         	goto	u8860
 13712  00218E                     u8861:
 13713  00218E  EFED  F010         	goto	l8386
 13714  002192                     u8860:
 13715  002192  0E01               	movlw	1
 13716  002194  262E               	addwf	___flmul@prod^0,f,c
 13717  002196  0E00               	movlw	0
 13718  002198  222F               	addwfc	(___flmul@prod+1)^0,f,c
 13719  00219A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 13720  00219C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 13721  00219E  A031               	btfss	(___flmul@prod+3)^0,0,c
 13722  0021A0  EFD4  F010         	goto	u8871
 13723  0021A4  EFD6  F010         	goto	u8870
 13724  0021A8                     u8871:
 13725  0021A8  EFED  F010         	goto	l8386
 13726  0021AC                     u8870:
 13727  0021AC  C02E  F023         	movff	___flmul@prod,??___flmul
 13728  0021B0  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 13729  0021B4  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 13730  0021B8  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 13731  0021BC  3426               	rlcf	(??___flmul+3)^0,w,c
 13732  0021BE  3226               	rrcf	(??___flmul+3)^0,f,c
 13733  0021C0  3225               	rrcf	(??___flmul+2)^0,f,c
 13734  0021C2  3224               	rrcf	(??___flmul+1)^0,f,c
 13735  0021C4  3223               	rrcf	??___flmul^0,f,c
 13736  0021C6  C023  F02E         	movff	??___flmul,___flmul@prod
 13737  0021CA  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 13738  0021CE  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 13739  0021D2  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 13740  0021D6  4A32               	infsnz	___flmul@temp^0,f,c
 13741  0021D8  2A33               	incf	(___flmul@temp+1)^0,f,c
 13742  0021DA                     l8386:
 13743  0021DA  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 13744  0021DC  EFF8  F010         	goto	u8881
 13745  0021E0  5033               	movf	(___flmul@temp+1)^0,w,c
 13746  0021E2  E108               	bnz	u8880
 13747  0021E4  2832               	incf	___flmul@temp^0,w,c
 13748  0021E6  A0D8               	btfss	status,0,c
 13749  0021E8  EFF8  F010         	goto	u8881
 13750  0021EC  EFFA  F010         	goto	u8880
 13751  0021F0                     u8881:
 13752  0021F0  EF04  F011         	goto	l8390
 13753  0021F4                     u8880:
 13754  0021F4  0E00               	movlw	0
 13755  0021F6  6E2E               	movwf	___flmul@prod^0,c
 13756  0021F8  0E00               	movlw	0
 13757  0021FA  6E2F               	movwf	(___flmul@prod+1)^0,c
 13758  0021FC  0E80               	movlw	128
 13759  0021FE  6E30               	movwf	(___flmul@prod+2)^0,c
 13760  002200  0E7F               	movlw	127
 13761  002202  6E31               	movwf	(___flmul@prod+3)^0,c
 13762  002204  EF32  F011         	goto	l8402
 13763  002208                     l8390:
 13764  002208  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 13765  00220A  EF11  F011         	goto	u8890
 13766  00220E  5033               	movf	(___flmul@temp+1)^0,w,c
 13767  002210  E106               	bnz	u8891
 13768  002212  0432               	decf	___flmul@temp^0,w,c
 13769  002214  B0D8               	btfsc	status,0,c
 13770  002216  EF0F  F011         	goto	u8891
 13771  00221A  EF11  F011         	goto	u8890
 13772  00221E                     u8891:
 13773  00221E  EF1D  F011         	goto	l1571
 13774  002222                     u8890:
 13775  002222  0E00               	movlw	0
 13776  002224  6E2E               	movwf	___flmul@prod^0,c
 13777  002226  0E00               	movlw	0
 13778  002228  6E2F               	movwf	(___flmul@prod+1)^0,c
 13779  00222A  0E00               	movlw	0
 13780  00222C  6E30               	movwf	(___flmul@prod+2)^0,c
 13781  00222E  0E00               	movlw	0
 13782  002230  6E31               	movwf	(___flmul@prod+3)^0,c
 13783  002232  0E00               	movlw	0
 13784  002234  6E27               	movwf	___flmul@sign^0,c
 13785  002236  EF32  F011         	goto	l8402
 13786  00223A                     l1571:
 13787  00223A  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 13788  00223E  0EFF               	movlw	255
 13789  002240  162E               	andwf	___flmul@prod^0,f,c
 13790  002242  0EFF               	movlw	255
 13791  002244  162F               	andwf	(___flmul@prod+1)^0,f,c
 13792  002246  0E7F               	movlw	127
 13793  002248  1630               	andwf	(___flmul@prod+2)^0,f,c
 13794  00224A  0E00               	movlw	0
 13795  00224C  1631               	andwf	(___flmul@prod+3)^0,f,c
 13796  00224E  A02D               	btfss	___flmul@bexp^0,0,c
 13797  002250  EF2C  F011         	goto	u8901
 13798  002254  EF2E  F011         	goto	u8900
 13799  002258                     u8901:
 13800  002258  EF2F  F011         	goto	l8400
 13801  00225C                     u8900:
 13802  00225C  8E30               	bsf	(___flmul@prod+2)^0,7,c
 13803  00225E                     l8400:
 13804  00225E  90D8               	bcf	status,0,c
 13805  002260  302D               	rrcf	___flmul@bexp^0,w,c
 13806  002262  6E31               	movwf	(___flmul@prod+3)^0,c
 13807  002264                     l8402:
 13808  002264  5027               	movf	___flmul@sign^0,w,c
 13809  002266  1231               	iorwf	(___flmul@prod+3)^0,f,c
 13810  002268  C02E  F01B         	movff	___flmul@prod,?___flmul
 13811  00226C  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 13812  002270  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 13813  002274  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 13814  002278                     l1558:
 13815  002278  0012               	return		;funcret
 13816  00227A                     __end_of___flmul:
 13817                           	opt callstack 0
 13818                           
 13819 ;; *************** function ___fldiv *****************
 13820 ;; Defined at:
 13821 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 13822 ;; Parameters:    Size  Location     Type
 13823 ;;  b               4   67[COMRAM] unsigned char 
 13824 ;;  a               4   71[COMRAM] unsigned char 
 13825 ;; Auto vars:     Size  Location     Type
 13826 ;;  grs             4    7[BANK0 ] unsigned long 
 13827 ;;  rem             4    0[BANK0 ] unsigned long 
 13828 ;;  new_exp         2    5[BANK0 ] short 
 13829 ;;  aexp            1   12[BANK0 ] unsigned char 
 13830 ;;  bexp            1   11[BANK0 ] unsigned char 
 13831 ;;  sign            1    4[BANK0 ] unsigned char 
 13832 ;; Return value:  Size  Location     Type
 13833 ;;                  4   67[COMRAM] unsigned char 
 13834 ;; Registers used:
 13835 ;;		wreg, status,2, status,0
 13836 ;; Tracked objects:
 13837 ;;		On entry : 0/0
 13838 ;;		On exit  : 0/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13841 ;;      Params:         8       0       0       0       0       0       0       0       0
 13842 ;;      Locals:         0      13       0       0       0       0       0       0       0
 13843 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13844 ;;      Totals:        12      13       0       0       0       0       0       0       0
 13845 ;;Total ram usage:       25 bytes
 13846 ;; Hardware stack levels used:    1
 13847 ;; Hardware stack levels required when called:    2
 13848 ;; This function calls:
 13849 ;;		Nothing
 13850 ;; This function is called by:
 13851 ;;		_pwmDuty
 13852 ;;		_leerSensores
 13853 ;;		_efgtoa
 13854 ;; This function uses a non-reentrant model
 13855 ;;
 13856                           
 13857                           	psect	text60
 13858  00262C                     __ptext60:
 13859                           	opt callstack 0
 13860  00262C                     ___fldiv:
 13861                           	opt callstack 23
 13862  00262C  5047               	movf	(___fldiv@b+3)^0,w,c
 13863  00262E  0B80               	andlw	128
 13864  002630  0100               	movlb	0	; () banked
 13865  002632  6F64               	movwf	___fldiv@sign& (0+255),b
 13866  002634  5047               	movf	(___fldiv@b+3)^0,w,c
 13867  002636  2447               	addwf	(___fldiv@b+3)^0,w,c
 13868  002638  6F6B               	movwf	___fldiv@bexp& (0+255),b
 13869  00263A                     
 13870                           ; BSR set to: 0
 13871  00263A  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13872  00263C  EF22  F013         	goto	u8491
 13873  002640  EF24  F013         	goto	u8490
 13874  002644                     u8491:
 13875  002644  EF25  F013         	goto	l8146
 13876  002648                     u8490:
 13877  002648                     
 13878                           ; BSR set to: 0
 13879  002648  816B               	bsf	___fldiv@bexp& (0+255),0,b
 13880  00264A                     l8146:
 13881                           
 13882                           ; BSR set to: 0
 13883  00264A  516B               	movf	___fldiv@bexp& (0+255),w,b
 13884  00264C  B4D8               	btfsc	status,2,c
 13885  00264E  EF2B  F013         	goto	u8501
 13886  002652  EF2D  F013         	goto	u8500
 13887  002656                     u8501:
 13888  002656  EF42  F013         	goto	l8156
 13889  00265A                     u8500:
 13890  00265A                     
 13891                           ; BSR set to: 0
 13892  00265A  296B               	incf	___fldiv@bexp& (0+255),w,b
 13893  00265C  A4D8               	btfss	status,2,c
 13894  00265E  EF33  F013         	goto	u8511
 13895  002662  EF35  F013         	goto	u8510
 13896  002666                     u8511:
 13897  002666  EF3D  F013         	goto	l8152
 13898  00266A                     u8510:
 13899  00266A                     
 13900                           ; BSR set to: 0
 13901  00266A  0E00               	movlw	0
 13902  00266C  6E44               	movwf	___fldiv@b^0,c
 13903  00266E  0E00               	movlw	0
 13904  002670  6E45               	movwf	(___fldiv@b+1)^0,c
 13905  002672  0E00               	movlw	0
 13906  002674  6E46               	movwf	(___fldiv@b+2)^0,c
 13907  002676  0E00               	movlw	0
 13908  002678  6E47               	movwf	(___fldiv@b+3)^0,c
 13909  00267A                     l8152:
 13910                           
 13911                           ; BSR set to: 0
 13912  00267A  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13913  00267C                     
 13914                           ; BSR set to: 0
 13915  00267C  0E00               	movlw	0
 13916  00267E  6E47               	movwf	(___fldiv@b+3)^0,c
 13917  002680  EF4A  F013         	goto	l8158
 13918  002684                     l8156:
 13919                           
 13920                           ; BSR set to: 0
 13921  002684  0E00               	movlw	0
 13922  002686  6E44               	movwf	___fldiv@b^0,c
 13923  002688  0E00               	movlw	0
 13924  00268A  6E45               	movwf	(___fldiv@b+1)^0,c
 13925  00268C  0E00               	movlw	0
 13926  00268E  6E46               	movwf	(___fldiv@b+2)^0,c
 13927  002690  0E00               	movlw	0
 13928  002692  6E47               	movwf	(___fldiv@b+3)^0,c
 13929  002694                     l8158:
 13930                           
 13931                           ; BSR set to: 0
 13932  002694  504B               	movf	(___fldiv@a+3)^0,w,c
 13933  002696  0B80               	andlw	128
 13934  002698  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 13935  00269A                     
 13936                           ; BSR set to: 0
 13937  00269A  504B               	movf	(___fldiv@a+3)^0,w,c
 13938  00269C  244B               	addwf	(___fldiv@a+3)^0,w,c
 13939  00269E  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13940  0026A0                     
 13941                           ; BSR set to: 0
 13942  0026A0  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 13943  0026A2  EF55  F013         	goto	u8521
 13944  0026A6  EF57  F013         	goto	u8520
 13945  0026AA                     u8521:
 13946  0026AA  EF58  F013         	goto	l8166
 13947  0026AE                     u8520:
 13948  0026AE                     
 13949                           ; BSR set to: 0
 13950  0026AE  816C               	bsf	___fldiv@aexp& (0+255),0,b
 13951  0026B0                     l8166:
 13952                           
 13953                           ; BSR set to: 0
 13954  0026B0  516C               	movf	___fldiv@aexp& (0+255),w,b
 13955  0026B2  B4D8               	btfsc	status,2,c
 13956  0026B4  EF5E  F013         	goto	u8531
 13957  0026B8  EF60  F013         	goto	u8530
 13958  0026BC                     u8531:
 13959  0026BC  EF75  F013         	goto	l8176
 13960  0026C0                     u8530:
 13961  0026C0                     
 13962                           ; BSR set to: 0
 13963  0026C0  296C               	incf	___fldiv@aexp& (0+255),w,b
 13964  0026C2  A4D8               	btfss	status,2,c
 13965  0026C4  EF66  F013         	goto	u8541
 13966  0026C8  EF68  F013         	goto	u8540
 13967  0026CC                     u8541:
 13968  0026CC  EF70  F013         	goto	l8172
 13969  0026D0                     u8540:
 13970  0026D0                     
 13971                           ; BSR set to: 0
 13972  0026D0  0E00               	movlw	0
 13973  0026D2  6E48               	movwf	___fldiv@a^0,c
 13974  0026D4  0E00               	movlw	0
 13975  0026D6  6E49               	movwf	(___fldiv@a+1)^0,c
 13976  0026D8  0E00               	movlw	0
 13977  0026DA  6E4A               	movwf	(___fldiv@a+2)^0,c
 13978  0026DC  0E00               	movlw	0
 13979  0026DE  6E4B               	movwf	(___fldiv@a+3)^0,c
 13980  0026E0                     l8172:
 13981                           
 13982                           ; BSR set to: 0
 13983  0026E0  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 13984  0026E2                     
 13985                           ; BSR set to: 0
 13986  0026E2  0E00               	movlw	0
 13987  0026E4  6E4B               	movwf	(___fldiv@a+3)^0,c
 13988  0026E6  EF7D  F013         	goto	l8178
 13989  0026EA                     l8176:
 13990                           
 13991                           ; BSR set to: 0
 13992  0026EA  0E00               	movlw	0
 13993  0026EC  6E48               	movwf	___fldiv@a^0,c
 13994  0026EE  0E00               	movlw	0
 13995  0026F0  6E49               	movwf	(___fldiv@a+1)^0,c
 13996  0026F2  0E00               	movlw	0
 13997  0026F4  6E4A               	movwf	(___fldiv@a+2)^0,c
 13998  0026F6  0E00               	movlw	0
 13999  0026F8  6E4B               	movwf	(___fldiv@a+3)^0,c
 14000  0026FA                     l8178:
 14001                           
 14002                           ; BSR set to: 0
 14003  0026FA  5048               	movf	___fldiv@a^0,w,c
 14004  0026FC  1049               	iorwf	(___fldiv@a+1)^0,w,c
 14005  0026FE  104A               	iorwf	(___fldiv@a+2)^0,w,c
 14006  002700  104B               	iorwf	(___fldiv@a+3)^0,w,c
 14007  002702  A4D8               	btfss	status,2,c
 14008  002704  EF86  F013         	goto	u8551
 14009  002708  EF88  F013         	goto	u8550
 14010  00270C                     u8551:
 14011  00270C  EFA0  F013         	goto	l8190
 14012  002710                     u8550:
 14013  002710                     
 14014                           ; BSR set to: 0
 14015  002710  0E00               	movlw	0
 14016  002712  6E44               	movwf	___fldiv@b^0,c
 14017  002714  0E00               	movlw	0
 14018  002716  6E45               	movwf	(___fldiv@b+1)^0,c
 14019  002718  0E00               	movlw	0
 14020  00271A  6E46               	movwf	(___fldiv@b+2)^0,c
 14021  00271C  0E00               	movlw	0
 14022  00271E  6E47               	movwf	(___fldiv@b+3)^0,c
 14023  002720                     
 14024                           ; BSR set to: 0
 14025  002720  0E80               	movlw	128
 14026  002722  1246               	iorwf	(___fldiv@b+2)^0,f,c
 14027  002724  0E7F               	movlw	127
 14028  002726  1247               	iorwf	(___fldiv@b+3)^0,f,c
 14029  002728                     l8184:
 14030                           
 14031                           ; BSR set to: 0
 14032  002728  5164               	movf	___fldiv@sign& (0+255),w,b
 14033  00272A  1247               	iorwf	(___fldiv@b+3)^0,f,c
 14034  00272C                     
 14035                           ; BSR set to: 0
 14036  00272C  C044  F044         	movff	___fldiv@b,?___fldiv
 14037  002730  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 14038  002734  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 14039  002738  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 14040  00273C  EFE3  F014         	goto	l1522
 14041  002740                     l8190:
 14042                           
 14043                           ; BSR set to: 0
 14044  002740  516B               	movf	___fldiv@bexp& (0+255),w,b
 14045  002742  A4D8               	btfss	status,2,c
 14046  002744  EFA6  F013         	goto	u8561
 14047  002748  EFA8  F013         	goto	u8560
 14048  00274C                     u8561:
 14049  00274C  EFB2  F013         	goto	l8198
 14050  002750                     u8560:
 14051  002750                     
 14052                           ; BSR set to: 0
 14053  002750  0E00               	movlw	0
 14054  002752  6E44               	movwf	?___fldiv^0,c
 14055  002754  0E00               	movlw	0
 14056  002756  6E45               	movwf	(?___fldiv+1)^0,c
 14057  002758  0E00               	movlw	0
 14058  00275A  6E46               	movwf	(?___fldiv+2)^0,c
 14059  00275C  0E00               	movlw	0
 14060  00275E  6E47               	movwf	(?___fldiv+3)^0,c
 14061  002760  EFE3  F014         	goto	l1522
 14062  002764                     l8198:
 14063                           
 14064                           ; BSR set to: 0
 14065  002764  516C               	movf	___fldiv@aexp& (0+255),w,b
 14066  002766  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 14067  00276A  6A4D               	clrf	(??___fldiv+1)^0,c
 14068  00276C  5E4C               	subwf	??___fldiv^0,f,c
 14069  00276E  0E00               	movlw	0
 14070  002770  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 14071  002772  0E7F               	movlw	127
 14072  002774  244C               	addwf	??___fldiv^0,w,c
 14073  002776  6F65               	movwf	___fldiv@new_exp& (0+255),b
 14074  002778  0E00               	movlw	0
 14075  00277A  204D               	addwfc	(??___fldiv+1)^0,w,c
 14076  00277C  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14077  00277E                     
 14078                           ; BSR set to: 0
 14079  00277E  C044  F060         	movff	___fldiv@b,___fldiv@rem
 14080  002782  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 14081  002786  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 14082  00278A  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 14083  00278E                     
 14084                           ; BSR set to: 0
 14085  00278E  0E00               	movlw	0
 14086  002790  6E44               	movwf	___fldiv@b^0,c
 14087  002792  0E00               	movlw	0
 14088  002794  6E45               	movwf	(___fldiv@b+1)^0,c
 14089  002796  0E00               	movlw	0
 14090  002798  6E46               	movwf	(___fldiv@b+2)^0,c
 14091  00279A  0E00               	movlw	0
 14092  00279C  6E47               	movwf	(___fldiv@b+3)^0,c
 14093  00279E                     
 14094                           ; BSR set to: 0
 14095  00279E  0E00               	movlw	0
 14096  0027A0  6F67               	movwf	___fldiv@grs& (0+255),b
 14097  0027A2  0E00               	movlw	0
 14098  0027A4  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 14099  0027A6  0E00               	movlw	0
 14100  0027A8  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 14101  0027AA  0E00               	movlw	0
 14102  0027AC  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 14103  0027AE                     
 14104                           ; BSR set to: 0
 14105  0027AE  0E00               	movlw	0
 14106  0027B0  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14107  0027B2  EF13  F014         	goto	l1524
 14108  0027B6                     l8208:
 14109                           
 14110                           ; BSR set to: 0
 14111  0027B6  516C               	movf	___fldiv@aexp& (0+255),w,b
 14112  0027B8  B4D8               	btfsc	status,2,c
 14113  0027BA  EFE1  F013         	goto	u8571
 14114  0027BE  EFE3  F013         	goto	u8570
 14115  0027C2                     u8571:
 14116  0027C2  EFFA  F013         	goto	l8216
 14117  0027C6                     u8570:
 14118  0027C6                     
 14119                           ; BSR set to: 0
 14120  0027C6  90D8               	bcf	status,0,c
 14121  0027C8  3760               	rlcf	___fldiv@rem& (0+255),f,b
 14122  0027CA  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14123  0027CC  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14124  0027CE  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14125  0027D0  90D8               	bcf	status,0,c
 14126  0027D2  3644               	rlcf	___fldiv@b^0,f,c
 14127  0027D4  3645               	rlcf	(___fldiv@b+1)^0,f,c
 14128  0027D6  3646               	rlcf	(___fldiv@b+2)^0,f,c
 14129  0027D8  3647               	rlcf	(___fldiv@b+3)^0,f,c
 14130  0027DA                     
 14131                           ; BSR set to: 0
 14132  0027DA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14133  0027DC  EFF2  F013         	goto	u8581
 14134  0027E0  EFF4  F013         	goto	u8580
 14135  0027E4                     u8581:
 14136  0027E4  EFF5  F013         	goto	l1527
 14137  0027E8                     u8580:
 14138  0027E8                     
 14139                           ; BSR set to: 0
 14140  0027E8  8044               	bsf	___fldiv@b^0,0,c
 14141  0027EA                     l1527:
 14142                           
 14143                           ; BSR set to: 0
 14144  0027EA  90D8               	bcf	status,0,c
 14145  0027EC  3767               	rlcf	___fldiv@grs& (0+255),f,b
 14146  0027EE  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14147  0027F0  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14148  0027F2  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14149  0027F4                     l8216:
 14150                           
 14151                           ; BSR set to: 0
 14152  0027F4  5048               	movf	___fldiv@a^0,w,c
 14153  0027F6  5D60               	subwf	___fldiv@rem& (0+255),w,b
 14154  0027F8  5049               	movf	(___fldiv@a+1)^0,w,c
 14155  0027FA  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14156  0027FC  504A               	movf	(___fldiv@a+2)^0,w,c
 14157  0027FE  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14158  002800  504B               	movf	(___fldiv@a+3)^0,w,c
 14159  002802  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14160  002804  A0D8               	btfss	status,0,c
 14161  002806  EF07  F014         	goto	u8591
 14162  00280A  EF09  F014         	goto	u8590
 14163  00280E                     u8591:
 14164  00280E  EF12  F014         	goto	l8222
 14165  002812                     u8590:
 14166  002812                     
 14167                           ; BSR set to: 0
 14168  002812  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14169  002814                     
 14170                           ; BSR set to: 0
 14171  002814  5048               	movf	___fldiv@a^0,w,c
 14172  002816  5F60               	subwf	___fldiv@rem& (0+255),f,b
 14173  002818  5049               	movf	(___fldiv@a+1)^0,w,c
 14174  00281A  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14175  00281C  504A               	movf	(___fldiv@a+2)^0,w,c
 14176  00281E  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14177  002820  504B               	movf	(___fldiv@a+3)^0,w,c
 14178  002822  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14179  002824                     l8222:
 14180                           
 14181                           ; BSR set to: 0
 14182  002824  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 14183  002826                     l1524:
 14184                           
 14185                           ; BSR set to: 0
 14186  002826  0E19               	movlw	25
 14187  002828  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 14188  00282A  EF19  F014         	goto	u8601
 14189  00282E  EF1B  F014         	goto	u8600
 14190  002832                     u8601:
 14191  002832  EFDB  F013         	goto	l8208
 14192  002836                     u8600:
 14193  002836                     
 14194                           ; BSR set to: 0
 14195  002836  5160               	movf	___fldiv@rem& (0+255),w,b
 14196  002838  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14197  00283A  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14198  00283C  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14199  00283E  B4D8               	btfsc	status,2,c
 14200  002840  EF24  F014         	goto	u8611
 14201  002844  EF26  F014         	goto	u8610
 14202  002848                     u8611:
 14203  002848  EF3E  F014         	goto	l8234
 14204  00284C                     u8610:
 14205  00284C                     
 14206                           ; BSR set to: 0
 14207  00284C  8167               	bsf	___fldiv@grs& (0+255),0,b
 14208  00284E  EF3E  F014         	goto	l8234
 14209  002852                     l8228:
 14210                           
 14211                           ; BSR set to: 0
 14212  002852  90D8               	bcf	status,0,c
 14213  002854  3644               	rlcf	___fldiv@b^0,f,c
 14214  002856  3645               	rlcf	(___fldiv@b+1)^0,f,c
 14215  002858  3646               	rlcf	(___fldiv@b+2)^0,f,c
 14216  00285A  3647               	rlcf	(___fldiv@b+3)^0,f,c
 14217  00285C                     
 14218                           ; BSR set to: 0
 14219  00285C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14220  00285E  EF33  F014         	goto	u8621
 14221  002862  EF35  F014         	goto	u8620
 14222  002866                     u8621:
 14223  002866  EF36  F014         	goto	l1533
 14224  00286A                     u8620:
 14225  00286A                     
 14226                           ; BSR set to: 0
 14227  00286A  8044               	bsf	___fldiv@b^0,0,c
 14228  00286C                     l1533:
 14229                           
 14230                           ; BSR set to: 0
 14231  00286C  90D8               	bcf	status,0,c
 14232  00286E  3767               	rlcf	___fldiv@grs& (0+255),f,b
 14233  002870  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14234  002872  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14235  002874  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14236  002876  0765               	decf	___fldiv@new_exp& (0+255),f,b
 14237  002878  A0D8               	btfss	status,0,c
 14238  00287A  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14239  00287C                     l8234:
 14240                           
 14241                           ; BSR set to: 0
 14242  00287C  AE46               	btfss	(___fldiv@b+2)^0,7,c
 14243  00287E  EF43  F014         	goto	u8631
 14244  002882  EF45  F014         	goto	u8630
 14245  002886                     u8631:
 14246  002886  EF29  F014         	goto	l8228
 14247  00288A                     u8630:
 14248  00288A                     
 14249                           ; BSR set to: 0
 14250  00288A  0E00               	movlw	0
 14251  00288C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14252  00288E                     
 14253                           ; BSR set to: 0
 14254  00288E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14255  002890  EF4C  F014         	goto	u8641
 14256  002894  EF4E  F014         	goto	u8640
 14257  002898                     u8641:
 14258  002898  EF72  F014         	goto	l1535
 14259  00289C                     u8640:
 14260  00289C                     
 14261                           ; BSR set to: 0
 14262  00289C  0EFF               	movlw	255
 14263  00289E  1567               	andwf	___fldiv@grs& (0+255),w,b
 14264  0028A0  6E4C               	movwf	??___fldiv^0,c
 14265  0028A2  0EFF               	movlw	255
 14266  0028A4  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14267  0028A6  6E4D               	movwf	(??___fldiv+1)^0,c
 14268  0028A8  0EFF               	movlw	255
 14269  0028AA  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14270  0028AC  6E4E               	movwf	(??___fldiv+2)^0,c
 14271  0028AE  0E7F               	movlw	127
 14272  0028B0  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14273  0028B2  6E4F               	movwf	(??___fldiv+3)^0,c
 14274  0028B4  504C               	movf	??___fldiv^0,w,c
 14275  0028B6  104D               	iorwf	(??___fldiv+1)^0,w,c
 14276  0028B8  104E               	iorwf	(??___fldiv+2)^0,w,c
 14277  0028BA  104F               	iorwf	(??___fldiv+3)^0,w,c
 14278  0028BC  B4D8               	btfsc	status,2,c
 14279  0028BE  EF63  F014         	goto	u8651
 14280  0028C2  EF65  F014         	goto	u8650
 14281  0028C6                     u8651:
 14282  0028C6  EF69  F014         	goto	l1536
 14283  0028CA                     u8650:
 14284  0028CA                     l8242:
 14285                           
 14286                           ; BSR set to: 0
 14287  0028CA  0E01               	movlw	1
 14288  0028CC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 14289  0028CE  EF72  F014         	goto	l1535
 14290  0028D2                     l1536:
 14291                           
 14292                           ; BSR set to: 0
 14293  0028D2  A044               	btfss	___fldiv@b^0,0,c
 14294  0028D4  EF6E  F014         	goto	u8661
 14295  0028D8  EF70  F014         	goto	u8660
 14296  0028DC                     u8661:
 14297  0028DC  EF72  F014         	goto	l1535
 14298  0028E0                     u8660:
 14299  0028E0  EF65  F014         	goto	l8242
 14300  0028E4                     l1535:
 14301                           
 14302                           ; BSR set to: 0
 14303  0028E4  516C               	movf	___fldiv@aexp& (0+255),w,b
 14304  0028E6  B4D8               	btfsc	status,2,c
 14305  0028E8  EF78  F014         	goto	u8671
 14306  0028EC  EF7A  F014         	goto	u8670
 14307  0028F0                     u8671:
 14308  0028F0  EF9E  F014         	goto	l8254
 14309  0028F4                     u8670:
 14310  0028F4                     
 14311                           ; BSR set to: 0
 14312  0028F4  0E01               	movlw	1
 14313  0028F6  2644               	addwf	___fldiv@b^0,f,c
 14314  0028F8  0E00               	movlw	0
 14315  0028FA  2245               	addwfc	(___fldiv@b+1)^0,f,c
 14316  0028FC  2246               	addwfc	(___fldiv@b+2)^0,f,c
 14317  0028FE  2247               	addwfc	(___fldiv@b+3)^0,f,c
 14318  002900                     
 14319                           ; BSR set to: 0
 14320  002900  A047               	btfss	(___fldiv@b+3)^0,0,c
 14321  002902  EF85  F014         	goto	u8681
 14322  002906  EF87  F014         	goto	u8680
 14323  00290A                     u8681:
 14324  00290A  EF9E  F014         	goto	l8254
 14325  00290E                     u8680:
 14326  00290E                     
 14327                           ; BSR set to: 0
 14328  00290E  C044  F04C         	movff	___fldiv@b,??___fldiv
 14329  002912  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 14330  002916  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 14331  00291A  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 14332  00291E  344F               	rlcf	(??___fldiv+3)^0,w,c
 14333  002920  324F               	rrcf	(??___fldiv+3)^0,f,c
 14334  002922  324E               	rrcf	(??___fldiv+2)^0,f,c
 14335  002924  324D               	rrcf	(??___fldiv+1)^0,f,c
 14336  002926  324C               	rrcf	??___fldiv^0,f,c
 14337  002928  C04C  F044         	movff	??___fldiv,___fldiv@b
 14338  00292C  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 14339  002930  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 14340  002934  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 14341  002938                     
 14342                           ; BSR set to: 0
 14343  002938  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 14344  00293A  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14345  00293C                     l8254:
 14346                           
 14347                           ; BSR set to: 0
 14348  00293C  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14349  00293E  EFA9  F014         	goto	u8691
 14350  002942  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14351  002944  E108               	bnz	u8690
 14352  002946  2965               	incf	___fldiv@new_exp& (0+255),w,b
 14353  002948  A0D8               	btfss	status,0,c
 14354  00294A  EFA9  F014         	goto	u8691
 14355  00294E  EFAB  F014         	goto	u8690
 14356  002952                     u8691:
 14357  002952  EFB6  F014         	goto	l8258
 14358  002956                     u8690:
 14359  002956                     
 14360                           ; BSR set to: 0
 14361  002956  0E00               	movlw	0
 14362  002958  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14363  00295A  6965               	setf	___fldiv@new_exp& (0+255),b
 14364  00295C  0E00               	movlw	0
 14365  00295E  6E44               	movwf	___fldiv@b^0,c
 14366  002960  0E00               	movlw	0
 14367  002962  6E45               	movwf	(___fldiv@b+1)^0,c
 14368  002964  0E00               	movlw	0
 14369  002966  6E46               	movwf	(___fldiv@b+2)^0,c
 14370  002968  0E00               	movlw	0
 14371  00296A  6E47               	movwf	(___fldiv@b+3)^0,c
 14372  00296C                     l8258:
 14373                           
 14374                           ; BSR set to: 0
 14375  00296C  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14376  00296E  EFC3  F014         	goto	u8700
 14377  002972  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14378  002974  E106               	bnz	u8701
 14379  002976  0565               	decf	___fldiv@new_exp& (0+255),w,b
 14380  002978  B0D8               	btfsc	status,0,c
 14381  00297A  EFC1  F014         	goto	u8701
 14382  00297E  EFC3  F014         	goto	u8700
 14383  002982                     u8701:
 14384  002982  EFD1  F014         	goto	l8262
 14385  002986                     u8700:
 14386  002986                     
 14387                           ; BSR set to: 0
 14388  002986  0E00               	movlw	0
 14389  002988  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14390  00298A  0E00               	movlw	0
 14391  00298C  6F65               	movwf	___fldiv@new_exp& (0+255),b
 14392  00298E  0E00               	movlw	0
 14393  002990  6E44               	movwf	___fldiv@b^0,c
 14394  002992  0E00               	movlw	0
 14395  002994  6E45               	movwf	(___fldiv@b+1)^0,c
 14396  002996  0E00               	movlw	0
 14397  002998  6E46               	movwf	(___fldiv@b+2)^0,c
 14398  00299A  0E00               	movlw	0
 14399  00299C  6E47               	movwf	(___fldiv@b+3)^0,c
 14400  00299E  0E00               	movlw	0
 14401  0029A0  6F64               	movwf	___fldiv@sign& (0+255),b
 14402  0029A2                     l8262:
 14403                           
 14404                           ; BSR set to: 0
 14405  0029A2  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 14406  0029A6                     
 14407                           ; BSR set to: 0
 14408  0029A6  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 14409  0029A8  EFD8  F014         	goto	u8711
 14410  0029AC  EFDA  F014         	goto	u8710
 14411  0029B0                     u8711:
 14412  0029B0  EFDD  F014         	goto	l8268
 14413  0029B4                     u8710:
 14414  0029B4                     
 14415                           ; BSR set to: 0
 14416  0029B4  8E46               	bsf	(___fldiv@b+2)^0,7,c
 14417  0029B6  EFDE  F014         	goto	l8270
 14418  0029BA                     l8268:
 14419                           
 14420                           ; BSR set to: 0
 14421  0029BA  9E46               	bcf	(___fldiv@b+2)^0,7,c
 14422  0029BC                     l8270:
 14423                           
 14424                           ; BSR set to: 0
 14425  0029BC  90D8               	bcf	status,0,c
 14426  0029BE  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 14427  0029C0  6E47               	movwf	(___fldiv@b+3)^0,c
 14428  0029C2  EF94  F013         	goto	l8184
 14429  0029C6                     l1522:
 14430                           
 14431                           ; BSR set to: 0
 14432  0029C6  0012               	return		;funcret
 14433  0029C8                     __end_of___fldiv:
 14434                           	opt callstack 0
 14435                           
 14436 ;; *************** function _forzarReversa *****************
 14437 ;; Defined at:
 14438 ;;		line 493 in file "main.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;		None
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;		None
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  1    wreg      void 
 14445 ;; Registers used:
 14446 ;;		wreg
 14447 ;; Tracked objects:
 14448 ;;		On entry : 0/0
 14449 ;;		On exit  : 0/0
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14452 ;;      Params:         0       0       0       0       0       0       0       0       0
 14453 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14454 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14455 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14456 ;;Total ram usage:        2 bytes
 14457 ;; Hardware stack levels used:    1
 14458 ;; Hardware stack levels required when called:    2
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_forzarEspejeoIzquierda
 14463 ;;		_forzarEspejeoDerecha
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text61
 14468  005438                     __ptext61:
 14469                           	opt callstack 0
 14470  005438                     _forzarReversa:
 14471                           	opt callstack 24
 14472  005438                     
 14473                           ;main.c: 494:     LATB4 = 0;
 14474  005438  988A               	bcf	3978,4,c	;volatile
 14475                           
 14476                           ;main.c: 495:     LATB5 = 1;
 14477  00543A  8A8A               	bsf	3978,5,c	;volatile
 14478                           
 14479                           ;main.c: 496:     LATB6 = 0;
 14480  00543C  9C8A               	bcf	3978,6,c	;volatile
 14481                           
 14482                           ;main.c: 497:     LATB7 = 1;
 14483  00543E  8E8A               	bsf	3978,7,c	;volatile
 14484  005440                     
 14485                           ;main.c: 499:     _delay((unsigned long)((400)*(4000000/4000.0)));
 14486  005440  0E03               	movlw	3
 14487  005442  6E07               	movwf	(??_forzarReversa+1)^0,c
 14488  005444  0E08               	movlw	8
 14489  005446  6E06               	movwf	??_forzarReversa^0,c
 14490  005448  0E77               	movlw	119
 14491  00544A                     u11957:
 14492  00544A  2EE8               	decfsz	wreg,f,c
 14493  00544C  D7FE               	bra	u11957
 14494  00544E  2E06               	decfsz	??_forzarReversa^0,f,c
 14495  005450  D7FC               	bra	u11957
 14496  005452  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
 14497  005454  D7FA               	bra	u11957
 14498  005456  F000               	nop	
 14499  005458  0012               	return		;funcret
 14500  00545A                     __end_of_forzarReversa:
 14501                           	opt callstack 0
 14502                           
 14503 ;; *************** function _forzarParoAuto *****************
 14504 ;; Defined at:
 14505 ;;		line 482 in file "main.c"
 14506 ;; Parameters:    Size  Location     Type
 14507 ;;		None
 14508 ;; Auto vars:     Size  Location     Type
 14509 ;;		None
 14510 ;; Return value:  Size  Location     Type
 14511 ;;                  1    wreg      void 
 14512 ;; Registers used:
 14513 ;;		wreg
 14514 ;; Tracked objects:
 14515 ;;		On entry : 0/0
 14516 ;;		On exit  : 0/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14519 ;;      Params:         0       0       0       0       0       0       0       0       0
 14520 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14521 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14522 ;;      Totals:         1       0       0       0       0       0       0       0       0
 14523 ;;Total ram usage:        1 bytes
 14524 ;; Hardware stack levels used:    1
 14525 ;; Hardware stack levels required when called:    2
 14526 ;; This function calls:
 14527 ;;		Nothing
 14528 ;; This function is called by:
 14529 ;;		_comportamientoBasico
 14530 ;;		_finalizarRecorrido
 14531 ;;		_forzarEspejeoIzquierda
 14532 ;;		_forzarEspejeoDerecha
 14533 ;;		_main
 14534 ;; This function uses a non-reentrant model
 14535 ;;
 14536                           
 14537                           	psect	text62
 14538  0054CE                     __ptext62:
 14539                           	opt callstack 0
 14540  0054CE                     _forzarParoAuto:
 14541                           	opt callstack 28
 14542  0054CE                     
 14543                           ;main.c: 484:     LATB4 = 0;
 14544  0054CE  988A               	bcf	3978,4,c	;volatile
 14545                           
 14546                           ;main.c: 485:     LATB5 = 0;
 14547  0054D0  9A8A               	bcf	3978,5,c	;volatile
 14548                           
 14549                           ;main.c: 486:     LATB6 = 0;
 14550  0054D2  9C8A               	bcf	3978,6,c	;volatile
 14551                           
 14552                           ;main.c: 489:     if (!0)
 14553  0054D4  9E8A               	bcf	3978,7,c	;volatile
 14554  0054D6                     
 14555                           ;main.c: 490:         _delay((unsigned long)((35)*(4000000/4000.0)));
 14556  0054D6  0E2E               	movlw	46
 14557  0054D8  6E06               	movwf	??_forzarParoAuto^0,c
 14558  0054DA  0E73               	movlw	115
 14559  0054DC                     u11967:
 14560  0054DC  2EE8               	decfsz	wreg,f,c
 14561  0054DE  D7FE               	bra	u11967
 14562  0054E0  2E06               	decfsz	??_forzarParoAuto^0,f,c
 14563  0054E2  D7FC               	bra	u11967
 14564  0054E4  F000               	nop	
 14565  0054E6  0012               	return		;funcret
 14566  0054E8                     __end_of_forzarParoAuto:
 14567                           	opt callstack 0
 14568                           
 14569 ;; *************** function _forzarGiroDerecha *****************
 14570 ;; Defined at:
 14571 ;;		line 522 in file "main.c"
 14572 ;; Parameters:    Size  Location     Type
 14573 ;;		None
 14574 ;; Auto vars:     Size  Location     Type
 14575 ;;		None
 14576 ;; Return value:  Size  Location     Type
 14577 ;;                  1    wreg      void 
 14578 ;; Registers used:
 14579 ;;		wreg
 14580 ;; Tracked objects:
 14581 ;;		On entry : 0/0
 14582 ;;		On exit  : 0/0
 14583 ;;		Unchanged: 0/0
 14584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14585 ;;      Params:         0       0       0       0       0       0       0       0       0
 14586 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14587 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14588 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14589 ;;Total ram usage:        2 bytes
 14590 ;; Hardware stack levels used:    1
 14591 ;; Hardware stack levels required when called:    2
 14592 ;; This function calls:
 14593 ;;		Nothing
 14594 ;; This function is called by:
 14595 ;;		_forzarEspejeoDerecha
 14596 ;; This function uses a non-reentrant model
 14597 ;;
 14598                           
 14599                           	psect	text63
 14600  00547A                     __ptext63:
 14601                           	opt callstack 0
 14602  00547A                     _forzarGiroDerecha:
 14603                           	opt callstack 24
 14604  00547A                     
 14605                           ;main.c: 523:     LATB4 = 1;
 14606  00547A  888A               	bsf	3978,4,c	;volatile
 14607                           
 14608                           ;main.c: 524:     LATB5 = 0;
 14609  00547C  9A8A               	bcf	3978,5,c	;volatile
 14610                           
 14611                           ;main.c: 525:     LATB6 = 0;
 14612  00547E  9C8A               	bcf	3978,6,c	;volatile
 14613                           
 14614                           ;main.c: 526:     LATB7 = 0;
 14615  005480  9E8A               	bcf	3978,7,c	;volatile
 14616  005482                     
 14617                           ;main.c: 527:     _delay((unsigned long)((410)*(4000000/4000.0)));
 14618  005482  0E03               	movlw	3
 14619  005484  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
 14620  005486  0E15               	movlw	21
 14621  005488  6E06               	movwf	??_forzarGiroDerecha^0,c
 14622  00548A  0E74               	movlw	116
 14623  00548C                     u11977:
 14624  00548C  2EE8               	decfsz	wreg,f,c
 14625  00548E  D7FE               	bra	u11977
 14626  005490  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
 14627  005492  D7FC               	bra	u11977
 14628  005494  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
 14629  005496  D7FA               	bra	u11977
 14630  005498  0012               	return		;funcret
 14631  00549A                     __end_of_forzarGiroDerecha:
 14632                           	opt callstack 0
 14633                           
 14634 ;; *************** function _decidirDireccion *****************
 14635 ;; Defined at:
 14636 ;;		line 873 in file "main.c"
 14637 ;; Parameters:    Size  Location     Type
 14638 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 14639 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 14640 ;;  investigando    2   65[COMRAM] PTR unsigned char 
 14641 ;;		 -> comportamientoBasico@investigandoCruce(1), 
 14642 ;;  posicionInvC    2   67[COMRAM] PTR unsigned char 
 14643 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
 14644 ;;  contCaminosR    2   69[COMRAM] PTR unsigned char 
 14645 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
 14646 ;;  caminoActual    2   71[COMRAM] PTR unsigned char 
 14647 ;;		 -> comportamientoBasico@caminoActual(1), 
 14648 ;;  cambioOrient    2   73[COMRAM] PTR unsigned char 
 14649 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
 14650 ;; Auto vars:     Size  Location     Type
 14651 ;;  direccionEle    1   77[COMRAM] unsigned char 
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  1    wreg      unsigned char 
 14654 ;; Registers used:
 14655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14656 ;; Tracked objects:
 14657 ;;		On entry : 0/0
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14661 ;;      Params:        12       0       0       0       0       0       0       0       0
 14662 ;;      Locals:         1       0       0       0       0       0       0       0       0
 14663 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14664 ;;      Totals:        15       0       0       0       0       0       0       0       0
 14665 ;;Total ram usage:       15 bytes
 14666 ;; Hardware stack levels used:    1
 14667 ;; Hardware stack levels required when called:    4
 14668 ;; This function calls:
 14669 ;;		___flge
 14670 ;;		_seLlegoAlDestino
 14671 ;; This function is called by:
 14672 ;;		_comportamientoBasico
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           	psect	text64
 14677  001A16                     __ptext64:
 14678                           	opt callstack 0
 14679  001A16                     _decidirDireccion:
 14680                           	opt callstack 25
 14681  001A16                     
 14682                           ;main.c: 873: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 874:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro) {;main.c: 876:     T_UBYTE direccion
      +                          Elegida;;main.c: 877:     llegoDestino = seLlegoAlDestino();
 14683  001A16  ECBB  F029         	call	_seLlegoAlDestino	;wreg free
 14684  001A1A  6E59               	movwf	_llegoDestino^0,c
 14685  001A1C                     
 14686                           ;main.c: 880:     if (*posicionInvCruce && *investigandoCruce) {
 14687  001A1C  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14688  001A20  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14689  001A24  50DF               	movf	indf2,w,c
 14690  001A26  B4D8               	btfsc	status,2,c
 14691  001A28  EF18  F00D         	goto	u11081
 14692  001A2C  EF1A  F00D         	goto	u11080
 14693  001A30                     u11081:
 14694  001A30  EFC5  F00E         	goto	l9934
 14695  001A34                     u11080:
 14696  001A34  C042  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
 14697  001A38  C043  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
 14698  001A3C  50DF               	movf	indf2,w,c
 14699  001A3E  B4D8               	btfsc	status,2,c
 14700  001A40  EF24  F00D         	goto	u11091
 14701  001A44  EF26  F00D         	goto	u11090
 14702  001A48                     u11091:
 14703  001A48  EFC5  F00E         	goto	l9934
 14704  001A4C                     u11090:
 14705  001A4C                     
 14706                           ;main.c: 882:         if (*posicionInvCruce)
 14707  001A4C  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14708  001A50  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14709  001A54  50DF               	movf	indf2,w,c
 14710  001A56  B4D8               	btfsc	status,2,c
 14711  001A58  EF30  F00D         	goto	u11101
 14712  001A5C  EF32  F00D         	goto	u11100
 14713  001A60                     u11101:
 14714  001A60  EF38  F00D         	goto	l9696
 14715  001A64                     u11100:
 14716  001A64                     
 14717                           ;main.c: 883:             *posicionInvCruce = 0;
 14718  001A64  C044  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
 14719  001A68  C045  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
 14720  001A6C  0E00               	movlw	0
 14721  001A6E  6EDF               	movwf	indf2,c
 14722  001A70                     l9696:
 14723                           
 14724                           ;main.c: 885:         if (llegoDestino) {
 14725  001A70  5059               	movf	_llegoDestino^0,w,c
 14726  001A72  B4D8               	btfsc	status,2,c
 14727  001A74  EF3E  F00D         	goto	u11111
 14728  001A78  EF40  F00D         	goto	u11110
 14729  001A7C                     u11111:
 14730  001A7C  EF9A  F00D         	goto	l9720
 14731  001A80                     u11110:
 14732  001A80                     
 14733                           ;main.c: 886:             direccionElegida = ALTO;
 14734  001A80  0E04               	movlw	4
 14735  001A82  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14736                           
 14737                           ;main.c: 888:         } else {
 14738  001A84  EFB7  F00D         	goto	l9722
 14739  001A88                     l9700:
 14740                           
 14741                           ;main.c: 892:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == 1)
 14742  001A88  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14743  001A8C  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14744  001A90  04DE               	decf	postinc2,w,c
 14745  001A92  A4D8               	btfss	status,2,c
 14746  001A94  EF4E  F00D         	goto	u11121
 14747  001A98  EF50  F00D         	goto	u11120
 14748  001A9C                     u11121:
 14749  001A9C  EF58  F00D         	goto	l9704
 14750  001AA0                     u11120:
 14751  001AA0                     
 14752                           ;main.c: 893:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
 14753  001AA0  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14754  001AA4  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14755  001AA8  0E58               	movlw	88
 14756  001AAA  6EDF               	movwf	indf2,c
 14757  001AAC  EFB7  F00D         	goto	l9722
 14758  001AB0                     l9704:
 14759                           
 14760                           ;main.c: 896:                         if (caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] =
      +                          = 1)
 14761  001AB0  EE20 F001          	lfsr	2,1
 14762  001AB4  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14763  001AB6  26D9               	addwf	fsr2l,f,c
 14764  001AB8  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14765  001ABA  22DA               	addwfc	fsr2h,f,c
 14766  001ABC  04DE               	decf	postinc2,w,c
 14767  001ABE  A4D8               	btfss	status,2,c
 14768  001AC0  EF64  F00D         	goto	u11131
 14769  001AC4  EF66  F00D         	goto	u11130
 14770  001AC8                     u11131:
 14771  001AC8  EFB7  F00D         	goto	l557
 14772  001ACC                     u11130:
 14773  001ACC                     l9706:
 14774                           
 14775                           ;main.c: 897:                             caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] =
      +                           'X';
 14776  001ACC  EE20 F001          	lfsr	2,1
 14777  001AD0  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14778  001AD2  26D9               	addwf	fsr2l,f,c
 14779  001AD4  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14780  001AD6  22DA               	addwfc	fsr2h,f,c
 14781  001AD8  0E58               	movlw	88
 14782  001ADA  6EDF               	movwf	indf2,c
 14783  001ADC  EFB7  F00D         	goto	l9722
 14784  001AE0                     l9708:
 14785                           
 14786                           ;main.c: 902:                     if (caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] == 1)
 14787  001AE0  EE20 F001          	lfsr	2,1
 14788  001AE4  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14789  001AE6  26D9               	addwf	fsr2l,f,c
 14790  001AE8  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14791  001AEA  22DA               	addwfc	fsr2h,f,c
 14792  001AEC  04DE               	decf	postinc2,w,c
 14793  001AEE  A4D8               	btfss	status,2,c
 14794  001AF0  EF7C  F00D         	goto	u11141
 14795  001AF4  EF7E  F00D         	goto	u11140
 14796  001AF8                     u11141:
 14797  001AF8  EF80  F00D         	goto	l9712
 14798  001AFC                     u11140:
 14799  001AFC  EF66  F00D         	goto	l9706
 14800  001B00                     l9712:
 14801                           
 14802                           ;main.c: 905:                         caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1 ] = 'X';
 14803  001B00  EE20 F002          	lfsr	2,2
 14804  001B04  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14805  001B06  26D9               	addwf	fsr2l,f,c
 14806  001B08  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14807  001B0A  22DA               	addwfc	fsr2h,f,c
 14808  001B0C  0E58               	movlw	88
 14809  001B0E  6EDF               	movwf	indf2,c
 14810  001B10  EFB7  F00D         	goto	l9722
 14811  001B14                     l9714:
 14812                           
 14813                           ;main.c: 911:                     if (caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1 ] == 1)
 14814  001B14  EE20 F002          	lfsr	2,2
 14815  001B18  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14816  001B1A  26D9               	addwf	fsr2l,f,c
 14817  001B1C  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14818  001B1E  22DA               	addwfc	fsr2h,f,c
 14819  001B20  04DE               	decf	postinc2,w,c
 14820  001B22  A4D8               	btfss	status,2,c
 14821  001B24  EF96  F00D         	goto	u11151
 14822  001B28  EF98  F00D         	goto	u11150
 14823  001B2C                     u11151:
 14824  001B2C  EFB7  F00D         	goto	l9722
 14825  001B30                     u11150:
 14826  001B30  EF80  F00D         	goto	l9712
 14827  001B34                     l9720:
 14828  001B34  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 14829  001B38  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 14830  001B3C  50DF               	movf	indf2,w,c
 14831  001B3E  6E4C               	movwf	??_decidirDireccion^0,c
 14832  001B40  6A4D               	clrf	(??_decidirDireccion+1)^0,c
 14833                           
 14834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14835                           ; Switch size 1, requested type "simple"
 14836                           ; Number of cases is 1, Range of values is 0 to 0
 14837                           ; switch strategies available:
 14838                           ; Name         Instructions Cycles
 14839                           ; simple_byte            4     3 (average)
 14840                           ;	Chosen strategy is simple_byte
 14841  001B42  504D               	movf	(??_decidirDireccion+1)^0,w,c
 14842  001B44  0A00               	xorlw	0	; case 0
 14843  001B46  B4D8               	btfsc	status,2,c
 14844  001B48  EFA8  F00D         	goto	l10888
 14845  001B4C  EFB7  F00D         	goto	l9722
 14846  001B50                     l10888:
 14847                           
 14848                           ; Switch size 1, requested type "simple"
 14849                           ; Number of cases is 3, Range of values is 1 to 3
 14850                           ; switch strategies available:
 14851                           ; Name         Instructions Cycles
 14852                           ; simple_byte           10     6 (average)
 14853                           ;	Chosen strategy is simple_byte
 14854  001B50  504C               	movf	??_decidirDireccion^0,w,c
 14855  001B52  0A01               	xorlw	1	; case 1
 14856  001B54  B4D8               	btfsc	status,2,c
 14857  001B56  EF44  F00D         	goto	l9700
 14858  001B5A  0A03               	xorlw	3	; case 2
 14859  001B5C  B4D8               	btfsc	status,2,c
 14860  001B5E  EF70  F00D         	goto	l9708
 14861  001B62  0A01               	xorlw	1	; case 3
 14862  001B64  B4D8               	btfsc	status,2,c
 14863  001B66  EF8A  F00D         	goto	l9714
 14864  001B6A  EFB7  F00D         	goto	l9722
 14865  001B6E                     l557:
 14866  001B6E                     l9722:
 14867                           
 14868                           ;main.c: 921:         if (!(*cambioOrientacionCarro)) {
 14869  001B6E  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 14870  001B72  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 14871  001B76  50DF               	movf	indf2,w,c
 14872  001B78  A4D8               	btfss	status,2,c
 14873  001B7A  EFC1  F00D         	goto	u11161
 14874  001B7E  EFC3  F00D         	goto	u11160
 14875  001B82                     u11161:
 14876  001B82  EFA8  F00E         	goto	l9932
 14877  001B86                     u11160:
 14878  001B86                     
 14879                           ;main.c: 923:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == 1)
 14880  001B86  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14881  001B8A  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14882  001B8E  04DE               	decf	postinc2,w,c
 14883  001B90  A4D8               	btfss	status,2,c
 14884  001B92  EFCD  F00D         	goto	u11171
 14885  001B96  EFCF  F00D         	goto	u11170
 14886  001B9A                     u11171:
 14887  001B9A  EFD3  F00D         	goto	l9728
 14888  001B9E                     u11170:
 14889  001B9E                     
 14890                           ;main.c: 924:                 direccionElegida = SENSOR_PRIORIDAD_ALTA;
 14891  001B9E  0E01               	movlw	1
 14892  001BA0  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14893  001BA2  EFF5  F00D         	goto	l9736
 14894  001BA6                     l9728:
 14895  001BA6  EE20 F001          	lfsr	2,1
 14896  001BAA  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14897  001BAC  26D9               	addwf	fsr2l,f,c
 14898  001BAE  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14899  001BB0  22DA               	addwfc	fsr2h,f,c
 14900  001BB2  04DE               	decf	postinc2,w,c
 14901  001BB4  A4D8               	btfss	status,2,c
 14902  001BB6  EFDF  F00D         	goto	u11181
 14903  001BBA  EFE1  F00D         	goto	u11180
 14904  001BBE                     u11181:
 14905  001BBE  EFE5  F00D         	goto	l9732
 14906  001BC2                     u11180:
 14907  001BC2                     
 14908                           ;main.c: 926:                 direccionElegida = SENSOR_PRIORIDAD_MEDIA;
 14909  001BC2  0E02               	movlw	2
 14910  001BC4  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14911  001BC6  EFF5  F00D         	goto	l9736
 14912  001BCA                     l9732:
 14913  001BCA  EE20 F002          	lfsr	2,2
 14914  001BCE  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14915  001BD0  26D9               	addwf	fsr2l,f,c
 14916  001BD2  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14917  001BD4  22DA               	addwfc	fsr2h,f,c
 14918  001BD6  04DE               	decf	postinc2,w,c
 14919  001BD8  A4D8               	btfss	status,2,c
 14920  001BDA  EFF1  F00D         	goto	u11191
 14921  001BDE  EFF3  F00D         	goto	u11190
 14922  001BE2                     u11191:
 14923  001BE2  EFF5  F00D         	goto	l9736
 14924  001BE6                     u11190:
 14925  001BE6                     
 14926                           ;main.c: 928:                 direccionElegida = SENSOR_PRIORIDAD_BAJA;
 14927  001BE6  0E03               	movlw	3
 14928  001BE8  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14929  001BEA                     l9736:
 14930                           
 14931                           ;main.c: 931:             *caminoActual = direccionElegida;
 14932  001BEA  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 14933  001BEE  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 14934  001BF2  C04E  FFDF         	movff	decidirDireccion@direccionElegida,indf2
 14935  001BF6                     
 14936                           ;main.c: 932:             *cambioOrientacionCarro = 1;
 14937  001BF6  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 14938  001BFA  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 14939  001BFE  0E01               	movlw	1
 14940  001C00  6EDF               	movwf	indf2,c
 14941                           
 14942                           ;main.c: 934:         } else {
 14943  001C02  EF26  F00F         	goto	l650
 14944  001C06                     l587:
 14945  001C06  EF44  F00E         	goto	l9836
 14946  001C0A                     l9794:
 14947                           
 14948                           ;main.c: 990:                             if (SENSOR_PRIORIDAD_MEDIA == IZQUIERDA &&
 14949  001C0A  C040  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
 14950  001C0E  C041  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
 14951  001C12  0E58               	movlw	88
 14952  001C14  18DE               	xorwf	postinc2,w,c
 14953  001C16  A4D8               	btfss	status,2,c
 14954  001C18  EF10  F00E         	goto	u11201
 14955  001C1C  EF12  F00E         	goto	u11200
 14956  001C20                     u11201:
 14957  001C20  EF44  F00E         	goto	l9836
 14958  001C24                     u11200:
 14959  001C24  EE20 F001          	lfsr	2,1
 14960  001C28  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14961  001C2A  26D9               	addwf	fsr2l,f,c
 14962  001C2C  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14963  001C2E  22DA               	addwfc	fsr2h,f,c
 14964  001C30  04DE               	decf	postinc2,w,c
 14965  001C32  A4D8               	btfss	status,2,c
 14966  001C34  EF1E  F00E         	goto	u11211
 14967  001C38  EF20  F00E         	goto	u11210
 14968  001C3C                     u11211:
 14969  001C3C  EF2A  F00E         	goto	l9814
 14970  001C40                     u11210:
 14971  001C40                     
 14972                           ;main.c: 991:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA
      +                           - 1] == 1) {;main.c: 992:                                 *caminoActual = IZQUIERDA;
 14973  001C40  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 14974  001C44  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 14975  001C48  0E02               	movlw	2
 14976  001C4A  6EDF               	movwf	indf2,c
 14977  001C4C                     
 14978                           ;main.c: 993:                                 direccionElegida = DERECHA;
 14979  001C4C  0E03               	movlw	3
 14980  001C4E  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 14981                           
 14982                           ;main.c: 994:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA &
      +                          &
 14983  001C50  EF44  F00E         	goto	l9836
 14984  001C54                     l9814:
 14985  001C54  EE20 F002          	lfsr	2,2
 14986  001C58  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 14987  001C5A  26D9               	addwf	fsr2l,f,c
 14988  001C5C  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 14989  001C5E  22DA               	addwfc	fsr2h,f,c
 14990  001C60  04DE               	decf	postinc2,w,c
 14991  001C62  A4D8               	btfss	status,2,c
 14992  001C64  EF36  F00E         	goto	u11221
 14993  001C68  EF38  F00E         	goto	u11220
 14994  001C6C                     u11221:
 14995  001C6C  EF03  F00E         	goto	l587
 14996  001C70                     u11220:
 14997  001C70                     
 14998                           ;main.c: 1003:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == 1) {;main.c: 1004:                                 *caminoActual = DERECHA;
 14999  001C70  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 15000  001C74  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 15001  001C78  0E03               	movlw	3
 15002  001C7A  6EDF               	movwf	indf2,c
 15003  001C7C                     
 15004                           ;main.c: 1005:                                 direccionElegida = IZQUIERDA;
 15005  001C7C  0E02               	movlw	2
 15006  001C7E  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15007  001C80  EF44  F00E         	goto	l9836
 15008  001C84                     l604:
 15009  001C84  EF26  F00F         	goto	l650
 15010  001C88                     l9836:
 15011                           
 15012                           ;main.c: 1032:                             if (SENSOR_PRIORIDAD_BAJA == DERECHA &&
 15013  001C88  EE20 F001          	lfsr	2,1
 15014  001C8C  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15015  001C8E  26D9               	addwf	fsr2l,f,c
 15016  001C90  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15017  001C92  22DA               	addwfc	fsr2h,f,c
 15018  001C94  0E58               	movlw	88
 15019  001C96  18DE               	xorwf	postinc2,w,c
 15020  001C98  A4D8               	btfss	status,2,c
 15021  001C9A  EF51  F00E         	goto	u11231
 15022  001C9E  EF53  F00E         	goto	u11230
 15023  001CA2                     u11231:
 15024  001CA2  EF26  F00F         	goto	l650
 15025  001CA6                     u11230:
 15026  001CA6  EE20 F002          	lfsr	2,2
 15027  001CAA  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15028  001CAC  26D9               	addwf	fsr2l,f,c
 15029  001CAE  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15030  001CB0  22DA               	addwfc	fsr2h,f,c
 15031  001CB2  04DE               	decf	postinc2,w,c
 15032  001CB4  A4D8               	btfss	status,2,c
 15033  001CB6  EF5F  F00E         	goto	u11241
 15034  001CBA  EF61  F00E         	goto	u11240
 15035  001CBE                     u11241:
 15036  001CBE  EF42  F00E         	goto	l604
 15037  001CC2                     u11240:
 15038  001CC2                     l9840:
 15039                           
 15040                           ;main.c: 1033:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == 1) {;main.c: 1034:                                 *caminoActual = DERECHA;
 15041  001CC2  C048  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
 15042  001CC6  C049  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
 15043  001CCA  0E03               	movlw	3
 15044  001CCC  6EDF               	movwf	indf2,c
 15045  001CCE                     l9842:
 15046                           
 15047                           ;main.c: 1035:                                 direccionElegida = ENFRENTE;
 15048  001CCE  0E01               	movlw	1
 15049  001CD0  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15050                           
 15051                           ;main.c: 1036:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
 15052  001CD2  EF26  F00F         	goto	l650
 15053  001CD6                     l9882:
 15054                           
 15055                           ;main.c: 1087:                             if (SENSOR_PRIORIDAD_BAJA == DERECHA &&
 15056  001CD6  EE20 F001          	lfsr	2,1
 15057  001CDA  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15058  001CDC  26D9               	addwf	fsr2l,f,c
 15059  001CDE  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15060  001CE0  22DA               	addwfc	fsr2h,f,c
 15061  001CE2  0E58               	movlw	88
 15062  001CE4  18DE               	xorwf	postinc2,w,c
 15063  001CE6  A4D8               	btfss	status,2,c
 15064  001CE8  EF78  F00E         	goto	u11251
 15065  001CEC  EF7A  F00E         	goto	u11250
 15066  001CF0                     u11251:
 15067  001CF0  EF26  F00F         	goto	l650
 15068  001CF4                     u11250:
 15069  001CF4  EE20 F002          	lfsr	2,2
 15070  001CF8  5040               	movf	decidirDireccion@caminosRecorrer^0,w,c
 15071  001CFA  26D9               	addwf	fsr2l,f,c
 15072  001CFC  5041               	movf	(decidirDireccion@caminosRecorrer+1)^0,w,c
 15073  001CFE  22DA               	addwfc	fsr2h,f,c
 15074  001D00  04DE               	decf	postinc2,w,c
 15075  001D02  A4D8               	btfss	status,2,c
 15076  001D04  EF86  F00E         	goto	u11261
 15077  001D08  EF88  F00E         	goto	u11260
 15078  001D0C                     u11261:
 15079  001D0C  EF8A  F00E         	goto	l9896
 15080  001D10                     u11260:
 15081  001D10  EF61  F00E         	goto	l9840
 15082  001D14                     l9896:
 15083                           
 15084                           ;main.c: 1096:                                 *contCaminosRecorridos = 3;
 15085  001D14  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15086  001D18  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15087  001D1C  0E03               	movlw	3
 15088  001D1E  6EDF               	movwf	indf2,c
 15089  001D20  EF26  F00F         	goto	l650
 15090  001D24                     l9926:
 15091                           
 15092                           ;main.c: 1135:                     *cambioOrientacionCarro = 0;
 15093  001D24  C04A  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
 15094  001D28  C04B  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
 15095  001D2C  0E00               	movlw	0
 15096  001D2E  6EDF               	movwf	indf2,c
 15097                           
 15098                           ;main.c: 1136:                     *contCaminosRecorridos = 0;
 15099  001D30  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15100  001D34  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15101  001D38  0E00               	movlw	0
 15102  001D3A  6EDF               	movwf	indf2,c
 15103                           
 15104                           ;main.c: 1137:                     *investigandoCruce = 0;
 15105  001D3C  C042  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
 15106  001D40  C043  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
 15107  001D44  0E00               	movlw	0
 15108  001D46  6EDF               	movwf	indf2,c
 15109  001D48                     l9928:
 15110                           
 15111                           ;main.c: 1138:                     direccionElegida = ALTO;
 15112  001D48  0E04               	movlw	4
 15113  001D4A  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15114                           
 15115                           ;main.c: 1140:                     break;
 15116  001D4C  EF26  F00F         	goto	l650
 15117  001D50                     l9932:
 15118  001D50  C046  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
 15119  001D54  C047  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
 15120  001D58  50DF               	movf	indf2,w,c
 15121  001D5A  6E4C               	movwf	??_decidirDireccion^0,c
 15122  001D5C  6A4D               	clrf	(??_decidirDireccion+1)^0,c
 15123                           
 15124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15125                           ; Switch size 1, requested type "simple"
 15126                           ; Number of cases is 1, Range of values is 0 to 0
 15127                           ; switch strategies available:
 15128                           ; Name         Instructions Cycles
 15129                           ; simple_byte            4     3 (average)
 15130                           ;	Chosen strategy is simple_byte
 15131  001D5E  504D               	movf	(??_decidirDireccion+1)^0,w,c
 15132  001D60  0A00               	xorlw	0	; case 0
 15133  001D62  B4D8               	btfsc	status,2,c
 15134  001D64  EFB6  F00E         	goto	l10890
 15135  001D68  EF26  F00F         	goto	l650
 15136  001D6C                     l10890:
 15137                           
 15138                           ; Switch size 1, requested type "simple"
 15139                           ; Number of cases is 3, Range of values is 1 to 3
 15140                           ; switch strategies available:
 15141                           ; Name         Instructions Cycles
 15142                           ; simple_byte           10     6 (average)
 15143                           ;	Chosen strategy is simple_byte
 15144  001D6C  504C               	movf	??_decidirDireccion^0,w,c
 15145  001D6E  0A01               	xorlw	1	; case 1
 15146  001D70  B4D8               	btfsc	status,2,c
 15147  001D72  EF05  F00E         	goto	l9794
 15148  001D76  0A03               	xorlw	3	; case 2
 15149  001D78  B4D8               	btfsc	status,2,c
 15150  001D7A  EF6B  F00E         	goto	l9882
 15151  001D7E  0A01               	xorlw	1	; case 3
 15152  001D80  B4D8               	btfsc	status,2,c
 15153  001D82  EF92  F00E         	goto	l9926
 15154  001D86  EF26  F00F         	goto	l650
 15155  001D8A                     l9934:
 15156                           
 15157                           ;main.c: 1146:         if (llegoDestino) {
 15158  001D8A  5059               	movf	_llegoDestino^0,w,c
 15159  001D8C  B4D8               	btfsc	status,2,c
 15160  001D8E  EFCB  F00E         	goto	u11271
 15161  001D92  EFCD  F00E         	goto	u11270
 15162  001D96                     u11271:
 15163  001D96  EFCF  F00E         	goto	l9938
 15164  001D9A                     u11270:
 15165  001D9A  EFA4  F00E         	goto	l9928
 15166  001D9E                     l9938:
 15167                           
 15168                           ;main.c: 1152:             if (DISTANCIA_PRIORIDAD_ALTA > 14)
 15169  001D9E  0E00               	movlw	0
 15170  001DA0  6E34               	movwf	___flge@ff1^0,c
 15171  001DA2  0E00               	movlw	0
 15172  001DA4  6E35               	movwf	(___flge@ff1+1)^0,c
 15173  001DA6  0E60               	movlw	96
 15174  001DA8  6E36               	movwf	(___flge@ff1+2)^0,c
 15175  001DAA  0E41               	movlw	65
 15176  001DAC  6E37               	movwf	(___flge@ff1+3)^0,c
 15177  001DAE  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
 15178  001DB2  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
 15179  001DB6  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
 15180  001DBA  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
 15181  001DBE  ECC0  F01F         	call	___flge	;wreg free
 15182  001DC2  B0D8               	btfsc	status,0,c
 15183  001DC4  EFE6  F00E         	goto	u11281
 15184  001DC8  EFE8  F00E         	goto	u11280
 15185  001DCC                     u11281:
 15186  001DCC  EFEA  F00E         	goto	l9942
 15187  001DD0                     u11280:
 15188  001DD0  EF67  F00E         	goto	l9842
 15189  001DD4                     l9942:
 15190  001DD4  0E00               	movlw	0
 15191  001DD6  6E34               	movwf	___flge@ff1^0,c
 15192  001DD8  0E00               	movlw	0
 15193  001DDA  6E35               	movwf	(___flge@ff1+1)^0,c
 15194  001DDC  0EC8               	movlw	200
 15195  001DDE  6E36               	movwf	(___flge@ff1+2)^0,c
 15196  001DE0  0E41               	movlw	65
 15197  001DE2  6E37               	movwf	(___flge@ff1+3)^0,c
 15198  001DE4  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
 15199  001DE8  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
 15200  001DEC  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
 15201  001DF0  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
 15202  001DF4  ECC0  F01F         	call	___flge	;wreg free
 15203  001DF8  B0D8               	btfsc	status,0,c
 15204  001DFA  EF01  F00F         	goto	u11291
 15205  001DFE  EF03  F00F         	goto	u11290
 15206  001E02                     u11291:
 15207  001E02  EF07  F00F         	goto	l9946
 15208  001E06                     u11290:
 15209  001E06                     
 15210                           ;main.c: 1155:                 direccionElegida = SENSOR_PRIORIDAD_MEDIA;
 15211  001E06  0E02               	movlw	2
 15212  001E08  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15213  001E0A  EF26  F00F         	goto	l650
 15214  001E0E                     l9946:
 15215  001E0E  0E00               	movlw	0
 15216  001E10  6E34               	movwf	___flge@ff1^0,c
 15217  001E12  0E00               	movlw	0
 15218  001E14  6E35               	movwf	(___flge@ff1+1)^0,c
 15219  001E16  0EC8               	movlw	200
 15220  001E18  6E36               	movwf	(___flge@ff1+2)^0,c
 15221  001E1A  0E41               	movlw	65
 15222  001E1C  6E37               	movwf	(___flge@ff1+3)^0,c
 15223  001E1E  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
 15224  001E22  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
 15225  001E26  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
 15226  001E2A  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
 15227  001E2E  ECC0  F01F         	call	___flge	;wreg free
 15228  001E32  B0D8               	btfsc	status,0,c
 15229  001E34  EF1E  F00F         	goto	u11301
 15230  001E38  EF20  F00F         	goto	u11300
 15231  001E3C                     u11301:
 15232  001E3C  EF24  F00F         	goto	l9950
 15233  001E40                     u11300:
 15234  001E40                     
 15235                           ;main.c: 1157:                 direccionElegida = SENSOR_PRIORIDAD_BAJA;
 15236  001E40  0E03               	movlw	3
 15237  001E42  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15238  001E44  EF26  F00F         	goto	l650
 15239  001E48                     l9950:
 15240                           
 15241                           ;main.c: 1159:                 direccionElegida = 0;
 15242  001E48  0E00               	movlw	0
 15243  001E4A  6E4E               	movwf	decidirDireccion@direccionElegida^0,c
 15244  001E4C                     l650:
 15245                           
 15246                           ;main.c: 1166:     return direccionElegida;
 15247  001E4C  504E               	movf	decidirDireccion@direccionElegida^0,w,c
 15248  001E4E  0012               	return		;funcret
 15249  001E50                     __end_of_decidirDireccion:
 15250                           	opt callstack 0
 15251                           
 15252 ;; *************** function _seLlegoAlDestino *****************
 15253 ;; Defined at:
 15254 ;;		line 861 in file "main.c"
 15255 ;; Parameters:    Size  Location     Type
 15256 ;;		None
 15257 ;; Auto vars:     Size  Location     Type
 15258 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 15259 ;; Return value:  Size  Location     Type
 15260 ;;                  1    wreg      unsigned char 
 15261 ;; Registers used:
 15262 ;;		wreg, status,2, status,0, cstack
 15263 ;; Tracked objects:
 15264 ;;		On entry : 0/0
 15265 ;;		On exit  : 0/0
 15266 ;;		Unchanged: 0/0
 15267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15268 ;;      Params:         0       0       0       0       0       0       0       0       0
 15269 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15270 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15271 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15272 ;;Total ram usage:        1 bytes
 15273 ;; Hardware stack levels used:    1
 15274 ;; Hardware stack levels required when called:    3
 15275 ;; This function calls:
 15276 ;;		_dameLecturaAdc
 15277 ;; This function is called by:
 15278 ;;		_decidirDireccion
 15279 ;; This function uses a non-reentrant model
 15280 ;;
 15281                           
 15282                           	psect	text65
 15283  005376                     __ptext65:
 15284                           	opt callstack 0
 15285  005376                     _seLlegoAlDestino:
 15286                           	opt callstack 25
 15287  005376                     
 15288                           ;main.c: 863:     T_BOOL llegoDestino = 0;
 15289  005376  0E00               	movlw	0
 15290  005378  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15291  00537A                     
 15292                           ;main.c: 866:     if (dameLecturaAdc(0) < 20)
 15293  00537A  0E00               	movlw	0
 15294  00537C  ECA4  F028         	call	_dameLecturaAdc
 15295  005380  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 15296  005382  EFCE  F029         	goto	u11020
 15297  005386  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 15298  005388  E107               	bnz	u11021
 15299  00538A  0E14               	movlw	20
 15300  00538C  5C06               	subwf	?_dameLecturaAdc^0,w,c
 15301  00538E  B0D8               	btfsc	status,0,c
 15302  005390  EFCC  F029         	goto	u11021
 15303  005394  EFCE  F029         	goto	u11020
 15304  005398                     u11021:
 15305  005398  EFD0  F029         	goto	l544
 15306  00539C                     u11020:
 15307  00539C                     
 15308                           ;main.c: 867:         llegoDestino = 1;
 15309  00539C  0E01               	movlw	1
 15310  00539E  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15311  0053A0                     l544:
 15312                           
 15313                           ;main.c: 869:     return llegoDestino;
 15314  0053A0  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 15315  0053A2  0012               	return		;funcret
 15316  0053A4                     __end_of_seLlegoAlDestino:
 15317                           	opt callstack 0
 15318                           
 15319 ;; *************** function _dameLecturaAdc *****************
 15320 ;; Defined at:
 15321 ;;		line 12 in file "./adc.h"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;  canalLeer       1    wreg     unsigned char 
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;  canalLeer       1    9[COMRAM] unsigned char 
 15326 ;; Return value:  Size  Location     Type
 15327 ;;                  2    5[COMRAM] short 
 15328 ;; Registers used:
 15329 ;;		wreg, status,2, status,0
 15330 ;; Tracked objects:
 15331 ;;		On entry : 0/0
 15332 ;;		On exit  : 0/0
 15333 ;;		Unchanged: 0/0
 15334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15335 ;;      Params:         2       0       0       0       0       0       0       0       0
 15336 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15337 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15338 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15339 ;;Total ram usage:        5 bytes
 15340 ;; Hardware stack levels used:    1
 15341 ;; Hardware stack levels required when called:    2
 15342 ;; This function calls:
 15343 ;;		Nothing
 15344 ;; This function is called by:
 15345 ;;		_seLlegoAlDestino
 15346 ;;		_probarSensores
 15347 ;; This function uses a non-reentrant model
 15348 ;;
 15349                           
 15350                           	psect	text66
 15351  005148                     __ptext66:
 15352                           	opt callstack 0
 15353  005148                     _dameLecturaAdc:
 15354                           	opt callstack 25
 15355                           
 15356                           ;incstack = 0
 15357                           ;dameLecturaAdc@canalLeer stored from wreg
 15358  005148  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 15359  00514A                     
 15360                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 15361  00514A  0E06               	movlw	6
 15362  00514C                     u11987:
 15363  00514C  2EE8               	decfsz	wreg,f,c
 15364  00514E  D7FE               	bra	u11987
 15365  005150  D000               	nop2	
 15366  005152                     
 15367                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 15368  005152  80C2               	bsf	194,0,c	;volatile
 15369  005154                     
 15370                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 15371  005154  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 15372  005158  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15373  00515A  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15374  00515C  50C2               	movf	194,w,c	;volatile
 15375  00515E  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15376  005160  0BC3               	andlw	-61
 15377  005162  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15378  005164  6EC2               	movwf	194,c	;volatile
 15379  005166                     
 15380                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 15381  005166  82C2               	bsf	194,1,c	;volatile
 15382  005168                     
 15383                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 15384  005168  82C2               	bsf	194,1,c	;volatile
 15385  00516A                     l241:
 15386  00516A  B2C2               	btfsc	194,1,c	;volatile
 15387  00516C  EFBA  F028         	goto	u10551
 15388  005170  EFBC  F028         	goto	u10550
 15389  005174                     u10551:
 15390  005174  EFB5  F028         	goto	l241
 15391  005178                     u10550:
 15392  005178                     
 15393                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 15394  005178  90C2               	bcf	194,0,c	;volatile
 15395  00517A                     
 15396                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 15397  00517A  50C4               	movf	196,w,c	;volatile
 15398  00517C  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 15399  00517E  6A08               	clrf	??_dameLecturaAdc^0,c
 15400  005180  50C3               	movf	195,w,c	;volatile
 15401  005182  2408               	addwf	??_dameLecturaAdc^0,w,c
 15402  005184  6E06               	movwf	?_dameLecturaAdc^0,c
 15403  005186  0E00               	movlw	0
 15404  005188  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 15405  00518A  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 15406  00518C  0012               	return		;funcret
 15407  00518E                     __end_of_dameLecturaAdc:
 15408                           	opt callstack 0
 15409                           
 15410 ;; *************** function ___flge *****************
 15411 ;; Defined at:
 15412 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;  ff1             4   51[COMRAM] short 
 15415 ;;  ff2             4   55[COMRAM] short 
 15416 ;; Auto vars:     Size  Location     Type
 15417 ;;		None
 15418 ;; Return value:  Size  Location     Type
 15419 ;;		None               void
 15420 ;; Registers used:
 15421 ;;		wreg, status,2, status,0
 15422 ;; Tracked objects:
 15423 ;;		On entry : 0/0
 15424 ;;		On exit  : 0/0
 15425 ;;		Unchanged: 0/0
 15426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15427 ;;      Params:         8       0       0       0       0       0       0       0       0
 15428 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15429 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15430 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15431 ;;Total ram usage:       12 bytes
 15432 ;; Hardware stack levels used:    1
 15433 ;; Hardware stack levels required when called:    2
 15434 ;; This function calls:
 15435 ;;		Nothing
 15436 ;; This function is called by:
 15437 ;;		_forzarEspejeo
 15438 ;;		_hayCruce
 15439 ;;		_decidirDireccion
 15440 ;;		_efgtoa
 15441 ;;		_roundf
 15442 ;;		_probarPID
 15443 ;;		_probarCruceT
 15444 ;; This function uses a non-reentrant model
 15445 ;;
 15446                           
 15447                           	psect	text67
 15448  003F80                     __ptext67:
 15449                           	opt callstack 0
 15450  003F80                     ___flge:
 15451                           	opt callstack 23
 15452  003F80  0E00               	movlw	0
 15453  003F82  1434               	andwf	___flge@ff1^0,w,c
 15454  003F84  6E3C               	movwf	??___flge^0,c
 15455  003F86  0E00               	movlw	0
 15456  003F88  1435               	andwf	(___flge@ff1+1)^0,w,c
 15457  003F8A  6E3D               	movwf	(??___flge+1)^0,c
 15458  003F8C  0E80               	movlw	128
 15459  003F8E  1436               	andwf	(___flge@ff1+2)^0,w,c
 15460  003F90  6E3E               	movwf	(??___flge+2)^0,c
 15461  003F92  0E7F               	movlw	127
 15462  003F94  1437               	andwf	(___flge@ff1+3)^0,w,c
 15463  003F96  6E3F               	movwf	(??___flge+3)^0,c
 15464  003F98  503C               	movf	??___flge^0,w,c
 15465  003F9A  103D               	iorwf	(??___flge+1)^0,w,c
 15466  003F9C  103E               	iorwf	(??___flge+2)^0,w,c
 15467  003F9E  103F               	iorwf	(??___flge+3)^0,w,c
 15468  003FA0  A4D8               	btfss	status,2,c
 15469  003FA2  EFD5  F01F         	goto	u9681
 15470  003FA6  EFD7  F01F         	goto	u9680
 15471  003FAA                     u9681:
 15472  003FAA  EFDF  F01F         	goto	l8802
 15473  003FAE                     u9680:
 15474  003FAE  0E00               	movlw	0
 15475  003FB0  6E34               	movwf	___flge@ff1^0,c
 15476  003FB2  0E00               	movlw	0
 15477  003FB4  6E35               	movwf	(___flge@ff1+1)^0,c
 15478  003FB6  0E00               	movlw	0
 15479  003FB8  6E36               	movwf	(___flge@ff1+2)^0,c
 15480  003FBA  0E00               	movlw	0
 15481  003FBC  6E37               	movwf	(___flge@ff1+3)^0,c
 15482  003FBE                     l8802:
 15483  003FBE  0E00               	movlw	0
 15484  003FC0  1438               	andwf	___flge@ff2^0,w,c
 15485  003FC2  6E3C               	movwf	??___flge^0,c
 15486  003FC4  0E00               	movlw	0
 15487  003FC6  1439               	andwf	(___flge@ff2+1)^0,w,c
 15488  003FC8  6E3D               	movwf	(??___flge+1)^0,c
 15489  003FCA  0E80               	movlw	128
 15490  003FCC  143A               	andwf	(___flge@ff2+2)^0,w,c
 15491  003FCE  6E3E               	movwf	(??___flge+2)^0,c
 15492  003FD0  0E7F               	movlw	127
 15493  003FD2  143B               	andwf	(___flge@ff2+3)^0,w,c
 15494  003FD4  6E3F               	movwf	(??___flge+3)^0,c
 15495  003FD6  503C               	movf	??___flge^0,w,c
 15496  003FD8  103D               	iorwf	(??___flge+1)^0,w,c
 15497  003FDA  103E               	iorwf	(??___flge+2)^0,w,c
 15498  003FDC  103F               	iorwf	(??___flge+3)^0,w,c
 15499  003FDE  A4D8               	btfss	status,2,c
 15500  003FE0  EFF4  F01F         	goto	u9691
 15501  003FE4  EFF6  F01F         	goto	u9690
 15502  003FE8                     u9691:
 15503  003FE8  EFFE  F01F         	goto	l8806
 15504  003FEC                     u9690:
 15505  003FEC  0E00               	movlw	0
 15506  003FEE  6E38               	movwf	___flge@ff2^0,c
 15507  003FF0  0E00               	movlw	0
 15508  003FF2  6E39               	movwf	(___flge@ff2+1)^0,c
 15509  003FF4  0E00               	movlw	0
 15510  003FF6  6E3A               	movwf	(___flge@ff2+2)^0,c
 15511  003FF8  0E00               	movlw	0
 15512  003FFA  6E3B               	movwf	(___flge@ff2+3)^0,c
 15513  003FFC                     l8806:
 15514  003FFC  AE37               	btfss	(___flge@ff1+3)^0,7,c
 15515  003FFE  EF03  F020         	goto	u9701
 15516  004002  EF05  F020         	goto	u9700
 15517  004006                     u9701:
 15518  004006  EF0E  F020         	goto	l8810
 15519  00400A                     u9700:
 15520  00400A  6C34               	negf	___flge@ff1^0,c
 15521  00400C  1E35               	comf	(___flge@ff1+1)^0,f,c
 15522  00400E  B0D8               	btfsc	status,0,c
 15523  004010  2A35               	incf	(___flge@ff1+1)^0,f,c
 15524  004012  1E36               	comf	(___flge@ff1+2)^0,f,c
 15525  004014  B0D8               	btfsc	status,0,c
 15526  004016  2A36               	incf	(___flge@ff1+2)^0,f,c
 15527  004018  0E80               	movlw	128
 15528  00401A  5637               	subfwb	(___flge@ff1+3)^0,f,c
 15529  00401C                     l8810:
 15530  00401C  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 15531  00401E  EF13  F020         	goto	u9711
 15532  004022  EF15  F020         	goto	u9710
 15533  004026                     u9711:
 15534  004026  EF1E  F020         	goto	l1205
 15535  00402A                     u9710:
 15536  00402A  6C38               	negf	___flge@ff2^0,c
 15537  00402C  1E39               	comf	(___flge@ff2+1)^0,f,c
 15538  00402E  B0D8               	btfsc	status,0,c
 15539  004030  2A39               	incf	(___flge@ff2+1)^0,f,c
 15540  004032  1E3A               	comf	(___flge@ff2+2)^0,f,c
 15541  004034  B0D8               	btfsc	status,0,c
 15542  004036  2A3A               	incf	(___flge@ff2+2)^0,f,c
 15543  004038  0E80               	movlw	128
 15544  00403A  563B               	subfwb	(___flge@ff2+3)^0,f,c
 15545  00403C                     l1205:
 15546  00403C  0E00               	movlw	0
 15547  00403E  1A34               	xorwf	___flge@ff1^0,f,c
 15548  004040  0E00               	movlw	0
 15549  004042  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 15550  004044  0E00               	movlw	0
 15551  004046  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 15552  004048  0E80               	movlw	128
 15553  00404A  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 15554  00404C  0E00               	movlw	0
 15555  00404E  1A38               	xorwf	___flge@ff2^0,f,c
 15556  004050  0E00               	movlw	0
 15557  004052  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 15558  004054  0E00               	movlw	0
 15559  004056  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 15560  004058  0E80               	movlw	128
 15561  00405A  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 15562  00405C  5038               	movf	___flge@ff2^0,w,c
 15563  00405E  5C34               	subwf	___flge@ff1^0,w,c
 15564  004060  5039               	movf	(___flge@ff2+1)^0,w,c
 15565  004062  5835               	subwfb	(___flge@ff1+1)^0,w,c
 15566  004064  503A               	movf	(___flge@ff2+2)^0,w,c
 15567  004066  5836               	subwfb	(___flge@ff1+2)^0,w,c
 15568  004068  503B               	movf	(___flge@ff2+3)^0,w,c
 15569  00406A  5837               	subwfb	(___flge@ff1+3)^0,w,c
 15570  00406C  B0D8               	btfsc	status,0,c
 15571  00406E  EF3B  F020         	goto	u9721
 15572  004072  EF3D  F020         	goto	u9720
 15573  004076                     u9721:
 15574  004076  EF40  F020         	goto	l8816
 15575  00407A                     u9720:
 15576  00407A  90D8               	bcf	status,0,c
 15577  00407C  EF41  F020         	goto	l1210
 15578  004080                     l8816:
 15579  004080  80D8               	bsf	status,0,c
 15580  004082                     l1210:
 15581  004082  0012               	return		;funcret
 15582  004084                     __end_of___flge:
 15583                           	opt callstack 0
 15584                           
 15585 ;; *************** function _caminoCorrecto *****************
 15586 ;; Defined at:
 15587 ;;		line 270 in file "main.c"
 15588 ;; Parameters:    Size  Location     Type
 15589 ;;  movimientos     2   17[COMRAM] PTR unsigned char 
 15590 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 15591 ;;  caminoFinal     2   19[COMRAM] PTR unsigned char 
 15592 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 15593 ;;  numMovimient    2   21[COMRAM] unsigned int 
 15594 ;;  numMovimient    2   23[COMRAM] PTR unsigned int 
 15595 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 15596 ;;  caminoActual    1   25[COMRAM] unsigned char 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;		None
 15599 ;; Return value:  Size  Location     Type
 15600 ;;                  1    wreg      void 
 15601 ;; Registers used:
 15602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15603 ;; Tracked objects:
 15604 ;;		On entry : 0/0
 15605 ;;		On exit  : 0/0
 15606 ;;		Unchanged: 0/0
 15607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15608 ;;      Params:         9       0       0       0       0       0       0       0       0
 15609 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15610 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15611 ;;      Totals:         9       0       0       0       0       0       0       0       0
 15612 ;;Total ram usage:        9 bytes
 15613 ;; Hardware stack levels used:    1
 15614 ;; Hardware stack levels required when called:    3
 15615 ;; This function calls:
 15616 ;;		_combinarArreglos
 15617 ;;		_limpiarMovimientos
 15618 ;; This function is called by:
 15619 ;;		_comportamientoBasico
 15620 ;; This function uses a non-reentrant model
 15621 ;;
 15622                           
 15623                           	psect	text68
 15624  00518E                     __ptext68:
 15625                           	opt callstack 0
 15626  00518E                     _caminoCorrecto:
 15627                           	opt callstack 26
 15628  00518E                     
 15629                           ;main.c: 270: void caminoCorrecto(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT num
      +                          Movimientos,;main.c: 271:         T_UINT* numMovimientosFinal, T_UBYTE caminoActual) {;m
      +                          ain.c: 273:     movimientos[0] = caminoActual;
 15630  00518E  C012  FFD9         	movff	caminoCorrecto@movimientos,fsr2l
 15631  005192  C013  FFDA         	movff	caminoCorrecto@movimientos+1,fsr2h
 15632  005196  C01A  FFDF         	movff	caminoCorrecto@caminoActual,indf2
 15633  00519A                     
 15634                           ;main.c: 274:     combinarArreglos(movimientos, caminoFinal, numMovimientos, numMovimien
      +                          tosFinal);
 15635  00519A  C012  F006         	movff	caminoCorrecto@movimientos,combinarArreglos@movimientos
 15636  00519E  C013  F007         	movff	caminoCorrecto@movimientos+1,combinarArreglos@movimientos+1
 15637  0051A2  C014  F008         	movff	caminoCorrecto@caminoFinal,combinarArreglos@caminoFinal
 15638  0051A6  C015  F009         	movff	caminoCorrecto@caminoFinal+1,combinarArreglos@caminoFinal+1
 15639  0051AA  C016  F00A         	movff	caminoCorrecto@numMovimientos,combinarArreglos@numMovimientos
 15640  0051AE  C017  F00B         	movff	caminoCorrecto@numMovimientos+1,combinarArreglos@numMovimientos+1
 15641  0051B2  C018  F00C         	movff	caminoCorrecto@numMovimientosFinal,combinarArreglos@numMovimientosFinal
 15642  0051B6  C019  F00D         	movff	caminoCorrecto@numMovimientosFinal+1,combinarArreglos@numMovimientosFinal+1
 15643  0051BA  ECA4  F026         	call	_combinarArreglos	;wreg free
 15644  0051BE                     
 15645                           ;main.c: 275:     limpiarMovimientos(movimientos, &numMovimientos);
 15646  0051BE  C012  F006         	movff	caminoCorrecto@movimientos,limpiarMovimientos@movimientos
 15647  0051C2  C013  F007         	movff	caminoCorrecto@movimientos+1,limpiarMovimientos@movimientos+1
 15648  0051C6  0E16               	movlw	low caminoCorrecto@numMovimientos
 15649  0051C8  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
 15650  0051CA  0E00               	movlw	high caminoCorrecto@numMovimientos
 15651  0051CC  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
 15652  0051CE  EC32  F028         	call	_limpiarMovimientos	;wreg free
 15653  0051D2  0012               	return		;funcret
 15654  0051D4                     __end_of_caminoCorrecto:
 15655                           	opt callstack 0
 15656                           
 15657 ;; *************** function _limpiarMovimientos *****************
 15658 ;; Defined at:
 15659 ;;		line 853 in file "main.c"
 15660 ;; Parameters:    Size  Location     Type
 15661 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 15662 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 15663 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
 15664 ;;		 -> comportamientoBasico@numMovimientos(2), caminoCorrecto@numMovimientos(2), 
 15665 ;; Auto vars:     Size  Location     Type
 15666 ;;  i               2   11[COMRAM] int 
 15667 ;; Return value:  Size  Location     Type
 15668 ;;                  1    wreg      void 
 15669 ;; Registers used:
 15670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15671 ;; Tracked objects:
 15672 ;;		On entry : 0/0
 15673 ;;		On exit  : 0/0
 15674 ;;		Unchanged: 0/0
 15675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15676 ;;      Params:         4       0       0       0       0       0       0       0       0
 15677 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15678 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15679 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15680 ;;Total ram usage:        8 bytes
 15681 ;; Hardware stack levels used:    1
 15682 ;; Hardware stack levels required when called:    2
 15683 ;; This function calls:
 15684 ;;		Nothing
 15685 ;; This function is called by:
 15686 ;;		_caminoCorrecto
 15687 ;;		_comportamientoBasico
 15688 ;; This function uses a non-reentrant model
 15689 ;;
 15690                           
 15691                           	psect	text69
 15692  005064                     __ptext69:
 15693                           	opt callstack 0
 15694  005064                     _limpiarMovimientos:
 15695                           	opt callstack 27
 15696  005064                     
 15697                           ;main.c: 855:     for (T_INT i = 0; i < *numMovimientos; i++)
 15698  005064  0E00               	movlw	0
 15699  005066  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
 15700  005068  0E00               	movlw	0
 15701  00506A  6E0C               	movwf	limpiarMovimientos@i^0,c
 15702  00506C  EF42  F028         	goto	l9552
 15703  005070                     l9548:
 15704                           
 15705                           ;main.c: 856:         movimientos[i] = 0;
 15706  005070  500C               	movf	limpiarMovimientos@i^0,w,c
 15707  005072  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
 15708  005074  6ED9               	movwf	fsr2l,c
 15709  005076  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
 15710  005078  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
 15711  00507A  6EDA               	movwf	fsr2h,c
 15712  00507C  0E00               	movlw	0
 15713  00507E  6EDF               	movwf	indf2,c
 15714  005080  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
 15715  005082  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
 15716  005084                     l9552:
 15717  005084  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 15718  005088  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 15719  00508C  50DE               	movf	postinc2,w,c
 15720  00508E  5C0C               	subwf	limpiarMovimientos@i^0,w,c
 15721  005090  50DE               	movf	postinc2,w,c
 15722  005092  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
 15723  005094  A0D8               	btfss	status,0,c
 15724  005096  EF4F  F028         	goto	u10961
 15725  00509A  EF51  F028         	goto	u10960
 15726  00509E                     u10961:
 15727  00509E  EF38  F028         	goto	l9548
 15728  0050A2                     u10960:
 15729  0050A2                     
 15730                           ;main.c: 858:     *numMovimientos = 0;
 15731  0050A2  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 15732  0050A6  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 15733  0050AA  0E00               	movlw	0
 15734  0050AC  6EDE               	movwf	postinc2,c
 15735  0050AE  0E00               	movlw	0
 15736  0050B0  6EDD               	movwf	postdec2,c
 15737  0050B2  0012               	return		;funcret
 15738  0050B4                     __end_of_limpiarMovimientos:
 15739                           	opt callstack 0
 15740                           
 15741 ;; *************** function _combinarArreglos *****************
 15742 ;; Defined at:
 15743 ;;		line 1296 in file "main.c"
 15744 ;; Parameters:    Size  Location     Type
 15745 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 15746 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 15747 ;;  caminoFinal     2    7[COMRAM] PTR unsigned char 
 15748 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 15749 ;;  numMovimient    2    9[COMRAM] unsigned int 
 15750 ;;  numMovimient    2   11[COMRAM] PTR unsigned int 
 15751 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 15752 ;; Auto vars:     Size  Location     Type
 15753 ;;  i               2   15[COMRAM] int 
 15754 ;; Return value:  Size  Location     Type
 15755 ;;                  1    wreg      void 
 15756 ;; Registers used:
 15757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15758 ;; Tracked objects:
 15759 ;;		On entry : 0/0
 15760 ;;		On exit  : 0/0
 15761 ;;		Unchanged: 0/0
 15762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15763 ;;      Params:         8       0       0       0       0       0       0       0       0
 15764 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15765 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15766 ;;      Totals:        12       0       0       0       0       0       0       0       0
 15767 ;;Total ram usage:       12 bytes
 15768 ;; Hardware stack levels used:    1
 15769 ;; Hardware stack levels required when called:    2
 15770 ;; This function calls:
 15771 ;;		Nothing
 15772 ;; This function is called by:
 15773 ;;		_caminoCorrecto
 15774 ;; This function uses a non-reentrant model
 15775 ;;
 15776                           
 15777                           	psect	text70
 15778  004D48                     __ptext70:
 15779                           	opt callstack 0
 15780  004D48                     _combinarArreglos:
 15781                           	opt callstack 26
 15782  004D48                     
 15783                           ;main.c: 1296: void combinarArreglos(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT 
      +                          numMovimientos,;main.c: 1297:         T_UINT* numMovimientosFinal) {;main.c: 1298:     f
      +                          or (T_INT i = 0; i < numMovimientos; i++) {
 15784  004D48  0E00               	movlw	0
 15785  004D4A  6E11               	movwf	(combinarArreglos@i+1)^0,c
 15786  004D4C  0E00               	movlw	0
 15787  004D4E  6E10               	movwf	combinarArreglos@i^0,c
 15788  004D50  EFC9  F026         	goto	l9544
 15789  004D54                     l9538:
 15790                           
 15791                           ;main.c: 1300:         caminoFinal[*numMovimientosFinal] = movimientos[i];
 15792  004D54  5010               	movf	combinarArreglos@i^0,w,c
 15793  004D56  2406               	addwf	combinarArreglos@movimientos^0,w,c
 15794  004D58  6ED9               	movwf	fsr2l,c
 15795  004D5A  5011               	movf	(combinarArreglos@i+1)^0,w,c
 15796  004D5C  2007               	addwfc	(combinarArreglos@movimientos+1)^0,w,c
 15797  004D5E  6EDA               	movwf	fsr2h,c
 15798  004D60  C00C  FFE1         	movff	combinarArreglos@numMovimientosFinal,fsr1l
 15799  004D64  C00D  FFE2         	movff	combinarArreglos@numMovimientosFinal+1,fsr1h
 15800  004D68  CFE6 F00E          	movff	postinc1,??_combinarArreglos
 15801  004D6C  CFE5 F00F          	movff	postdec1,??_combinarArreglos+1
 15802  004D70  500E               	movf	??_combinarArreglos^0,w,c
 15803  004D72  2408               	addwf	combinarArreglos@caminoFinal^0,w,c
 15804  004D74  6EE1               	movwf	fsr1l,c
 15805  004D76  500F               	movf	(??_combinarArreglos+1)^0,w,c
 15806  004D78  2009               	addwfc	(combinarArreglos@caminoFinal+1)^0,w,c
 15807  004D7A  6EE2               	movwf	fsr1h,c
 15808  004D7C  CFDF FFE7          	movff	indf2,indf1
 15809  004D80                     
 15810                           ;main.c: 1301:         *numMovimientosFinal += 1;
 15811  004D80  C00C  FFD9         	movff	combinarArreglos@numMovimientosFinal,fsr2l
 15812  004D84  C00D  FFDA         	movff	combinarArreglos@numMovimientosFinal+1,fsr2h
 15813  004D88  2ADE               	incf	postinc2,f,c
 15814  004D8A  0E00               	movlw	0
 15815  004D8C  22DD               	addwfc	postdec2,f,c
 15816  004D8E                     
 15817                           ;main.c: 1302:     }
 15818  004D8E  4A10               	infsnz	combinarArreglos@i^0,f,c
 15819  004D90  2A11               	incf	(combinarArreglos@i+1)^0,f,c
 15820  004D92                     l9544:
 15821  004D92  500A               	movf	combinarArreglos@numMovimientos^0,w,c
 15822  004D94  5C10               	subwf	combinarArreglos@i^0,w,c
 15823  004D96  500B               	movf	(combinarArreglos@numMovimientos+1)^0,w,c
 15824  004D98  5811               	subwfb	(combinarArreglos@i+1)^0,w,c
 15825  004D9A  A0D8               	btfss	status,0,c
 15826  004D9C  EFD2  F026         	goto	u10951
 15827  004DA0  EFD4  F026         	goto	u10950
 15828  004DA4                     u10951:
 15829  004DA4  EFAA  F026         	goto	l9538
 15830  004DA8                     u10950:
 15831  004DA8  0012               	return		;funcret
 15832  004DAA                     __end_of_combinarArreglos:
 15833                           	opt callstack 0
 15834                           
 15835 ;; *************** function _UART_printf *****************
 15836 ;; Defined at:
 15837 ;;		line 47 in file "./UART.h"
 15838 ;; Parameters:    Size  Location     Type
 15839 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 15840 ;;		 -> STR_14(23), STR_13(63), STR_12(56), STR_10(6), 
 15841 ;;		 -> STR_9(9), STR_8(11), STR_7(10), buffer(50), 
 15842 ;;		 -> STR_2(25), STR_1(24), 
 15843 ;; Auto vars:     Size  Location     Type
 15844 ;;		None
 15845 ;; Return value:  Size  Location     Type
 15846 ;;                  1    wreg      void 
 15847 ;; Registers used:
 15848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15849 ;; Tracked objects:
 15850 ;;		On entry : 0/0
 15851 ;;		On exit  : 0/0
 15852 ;;		Unchanged: 0/0
 15853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15854 ;;      Params:         2       0       0       0       0       0       0       0       0
 15855 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15856 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15857 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15858 ;;Total ram usage:        2 bytes
 15859 ;; Hardware stack levels used:    1
 15860 ;; Hardware stack levels required when called:    3
 15861 ;; This function calls:
 15862 ;;		_UART_write
 15863 ;; This function is called by:
 15864 ;;		_visualizarPasosRealizados
 15865 ;;		_comportamientoBasico
 15866 ;;		_probarSensores
 15867 ;;		_probarUltrasonico
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871                           	psect	text71
 15872  004E0A                     __ptext71:
 15873                           	opt callstack 0
 15874  004E0A                     _UART_printf:
 15875                           	opt callstack 26
 15876  004E0A                     
 15877                           ;./UART.h: 48:     while (*cadena) {
 15878  004E0A  EF1B  F027         	goto	l9622
 15879  004E0E                     l9618:
 15880                           
 15881                           ;./UART.h: 49:         UART_write(*cadena++);
 15882  004E0E  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15883  004E12  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15884  004E16  6AF8               	clrf	tblptru,c
 15885  004E18  0E07               	movlw	(high __ramtop+-1)
 15886  004E1A  64F7               	cpfsgt	tblptrh,c
 15887  004E1C  D003               	bra	u11047
 15888  004E1E  0008               	tblrd		*
 15889  004E20  50F5               	movf	tablat,w,c
 15890  004E22  D005               	bra	u11040
 15891  004E24                     u11047:
 15892  004E24  CFF6 FFE9          	movff	tblptrl,fsr0l
 15893  004E28  CFF7 FFEA          	movff	tblptrh,fsr0h
 15894  004E2C  50EF               	movf	indf0,w,c
 15895  004E2E                     u11040:
 15896  004E2E  EC74  F02A         	call	_UART_write
 15897  004E32  4A07               	infsnz	UART_printf@cadena^0,f,c
 15898  004E34  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 15899  004E36                     l9622:
 15900                           
 15901                           ;./UART.h: 48:     while (*cadena) {
 15902  004E36  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15903  004E3A  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15904  004E3E  6AF8               	clrf	tblptru,c
 15905  004E40  0E07               	movlw	(high __ramtop+-1)
 15906  004E42  64F7               	cpfsgt	tblptrh,c
 15907  004E44  D003               	bra	u11057
 15908  004E46  0008               	tblrd		*
 15909  004E48  50F5               	movf	tablat,w,c
 15910  004E4A  D005               	bra	u11050
 15911  004E4C                     u11057:
 15912  004E4C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15913  004E50  CFF7 FFEA          	movff	tblptrh,fsr0h
 15914  004E54  50EF               	movf	indf0,w,c
 15915  004E56                     u11050:
 15916  004E56  0900               	iorlw	0
 15917  004E58  A4D8               	btfss	status,2,c
 15918  004E5A  EF31  F027         	goto	u11061
 15919  004E5E  EF33  F027         	goto	u11060
 15920  004E62                     u11061:
 15921  004E62  EF07  F027         	goto	l9618
 15922  004E66                     u11060:
 15923  004E66  0012               	return		;funcret
 15924  004E68                     __end_of_UART_printf:
 15925                           	opt callstack 0
 15926                           
 15927 ;; *************** function _UART_write *****************
 15928 ;; Defined at:
 15929 ;;		line 42 in file "./UART.h"
 15930 ;; Parameters:    Size  Location     Type
 15931 ;;  dato            1    wreg     unsigned char 
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;  dato            1    5[COMRAM] unsigned char 
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  1    wreg      void 
 15936 ;; Registers used:
 15937 ;;		wreg
 15938 ;; Tracked objects:
 15939 ;;		On entry : 0/0
 15940 ;;		On exit  : 0/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15943 ;;      Params:         0       0       0       0       0       0       0       0       0
 15944 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15945 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15946 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15947 ;;Total ram usage:        1 bytes
 15948 ;; Hardware stack levels used:    1
 15949 ;; Hardware stack levels required when called:    2
 15950 ;; This function calls:
 15951 ;;		Nothing
 15952 ;; This function is called by:
 15953 ;;		_UART_printf
 15954 ;; This function uses a non-reentrant model
 15955 ;;
 15956                           
 15957                           	psect	text72
 15958  0054E8                     __ptext72:
 15959                           	opt callstack 0
 15960  0054E8                     _UART_write:
 15961                           	opt callstack 26
 15962                           
 15963                           ;incstack = 0
 15964                           ;UART_write@dato stored from wreg
 15965  0054E8  6E06               	movwf	UART_write@dato^0,c
 15966  0054EA                     
 15967                           ;./UART.h: 43:     TXREG = dato;
 15968  0054EA  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 15969  0054EE                     l226:
 15970  0054EE  A2AC               	btfss	172,1,c	;volatile
 15971  0054F0  EF7C  F02A         	goto	u10941
 15972  0054F4  EF7E  F02A         	goto	u10940
 15973  0054F8                     u10941:
 15974  0054F8  EF77  F02A         	goto	l226
 15975  0054FC                     u10940:
 15976  0054FC  0012               	return		;funcret
 15977  0054FE                     __end_of_UART_write:
 15978                           	opt callstack 0
 15979                           
 15980 ;; *************** function _UART_init *****************
 15981 ;; Defined at:
 15982 ;;		line 13 in file "./UART.h"
 15983 ;; Parameters:    Size  Location     Type
 15984 ;;  BAUD            4   31[COMRAM] long 
 15985 ;; Auto vars:     Size  Location     Type
 15986 ;;  frecuenciaCr    4    0        long 
 15987 ;; Return value:  Size  Location     Type
 15988 ;;                  1    wreg      void 
 15989 ;; Registers used:
 15990 ;;		wreg, status,2, status,0, cstack
 15991 ;; Tracked objects:
 15992 ;;		On entry : 0/0
 15993 ;;		On exit  : 0/0
 15994 ;;		Unchanged: 0/0
 15995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15996 ;;      Params:         4       0       0       0       0       0       0       0       0
 15997 ;;      Locals:         8       0       0       0       0       0       0       0       0
 15998 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15999 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16000 ;;Total ram usage:       12 bytes
 16001 ;; Hardware stack levels used:    1
 16002 ;; Hardware stack levels required when called:    3
 16003 ;; This function calls:
 16004 ;;		___aldiv
 16005 ;; This function is called by:
 16006 ;;		_main
 16007 ;; This function uses a non-reentrant model
 16008 ;;
 16009                           
 16010                           	psect	text73
 16011  004C04                     __ptext73:
 16012                           	opt callstack 0
 16013  004C04                     _UART_init:
 16014                           	opt callstack 27
 16015  004C04                     
 16016                           ;./UART.h: 16:     TRISC6 = 0;
 16017  004C04  9C94               	bcf	3988,6,c	;volatile
 16018  004C06                     
 16019                           ;./UART.h: 17:     TRISC7 = 1;
 16020  004C06  8E94               	bsf	3988,7,c	;volatile
 16021  004C08                     
 16022                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16023  004C08  0E10               	movlw	16
 16024  004C0A  6E16               	movwf	___aldiv@divisor^0,c
 16025  004C0C  0E00               	movlw	0
 16026  004C0E  6E17               	movwf	(___aldiv@divisor+1)^0,c
 16027  004C10  0E00               	movlw	0
 16028  004C12  6E18               	movwf	(___aldiv@divisor+2)^0,c
 16029  004C14  0E00               	movlw	0
 16030  004C16  6E19               	movwf	(___aldiv@divisor+3)^0,c
 16031  004C18  0E00               	movlw	0
 16032  004C1A  6E12               	movwf	___aldiv@dividend^0,c
 16033  004C1C  0E09               	movlw	9
 16034  004C1E  6E13               	movwf	(___aldiv@dividend+1)^0,c
 16035  004C20  0E3D               	movlw	61
 16036  004C22  6E14               	movwf	(___aldiv@dividend+2)^0,c
 16037  004C24  0E00               	movlw	0
 16038  004C26  6E15               	movwf	(___aldiv@dividend+3)^0,c
 16039  004C28  ECB6  F01E         	call	___aldiv	;wreg free
 16040  004C2C  C012  F028         	movff	?___aldiv,_UART_init$1817
 16041  004C30  C013  F029         	movff	?___aldiv+1,_UART_init$1817+1
 16042  004C34  C014  F02A         	movff	?___aldiv+2,_UART_init$1817+2
 16043  004C38  C015  F02B         	movff	?___aldiv+3,_UART_init$1817+3
 16044  004C3C                     
 16045                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16046  004C3C  C028  F012         	movff	_UART_init$1817,___aldiv@dividend
 16047  004C40  C029  F013         	movff	_UART_init$1817+1,___aldiv@dividend+1
 16048  004C44  C02A  F014         	movff	_UART_init$1817+2,___aldiv@dividend+2
 16049  004C48  C02B  F015         	movff	_UART_init$1817+3,___aldiv@dividend+3
 16050  004C4C  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 16051  004C50  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 16052  004C54  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 16053  004C58  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 16054  004C5C  ECB6  F01E         	call	___aldiv	;wreg free
 16055  004C60  0412               	decf	?___aldiv^0,w,c
 16056  004C62  6EAF               	movwf	175,c	;volatile
 16057  004C64                     
 16058                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 16059  004C64  84AC               	bsf	172,2,c	;volatile
 16060  004C66                     
 16061                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 16062  004C66  98AC               	bcf	172,4,c	;volatile
 16063  004C68                     
 16064                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 16065  004C68  8EAB               	bsf	171,7,c	;volatile
 16066  004C6A                     
 16067                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 16068  004C6A  9CAC               	bcf	172,6,c	;volatile
 16069  004C6C                     
 16070                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 16071  004C6C  8AAC               	bsf	172,5,c	;volatile
 16072  004C6E                     
 16073                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 16074  004C6E  9CAB               	bcf	171,6,c	;volatile
 16075  004C70                     
 16076                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 16077  004C70  88AB               	bsf	171,4,c	;volatile
 16078  004C72  0012               	return		;funcret
 16079  004C74                     __end_of_UART_init:
 16080                           	opt callstack 0
 16081                           
 16082 ;; *************** function ___aldiv *****************
 16083 ;; Defined at:
 16084 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;  dividend        4   17[COMRAM] long 
 16087 ;;  divisor         4   21[COMRAM] long 
 16088 ;; Auto vars:     Size  Location     Type
 16089 ;;  quotient        4   27[COMRAM] long 
 16090 ;;  sign            1   26[COMRAM] unsigned char 
 16091 ;;  counter         1   25[COMRAM] unsigned char 
 16092 ;; Return value:  Size  Location     Type
 16093 ;;                  4   17[COMRAM] long 
 16094 ;; Registers used:
 16095 ;;		wreg, status,2, status,0
 16096 ;; Tracked objects:
 16097 ;;		On entry : 0/0
 16098 ;;		On exit  : 0/0
 16099 ;;		Unchanged: 0/0
 16100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16101 ;;      Params:         8       0       0       0       0       0       0       0       0
 16102 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16103 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16104 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16105 ;;Total ram usage:       14 bytes
 16106 ;; Hardware stack levels used:    1
 16107 ;; Hardware stack levels required when called:    2
 16108 ;; This function calls:
 16109 ;;		Nothing
 16110 ;; This function is called by:
 16111 ;;		_map
 16112 ;;		_UART_init
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           	psect	text74
 16117  003D6C                     __ptext74:
 16118                           	opt callstack 0
 16119  003D6C                     ___aldiv:
 16120                           	opt callstack 24
 16121  003D6C  0E00               	movlw	0
 16122  003D6E  6E1B               	movwf	___aldiv@sign^0,c
 16123  003D70  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 16124  003D72  EFBF  F01E         	goto	u8000
 16125  003D76  EFBD  F01E         	goto	u8001
 16126  003D7A                     u8001:
 16127  003D7A  EFC9  F01E         	goto	l7876
 16128  003D7E                     u8000:
 16129  003D7E  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 16130  003D80  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 16131  003D82  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 16132  003D84  6C16               	negf	___aldiv@divisor^0,c
 16133  003D86  0E00               	movlw	0
 16134  003D88  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 16135  003D8A  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 16136  003D8C  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 16137  003D8E  0E01               	movlw	1
 16138  003D90  6E1B               	movwf	___aldiv@sign^0,c
 16139  003D92                     l7876:
 16140  003D92  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 16141  003D94  EFD0  F01E         	goto	u8010
 16142  003D98  EFCE  F01E         	goto	u8011
 16143  003D9C                     u8011:
 16144  003D9C  EFDA  F01E         	goto	l7882
 16145  003DA0                     u8010:
 16146  003DA0  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 16147  003DA2  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 16148  003DA4  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 16149  003DA6  6C12               	negf	___aldiv@dividend^0,c
 16150  003DA8  0E00               	movlw	0
 16151  003DAA  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 16152  003DAC  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 16153  003DAE  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 16154  003DB0  0E01               	movlw	1
 16155  003DB2  1A1B               	xorwf	___aldiv@sign^0,f,c
 16156  003DB4                     l7882:
 16157  003DB4  0E00               	movlw	0
 16158  003DB6  6E1C               	movwf	___aldiv@quotient^0,c
 16159  003DB8  0E00               	movlw	0
 16160  003DBA  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 16161  003DBC  0E00               	movlw	0
 16162  003DBE  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 16163  003DC0  0E00               	movlw	0
 16164  003DC2  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 16165  003DC4  5016               	movf	___aldiv@divisor^0,w,c
 16166  003DC6  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 16167  003DC8  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 16168  003DCA  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 16169  003DCC  B4D8               	btfsc	status,2,c
 16170  003DCE  EFEB  F01E         	goto	u8021
 16171  003DD2  EFED  F01E         	goto	u8020
 16172  003DD6                     u8021:
 16173  003DD6  EF23  F01F         	goto	l7904
 16174  003DDA                     u8020:
 16175  003DDA  0E01               	movlw	1
 16176  003DDC  6E1A               	movwf	___aldiv@counter^0,c
 16177  003DDE  EFF7  F01E         	goto	l7890
 16178  003DE2                     l7888:
 16179  003DE2  90D8               	bcf	status,0,c
 16180  003DE4  3616               	rlcf	___aldiv@divisor^0,f,c
 16181  003DE6  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 16182  003DE8  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 16183  003DEA  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 16184  003DEC  2A1A               	incf	___aldiv@counter^0,f,c
 16185  003DEE                     l7890:
 16186  003DEE  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 16187  003DF0  EFFC  F01E         	goto	u8031
 16188  003DF4  EFFE  F01E         	goto	u8030
 16189  003DF8                     u8031:
 16190  003DF8  EFF1  F01E         	goto	l7888
 16191  003DFC                     u8030:
 16192  003DFC                     l7892:
 16193  003DFC  90D8               	bcf	status,0,c
 16194  003DFE  361C               	rlcf	___aldiv@quotient^0,f,c
 16195  003E00  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 16196  003E02  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 16197  003E04  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 16198  003E06  5016               	movf	___aldiv@divisor^0,w,c
 16199  003E08  5C12               	subwf	___aldiv@dividend^0,w,c
 16200  003E0A  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16201  003E0C  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 16202  003E0E  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16203  003E10  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 16204  003E12  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16205  003E14  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 16206  003E16  A0D8               	btfss	status,0,c
 16207  003E18  EF10  F01F         	goto	u8041
 16208  003E1C  EF12  F01F         	goto	u8040
 16209  003E20                     u8041:
 16210  003E20  EF1B  F01F         	goto	l7900
 16211  003E24                     u8040:
 16212  003E24  5016               	movf	___aldiv@divisor^0,w,c
 16213  003E26  5E12               	subwf	___aldiv@dividend^0,f,c
 16214  003E28  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16215  003E2A  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 16216  003E2C  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16217  003E2E  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 16218  003E30  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16219  003E32  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 16220  003E34  801C               	bsf	___aldiv@quotient^0,0,c
 16221  003E36                     l7900:
 16222  003E36  90D8               	bcf	status,0,c
 16223  003E38  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 16224  003E3A  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 16225  003E3C  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 16226  003E3E  3216               	rrcf	___aldiv@divisor^0,f,c
 16227  003E40  2E1A               	decfsz	___aldiv@counter^0,f,c
 16228  003E42  EFFE  F01E         	goto	l7892
 16229  003E46                     l7904:
 16230  003E46  501B               	movf	___aldiv@sign^0,w,c
 16231  003E48  B4D8               	btfsc	status,2,c
 16232  003E4A  EF29  F01F         	goto	u8051
 16233  003E4E  EF2B  F01F         	goto	u8050
 16234  003E52                     u8051:
 16235  003E52  EF33  F01F         	goto	l7908
 16236  003E56                     u8050:
 16237  003E56  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 16238  003E58  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 16239  003E5A  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 16240  003E5C  6C1C               	negf	___aldiv@quotient^0,c
 16241  003E5E  0E00               	movlw	0
 16242  003E60  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 16243  003E62  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 16244  003E64  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 16245  003E66                     l7908:
 16246  003E66  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 16247  003E6A  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 16248  003E6E  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 16249  003E72  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 16250  003E76  0012               	return		;funcret
 16251  003E78                     __end_of___aldiv:
 16252                           	opt callstack 0
 16253                           
 16254 ;; *************** function _boton *****************
 16255 ;; Defined at:
 16256 ;;		line 131 in file "main.c"
 16257 ;; Parameters:    Size  Location     Type
 16258 ;;		None
 16259 ;; Auto vars:     Size  Location     Type
 16260 ;;		None
 16261 ;; Return value:  Size  Location     Type
 16262 ;;                  1    wreg      void 
 16263 ;; Registers used:
 16264 ;;		wreg, status,2, status,0, cstack
 16265 ;; Tracked objects:
 16266 ;;		On entry : 0/0
 16267 ;;		On exit  : 0/0
 16268 ;;		Unchanged: 0/0
 16269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16270 ;;      Params:         0       0       0       0       0       0       0       0       0
 16271 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16272 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16273 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16274 ;;Total ram usage:        2 bytes
 16275 ;; Hardware stack levels used:    1
 16276 ;; Hardware stack levels required when called:    1
 16277 ;; This function calls:
 16278 ;;		_antiRebote
 16279 ;; This function is called by:
 16280 ;;		Interrupt level 2
 16281 ;; This function uses a non-reentrant model
 16282 ;;
 16283                           
 16284                           	psect	intcode
 16285  000008                     __pintcode:
 16286                           	opt callstack 0
 16287  000008                     _boton:
 16288                           	opt callstack 20
 16289                           
 16290                           ;incstack = 0
 16291  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16292  00000A  ED8E  F027         	call	int_func,f	;refresh shadow registers
 16293                           
 16294                           	psect	intcode_body
 16295  004F1C                     __pintcode_body:
 16296                           	opt callstack 20
 16297  004F1C                     int_func:
 16298                           	opt callstack 20
 16299  004F1C  0006               	pop		; remove dummy address from shadow register refresh
 16300  004F1E                     
 16301                           ;main.c: 133:     if (INT0IF)
 16302  004F1E  A2F2               	btfss	4082,1,c	;volatile
 16303  004F20  EF94  F027         	goto	i2u778_41
 16304  004F24  EF96  F027         	goto	i2u778_40
 16305  004F28                     i2u778_41:
 16306  004F28  EFB6  F027         	goto	i2l286
 16307  004F2C                     i2u778_40:
 16308  004F2C                     
 16309                           ;main.c: 134:     {;main.c: 135:         antiRebote(1);
 16310  004F2C  0E01               	movlw	1
 16311  004F2E  EC62  F027         	call	_antiRebote
 16312  004F32                     
 16313                           ;main.c: 136:         if (pausa) {
 16314  004F32  0101               	movlb	1	; () banked
 16315  004F34  51D3               	movf	_pausa& (0+255),w,b
 16316  004F36  B4D8               	btfsc	status,2,c
 16317  004F38  EFA0  F027         	goto	i2u779_41
 16318  004F3C  EFA2  F027         	goto	i2u779_40
 16319  004F40                     i2u779_41:
 16320  004F40  EFB2  F027         	goto	i2l284
 16321  004F44                     i2u779_40:
 16322  004F44                     
 16323                           ; BSR set to: 1
 16324                           ;main.c: 137:             pausa = 0;
 16325  004F44  0E00               	movlw	0
 16326  004F46  6FD3               	movwf	_pausa& (0+255),b
 16327  004F48                     
 16328                           ; BSR set to: 1
 16329                           ;main.c: 138:             LATD2 = 1;
 16330  004F48  848C               	bsf	3980,2,c	;volatile
 16331  004F4A                     
 16332                           ; BSR set to: 1
 16333                           ;main.c: 139:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 16334  004F4A  0E10               	movlw	16
 16335  004F4C  6E05               	movwf	(??_boton+1)^0,c
 16336  004F4E  0E39               	movlw	57
 16337  004F50  6E04               	movwf	??_boton^0,c
 16338  004F52  0E0E               	movlw	14
 16339  004F54                     i2u1199_47:
 16340  004F54  2EE8               	decfsz	wreg,f,c
 16341  004F56  D7FE               	bra	i2u1199_47
 16342  004F58  2E04               	decfsz	??_boton^0,f,c
 16343  004F5A  D7FC               	bra	i2u1199_47
 16344  004F5C  2E05               	decfsz	(??_boton+1)^0,f,c
 16345  004F5E  D7FA               	bra	i2u1199_47
 16346                           
 16347                           ;main.c: 140:         } else {
 16348  004F60  EFB5  F027         	goto	i2l7354
 16349  004F64                     i2l284:
 16350                           
 16351                           ; BSR set to: 1
 16352                           ;main.c: 141:             LATD2 = 0;
 16353  004F64  948C               	bcf	3980,2,c	;volatile
 16354  004F66                     
 16355                           ; BSR set to: 1
 16356                           ;main.c: 142:             pausa = 1;
 16357  004F66  0E01               	movlw	1
 16358  004F68  6FD3               	movwf	_pausa& (0+255),b
 16359  004F6A                     i2l7354:
 16360                           
 16361                           ;main.c: 145:         INT0IF = 0;
 16362  004F6A  92F2               	bcf	4082,1,c	;volatile
 16363  004F6C                     i2l286:
 16364  004F6C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16365  004F6E  0011               	retfie		f
 16366  004F70                     __end_of_boton:
 16367                           	opt callstack 0
 16368                           
 16369 ;; *************** function _antiRebote *****************
 16370 ;; Defined at:
 16371 ;;		line 243 in file "main.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;  pin             1    wreg     unsigned char 
 16374 ;; Auto vars:     Size  Location     Type
 16375 ;;  pin             1    2[COMRAM] unsigned char 
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      void 
 16378 ;; Registers used:
 16379 ;;		wreg, status,2, status,0
 16380 ;; Tracked objects:
 16381 ;;		On entry : 0/0
 16382 ;;		On exit  : 0/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16385 ;;      Params:         0       0       0       0       0       0       0       0       0
 16386 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16387 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16388 ;;      Totals:         3       0       0       0       0       0       0       0       0
 16389 ;;Total ram usage:        3 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; This function calls:
 16392 ;;		Nothing
 16393 ;; This function is called by:
 16394 ;;		_boton
 16395 ;; This function uses a non-reentrant model
 16396 ;;
 16397                           
 16398                           	psect	text76
 16399  004EC4                     __ptext76:
 16400                           	opt callstack 0
 16401  004EC4                     _antiRebote:
 16402                           	opt callstack 20
 16403                           
 16404                           ;incstack = 0
 16405                           ;antiRebote@pin stored from wreg
 16406  004EC4  6E03               	movwf	antiRebote@pin^0,c
 16407  004EC6                     
 16408                           ;main.c: 245:     switch (pin) {
 16409  004EC6  EF7C  F027         	goto	i2l7138
 16410  004ECA                     i2l320:
 16411  004ECA  A081               	btfss	129,0,c	;volatile
 16412  004ECC  EF6A  F027         	goto	i2u755_41
 16413  004ED0  EF6C  F027         	goto	i2u755_40
 16414  004ED4                     i2u755_41:
 16415  004ED4  EF65  F027         	goto	i2l320
 16416  004ED8                     i2u755_40:
 16417  004ED8                     i2l323:
 16418  004ED8  B081               	btfsc	129,0,c	;volatile
 16419  004EDA  EF71  F027         	goto	i2u756_41
 16420  004EDE  EF73  F027         	goto	i2u756_40
 16421  004EE2                     i2u756_41:
 16422  004EE2  EF6C  F027         	goto	i2l323
 16423  004EE6                     i2u756_40:
 16424  004EE6                     
 16425                           ;main.c: 249:             _delay((unsigned long)((100)*(4000000/4000.0)));
 16426  004EE6  0E82               	movlw	130
 16427  004EE8  6E01               	movwf	??_antiRebote^0,c
 16428  004EEA  0EDE               	movlw	222
 16429  004EEC                     i2u1200_47:
 16430  004EEC  2EE8               	decfsz	wreg,f,c
 16431  004EEE  D7FE               	bra	i2u1200_47
 16432  004EF0  2E01               	decfsz	??_antiRebote^0,f,c
 16433  004EF2  D7FC               	bra	i2u1200_47
 16434                           
 16435                           ;main.c: 250:             break;
 16436  004EF4  EF8D  F027         	goto	i2l328
 16437  004EF8                     i2l7138:
 16438  004EF8  5003               	movf	antiRebote@pin^0,w,c
 16439  004EFA  6E01               	movwf	??_antiRebote^0,c
 16440  004EFC  6A02               	clrf	(??_antiRebote+1)^0,c
 16441                           
 16442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16443                           ; Switch size 1, requested type "simple"
 16444                           ; Number of cases is 1, Range of values is 0 to 0
 16445                           ; switch strategies available:
 16446                           ; Name         Instructions Cycles
 16447                           ; simple_byte            4     3 (average)
 16448                           ;	Chosen strategy is simple_byte
 16449  004EFE  5002               	movf	(??_antiRebote+1)^0,w,c
 16450  004F00  0A00               	xorlw	0	; case 0
 16451  004F02  B4D8               	btfsc	status,2,c
 16452  004F04  EF86  F027         	goto	i2l10892
 16453  004F08  EF8D  F027         	goto	i2l328
 16454  004F0C                     i2l10892:
 16455                           
 16456                           ; Switch size 1, requested type "simple"
 16457                           ; Number of cases is 1, Range of values is 1 to 1
 16458                           ; switch strategies available:
 16459                           ; Name         Instructions Cycles
 16460                           ; simple_byte            4     3 (average)
 16461                           ;	Chosen strategy is simple_byte
 16462  004F0C  5001               	movf	??_antiRebote^0,w,c
 16463  004F0E  0A01               	xorlw	1	; case 1
 16464  004F10  B4D8               	btfsc	status,2,c
 16465  004F12  EF65  F027         	goto	i2l320
 16466  004F16  EF8D  F027         	goto	i2l328
 16467  004F1A                     i2l328:
 16468  004F1A  0012               	return		;funcret
 16469  004F1C                     __end_of_antiRebote:
 16470                           	opt callstack 0
 16471                           
 16472                           	psect	rparam
 16473  0000                     
 16474                           	psect	temp
 16475  00005A                     btemp:
 16476                           	opt callstack 0
 16477  00005A                     	ds	1
 16478  0000                     int$flags	set	btemp
 16479  0000                     wtemp8	set	btemp+1
 16480  0000                     ttemp5	set	btemp+1
 16481  0000                     ttemp6	set	btemp+4
 16482  0000                     ttemp7	set	btemp+8
 16483                           tosu	equ	0xFFF
 16484                           tosh	equ	0xFFE
 16485                           tosl	equ	0xFFD
 16486                           stkptr	equ	0xFFC
 16487                           pclatu	equ	0xFFB
 16488                           pclath	equ	0xFFA
 16489                           pcl	equ	0xFF9
 16490                           tblptru	equ	0xFF8
 16491                           tblptrh	equ	0xFF7
 16492                           tblptrl	equ	0xFF6
 16493                           tablat	equ	0xFF5
 16494                           prodh	equ	0xFF4
 16495                           prodl	equ	0xFF3
 16496                           indf0	equ	0xFEF
 16497                           postinc0	equ	0xFEE
 16498                           postdec0	equ	0xFED
 16499                           preinc0	equ	0xFEC
 16500                           plusw0	equ	0xFEB
 16501                           fsr0h	equ	0xFEA
 16502                           fsr0l	equ	0xFE9
 16503                           wreg	equ	0xFE8
 16504                           indf1	equ	0xFE7
 16505                           postinc1	equ	0xFE6
 16506                           postdec1	equ	0xFE5
 16507                           preinc1	equ	0xFE4
 16508                           plusw1	equ	0xFE3
 16509                           fsr1h	equ	0xFE2
 16510                           fsr1l	equ	0xFE1
 16511                           bsr	equ	0xFE0
 16512                           indf2	equ	0xFDF
 16513                           postinc2	equ	0xFDE
 16514                           postdec2	equ	0xFDD
 16515                           preinc2	equ	0xFDC
 16516                           plusw2	equ	0xFDB
 16517                           fsr2h	equ	0xFDA
 16518                           fsr2l	equ	0xFD9
 16519                           status	equ	0xFD8


Data Sizes:
    Strings     366
    Constant    4
    Data        4
    BSS         1415
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    153     159
    BANK1           256      7     215
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1469_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), STR_4(CODE[18]), 
		 -> STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    combinarArreglos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    combinarArreglos@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    combinarArreglos@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), caminoCorrecto@numMovimientos(COMRAM[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    recorrerCaminoEncontrado@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    regresarPuntoPartida@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(BANK1[1]), 

    caminoCorrecto@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    caminoCorrecto@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    caminoCorrecto@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 63
		 -> STR_14(CODE[23]), STR_13(CODE[63]), STR_12(CODE[56]), STR_10(CODE[6]), 
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), 
		 -> STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _comportamientoBasico->_moverCarrito
    _comportamientoBasico->_recorrerCaminoEncontrado
    _comportamientoBasico->_regresarAlCruce
    _comportamientoBasico->_regresarPuntoPartida
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    ___fladd->___flmul
    _hayCruce->___flge
    _map->___aldiv
    ___xxtofl->___lwdiv
    ___fltol->_roundf
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _decidirDireccion->___flge
    _seLlegoAlDestino->_dameLecturaAdc
    ___flge->___flmul
    _caminoCorrecto->_combinarArreglos
    _UART_printf->_UART_write
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _visualizarPasosRealizados->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _comportamientoBasico->_recorrerCaminoEncontrado
    _comportamientoBasico->_regresarAlCruce
    _comportamientoBasico->_regresarPuntoPartida
    _velocidadBaja->_pwmDuty
    _regresarPuntoPartida->_PID
    _regresarAlCruce->_PID
    _recorrerCaminoEncontrado->_PID
    _PID->_pwmDuty
    _leerSensores->___fldiv
    _velocidadEstandar->_pwmDuty
    _pwmDuty->___fltol
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_visualizarPasosRealizados

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  450972
                                              4 BANK1      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   55064
                                              0 BANK1      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   53767
                                            135 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   52537
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   51998
                                             97 BANK0     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38407
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1615
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     512
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  380797
                                             64 BANK0      3     3      0
                                _PID
                        _UART_printf
                     _caminoCorrecto
                   _decidirDireccion
                 _finalizarRecorrido
                      _forzarEspejeo
                     _forzarParoAuto
                           _hayCruce
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
           _recorrerCaminoEncontrado
                    _regresarAlCruce
               _regresarPuntoPartida
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (2) _regresarPuntoPartida                                 7     3      4   64212
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64032
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _recorrerCaminoEncontrado                             7     3      4   64001
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         5     3      2   28940
                                             83 COMRAM     1     1      0
                                             40 BANK0      4     2      2
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (2) _hayCruce                                             4     1      3    4709
                                             63 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _finalizarRecorrido                                   0     0      0   28788
                      _forzarEspejeo
                     _forzarParoAuto
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               0     0      0   12461
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 0     0      0   12461
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    15     3     12    7428
                                             63 COMRAM    15     3     12
                             ___flge
                   _seLlegoAlDestino
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _caminoCorrecto                                       9     0      9    1811
                                             17 COMRAM     9     0      9
                   _combinarArreglos
                 _limpiarMovimientos
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     521
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _combinarArreglos                                    12     4      8     583
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1176
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (11) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _caminoCorrecto
       _combinarArreglos
       _limpiarMovimientos
     _decidirDireccion
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _seLlegoAlDestino
         _dameLecturaAdc
     _finalizarRecorrido
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
       _forzarParoAuto
     _forzarEspejeo
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _forzarEspejeoDerecha
         _forzarGiroDerecha
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
       _forzarEspejeoIzquierda
         _forzarGiroIzquierda
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
     _forzarParoAuto
     _hayCruce
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _recorrerCaminoEncontrado
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarPuntoPartida
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     3E8      21       48.9%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      7      D7       7       84.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     297      20        0.0%
DATA                 0      0     67F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 13 02:16:45 2020

                              ___fldiv@aexp 006C                                ___fldiv@bexp 006B  
                    __end_of_caminoCorrecto 51D4                                ___fldiv@sign 0064  
                              ___awdiv@sign 000B                              ?_configurarAdc 0001  
                       ___wmul@multiplicand 0008                                 __CFG_BORV$3 000000  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
           comportamientoBasico@caminoFinal 02C8                                         l204 3C8A  
                                       l214 3D6A                                         l206 3C98  
                                       l207 3C9A                                         l217 4C72  
                                       l241 516A                                         l226 54EE  
                                       l410 550C                                         l162 5016  
                                       l235 4E66                                         l243 5178  
                                       l331 5100                                         l315 4792  
                                       l244 518C                                         l420 5436  
                                       l229 54FC                                         l149 4B1C  
                                       l157 32CC                                         l165 5022  
                                       l334 51D2                                         l414 54E6  
                                       l166 5060                                         l238 5516  
                                       l423 5478                                         l407 1A14  
                                       l167 502C                                         l432 54CC  
                                       l168 5062                                         l417 5458  
                                       l193 3CEC                                         l185 3C2A  
                                       l441 4328                                         l426 5498  
                                       l195 3C5A                                         l187 3C38  
                                       l604 1C84                                         l188 3C3A  
                                       l541 50B2                                         l429 54B2  
                                       l437 5296                                         l525 37A0  
                                       l197 3C68                                         l445 436A  
                                       l453 48EC                                         l198 3C6A  
                                       l447 4394                                         l391 19BE  
                                       l544 53A0                                         l448 43A0  
                                       l456 4908                                         l720 53EE  
                                       l384 1748                                         l545 53A2  
                                       l449 43E8                                         l457 492E  
                                       l650 1E4C                                         l458 493A  
                                       l459 4982                                         l468 48E6  
                                       l812 2CA8                                         l557 1B6E  
                                       l717 5414                                         l477 4634  
                                       l726 4DA8                                         l662 3A74  
                                       l830 0BD6                                         l487 4AA2  
                                       l674 3AA4                                         l930 1052  
                                       l922 110C                                         l659 1E4E  
                                       l587 1C06                                         l667 3A94  
                                       l668 3A84                                         l940 53C8  
                                       l781 4430                                         l951 4D36  
                                       l695 2EFA                                         l952 4D46  
                                       l784 4472                                         l792 2A68  
                                       l848 0406                                         l936 4CD4  
                                       l937 4CDC                                         l786 44AE  
                                       l794 2A70                                         l874 07A2  
                              __CFG_CPB$OFF 000000                                         _PR2 000FCB  
                                       _PID 2CAA                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         _abs 5218  
                                       _map 4AA4                                         _pad 43EA  
                              ___awmod@sign 000B                                         wreg 000FE8  
                              ___flmul@aexp 0028                                ___flmul@bexp 002D  
                  _DISTANCIA_PRIORIDAD_BAJA 010C                    _DISTANCIA_PRIORIDAD_ALTA 0114  
                              ___flmul@sign 0027                                ___flmul@temp 0032  
                              ___flmul@prod 002E                 __size_of_limpiarMovimientos 0050  
                              __CFG_LVP$OFF 000000                                        ?_PID 0001  
                              ___fltol@exp1 007B                                __CFG_WDT$OFF 000000  
                                      l1210 4082                                        l1019 3E76  
                                      ?_abs 0018                                        l1205 403C  
                                      l1214 533E                                        l1054 3928  
                                      l1067 3C08                                        l1171 4572  
                                      l1237 3F7E                                        l1510 5146  
                                      l1431 4B88                                        l1184 46E4  
                                      l1522 29C6                                        l1602 33BC  
                                      l1524 2826                                        l1533 286C  
                                      l1621 4180                                        l1470 12B0  
                                      l1438 4B90                                        l1535 28E4  
                                      l1527 27EA                                        l1199 483C  
                                      l1536 28D2                                        l1720 4FC0  
                                      l1561 210A                                        l1609 3418  
                                      l1705 4320                                        l1713 5216  
                                      l1554 1F14                                        l1626 524E  
                                      l1571 223A                                        l1563 2182  
                                      l1731 262A                                        l1723 551C  
                                      l1564 2170                                        l1468 12FC  
                                      l1660 3610                                        l1485 1416  
                                      l1477 15CC                                        l1469 12EA  
                                      l1629 5256                                        l1558 2278  
                                      l1494 14E6                                        l1750 5374  
                                      l1495 14D4                                        l1744 4EC2  
                                      l1657 3608                                        l1666 3110  
                                      l1690 52CE                                        l1754 4256  
                                      l1595 3324                                        l1676 5306  
                                      l1684 5012                                        l1764 4E00  
                                      l1669 3054                                        l1598 3480  
                                      l1769 4E08                                        ?_map 0020  
                                      ?_pad 0016                                        l8000 122E  
                                      l8010 1242                                        l8002 1232  
                                      l8100 14A8                                        l8020 127C  
                                      l8012 1246                                        l8004 1236  
                                      l8110 1502                                        l8102 14B6  
                                      l8030 12CE                                        l8022 1298  
                                      l8014 124A                                        l8006 123A  
                                      l8200 277E                                        l8120 156C  
                                      l8112 1510                                        l8104 14CC  
                                      l8040 131A                                        l8032 12DC  
                                      l8024 12A8                                        l8008 123E  
                                      l8016 124E                                        l9000 0362  
                                      l8210 27C6                                        l8202 278E  
                                      l8130 15A6                                        l8122 158C  
                                      l8114 154A                                        l8050 135A  
                                      l8034 12DE                                        l8026 12BE  
                                      l8018 1252                                        l9010 03C2  
                                      l9002 036A                                        l8220 2814  
                                      l8212 27DA                                        l8204 279E  
                                      l8140 262C                                        l8300 1ECC  
                                      l8132 15AC                                        l8124 1590  
                                      l8108 14F6                                        l8116 154C  
                                      l8060 1384                                        l8052 1366  
                                      l8044 132E                                        l8036 12E8  
                                      l8028 12CA                                        l9100 0858  
                                      l9012 03D6                                        l9004 039C  
                                      l8230 285C                                        l8222 2824  
                                      l8214 27E8                                        l8206 27AE  
                                      l8150 266A                                        l8142 263A  
                                      l8310 1F04                                        l8302 1ECE  
                                      l8134 15BA                                        l8126 159E  
                                      l8118 155C                                        l8070 13F6  
                                      l8054 136A                                        l8046 133E  
                                      l8038 130A                                        l8062 138A  
                                      l9110 08A0                                        l9102 0866  
                                      l9030 048C                                        l9014 03DE  
                                      l9006 03AC                                        l8240 289C  
                                      l8232 286A                                        l8224 2836  
                                      l8216 27F4                                        l8208 27B6  
                                      l8160 269A                                        l8152 267A  
                                      l8144 2648                                        l8400 225E  
                                      l8320 1F54                                        l8312 1F24  
                                      l8304 1EDE                                        l8136 15BC  
                                      l8128 15A4                                        l8080 1450  
                                      l8064 13B0                                        l8072 1406  
                                      l8056 1378                                        l8048 134C  
                                      l9120 08CA                                        l9112 08A4  
                                      l9104 086E                                        l9040 04C4  
                                      l9032 0494                                        l9024 0426  
                                      l9016 03F8                                        l9008 03B0  
                                      l8250 290E                                        l8242 28CA  
                                      l8226 284C                                        l8234 287C  
                                      l8218 2812                                        l8170 26D0  
                                      l8162 26A0                                        l8154 267C  
                                      l8146 264A                                        l8402 2264  
                                      l8330 1FA4                                        l8322 1F5E  
                                      l8314 1F34                                        l8306 1EEE  
                                      l8410 3E90                                        l8090 1480  
                                      l8082 145A                                        l8074 142C  
                                      l8066 13E4                                        l8058 137A  
                                      l9210 0BB0                                        l9202 0B7A  
                                      l9130 08FE                                        l9122 08D0  
                                      l9114 08AA                                        l9106 0882  
                                      l9050 050E                                        l9042 04D2  
                                      l9026 043A                                        l9034 0498  
                                      l9018 0412                                        l8260 2986  
                                      l8252 2938                                        l8236 288A  
                                      l8228 2852                                        l8180 2710  
                                      l8172 26E0                                        l8164 26AE  
                                      l8148 265A                                        l8156 2684  
                                      l8404 2268                                        l8340 1FE6  
                                      l8332 1FB0                                        l8324 1F74  
                                      l8308 1EFE                                        l8420 3EE0  
                                      l8500 3172                                        l9300 549E  
                                      l8092 1484                                        l8084 1468  
                                      l8076 143C                                        l8068 13E6  
                                      l9220 3496                                        l9212 0BB6  
                                      l9204 0B8C                                        l9116 08B6  
                                      l9108 0890                                        l9124 08D6  
                                      l9132 0904                                        l9140 099C  
                                      l9060 0554                                        l9052 0520  
                                      l9044 04D6                                        l9036 04A0  
                                      l9028 0456                                        l8270 29BC  
                                      l8262 29A2                                        l8246 28F4  
                                      l8254 293C                                        l8238 288E  
                                      l8182 2720                                        l8190 2740  
                                      l8174 26E2                                        l8166 26B0  
                                      l8158 2694                                        l8350 2048  
                                      l8342 1FF6                                        l8334 1FBE  
                                      l8326 1F80                                        l8318 1F48  
                                      l8430 3F0A                                        l8422 3EE4  
                                      l8414 3EA4                                        l8510 32A0  
                                      l8502 3192                                        l9310 54B4  
                                      l9302 54A2                                        l8094 1494  
                                      l8086 146A                                        l9230 34F4  
                                      l9222 349A                                        l9206 0B98  
                                      l9150 0A0A                                        l9142 09BA  
                                      l9134 095C                                        l9126 08E8  
                                      l9118 08C6                                        l9070 0668  
                                      l9062 05B8                                        l9046 04E8  
                                      l9054 0528                                        l9038 04B2  
                                      l8264 29A6                                        l8256 2956  
                                      l8248 2900                                        l8192 2750  
                                      l8184 2728                                        l8168 26C0  
                                      l8176 26EA                                        l8360 20F0  
                                      l8352 2064                                        l8344 2010  
                                      l8336 1FCA                                        l8328 1F98  
                                      l8280 1E5C                                        l8440 3F32  
                                      l8432 3F14                                        l8424 3EF2  
                                      l8416 3ECE                                        l8408 3E78  
                                      l8504 3218                                        l9320 54C8  
                                      l9312 54B8                                        l9304 54A6  
                                      l8088 1478                                        l8096 1496  
                                      l9240 3520                                        l9224 349E  
                                      l8520 440E                                        l8600 30F0  
                                      l9208 0BA0                                        l9160 0A4A  
                                      l9152 0A0E                                        l9144 09D6  
                                      l9136 0990                                        l9128 08FA  
                                      l9080 0726                                        l9072 069C  
                                      l9064 0610                                        l9056 0530  
                                      l9048 04F6                                        l9400 0E76  
                                      l8266 29B4                                        l8258 296C  
                                      l8194 2750                                        l8186 272C  
                                      l8178 26FA                                        l8370 212C  
                                      l8362 20FA                                        l8354 208E  
                                      l8346 2020                                        l8338 1FDA  
                                      l8290 1E9C                                        l8282 1E6A  
                                      l8442 3F3E                                        l8434 3F1E  
                                      l8418 3ED0                                        l8506 325C  
                                      l9314 54BC                                        l9306 54AA  
                                      l8098 14A4                                        l9330 2334  
                                      l9322 227A                                        l8610 53A4  
                                      l9250 35C8                                        l9242 3554  
                                      l9234 34FA                                        l9226 34BA  
                                      l9218 3482                                        l8530 4454  
                                      l8522 441C                                        l8602 3100  
                                      l9170 0A7C                                        l9162 0A52  
                                      l9154 0A20                                        l9146 09E8  
                                      l9138 0998                                        l9090 079A  
                                      l9082 0736                                        l9074 06CE  
                                      l9066 0644                                        l9058 0540  
                                      l9410 0EE4                                        l7900 3E36  
                                      l8268 29BA                                        l8380 219E  
                                      l8372 213A                                        l8364 2108  
                                      l8356 20C4                                        l8348 203C  
                                      l8292 1EA2                                        l8284 1E6C  
                                      l8444 3F4E                                        l8460 334A  
                                      l8452 32D0                                        l9316 54C0  
                                      l9308 54AE                                        l9500 3D48  
                                      l9340 247C                                        l9332 2358  
                                      l9324 229A                                        l8612 53C0  
                                      l9252 35DA                                        l9236 3510  
                                      l9228 34F0                                        l8620 37B4  
                                      l8540 5232                                        l8532 4482  
                                      l8524 4428                                        l8516 43EA  
                                      l9172 0A82                                        l9180 0AD2  
                                      l9164 0A60                                        l9156 0A32  
                                      l9148 09F8                                        l9092 07BE  
                                      l9084 076A                                        l9076 06E4  
                                      l9068 064A                                        l9260 4182  
                                      l9412 0F14                                        l9404 0EAE  
                                      l7902 3E40                                        l8198 2764  
                                      l8390 2208                                        l8382 21AC  
                                      l8374 2168                                        l8366 211A  
                                      l8358 20D2                                        l8294 1EB2  
                                      l8286 1E7C                                        l8278 1E50  
                                      l8446 3F5E                                        l8470 33A4  
                                      l8454 32E0                                        l9318 54C4  
                                      l9502 3D48                                        l9350 25F6  
                                      l9342 24E8                                        l9334 2376  
                                      l9326 22E4                                        l8606 52D0  
                                      l9254 35EC                                        l9246 358A  
                                      l9238 3518                                        l8630 380A  
                                      l8622 37D4                                        l8534 4496  
                                      l8526 443C                                        l8518 43FA  
                                      l8710 44CE                                        l8702 44B0  
                                      l8550 4116                                        l8542 4084  
                                      l9190 0B22                                        l9182 0AE4  
                                      l9174 0AA8                                        l9166 0A68  
                                      l9158 0A3A                                        l9094 0822  
                                      l9086 077A                                        l9078 0716  
                                      l9270 41DE                                        l9262 41AC  
                                      l9422 0FDC                                        l9406 0EC0  
                                      l7904 3E46                                        l9512 54EA  
                                      l8800 3FAE                                        l9280 514A  
                                      l9600 5376                                        l8392 2222  
                                      l8384 21D6                                        l8368 2128  
                                      l8296 1EB8                                        l8288 1E8C  
                                      l8448 3F6E                                        l8480 3408  
                                      l8472 33A6                                        l8464 335E  
                                      l8456 32EE                                        l7912 4AA4  
                                      l9504 3D5A                                        l9352 261A  
                                      l9344 251A                                        l9328 22F8  
                                      l9520 4926                                        l8640 385E  
                                      l8632 3816                                        l8624 37D8  
                                      l8616 37A2                                        l7920 51F2  
                                      l8528 4450                                        l8720 4502  
                                      l8712 44DC                                        l8704 44B4  
                                      l8560 4178                                        l8544 40A4  
                                      l9192 0B2A                                        l9184 0AFE  
                                      l9176 0AC4                                        l9168 0A70  
                                      l9096 0832                                        l9088 078E  
                                      l9272 41FA                                        l9424 0FEE  
                                      l9432 1066                                        l9408 0ED6  
                                      l9416 0F40                                        l9360 0C0A  
                                      l7906 3E56                                        l8810 401C  
                                      l8802 3FBE                                        l9290 517A  
                                      l9282 5152                                        l9602 537A  
                                      l8394 223E                                        l8378 2192  
                                      l8386 21DA                                        l8298 1EBE  
                                      l8490 3460                                        l8482 3426  
                                      l8474 33B2                                        l8466 3366  
                                      l8458 3334                                        l9346 2586  
                                      l9338 23AE                                        l9514 48E8  
                                      l8650 38D2                                        l8642 3870  
                                      l8634 3834                                        l8626 37E6  
                                      l8618 37A6                                        l8538 5218  
                                      l7850 4286                                        l7922 51F6  
                                      l7930 5368                                        l8730 453C  
                                      l8722 450A                                        l8714 44E4  
                                      l8706 44C2                                        l8546 40E2  
                                      l8554 4122                                        l9194 0B3A  
                                      l9186 0B04                                        l9178 0ACC  
                                      l9098 0846                                        l9274 420C  
                                      l9266 41B8                                        l9450 10FA  
                                      l9434 108A                                        l9442 10BA  
                                      l9426 1022                                        l9418 0F6E  
                                      l9370 0C5A                                        l9362 0C1C  
                                      l9610 4C7C                                        l7908 3E66  
                                      l9620 4E32                                        l9540 4D80  
                                      l8812 402A                                        l8804 3FEC  
                                      l9284 5154                                        l9604 539C  
                                      l9700 1A88                                        l8396 224E  
                                      l8388 21F4                                        l8492 346E  
                                      l8484 3428                                        l8476 33EE  
                                      l8468 3372                                        l7860 4CEE  
                                      l7940 111A                                        l9460 4B38  
                                      l8820 5308                                        l9348 25BA  
                                      l9516 48F4                                        l8644 389E  
                                      l8636 383C                                        l8652 38D8  
                                      l8628 3806                                        l8660 3AA6  
                                      l7852 42A4                                        l7844 4258  
                                      l7916 51D4                                        l7924 5340  
                                      l8900 2C12                                        l8740 4562  
                                      l8732 4544                                        l8724 4512  
                                      l8716 44E8                                        l8708 44CA  
                                      l8556 4134                                        l8548 410A  
                                      l8580 2F1C                                        l8564 4E68  
                                      l8572 4DE0                                        l9196 0B40  
                                      l9188 0B16                                        l9276 4234  
                                      l9268 41C6                                        l9444 10C8  
                                      l9436 1098                                        l9372 0C7E  
                                      l9364 0C20                                        l9356 0BD8  
                                      l9612 4C8A                                        l7870 3D70  
                                      l9622 4E36                                        l9542 4D8E  
                                      l9550 5080                                        l8814 407A  
                                      l8806 3FFC                                        l9286 5166  
                                      l9702 1AA0                                        l8398 225C  
                                      l8494 3470                                        l8486 342C  
                                      l8478 33FA                                        l7862 4CFC  
                                      l7950 115A                                        l7942 1128  
                                      l9470 4B72                                        l9462 4B40  
                                      l9630 3A64                                        l9294 5416  
                                      l8822 531E                                        l9518 4910  
                                      l8830 4FC6                                        l8654 38E8  
                                      l8646 38BE                                        l8638 3850  
                                      l8670 3AEA                                        l8662 3AAA  
                                      l7854 42DA                                        l7846 426A  
                                      l7918 51E0                                        l7926 534C  
                                      l8910 2C5C                                        l8902 2C22  
                                      l8742 456A                                        l8734 4546  
                                      l8726 4520                                        l8718 44F0  
                                      l8750 4648                                        l8590 3008  
                                      l8582 2F74                                        l8566 4E78  
                                      l7934 5298                                        l8574 4DF2  
                                      l9198 0B46                                        l9438 10AC  
                                      l9390 0DA4                                        l9382 0D2E  
                                      l9374 0CB8                                        l9366 0C44  
                                      l9358 0BFC                                        l9614 4CB8  
                                      l7880 3DB0                                        l7872 3D7E  
                                      l9616 4E0A                                        l9544 4D92  
                                      l9536 4D48                                        l9552 5084  
                                      l8816 4080                                        l8808 400A  
                                      l9288 5168                                        l9800 1C4C  
                                      l9712 1B00                                        l9704 1AB0  
                                      l9720 1B34                                        l8488 3450  
                                      l7864 4D0C                                        l8840 53F0  
                                      l7960 118C                                        l7952 115C  
                                      l7944 112A                                        l9472 4B7A  
                                      l9464 4B48                                        l9456 4B1E  
                                      l9480 3C1C                                        l9624 392A  
                                      l9296 541E                                        l8824 532E  
                                      l9560 2CF4                                        l9528 4946  
                                      l8832 4FDA                                        l8656 3908  
                                      l8648 38C0                                        l8680 3B52  
                                      l8672 3B0A                                        l8664 3AB8  
                                      l7848 427C                                        l7928 5350  
                                      l8912 2C68                                        l8904 2C34  
                                      l8736 454C                                        l8728 4526  
                                      l8760 467C                                        l8752 4650  
                                      l8592 3044                                        l8584 2F88  
                                      l8568 4DAA                                        l8920 0012  
                                      l9392 0DB4                                        l9376 0CD8  
                                      l9368 0C4C                                        l9384 0D40  
                                      l9448 10D6                                        l9608 4C74  
                                      l9640 4F70                                        l7890 3DEE  
                                      l7882 3DB4                                        l7874 3D8E  
                                      l9618 4E0E                                        l9538 4D54  
                                      l9554 50A2                                        l9546 5064  
                                      l9730 1BC2                                        l9714 1B14  
                                      l9706 1ACC                                        l9722 1B6E  
                                      l8842 54CE                                        l7866 4D16  
                                      l7858 4CDE                                        l8498 3112  
                                      l8850 545A                                        l9298 549A  
                                      l7970 11B4                                        l7962 118E  
                                      l7946 113A                                        l7954 1164  
                                      l7938 110E                                        l9474 4B7C  
                                      l9466 4B56                                        l9458 4B26  
                                      l9490 3CA8                                        l9482 3C1E  
                                      l9626 3A44                                        l9570 2E3C  
                                      l9562 2DB6                                        l8834 5008  
                                      l8690 3BC8                                        l8682 3B80  
                                      l8674 3B28                                        l8666 3AD8  
                                      l8914 2C70                                        l8906 2C44  
                                      l8738 4552                                        l8770 46B8  
                                      l8762 4684                                        l8754 4654  
                                      l8746 4636                                        l8586 2F96  
                                      l8594 3078                                        l8578 2EFC  
                                      l8930 0066                                        l8922 001C  
                                      l9394 0DE6                                        l9386 0D62  
                                      l9378 0CE6                                        l9642 4F82  
                                      l7892 3DFC                                        l7884 3DC4  
                                      l7876 3D92                                        l7868 3D6C  
                                      l9548 5070                                        l9652 518E  
                                      l9732 1BCA                                        l9724 1B86  
                                      l9708 1AE0                                        l8844 54D6  
                                      l8852 5462                                        l7980 11EE  
                                      l7972 11C4                                        l7964 1194  
                                      l7956 1174                                        l7948 114A  
                                      l9476 4B82                                        l9468 4B5C  
                                      l9484 3C24                                        l9628 3A54  
                                      l9660 4330                                        l9580 2E84  
                                      l9572 2E50                                        l9564 2DE6  
                                      l9556 2CAA                                        l8836 500C  
                                      l8828 4FC2                                        l8692 3BE8  
                                      l8684 3BA0                                        l8676 3B30  
                                      l8668 3ADC                                        l8908 2C4A  
                                      l8916 2C80                                        l8860 29E8  
                                      l8772 46BE                                        l8764 468C  
                                      l8756 4662                                        l8748 463A  
                                      l8596 30B4                                        l8940 00AE  
                                      l8932 0070                                        l8924 002C  
                                      l9396 0E0A                                        l9388 0D72  
                                      l9644 4F8A                                        l7894 3E06  
                                      l7886 3DDA                                        l7878 3DA0  
                                      l9654 519A                                        l9814 1C54  
                                      l9734 1BE6                                        l9726 1B9E  
                                      l8854 547A                                        l8846 5438  
                                      l7990 121A                                        l7982 1200  
                                      l7974 11D4                                        l7966 11A2  
                                      l7958 117A                                        l9486 3C48  
                                      l9494 3CBA                                        l9478 3C0C  
                                      l9670 438C                                        l9662 4346  
                                      l9590 2ED8                                        l9582 2EAC  
                                      l9574 2E58                                        l9566 2DEE  
                                      l9558 2CB4                                        l8686 3BB2  
                                      l8678 3B44                                        l8870 2A5C  
                                      l8862 2A10                                        l8766 469A  
                                      l8774 46C4                                        l8758 466A  
                                      l8790 4810                                        l8782 4794  
                                      l8598 30C8                                        l8942 00BA  
                                      l8950 00D0                                        l8934 0078  
                                      l8926 003A                                        l9398 0E2E  
                                      l9646 4F92                                        l7896 3E24  
                                      l7888 3DE2                                        l9656 51BE  
                                      l9840 1CC2                                        l9816 1C70  
                                      l9736 1BEA                                        l9728 1BA6  
                                      l8856 5482                                        l8848 5440  
                                      l7992 121E                                        l7984 120E  
                                      l7976 11D6                                        l7968 11A4  
                                      l9496 3CFC                                        l9488 3C78  
                                      l9664 4356                                        l8696 5102  
                                      l9592 2EE8                                        l9584 2EBC  
                                      l9568 2E10                                        l9576 2E64  
                                      l8688 3BB8                                        l8880 2AA6  
                                      l8872 2A78                                        l8864 2A30  
                                      l8776 46D4                                        l8768 46B0  
                                      l8792 4834                                        l8784 47C2  
                                      l8960 015A                                        l8952 00F6  
                                      l8944 00C2                                        l8936 008A  
                                      l8928 0042                                        l9648 4FAE  
                                      l7898 3E34                                        l9842 1CCE  
                                      l9818 1C7C                                        l9738 1BF6  
                                      l9690 1A34                                        l9594 5258  
                                      l7994 1222                                        l7986 1212  
                                      l7978 11DE                                        l9498 3D0E  
                                      l9666 435A                                        l9658 4324  
                                      l8698 5112                                        l9586 2EC4  
                                      l9578 2E6C                                        l8890 2B42  
                                      l8882 2AAE                                        l8874 2A8A  
                                      l8866 2A40                                        l8858 29C8  
                                      l8778 46DC                                        l8794 483A  
                                      l8786 47D2                                        l8970 01CA  
                                      l8962 0172                                        l8946 00C6  
                                      l8938 009A                                        l9836 1C88  
                                      l9932 1D50                                        l9692 1A4C  
                                      l9596 528A                                        l7996 1226  
                                      l7988 1216                                        l9668 4372  
                                      l9588 2ED0                                        l8884 2AB4  
                                      l8892 2BA6                                        l8876 2A98  
                                      l8868 2A42                                        l8788 4800  
                                      l8964 017C                                        l8956 012C  
                                      l8948 00CA                                        l8798 3F80  
                                      l9950 1E48                                        l9942 1DD4  
                                      l9926 1D24                                        l9838 1CA6  
                                      l9694 1A64                                        l9934 1D8A  
                                      l9686 1A16                                        l9598 5292  
                                      l7998 122A                                        l9678 43AC  
                                      l8894 2BC0                                        l8886 2B36  
                                      l8878 2A9E                                        l8974 0200  
                                      l8958 013E                                        STR_1 7F63  
                                      l9944 1E06                                        l9928 1D48  
                                      l9696 1A70                                        l9688 1A1C  
                                      l8896 2BDE                                        l8888 2B3C  
                                      l8992 029A                                        l8976 0212  
                                      l8968 01A4                                        STR_2 7F4A  
                                      STR_3 7F08                                        l9946 1E0E  
                                      l9938 1D9E                                        l9882 1CD6  
                                      l9794 1C0A                                        l9698 1A80  
                                      l9970 365E                                        l9962 3612  
                                      l8898 2BF8                                        l8994 02CE  
                                      l8978 022E                                        l8986 024A  
                                      STR_4 7FA5                                        STR_5 7F92  
                                      l9948 1E40                                        l9884 1CF4  
                                      l9796 1C24                                        l9980 36D0  
                                      l9972 3690                                        l9964 3624  
                                      l8996 02D4                                        l8988 0264  
                                      STR_6 7FB7                                        STR_7 7FD3  
                                      l9798 1C40                                        l9982 36D2  
                                      l9974 3696                                        l9966 3656  
                                      l8998 032E                                        STR_8 7FC8  
                                      STR_9 7FDD                                        l9896 1D14  
                                      l9984 36E2                                        l9976 3698  
                                      l9968 365C                                        l9994 36F2  
                                      l9978 36CA                                        l9996 3704  
                                      l9998 3718                                        u8000 3D7E  
                                      u8001 3D7A                                        u8010 3DA0  
                                      u8011 3D9C                                        u8020 3DDA  
                                      u8100 1128                                        _RCIF 007CF5  
                                      u8021 3DD6                                        u8101 1124  
                                      u8030 3DFC                                        u8110 113A  
                                      u8031 3DF8                                        u8111 1136  
                                      u8040 3E24                                        u9000 334A  
                                      u8200 1294                                        u8120 114A  
                                      u8041 3E20                                        u9001 3346  
                                      u8201 128E                                        u8121 1146  
                                      u8050 3E56                                        u9010 33A0  
                                      u8210 1296                                        u8130 118C  
                                      u8051 3E52                                        u9011 339C  
                                      u8131 1188                                        u9020 33EA  
                                      u8300 13B0                                        u8220 12BE  
                                      u8140 11A2                                        u8060 5216  
                                      u9021 33E6                                        u8301 13AC  
                                      u8221 12BA                                        u8141 119E  
                                      u8061 5212                                        u9030 3408  
                                      u8310 13F6                                        u8230 12DC  
                                      u8150 11B4                                        u8070 5368  
                                      u9110 43FA                                        u9031 3404  
                                      u8311 13F2                                        u8231 12D8  
                                      u8151 11B0                                        u8071 5364  
                                      u9111 43F6                                        u9040 3418  
                                      u8400 14E2                                        u8320 142C  
                                      u8240 12FC                                        u8160 11C4  
                                      u9120 441C                                        u8080 52C8  
                                      u9041 3414                                        u9105 3270  
                                      u8401 14DE                                        u8321 1428  
                                      u8241 12F8                                        u8161 11C0  
                                      u9121 4418                                        u8081 52C2  
                                      u9050 3426                                        u9106 327A  
                                      u8410 14F6                                        u8330 143C  
                                      u8250 130A                                        u8170 1200  
                                      u9130 4472                                        u9210 416E  
                                      u8090 52CA                                        u9051 3422  
                                      u9107 328A                                        u8411 14F2  
                                      u8331 1438                                        u8251 1306  
                                      u8171 11FC                                        u9131 446E  
                                      u9211 4168                                        u8500 265A  
                                      u9060 3460                                        u8420 1510  
                                      u8340 1468                                        u8260 131A  
                                      u8180 120E                                        u9140 4482  
                                      u9220 4170                                        u9300 2F96  
                                      u8501 2656                                        u9061 345C  
                                      u8421 150C                                        u8341 1464  
                                      u8261 1316                                        u8181 120A  
                                      u9141 447E                                        u9205 4146  
                                      u9301 2F92                                        u8510 266A  
                                      u9070 346E                                        u8430 154A  
                                      u8350 1478                                        u8270 134C  
                                      u8190 127C                                        u9150 5232  
                                      u9230 4EB0                                        u8511 2666  
                                      u9071 346A                                        u8431 1546  
                                      u8351 1474                                        u8271 1348  
                                      u8191 1278                                        u9151 522E  
                                      u8600 2836                                        u8520 26AE  
                                      u9080 3192                                        u8440 155C  
                                      u8360 1494                                        u8280 135A  
                                      u9400 37B4                                        u9160 40C4  
                                      u9320 3004                                        u9240 4EC2  
                                      u8601 2832                                        u8521 26AA  
                                      u9081 318E                                        u8441 1558  
                                      u8361 1490                                        u8281 1356  
                                      u9401 37B0                                        u9321 3000  
                                      u9241 4EBE                                        u8610 284C  
                                      u8530 26C0                                        u8450 156C  
                                      u8370 14A4                                        u8290 1378  
                                      u9410 37E6                                        u9170 40E2  
                                      u9330 3028                                        u9250 4DDA  
                                      u8611 2848                                        u8531 26BC  
                                      u8451 1568                                        u8371 14A0  
                                      u8291 1374                                        u9411 37E2  
                                      u9171 40DE                                        u9315 2FAA  
                                      u9251 4DD4                                        u8700 2986  
                                      u8620 286A                                        u8540 26D0  
                                      u8460 158C                                        u8380 14B6  
                                      u9500 3B52                                        u9180 410A  
                                      u9340 3044                                        u9316 2FB4  
                                      u9260 4DDC                                        u8701 2982  
                                      u8621 2866                                        u8541 26CC  
                                      u8461 1588                                        u8381 14B2  
                                      u9421 3810                                        u9501 3B4E  
                                      u9181 4106                                        u9165 40BA  
                                      u9341 3040                                        u9317 2FC4  
                                      u9237 4EA6                                        u8710 29B4  
                                      u8630 288A                                        u8550 2710  
                                      u8470 159E                                        u8390 14CC  
                                      u9430 3834                                        u9510 3B80  
                                      u9190 4134                                        u9350 3098  
                                      u9270 4DF2                                        u8711 29B0  
                                      u8631 2886                                        u8551 270C  
                                      u9095 322C                                        u8471 159A  
                                      u8391 14C8                                        u9431 3830  
                                      u9511 3B7C                                        u9191 4130  
                                      u9335 301E                                        u9271 4DEE  
                                      u8640 289C                                        u8560 2750  
                                      u8800 20AE                                        u8720 1E6A  
                                      u9096 3236                                        u8480 15BA  
                                      u9440 385E                                        u9520 3BC8  
                                      u9600 4662                                        u9360 30B4  
                                      u9280 2F46                                        u8641 2898  
                                      u8561 274C                                        u8721 1E66  
                                      u9097 3246                                        u8481 15B6  
                                      u9441 385A                                        u9521 3BC4  
                                      u9601 465E                                        u9361 30B0  
                                      u8650 28CA                                        u8570 27C6  
                                      u8490 2648                                        u8810 2108  
                                      u8730 1E7C                                        u9450 389E  
                                      u9530 44C2                                        u9610 467C  
                                      u9370 30F0                                        u9290 2F74  
                                      u8651 28C6                                        u8571 27C2  
                                      u8491 2644                                        u8811 2104  
                                      u8731 1E78                                        u9451 389A  
                                      u9531 44BE                                        u9611 4678  
                                      u9371 30EC                                        u9355 308E  
                                      u9291 2F70                                        u9700 400A  
                                      u8660 28E0                                        u8580 27E8  
                                      u8900 225C                                        u8820 2128  
                                      u8740 1E8C                                        u9380 5300  
                                      u9460 38E8                                        u7940 426A  
                                      u9540 44DC                                        u9620 469A  
                                      u9701 4006                                        u8661 28DC  
                                      u8581 27E4                                        u8901 2258  
                                      u8821 2124                                        u8805 20A4  
                                      u8741 1E88                                        u9381 52FA  
                                      u9461 38E4                                        u7941 4266  
                                      u9541 44D8                                        u9621 4696  
                                      u9285 2F3C                                        u9710 402A  
                                      u8670 28F4                                        u8590 2812  
                                      u8830 213A                                        u8750 1ECC  
                                      u8910 3E90                                        u9390 5302  
                                      u9470 3AB8                                        u7950 427C  
                                      u9550 4502                                        u9630 46B0  
                                      u9711 4026                                        u8671 28F0  
                                      u8591 280E                                        u8831 2136  
                                      u8751 1EC8                                        u8911 3E8C  
                                      u9471 3AB4                                        u7951 4278  
                                      u9551 44FE                                        u9631 46AC  
                                      u9720 407A                                        u8680 290E  
                                      u8840 2168                                        u8760 1EDE  
                                      u8920 3EC4                                        u9480 3AEA  
                                      u7960 42A4                                        u9800 2A5C  
                                      u9560 4520                                        u9640 46D4  
                                      u9721 4076                                        u8681 290A  
                                      u8841 2164                                        u8761 1EDA  
                                      u9481 3AE6                                        u7961 42A0  
                                      u9801 2A58                                        u9561 451C  
                                      u9641 46D0                                        u8690 2956  
                                      u8850 217E                                        u8770 1EEE  
                                      u8930 3EF2                                        u9730 531E  
                                      u9490 3B28                                        u7970 42DA  
                                      u9810 2A8A                                        u9570 453C  
                                      u9650 47C2                                        u8691 2952  
                                      u8851 217A                                        u8771 1EEA  
                                      u8931 3EEE                                        u9731 531A  
                                      u9491 3B24                                        u7971 42D6  
                                      u9811 2A86                                        u9571 4538  
                                      u9651 47BE                                        u8860 2192  
                                      u8780 1F24                                        u8940 3F06  
                                      u7980 4CFC                                        u9740 4FDA  
                                      u9900 2C5C                                        u9820 2A98  
                                      u9580 4562                                        u9660 4800  
                                      u8861 218E                                        u8781 1F20  
                                      u8941 3F02                                        u8925 3EBA  
                                      u7981 4CF8                                        u9741 4FD6  
                                      u9901 2C58                                        u9821 2A94  
                                      u9581 455E                                        u9661 47FC  
                                      u8870 21AC                                        u8790 1F34  
                                      u8950 3F2E                                        u7990 4D36  
                                      u9750 5008                                        u9830 2BC0  
                                      u9590 4648                                        u9670 4834  
                                      u9910 003A                                        u8871 21A8  
                                      u8791 1F30                                        u8951 3F2A  
                                      u7991 4D32                                        u9751 5004  
                                      u9831 2BBC                                        u9591 4644  
                                      u9671 4830                                        u9911 0036  
                                      u9680 3FAE                                        u8880 21F4  
                                      u8960 3F4E                                        u9840 2BDE  
                                      u9760 29F8                                        u9920 008A  
                                      u9681 3FAA                                        u8881 21F0  
                                      u8961 3F4A                                        u9841 2BDA  
                                      u9761 29F2                                        u9921 0086  
                                      u9690 3FEC                                        u8890 2222  
                                      u8970 3F5E                                        u9850 2BF8  
                                      u9770 29FA                                        u9930 009A  
                                      u9691 3FE8                                        u8891 221E  
                                      u8971 3F5A                                        u9851 2BF4  
                                      u9931 0096                                        u8980 32E0  
                                      u9860 2C12                                        u9780 2A10  
                                      u9940 00AE                                        u8981 32DC  
                                      u9861 2C0E                                        u9781 2A0C  
                                      u9941 00AA                                        u8990 32EE  
                                      u9870 2C22                                        u9790 2A40  
                                      u9950 00F6                                        u8991 32EA  
                                      u9871 2C1E                                        u9791 2A3C  
                                      u9951 00F2                                        u9880 2C34  
                                      u9960 0126                                        u9881 2C30  
                                      u9961 0120                                        u9890 2C44  
                                      u9970 0128                                        u9891 2C40  
                                      u9980 013E                                        u9981 013A  
                                      u9990 01CA                                        u9991 01C6  
      comportamientoBasico@caminoEncontrado 0132                            ??_forzarParoAuto 0006  
                                      abs@a 0018                                        _dbuf 013D  
                                      _atoi 3482                                        _main 4984  
                                      _dtoa 29C8                                        _prec 012C  
                                      _nout 0128                                        pad@i 001D  
                                      pad@p 001A                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf1 000FE7                                        indf2 000FDF  
                                      fsr1l 000FE1                                        pad@w 001F  
                                      map@x 0020                                        fsr2l 000FD9  
                                      btemp 005A                               ___fpclassifyf 4084  
                  __end_of_decidirDireccion 1E50                                        prodh 000FF4  
                                      prodl 000FF3                                        start 000E  
                             __CFG_IESO$OFF 000000                             ___fldiv@new_exp 0065  
                              _tolower$1555 0012                               __CFG_MCLRE$ON 000000  
                             ?_leerSensores 0001                                ___param_bank 000000  
                                     ??_PID 0088                             ?_caminoCorrecto 0012  
                                     ??_abs 001A                                       ??_map 0034  
                                     ??_pad 001C                             ??_velocidadBaja 0054  
                             __CFG_PLLDIV$1 000000                              __CFG_CCP2MX$ON 000000  
                                     l10020 3738                                       l10100 48BA  
                                     l10110 5502                                       l10022 374C  
                                     l10102 48CC                                       l10112 5506  
                                     l10024 375C                                       l10120 4A64  
                                     l10104 48D0                                       l10200 50BA  
                                     l10050 379E                                       l10026 376C  
                                     l10018 3728                                       l10042 3788  
                                     l10122 4A6C                                       l10130 4A8C  
                                     l10114 4A1A                                       l10106 48D8  
                                     l10210 15E0                                       l10202 50D0  
                                     l10108 54FE                                       l10044 3798  
                                     l10028 377C                                       l10124 4A70  
                                     l10116 4A28                                       l10060 45A0  
                                     l10300 185C                                       l10220 163A  
                                     l10212 15F2                                       l10132 5016  
                                     l10204 50E6                                       l10150 4C04  
                                     l10126 4A82                                       l10118 4A46  
                                     l10070 45EE                                       l10062 45BE  
                                     l10054 53CA                                       l10310 188A  
                                     l10302 186C                                       l10230 166C  
                                     l10222 1642                                       l10214 1602  
                                     l10142 5036                                       l10206 50FC  
                                     l10160 4C66                                       l10152 4C06  
                                     l10128 4A86                                       l10080 461A  
                                     l10072 45F8                                       l10064 45C2  
                                     l10056 4574                                       l10320 18CA  
                                     l10312 189A                                       l10304 187C  
                                     l10232 1682                                       l10224 164E  
                                     l10216 1614                                       l10208 15CE  
                                     l10170 4C70                                       l10162 4C68  
                                     l10154 4C08                                       l10074 45FC  
                                     l10066 45CC                                       l10090 4880  
                                     l10082 483E                                       l10330 1922  
                                     l10322 18D0                                       l10314 18AC  
                                     l10250 171E                                       l10234 1692  
                                     l10226 1652                                       l10218 162A  
                                     l10242 16AA                                       l10138 501A  
                                     l10164 4C6A                                       l10156 4C3C  
                                     l10148 4C04                                       l10068 45EA  
                                     l10076 460E                                       l10092 488A  
                                     l10340 1966                                       l10332 1928  
                                     l10316 18B0                                       l10324 18D8  
                                     l10260 176A                                       l10252 1722  
                                     l10244 16AE                                       l10236 169A  
                                     l10228 165C                                       l10172 550E  
                                     l10180 470A                                       l10166 4C6C  
                                     l10158 4C64                                       l10078 4612  
                                     l10094 48A8                                       l10086 485E  
                                     l10342 1978                                       l10334 1934  
                                     l10326 18E8                                       l10318 18C6  
                                     l10270 178E                                       l10262 1772  
                                     l10254 1734                                       l10246 16EA  
                                     l10350 19C6                                       l10190 4786  
                                     l10182 471A                                       l10174 46E6  
                                     l10168 4C6E                                       l10096 48AC  
                                     l10088 487C                                       l10352 19DC  
                                     l10344 197C                                       l10328 18FA  
                                     l10280 17E8                                       l10272 1792  
                                     l10256 1744                                       l10264 1776  
                                     l10248 16FE                                       l10176 46EA  
                                     l10520 498E                                       l10098 48B6  
                                     l10354 19F6                                       l10338 1952  
                                     l10290 183C                                       l10282 17FA  
                                     l10274 179C                                       l10266 1780  
                                     l10258 1758                                       l10178 46FA  
                                     l10186 472A                                       l10530 4998  
                                     l10522 4990                                       l10514 4984  
                                     l10356 19FA                                       l10292 1842  
                                     l10284 180A                                       l10268 1784  
                                     l10348 1984                                       l10188 4768  
                                     l10540 49A2                                       l10532 499A  
                                     l10524 4992                                       l10516 498A  
                                     l10358 1A10                                       l10294 1846  
                                     l10286 1812                                       l10278 17A6  
                                     l10198 50B4                                       l10550 49AC  
                                     l10542 49A4                                       l10534 499C  
                                     l10526 4994                                       l10518 498C  
                                     l10288 1828                                       l10560 49C4  
                                     l10552 49AE                                       l10544 49A6  
                                     l10536 499E                                       l10528 4996  
                                     l10298 184C                                       l10562 49D8  
                                     l10554 49B4                                       l10546 49A8  
                                     l10538 49A0                                       l10564 49EA  
                                     l10556 49BA                                       l10548 49AA  
                                     l10566 49FA                                       l10574 4A02  
                                     l10558 49C0                                       l10576 4A06  
                                     l10568 49FE                                       l10578 4A0E  
                                     l10870 4742                                       l10880 495C  
                                     l10872 353E                                       l10890 1D6C  
                                     l10882 43C2                                       l10874 504A  
                                     l10884 3CCE                                       l10876 17BA  
                                     l10886 32B6                                       l10878 1998  
                                     l10888 1B50                               ___fltol@sign1 007A  
                           __end_of___aldiv 3E78                             __end_of___aodiv 392A  
                                     ?_atoi 000D                             __end_of___fladd 15CE  
                                     ?_main 0001                                       ?_dtoa 0021  
                           __end_of___aomod 3C0A                             __end_of___fldiv 29C8  
                           __end_of___awdiv 4574                             __end_of___flneg 5340  
                                     STR_10 7FE6                                       STR_11 7F2A  
                                     STR_20 7FF8                                       STR_12 7ED0  
                                     STR_13 7E91                                       STR_14 7F7B  
                                     STR_23 7FFC                                       STR_15 7FEC  
                                     STR_16 7FF4                                       STR_25 7FFC  
                                     STR_19 7FF0                             __end_of___awmod 46E6  
                           __end_of___flmul 227A                             __end_of___flsub 5148  
                           __end_of___fltol 3F80                                       u10000 01FA  
                                     u10001 01F4                                       u10010 01FC  
                                     u10100 043A                                       u10020 0212  
                                     u10101 0436                                       u10021 020E  
                                     u10110 0456                                       u10030 0296  
                                     u10111 0452                                       u10031 0292  
                                     u11000 2EAC                                       u10200 06CE  
                                     u10120 048C                                       u10040 032A  
                                     u11001 2EA8                                       u10201 06CA  
                                     u10121 0488                                       u10041 0326  
                                     u11010 528A                                       u10210 0716  
                                     u10130 04B2                                       u10050 039C  
                                     u11011 5286                                       u10211 0712  
                                     u10131 04AE                                       u10051 0398  
                                     u11020 539C                                       u11100 1A64  
                                     u10300 08E8                                       u10220 0726  
                                     u10140 04C4                                       u10060 03C2  
                                     u11021 5398                                       u11101 1A60  
                                     u10301 08E4                                       u10221 0722  
                                     u10141 04C0                                       u10061 03BE  
                                     u11110 1A80                                       u10310 09BA  
                                     u10230 078E                                       u10150 04D2  
                                     u10070 03D6                                       u11030 4CD4  
                                     u11111 1A7C                                       u10311 09B6  
                                     u10231 078A                                       u10151 04CE  
                                     u10071 03D2                                       u11031 4CD0  
                                     u11040 4E2E                                       u11200 1C24  
                                     u11120 1AA0                                       u10400 0B74  
                                     u10320 09D6                                       u10240 0832  
                                     u10160 04E8                                       u10080 03F8  
                                     u11201 1C20                                       u11121 1A9C  
                                     u10401 0B6E                                       u10321 09D2  
                                     u10241 082E                                       u10161 04E4  
                                     u10081 03F4                                       u11050 4E56  
                                     u11210 1C40                                       u11130 1ACC  
                                     u10410 0B76                                       u10330 09E8  
                                     u10250 0846                                       u10170 04F6  
                                     u10090 0422                                       u11211 1C3C  
                                     u11131 1AC8                                       u10331 09E4  
                                     u10251 0842                                       u10171 04F2  
                                     u10091 041E                                       u11060 4E66  
                                     u11300 1E40                                       u11220 1C70  
                                     u11140 1AFC                                       u10420 0B8C  
                                     u10340 09F8                                       u10260 0858  
                                     u10180 0520                                       u10500 41AC  
                                     u11061 4E62                                       u11301 1E3C  
                                     u11221 1C6C                                       u11141 1AF8  
                                     u10421 0B88                                       u10341 09F4  
                                     u10261 0854                                       u10181 051C  
                                     u10501 41A8                                       u11230 1CA6  
                                     u11150 1B30                                       u11310 3656  
                                     u11070 4356                                       u10430 34BA  
                                     u10350 0A32                                       u10270 0866  
                                     u10190 0668                                       u10510 41DE  
                                     u11047 4E24                                       u11231 1CA2  
                                     u11151 1B2C                                       u11311 3652  
                                     u11071 4352                                       u10431 34B6  
                                     u10351 0A2E                                       u10271 0862  
                                     u10191 0664                                       u10511 41DA  
                                     u11240 1CC2                                       u11160 1B86  
                                     u11080 1A34                                       u11320 3690  
                                     u10600 2376                                       u11400 459C  
                                     u10440 34F0                                       u10360 0A60  
                                     u10280 0882                                       u10520 41FA  
                                     u11057 4E4C                                       u11241 1CBE  
                                     u11161 1B82                                       u11081 1A30  
                                     u11321 368C                                       u10601 2372  
                                     u11401 4598                                       u10441 34EC  
                                     u10361 0A5C                                       u10281 087E  
                                     u10521 41F6                                       u11250 1CF4  
                                     u11170 1B9E                                       u11090 1A4C  
                                     u11330 36CA                                       u10610 247C  
                                     u11410 45BE                                       u10450 350C  
                                     u10370 0AE4                                       u10290 0890  
                                     u10530 420C                                       u11251 1CF0  
                                     u11171 1B9A                                       u11091 1A48  
                                     u11331 36C6                                       u10611 2478  
                                     u11411 45BA                                       u10451 3508  
                                     u10371 0AE0                                       u10291 088C  
                                     u10531 4208                                       u11260 1D10  
                                     u11180 1BC2                                       u11340 36E2  
                                     u10620 251A                                       u11500 4AA2  
                                     u11420 45EA                                       u10460 35C2  
                                     u10380 0AFE                                       u10540 4234  
                                     u10700 0D40                             ___awdiv@divisor 0008  
                                     u11261 1D0C                                       u11181 1BBE  
                                     u11341 36DE                                       u10621 2516  
                                     u11501 4A9E                                       u11421 45E6  
                                     u10461 35BC                                       u10381 0AFA  
                                     u10541 4230                                       u10701 0D3C  
                                     u10550 5178                                       u11270 1D9A  
                                     u11190 1BE6                                       u11350 36F2  
                                     u10630 25DA                                       u11430 4634  
                                     u11510 15E0                                       u10470 35C4  
                                     u10390 0B16                                       u10710 0D72  
                                     u10551 5174                                       u11271 1D96  
                                     u11191 1BE2                                       u11351 36EE  
                                     u11431 4630                                       u11511 15DC  
                                     u10391 0B12                                       u10711 0D6E  
                                     u11280 1DD0                                       u11360 3704  
                                     u10640 25F6                                       u10560 22BA  
                                     u11440 485A                                       u11600 176A  
                                     u11520 1602                                       u10480 35DA  
                                     u10800 108A                                       u10720 0DB4  
                                     _T1CON 000FCD                                       u11281 1DCC  
                                     u11361 3700                                       u10641 25F2  
                                     u11441 4856                                       u11601 1766  
                                     u11521 15FE                                       u10481 35D6  
                                     u10801 1086                                       u10721 0DB0  
                                     u11290 1E06                                       u11370 3738  
                                     u10810 4B38                                       u10570 22E4  
                                     u11450 487C                                       u11610 17FA  
                                     u11530 1614                                       u10490 35EC  
                                     u10730 0E0A                                       u10650 0BFC  
                                     u11291 1E02                                       u11371 3734  
                                     u10811 4B34                                       u10635 25D0  
                                     u10571 22E0                                       u11451 4878  
                                     u11611 17F6                                       u11531 1610  
                                     u10491 35E8                                       u10731 0E06  
                                     u10651 0BF8                                       u11380 376C  
                                     u10820 4B56                                       u10900 3C98  
                                     u10580 2318                                       u11460 48A8  
                                     u11700 1966                                       u11620 180A  
                                     u11540 162A                                       u10740 0E2E  
                                     u10660 0C44                                       u11381 3768  
                                     u10821 4B52                                       u10901 3C94  
                                     u10565 22B0                                       u11461 48A4  
                                     u11701 1962                                       u11621 1806  
                                     u11541 1626                                       u10741 0E2A  
                                     u10661 0C40                                       u11390 3798  
                                     u10830 4B72                                       u10910 3CA8  
                                     u10590 2334                                       u11470 48E6  
                                     u11710 1978                                       u11630 185C  
                                     u11550 166C                                       u10750 0EC0  
                                     u10670 0C7E                                       u11391 3794  
                                     u10831 4B6E                                       u10911 3CA4  
                                     u10591 2330                                       u11471 48E2  
                                     u11711 1974                                       u11631 1858  
                                     u11551 1668                                       u10751 0EBC  
                                     u10671 0C7A                                       u10920 3CB6  
                                     u10840 3C38                                       u11480 4A46  
                                     u11640 186C                                       u11560 1682  
                                     u10760 0F6E                                       u10680 0D28  
                                     u10921 3CB2                                       u10841 3C34  
                                     u10585 230E                                       u11481 4A42  
                                     u11641 1868                                       u11561 167E  
                                     u10761 0F6A                                       u10681 0D22  
                                     u10930 3CFC                                       u10850 3C48  
                                     u11490 4A64                                       u11650 187C  
                                     u11570 171E                                       u10770 0FD6  
                                     u10690 0D2A                                       u10931 3CF8  
                                     u10851 3C44                                       u11491 4A60  
                                     u11651 1878                                       u11571 171A  
                                     u10771 0FD0                                       u10940 54FC  
                                     u10860 3C56                                       u11660 189A  
                                     u11580 1734                                       u10780 0FD8  
                                     u10941 54F8                                       u10861 3C52  
                                     u11661 1896                                       u11581 1730  
                                     u10950 4DA8                                       u10870 3C68  
                                     u11670 18AC                                       u11590 1744  
                                     u10790 0FEE                                       u10951 4DA4  
                                     u10871 3C64                                       u11671 18A8  
                                     u11591 1740                                       u10791 0FEA  
                                     u10960 50A2                                       u10880 3C78  
                                     u11680 18E8                                       u11840 49EA  
                                     _LATB4 007C54                                       u10961 509E  
                                     u10881 3C74                                       u11681 18E4  
                                     u11841 49E6                                       _LATB5 007C55  
                                     u10890 3C86                                       u10970 2E10  
                                     u11690 18FA                                       u11850 49FA  
                                     _LATD2 007C62                                       _LATB6 007C56  
                                     u10891 3C82                                       u11907 4338  
                                     u10971 2E0C                                       u11691 18F6  
                                     u11851 49F6                                       _LATD3 007C63  
                                     _LATB7 007C57                                       u10980 2E3C  
                                     u11917 437E                                       u10981 2E38  
                                     u10990 2E84                                       u11927 5428  
                                     u10991 2E80                                       u11937 3C20  
                                     u11947 546C                                       u11867 1940  
                                     u11957 544A                                       u11877 19E8  
                                     u11967 54DC                                       u11887 48FA  
                                     u11977 548C                                       u11897 491A  
                                     u11987 514C                             __end_of___lwdiv 4B92  
                                     i2l320 4ECA                                       i2l323 4ED8  
                                     i2l328 4F1A                                       i2l284 4F64  
                                     i2l286 4F6C                                main@iniciado 01D2  
                           ___awdiv@counter 000A                                       _RCREG 000FAE  
                              vfpfcnvrt@fmt 00C3                  ??_recorrerCaminoEncontrado 0054  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF            decidirDireccion@posicionInvCruce 0044  
                             __CFG_USBDIV$1 000000                                       _TXREG 000FAD  
                             __CFG_PWRT$OFF 000000                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                       ___lmul@multiplicand 000A                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                          _combinarArreglos 4D48                              __CFG_EBTR3$OFF 000000  
                 hayCruce@investigandoCruce 0042                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                            __CFG_EBTRB$OFF 000000                          __size_of_UART_init 0070  
                                     _flags 012E                                       _boton 0008  
                                     _fputc 4258                                       _fputs 51D4  
                           __end_of_isdigit 5308                                       _pausa 01D3  
                                     _mover 48E8                                       _mouse 00FD  
                               ?_UART_write 0001                                       atoi@n 001A  
                                     pad@fp 0016                                       atoi@s 000D  
                                     _width 012A                                       _putch 551C  
                                     _toint 7E8D                                       dtoa@d 0023  
                                     dtoa@i 0043                                       dtoa@n 003B  
                                     dtoa@p 0035                                       dtoa@s 0039  
                                     dtoa@w 0037                           ??_regresarAlCruce 0054  
                           __end_of_isspace 5014                             __end_of_isupper 52D0  
                                     tablat 000FF5                             __end_of_pwmDuty 32CE  
                                     ttemp5 005B                                       ttemp6 005E  
                                     ttemp7 0062                                       status 000FD8  
                                     wtemp8 005B                             __end_of_sprintf 4FC2  
                            ?___fpclassifyf 0006                             __end_of_tolower 4E0A  
                           __end_of_strncmp 4258                              __CFG_ICPRT$OFF 000000  
                            ??_leerSensores 0050                             __initialization 4B92  
                          ??_dameLecturaAdc 0008                                __end_of_atoi 3612  
                              __end_of_main 4A1A                                __end_of_dtoa 2CAA  
                           ??_configurarAdc 0006                         dameDistancia@conteo 0026  
                    dameDistancia@distancia 0022            limpiarMovimientos@numMovimientos 0008  
                                    ??_atoi 000F                                      ??_main 0055  
                                    ??_dtoa 002B                 combinarArreglos@movimientos 0006  
       comportamientoBasico@caminosRecorrer 01BF                               __activetblptr 000002  
              caminoCorrecto@numMovimientos 0016                                      PID@dif 0096  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                                    ?_boton 0001                                      _CCP1M2 007DEA  
                                    _CCP1M3 007DEB                                      _CCP2M2 007DD2  
                                    _CCP2M3 007DD3                                      ?_fputc 0006  
                                    ?_fputs 000F                                      _ADRESH 000FC4  
                                    _ADRESL 000FC3                                      _CCPR1L 000FBE  
                                    _CCPR2L 000FBB                            ___awdiv@dividend 0006  
                                    ?_mover 0001                                      ?_putch 0001  
                                    _INT0IF 007F91                                      i2l7132 4EC6  
                                    i2l7134 4EE6                                      i2l7138 4EF8  
                                    i2l7340 4F1E                                      i2l7350 4F4A  
                                    i2l7342 4F2C                                      i2l7352 4F66  
                                    i2l7344 4F32                                      i2l7354 4F6A  
                                    i2l7346 4F44                __end_of_regresarPuntoPartida 48E8  
                                    i2l7348 4F48                                      _TMR1IF 007CF0  
                                    _TMR1ON 007E68                                      _TMR2ON 007E52  
                                    _TRISB0 007C98                                      _TRISB1 007C99  
                                    _TRISB2 007C9A                                      _TRISC1 007CA1  
                                    _TRISB3 007C9B                                      _TRISC2 007CA2  
                                    _TRISB4 007C9C                                      _TRISB5 007C9D  
                                    _TRISB6 007C9E                                      _TRISD3 007CAB  
                                    _TRISB7 007C9F                                      _TRISC6 007CA6  
                                    _TRISC7 007CA7                            __end_of___xxtofl 3482  
                          __end_of_hayCruce 37A2                              __CFG_XINST$OFF 000000  
                  __end_of_seLlegoAlDestino 53A4          comportamientoBasico@numMovimientos 01C4  
                              vfprintf@cfmt 00E5                   dameDistancia@numeroSensor 0021  
                                    ___flge 3F80                                      ___fleq 4794  
                                    ___lmul 4CDE                                   ??___aldiv 001A  
                                 ??___aodiv 0016                                   ??___fladd 003C  
                                 ??___aomod 0016                                      ___wmul 53A4  
                         __end_of_UART_init 4C74                                   ??___fldiv 004C  
                                 ??___awdiv 000A                                   ??___flneg 000A  
        comportamientoBasico@espejearCarroY 0135                                   ??___awmod 000A  
                                 ??___flmul 0023                                   ??___flsub 004C  
                                 ??___fltol 0076                                      _efgtoa 0012  
                                 ??___lwdiv 000A                  moverCarrito@espejearCarroY 0054  
                                    _buffer 018D                         _forzarGiroIzquierda 545A  
                                    _floorf 2EFC                         __size_of_UART_write 0016  
                              ?_UART_printf 0007                                      clear_0 4BBA  
                                    clear_1 4BCC                                      clear_2 4BD8  
                          ___awdiv@quotient 000C                             ___awmod@divisor 0008  
                           ___awmod@counter 000A                                      pad@buf 0018  
                                    _roundf 227A                                      dtoa@fp 0021  
                                    _strcpy 4E68                 ??_visualizarPasosRealizados 01CE  
                                    _strlen 5340                   recorrerCaminoEncontrado@i 009E  
                         _oldSensorEnfrente 0118                                      fputc@c 0006  
                                    fputs@c 0013                                      fputs@i 0014  
                                    fputs@s 000F                                   ??_isdigit 0008  
                     _SENSOR_PRIORIDAD_BAJA 01D4                       _SENSOR_PRIORIDAD_ALTA 01D6  
                           ___fpclassifyf@e 000E                             ___fpclassifyf@u 0010  
                           ___fpclassifyf@x 0006                                __mediumconst 7E8C  
                                 ??_isspace 0008                     ?_forzarEspejeoIzquierda 0001  
                                    tblptrh 000FF7                                   ??_isupper 0008  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                    __size_of_forzarEspejeo 0040                                   ??_pwmDuty 007F  
                                    putch@c 0001                            __end_of_vfprintf 4CDE  
                          _posicionDestinoX 013A                            _posicionDestinoY 0139  
                                 ??_sprintf 0054                                   ??_tolower 000E  
           regresarPuntoPartida@movimientos 009A                                   ??_strncmp 000C  
                      ?_forzarGiroIzquierda 0001                           _forzarAvanceRecto 5416  
                    __size_of_forzarReversa 0022                                  ___flge@ff1 0034  
                         _velocidadEstandar 53F0                                  ___flge@ff2 0038  
                           ??___fpclassifyf 000A                                ___xxtofl@arg 0017  
                              ___xxtofl@exp 0016                                ___xxtofl@val 000D  
                                ___fleq@ff1 0006                                  ___fleq@ff2 000A  
                                __accesstop 0060                     __end_of__initialization 4BF6  
                        ?_forzarAvanceRecto 0001                             __CFG_PBADEN$OFF 000000  
                                ___flneg@f1 0006                             __CFG_FOSC$XT_XT 000000  
                        ?_velocidadEstandar 0001     visualizarPasosRealizados@numMovimientos 01CC  
                __end_of_finalizarRecorrido 550E                               ___rparam_used 000001  
             __size_of_forzarEspejeoDerecha 001A                                  ___fltol@f1 0072  
                       ??_forzarAvanceRecto 0006                      __size_of_dameDistancia 0162  
                            __pcstackCOMRAM 0001                         ??_velocidadEstandar 0054  
                              __pidataBANK1 5518                             _sensorIzquierda 0055  
       combinarArreglos@numMovimientosFinal 000C                               __end_of_boton 4F70  
                             __end_of_fputc 4322                               __end_of_fputs 5218  
                             __end_of_mover 4984                               __end_of_putch 551E  
                             __end_of_toint 7E91                           _forzarGiroDerecha 547A  
          __end_of_recorrerCaminoEncontrado 4AA4                          ?_forzarGiroDerecha 0001  
            __end_of_forzarEspejeoIzquierda 54B4   comportamientoBasico@numMovimientosTotales 01C2  
        regresarPuntoPartida@numMovimientos 009C   comportamientoBasico@movimientosRealizados 0200  
                      __end_of_leerSensores 3AA6                          __size_of_configPwm 0050  
                 __end_of_forzarAvanceRecto 5438                                   PID@difAnt 0130  
                 __end_of_velocidadEstandar 5416                                     ??_boton 0004  
                     ??_forzarGiroIzquierda 0006                                     ??_fputc 000A  
                                   ??_fputs 0013                         ??_forzarGiroDerecha 0006  
                                   ??_mover 0008                                     ??_putch 0006  
                                __pbssBANK0 00F9                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                               _paredEnfrente 0138  
             __size_of_comportamientoBasico 0448                   _visualizarPasosRealizados 46E6  
                          ??_caminoCorrecto 001B                           ?_decidirDireccion 0040  
                     PID@velocidadIzquierda 008E                                  _efgtoa$922 008D  
                                _efgtoa$931 0093                                  _efgtoa$923 008F  
                                _efgtoa$932 0095                                  _efgtoa$933 0097  
                                _efgtoa$927 0091                    __end_of_combinarArreglos 4DAA  
                             _forzarEspejeo 5258                          ??_decidirDireccion 004C  
                                   ?___flge 0034                                     ?___fleq 0006  
                                   ?___lmul 0006                                     ?___wmul 0006  
                 __end_of_forzarGiroDerecha 549A                                     ?_efgtoa 007D  
                             _forzarReversa 5438                                     _CCP1CON 000FBD  
                                   _CCP2CON 000FBA                                     ?_floorf 0050  
             limpiarMovimientos@movimientos 0006                              ___lmul@product 000E  
    decidirDireccion@cambioOrientacionCarro 004A                                  _antiRebote 4EC4  
                      _regresarPuntoPartida 483E                                     ?_roundf 004C  
                                   ?_strcpy 0006                                     ?_strlen 0006  
                                   _T2CKPS0 007E50                                     _T2CKPS1 007E51  
                           _regresarAlCruce 4574                                     _PID$750 0094  
                                   _PID$748 0090                                     i2l10892 4F0C  
                                 ?___xxtofl 000D                  __end_of_limpiarMovimientos 50B4  
                             _dameDistancia 3C0A                          __size_of_vfpfcnvrt 0536  
                                 ?_hayCruce 0040                                ??_UART_write 0006  
                             ?_moverCarrito 0088                             __CFG_VREGEN$OFF 000000  
 comportamientoBasico@contCaminosRecorridos 01C8                                     __Hparam 0000  
                            ?_forzarEspejeo 0001                                     __Lparam 0000  
                         __end_of_configPwm 5064                                     ___aldiv 3D6C  
                           __size_of___flge 0104                              ?_forzarReversa 0001  
                           __size_of___fleq 00AA                                     ___aodiv 37A2  
                                   ___fladd 110E                                     ___aomod 3AA6  
                                   ___fldiv 262C                                     ___awdiv 44B0  
                                   ___flneg 5308                             __size_of___lmul 006A  
                                   ___awmod 4636                                     ___flmul 1E50  
                                   ___flsub 5102                                     ___fltol 3E78  
                           __size_of___wmul 0026                                     ___lwdiv 4B1E  
                                 ?_vfprintf 00DF                             __size_of_efgtoa 0BC6  
       recorrerCaminoEncontrado@movimientos 009A                             __CFG_STVREN$OFF 000000  
                           __size_of_floorf 0216                                     __pcinit 4B92  
                     ?_regresarPuntoPartida 009A                                     __ramtop 0800  
                        __end_of_UART_write 54FE                       __end_of_velocidadBaja 53F0  
                                   __ptext0 4984                                     __ptext1 46E6  
                                   __ptext2 4F70                                     __ptext3 4C74  
                                   __ptext4 0BD8                                     __ptext5 4182  
                                   __ptext6 0012                                     __ptext7 4DAA  
                                   __ptext8 5298                                     __ptext9 4E68  
                           __size_of_roundf 03B2                                __size_of_PID 0252  
                           __size_of_strcpy 005C                             __size_of_strlen 0036  
                      __size_of_UART_printf 005E                                __size_of_abs 0040  
                              __size_of_map 007A                                __size_of_pad 00C6  
                                   _isdigit 52D0                                  ??___xxtofl 0011  
                          ___awmod@dividend 0006                              ?_dameDistancia 001B  
                          ___aldiv@dividend 0012                                     _isspace 4FC2  
                                   _isupper 5298                                     efgtoa@c 0083  
                                   efgtoa@d 00A1                                     efgtoa@e 00B9  
                                   efgtoa@f 007F                                     efgtoa@g 00B5  
                                   efgtoa@h 00AB                                     efgtoa@i 00B3  
                                   efgtoa@l 00AF                                     efgtoa@m 009D  
                                   efgtoa@n 00BB                                     efgtoa@p 00A5  
                                   efgtoa@t 0099                                     efgtoa@u 00BD  
                                   efgtoa@w 00A8                  __size_of_forzarAvanceRecto 0022  
                                ??_hayCruce 0043                                     _pwmDuty 3112  
                                   atoi@neg 0013                  __size_of_velocidadEstandar 0026  
                                   _sprintf 4F70                                     _tolower 4DAA  
                                   _strncmp 4182                              __pintcode_body 4F1C  
                      end_of_initialization 4BF6                              ??_moverCarrito 008A  
                                   floorf@e 0077                                     floorf@m 0073  
                                   floorf@u 0079                                     floorf@x 0050  
          decidirDireccion@direccionElegida 004E                                     fputc@fp 0008  
                             __Lmediumconst 7E8C                                     int_func 4F1C  
                                   fputs@fp 0011                                   i2u1200_47 4EEC  
         __size_of_recorrerCaminoEncontrado 008A                      _SENSOR_PRIORIDAD_MEDIA 01D5  
                 ?_recorrerCaminoEncontrado 009A                                   i2u1199_47 4F54  
                         ?_seLlegoAlDestino 0001                           __end_of_vfpfcnvrt 110E  
                                efgtoa@mode 00AA                                  efgtoa@sign 00A3  
                                 _RCSTAbits 000FAB                            ___aldiv@quotient 001C  
                                   postdec1 000FE5                                     postdec2 000FDD  
                   __end_of_regresarAlCruce 4636                                     postinc0 000FEE  
                                   postinc1 000FE6                                     postinc2 000FDE  
                   __size_of_forzarParoAuto 001A                                     roundf@e 0064  
                                   roundf@u 006A                                     roundf@x 004C  
                                   roundf@y 006E                  __size_of_forzarGiroDerecha 0020  
                        ??_seLlegoAlDestino 000B                                  ??_vfprintf 0054  
                     __end_of_configurarAdc 5518                                     strcpy@d 000E  
                                   strlen@a 0008                                     strcpy@s 000C  
                                   strlen@s 0006                                 ?_antiRebote 0001  
                                 _PORTBbits 000F81                                   _UART_init 4C04  
                     __size_of_leerSensores 017C                                 ___fladd@grs 0043  
                               pwmDuty@duty 0084      recorrerCaminoEncontrado@numMovimientos 009C  
                             ___xxtofl@sign 0015                                   _TRISDbits 000F95  
                               ___fldiv@grs 0067                          _oldSensorIzquierda 011C  
                               ___fldiv@rem 0060        comportamientoBasico@posicionInvCruce 01C9  
                                map@out_max 0030                                  map@out_min 002C  
                               ___flmul@grs 0029                              _UART_init$1817 0028  
                                 _TXSTAbits 000FAC                             ??_forzarEspejeo 0054  
                           ??_forzarReversa 0006               regresarAlCruce@numMovimientos 009C  
                              _leerSensores 392A          __size_of_visualizarPasosRealizados 00AE  
                            __end_of___flge 4084                              __end_of___fleq 483E  
                    ??_regresarPuntoPartida 0054                              __end_of___lmul 4D48  
                               vfpfcnvrt@ap 00C5                                 vfpfcnvrt@ct 00DB  
                               vfpfcnvrt@fp 00C1                                 vfpfcnvrt@ll 00CB  
                            __end_of___wmul 53CA                       regresarPuntoPartida@i 009E  
                            __end_of_efgtoa 0BD8                          _finalizarRecorrido 54FE  
                            __end_of_floorf 3112                                  ?_UART_init 0020  
                                floorf@F524 0104                __end_of_forzarEspejeoDerecha 54CE  
                           ??_dameDistancia 001F       comportamientoBasico@investigandoCruce 01CA  
                            __end_of_roundf 262C                     __size_of_dameLecturaAdc 0046  
                            __end_of_strcpy 4EC4                              __end_of_strlen 5376  
                       start_initialization 4B92                         PID@velocidadDerecha 0092  
                               __end_of_PID 2EFC                         ?_finalizarRecorrido 0001  
                               __end_of_abs 5258                                 __end_of_map 4B1E  
                               __end_of_pad 44B0                            regresarAlCruce@i 009E  
                       __size_of_antiRebote 0058                       __end_of___fpclassifyf 4182  
                       pwmDuty@cicloTrabajo 007C                        ??_finalizarRecorrido 0054  
                               vfprintf@fmt 00E1                                    ??___flge 003C  
                                  ??___fleq 000E                           ?_combinarArreglos 0006  
                                  ??___lmul 000E                                    ??___wmul 000A  
                          ?_regresarAlCruce 009A                            _oldSensorDerecha 0120  
                comportamientoBasico@mapear 0134                              _sensorEnfrente 0124  
                                  ??_efgtoa 0084                                 __pdataBANK1 01D3  
                        ??_combinarArreglos 000E                                    ??_floorf 006D  
                          __CFG_LPT1OSC$OFF 000000                __end_of_comportamientoBasico 1A16  
         __end_of_visualizarPasosRealizados 4794                        __end_of_moverCarrito 43EA  
                                  ??_roundf 0050                                    ??_strcpy 000A  
                                  ??_strlen 0008                                   ___fladd@a 0038  
                                 ___fladd@b 0034                   __size_of_decidirDireccion 043A  
               __end_of_forzarGiroIzquierda 547A                                   ___fldiv@a 0048  
                                 ___fldiv@b 0044                                 __pbssBIGRAM 02C8  
                              _llegoDestino 0059                                   ___flmul@a 001F  
                                 ___flmul@b 001B                                 __pbssCOMRAM 0055  
                                 ___flsub@a 0048                                   ___flsub@b 0044  
          comportamientoBasico@caminoActual 01C7                               __pcstackBANK0 0060  
                             __pcstackBANK1 01CC                            ___aodiv@dividend 0006  
                         __size_of___xxtofl 01B4                     hayCruce@caminosRecorrer 0040  
                         __size_of_hayCruce 0190             decidirDireccion@caminosRecorrer 0040  
                              _paredDerecha 0137                          _limpiarMovimientos 5064  
                         UART_printf@cadena 0007                                    PID@error 0098  
                                 _atoi$1425 0015                                   _atoi$1426 0019  
                                 _atoi$1427 0017                   _DISTANCIA_PRIORIDAD_MEDIA 0110  
                 caminoCorrecto@caminoFinal 0014                            ___lwdiv@dividend 0006  
                                 __pintcode 0008                         ?_limpiarMovimientos 0006  
                             __pmediumconst 7E8C                              _forzarParoAuto 54CE  
                                  ?___aldiv 0012                                    ?___aodiv 0006  
                                  ?___fladd 0034                                    ?___aomod 0006  
                                  ?___fldiv 0044                                    ?___awdiv 0006  
                          ___aodiv@quotient 0018                                    ?___flneg 0006  
                                  ?___awmod 0006                                    ?___flmul 001B  
                                  ?___flsub 0044                                    ?___fltol 0072  
                                  ?___lwdiv 0006                                   _configPwm 5014  
                            _paredIzquierda 0136                                 ??_UART_init 0024  
                         __size_of_vfprintf 006A                                    ?_isdigit 0006  
                                  ?_isspace 0006                                    ?_isupper 0006  
comportamientoBasico@cambioOrientacionCarro 01C6           caminoCorrecto@numMovimientosFinal 0018  
                                  ?_pwmDuty 007C                        ??_limpiarMovimientos 000A  
                          ___lwdiv@quotient 000B                              __size_of_boton 4F68  
                                  ?_sprintf 00E7                                    ?_tolower 000C  
                            __size_of_fputc 00CA                              __size_of_fputs 0044  
                                  _PID$1818 008A                                    ?_strncmp 0006  
                            __size_of_mover 009C       decidirDireccion@contCaminosRecorridos 0046  
                            __size_of_putch 0002                             ___aldiv@divisor 0016  
                         combinarArreglos@i 0010                             ___aldiv@counter 001A  
                            ___wmul@product 000A           decidirDireccion@investigandoCruce 0042  
              seLlegoAlDestino@llegoDestino 000B                        _forzarEspejeoDerecha 54B4  
                    __end_of_forzarParoAuto 54E8                                    i2u755_40 4ED8  
                                  i2u755_41 4ED4                                    i2u756_40 4EE6  
                                  i2u756_41 4EE2                                    i2u778_40 4F2C  
                                  i2u778_41 4F28                                    i2u779_40 4F44  
                                  i2u779_41 4F40                            __CFG_WDTPS$32768 000000  
                  ??_forzarEspejeoIzquierda 0054                               ??_UART_printf 0009  
                              ??_antiRebote 0001                                   _vfpfcnvrt 0BD8  
                                ?_configPwm 0001                                   map@in_max 0028  
                                 map@in_min 0024                     __size_of_caminoCorrecto 0046  
                                _ADCON0bits 000FC2                           ___wmul@multiplier 0006  
                          configPwm@channel 0008                              _dameLecturaAdc 5148  
                            UART_write@dato 0006                   __size_of_seLlegoAlDestino 002E  
                              _isspace$1456 000C                                  vfpfcnvrt@c 00DE  
                                vfpfcnvrt@f 00D7                           ___lmul@multiplier 0006  
                               _INTCON2bits 000FF1                                   copy_data0 4BA6  
                      _comportamientoBasico 15CE                       ?_forzarEspejeoDerecha 0001  
                    __size_of_velocidadBaja 0026                          __end_of_antiRebote 4F1C  
                                roundf@F525 0100                                    __Hrparam 0000  
                           ?_forzarParoAuto 0001                               UART_init@BAUD 0020  
                             _sensorDerecha 00F9                                  vfprintf@ap 00E3  
                                  __Lrparam 0000                                  vfprintf@fp 00DF  
                     __size_of_moverCarrito 00C8                              _posicionCarroX 013C  
                            _posicionCarroY 013B                            __size_of___aldiv 010C  
                          __size_of___aodiv 0188                            __size_of___fladd 04C0  
                          __size_of___aomod 0164                            __size_of___fldiv 039C  
                          __size_of___awdiv 00C4                            __size_of___flneg 0038  
                          __size_of___awmod 00B0                            __size_of___flmul 042A  
                          __size_of___flsub 0046                            __size_of___fltol 0108  
                                ?_vfpfcnvrt 00C1                            __size_of___lwdiv 0074  
                    __end_of_dameLecturaAdc 518E                             ___aodiv@divisor 000E  
                           ___aodiv@counter 0016                          ___fpclassifyf@F463 0108  
                       hayCruce@contCaminos 0043                 combinarArreglos@caminoFinal 0008  
                          _decidirDireccion 1A16                                  sprintf@fmt 00E9  
                                  ___xxtofl 32CE                         __end_of_UART_printf 4E68  
                          __size_of_isdigit 0038                                    _dtoa$898 0033  
                           ___lwdiv@divisor 0008                                    _hayCruce 3612  
                          __size_of_isspace 0052                             ___lwdiv@counter 000A  
                                  __ptext10 2EFC                                    __ptext11 4084  
                                  __ptext20 551C                                    __ptext12 4794  
                                  __ptext21 5218                                    __ptext13 4636  
                                  __ptext30 5014                                    __ptext22 3AA6  
                                  __ptext14 44B0                                    __ptext31 15CE  
                                  __ptext23 37A2                                    __ptext15 29C8  
                                  __ptext40 5308                                    __ptext32 53CA  
                                  __ptext24 3482                                    __ptext16 43EA  
                                  __ptext41 4322                                    __ptext33 483E  
                                  __ptext25 4FC2                                    __ptext17 5340  
                                  __ptext50 549A                                    __ptext42 5416  
                                  __ptext34 4574                                    __ptext26 52D0  
                                  __ptext18 51D4                                    __ptext51 545A  
                                  __ptext43 392A                                    __ptext35 4A1A  
                                  __ptext27 53A4                                    __ptext19 4258  
                                  __ptext60 262C                                    __ptext52 54B4  
                                  __ptext44 3C0A                                    __ptext36 48E8  
                                  __ptext28 50B4                                    __ptext61 5438  
                                  __ptext53 53F0                                    __ptext45 4B1E  
                                  __ptext37 2CAA                                    __ptext29 550E  
                                  __ptext70 4D48                                    __ptext62 54CE  
                                  __ptext54 3112                                    __ptext46 110E  
                                  __ptext38 227A                                    __ptext71 4E0A  
                                  __ptext63 547A                                    __ptext55 4AA4  
                                  __ptext47 3612                                    __ptext39 5102  
                                  __ptext72 54E8                                    __ptext64 1A16  
                                  __ptext56 4CDE                                    __ptext48 54FE  
                                  __ptext73 4C04                                    __ptext65 5376  
                                  __ptext57 32CE                                    __ptext49 5258  
                                  __ptext74 3D6C                                    __ptext66 5148  
                                  __ptext58 3E78                                    __ptext67 3F80  
                                  __ptext59 1E50                                    __ptext76 4EC4  
                                  __ptext68 518E                                    __ptext69 5064  
                          __size_of_isupper 0038                            __size_of_pwmDuty 01BC  
   __end_of_inicializarComportamientoBasico 5102    __size_of_inicializarComportamientoBasico 004E  
         ??_inicializarComportamientoBasico 0054            ?_inicializarComportamientoBasico 0001  
           _inicializarComportamientoBasico 50B4                            __size_of_sprintf 0052  
                          __size_of_tolower 0060                               antiRebote@pin 0003  
                  _recorrerCaminoEncontrado 4A1A                                  strcpy@dest 0006  
                          __size_of_strncmp 00D6              combinarArreglos@numMovimientos 000A  
                     ?_comportamientoBasico 0001          comportamientoBasico@cruceDetectado 0133  
                              _moverCarrito 4322                      __size_of_configurarAdc 000A  
                             __size_of_atoi 0190                               __size_of_main 0096  
                             __size_of_dtoa 02E2                       __end_of_forzarEspejeo 5298  
                                  efgtoa@fp 007D                                    efgtoa@ne 009F  
                                  efgtoa@pp 009B                                    efgtoa@ou 0089  
      comportamientoBasico@direccionElegida 00A2                       __end_of_forzarReversa 545A  
                                  int$flags 005A                     dameLecturaAdc@canalLeer 000A  
                                  _vfprintf 4C74             __size_of_forzarEspejeoIzquierda 001A  
                               ??_configPwm 0006                             ?_dameLecturaAdc 0006  
             __size_of_regresarPuntoPartida 00AA                            ___aomod@dividend 0006  
                     __CFG_CPUDIV$OSC1_PLL2 000000                               _velocidadBaja 53CA  
              decidirDireccion@caminoActual 0048                                  _INTCONbits 000FF2  
                     __end_of_dameDistancia 3D6C                   __size_of_combinarArreglos 0062  
                       limpiarMovimientos@i 000C                                    isdigit@c 0006  
                                  intlevel2 0000                                   sprintf@ap 00F1  
                caminoCorrecto@caminoActual 001A                      ??_forzarEspejeoDerecha 0054  
                                  isspace@c 0006                                   strcpy@src 0008  
                                  isupper@c 0006                                   strncmp@_l 0006  
                                 strncmp@_r 0008                 __size_of_finalizarRecorrido 0010  
                               efgtoa@nmode 00A7                             ___aomod@divisor 000E  
                               ??_vfpfcnvrt 00C7                             ___aomod@counter 0016  
                             _vfpfcnvrt$952 00D5                               _vfpfcnvrt$947 00D3  
                               _UART_printf 4E0A                               _configurarAdc 550E  
                            _caminoCorrecto 518E                              ?_velocidadBaja 0001  
                ?_visualizarPasosRealizados 01CC                              pwmDuty@channel 007E  
                                  sprintf@f 00F3                                    tolower@c 000C  
                                  sprintf@s 00E7                      __size_of___fpclassifyf 00FE  
                  __size_of_regresarAlCruce 00C2                            _seLlegoAlDestino 5376  
                                  strncmp@l 000D                                    strncmp@n 000A  
                                  strncmp@r 000F          comportamientoBasico@carroEspejeado 01CB  
                              ___aldiv@sign 001B                  moverCarrito@carroEspejeado 0088  
                             ___fladd@signs 0040                      ??_comportamientoBasico 00A0  
                                _UART_write 54E8                      _forzarEspejeoIzquierda 549A  
              __size_of_forzarGiroIzquierda 0020                                ___aodiv@sign 0017  
                              ___fladd@aexp 0041                                ___fladd@bexp 0042  
                regresarAlCruce@movimientos 009A                                ___aomod@sign 0017  
                 caminoCorrecto@movimientos 0012                                 _roundf$1820 0060  
                               _roundf$1819 0066  
