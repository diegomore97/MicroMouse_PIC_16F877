

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Sep 18 14:53:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    99                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   100  0000                     
   101                           ; Version 2.10
   102                           ; Generated 31/07/2019 GMT
   103                           ; 
   104                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F4550 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	idataBANK1
   137  00578C                     __pidataBANK1:
   138                           	opt callstack 0
   139                           
   140                           ;initializer for _pausa
   141  00578C  01                 	db	1
   142                           
   143                           ;initializer for _SENSOR_PRIORIDAD_BAJA
   144  00578D  03                 	db	3
   145                           
   146                           ;initializer for _SENSOR_PRIORIDAD_MEDIA
   147  00578E  02                 	db	2
   148                           
   149                           ;initializer for _SENSOR_PRIORIDAD_ALTA
   150  00578F  01                 	db	1
   151                           
   152                           	psect	mediumconst
   153  007DEA                     __pmediumconst:
   154                           	opt callstack 0
   155  007DEA  00                 	db	0
   156  007DEB  0000               	dw	0
   157  007DED  4B00               	dw	19200
   158  007DEF                     __end_of_toint:
   159                           	opt callstack 0
   160  0000                     _T1CON	set	4045
   161  0000                     _TRISDbits	set	3989
   162  0000                     _INTCON2bits	set	4081
   163  0000                     _INTCONbits	set	4082
   164  0000                     _ADRESL	set	4035
   165  0000                     _ADRESH	set	4036
   166  0000                     _ADCON0bits	set	4034
   167  0000                     _ADCON2	set	4032
   168  0000                     _ADCON1	set	4033
   169  0000                     _TXREG	set	4013
   170  0000                     _RCREG	set	4014
   171  0000                     _RCSTAbits	set	4011
   172  0000                     _TXSTAbits	set	4012
   173  0000                     _SPBRG	set	4015
   174  0000                     _PORTBbits	set	3969
   175  0000                     _TMR1L	set	4046
   176  0000                     _TMR1H	set	4047
   177  0000                     _PR2	set	4043
   178  0000                     _CCP2CON	set	4026
   179  0000                     _CCPR2L	set	4027
   180  0000                     _CCP1CON	set	4029
   181  0000                     _CCPR1L	set	4030
   182  0000                     _TRISB0	set	31896
   183  0000                     _TRISB7	set	31903
   184  0000                     _TRISB6	set	31902
   185  0000                     _TRISB5	set	31901
   186  0000                     _TRISB4	set	31900
   187  0000                     _TRISB3	set	31899
   188  0000                     _TRISB2	set	31898
   189  0000                     _TRISB1	set	31897
   190  0000                     _TRISD3	set	31915
   191  0000                     _LATB7	set	31831
   192  0000                     _LATB6	set	31830
   193  0000                     _LATB5	set	31829
   194  0000                     _LATB4	set	31828
   195  0000                     _LATD2	set	31842
   196  0000                     _INT0IF	set	32657
   197  0000                     _RCIF	set	31989
   198  0000                     _TRISC7	set	31911
   199  0000                     _TRISC6	set	31910
   200  0000                     _TMR1IF	set	31984
   201  0000                     _TMR1ON	set	32360
   202  0000                     _LATD3	set	31843
   203  0000                     _TMR2ON	set	32338
   204  0000                     _CCP2M2	set	32210
   205  0000                     _CCP2M3	set	32211
   206  0000                     _TRISC1	set	31905
   207  0000                     _CCP1M2	set	32234
   208  0000                     _CCP1M3	set	32235
   209  0000                     _TRISC2	set	31906
   210  0000                     _T2CKPS1	set	32337
   211  0000                     _T2CKPS0	set	32336
   212  007DEF                     STR_13:
   213  007DEF  0A                 	db	10
   214  007DF0  0A                 	db	10
   215  007DF1  4F                 	db	79	;'O'
   216  007DF2  56                 	db	86	;'V'
   217  007DF3  45                 	db	69	;'E'
   218  007DF4  52                 	db	82	;'R'
   219  007DF5  46                 	db	70	;'F'
   220  007DF6  4C                 	db	76	;'L'
   221  007DF7  4F                 	db	79	;'O'
   222  007DF8  57                 	db	87	;'W'
   223  007DF9  20                 	db	32
   224  007DFA  65                 	db	101	;'e'
   225  007DFB  6E                 	db	110	;'n'
   226  007DFC  20                 	db	32
   227  007DFD  65                 	db	101	;'e'
   228  007DFE  6C                 	db	108	;'l'
   229  007DFF  20                 	db	32
   230  007E00  6D                 	db	109	;'m'
   231  007E01  61                 	db	97	;'a'
   232  007E02  70                 	db	112	;'p'
   233  007E03  65                 	db	101	;'e'
   234  007E04  6F                 	db	111	;'o'
   235  007E05  20                 	db	32
   236  007E06  64                 	db	100	;'d'
   237  007E07  65                 	db	101	;'e'
   238  007E08  20                 	db	32
   239  007E09  70                 	db	112	;'p'
   240  007E0A  61                 	db	97	;'a'
   241  007E0B  73                 	db	115	;'s'
   242  007E0C  6F                 	db	111	;'o'
   243  007E0D  73                 	db	115	;'s'
   244  007E0E  20                 	db	32
   245  007E0F  52                 	db	82	;'R'
   246  007E10  65                 	db	101	;'e'
   247  007E11  61                 	db	97	;'a'
   248  007E12  6C                 	db	108	;'l'
   249  007E13  69                 	db	105	;'i'
   250  007E14  7A                 	db	122	;'z'
   251  007E15  61                 	db	97	;'a'
   252  007E16  64                 	db	100	;'d'
   253  007E17  6F                 	db	111	;'o'
   254  007E18  73                 	db	115	;'s'
   255  007E19  20                 	db	32
   256  007E1A  70                 	db	112	;'p'
   257  007E1B  61                 	db	97	;'a'
   258  007E1C  72                 	db	114	;'r'
   259  007E1D  61                 	db	97	;'a'
   260  007E1E  20                 	db	32
   261  007E1F  63                 	db	99	;'c'
   262  007E20  61                 	db	97	;'a'
   263  007E21  6D                 	db	109	;'m'
   264  007E22  69                 	db	105	;'i'
   265  007E23  6E                 	db	110	;'n'
   266  007E24  6F                 	db	111	;'o'
   267  007E25  20                 	db	32
   268  007E26  54                 	db	84	;'T'
   269  007E27  6F                 	db	111	;'o'
   270  007E28  74                 	db	116	;'t'
   271  007E29  61                 	db	97	;'a'
   272  007E2A  6C                 	db	108	;'l'
   273  007E2B  0A                 	db	10
   274  007E2C  0A                 	db	10
   275  007E2D  00                 	db	0
   276  007E2E                     STR_12:
   277  007E2E  0A                 	db	10
   278  007E2F  0A                 	db	10
   279  007E30  4F                 	db	79	;'O'
   280  007E31  56                 	db	86	;'V'
   281  007E32  45                 	db	69	;'E'
   282  007E33  52                 	db	82	;'R'
   283  007E34  46                 	db	70	;'F'
   284  007E35  4C                 	db	76	;'L'
   285  007E36  4F                 	db	79	;'O'
   286  007E37  57                 	db	87	;'W'
   287  007E38  20                 	db	32
   288  007E39  65                 	db	101	;'e'
   289  007E3A  6E                 	db	110	;'n'
   290  007E3B  20                 	db	32
   291  007E3C  65                 	db	101	;'e'
   292  007E3D  6C                 	db	108	;'l'
   293  007E3E  20                 	db	32
   294  007E3F  6D                 	db	109	;'m'
   295  007E40  61                 	db	97	;'a'
   296  007E41  70                 	db	112	;'p'
   297  007E42  65                 	db	101	;'e'
   298  007E43  6F                 	db	111	;'o'
   299  007E44  20                 	db	32
   300  007E45  64                 	db	100	;'d'
   301  007E46  65                 	db	101	;'e'
   302  007E47  20                 	db	32
   303  007E48  70                 	db	112	;'p'
   304  007E49  61                 	db	97	;'a'
   305  007E4A  73                 	db	115	;'s'
   306  007E4B  6F                 	db	111	;'o'
   307  007E4C  73                 	db	115	;'s'
   308  007E4D  20                 	db	32
   309  007E4E  52                 	db	82	;'R'
   310  007E4F  65                 	db	101	;'e'
   311  007E50  61                 	db	97	;'a'
   312  007E51  6C                 	db	108	;'l'
   313  007E52  69                 	db	105	;'i'
   314  007E53  7A                 	db	122	;'z'
   315  007E54  61                 	db	97	;'a'
   316  007E55  64                 	db	100	;'d'
   317  007E56  6F                 	db	111	;'o'
   318  007E57  73                 	db	115	;'s'
   319  007E58  20                 	db	32
   320  007E59  70                 	db	112	;'p'
   321  007E5A  61                 	db	97	;'a'
   322  007E5B  72                 	db	114	;'r'
   323  007E5C  61                 	db	97	;'a'
   324  007E5D  20                 	db	32
   325  007E5E  63                 	db	99	;'c'
   326  007E5F  72                 	db	114	;'r'
   327  007E60  75                 	db	117	;'u'
   328  007E61  63                 	db	99	;'c'
   329  007E62  65                 	db	101	;'e'
   330  007E63  0A                 	db	10
   331  007E64  0A                 	db	10
   332  007E65  00                 	db	0
   333  007E66  0D                 	db	13
   334  007E67  4C                 	db	76	;'L'
   335  007E68  65                 	db	101	;'e'
   336  007E69  63                 	db	99	;'c'
   337  007E6A  74                 	db	116	;'t'
   338  007E6B  75                 	db	117	;'u'
   339  007E6C  72                 	db	114	;'r'
   340  007E6D  61                 	db	97	;'a'
   341  007E6E  20                 	db	32
   342  007E6F  64                 	db	100	;'d'
   343  007E70  65                 	db	101	;'e'
   344  007E71  20                 	db	32
   345  007E72  73                 	db	115	;'s'
   346  007E73  65                 	db	101	;'e'
   347  007E74  6E                 	db	110	;'n'
   348  007E75  73                 	db	115	;'s'
   349  007E76  6F                 	db	111	;'o'
   350  007E77  72                 	db	114	;'r'
   351  007E78  20                 	db	32
   352  007E79  4F                 	db	79	;'O'
   353  007E7A  70                 	db	112	;'p'
   354  007E7B  74                 	db	116	;'t'
   355  007E7C  69                 	db	105	;'i'
   356  007E7D  63                 	db	99	;'c'
   357  007E7E  6F                 	db	111	;'o'
   358  007E7F  20                 	db	32
   359  007E80  3D                 	db	61	;'='
   360  007E81  20                 	db	32
   361  007E82  25                 	db	37
   362  007E83  64                 	db	100	;'d'
   363  007E84  0D                 	db	13
   364  007E85  0A                 	db	10
   365  007E86  0A                 	db	10
   366  007E87  00                 	db	0
   367  007E88                     STR_19:
   368  007E88  49                 	db	73	;'I'
   369  007E89  6E                 	db	110	;'n'
   370  007E8A  76                 	db	118	;'v'
   371  007E8B  65                 	db	101	;'e'
   372  007E8C  73                 	db	115	;'s'
   373  007E8D  74                 	db	116	;'t'
   374  007E8E  69                 	db	105	;'i'
   375  007E8F  67                 	db	103	;'g'
   376  007E90  61                 	db	97	;'a'
   377  007E91  6E                 	db	110	;'n'
   378  007E92  64                 	db	100	;'d'
   379  007E93  6F                 	db	111	;'o'
   380  007E94  20                 	db	32
   381  007E95  43                 	db	67	;'C'
   382  007E96  72                 	db	114	;'r'
   383  007E97  75                 	db	117	;'u'
   384  007E98  63                 	db	99	;'c'
   385  007E99  65                 	db	101	;'e'
   386  007E9A  3A                 	db	58	;':'
   387  007E9B  20                 	db	32
   388  007E9C  25                 	db	37
   389  007E9D  63                 	db	99	;'c'
   390  007E9E  20                 	db	32
   391  007E9F  7C                 	db	124
   392  007EA0  20                 	db	32
   393  007EA1  25                 	db	37
   394  007EA2  63                 	db	99	;'c'
   395  007EA3  20                 	db	32
   396  007EA4  7C                 	db	124
   397  007EA5  20                 	db	32
   398  007EA6  25                 	db	37
   399  007EA7  63                 	db	99	;'c'
   400  007EA8  0A                 	db	10
   401  007EA9  00                 	db	0
   402  007EAA                     STR_16:
   403  007EAA  0D                 	db	13
   404  007EAB  44                 	db	68	;'D'
   405  007EAC  69                 	db	105	;'i'
   406  007EAD  72                 	db	114	;'r'
   407  007EAE  65                 	db	101	;'e'
   408  007EAF  63                 	db	99	;'c'
   409  007EB0  63                 	db	99	;'c'
   410  007EB1  69                 	db	105	;'i'
   411  007EB2  6F                 	db	111	;'o'
   412  007EB3  6E                 	db	110	;'n'
   413  007EB4  20                 	db	32
   414  007EB5  45                 	db	69	;'E'
   415  007EB6  6C                 	db	108	;'l'
   416  007EB7  65                 	db	101	;'e'
   417  007EB8  67                 	db	103	;'g'
   418  007EB9  69                 	db	105	;'i'
   419  007EBA  64                 	db	100	;'d'
   420  007EBB  61                 	db	97	;'a'
   421  007EBC  3A                 	db	58	;':'
   422  007EBD  20                 	db	32
   423  007EBE  49                 	db	73	;'I'
   424  007EBF  5A                 	db	90	;'Z'
   425  007EC0  51                 	db	81	;'Q'
   426  007EC1  55                 	db	85	;'U'
   427  007EC2  49                 	db	73	;'I'
   428  007EC3  45                 	db	69	;'E'
   429  007EC4  52                 	db	82	;'R'
   430  007EC5  44                 	db	68	;'D'
   431  007EC6  41                 	db	65	;'A'
   432  007EC7  0A                 	db	10
   433  007EC8  0A                 	db	10
   434  007EC9  0D                 	db	13
   435  007ECA  00                 	db	0
   436  007ECB                     STR_11:
   437  007ECB  0D                 	db	13
   438  007ECC  4D                 	db	77	;'M'
   439  007ECD  6F                 	db	111	;'o'
   440  007ECE  76                 	db	118	;'v'
   441  007ECF  69                 	db	105	;'i'
   442  007ED0  6D                 	db	109	;'m'
   443  007ED1  69                 	db	105	;'i'
   444  007ED2  65                 	db	101	;'e'
   445  007ED3  6E                 	db	110	;'n'
   446  007ED4  74                 	db	116	;'t'
   447  007ED5  6F                 	db	111	;'o'
   448  007ED6  73                 	db	115	;'s'
   449  007ED7  20                 	db	32
   450  007ED8  52                 	db	82	;'R'
   451  007ED9  65                 	db	101	;'e'
   452  007EDA  61                 	db	97	;'a'
   453  007EDB  6C                 	db	108	;'l'
   454  007EDC  69                 	db	105	;'i'
   455  007EDD  7A                 	db	122	;'z'
   456  007EDE  61                 	db	97	;'a'
   457  007EDF  64                 	db	100	;'d'
   458  007EE0  6F                 	db	111	;'o'
   459  007EE1  73                 	db	115	;'s'
   460  007EE2  20                 	db	32
   461  007EE3  3D                 	db	61	;'='
   462  007EE4  20                 	db	32
   463  007EE5  25                 	db	37
   464  007EE6  64                 	db	100	;'d'
   465  007EE7  0D                 	db	13
   466  007EE8  0A                 	db	10
   467  007EE9  0A                 	db	10
   468  007EEA  00                 	db	0
   469  007EEB                     STR_15:
   470  007EEB  0D                 	db	13
   471  007EEC  44                 	db	68	;'D'
   472  007EED  69                 	db	105	;'i'
   473  007EEE  72                 	db	114	;'r'
   474  007EEF  65                 	db	101	;'e'
   475  007EF0  63                 	db	99	;'c'
   476  007EF1  63                 	db	99	;'c'
   477  007EF2  69                 	db	105	;'i'
   478  007EF3  6F                 	db	111	;'o'
   479  007EF4  6E                 	db	110	;'n'
   480  007EF5  20                 	db	32
   481  007EF6  45                 	db	69	;'E'
   482  007EF7  6C                 	db	108	;'l'
   483  007EF8  65                 	db	101	;'e'
   484  007EF9  67                 	db	103	;'g'
   485  007EFA  69                 	db	105	;'i'
   486  007EFB  64                 	db	100	;'d'
   487  007EFC  61                 	db	97	;'a'
   488  007EFD  3A                 	db	58	;':'
   489  007EFE  20                 	db	32
   490  007EFF  45                 	db	69	;'E'
   491  007F00  4E                 	db	78	;'N'
   492  007F01  46                 	db	70	;'F'
   493  007F02  52                 	db	82	;'R'
   494  007F03  45                 	db	69	;'E'
   495  007F04  4E                 	db	78	;'N'
   496  007F05  54                 	db	84	;'T'
   497  007F06  45                 	db	69	;'E'
   498  007F07  0A                 	db	10
   499  007F08  0A                 	db	10
   500  007F09  0D                 	db	13
   501  007F0A  00                 	db	0
   502  007F0B                     STR_18:
   503  007F0B  0D                 	db	13
   504  007F0C  44                 	db	68	;'D'
   505  007F0D  69                 	db	105	;'i'
   506  007F0E  72                 	db	114	;'r'
   507  007F0F  65                 	db	101	;'e'
   508  007F10  63                 	db	99	;'c'
   509  007F11  63                 	db	99	;'c'
   510  007F12  69                 	db	105	;'i'
   511  007F13  6F                 	db	111	;'o'
   512  007F14  6E                 	db	110	;'n'
   513  007F15  20                 	db	32
   514  007F16  45                 	db	69	;'E'
   515  007F17  6C                 	db	108	;'l'
   516  007F18  65                 	db	101	;'e'
   517  007F19  67                 	db	103	;'g'
   518  007F1A  69                 	db	105	;'i'
   519  007F1B  64                 	db	100	;'d'
   520  007F1C  61                 	db	97	;'a'
   521  007F1D  3A                 	db	58	;':'
   522  007F1E  20                 	db	32
   523  007F1F  43                 	db	67	;'C'
   524  007F20  41                 	db	65	;'A'
   525  007F21  4C                 	db	76	;'L'
   526  007F22  4C                 	db	76	;'L'
   527  007F23  45                 	db	69	;'E'
   528  007F24  4A                 	db	74	;'J'
   529  007F25  4F                 	db	79	;'O'
   530  007F26  4E                 	db	78	;'N'
   531  007F27  0A                 	db	10
   532  007F28  0A                 	db	10
   533  007F29  0D                 	db	13
   534  007F2A  00                 	db	0
   535  007F2B                     STR_17:
   536  007F2B  0D                 	db	13
   537  007F2C  44                 	db	68	;'D'
   538  007F2D  69                 	db	105	;'i'
   539  007F2E  72                 	db	114	;'r'
   540  007F2F  65                 	db	101	;'e'
   541  007F30  63                 	db	99	;'c'
   542  007F31  63                 	db	99	;'c'
   543  007F32  69                 	db	105	;'i'
   544  007F33  6F                 	db	111	;'o'
   545  007F34  6E                 	db	110	;'n'
   546  007F35  20                 	db	32
   547  007F36  45                 	db	69	;'E'
   548  007F37  6C                 	db	108	;'l'
   549  007F38  65                 	db	101	;'e'
   550  007F39  67                 	db	103	;'g'
   551  007F3A  69                 	db	105	;'i'
   552  007F3B  64                 	db	100	;'d'
   553  007F3C  61                 	db	97	;'a'
   554  007F3D  3A                 	db	58	;':'
   555  007F3E  20                 	db	32
   556  007F3F  44                 	db	68	;'D'
   557  007F40  45                 	db	69	;'E'
   558  007F41  52                 	db	82	;'R'
   559  007F42  45                 	db	69	;'E'
   560  007F43  43                 	db	67	;'C'
   561  007F44  48                 	db	72	;'H'
   562  007F45  41                 	db	65	;'A'
   563  007F46  0A                 	db	10
   564  007F47  0A                 	db	10
   565  007F48  0D                 	db	13
   566  007F49  00                 	db	0
   567  007F4A  0D                 	db	13
   568  007F4B  44                 	db	68	;'D'
   569  007F4C  65                 	db	101	;'e'
   570  007F4D  73                 	db	115	;'s'
   571  007F4E  74                 	db	116	;'t'
   572  007F4F  69                 	db	105	;'i'
   573  007F50  6E                 	db	110	;'n'
   574  007F51  6F                 	db	111	;'o'
   575  007F52  20                 	db	32
   576  007F53  6E                 	db	110	;'n'
   577  007F54  6F                 	db	111	;'o'
   578  007F55  20                 	db	32
   579  007F56  64                 	db	100	;'d'
   580  007F57  65                 	db	101	;'e'
   581  007F58  74                 	db	116	;'t'
   582  007F59  65                 	db	101	;'e'
   583  007F5A  63                 	db	99	;'c'
   584  007F5B  74                 	db	116	;'t'
   585  007F5C  61                 	db	97	;'a'
   586  007F5D  64                 	db	100	;'d'
   587  007F5E  6F                 	db	111	;'o'
   588  007F5F  20                 	db	32
   589  007F60  0D                 	db	13
   590  007F61  0A                 	db	10
   591  007F62  00                 	db	0
   592  007F63  0D                 	db	13
   593  007F64  53                 	db	83	;'S'
   594  007F65  65                 	db	101	;'e'
   595  007F66  20                 	db	32
   596  007F67  6C                 	db	108	;'l'
   597  007F68  6C                 	db	108	;'l'
   598  007F69  65                 	db	101	;'e'
   599  007F6A  67                 	db	103	;'g'
   600  007F6B  6F                 	db	111	;'o'
   601  007F6C  20                 	db	32
   602  007F6D  61                 	db	97	;'a'
   603  007F6E  6C                 	db	108	;'l'
   604  007F6F  20                 	db	32
   605  007F70  64                 	db	100	;'d'
   606  007F71  65                 	db	101	;'e'
   607  007F72  73                 	db	115	;'s'
   608  007F73  74                 	db	116	;'t'
   609  007F74  69                 	db	105	;'i'
   610  007F75  6E                 	db	110	;'n'
   611  007F76  6F                 	db	111	;'o'
   612  007F77  20                 	db	32
   613  007F78  0D                 	db	13
   614  007F79  0A                 	db	10
   615  007F7A  00                 	db	0
   616  007F7B                     STR_14:
   617  007F7B  0D                 	db	13
   618  007F7C  53                 	db	83	;'S'
   619  007F7D  65                 	db	101	;'e'
   620  007F7E  20                 	db	32
   621  007F7F  6C                 	db	108	;'l'
   622  007F80  6C                 	db	108	;'l'
   623  007F81  65                 	db	101	;'e'
   624  007F82  67                 	db	103	;'g'
   625  007F83  6F                 	db	111	;'o'
   626  007F84  20                 	db	32
   627  007F85  41                 	db	65	;'A'
   628  007F86  6C                 	db	108	;'l'
   629  007F87  20                 	db	32
   630  007F88  64                 	db	100	;'d'
   631  007F89  65                 	db	101	;'e'
   632  007F8A  73                 	db	115	;'s'
   633  007F8B  74                 	db	116	;'t'
   634  007F8C  69                 	db	105	;'i'
   635  007F8D  6E                 	db	110	;'n'
   636  007F8E  6F                 	db	111	;'o'
   637  007F8F  0D                 	db	13
   638  007F90  0A                 	db	10
   639  007F91  00                 	db	0
   640  007F92  0D                 	db	13
   641  007F93  49                 	db	73	;'I'
   642  007F94  7A                 	db	122	;'z'
   643  007F95  71                 	db	113	;'q'
   644  007F96  75                 	db	117	;'u'
   645  007F97  69                 	db	105	;'i'
   646  007F98  65                 	db	101	;'e'
   647  007F99  72                 	db	114	;'r'
   648  007F9A  64                 	db	100	;'d'
   649  007F9B  61                 	db	97	;'a'
   650  007F9C  3A                 	db	58	;':'
   651  007F9D  20                 	db	32
   652  007F9E  25                 	db	37
   653  007F9F  2E                 	db	46
   654  007FA0  32                 	db	50	;'2'
   655  007FA1  66                 	db	102	;'f'
   656  007FA2  0D                 	db	13
   657  007FA3  0A                 	db	10
   658  007FA4  00                 	db	0
   659  007FA5  0D                 	db	13
   660  007FA6  45                 	db	69	;'E'
   661  007FA7  6E                 	db	110	;'n'
   662  007FA8  66                 	db	102	;'f'
   663  007FA9  72                 	db	114	;'r'
   664  007FAA  65                 	db	101	;'e'
   665  007FAB  6E                 	db	110	;'n'
   666  007FAC  74                 	db	116	;'t'
   667  007FAD  65                 	db	101	;'e'
   668  007FAE  3A                 	db	58	;':'
   669  007FAF  20                 	db	32
   670  007FB0  25                 	db	37
   671  007FB1  2E                 	db	46
   672  007FB2  32                 	db	50	;'2'
   673  007FB3  66                 	db	102	;'f'
   674  007FB4  0D                 	db	13
   675  007FB5  0A                 	db	10
   676  007FB6  00                 	db	0
   677  007FB7  0D                 	db	13
   678  007FB8  44                 	db	68	;'D'
   679  007FB9  65                 	db	101	;'e'
   680  007FBA  72                 	db	114	;'r'
   681  007FBB  65                 	db	101	;'e'
   682  007FBC  63                 	db	99	;'c'
   683  007FBD  68                 	db	104	;'h'
   684  007FBE  61                 	db	97	;'a'
   685  007FBF  3A                 	db	58	;':'
   686  007FC0  20                 	db	32
   687  007FC1  25                 	db	37
   688  007FC2  2E                 	db	46
   689  007FC3  32                 	db	50	;'2'
   690  007FC4  66                 	db	102	;'f'
   691  007FC5  0D                 	db	13
   692  007FC6  0A                 	db	10
   693  007FC7  00                 	db	0
   694  007FC8                     STR_8:
   695  007FC8  49                 	db	73	;'I'
   696  007FC9  7A                 	db	122	;'z'
   697  007FCA  71                 	db	113	;'q'
   698  007FCB  75                 	db	117	;'u'
   699  007FCC  69                 	db	105	;'i'
   700  007FCD  65                 	db	101	;'e'
   701  007FCE  72                 	db	114	;'r'
   702  007FCF  64                 	db	100	;'d'
   703  007FD0  61                 	db	97	;'a'
   704  007FD1  0A                 	db	10
   705  007FD2  00                 	db	0
   706  007FD3                     STR_7:
   707  007FD3  45                 	db	69	;'E'
   708  007FD4  6E                 	db	110	;'n'
   709  007FD5  66                 	db	102	;'f'
   710  007FD6  72                 	db	114	;'r'
   711  007FD7  65                 	db	101	;'e'
   712  007FD8  6E                 	db	110	;'n'
   713  007FD9  74                 	db	116	;'t'
   714  007FDA  65                 	db	101	;'e'
   715  007FDB  0A                 	db	10
   716  007FDC  00                 	db	0
   717  007FDD                     STR_9:
   718  007FDD  44                 	db	68	;'D'
   719  007FDE  65                 	db	101	;'e'
   720  007FDF  72                 	db	114	;'r'
   721  007FE0  65                 	db	101	;'e'
   722  007FE1  63                 	db	99	;'c'
   723  007FE2  68                 	db	104	;'h'
   724  007FE3  61                 	db	97	;'a'
   725  007FE4  0A                 	db	10
   726  007FE5  00                 	db	0
   727  007FE6                     STR_10:
   728  007FE6  41                 	db	65	;'A'
   729  007FE7  6C                 	db	108	;'l'
   730  007FE8  74                 	db	116	;'t'
   731  007FE9  6F                 	db	111	;'o'
   732  007FEA  0A                 	db	10
   733  007FEB  00                 	db	0
   734  007FEC                     STR_20:
   735  007FEC  49                 	db	73	;'I'
   736  007FED  4E                 	db	78	;'N'
   737  007FEE  46                 	db	70	;'F'
   738  007FEF  00                 	db	0
   739  007FF0                     STR_24:
   740  007FF0  4E                 	db	78	;'N'
   741  007FF1  41                 	db	65	;'A'
   742  007FF2  4E                 	db	78	;'N'
   743  007FF3  00                 	db	0
   744  007FF4                     STR_21:
   745  007FF4  69                 	db	105	;'i'
   746  007FF5  6E                 	db	110	;'n'
   747  007FF6  66                 	db	102	;'f'
   748  007FF7  00                 	db	0
   749  007FF8                     STR_25:
   750  007FF8  6E                 	db	110	;'n'
   751  007FF9  61                 	db	97	;'a'
   752  007FFA  6E                 	db	110	;'n'
   753  007FFB  00                 	db	0
   754  007FFC                     STR_28:
   755  007FFC  6C                 	db	108	;'l'
   756  007FFD  66                 	db	102	;'f'
   757  007FFE  00                 	db	0
   758  0000                     
   759                           ; #config settings
   760  007FFF  00                 	db	0	; dummy byte at the end
   761  0000                     
   762                           	psect	cinit
   763  004EFC                     __pcinit:
   764                           	opt callstack 0
   765  004EFC                     start_initialization:
   766                           	opt callstack 0
   767  004EFC                     __initialization:
   768                           	opt callstack 0
   769                           
   770                           ; Initialize objects allocated to BANK1 (4 bytes)
   771                           ; load TBLPTR registers with __pidataBANK1
   772  004EFC  0E8C               	movlw	low __pidataBANK1
   773  004EFE  6EF6               	movwf	tblptrl,c
   774  004F00  0E57               	movlw	high __pidataBANK1
   775  004F02  6EF7               	movwf	tblptrh,c
   776  004F04  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   777  004F06  6EF8               	movwf	tblptru,c
   778  004F08  EE01  F0E9         	lfsr	0,__pdataBANK1
   779  004F0C  EE10 F004          	lfsr	1,4
   780  004F10                     copy_data0:
   781  004F10  0009               	tblrd		*+
   782  004F12  CFF5 FFEE          	movff	tablat,postinc0
   783  004F16  50E5               	movf	postdec1,w,c
   784  004F18  50E1               	movf	fsr1l,w,c
   785  004F1A  E1FA               	bnz	copy_data0
   786                           
   787                           ; Clear objects allocated to BIGRAM (1000 bytes)
   788  004F1C  EE02  F0C8         	lfsr	0,__pbssBIGRAM
   789  004F20  EE13 F0E8          	lfsr	1,1000
   790  004F24                     clear_0:
   791  004F24  6AEE               	clrf	postinc0,c
   792  004F26  50E5               	movf	postdec1,w,c
   793  004F28  50E1               	movf	fsr1l,w,c
   794  004F2A  E1FC               	bnz	clear_0
   795  004F2C  50E2               	movf	fsr1h,w,c
   796  004F2E  E1FA               	bnz	clear_0
   797                           
   798                           ; Clear objects allocated to BANK2 (200 bytes)
   799  004F30  EE02  F000         	lfsr	0,__pbssBANK2
   800  004F34  0EC8               	movlw	200
   801  004F36                     clear_1:
   802  004F36  6AEE               	clrf	postinc0,c
   803  004F38  06E8               	decf	wreg,f,c
   804  004F3A  E1FD               	bnz	clear_1
   805                           
   806                           ; Clear objects allocated to BANK1 (210 bytes)
   807  004F3C  EE01  F000         	lfsr	0,__pbssBANK1
   808  004F40  0ED2               	movlw	210
   809  004F42                     clear_2:
   810  004F42  6AEE               	clrf	postinc0,c
   811  004F44  06E8               	decf	wreg,f,c
   812  004F46  E1FD               	bnz	clear_2
   813                           
   814                           ; Clear objects allocated to BANK0 (1 bytes)
   815  004F48  0100               	movlb	0
   816  004F4A  6BFF               	clrf	__pbssBANK0& (0+255),b
   817                           
   818                           ; Clear objects allocated to COMRAM (5 bytes)
   819  004F4C  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   820  004F4E  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   821  004F50  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   822  004F52  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   823  004F54  6A55               	clrf	__pbssCOMRAM& (0+255),c
   824  004F56                     end_of_initialization:
   825                           	opt callstack 0
   826  004F56                     __end_of__initialization:
   827                           	opt callstack 0
   828  004F56  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   829  004F58  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   830  004F5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   831  004F5C  6EF8               	movwf	tblptru,c
   832  004F5E  0100               	movlb	0
   833  004F60  EF94  F025         	goto	_main	;jump to C main() function
   834                           
   835                           	psect	bssCOMRAM
   836  000055                     __pbssCOMRAM:
   837                           	opt callstack 0
   838  000055                     _flags:
   839                           	opt callstack 0
   840  000055                     	ds	2
   841  000057                     _mouse:
   842                           	opt callstack 0
   843  000057                     	ds	2
   844  000059                     comportamientoBasico@carroEspejeado:
   845                           	opt callstack 0
   846  000059                     	ds	1
   847                           
   848                           	psect	bssBANK0
   849  0000FF                     __pbssBANK0:
   850                           	opt callstack 0
   851  0000FF                     _llegoDestino:
   852                           	opt callstack 0
   853  0000FF                     	ds	1
   854                           
   855                           	psect	bssBANK1
   856  000100                     __pbssBANK1:
   857                           	opt callstack 0
   858  000100                     roundf@F525:
   859                           	opt callstack 0
   860  000100                     	ds	4
   861  000104                     floorf@F524:
   862                           	opt callstack 0
   863  000104                     	ds	4
   864  000108                     ___fpclassifyf@F463:
   865                           	opt callstack 0
   866  000108                     	ds	4
   867  00010C                     _DISTANCIA_PRIORIDAD_BAJA:
   868                           	opt callstack 0
   869  00010C                     	ds	4
   870  000110                     _DISTANCIA_PRIORIDAD_MEDIA:
   871                           	opt callstack 0
   872  000110                     	ds	4
   873  000114                     _DISTANCIA_PRIORIDAD_ALTA:
   874                           	opt callstack 0
   875  000114                     	ds	4
   876  000118                     _oldSensorEnfrente:
   877                           	opt callstack 0
   878  000118                     	ds	4
   879  00011C                     _oldSensorIzquierda:
   880                           	opt callstack 0
   881  00011C                     	ds	4
   882  000120                     _oldSensorDerecha:
   883                           	opt callstack 0
   884  000120                     	ds	4
   885  000124                     _sensorEnfrente:
   886                           	opt callstack 0
   887  000124                     	ds	4
   888  000128                     _sensorIzquierda:
   889                           	opt callstack 0
   890  000128                     	ds	4
   891  00012C                     _sensorDerecha:
   892                           	opt callstack 0
   893  00012C                     	ds	4
   894  000130                     _nout:
   895                           	opt callstack 0
   896  000130                     	ds	2
   897  000132                     _width:
   898                           	opt callstack 0
   899  000132                     	ds	2
   900  000134                     _prec:
   901                           	opt callstack 0
   902  000134                     	ds	2
   903  000136                     PID@difAnt:
   904                           	opt callstack 0
   905  000136                     	ds	2
   906  000138                     comportamientoBasico@caminoEncontrado:
   907                           	opt callstack 0
   908  000138                     	ds	1
   909  000139                     comportamientoBasico@espejearCarroY:
   910                           	opt callstack 0
   911  000139                     	ds	1
   912  00013A                     _paredIzquierda:
   913                           	opt callstack 0
   914  00013A                     	ds	1
   915  00013B                     _paredDerecha:
   916                           	opt callstack 0
   917  00013B                     	ds	1
   918  00013C                     _paredEnfrente:
   919                           	opt callstack 0
   920  00013C                     	ds	1
   921  00013D                     _posicionDestinoY:
   922                           	opt callstack 0
   923  00013D                     	ds	1
   924  00013E                     _posicionDestinoX:
   925                           	opt callstack 0
   926  00013E                     	ds	1
   927  00013F                     _posicionCarroY:
   928                           	opt callstack 0
   929  00013F                     	ds	1
   930  000140                     _posicionCarroX:
   931                           	opt callstack 0
   932  000140                     	ds	1
   933  000141                     _dbuf:
   934                           	opt callstack 0
   935  000141                     	ds	80
   936  000191                     _buffer:
   937                           	opt callstack 0
   938  000191                     	ds	50
   939  0001C3                     comportamientoBasico@caminosRecorrer:
   940                           	opt callstack 0
   941  0001C3                     	ds	3
   942  0001C6                     comportamientoBasico@numMovimientosTotales:
   943                           	opt callstack 0
   944  0001C6                     	ds	2
   945  0001C8                     comportamientoBasico@numMovimientos:
   946                           	opt callstack 0
   947  0001C8                     	ds	2
   948  0001CA                     comportamientoBasico@avanceRectoLargo:
   949                           	opt callstack 0
   950  0001CA                     	ds	1
   951  0001CB                     comportamientoBasico@cambioOrientacionCarro:
   952                           	opt callstack 0
   953  0001CB                     	ds	1
   954  0001CC                     comportamientoBasico@caminoActual:
   955                           	opt callstack 0
   956  0001CC                     	ds	1
   957  0001CD                     comportamientoBasico@contCaminosRecorridos:
   958                           	opt callstack 0
   959  0001CD                     	ds	1
   960  0001CE                     comportamientoBasico@posicionInvCruce:
   961                           	opt callstack 0
   962  0001CE                     	ds	1
   963  0001CF                     comportamientoBasico@investigandoCruce:
   964                           	opt callstack 0
   965  0001CF                     	ds	1
   966  0001D0                     comportamientoBasico@cruceDetectado:
   967                           	opt callstack 0
   968  0001D0                     	ds	1
   969  0001D1                     comportamientoBasico@mapear:
   970                           	opt callstack 0
   971  0001D1                     	ds	1
   972                           
   973                           	psect	dataBANK1
   974  0001E9                     __pdataBANK1:
   975                           	opt callstack 0
   976  0001E9                     _pausa:
   977                           	opt callstack 0
   978  0001E9                     	ds	1
   979  0001EA                     _SENSOR_PRIORIDAD_BAJA:
   980                           	opt callstack 0
   981  0001EA                     	ds	1
   982  0001EB                     _SENSOR_PRIORIDAD_MEDIA:
   983                           	opt callstack 0
   984  0001EB                     	ds	1
   985  0001EC                     _SENSOR_PRIORIDAD_ALTA:
   986                           	opt callstack 0
   987  0001EC                     	ds	1
   988                           
   989                           	psect	bssBANK2
   990  000200                     __pbssBANK2:
   991                           	opt callstack 0
   992  000200                     comportamientoBasico@movimientosRealizados:
   993                           	opt callstack 0
   994  000200                     	ds	200
   995                           
   996                           	psect	bssBIGRAM
   997  0002C8                     __pbssBIGRAM:
   998                           	opt callstack 0
   999  0002C8                     comportamientoBasico@caminoFinal:
  1000                           	opt callstack 0
  1001  0002C8                     	ds	1000
  1002                           
  1003                           	psect	cstackBANK1
  1004  0001D2                     __pcstackBANK1:
  1005                           	opt callstack 0
  1006  0001D2                     decidirDireccion@caminosRecorrer:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x0
  1010  0001D2                     	ds	2
  1011  0001D4                     decidirDireccion@investigandoCruce:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x2
  1015  0001D4                     	ds	2
  1016  0001D6                     decidirDireccion@posicionInvCruce:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x4
  1020  0001D6                     	ds	2
  1021  0001D8                     decidirDireccion@contCaminosRecorridos:
  1022                           	opt callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x6
  1025  0001D8                     	ds	2
  1026  0001DA                     decidirDireccion@caminoActual:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x8
  1030  0001DA                     	ds	2
  1031  0001DC                     decidirDireccion@cambioOrientacionCarro:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0xA
  1035  0001DC                     	ds	2
  1036  0001DE                     decidirDireccion@mapear:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 2 bytes @ 0xC
  1040  0001DE                     	ds	2
  1041  0001E0                     decidirDireccion@cruceDetectado:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 2 bytes @ 0xE
  1045  0001E0                     	ds	2
  1046  0001E2                     decidirDireccion@avanceRectoLargo:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x10
  1050  0001E2                     	ds	2
  1051  0001E4                     ??_comportamientoBasico:
  1052                           
  1053                           ; 1 bytes @ 0x12
  1054  0001E4                     	ds	4
  1055  0001E8                     main@iniciado:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x16
  1059  0001E8                     	ds	1
  1060                           
  1061                           	psect	cstackBANK0
  1062  000060                     __pcstackBANK0:
  1063                           	opt callstack 0
  1064  000060                     ___fldiv@rem:
  1065                           	opt callstack 0
  1066  000060                     _roundf$1844:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x0
  1070  000060                     	ds	4
  1071  000064                     ___fldiv@sign:
  1072                           	opt callstack 0
  1073  000064                     roundf@e:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x4
  1077  000064                     	ds	1
  1078  000065                     ___fldiv@new_exp:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x5
  1082  000065                     	ds	1
  1083  000066                     _roundf$1843:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x6
  1087  000066                     	ds	1
  1088  000067                     ___fldiv@grs:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x7
  1092  000067                     	ds	3
  1093  00006A                     roundf@u:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 4 bytes @ 0xA
  1097  00006A                     	ds	1
  1098  00006B                     ___fldiv@bexp:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 1 bytes @ 0xB
  1102  00006B                     	ds	1
  1103  00006C                     ___fldiv@aexp:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 1 bytes @ 0xC
  1107  00006C                     	ds	1
  1108  00006D                     ??_floorf:
  1109                           
  1110                           ; 1 bytes @ 0xD
  1111  00006D                     	ds	1
  1112  00006E                     roundf@y:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 4 bytes @ 0xE
  1116  00006E                     	ds	4
  1117  000072                     ?___fltol:
  1118                           	opt callstack 0
  1119  000072                     ___fltol@f1:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x12
  1123  000072                     	ds	1
  1124  000073                     floorf@m:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x13
  1128  000073                     	ds	3
  1129  000076                     ??___fltol:
  1130                           
  1131                           ; 1 bytes @ 0x16
  1132  000076                     	ds	1
  1133  000077                     floorf@e:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x17
  1137  000077                     	ds	2
  1138  000079                     floorf@u:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x19
  1142  000079                     	ds	1
  1143  00007A                     ___fltol@sign1:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x1A
  1147  00007A                     	ds	1
  1148  00007B                     ___fltol@exp1:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x1B
  1152  00007B                     	ds	1
  1153  00007C                     pwmDuty@cicloTrabajo:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x1C
  1157  00007C                     	ds	1
  1158  00007D                     ?_efgtoa:
  1159                           	opt callstack 0
  1160  00007D                     efgtoa@fp:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x1D
  1164  00007D                     	ds	1
  1165  00007E                     pwmDuty@channel:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x1E
  1169  00007E                     	ds	1
  1170  00007F                     ??_pwmDuty:
  1171  00007F                     efgtoa@f:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x1F
  1175  00007F                     	ds	4
  1176  000083                     efgtoa@c:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x23
  1180  000083                     	ds	1
  1181  000084                     ??_efgtoa:
  1182  000084                     pwmDuty@duty:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x24
  1186  000084                     	ds	4
  1187  000088                     ??_PID:
  1188  000088                     moverCarrito@carroEspejeado:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x28
  1192  000088                     	ds	1
  1193  000089                     efgtoa@ou:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x29
  1197  000089                     	ds	1
  1198  00008A                     moverCarrito@avanceRectoLargo:
  1199                           	opt callstack 0
  1200  00008A                     _PID$1842:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x2A
  1204  00008A                     	ds	2
  1205  00008C                     ??_moverCarrito:
  1206                           
  1207                           ; 1 bytes @ 0x2C
  1208  00008C                     	ds	1
  1209  00008D                     _efgtoa$939:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x2D
  1213  00008D                     	ds	1
  1214  00008E                     PID@velocidadIzquierda:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x2E
  1218  00008E                     	ds	1
  1219  00008F                     _efgtoa$940:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x2F
  1223  00008F                     	ds	1
  1224  000090                     _PID$760:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x30
  1228  000090                     	ds	1
  1229  000091                     _efgtoa$944:
  1230                           	opt callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x31
  1233  000091                     	ds	1
  1234  000092                     PID@velocidadDerecha:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x32
  1238  000092                     	ds	1
  1239  000093                     _efgtoa$948:
  1240                           	opt callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x33
  1243  000093                     	ds	1
  1244  000094                     _PID$762:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x34
  1248  000094                     	ds	1
  1249  000095                     _efgtoa$949:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x35
  1253  000095                     	ds	1
  1254  000096                     PID@dif:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x36
  1258  000096                     	ds	1
  1259  000097                     _efgtoa$950:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x37
  1263  000097                     	ds	1
  1264  000098                     PID@error:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x38
  1268  000098                     	ds	1
  1269  000099                     efgtoa@t:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x39
  1273  000099                     	ds	1
  1274  00009A                     regresarPuntoPartida@movimientos:
  1275                           	opt callstack 0
  1276  00009A                     regresarAlCruce@movimientos:
  1277                           	opt callstack 0
  1278  00009A                     recorrerCaminoEncontrado@movimientos:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x3A
  1282  00009A                     	ds	1
  1283  00009B                     efgtoa@pp:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x3B
  1287  00009B                     	ds	1
  1288  00009C                     regresarPuntoPartida@numMovimientos:
  1289                           	opt callstack 0
  1290  00009C                     regresarAlCruce@numMovimientos:
  1291                           	opt callstack 0
  1292  00009C                     recorrerCaminoEncontrado@numMovimientos:
  1293                           	opt callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x3C
  1296  00009C                     	ds	1
  1297  00009D                     efgtoa@m:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x3D
  1301  00009D                     	ds	1
  1302  00009E                     regresarPuntoPartida@i:
  1303                           	opt callstack 0
  1304  00009E                     regresarAlCruce@i:
  1305                           	opt callstack 0
  1306  00009E                     recorrerCaminoEncontrado@i:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x3E
  1310  00009E                     	ds	1
  1311  00009F                     efgtoa@ne:
  1312                           	opt callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x3F
  1315  00009F                     	ds	2
  1316  0000A1                     efgtoa@d:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x41
  1320  0000A1                     	ds	2
  1321  0000A3                     efgtoa@sign:
  1322                           	opt callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x43
  1325  0000A3                     	ds	2
  1326  0000A5                     efgtoa@p:
  1327                           	opt callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x45
  1330  0000A5                     	ds	2
  1331  0000A7                     efgtoa@nmode:
  1332                           	opt callstack 0
  1333                           
  1334                           ; 1 bytes @ 0x47
  1335  0000A7                     	ds	1
  1336  0000A8                     efgtoa@w:
  1337                           	opt callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x48
  1340  0000A8                     	ds	2
  1341  0000AA                     efgtoa@mode:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 1 bytes @ 0x4A
  1345  0000AA                     	ds	1
  1346  0000AB                     efgtoa@h:
  1347                           	opt callstack 0
  1348                           
  1349                           ; 4 bytes @ 0x4B
  1350  0000AB                     	ds	4
  1351  0000AF                     efgtoa@l:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x4F
  1355  0000AF                     	ds	4
  1356  0000B3                     efgtoa@i:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x53
  1360  0000B3                     	ds	2
  1361  0000B5                     efgtoa@g:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 4 bytes @ 0x55
  1365  0000B5                     	ds	4
  1366  0000B9                     efgtoa@e:
  1367                           	opt callstack 0
  1368                           
  1369                           ; 2 bytes @ 0x59
  1370  0000B9                     	ds	2
  1371  0000BB                     efgtoa@n:
  1372                           	opt callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x5B
  1375  0000BB                     	ds	2
  1376  0000BD                     efgtoa@u:
  1377                           	opt callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x5D
  1380  0000BD                     	ds	4
  1381  0000C1                     ?_vfpfcnvrt:
  1382                           	opt callstack 0
  1383  0000C1                     vfpfcnvrt@fp:
  1384                           	opt callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x61
  1387  0000C1                     	ds	2
  1388  0000C3                     vfpfcnvrt@fmt:
  1389                           	opt callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x63
  1392  0000C3                     	ds	2
  1393  0000C5                     vfpfcnvrt@ap:
  1394                           	opt callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x65
  1397  0000C5                     	ds	2
  1398  0000C7                     ??_vfpfcnvrt:
  1399                           
  1400                           ; 1 bytes @ 0x67
  1401  0000C7                     	ds	4
  1402  0000CB                     vfpfcnvrt@ll:
  1403                           	opt callstack 0
  1404                           
  1405                           ; 8 bytes @ 0x6B
  1406  0000CB                     	ds	8
  1407  0000D3                     _vfpfcnvrt$964:
  1408                           	opt callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x73
  1411  0000D3                     	ds	2
  1412  0000D5                     _vfpfcnvrt$970:
  1413                           	opt callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x75
  1416  0000D5                     	ds	2
  1417  0000D7                     vfpfcnvrt@f:
  1418                           	opt callstack 0
  1419                           
  1420                           ; 4 bytes @ 0x77
  1421  0000D7                     	ds	4
  1422  0000DB                     vfpfcnvrt@ct:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 3 bytes @ 0x7B
  1426  0000DB                     	ds	3
  1427  0000DE                     vfpfcnvrt@c:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x7E
  1431  0000DE                     	ds	1
  1432  0000DF                     ?_vfprintf:
  1433                           	opt callstack 0
  1434  0000DF                     vfprintf@fp:
  1435                           	opt callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x7F
  1438  0000DF                     	ds	2
  1439  0000E1                     vfprintf@fmt:
  1440                           	opt callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x81
  1443  0000E1                     	ds	2
  1444  0000E3                     vfprintf@ap:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x83
  1448  0000E3                     	ds	2
  1449  0000E5                     vfprintf@cfmt:
  1450                           	opt callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x85
  1453  0000E5                     	ds	2
  1454  0000E7                     ?_sprintf:
  1455                           	opt callstack 0
  1456  0000E7                     sprintf@s:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x87
  1460  0000E7                     	ds	2
  1461  0000E9                     sprintf@fmt:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x89
  1465  0000E9                     	ds	10
  1466  0000F3                     sprintf@ap:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x93
  1470  0000F3                     	ds	2
  1471  0000F5                     sprintf@f:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 6 bytes @ 0x95
  1475  0000F5                     	ds	6
  1476  0000FB                     ??_decidirDireccion:
  1477  0000FB                     visualizarPasosRealizados@numMovimientos:
  1478                           	opt callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x9B
  1481  0000FB                     	ds	2
  1482  0000FD                     ??_visualizarPasosRealizados:
  1483                           
  1484                           ; 1 bytes @ 0x9D
  1485  0000FD                     	ds	1
  1486  0000FE                     comportamientoBasico@direccionElegida:
  1487                           	opt callstack 0
  1488                           
  1489                           ; 1 bytes @ 0x9E
  1490  0000FE                     	ds	1
  1491                           
  1492                           	psect	cstackCOMRAM
  1493  000001                     __pcstackCOMRAM:
  1494                           	opt callstack 0
  1495  000001                     ??_antiRebote:
  1496  000001                     
  1497                           ; 1 bytes @ 0x0
  1498  000001                     	ds	2
  1499  000003                     antiRebote@pin:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 1 bytes @ 0x2
  1503  000003                     	ds	1
  1504  000004                     ??_boton:
  1505                           
  1506                           ; 1 bytes @ 0x3
  1507  000004                     	ds	2
  1508  000006                     ??_forzarParoAuto:
  1509  000006                     ??_configPwm:
  1510  000006                     ??_forzarReversa:
  1511  000006                     ??_forzarAvanceRecto:
  1512  000006                     ??_forzarGiroIzquierda:
  1513  000006                     ??_forzarGiroDerecha:
  1514  000006                     ?_strlen:
  1515                           	opt callstack 0
  1516  000006                     ?___fpclassifyf:
  1517                           	opt callstack 0
  1518  000006                     ?_isupper:
  1519                           	opt callstack 0
  1520  000006                     ?_isdigit:
  1521                           	opt callstack 0
  1522  000006                     ?_strncmp:
  1523                           	opt callstack 0
  1524  000006                     ?_isspace:
  1525                           	opt callstack 0
  1526  000006                     ?_dameLecturaAdc:
  1527                           	opt callstack 0
  1528  000006                     ?___wmul:
  1529                           	opt callstack 0
  1530  000006                     ?___awdiv:
  1531                           	opt callstack 0
  1532  000006                     ?___awmod:
  1533                           	opt callstack 0
  1534  000006                     ?___lwdiv:
  1535                           	opt callstack 0
  1536  000006                     ?___lmul:
  1537                           	opt callstack 0
  1538  000006                     ?___flneg:
  1539                           	opt callstack 0
  1540  000006                     ?___aodiv:
  1541                           	opt callstack 0
  1542  000006                     ?___aomod:
  1543                           	opt callstack 0
  1544  000006                     UART_write@dato:
  1545                           	opt callstack 0
  1546  000006                     limpiarMovimientos@movimientos:
  1547                           	opt callstack 0
  1548  000006                     combinarArreglos@movimientos:
  1549                           	opt callstack 0
  1550  000006                     ___wmul@multiplier:
  1551                           	opt callstack 0
  1552  000006                     ___awdiv@dividend:
  1553                           	opt callstack 0
  1554  000006                     ___awmod@dividend:
  1555                           	opt callstack 0
  1556  000006                     ___lwdiv@dividend:
  1557                           	opt callstack 0
  1558  000006                     isdigit@c:
  1559                           	opt callstack 0
  1560  000006                     isspace@c:
  1561                           	opt callstack 0
  1562  000006                     isupper@c:
  1563                           	opt callstack 0
  1564  000006                     fputc@c:
  1565                           	opt callstack 0
  1566  000006                     strcpy@dest:
  1567                           	opt callstack 0
  1568  000006                     strlen@s:
  1569                           	opt callstack 0
  1570  000006                     strncmp@_l:
  1571                           	opt callstack 0
  1572  000006                     ___lmul@multiplier:
  1573                           	opt callstack 0
  1574  000006                     ___fleq@ff1:
  1575                           	opt callstack 0
  1576  000006                     ___flneg@f1:
  1577                           	opt callstack 0
  1578  000006                     ___fpclassifyf@x:
  1579                           	opt callstack 0
  1580  000006                     ___aodiv@dividend:
  1581                           	opt callstack 0
  1582  000006                     ___aomod@dividend:
  1583                           	opt callstack 0
  1584                           
  1585                           ; 8 bytes @ 0x5
  1586  000006                     	ds	1
  1587  000007                     UART_printf@cadena:
  1588                           	opt callstack 0
  1589                           
  1590                           ; 2 bytes @ 0x6
  1591  000007                     	ds	1
  1592  000008                     ??_mover:
  1593  000008                     ??_isupper:
  1594  000008                     ??_isdigit:
  1595  000008                     ??_isspace:
  1596  000008                     ??_dameLecturaAdc:
  1597  000008                     configPwm@channel:
  1598                           	opt callstack 0
  1599  000008                     limpiarMovimientos@numMovimientos:
  1600                           	opt callstack 0
  1601  000008                     combinarArreglos@caminoFinal:
  1602                           	opt callstack 0
  1603  000008                     ___wmul@multiplicand:
  1604                           	opt callstack 0
  1605  000008                     ___awdiv@divisor:
  1606                           	opt callstack 0
  1607  000008                     ___awmod@divisor:
  1608                           	opt callstack 0
  1609  000008                     ___lwdiv@divisor:
  1610                           	opt callstack 0
  1611  000008                     fputc@fp:
  1612                           	opt callstack 0
  1613  000008                     strcpy@src:
  1614                           	opt callstack 0
  1615  000008                     strlen@a:
  1616                           	opt callstack 0
  1617  000008                     strncmp@_r:
  1618                           	opt callstack 0
  1619                           
  1620                           ; 2 bytes @ 0x7
  1621  000008                     	ds	1
  1622  000009                     ??_mostrarDireccionElegida:
  1623                           
  1624                           ; 1 bytes @ 0x8
  1625  000009                     	ds	1
  1626  00000A                     ??_fputc:
  1627  00000A                     ??___fpclassifyf:
  1628  00000A                     ??_strcpy:
  1629  00000A                     dameLecturaAdc@canalLeer:
  1630                           	opt callstack 0
  1631  00000A                     ___awdiv@counter:
  1632                           	opt callstack 0
  1633  00000A                     ___awmod@counter:
  1634                           	opt callstack 0
  1635  00000A                     ___lwdiv@counter:
  1636                           	opt callstack 0
  1637  00000A                     combinarArreglos@numMovimientos:
  1638                           	opt callstack 0
  1639  00000A                     ___wmul@product:
  1640                           	opt callstack 0
  1641  00000A                     strncmp@n:
  1642                           	opt callstack 0
  1643  00000A                     ___lmul@multiplicand:
  1644                           	opt callstack 0
  1645  00000A                     ___fleq@ff2:
  1646                           	opt callstack 0
  1647                           
  1648                           ; 4 bytes @ 0x9
  1649  00000A                     	ds	1
  1650  00000B                     seLlegoAlDestino@llegoDestino:
  1651                           	opt callstack 0
  1652  00000B                     mostrarDireccionElegida@direccionElegida:
  1653                           	opt callstack 0
  1654  00000B                     ___awdiv@sign:
  1655                           	opt callstack 0
  1656  00000B                     ___awmod@sign:
  1657                           	opt callstack 0
  1658  00000B                     ___lwdiv@quotient:
  1659                           	opt callstack 0
  1660                           
  1661                           ; 2 bytes @ 0xA
  1662  00000B                     	ds	1
  1663  00000C                     ??_strncmp:
  1664  00000C                     ?_tolower:
  1665                           	opt callstack 0
  1666  00000C                     _isspace$1474:
  1667                           	opt callstack 0
  1668  00000C                     limpiarMovimientos@i:
  1669                           	opt callstack 0
  1670  00000C                     combinarArreglos@numMovimientosFinal:
  1671                           	opt callstack 0
  1672  00000C                     ___awdiv@quotient:
  1673                           	opt callstack 0
  1674  00000C                     strcpy@s:
  1675                           	opt callstack 0
  1676  00000C                     tolower@c:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 2 bytes @ 0xB
  1680  00000C                     	ds	1
  1681  00000D                     ?_atoi:
  1682                           	opt callstack 0
  1683  00000D                     ?___xxtofl:
  1684                           	opt callstack 0
  1685  00000D                     atoi@s:
  1686                           	opt callstack 0
  1687  00000D                     strncmp@l:
  1688                           	opt callstack 0
  1689  00000D                     ___xxtofl@val:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 4 bytes @ 0xC
  1693  00000D                     	ds	1
  1694  00000E                     ??_combinarArreglos:
  1695  00000E                     ??_tolower:
  1696  00000E                     ??___fleq:
  1697  00000E                     ___fpclassifyf@e:
  1698                           	opt callstack 0
  1699  00000E                     strcpy@d:
  1700                           	opt callstack 0
  1701  00000E                     ___lmul@product:
  1702                           	opt callstack 0
  1703  00000E                     ___aodiv@divisor:
  1704                           	opt callstack 0
  1705  00000E                     ___aomod@divisor:
  1706                           	opt callstack 0
  1707                           
  1708                           ; 8 bytes @ 0xD
  1709  00000E                     	ds	1
  1710  00000F                     ??_atoi:
  1711  00000F                     fputs@s:
  1712                           	opt callstack 0
  1713  00000F                     strncmp@r:
  1714                           	opt callstack 0
  1715                           
  1716                           ; 2 bytes @ 0xE
  1717  00000F                     	ds	1
  1718  000010                     combinarArreglos@i:
  1719                           	opt callstack 0
  1720  000010                     ___fpclassifyf@u:
  1721                           	opt callstack 0
  1722                           
  1723                           ; 4 bytes @ 0xF
  1724  000010                     	ds	1
  1725  000011                     ??___xxtofl:
  1726  000011                     fputs@fp:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 2 bytes @ 0x10
  1730  000011                     	ds	1
  1731  000012                     ?___aldiv:
  1732                           	opt callstack 0
  1733  000012                     caminoCorrecto@movimientos:
  1734                           	opt callstack 0
  1735  000012                     _tolower$1573:
  1736                           	opt callstack 0
  1737  000012                     ___aldiv@dividend:
  1738                           	opt callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x11
  1741  000012                     	ds	1
  1742  000013                     fputs@c:
  1743                           	opt callstack 0
  1744  000013                     atoi@neg:
  1745                           	opt callstack 0
  1746                           
  1747                           ; 2 bytes @ 0x12
  1748  000013                     	ds	1
  1749  000014                     caminoCorrecto@caminoFinal:
  1750                           	opt callstack 0
  1751  000014                     fputs@i:
  1752                           	opt callstack 0
  1753                           
  1754                           ; 2 bytes @ 0x13
  1755  000014                     	ds	1
  1756  000015                     ___xxtofl@sign:
  1757                           	opt callstack 0
  1758  000015                     _atoi$1443:
  1759                           	opt callstack 0
  1760                           
  1761                           ; 2 bytes @ 0x14
  1762  000015                     	ds	1
  1763  000016                     ?_pad:
  1764                           	opt callstack 0
  1765  000016                     ___aodiv@counter:
  1766                           	opt callstack 0
  1767  000016                     ___aomod@counter:
  1768                           	opt callstack 0
  1769  000016                     ___xxtofl@exp:
  1770                           	opt callstack 0
  1771  000016                     caminoCorrecto@numMovimientos:
  1772                           	opt callstack 0
  1773  000016                     pad@fp:
  1774                           	opt callstack 0
  1775  000016                     ___aldiv@divisor:
  1776                           	opt callstack 0
  1777                           
  1778                           ; 4 bytes @ 0x15
  1779  000016                     	ds	1
  1780  000017                     ___aodiv@sign:
  1781                           	opt callstack 0
  1782  000017                     ___aomod@sign:
  1783                           	opt callstack 0
  1784  000017                     _atoi$1445:
  1785                           	opt callstack 0
  1786  000017                     ___xxtofl@arg:
  1787                           	opt callstack 0
  1788                           
  1789                           ; 4 bytes @ 0x16
  1790  000017                     	ds	1
  1791  000018                     ?_abs:
  1792                           	opt callstack 0
  1793  000018                     caminoCorrecto@numMovimientosFinal:
  1794                           	opt callstack 0
  1795  000018                     pad@buf:
  1796                           	opt callstack 0
  1797  000018                     abs@a:
  1798                           	opt callstack 0
  1799  000018                     ___aodiv@quotient:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 8 bytes @ 0x17
  1803  000018                     	ds	1
  1804  000019                     _atoi$1444:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 1 bytes @ 0x18
  1808  000019                     	ds	1
  1809  00001A                     ??_abs:
  1810  00001A                     caminoCorrecto@caminoActual:
  1811                           	opt callstack 0
  1812  00001A                     ___aldiv@counter:
  1813                           	opt callstack 0
  1814  00001A                     pad@p:
  1815                           	opt callstack 0
  1816  00001A                     atoi@n:
  1817                           	opt callstack 0
  1818                           
  1819                           ; 2 bytes @ 0x19
  1820  00001A                     	ds	1
  1821  00001B                     ?___flmul:
  1822                           	opt callstack 0
  1823  00001B                     ?_dameDistancia:
  1824                           	opt callstack 0
  1825  00001B                     ___aldiv@sign:
  1826                           	opt callstack 0
  1827  00001B                     ___flmul@b:
  1828                           	opt callstack 0
  1829                           
  1830                           ; 4 bytes @ 0x1A
  1831  00001B                     	ds	1
  1832  00001C                     ??_pad:
  1833  00001C                     ___aldiv@quotient:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 4 bytes @ 0x1B
  1837  00001C                     	ds	1
  1838  00001D                     pad@i:
  1839                           	opt callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x1C
  1842  00001D                     	ds	2
  1843  00001F                     ??_dameDistancia:
  1844  00001F                     pad@w:
  1845                           	opt callstack 0
  1846  00001F                     ___flmul@a:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 4 bytes @ 0x1E
  1850  00001F                     	ds	1
  1851  000020                     ?_map:
  1852                           	opt callstack 0
  1853  000020                     map@x:
  1854                           	opt callstack 0
  1855  000020                     UART_init@BAUD:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 4 bytes @ 0x1F
  1859  000020                     	ds	1
  1860  000021                     ?_ctoa:
  1861                           	opt callstack 0
  1862  000021                     ?_dtoa:
  1863                           	opt callstack 0
  1864  000021                     dameDistancia@numeroSensor:
  1865                           	opt callstack 0
  1866  000021                     ctoa@fp:
  1867                           	opt callstack 0
  1868  000021                     dtoa@fp:
  1869                           	opt callstack 0
  1870                           
  1871                           ; 2 bytes @ 0x20
  1872  000021                     	ds	1
  1873  000022                     dameDistancia@distancia:
  1874                           	opt callstack 0
  1875                           
  1876                           ; 4 bytes @ 0x21
  1877  000022                     	ds	1
  1878  000023                     ??___flmul:
  1879  000023                     ctoa@c:
  1880                           	opt callstack 0
  1881  000023                     dtoa@d:
  1882                           	opt callstack 0
  1883                           
  1884                           ; 8 bytes @ 0x22
  1885  000023                     	ds	1
  1886  000024                     ctoa@w:
  1887                           	opt callstack 0
  1888  000024                     map@in_min:
  1889                           	opt callstack 0
  1890                           
  1891                           ; 4 bytes @ 0x23
  1892  000024                     	ds	2
  1893  000026                     dameDistancia@conteo:
  1894                           	opt callstack 0
  1895                           
  1896                           ; 2 bytes @ 0x25
  1897  000026                     	ds	1
  1898  000027                     ___flmul@sign:
  1899                           	opt callstack 0
  1900                           
  1901                           ; 1 bytes @ 0x26
  1902  000027                     	ds	1
  1903  000028                     ___flmul@aexp:
  1904                           	opt callstack 0
  1905  000028                     map@in_max:
  1906                           	opt callstack 0
  1907  000028                     _UART_init$1841:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 4 bytes @ 0x27
  1911  000028                     	ds	1
  1912  000029                     ___flmul@grs:
  1913                           	opt callstack 0
  1914                           
  1915                           ; 4 bytes @ 0x28
  1916  000029                     	ds	2
  1917  00002B                     ??_dtoa:
  1918                           
  1919                           ; 1 bytes @ 0x2A
  1920  00002B                     	ds	1
  1921  00002C                     map@out_min:
  1922                           	opt callstack 0
  1923                           
  1924                           ; 4 bytes @ 0x2B
  1925  00002C                     	ds	1
  1926  00002D                     ___flmul@bexp:
  1927                           	opt callstack 0
  1928                           
  1929                           ; 1 bytes @ 0x2C
  1930  00002D                     	ds	1
  1931  00002E                     ___flmul@prod:
  1932                           	opt callstack 0
  1933                           
  1934                           ; 4 bytes @ 0x2D
  1935  00002E                     	ds	2
  1936  000030                     map@out_max:
  1937                           	opt callstack 0
  1938                           
  1939                           ; 4 bytes @ 0x2F
  1940  000030                     	ds	2
  1941  000032                     ___flmul@temp:
  1942                           	opt callstack 0
  1943                           
  1944                           ; 2 bytes @ 0x31
  1945  000032                     	ds	1
  1946  000033                     _dtoa$916:
  1947                           	opt callstack 0
  1948                           
  1949                           ; 2 bytes @ 0x32
  1950  000033                     	ds	1
  1951  000034                     ?___fladd:
  1952                           	opt callstack 0
  1953  000034                     ___flge@ff1:
  1954                           	opt callstack 0
  1955  000034                     ___fladd@b:
  1956                           	opt callstack 0
  1957                           
  1958                           ; 4 bytes @ 0x33
  1959  000034                     	ds	1
  1960  000035                     dtoa@p:
  1961                           	opt callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x34
  1964  000035                     	ds	2
  1965  000037                     dtoa@w:
  1966                           	opt callstack 0
  1967                           
  1968                           ; 2 bytes @ 0x36
  1969  000037                     	ds	1
  1970  000038                     ___flge@ff2:
  1971                           	opt callstack 0
  1972  000038                     ___fladd@a:
  1973                           	opt callstack 0
  1974                           
  1975                           ; 4 bytes @ 0x37
  1976  000038                     	ds	1
  1977  000039                     dtoa@s:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x38
  1981  000039                     	ds	2
  1982  00003B                     dtoa@n:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 8 bytes @ 0x3A
  1986  00003B                     	ds	1
  1987  00003C                     ??___fladd:
  1988  00003C                     ??___flge:
  1989                           
  1990                           ; 1 bytes @ 0x3B
  1991  00003C                     	ds	4
  1992  000040                     ___fladd@signs:
  1993                           	opt callstack 0
  1994  000040                     hayCruce@caminosRecorrer:
  1995                           	opt callstack 0
  1996                           
  1997                           ; 2 bytes @ 0x3F
  1998  000040                     	ds	1
  1999  000041                     ___fladd@aexp:
  2000                           	opt callstack 0
  2001                           
  2002                           ; 1 bytes @ 0x40
  2003  000041                     	ds	1
  2004  000042                     hayCruce@investigandoCruce:
  2005                           	opt callstack 0
  2006  000042                     ___fladd@bexp:
  2007                           	opt callstack 0
  2008                           
  2009                           ; 1 bytes @ 0x41
  2010  000042                     	ds	1
  2011  000043                     hayCruce@contCaminos:
  2012                           	opt callstack 0
  2013  000043                     ___fladd@grs:
  2014                           	opt callstack 0
  2015  000043                     dtoa@i:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 2 bytes @ 0x42
  2019  000043                     	ds	1
  2020  000044                     ?___fldiv:
  2021                           	opt callstack 0
  2022  000044                     ?___flsub:
  2023                           	opt callstack 0
  2024  000044                     ___flsub@b:
  2025                           	opt callstack 0
  2026  000044                     ___fldiv@b:
  2027                           	opt callstack 0
  2028                           
  2029                           ; 4 bytes @ 0x43
  2030  000044                     	ds	4
  2031  000048                     ___flsub@a:
  2032                           	opt callstack 0
  2033  000048                     ___fldiv@a:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 4 bytes @ 0x47
  2037  000048                     	ds	4
  2038  00004C                     ??___fldiv:
  2039  00004C                     ?_roundf:
  2040                           	opt callstack 0
  2041  00004C                     roundf@x:
  2042                           	opt callstack 0
  2043                           
  2044                           ; 4 bytes @ 0x4B
  2045  00004C                     	ds	4
  2046  000050                     ??_roundf:
  2047  000050                     ?_floorf:
  2048                           	opt callstack 0
  2049  000050                     floorf@x:
  2050                           	opt callstack 0
  2051                           
  2052                           ; 4 bytes @ 0x4F
  2053  000050                     	ds	4
  2054  000054                     moverCarrito@espejearCarroY:
  2055                           	opt callstack 0
  2056  000054                     decidirDireccion@direccionElegida:
  2057                           	opt callstack 0
  2058                           
  2059                           ; 1 bytes @ 0x53
  2060  000054                     	ds	1
  2061  000055                     
  2062                           ; 1 bytes @ 0x54
  2063 ;;
  2064 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2065 ;;
  2066 ;; *************** function _main *****************
  2067 ;; Defined at:
  2068 ;;		line 1360 in file "main.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  numMovimient    2    0        int 
  2073 ;;  iniciado        1   22[BANK1 ] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2083 ;;      Params:         0       0       0       0       0       0       0       0       0
  2084 ;;      Locals:         0       0       3       0       0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2086 ;;      Totals:         0       0       3       0       0       0       0       0       0
  2087 ;;Total ram usage:        3 bytes
  2088 ;; Hardware stack levels required when called:   12
  2089 ;; This function calls:
  2090 ;;		_UART_init
  2091 ;;		_comportamientoBasico
  2092 ;;		_configPwm
  2093 ;;		_configurarAdc
  2094 ;;		_forzarParoAuto
  2095 ;;		_inicializarComportamientoBasico
  2096 ;;		_visualizarPasosRealizados
  2097 ;; This function is called by:
  2098 ;;		Startup code after reset
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text0
  2103  004B28                     __ptext0:
  2104                           	opt callstack 0
  2105  004B28                     _main:
  2106                           	opt callstack 19
  2107  004B28                     
  2108                           ;main.c: 1362:     T_BOOL iniciado = 0;
  2109  004B28  0E00               	movlw	0
  2110  004B2A  0101               	movlb	1	; () banked
  2111  004B2C  6FE8               	movwf	main@iniciado& (0+255),b
  2112  004B2E                     
  2113                           ; BSR set to: 1
  2114                           ;main.c: 1366:     INTCONbits.GIE = 1;
  2115  004B2E  8EF2               	bsf	242,7,c	;volatile
  2116  004B30                     
  2117                           ; BSR set to: 1
  2118                           ;main.c: 1367:     INTCONbits.INT0IE = 1;
  2119  004B30  88F2               	bsf	242,4,c	;volatile
  2120  004B32                     
  2121                           ; BSR set to: 1
  2122                           ;main.c: 1368:     INTCON2bits.INTEDG0 = 1;
  2123  004B32  8CF1               	bsf	241,6,c	;volatile
  2124  004B34                     
  2125                           ; BSR set to: 1
  2126                           ;main.c: 1370:     TRISD3 = 0;
  2127  004B34  9695               	bcf	3989,3,c	;volatile
  2128  004B36                     
  2129                           ; BSR set to: 1
  2130                           ;main.c: 1371:     TRISB1 = 1;
  2131  004B36  8293               	bsf	3987,1,c	;volatile
  2132  004B38                     
  2133                           ; BSR set to: 1
  2134                           ;main.c: 1372:     TRISB2 = 1;
  2135  004B38  8493               	bsf	3987,2,c	;volatile
  2136  004B3A                     
  2137                           ; BSR set to: 1
  2138                           ;main.c: 1373:     TRISB3 = 1;
  2139  004B3A  8693               	bsf	3987,3,c	;volatile
  2140  004B3C                     
  2141                           ; BSR set to: 1
  2142                           ;main.c: 1375:     TRISB4 = 0;
  2143  004B3C  9893               	bcf	3987,4,c	;volatile
  2144  004B3E                     
  2145                           ; BSR set to: 1
  2146                           ;main.c: 1376:     TRISB5 = 0;
  2147  004B3E  9A93               	bcf	3987,5,c	;volatile
  2148  004B40                     
  2149                           ; BSR set to: 1
  2150                           ;main.c: 1377:     TRISB6 = 0;
  2151  004B40  9C93               	bcf	3987,6,c	;volatile
  2152  004B42                     
  2153                           ; BSR set to: 1
  2154                           ;main.c: 1378:     TRISB7 = 0;
  2155  004B42  9E93               	bcf	3987,7,c	;volatile
  2156  004B44                     
  2157                           ; BSR set to: 1
  2158                           ;main.c: 1380:     TRISDbits.RD2 = 0;
  2159  004B44  9495               	bcf	149,2,c	;volatile
  2160  004B46                     
  2161                           ; BSR set to: 1
  2162                           ;main.c: 1381:     TRISB0 = 1;
  2163  004B46  8093               	bsf	3987,0,c	;volatile
  2164  004B48                     
  2165                           ; BSR set to: 1
  2166                           ;main.c: 1383:     LATD3 = 0;
  2167  004B48  968C               	bcf	3980,3,c	;volatile
  2168  004B4A                     
  2169                           ; BSR set to: 1
  2170                           ;main.c: 1384:     LATB4 = 0;
  2171  004B4A  988A               	bcf	3978,4,c	;volatile
  2172  004B4C                     
  2173                           ; BSR set to: 1
  2174                           ;main.c: 1385:     LATB5 = 0;
  2175  004B4C  9A8A               	bcf	3978,5,c	;volatile
  2176  004B4E                     
  2177                           ; BSR set to: 1
  2178                           ;main.c: 1386:     LATB6 = 0;
  2179  004B4E  9C8A               	bcf	3978,6,c	;volatile
  2180  004B50                     
  2181                           ; BSR set to: 1
  2182                           ;main.c: 1387:     LATB7 = 0;
  2183  004B50  9E8A               	bcf	3978,7,c	;volatile
  2184  004B52                     
  2185                           ; BSR set to: 1
  2186                           ;main.c: 1388:     LATD2 = 0;
  2187  004B52  948C               	bcf	3980,2,c	;volatile
  2188                           
  2189                           ;main.c: 1391:     T1CON = 0b00000000;
  2190  004B54  0E00               	movlw	0
  2191  004B56  6ECD               	movwf	205,c	;volatile
  2192  004B58                     
  2193                           ; BSR set to: 1
  2194                           ;main.c: 1393:     configPwm(1);
  2195  004B58  0E01               	movlw	1
  2196  004B5A  EC45  F029         	call	_configPwm
  2197  004B5E                     
  2198                           ;main.c: 1394:     configPwm(2);
  2199  004B5E  0E02               	movlw	2
  2200  004B60  EC45  F029         	call	_configPwm
  2201  004B64                     
  2202                           ;main.c: 1395:     configurarAdc();
  2203  004B64  ECC1  F02B         	call	_configurarAdc	;wreg free
  2204  004B68                     
  2205                           ;main.c: 1397:     UART_init(9600);
  2206  004B68  0E80               	movlw	128
  2207  004B6A  6E20               	movwf	UART_init@BAUD^0,c
  2208  004B6C  0E25               	movlw	37
  2209  004B6E  6E21               	movwf	(UART_init@BAUD+1)^0,c
  2210  004B70  0E00               	movlw	0
  2211  004B72  6E22               	movwf	(UART_init@BAUD+2)^0,c
  2212  004B74  0E00               	movlw	0
  2213  004B76  6E23               	movwf	(UART_init@BAUD+3)^0,c
  2214  004B78  ECDC  F026         	call	_UART_init	;wreg free
  2215  004B7C                     l10827:
  2216                           
  2217                           ;main.c: 1402:         if (!pausa) {
  2218  004B7C  0101               	movlb	1	; () banked
  2219  004B7E  51E9               	movf	_pausa& (0+255),w,b
  2220  004B80  A4D8               	btfss	status,2,c
  2221  004B82  EFC5  F025         	goto	u11961
  2222  004B86  EFC7  F025         	goto	u11960
  2223  004B8A                     u11961:
  2224  004B8A  EFD9  F025         	goto	l10843
  2225  004B8E                     u11960:
  2226  004B8E                     
  2227                           ; BSR set to: 1
  2228                           ;main.c: 1404:             if (!iniciado) {
  2229  004B8E  51E8               	movf	main@iniciado& (0+255),w,b
  2230  004B90  A4D8               	btfss	status,2,c
  2231  004B92  EFCD  F025         	goto	u11971
  2232  004B96  EFCF  F025         	goto	u11970
  2233  004B9A                     u11971:
  2234  004B9A  EFD3  F025         	goto	l10839
  2235  004B9E                     u11970:
  2236  004B9E                     
  2237                           ; BSR set to: 1
  2238                           ;main.c: 1405:                 iniciado = 1;
  2239  004B9E  0E01               	movlw	1
  2240  004BA0  6FE8               	movwf	main@iniciado& (0+255),b
  2241  004BA2                     
  2242                           ; BSR set to: 1
  2243                           ;main.c: 1406:                 inicializarComportamientoBasico();
  2244  004BA2  EC95  F029         	call	_inicializarComportamientoBasico	;wreg free
  2245  004BA6                     l10839:
  2246                           
  2247                           ;main.c: 1417:             comportamientoBasico();
  2248  004BA6  ECF5  F00F         	call	_comportamientoBasico	;wreg free
  2249  004BAA                     
  2250                           ;main.c: 1418:             forzarParoAuto();
  2251  004BAA  ECA1  F02B         	call	_forzarParoAuto	;wreg free
  2252                           
  2253                           ;main.c: 1420:         } else {
  2254  004BAE  EFBE  F025         	goto	l10827
  2255  004BB2                     l10843:
  2256                           
  2257                           ; BSR set to: 1
  2258                           ;main.c: 1422:             iniciado = 0;
  2259  004BB2  0E00               	movlw	0
  2260  004BB4  6FE8               	movwf	main@iniciado& (0+255),b
  2261  004BB6  EFBE  F025         	goto	l10827
  2262  004BBA  EF07  F000         	goto	start
  2263  004BBE                     __end_of_main:
  2264                           	opt callstack 0
  2265                           
  2266 ;; *************** function _visualizarPasosRealizados *****************
  2267 ;; Defined at:
  2268 ;;		line 222 in file "main.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  numMovimient    2  155[BANK0 ] unsigned int 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2282 ;;      Params:         0       2       0       0       0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2284 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2285 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2286 ;;Total ram usage:        4 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:   10
  2289 ;; This function calls:
  2290 ;;		_UART_printf
  2291 ;;		_sprintf
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text1
  2298  004892                     __ptext1:
  2299                           	opt callstack 0
  2300  004892                     _visualizarPasosRealizados:
  2301                           	opt callstack 20
  2302  004892                     
  2303                           ;main.c: 224:     switch (mouse.curr_state) {
  2304  004892  EF6B  F024         	goto	l10463
  2305  004896                     l10453:
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;main.c: 226:             UART_printf("Enfrente\n");
  2309  004896  0ED3               	movlw	low STR_7
  2310  004898  6E07               	movwf	UART_printf@cadena^0,c
  2311  00489A  0E7F               	movlw	high STR_7
  2312  00489C  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2313  00489E  EC13  F028         	call	_UART_printf	;wreg free
  2314                           
  2315                           ;main.c: 227:             break;
  2316  0048A2  EF89  F024         	goto	l10465
  2317  0048A6                     l10455:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;main.c: 230:             UART_printf("Izquierda\n");
  2321  0048A6  0EC8               	movlw	low STR_8
  2322  0048A8  6E07               	movwf	UART_printf@cadena^0,c
  2323  0048AA  0E7F               	movlw	high STR_8
  2324  0048AC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2325  0048AE  EC13  F028         	call	_UART_printf	;wreg free
  2326                           
  2327                           ;main.c: 231:             break;
  2328  0048B2  EF89  F024         	goto	l10465
  2329  0048B6                     l10457:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 234:             UART_printf("Derecha\n");
  2333  0048B6  0EDD               	movlw	low STR_9
  2334  0048B8  6E07               	movwf	UART_printf@cadena^0,c
  2335  0048BA  0E7F               	movlw	high STR_9
  2336  0048BC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2337  0048BE  EC13  F028         	call	_UART_printf	;wreg free
  2338                           
  2339                           ;main.c: 235:             break;
  2340  0048C2  EF89  F024         	goto	l10465
  2341  0048C6                     l10459:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;main.c: 238:             UART_printf("Alto\n");
  2345  0048C6  0EE6               	movlw	low STR_10
  2346  0048C8  6E07               	movwf	UART_printf@cadena^0,c
  2347  0048CA  0E7F               	movlw	high STR_10
  2348  0048CC  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2349  0048CE  EC13  F028         	call	_UART_printf	;wreg free
  2350                           
  2351                           ;main.c: 239:             break;
  2352  0048D2  EF89  F024         	goto	l10465
  2353  0048D6                     l10463:
  2354  0048D6  5057               	movf	_mouse^0,w,c
  2355  0048D8  0100               	movlb	0	; () banked
  2356  0048DA  6FFD               	movwf	??_visualizarPasosRealizados& (0+255),b
  2357  0048DC  6BFE               	clrf	(??_visualizarPasosRealizados+1)& (0+255),b
  2358                           
  2359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2360                           ; Switch size 1, requested type "simple"
  2361                           ; Number of cases is 1, Range of values is 0 to 0
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte            4     3 (average)
  2365                           ;	Chosen strategy is simple_byte
  2366  0048DE  51FE               	movf	(??_visualizarPasosRealizados+1)& (0+255),w,b
  2367  0048E0  0A00               	xorlw	0	; case 0
  2368  0048E2  B4D8               	btfsc	status,2,c
  2369  0048E4  EF76  F024         	goto	l11155
  2370  0048E8  EF89  F024         	goto	l10465
  2371  0048EC                     l11155:
  2372                           
  2373                           ; BSR set to: 0
  2374                           ; Switch size 1, requested type "simple"
  2375                           ; Number of cases is 4, Range of values is 1 to 4
  2376                           ; switch strategies available:
  2377                           ; Name         Instructions Cycles
  2378                           ; simple_byte           13     7 (average)
  2379                           ;	Chosen strategy is simple_byte
  2380  0048EC  51FD               	movf	??_visualizarPasosRealizados& (0+255),w,b
  2381  0048EE  0A01               	xorlw	1	; case 1
  2382  0048F0  B4D8               	btfsc	status,2,c
  2383  0048F2  EF4B  F024         	goto	l10453
  2384  0048F6  0A03               	xorlw	3	; case 2
  2385  0048F8  B4D8               	btfsc	status,2,c
  2386  0048FA  EF53  F024         	goto	l10455
  2387  0048FE  0A01               	xorlw	1	; case 3
  2388  004900  B4D8               	btfsc	status,2,c
  2389  004902  EF5B  F024         	goto	l10457
  2390  004906  0A07               	xorlw	7	; case 4
  2391  004908  B4D8               	btfsc	status,2,c
  2392  00490A  EF63  F024         	goto	l10459
  2393  00490E  EF89  F024         	goto	l10465
  2394  004912                     l10465:
  2395                           
  2396                           ;main.c: 242:     sprintf(buffer, "\rMovimientos Realizados = %d\r\n\n", numMovimientos)
      +                          ;
  2397  004912  0E91               	movlw	low _buffer
  2398  004914  0100               	movlb	0	; () banked
  2399  004916  6FE7               	movwf	sprintf@s& (0+255),b
  2400  004918  0E01               	movlw	high _buffer
  2401  00491A  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  2402  00491C  0ECB               	movlw	low STR_11
  2403  00491E  6FE9               	movwf	sprintf@fmt& (0+255),b
  2404  004920  0E7E               	movlw	high STR_11
  2405  004922  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  2406  004924  C0FB  F0EB         	movff	visualizarPasosRealizados@numMovimientos,?_sprintf+4
  2407  004928  C0FC  F0EC         	movff	visualizarPasosRealizados@numMovimientos+1,?_sprintf+5
  2408  00492C  ECF3  F028         	call	_sprintf	;wreg free
  2409  004930                     
  2410                           ;main.c: 243:     UART_printf(buffer);
  2411  004930  0E91               	movlw	low _buffer
  2412  004932  6E07               	movwf	UART_printf@cadena^0,c
  2413  004934  0E01               	movlw	high _buffer
  2414  004936  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2415  004938  EC13  F028         	call	_UART_printf	;wreg free
  2416  00493C  0012               	return		;funcret
  2417  00493E                     __end_of_visualizarPasosRealizados:
  2418                           	opt callstack 0
  2419                           
  2420 ;; *************** function _inicializarComportamientoBasico *****************
  2421 ;; Defined at:
  2422 ;;		line 261 in file "main.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2436 ;;      Params:         0       0       0       0       0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2439 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2440 ;;Total ram usage:        0 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    6
  2443 ;; This function calls:
  2444 ;;		_dameDistancia
  2445 ;;		_velocidadEstandar
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text2
  2452  00532A                     __ptext2:
  2453                           	opt callstack 0
  2454  00532A                     _inicializarComportamientoBasico:
  2455                           	opt callstack 24
  2456  00532A                     
  2457                           ;main.c: 263:     mouse.curr_state = ENFRENTE;
  2458  00532A  0E01               	movlw	1
  2459  00532C  6E57               	movwf	_mouse^0,c
  2460  00532E                     
  2461                           ;main.c: 265:     oldSensorDerecha = dameDistancia(DERECHA);
  2462  00532E  0E03               	movlw	3
  2463  005330  ECBE  F01E         	call	_dameDistancia
  2464  005334  C01B  F120         	movff	?_dameDistancia,_oldSensorDerecha
  2465  005338  C01C  F121         	movff	?_dameDistancia+1,_oldSensorDerecha+1
  2466  00533C  C01D  F122         	movff	?_dameDistancia+2,_oldSensorDerecha+2
  2467  005340  C01E  F123         	movff	?_dameDistancia+3,_oldSensorDerecha+3
  2468  005344                     
  2469                           ;main.c: 266:     oldSensorIzquierda = dameDistancia(IZQUIERDA);
  2470  005344  0E02               	movlw	2
  2471  005346  ECBE  F01E         	call	_dameDistancia
  2472  00534A  C01B  F11C         	movff	?_dameDistancia,_oldSensorIzquierda
  2473  00534E  C01C  F11D         	movff	?_dameDistancia+1,_oldSensorIzquierda+1
  2474  005352  C01D  F11E         	movff	?_dameDistancia+2,_oldSensorIzquierda+2
  2475  005356  C01E  F11F         	movff	?_dameDistancia+3,_oldSensorIzquierda+3
  2476  00535A                     
  2477                           ;main.c: 267:     oldSensorEnfrente = dameDistancia(ENFRENTE);
  2478  00535A  0E01               	movlw	1
  2479  00535C  ECBE  F01E         	call	_dameDistancia
  2480  005360  C01B  F118         	movff	?_dameDistancia,_oldSensorEnfrente
  2481  005364  C01C  F119         	movff	?_dameDistancia+1,_oldSensorEnfrente+1
  2482  005368  C01D  F11A         	movff	?_dameDistancia+2,_oldSensorEnfrente+2
  2483  00536C  C01E  F11B         	movff	?_dameDistancia+3,_oldSensorEnfrente+3
  2484  005370                     
  2485                           ;main.c: 269:     velocidadEstandar();
  2486  005370  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  2487  005374  0012               	return		;funcret
  2488  005376                     __end_of_inicializarComportamientoBasico:
  2489                           	opt callstack 0
  2490                           
  2491 ;; *************** function _configurarAdc *****************
  2492 ;; Defined at:
  2493 ;;		line 7 in file "./adc.h"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    2
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text3
  2522  005782                     __ptext3:
  2523                           	opt callstack 0
  2524  005782                     _configurarAdc:
  2525                           	opt callstack 28
  2526  005782                     
  2527                           ;./adc.h: 8:     ADCON1 = 0b00001110;
  2528  005782  0E0E               	movlw	14
  2529  005784  6EC1               	movwf	193,c	;volatile
  2530                           
  2531                           ;./adc.h: 9:     ADCON2 = 0b10100101;
  2532  005786  0EA5               	movlw	165
  2533  005788  6EC0               	movwf	192,c	;volatile
  2534  00578A  0012               	return		;funcret
  2535  00578C                     __end_of_configurarAdc:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function _configPwm *****************
  2539 ;; Defined at:
  2540 ;;		line 47 in file "./pwm.h"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  channel         1    wreg     unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  channel         1    7[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0
  2555 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2556 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2557 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2558 ;;Total ram usage:        3 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    2
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text4
  2569  00528A                     __ptext4:
  2570                           	opt callstack 0
  2571  00528A                     _configPwm:
  2572                           	opt callstack 28
  2573                           
  2574                           ;incstack = 0
  2575                           ;configPwm@channel stored from wreg
  2576  00528A  6E08               	movwf	configPwm@channel^0,c
  2577  00528C                     
  2578                           ;./pwm.h: 56:         T2CKPS0 = 1;
  2579  00528C  80CA               	bsf	4042,0,c	;volatile
  2580                           
  2581                           ;./pwm.h: 57:         T2CKPS1 = 1;
  2582  00528E  82CA               	bsf	4042,1,c	;volatile
  2583  005290                     
  2584                           ;./pwm.h: 61:     PR2 = (4000000 / (500 * 4 * 16)) - 1;
  2585  005290  0E7C               	movlw	124
  2586  005292  6ECB               	movwf	203,c	;volatile
  2587                           
  2588                           ;./pwm.h: 63:     switch (channel) {
  2589  005294  EF56  F029         	goto	l10419
  2590  005298                     l163:
  2591                           
  2592                           ;./pwm.h: 66:             TRISC2 = 0;
  2593  005298  9494               	bcf	3988,2,c	;volatile
  2594                           
  2595                           ;./pwm.h: 67:             CCP1M3 = 1;
  2596  00529A  86BD               	bsf	4029,3,c	;volatile
  2597                           
  2598                           ;./pwm.h: 68:             CCP1M2 = 1;
  2599  00529C  84BD               	bsf	4029,2,c	;volatile
  2600                           
  2601                           ;./pwm.h: 71:             break;
  2602  00529E  EF6B  F029         	goto	l164
  2603  0052A2                     l165:
  2604                           
  2605                           ;./pwm.h: 74:             TRISC1 = 0;
  2606  0052A2  9294               	bcf	3988,1,c	;volatile
  2607                           
  2608                           ;./pwm.h: 75:             CCP2M3 = 1;
  2609  0052A4  86BA               	bsf	4026,3,c	;volatile
  2610                           
  2611                           ;./pwm.h: 76:             CCP2M2 = 1;
  2612  0052A6  84BA               	bsf	4026,2,c	;volatile
  2613                           
  2614                           ;./pwm.h: 77:             break;
  2615  0052A8  EF6B  F029         	goto	l164
  2616  0052AC                     l10419:
  2617  0052AC  5008               	movf	configPwm@channel^0,w,c
  2618  0052AE  6E06               	movwf	??_configPwm^0,c
  2619  0052B0  6A07               	clrf	(??_configPwm+1)^0,c
  2620                           
  2621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2622                           ; Switch size 1, requested type "simple"
  2623                           ; Number of cases is 1, Range of values is 0 to 0
  2624                           ; switch strategies available:
  2625                           ; Name         Instructions Cycles
  2626                           ; simple_byte            4     3 (average)
  2627                           ;	Chosen strategy is simple_byte
  2628  0052B2  5007               	movf	(??_configPwm+1)^0,w,c
  2629  0052B4  0A00               	xorlw	0	; case 0
  2630  0052B6  B4D8               	btfsc	status,2,c
  2631  0052B8  EF60  F029         	goto	l11157
  2632  0052BC  EF6B  F029         	goto	l164
  2633  0052C0                     l11157:
  2634                           
  2635                           ; Switch size 1, requested type "simple"
  2636                           ; Number of cases is 2, Range of values is 1 to 2
  2637                           ; switch strategies available:
  2638                           ; Name         Instructions Cycles
  2639                           ; simple_byte            7     4 (average)
  2640                           ;	Chosen strategy is simple_byte
  2641  0052C0  5006               	movf	??_configPwm^0,w,c
  2642  0052C2  0A01               	xorlw	1	; case 1
  2643  0052C4  B4D8               	btfsc	status,2,c
  2644  0052C6  EF4C  F029         	goto	l163
  2645  0052CA  0A03               	xorlw	3	; case 2
  2646  0052CC  B4D8               	btfsc	status,2,c
  2647  0052CE  EF51  F029         	goto	l165
  2648  0052D2  EF6B  F029         	goto	l164
  2649  0052D6                     l164:
  2650                           
  2651                           ;./pwm.h: 81:     TMR2ON = 1;
  2652  0052D6  84CA               	bsf	4042,2,c	;volatile
  2653  0052D8  0012               	return		;funcret
  2654  0052DA                     __end_of_configPwm:
  2655                           	opt callstack 0
  2656                           
  2657 ;; *************** function _comportamientoBasico *****************
  2658 ;; Defined at:
  2659 ;;		line 281 in file "main.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  direccionEle    1  158[BANK0 ] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0
  2674 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2675 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2676 ;;      Totals:         0       1       2       0       0       0       0       0       0
  2677 ;;Total ram usage:        3 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:   11
  2680 ;; This function calls:
  2681 ;;		_PID
  2682 ;;		_UART_printf
  2683 ;;		_caminoCorrecto
  2684 ;;		_decidirDireccion
  2685 ;;		_finalizarRecorrido
  2686 ;;		_forzarEspejeo
  2687 ;;		_forzarParoAuto
  2688 ;;		_leerSensores
  2689 ;;		_limpiarMovimientos
  2690 ;;		_moverCarrito
  2691 ;;		_recorrerCaminoEncontrado
  2692 ;;		_regresarAlCruce
  2693 ;;		_regresarPuntoPartida
  2694 ;;		_velocidadBaja
  2695 ;;		_velocidadEstandar
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text5
  2702  001FEA                     __ptext5:
  2703                           	opt callstack 0
  2704  001FEA                     _comportamientoBasico:
  2705                           	opt callstack 19
  2706  001FEA                     
  2707                           ;main.c: 301:     if (!caminoEncontrado) {
  2708  001FEA  0101               	movlb	1	; () banked
  2709  001FEC  5138               	movf	comportamientoBasico@caminoEncontrado& (0+255),w,b
  2710  001FEE  A4D8               	btfss	status,2,c
  2711  001FF0  EFFC  F00F         	goto	u11661
  2712  001FF4  EFFE  F00F         	goto	u11660
  2713  001FF8                     u11661:
  2714  001FF8  EFD0  F011         	goto	l10615
  2715  001FFC                     u11660:
  2716  001FFC                     
  2717                           ; BSR set to: 1
  2718                           ;main.c: 303:         moverCarrito(espejearCarroY, &carroEspejeado, &avanceRectoLargo);
  2719  001FFC  0E59               	movlw	low comportamientoBasico@carroEspejeado
  2720  001FFE  0100               	movlb	0	; () banked
  2721  002000  6F88               	movwf	moverCarrito@carroEspejeado& (0+255),b
  2722  002002  0E00               	movlw	high comportamientoBasico@carroEspejeado
  2723  002004  6F89               	movwf	(moverCarrito@carroEspejeado+1)& (0+255),b
  2724  002006  0ECA               	movlw	low comportamientoBasico@avanceRectoLargo
  2725  002008  6F8A               	movwf	moverCarrito@avanceRectoLargo& (0+255),b
  2726  00200A  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2727  00200C  6F8B               	movwf	(moverCarrito@avanceRectoLargo+1)& (0+255),b
  2728  00200E  0101               	movlb	1	; () banked
  2729  002010  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  2730  002012  EC79  F020         	call	_moverCarrito
  2731  002016                     
  2732                           ;main.c: 306:         if (!llegoDestino) {
  2733  002016  0100               	movlb	0	; () banked
  2734  002018  51FF               	movf	_llegoDestino& (0+255),w,b
  2735  00201A  A4D8               	btfss	status,2,c
  2736  00201C  EF12  F010         	goto	u11671
  2737  002020  EF14  F010         	goto	u11670
  2738  002024                     u11671:
  2739  002024  EF68  F010         	goto	l10517
  2740  002028                     u11670:
  2741  002028                     
  2742                           ; BSR set to: 0
  2743                           ;main.c: 308:             if (mapear)
  2744  002028  0101               	movlb	1	; () banked
  2745  00202A  51D1               	movf	comportamientoBasico@mapear& (0+255),w,b
  2746  00202C  B4D8               	btfsc	status,2,c
  2747  00202E  EF1B  F010         	goto	u11681
  2748  002032  EF1D  F010         	goto	u11680
  2749  002036                     u11681:
  2750  002036  EF41  F010         	goto	l10503
  2751  00203A                     u11680:
  2752  00203A                     
  2753                           ; BSR set to: 1
  2754                           ;main.c: 309:             {;main.c: 310:                 if (numMovimientos < 200)
  2755  00203A  51C9               	movf	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2756  00203C  E107               	bnz	u11691
  2757  00203E  0EC8               	movlw	200
  2758  002040  5DC8               	subwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2759  002042  B0D8               	btfsc	status,0,c
  2760  002044  EF26  F010         	goto	u11691
  2761  002048  EF28  F010         	goto	u11690
  2762  00204C                     u11691:
  2763  00204C  EF34  F010         	goto	l10497
  2764  002050                     u11690:
  2765  002050                     
  2766                           ; BSR set to: 1
  2767                           ;main.c: 311:                     movimientosRealizados[numMovimientos++] = mouse.curr_s
      +                          tate;
  2768  002050  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  2769  002052  25C8               	addwf	comportamientoBasico@numMovimientos& (0+255),w,b
  2770  002054  6ED9               	movwf	fsr2l,c
  2771  002056  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  2772  002058  21C9               	addwfc	(comportamientoBasico@numMovimientos+1)& (0+255),w,b
  2773  00205A  6EDA               	movwf	fsr2h,c
  2774  00205C  C057  FFDF         	movff	_mouse,indf2
  2775  002060                     
  2776                           ; BSR set to: 1
  2777  002060  4BC8               	infsnz	comportamientoBasico@numMovimientos& (0+255),f,b
  2778  002062  2BC9               	incf	(comportamientoBasico@numMovimientos+1)& (0+255),f,b
  2779  002064  EF68  F010         	goto	l10517
  2780  002068                     l10497:
  2781                           
  2782                           ; BSR set to: 1
  2783                           ;main.c: 313:                     UART_printf("\n\nOVERFLOW en el mapeo de pasos Realiza
      +                          dos para cruce\n\n");
  2784  002068  0E2E               	movlw	low STR_12
  2785  00206A  6E07               	movwf	UART_printf@cadena^0,c
  2786  00206C  0E7E               	movlw	high STR_12
  2787  00206E  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2788  002070  EC13  F028         	call	_UART_printf	;wreg free
  2789  002074                     l10499:
  2790                           
  2791                           ;main.c: 314:                     forzarParoAuto();
  2792  002074  ECA1  F02B         	call	_forzarParoAuto	;wreg free
  2793  002078                     
  2794                           ;main.c: 315:                     pausa = 1;
  2795  002078  0E01               	movlw	1
  2796  00207A  0101               	movlb	1	; () banked
  2797  00207C  6FE9               	movwf	_pausa& (0+255),b
  2798  00207E  EF68  F010         	goto	l10517
  2799  002082                     l10503:
  2800                           
  2801                           ; BSR set to: 1
  2802                           ;main.c: 336:                 if (!investigandoCruce) {
  2803  002082  51CF               	movf	comportamientoBasico@investigandoCruce& (0+255),w,b
  2804  002084  A4D8               	btfss	status,2,c
  2805  002086  EF47  F010         	goto	u11701
  2806  00208A  EF49  F010         	goto	u11700
  2807  00208E                     u11701:
  2808  00208E  EF68  F010         	goto	l10517
  2809  002092                     u11700:
  2810  002092                     
  2811                           ; BSR set to: 1
  2812                           ;main.c: 337:                     if (numMovimientosTotales < 1000)
  2813  002092  0EE8               	movlw	232
  2814  002094  5DC6               	subwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  2815  002096  0E03               	movlw	3
  2816  002098  59C7               	subwfb	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  2817  00209A  B0D8               	btfsc	status,0,c
  2818  00209C  EF52  F010         	goto	u11711
  2819  0020A0  EF54  F010         	goto	u11710
  2820  0020A4                     u11711:
  2821  0020A4  EF60  F010         	goto	l10511
  2822  0020A8                     u11710:
  2823  0020A8                     
  2824                           ; BSR set to: 1
  2825                           ;main.c: 338:                         caminoFinal[numMovimientosTotales++] = mouse.curr_
      +                          state;
  2826  0020A8  0EC8               	movlw	low comportamientoBasico@caminoFinal
  2827  0020AA  25C6               	addwf	comportamientoBasico@numMovimientosTotales& (0+255),w,b
  2828  0020AC  6ED9               	movwf	fsr2l,c
  2829  0020AE  0E02               	movlw	high comportamientoBasico@caminoFinal
  2830  0020B0  21C7               	addwfc	(comportamientoBasico@numMovimientosTotales+1)& (0+255),w,b
  2831  0020B2  6EDA               	movwf	fsr2h,c
  2832  0020B4  C057  FFDF         	movff	_mouse,indf2
  2833  0020B8                     
  2834                           ; BSR set to: 1
  2835  0020B8  4BC6               	infsnz	comportamientoBasico@numMovimientosTotales& (0+255),f,b
  2836  0020BA  2BC7               	incf	(comportamientoBasico@numMovimientosTotales+1)& (0+255),f,b
  2837  0020BC  EF68  F010         	goto	l10517
  2838  0020C0                     l10511:
  2839                           
  2840                           ; BSR set to: 1
  2841                           ;main.c: 340:                         UART_printf("\n\nOVERFLOW en el mapeo de pasos Rea
      +                          lizados para camino Total\n\n");
  2842  0020C0  0EEF               	movlw	low STR_13
  2843  0020C2  6E07               	movwf	UART_printf@cadena^0,c
  2844  0020C4  0E7D               	movlw	high STR_13
  2845  0020C6  6E08               	movwf	(UART_printf@cadena+1)^0,c
  2846  0020C8  EC13  F028         	call	_UART_printf	;wreg free
  2847  0020CC  EF3A  F010         	goto	l10499
  2848  0020D0                     l10517:
  2849                           
  2850                           ;main.c: 349:         leerSensores();
  2851  0020D0  EC4E  F01D         	call	_leerSensores	;wreg free
  2852  0020D4                     
  2853                           ;main.c: 352:         direccionElegida = decidirDireccion(caminosRecorrer, &investigando
      +                          Cruce,
  2854  0020D4  0EC3               	movlw	low comportamientoBasico@caminosRecorrer
  2855  0020D6  0101               	movlb	1	; () banked
  2856  0020D8  6FD2               	movwf	decidirDireccion@caminosRecorrer& (0+255),b
  2857  0020DA  0E01               	movlw	high comportamientoBasico@caminosRecorrer
  2858  0020DC  6FD3               	movwf	(decidirDireccion@caminosRecorrer+1)& (0+255),b
  2859  0020DE  0ECF               	movlw	low comportamientoBasico@investigandoCruce
  2860  0020E0  6FD4               	movwf	decidirDireccion@investigandoCruce& (0+255),b
  2861  0020E2  0E01               	movlw	high comportamientoBasico@investigandoCruce
  2862  0020E4  6FD5               	movwf	(decidirDireccion@investigandoCruce+1)& (0+255),b
  2863  0020E6  0ECE               	movlw	low comportamientoBasico@posicionInvCruce
  2864  0020E8  6FD6               	movwf	decidirDireccion@posicionInvCruce& (0+255),b
  2865  0020EA  0E01               	movlw	high comportamientoBasico@posicionInvCruce
  2866  0020EC  6FD7               	movwf	(decidirDireccion@posicionInvCruce+1)& (0+255),b
  2867  0020EE  0ECD               	movlw	low comportamientoBasico@contCaminosRecorridos
  2868  0020F0  6FD8               	movwf	decidirDireccion@contCaminosRecorridos& (0+255),b
  2869  0020F2  0E01               	movlw	high comportamientoBasico@contCaminosRecorridos
  2870  0020F4  6FD9               	movwf	(decidirDireccion@contCaminosRecorridos+1)& (0+255),b
  2871  0020F6  0ECC               	movlw	low comportamientoBasico@caminoActual
  2872  0020F8  6FDA               	movwf	decidirDireccion@caminoActual& (0+255),b
  2873  0020FA  0E01               	movlw	high comportamientoBasico@caminoActual
  2874  0020FC  6FDB               	movwf	(decidirDireccion@caminoActual+1)& (0+255),b
  2875  0020FE  0ECB               	movlw	low comportamientoBasico@cambioOrientacionCarro
  2876  002100  6FDC               	movwf	decidirDireccion@cambioOrientacionCarro& (0+255),b
  2877  002102  0E01               	movlw	high comportamientoBasico@cambioOrientacionCarro
  2878  002104  6FDD               	movwf	(decidirDireccion@cambioOrientacionCarro+1)& (0+255),b
  2879  002106  0ED1               	movlw	low comportamientoBasico@mapear
  2880  002108  6FDE               	movwf	decidirDireccion@mapear& (0+255),b
  2881  00210A  0E01               	movlw	high comportamientoBasico@mapear
  2882  00210C  6FDF               	movwf	(decidirDireccion@mapear+1)& (0+255),b
  2883  00210E  0ED0               	movlw	low comportamientoBasico@cruceDetectado
  2884  002110  6FE0               	movwf	decidirDireccion@cruceDetectado& (0+255),b
  2885  002112  0E01               	movlw	high comportamientoBasico@cruceDetectado
  2886  002114  6FE1               	movwf	(decidirDireccion@cruceDetectado+1)& (0+255),b
  2887  002116  0ECA               	movlw	low comportamientoBasico@avanceRectoLargo
  2888  002118  6FE2               	movwf	decidirDireccion@avanceRectoLargo& (0+255),b
  2889  00211A  0E01               	movlw	high comportamientoBasico@avanceRectoLargo
  2890  00211C  6FE3               	movwf	(decidirDireccion@avanceRectoLargo+1)& (0+255),b
  2891  00211E  ECBA  F008         	call	_decidirDireccion	;wreg free
  2892  002122  0100               	movlb	0	; () banked
  2893  002124  6FFE               	movwf	comportamientoBasico@direccionElegida& (0+255),b
  2894                           
  2895                           ;main.c: 357:         switch (mouse.curr_state) {
  2896  002126  EFAE  F011         	goto	l10613
  2897  00212A                     l10521:
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;main.c: 364:                         mapear = 0;
  2901  00212A  0E00               	movlw	0
  2902  00212C  6FD1               	movwf	comportamientoBasico@mapear& (0+255),b
  2903                           
  2904                           ;main.c: 365:                         espejearCarroY = 1;
  2905  00212E  0E01               	movlw	1
  2906  002130  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  2907                           
  2908                           ;main.c: 366:                         mouse.Next_state = IZQUIERDA;
  2909  002132  0E02               	movlw	2
  2910  002134  6E58               	movwf	(_mouse+1)^0,c
  2911                           
  2912                           ;main.c: 367:                         break;
  2913  002136  EFCC  F011         	goto	l387
  2914  00213A                     l10523:
  2915                           
  2916                           ; BSR set to: 1
  2917                           ;main.c: 371:                         if (!paredEnfrente)
  2918  00213A  513C               	movf	_paredEnfrente& (0+255),w,b
  2919  00213C  A4D8               	btfss	status,2,c
  2920  00213E  EFA3  F010         	goto	u11721
  2921  002142  EFA5  F010         	goto	u11720
  2922  002146                     u11721:
  2923  002146  EFA9  F010         	goto	l10527
  2924  00214A                     u11720:
  2925  00214A                     
  2926                           ; BSR set to: 1
  2927                           ;main.c: 372:                             velocidadBaja();
  2928  00214A  EC1F  F02B         	call	_velocidadBaja	;wreg free
  2929  00214E  EFAB  F010         	goto	l10529
  2930  002152                     l10527:
  2931                           
  2932                           ; BSR set to: 1
  2933                           ;main.c: 374:                             PID();
  2934  002152  EC0E  F017         	call	_PID	;wreg free
  2935  002156                     l10529:
  2936                           
  2937                           ;main.c: 376:                         mouse.Next_state = ENFRENTE;
  2938  002156  0E01               	movlw	1
  2939  002158  6E58               	movwf	(_mouse+1)^0,c
  2940                           
  2941                           ;main.c: 377:                         break;
  2942  00215A  EFCC  F011         	goto	l387
  2943  00215E                     l10531:
  2944                           
  2945                           ; BSR set to: 1
  2946                           ;main.c: 380:                         velocidadEstandar();
  2947  00215E  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  2948  002162                     l10533:
  2949                           
  2950                           ;main.c: 381:                         mouse.Next_state = IZQUIERDA;
  2951  002162  0E02               	movlw	2
  2952  002164  6E58               	movwf	(_mouse+1)^0,c
  2953                           
  2954                           ;main.c: 382:                         break;
  2955  002166  EFCC  F011         	goto	l387
  2956  00216A                     l10535:
  2957                           
  2958                           ; BSR set to: 1
  2959                           ;main.c: 385:                         velocidadEstandar();
  2960  00216A  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  2961  00216E                     
  2962                           ;main.c: 386:                         mouse.Next_state = DERECHA;
  2963  00216E  0E03               	movlw	3
  2964  002170  6E58               	movwf	(_mouse+1)^0,c
  2965                           
  2966                           ;main.c: 387:                         break;
  2967  002172  EFCC  F011         	goto	l387
  2968  002176                     l10539:
  2969                           
  2970                           ; BSR set to: 1
  2971                           ;main.c: 391:                         mouse.Next_state = ALTO;
  2972  002176  0E04               	movlw	4
  2973  002178  6E58               	movwf	(_mouse+1)^0,c
  2974                           
  2975                           ;main.c: 392:                         break;
  2976  00217A  EFCC  F011         	goto	l387
  2977  00217E                     l10543:
  2978                           
  2979                           ; BSR set to: 1
  2980  00217E  0100               	movlb	0	; () banked
  2981  002180  51FE               	movf	comportamientoBasico@direccionElegida& (0+255),w,b
  2982  002182  0101               	movlb	1	; () banked
  2983  002184  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  2984  002186  6BE5               	clrf	(??_comportamientoBasico+1)& (0+255),b
  2985                           
  2986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2987                           ; Switch size 1, requested type "simple"
  2988                           ; Number of cases is 1, Range of values is 0 to 0
  2989                           ; switch strategies available:
  2990                           ; Name         Instructions Cycles
  2991                           ; simple_byte            4     3 (average)
  2992                           ;	Chosen strategy is simple_byte
  2993  002188  51E5               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  2994  00218A  0A00               	xorlw	0	; case 0
  2995  00218C  B4D8               	btfsc	status,2,c
  2996  00218E  EFCB  F010         	goto	l11159
  2997  002192  EFCC  F011         	goto	l387
  2998  002196                     l11159:
  2999                           
  3000                           ; BSR set to: 1
  3001                           ; Switch size 1, requested type "simple"
  3002                           ; Number of cases is 5, Range of values is 0 to 4
  3003                           ; switch strategies available:
  3004                           ; Name         Instructions Cycles
  3005                           ; simple_byte           16     9 (average)
  3006                           ;	Chosen strategy is simple_byte
  3007  002196  51E4               	movf	??_comportamientoBasico& (0+255),w,b
  3008  002198  0A00               	xorlw	0	; case 0
  3009  00219A  B4D8               	btfsc	status,2,c
  3010  00219C  EF95  F010         	goto	l10521
  3011  0021A0  0A01               	xorlw	1	; case 1
  3012  0021A2  B4D8               	btfsc	status,2,c
  3013  0021A4  EF9D  F010         	goto	l10523
  3014  0021A8  0A03               	xorlw	3	; case 2
  3015  0021AA  B4D8               	btfsc	status,2,c
  3016  0021AC  EFAF  F010         	goto	l10531
  3017  0021B0  0A01               	xorlw	1	; case 3
  3018  0021B2  B4D8               	btfsc	status,2,c
  3019  0021B4  EFB5  F010         	goto	l10535
  3020  0021B8  0A07               	xorlw	7	; case 4
  3021  0021BA  B4D8               	btfsc	status,2,c
  3022  0021BC  EFBB  F010         	goto	l10539
  3023  0021C0  EFCC  F011         	goto	l387
  3024  0021C4                     l10545:
  3025                           
  3026                           ; BSR set to: 1
  3027                           ;main.c: 400:                 if (carroEspejeado && espejearCarroY) {
  3028  0021C4  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3029  0021C6  B4D8               	btfsc	status,2,c
  3030  0021C8  EFE8  F010         	goto	u11731
  3031  0021CC  EFEA  F010         	goto	u11730
  3032  0021D0                     u11731:
  3033  0021D0  EF13  F011         	goto	l10563
  3034  0021D4                     u11730:
  3035  0021D4                     
  3036                           ; BSR set to: 1
  3037  0021D4  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3038  0021D6  B4D8               	btfsc	status,2,c
  3039  0021D8  EFF0  F010         	goto	u11741
  3040  0021DC  EFF2  F010         	goto	u11740
  3041  0021E0                     u11741:
  3042  0021E0  EF13  F011         	goto	l10563
  3043  0021E4                     u11740:
  3044  0021E4                     
  3045                           ; BSR set to: 1
  3046                           ;main.c: 402:                     espejearCarroY = 0;
  3047  0021E4  0E00               	movlw	0
  3048  0021E6  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3049                           
  3050                           ;main.c: 403:                     carroEspejeado = 0;
  3051  0021E8  0E00               	movlw	0
  3052  0021EA  6E59               	movwf	comportamientoBasico@carroEspejeado^0,c
  3053  0021EC                     
  3054                           ; BSR set to: 1
  3055                           ;main.c: 405:                     regresarAlCruce(movimientosRealizados, numMovimientos)
      +                          ;
  3056  0021EC  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3057  0021EE  0100               	movlb	0	; () banked
  3058  0021F0  6F9A               	movwf	regresarAlCruce@movimientos& (0+255),b
  3059  0021F2  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3060  0021F4  6F9B               	movwf	(regresarAlCruce@movimientos+1)& (0+255),b
  3061  0021F6  C1C8  F09C         	movff	comportamientoBasico@numMovimientos,regresarAlCruce@numMovimientos
  3062  0021FA  C1C9  F09D         	movff	comportamientoBasico@numMovimientos+1,regresarAlCruce@numMovimientos+1
  3063  0021FE  EC2F  F023         	call	_regresarAlCruce	;wreg free
  3064  002202                     
  3065                           ;main.c: 406:                     limpiarMovimientos(movimientosRealizados, &numMovimien
      +                          tos);
  3066  002202  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3067  002204  6E06               	movwf	limpiarMovimientos@movimientos^0,c
  3068  002206  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3069  002208  6E07               	movwf	(limpiarMovimientos@movimientos+1)^0,c
  3070  00220A  0EC8               	movlw	low comportamientoBasico@numMovimientos
  3071  00220C  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
  3072  00220E  0E01               	movlw	high comportamientoBasico@numMovimientos
  3073  002210  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
  3074  002212  EC6D  F029         	call	_limpiarMovimientos	;wreg free
  3075  002216                     
  3076                           ;main.c: 408:                     cruceDetectado = 0;
  3077  002216  0E00               	movlw	0
  3078  002218  0101               	movlb	1	; () banked
  3079  00221A  6FD0               	movwf	comportamientoBasico@cruceDetectado& (0+255),b
  3080  00221C                     
  3081                           ; BSR set to: 1
  3082                           ;main.c: 409:                     posicionInvCruce = 1;
  3083  00221C  0E01               	movlw	1
  3084  00221E  6FCE               	movwf	comportamientoBasico@posicionInvCruce& (0+255),b
  3085  002220                     
  3086                           ; BSR set to: 1
  3087                           ;main.c: 410:                     contCaminosRecorridos++;
  3088  002220  2BCD               	incf	comportamientoBasico@contCaminosRecorridos& (0+255),f,b
  3089  002222  EFBB  F010         	goto	l10539
  3090  002226                     l10563:
  3091                           
  3092                           ; BSR set to: 1
  3093  002226  5139               	movf	comportamientoBasico@espejearCarroY& (0+255),w,b
  3094  002228  B4D8               	btfsc	status,2,c
  3095  00222A  EF19  F011         	goto	u11751
  3096  00222E  EF1B  F011         	goto	u11750
  3097  002232                     u11751:
  3098  002232  EFAB  F010         	goto	l10529
  3099  002236                     u11750:
  3100  002236                     
  3101                           ; BSR set to: 1
  3102  002236  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3103  002238  B4D8               	btfsc	status,2,c
  3104  00223A  EF21  F011         	goto	u11761
  3105  00223E  EF23  F011         	goto	u11760
  3106  002242                     u11761:
  3107  002242  EFAB  F010         	goto	l10529
  3108  002246                     u11760:
  3109  002246                     
  3110                           ; BSR set to: 1
  3111  002246  0100               	movlb	0	; () banked
  3112  002248  51FF               	movf	_llegoDestino& (0+255),w,b
  3113  00224A  B4D8               	btfsc	status,2,c
  3114  00224C  EF2A  F011         	goto	u11771
  3115  002250  EF2C  F011         	goto	u11770
  3116  002254                     u11771:
  3117  002254  EFAB  F010         	goto	l10529
  3118  002258                     u11770:
  3119  002258                     
  3120                           ; BSR set to: 0
  3121                           ;main.c: 413:                     espejearCarroY = 0;
  3122  002258  0E00               	movlw	0
  3123  00225A  0101               	movlb	1	; () banked
  3124  00225C  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3125                           
  3126                           ;main.c: 414:                     mouse.Next_state = ALTO;
  3127  00225E  0E04               	movlw	4
  3128  002260  6E58               	movwf	(_mouse+1)^0,c
  3129                           
  3130                           ;main.c: 416:                 } else {
  3131  002262  EFCC  F011         	goto	l387
  3132  002266                     l10575:
  3133                           
  3134                           ; BSR set to: 1
  3135                           ;main.c: 428:                 if (llegoDestino && carroEspejeado) {
  3136  002266  0100               	movlb	0	; () banked
  3137  002268  51FF               	movf	_llegoDestino& (0+255),w,b
  3138  00226A  B4D8               	btfsc	status,2,c
  3139  00226C  EF3A  F011         	goto	u11781
  3140  002270  EF3C  F011         	goto	u11780
  3141  002274                     u11781:
  3142  002274  EF5A  F011         	goto	l10589
  3143  002278                     u11780:
  3144  002278                     
  3145                           ; BSR set to: 0
  3146  002278  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3147  00227A  B4D8               	btfsc	status,2,c
  3148  00227C  EF42  F011         	goto	u11791
  3149  002280  EF44  F011         	goto	u11790
  3150  002284                     u11791:
  3151  002284  EF5A  F011         	goto	l10589
  3152  002288                     u11790:
  3153  002288                     
  3154                           ; BSR set to: 0
  3155                           ;main.c: 430:                     carroEspejeado = 0;
  3156  002288  0E00               	movlw	0
  3157  00228A  6E59               	movwf	comportamientoBasico@carroEspejeado^0,c
  3158  00228C                     
  3159                           ; BSR set to: 0
  3160                           ;main.c: 431:                     regresarPuntoPartida(caminoFinal, numMovimientosTotale
      +                          s);
  3161  00228C  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3162  00228E  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  3163  002290  0E02               	movlw	high comportamientoBasico@caminoFinal
  3164  002292  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  3165  002294  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  3166  002298  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  3167  00229C  ECF4  F024         	call	_regresarPuntoPartida	;wreg free
  3168  0022A0                     
  3169                           ;main.c: 432:                     llegoDestino = 0;
  3170  0022A0  0E00               	movlw	0
  3171  0022A2  0100               	movlb	0	; () banked
  3172  0022A4  6FFF               	movwf	_llegoDestino& (0+255),b
  3173  0022A6                     
  3174                           ; BSR set to: 0
  3175                           ;main.c: 433:                     caminoEncontrado = 1;
  3176  0022A6  0E01               	movlw	1
  3177  0022A8  0101               	movlb	1	; () banked
  3178  0022AA  6F38               	movwf	comportamientoBasico@caminoEncontrado& (0+255),b
  3179  0022AC                     
  3180                           ; BSR set to: 1
  3181                           ;main.c: 434:                     finalizarRecorrido();
  3182  0022AC  ECB9  F02B         	call	_finalizarRecorrido	;wreg free
  3183                           
  3184                           ;main.c: 435:                 } else if (llegoDestino && !carroEspejeado) {
  3185  0022B0  EFCC  F011         	goto	l387
  3186  0022B4                     l10589:
  3187                           
  3188                           ; BSR set to: 0
  3189  0022B4  51FF               	movf	_llegoDestino& (0+255),w,b
  3190  0022B6  B4D8               	btfsc	status,2,c
  3191  0022B8  EF60  F011         	goto	u11801
  3192  0022BC  EF62  F011         	goto	u11800
  3193  0022C0                     u11801:
  3194  0022C0  EF96  F011         	goto	l10603
  3195  0022C4                     u11800:
  3196  0022C4                     
  3197                           ; BSR set to: 0
  3198  0022C4  5059               	movf	comportamientoBasico@carroEspejeado^0,w,c
  3199  0022C6  A4D8               	btfss	status,2,c
  3200  0022C8  EF68  F011         	goto	u11811
  3201  0022CC  EF6A  F011         	goto	u11810
  3202  0022D0                     u11811:
  3203  0022D0  EF96  F011         	goto	l10603
  3204  0022D4                     u11810:
  3205  0022D4                     
  3206                           ; BSR set to: 0
  3207                           ;main.c: 437:                     caminoCorrecto(movimientosRealizados, caminoFinal, num
      +                          Movimientos,
  3208  0022D4  0E00               	movlw	low comportamientoBasico@movimientosRealizados
  3209  0022D6  6E12               	movwf	caminoCorrecto@movimientos^0,c
  3210  0022D8  0E02               	movlw	high comportamientoBasico@movimientosRealizados
  3211  0022DA  6E13               	movwf	(caminoCorrecto@movimientos+1)^0,c
  3212  0022DC  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3213  0022DE  6E14               	movwf	caminoCorrecto@caminoFinal^0,c
  3214  0022E0  0E02               	movlw	high comportamientoBasico@caminoFinal
  3215  0022E2  6E15               	movwf	(caminoCorrecto@caminoFinal+1)^0,c
  3216  0022E4  C1C8  F016         	movff	comportamientoBasico@numMovimientos,caminoCorrecto@numMovimientos
  3217  0022E8  C1C9  F017         	movff	comportamientoBasico@numMovimientos+1,caminoCorrecto@numMovimientos+1
  3218  0022EC  0EC6               	movlw	low comportamientoBasico@numMovimientosTotales
  3219  0022EE  6E18               	movwf	caminoCorrecto@numMovimientosFinal^0,c
  3220  0022F0  0E01               	movlw	high comportamientoBasico@numMovimientosTotales
  3221  0022F2  6E19               	movwf	(caminoCorrecto@numMovimientosFinal+1)^0,c
  3222  0022F4  C1CC  F01A         	movff	comportamientoBasico@caminoActual,caminoCorrecto@caminoActual
  3223  0022F8  EC01  F02A         	call	_caminoCorrecto	;wreg free
  3224  0022FC                     
  3225                           ;main.c: 440:                     espejearCarroY = 1;
  3226  0022FC  0E01               	movlw	1
  3227  0022FE  0101               	movlb	1	; () banked
  3228  002300  6F39               	movwf	comportamientoBasico@espejearCarroY& (0+255),b
  3229  002302                     
  3230                           ; BSR set to: 1
  3231                           ;main.c: 441:                     UART_printf("\rSe llego Al destino\r\n");
  3232  002302  0E7B               	movlw	low STR_14
  3233  002304  6E07               	movwf	UART_printf@cadena^0,c
  3234  002306  0E7F               	movlw	high STR_14
  3235  002308  6E08               	movwf	(UART_printf@cadena+1)^0,c
  3236  00230A  EC13  F028         	call	_UART_printf	;wreg free
  3237  00230E                     
  3238                           ;main.c: 442:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  3239  00230E  0E10               	movlw	16
  3240  002310  0101               	movlb	1	; () banked
  3241  002312  6FE5               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3242  002314  0E39               	movlw	57
  3243  002316  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3244  002318  0E0D               	movlw	13
  3245  00231A                     u11987:
  3246  00231A  2EE8               	decfsz	wreg,f,c
  3247  00231C  D7FE               	bra	u11987
  3248  00231E  2FE4               	decfsz	??_comportamientoBasico& (0+255),f,b
  3249  002320  D7FC               	bra	u11987
  3250  002322  2FE5               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3251  002324  D7FA               	bra	u11987
  3252  002326  D000               	nop2	
  3253  002328  EFB1  F010         	goto	l10533
  3254  00232C                     l10603:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;main.c: 446:                     if (direccionElegida == IZQUIERDA || direccionElegida 
      +                          == DERECHA)
  3258  00232C  0E02               	movlw	2
  3259  00232E  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3260  002330  B4D8               	btfsc	status,2,c
  3261  002332  EF9D  F011         	goto	u11821
  3262  002336  EF9F  F011         	goto	u11820
  3263  00233A                     u11821:
  3264  00233A  EFA8  F011         	goto	l10607
  3265  00233E                     u11820:
  3266  00233E                     
  3267                           ; BSR set to: 0
  3268  00233E  0E03               	movlw	3
  3269  002340  19FE               	xorwf	comportamientoBasico@direccionElegida& (0+255),w,b
  3270  002342  A4D8               	btfss	status,2,c
  3271  002344  EFA6  F011         	goto	u11831
  3272  002348  EFA8  F011         	goto	u11830
  3273  00234C                     u11831:
  3274  00234C  EFAA  F011         	goto	l10609
  3275  002350                     u11830:
  3276  002350                     l10607:
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;main.c: 447:                         velocidadEstandar();
  3280  002350  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  3281  002354                     l10609:
  3282                           
  3283                           ;main.c: 449:                     mouse.Next_state = direccionElegida;
  3284  002354  C0FE  F058         	movff	comportamientoBasico@direccionElegida,_mouse+1
  3285  002358  EFCC  F011         	goto	l387
  3286  00235C                     l10613:
  3287                           
  3288                           ; BSR set to: 0
  3289  00235C  5057               	movf	_mouse^0,w,c
  3290  00235E  0101               	movlb	1	; () banked
  3291  002360  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3292  002362  6BE5               	clrf	(??_comportamientoBasico+1)& (0+255),b
  3293                           
  3294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3295                           ; Switch size 1, requested type "simple"
  3296                           ; Number of cases is 1, Range of values is 0 to 0
  3297                           ; switch strategies available:
  3298                           ; Name         Instructions Cycles
  3299                           ; simple_byte            4     3 (average)
  3300                           ;	Chosen strategy is simple_byte
  3301  002364  51E5               	movf	(??_comportamientoBasico+1)& (0+255),w,b
  3302  002366  0A00               	xorlw	0	; case 0
  3303  002368  B4D8               	btfsc	status,2,c
  3304  00236A  EFB9  F011         	goto	l11161
  3305  00236E  EFCC  F011         	goto	l387
  3306  002372                     l11161:
  3307                           
  3308                           ; BSR set to: 1
  3309                           ; Switch size 1, requested type "simple"
  3310                           ; Number of cases is 4, Range of values is 1 to 4
  3311                           ; switch strategies available:
  3312                           ; Name         Instructions Cycles
  3313                           ; simple_byte           13     7 (average)
  3314                           ;	Chosen strategy is simple_byte
  3315  002372  51E4               	movf	??_comportamientoBasico& (0+255),w,b
  3316  002374  0A01               	xorlw	1	; case 1
  3317  002376  B4D8               	btfsc	status,2,c
  3318  002378  EFBF  F010         	goto	l10543
  3319  00237C  0A03               	xorlw	3	; case 2
  3320  00237E  B4D8               	btfsc	status,2,c
  3321  002380  EFE2  F010         	goto	l10545
  3322  002384  0A01               	xorlw	1	; case 3
  3323  002386  B4D8               	btfsc	status,2,c
  3324  002388  EFAB  F010         	goto	l10529
  3325  00238C  0A07               	xorlw	7	; case 4
  3326  00238E  B4D8               	btfsc	status,2,c
  3327  002390  EF33  F011         	goto	l10575
  3328  002394  EFCC  F011         	goto	l387
  3329  002398                     l387:
  3330                           
  3331                           ;main.c: 455:         mouse.curr_state = mouse.Next_state;
  3332  002398  C058  F057         	movff	_mouse+1,_mouse
  3333                           
  3334                           ;main.c: 457:     } else {
  3335  00239C  EFF7  F011         	goto	l403
  3336  0023A0                     l10615:
  3337                           
  3338                           ; BSR set to: 1
  3339                           ;main.c: 458:         recorrerCaminoEncontrado(caminoFinal, numMovimientosTotales);
  3340  0023A0  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3341  0023A2  0100               	movlb	0	; () banked
  3342  0023A4  6F9A               	movwf	recorrerCaminoEncontrado@movimientos& (0+255),b
  3343  0023A6  0E02               	movlw	high comportamientoBasico@caminoFinal
  3344  0023A8  6F9B               	movwf	(recorrerCaminoEncontrado@movimientos+1)& (0+255),b
  3345  0023AA  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,recorrerCaminoEncontrado@numMovimiento
      +                          s
  3346  0023AE  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,recorrerCaminoEncontrado@numMovimien
      +                          tos+1
  3347  0023B2  ECDF  F025         	call	_recorrerCaminoEncontrado	;wreg free
  3348  0023B6                     
  3349                           ;main.c: 459:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  3350  0023B6  0E10               	movlw	16
  3351  0023B8  0101               	movlb	1	; () banked
  3352  0023BA  6FE5               	movwf	(??_comportamientoBasico+1)& (0+255),b
  3353  0023BC  0E39               	movlw	57
  3354  0023BE  6FE4               	movwf	??_comportamientoBasico& (0+255),b
  3355  0023C0  0E0D               	movlw	13
  3356  0023C2                     u11997:
  3357  0023C2  2EE8               	decfsz	wreg,f,c
  3358  0023C4  D7FE               	bra	u11997
  3359  0023C6  2FE4               	decfsz	??_comportamientoBasico& (0+255),f,b
  3360  0023C8  D7FC               	bra	u11997
  3361  0023CA  2FE5               	decfsz	(??_comportamientoBasico+1)& (0+255),f,b
  3362  0023CC  D7FA               	bra	u11997
  3363  0023CE  D000               	nop2	
  3364  0023D0                     
  3365                           ;main.c: 460:         forzarEspejeo();
  3366  0023D0  EC46  F02A         	call	_forzarEspejeo	;wreg free
  3367  0023D4                     
  3368                           ;main.c: 461:         regresarPuntoPartida(caminoFinal, numMovimientosTotales);
  3369  0023D4  0EC8               	movlw	low comportamientoBasico@caminoFinal
  3370  0023D6  0100               	movlb	0	; () banked
  3371  0023D8  6F9A               	movwf	regresarPuntoPartida@movimientos& (0+255),b
  3372  0023DA  0E02               	movlw	high comportamientoBasico@caminoFinal
  3373  0023DC  6F9B               	movwf	(regresarPuntoPartida@movimientos+1)& (0+255),b
  3374  0023DE  C1C6  F09C         	movff	comportamientoBasico@numMovimientosTotales,regresarPuntoPartida@numMovimientos
  3375  0023E2  C1C7  F09D         	movff	comportamientoBasico@numMovimientosTotales+1,regresarPuntoPartida@numMovimientos+
      +                          1
  3376  0023E6  ECF4  F024         	call	_regresarPuntoPartida	;wreg free
  3377  0023EA                     
  3378                           ;main.c: 462:         finalizarRecorrido();
  3379  0023EA  ECB9  F02B         	call	_finalizarRecorrido	;wreg free
  3380  0023EE                     l403:
  3381  0023EE  0012               	return		;funcret
  3382  0023F0                     __end_of_comportamientoBasico:
  3383                           	opt callstack 0
  3384                           
  3385 ;; *************** function _regresarPuntoPartida *****************
  3386 ;; Defined at:
  3387 ;;		line 669 in file "main.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3390 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  3391 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  i               2   62[BANK0 ] int 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3403 ;;      Params:         0       4       0       0       0       0       0       0       0
  3404 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3405 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3406 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3407 ;;Total ram usage:        7 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    6
  3410 ;; This function calls:
  3411 ;;		_PID
  3412 ;;		_mover
  3413 ;;		_velocidadEstandar
  3414 ;; This function is called by:
  3415 ;;		_comportamientoBasico
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text6
  3420  0049E8                     __ptext6:
  3421                           	opt callstack 0
  3422  0049E8                     _regresarPuntoPartida:
  3423                           	opt callstack 23
  3424  0049E8                     
  3425                           ;main.c: 671:     for (T_INT i = numMovimientos - 1; i >= 0; i--) {
  3426  0049E8  0EFF               	movlw	255
  3427  0049EA  0100               	movlb	0	; () banked
  3428  0049EC  259C               	addwf	regresarPuntoPartida@numMovimientos& (0+255),w,b
  3429  0049EE  6F9E               	movwf	regresarPuntoPartida@i& (0+255),b
  3430  0049F0  0EFF               	movlw	255
  3431  0049F2  219D               	addwfc	(regresarPuntoPartida@numMovimientos+1)& (0+255),w,b
  3432  0049F4  6F9F               	movwf	(regresarPuntoPartida@i+1)& (0+255),b
  3433  0049F6  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  3434  0049F8  EF02  F025         	goto	u11590
  3435  0049FC  EF00  F025         	goto	u11591
  3436  004A00                     u11591:
  3437  004A00  EF04  F025         	goto	l10363
  3438  004A04                     u11590:
  3439  004A04  EF46  F025         	goto	l465
  3440  004A08                     l10363:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;main.c: 673:         if (movimientos[i] == IZQUIERDA) {
  3444  004A08  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3445  004A0A  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3446  004A0C  6ED9               	movwf	fsr2l,c
  3447  004A0E  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3448  004A10  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3449  004A12  6EDA               	movwf	fsr2h,c
  3450  004A14  0E02               	movlw	2
  3451  004A16  18DE               	xorwf	postinc2,w,c
  3452  004A18  A4D8               	btfss	status,2,c
  3453  004A1A  EF11  F025         	goto	u11601
  3454  004A1E  EF13  F025         	goto	u11600
  3455  004A22                     u11601:
  3456  004A22  EF19  F025         	goto	l10369
  3457  004A26                     u11600:
  3458  004A26                     
  3459                           ; BSR set to: 0
  3460                           ;main.c: 674:             velocidadEstandar();
  3461  004A26  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  3462  004A2A                     
  3463                           ;main.c: 675:             mouse.curr_state = DERECHA;
  3464  004A2A  0E03               	movlw	3
  3465  004A2C  6E57               	movwf	_mouse^0,c
  3466                           
  3467                           ;main.c: 676:         } else if (movimientos[i] == DERECHA) {
  3468  004A2E  EF39  F025         	goto	l10379
  3469  004A32                     l10369:
  3470                           
  3471                           ; BSR set to: 0
  3472  004A32  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3473  004A34  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3474  004A36  6ED9               	movwf	fsr2l,c
  3475  004A38  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3476  004A3A  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3477  004A3C  6EDA               	movwf	fsr2h,c
  3478  004A3E  0E03               	movlw	3
  3479  004A40  18DE               	xorwf	postinc2,w,c
  3480  004A42  A4D8               	btfss	status,2,c
  3481  004A44  EF26  F025         	goto	u11611
  3482  004A48  EF28  F025         	goto	u11610
  3483  004A4C                     u11611:
  3484  004A4C  EF2E  F025         	goto	l10375
  3485  004A50                     u11610:
  3486  004A50                     
  3487                           ; BSR set to: 0
  3488                           ;main.c: 677:             velocidadEstandar();
  3489  004A50  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  3490  004A54                     
  3491                           ;main.c: 678:             mouse.curr_state = IZQUIERDA;
  3492  004A54  0E02               	movlw	2
  3493  004A56  6E57               	movwf	_mouse^0,c
  3494                           
  3495                           ;main.c: 679:         } else {
  3496  004A58  EF39  F025         	goto	l10379
  3497  004A5C                     l10375:
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;main.c: 681:             PID();
  3501  004A5C  EC0E  F017         	call	_PID	;wreg free
  3502  004A60                     
  3503                           ;main.c: 682:             mouse.curr_state = movimientos[i];
  3504  004A60  0100               	movlb	0	; () banked
  3505  004A62  519E               	movf	regresarPuntoPartida@i& (0+255),w,b
  3506  004A64  259A               	addwf	regresarPuntoPartida@movimientos& (0+255),w,b
  3507  004A66  6ED9               	movwf	fsr2l,c
  3508  004A68  519F               	movf	(regresarPuntoPartida@i+1)& (0+255),w,b
  3509  004A6A  219B               	addwfc	(regresarPuntoPartida@movimientos+1)& (0+255),w,b
  3510  004A6C  6EDA               	movwf	fsr2h,c
  3511  004A6E  50DF               	movf	indf2,w,c
  3512  004A70  6E57               	movwf	_mouse^0,c
  3513  004A72                     l10379:
  3514                           
  3515                           ;main.c: 685:         mover();
  3516  004A72  EC47  F025         	call	_mover	;wreg free
  3517  004A76                     
  3518                           ;main.c: 686:     }
  3519  004A76  0100               	movlb	0	; () banked
  3520  004A78  079E               	decf	regresarPuntoPartida@i& (0+255),f,b
  3521  004A7A  A0D8               	btfss	status,0,c
  3522  004A7C  079F               	decf	(regresarPuntoPartida@i+1)& (0+255),f,b
  3523  004A7E                     
  3524                           ; BSR set to: 0
  3525  004A7E  BF9F               	btfsc	(regresarPuntoPartida@i+1)& (0+255),7,b
  3526  004A80  EF46  F025         	goto	u11620
  3527  004A84  EF44  F025         	goto	u11621
  3528  004A88                     u11621:
  3529  004A88  EF04  F025         	goto	l10363
  3530  004A8C                     u11620:
  3531  004A8C                     l465:
  3532                           
  3533                           ; BSR set to: 0
  3534  004A8C  0012               	return		;funcret
  3535  004A8E                     __end_of_regresarPuntoPartida:
  3536                           	opt callstack 0
  3537                           
  3538 ;; *************** function _regresarAlCruce *****************
  3539 ;; Defined at:
  3540 ;;		line 689 in file "main.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3543 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
  3544 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  i               2   62[BANK0 ] int 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3556 ;;      Params:         0       4       0       0       0       0       0       0       0
  3557 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3558 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3559 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3560 ;;Total ram usage:        7 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    6
  3563 ;; This function calls:
  3564 ;;		_PID
  3565 ;;		_mover
  3566 ;;		_velocidadEstandar
  3567 ;; This function is called by:
  3568 ;;		_comportamientoBasico
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text7
  3573  00465E                     __ptext7:
  3574                           	opt callstack 0
  3575  00465E                     _regresarAlCruce:
  3576                           	opt callstack 23
  3577  00465E                     
  3578                           ;main.c: 691:     for (T_INT i = numMovimientos - 1; i > 1; i--) {
  3579  00465E  0EFF               	movlw	255
  3580  004660  0100               	movlb	0	; () banked
  3581  004662  259C               	addwf	regresarAlCruce@numMovimientos& (0+255),w,b
  3582  004664  6F9E               	movwf	regresarAlCruce@i& (0+255),b
  3583  004666  0EFF               	movlw	255
  3584  004668  219D               	addwfc	(regresarAlCruce@numMovimientos+1)& (0+255),w,b
  3585  00466A  6F9F               	movwf	(regresarAlCruce@i+1)& (0+255),b
  3586  00466C  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3587  00466E  EF44  F023         	goto	u11550
  3588  004672  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3589  004674  E107               	bnz	u11551
  3590  004676  0E02               	movlw	2
  3591  004678  5D9E               	subwf	regresarAlCruce@i& (0+255),w,b
  3592  00467A  B0D8               	btfsc	status,0,c
  3593  00467C  EF42  F023         	goto	u11551
  3594  004680  EF44  F023         	goto	u11550
  3595  004684                     u11551:
  3596  004684  EF46  F023         	goto	l10337
  3597  004688                     u11550:
  3598  004688  EF8F  F023         	goto	l474
  3599  00468C                     l10337:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;main.c: 695:         if (movimientos[i] == IZQUIERDA) {
  3603  00468C  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3604  00468E  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3605  004690  6ED9               	movwf	fsr2l,c
  3606  004692  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3607  004694  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3608  004696  6EDA               	movwf	fsr2h,c
  3609  004698  0E02               	movlw	2
  3610  00469A  18DE               	xorwf	postinc2,w,c
  3611  00469C  A4D8               	btfss	status,2,c
  3612  00469E  EF53  F023         	goto	u11561
  3613  0046A2  EF55  F023         	goto	u11560
  3614  0046A6                     u11561:
  3615  0046A6  EF5B  F023         	goto	l10343
  3616  0046AA                     u11560:
  3617  0046AA                     
  3618                           ; BSR set to: 0
  3619                           ;main.c: 696:             velocidadEstandar();
  3620  0046AA  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  3621  0046AE                     
  3622                           ;main.c: 697:             mouse.curr_state = DERECHA;
  3623  0046AE  0E03               	movlw	3
  3624  0046B0  6E57               	movwf	_mouse^0,c
  3625                           
  3626                           ;main.c: 698:         } else if (movimientos[i] == DERECHA) {
  3627  0046B2  EF7B  F023         	goto	l10353
  3628  0046B6                     l10343:
  3629                           
  3630                           ; BSR set to: 0
  3631  0046B6  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3632  0046B8  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3633  0046BA  6ED9               	movwf	fsr2l,c
  3634  0046BC  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3635  0046BE  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3636  0046C0  6EDA               	movwf	fsr2h,c
  3637  0046C2  0E03               	movlw	3
  3638  0046C4  18DE               	xorwf	postinc2,w,c
  3639  0046C6  A4D8               	btfss	status,2,c
  3640  0046C8  EF68  F023         	goto	u11571
  3641  0046CC  EF6A  F023         	goto	u11570
  3642  0046D0                     u11571:
  3643  0046D0  EF70  F023         	goto	l10349
  3644  0046D4                     u11570:
  3645  0046D4                     
  3646                           ; BSR set to: 0
  3647                           ;main.c: 699:             velocidadEstandar();
  3648  0046D4  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  3649  0046D8                     
  3650                           ;main.c: 700:             mouse.curr_state = IZQUIERDA;
  3651  0046D8  0E02               	movlw	2
  3652  0046DA  6E57               	movwf	_mouse^0,c
  3653                           
  3654                           ;main.c: 701:         } else {
  3655  0046DC  EF7B  F023         	goto	l10353
  3656  0046E0                     l10349:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;main.c: 703:             PID();
  3660  0046E0  EC0E  F017         	call	_PID	;wreg free
  3661  0046E4                     
  3662                           ;main.c: 704:             mouse.curr_state = movimientos[i];
  3663  0046E4  0100               	movlb	0	; () banked
  3664  0046E6  519E               	movf	regresarAlCruce@i& (0+255),w,b
  3665  0046E8  259A               	addwf	regresarAlCruce@movimientos& (0+255),w,b
  3666  0046EA  6ED9               	movwf	fsr2l,c
  3667  0046EC  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3668  0046EE  219B               	addwfc	(regresarAlCruce@movimientos+1)& (0+255),w,b
  3669  0046F0  6EDA               	movwf	fsr2h,c
  3670  0046F2  50DF               	movf	indf2,w,c
  3671  0046F4  6E57               	movwf	_mouse^0,c
  3672  0046F6                     l10353:
  3673                           
  3674                           ;main.c: 707:         mover();
  3675  0046F6  EC47  F025         	call	_mover	;wreg free
  3676  0046FA                     
  3677                           ;main.c: 708:     }
  3678  0046FA  0100               	movlb	0	; () banked
  3679  0046FC  079E               	decf	regresarAlCruce@i& (0+255),f,b
  3680  0046FE  A0D8               	btfss	status,0,c
  3681  004700  079F               	decf	(regresarAlCruce@i+1)& (0+255),f,b
  3682  004702                     
  3683                           ; BSR set to: 0
  3684  004702  BF9F               	btfsc	(regresarAlCruce@i+1)& (0+255),7,b
  3685  004704  EF8F  F023         	goto	u11580
  3686  004708  519F               	movf	(regresarAlCruce@i+1)& (0+255),w,b
  3687  00470A  E107               	bnz	u11581
  3688  00470C  0E02               	movlw	2
  3689  00470E  5D9E               	subwf	regresarAlCruce@i& (0+255),w,b
  3690  004710  B0D8               	btfsc	status,0,c
  3691  004712  EF8D  F023         	goto	u11581
  3692  004716  EF8F  F023         	goto	u11580
  3693  00471A                     u11581:
  3694  00471A  EF46  F023         	goto	l10337
  3695  00471E                     u11580:
  3696  00471E                     l474:
  3697                           
  3698                           ; BSR set to: 0
  3699  00471E  0012               	return		;funcret
  3700  004720                     __end_of_regresarAlCruce:
  3701                           	opt callstack 0
  3702                           
  3703 ;; *************** function _recorrerCaminoEncontrado *****************
  3704 ;; Defined at:
  3705 ;;		line 711 in file "main.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  movimientos     2   58[BANK0 ] PTR unsigned char 
  3708 ;;		 -> comportamientoBasico@caminoFinal(1000), 
  3709 ;;  numMovimient    2   60[BANK0 ] unsigned int 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  i               2   62[BANK0 ] int 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3721 ;;      Params:         0       4       0       0       0       0       0       0       0
  3722 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3723 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3724 ;;      Totals:         1       6       0       0       0       0       0       0       0
  3725 ;;Total ram usage:        7 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    6
  3728 ;; This function calls:
  3729 ;;		_PID
  3730 ;;		_mover
  3731 ;;		_velocidadEstandar
  3732 ;; This function is called by:
  3733 ;;		_comportamientoBasico
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text8
  3738  004BBE                     __ptext8:
  3739                           	opt callstack 0
  3740  004BBE                     _recorrerCaminoEncontrado:
  3741                           	opt callstack 23
  3742  004BBE                     
  3743                           ;main.c: 713:     for (T_INT i = 0; i < numMovimientos; i++) {
  3744  004BBE  0E00               	movlw	0
  3745  004BC0  0100               	movlb	0	; () banked
  3746  004BC2  6F9F               	movwf	(recorrerCaminoEncontrado@i+1)& (0+255),b
  3747  004BC4  0E00               	movlw	0
  3748  004BC6  6F9E               	movwf	recorrerCaminoEncontrado@i& (0+255),b
  3749  004BC8  EF18  F026         	goto	l10407
  3750  004BCC                     l10393:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;main.c: 715:         if (movimientos[i] == IZQUIERDA || movimientos[i] == DERECHA)
  3754  004BCC  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3755  004BCE  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3756  004BD0  6ED9               	movwf	fsr2l,c
  3757  004BD2  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3758  004BD4  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3759  004BD6  6EDA               	movwf	fsr2h,c
  3760  004BD8  0E02               	movlw	2
  3761  004BDA  18DE               	xorwf	postinc2,w,c
  3762  004BDC  B4D8               	btfsc	status,2,c
  3763  004BDE  EFF3  F025         	goto	u11631
  3764  004BE2  EFF5  F025         	goto	u11630
  3765  004BE6                     u11631:
  3766  004BE6  EF04  F026         	goto	l10397
  3767  004BEA                     u11630:
  3768  004BEA                     
  3769                           ; BSR set to: 0
  3770  004BEA  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3771  004BEC  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3772  004BEE  6ED9               	movwf	fsr2l,c
  3773  004BF0  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3774  004BF2  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3775  004BF4  6EDA               	movwf	fsr2h,c
  3776  004BF6  0E03               	movlw	3
  3777  004BF8  18DE               	xorwf	postinc2,w,c
  3778  004BFA  A4D8               	btfss	status,2,c
  3779  004BFC  EF02  F026         	goto	u11641
  3780  004C00  EF04  F026         	goto	u11640
  3781  004C04                     u11641:
  3782  004C04  EF08  F026         	goto	l10399
  3783  004C08                     u11640:
  3784  004C08                     l10397:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;main.c: 716:             velocidadEstandar();
  3788  004C08  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  3789  004C0C  EF0A  F026         	goto	l10401
  3790  004C10                     l10399:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;main.c: 719:             PID();
  3794  004C10  EC0E  F017         	call	_PID	;wreg free
  3795  004C14                     l10401:
  3796                           
  3797                           ;main.c: 721:         mouse.curr_state = movimientos[i];
  3798  004C14  0100               	movlb	0	; () banked
  3799  004C16  519E               	movf	recorrerCaminoEncontrado@i& (0+255),w,b
  3800  004C18  259A               	addwf	recorrerCaminoEncontrado@movimientos& (0+255),w,b
  3801  004C1A  6ED9               	movwf	fsr2l,c
  3802  004C1C  519F               	movf	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3803  004C1E  219B               	addwfc	(recorrerCaminoEncontrado@movimientos+1)& (0+255),w,b
  3804  004C20  6EDA               	movwf	fsr2h,c
  3805  004C22  50DF               	movf	indf2,w,c
  3806  004C24  6E57               	movwf	_mouse^0,c
  3807  004C26                     
  3808                           ; BSR set to: 0
  3809                           ;main.c: 722:         mover();
  3810  004C26  EC47  F025         	call	_mover	;wreg free
  3811  004C2A                     
  3812                           ;main.c: 723:     }
  3813  004C2A  0100               	movlb	0	; () banked
  3814  004C2C  4B9E               	infsnz	recorrerCaminoEncontrado@i& (0+255),f,b
  3815  004C2E  2B9F               	incf	(recorrerCaminoEncontrado@i+1)& (0+255),f,b
  3816  004C30                     l10407:
  3817                           
  3818                           ; BSR set to: 0
  3819  004C30  519C               	movf	recorrerCaminoEncontrado@numMovimientos& (0+255),w,b
  3820  004C32  5D9E               	subwf	recorrerCaminoEncontrado@i& (0+255),w,b
  3821  004C34  519D               	movf	(recorrerCaminoEncontrado@numMovimientos+1)& (0+255),w,b
  3822  004C36  599F               	subwfb	(recorrerCaminoEncontrado@i+1)& (0+255),w,b
  3823  004C38  A0D8               	btfss	status,0,c
  3824  004C3A  EF21  F026         	goto	u11651
  3825  004C3E  EF23  F026         	goto	u11650
  3826  004C42                     u11651:
  3827  004C42  EFE6  F025         	goto	l10393
  3828  004C46                     u11650:
  3829  004C46                     
  3830                           ; BSR set to: 0
  3831  004C46  0012               	return		;funcret
  3832  004C48                     __end_of_recorrerCaminoEncontrado:
  3833                           	opt callstack 0
  3834                           
  3835 ;; *************** function _mover *****************
  3836 ;; Defined at:
  3837 ;;		line 614 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    3
  3858 ;; This function calls:
  3859 ;;		_forzarAvanceRecto
  3860 ;; This function is called by:
  3861 ;;		_regresarPuntoPartida
  3862 ;;		_regresarAlCruce
  3863 ;;		_recorrerCaminoEncontrado
  3864 ;;		_probarGirosAuto
  3865 ;;		_probarPID
  3866 ;;		_probarCruceT
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text9
  3871  004A8E                     __ptext9:
  3872                           	opt callstack 0
  3873  004A8E                     _mover:
  3874                           	opt callstack 25
  3875  004A8E                     
  3876                           ;main.c: 616:     switch (mouse.curr_state) {
  3877  004A8E  EF76  F025         	goto	l9787
  3878  004A92                     l450:
  3879                           
  3880                           ;main.c: 620:             LATB4 = 1;
  3881  004A92  888A               	bsf	3978,4,c	;volatile
  3882                           
  3883                           ;main.c: 621:             LATB5 = 0;
  3884  004A94  9A8A               	bcf	3978,5,c	;volatile
  3885                           
  3886                           ;main.c: 622:             LATB6 = 1;
  3887  004A96  8C8A               	bsf	3978,6,c	;volatile
  3888                           
  3889                           ;main.c: 625:             if (!0)
  3890  004A98  9E8A               	bcf	3978,7,c	;volatile
  3891  004A9A                     
  3892                           ;main.c: 626:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  3893  004A9A  0E48               	movlw	72
  3894  004A9C  6E08               	movwf	??_mover^0,c
  3895  004A9E  0E6C               	movlw	108
  3896  004AA0                     u12007:
  3897  004AA0  2EE8               	decfsz	wreg,f,c
  3898  004AA2  D7FE               	bra	u12007
  3899  004AA4  2E08               	decfsz	??_mover^0,f,c
  3900  004AA6  D7FC               	bra	u12007
  3901  004AA8  D000               	nop2	
  3902  004AAA  EF93  F025         	goto	l456
  3903  004AAE                     l453:
  3904                           
  3905                           ;main.c: 632:             LATB4 = 0;
  3906  004AAE  988A               	bcf	3978,4,c	;volatile
  3907                           
  3908                           ;main.c: 633:             LATB5 = 0;
  3909  004AB0  9A8A               	bcf	3978,5,c	;volatile
  3910                           
  3911                           ;main.c: 634:             LATB6 = 1;
  3912  004AB2  8C8A               	bsf	3978,6,c	;volatile
  3913                           
  3914                           ;main.c: 635:             LATB7 = 0;
  3915  004AB4  9E8A               	bcf	3978,7,c	;volatile
  3916  004AB6                     l9777:
  3917                           
  3918                           ;main.c: 637:             _delay((unsigned long)((410)*(4000000/4000.0)));
  3919  004AB6  0E03               	movlw	3
  3920  004AB8  6E09               	movwf	(??_mover+1)^0,c
  3921  004ABA  0E15               	movlw	21
  3922  004ABC  6E08               	movwf	??_mover^0,c
  3923  004ABE  0E74               	movlw	116
  3924  004AC0                     u12017:
  3925  004AC0  2EE8               	decfsz	wreg,f,c
  3926  004AC2  D7FE               	bra	u12017
  3927  004AC4  2E08               	decfsz	??_mover^0,f,c
  3928  004AC6  D7FC               	bra	u12017
  3929  004AC8  2E09               	decfsz	(??_mover+1)^0,f,c
  3930  004ACA  D7FA               	bra	u12017
  3931  004ACC                     
  3932                           ;main.c: 639:             forzarAvanceRecto();
  3933  004ACC  EC45  F02B         	call	_forzarAvanceRecto	;wreg free
  3934                           
  3935                           ;main.c: 641:             break;
  3936  004AD0  EF93  F025         	goto	l456
  3937  004AD4                     l454:
  3938                           
  3939                           ;main.c: 645:             LATB4 = 1;
  3940  004AD4  888A               	bsf	3978,4,c	;volatile
  3941                           
  3942                           ;main.c: 646:             LATB5 = 0;
  3943  004AD6  9A8A               	bcf	3978,5,c	;volatile
  3944                           
  3945                           ;main.c: 647:             LATB6 = 0;
  3946  004AD8  9C8A               	bcf	3978,6,c	;volatile
  3947                           
  3948                           ;main.c: 648:             LATB7 = 0;
  3949  004ADA  9E8A               	bcf	3978,7,c	;volatile
  3950  004ADC  EF5B  F025         	goto	l9777
  3951  004AE0                     l455:
  3952                           
  3953                           ;main.c: 658:             LATB4 = 0;
  3954  004AE0  988A               	bcf	3978,4,c	;volatile
  3955                           
  3956                           ;main.c: 659:             LATB5 = 0;
  3957  004AE2  9A8A               	bcf	3978,5,c	;volatile
  3958                           
  3959                           ;main.c: 660:             LATB6 = 0;
  3960  004AE4  9C8A               	bcf	3978,6,c	;volatile
  3961                           
  3962                           ;main.c: 661:             LATB7 = 0;
  3963  004AE6  9E8A               	bcf	3978,7,c	;volatile
  3964                           
  3965                           ;main.c: 663:             break;
  3966  004AE8  EF93  F025         	goto	l456
  3967  004AEC                     l9787:
  3968  004AEC  5057               	movf	_mouse^0,w,c
  3969  004AEE  6E08               	movwf	??_mover^0,c
  3970  004AF0  6A09               	clrf	(??_mover+1)^0,c
  3971                           
  3972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3973                           ; Switch size 1, requested type "simple"
  3974                           ; Number of cases is 1, Range of values is 0 to 0
  3975                           ; switch strategies available:
  3976                           ; Name         Instructions Cycles
  3977                           ; simple_byte            4     3 (average)
  3978                           ;	Chosen strategy is simple_byte
  3979  004AF2  5009               	movf	(??_mover+1)^0,w,c
  3980  004AF4  0A00               	xorlw	0	; case 0
  3981  004AF6  B4D8               	btfsc	status,2,c
  3982  004AF8  EF80  F025         	goto	l11163
  3983  004AFC  EF93  F025         	goto	l456
  3984  004B00                     l11163:
  3985                           
  3986                           ; Switch size 1, requested type "simple"
  3987                           ; Number of cases is 4, Range of values is 1 to 4
  3988                           ; switch strategies available:
  3989                           ; Name         Instructions Cycles
  3990                           ; simple_byte           13     7 (average)
  3991                           ;	Chosen strategy is simple_byte
  3992  004B00  5008               	movf	??_mover^0,w,c
  3993  004B02  0A01               	xorlw	1	; case 1
  3994  004B04  B4D8               	btfsc	status,2,c
  3995  004B06  EF49  F025         	goto	l450
  3996  004B0A  0A03               	xorlw	3	; case 2
  3997  004B0C  B4D8               	btfsc	status,2,c
  3998  004B0E  EF57  F025         	goto	l453
  3999  004B12  0A01               	xorlw	1	; case 3
  4000  004B14  B4D8               	btfsc	status,2,c
  4001  004B16  EF6A  F025         	goto	l454
  4002  004B1A  0A07               	xorlw	7	; case 4
  4003  004B1C  B4D8               	btfsc	status,2,c
  4004  004B1E  EF70  F025         	goto	l455
  4005  004B22  EF93  F025         	goto	l456
  4006  004B26                     l456:
  4007  004B26  0012               	return		;funcret
  4008  004B28                     __end_of_mover:
  4009                           	opt callstack 0
  4010                           
  4011 ;; *************** function _PID *****************
  4012 ;; Defined at:
  4013 ;;		line 1257 in file "main.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  error           2   56[BANK0 ] int 
  4018 ;;  dif             2   54[BANK0 ] int 
  4019 ;;  velocidadDer    2   50[BANK0 ] int 
  4020 ;;  velocidadIzq    2   46[BANK0 ] int 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4030 ;;      Params:         0       0       0       0       0       0       0       0       0
  4031 ;;      Locals:         0      16       0       0       0       0       0       0       0
  4032 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4033 ;;      Totals:         0      18       0       0       0       0       0       0       0
  4034 ;;Total ram usage:       18 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    5
  4037 ;; This function calls:
  4038 ;;		___fladd
  4039 ;;		___flmul
  4040 ;;		___flsub
  4041 ;;		___fltol
  4042 ;;		___xxtofl
  4043 ;;		_pwmDuty
  4044 ;;		_roundf
  4045 ;; This function is called by:
  4046 ;;		_comportamientoBasico
  4047 ;;		_regresarPuntoPartida
  4048 ;;		_regresarAlCruce
  4049 ;;		_recorrerCaminoEncontrado
  4050 ;;		_probarPID
  4051 ;;		_probarCruceT
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text10
  4056  002E1C                     __ptext10:
  4057                           	opt callstack 0
  4058  002E1C                     _PID:
  4059                           	opt callstack 23
  4060  002E1C                     
  4061                           ;main.c: 1260:     T_INT error = 0;
  4062  002E1C  0E00               	movlw	0
  4063  002E1E  0100               	movlb	0	; () banked
  4064  002E20  6F99               	movwf	(PID@error+1)& (0+255),b
  4065  002E22  0E00               	movlw	0
  4066  002E24  6F98               	movwf	PID@error& (0+255),b
  4067  002E26                     
  4068                           ; BSR set to: 0
  4069                           ;main.c: 1261:     static T_INT difAnt = 0;;main.c: 1264:     dif = sensorIzquierda - se
      +                          nsorDerecha;
  4070  002E26  C12C  F048         	movff	_sensorDerecha,___flsub@a
  4071  002E2A  C12D  F049         	movff	_sensorDerecha+1,___flsub@a+1
  4072  002E2E  C12E  F04A         	movff	_sensorDerecha+2,___flsub@a+2
  4073  002E32  C12F  F04B         	movff	_sensorDerecha+3,___flsub@a+3
  4074  002E36  C128  F044         	movff	_sensorIzquierda,___flsub@b
  4075  002E3A  C129  F045         	movff	_sensorIzquierda+1,___flsub@b+1
  4076  002E3E  C12A  F046         	movff	_sensorIzquierda+2,___flsub@b+2
  4077  002E42  C12B  F047         	movff	_sensorIzquierda+3,___flsub@b+3
  4078  002E46  ECBB  F029         	call	___flsub	;wreg free
  4079  002E4A  C044  F072         	movff	?___flsub,___fltol@f1
  4080  002E4E  C045  F073         	movff	?___flsub+1,___fltol@f1+1
  4081  002E52  C046  F074         	movff	?___flsub+2,___fltol@f1+2
  4082  002E56  C047  F075         	movff	?___flsub+3,___fltol@f1+3
  4083  002E5A  ECF5  F01F         	call	___fltol	;wreg free
  4084  002E5E  C072  F096         	movff	?___fltol,PID@dif
  4085  002E62  C073  F097         	movff	?___fltol+1,PID@dif+1
  4086  002E66                     
  4087                           ;main.c: 1266:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  4088  002E66  0ECD               	movlw	205
  4089  002E68  6E1F               	movwf	___flmul@a^0,c
  4090  002E6A  0ECC               	movlw	204
  4091  002E6C  6E20               	movwf	(___flmul@a+1)^0,c
  4092  002E6E  0ECC               	movlw	204
  4093  002E70  6E21               	movwf	(___flmul@a+2)^0,c
  4094  002E72  0E3D               	movlw	61
  4095  002E74  6E22               	movwf	(___flmul@a+3)^0,c
  4096  002E76  0100               	movlb	0	; () banked
  4097  002E78  5196               	movf	PID@dif& (0+255),w,b
  4098  002E7A  0101               	movlb	1	; () banked
  4099  002E7C  5D36               	subwf	PID@difAnt& (0+255),w,b
  4100  002E7E  0100               	movlb	0	; () banked
  4101  002E80  6F88               	movwf	??_PID& (0+255),b
  4102  002E82  5197               	movf	(PID@dif+1)& (0+255),w,b
  4103  002E84  0101               	movlb	1	; () banked
  4104  002E86  5937               	subwfb	(PID@difAnt+1)& (0+255),w,b
  4105  002E88  0100               	movlb	0	; () banked
  4106  002E8A  6F89               	movwf	(??_PID+1)& (0+255),b
  4107  002E8C  C088  F00D         	movff	??_PID,___xxtofl@val
  4108  002E90  C089  F00E         	movff	??_PID+1,___xxtofl@val+1
  4109  002E94  0E00               	movlw	0
  4110  002E96  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  4111  002E98  0EFF               	movlw	-1
  4112  002E9A  6E0F               	movwf	(___xxtofl@val+2)^0,c
  4113  002E9C  6E10               	movwf	(___xxtofl@val+3)^0,c
  4114  002E9E  0E01               	movlw	1
  4115  002EA0  EC20  F01A         	call	___xxtofl
  4116  002EA4  C00D  F01B         	movff	?___xxtofl,___flmul@b
  4117  002EA8  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  4118  002EAC  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  4119  002EB0  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  4120  002EB4  ECE0  F00D         	call	___flmul	;wreg free
  4121  002EB8  C01B  F038         	movff	?___flmul,___fladd@a
  4122  002EBC  C01C  F039         	movff	?___flmul+1,___fladd@a+1
  4123  002EC0  C01D  F03A         	movff	?___flmul+2,___fladd@a+2
  4124  002EC4  C01E  F03B         	movff	?___flmul+3,___fladd@a+3
  4125  002EC8  0E66               	movlw	102
  4126  002ECA  6E1F               	movwf	___flmul@a^0,c
  4127  002ECC  0E66               	movlw	102
  4128  002ECE  6E20               	movwf	(___flmul@a+1)^0,c
  4129  002ED0  0E66               	movlw	102
  4130  002ED2  6E21               	movwf	(___flmul@a+2)^0,c
  4131  002ED4  0E3F               	movlw	63
  4132  002ED6  6E22               	movwf	(___flmul@a+3)^0,c
  4133  002ED8  C096  F00D         	movff	PID@dif,___xxtofl@val
  4134  002EDC  C097  F00E         	movff	PID@dif+1,___xxtofl@val+1
  4135  002EE0  0E00               	movlw	0
  4136  002EE2  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  4137  002EE4  0EFF               	movlw	-1
  4138  002EE6  6E0F               	movwf	(___xxtofl@val+2)^0,c
  4139  002EE8  6E10               	movwf	(___xxtofl@val+3)^0,c
  4140  002EEA  0E01               	movlw	1
  4141  002EEC  EC20  F01A         	call	___xxtofl
  4142  002EF0  C00D  F01B         	movff	?___xxtofl,___flmul@b
  4143  002EF4  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  4144  002EF8  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  4145  002EFC  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  4146  002F00  ECE0  F00D         	call	___flmul	;wreg free
  4147  002F04  C01B  F034         	movff	?___flmul,___fladd@b
  4148  002F08  C01C  F035         	movff	?___flmul+1,___fladd@b+1
  4149  002F0C  C01D  F036         	movff	?___flmul+2,___fladd@b+2
  4150  002F10  C01E  F037         	movff	?___flmul+3,___fladd@b+3
  4151  002F14  EC80  F00B         	call	___fladd	;wreg free
  4152  002F18  C034  F08A         	movff	?___fladd,_PID$1842
  4153  002F1C  C035  F08B         	movff	?___fladd+1,_PID$1842+1
  4154  002F20  C036  F08C         	movff	?___fladd+2,_PID$1842+2
  4155  002F24  C037  F08D         	movff	?___fladd+3,_PID$1842+3
  4156  002F28                     
  4157                           ;main.c: 1266:     error = roundf(0.9 * (dif) + 0.1 * (difAnt - dif));
  4158  002F28  C08A  F04C         	movff	_PID$1842,roundf@x
  4159  002F2C  C08B  F04D         	movff	_PID$1842+1,roundf@x+1
  4160  002F30  C08C  F04E         	movff	_PID$1842+2,roundf@x+2
  4161  002F34  C08D  F04F         	movff	_PID$1842+3,roundf@x+3
  4162  002F38  ECF8  F011         	call	_roundf	;wreg free
  4163  002F3C  C04C  F072         	movff	?_roundf,___fltol@f1
  4164  002F40  C04D  F073         	movff	?_roundf+1,___fltol@f1+1
  4165  002F44  C04E  F074         	movff	?_roundf+2,___fltol@f1+2
  4166  002F48  C04F  F075         	movff	?_roundf+3,___fltol@f1+3
  4167  002F4C  ECF5  F01F         	call	___fltol	;wreg free
  4168  002F50  C072  F098         	movff	?___fltol,PID@error
  4169  002F54  C073  F099         	movff	?___fltol+1,PID@error+1
  4170  002F58                     
  4171                           ;main.c: 1268:     difAnt = dif;
  4172  002F58  C096  F136         	movff	PID@dif,PID@difAnt
  4173  002F5C  C097  F137         	movff	PID@dif+1,PID@difAnt+1
  4174  002F60                     
  4175                           ;main.c: 1270:     T_INT velocidadIzquierda = ((100 - error)<(0)?(0):((100 - error)>(100
      +                          )?(100):(100 - error)));
  4176  002F60  0E64               	movlw	100
  4177  002F62  0100               	movlb	0	; () banked
  4178  002F64  6F88               	movwf	??_PID& (0+255),b
  4179  002F66  0E00               	movlw	0
  4180  002F68  6F89               	movwf	(??_PID+1)& (0+255),b
  4181  002F6A  5198               	movf	PID@error& (0+255),w,b
  4182  002F6C  5D88               	subwf	??_PID& (0+255),w,b
  4183  002F6E  5199               	movf	(PID@error+1)& (0+255),w,b
  4184  002F70  5989               	subwfb	(??_PID+1)& (0+255),w,b
  4185  002F72  0B80               	andlw	128
  4186  002F74  A4D8               	btfss	status,2,c
  4187  002F76  EFBF  F017         	goto	u11111
  4188  002F7A  EFC1  F017         	goto	u11110
  4189  002F7E                     u11111:
  4190  002F7E  EFEB  F017         	goto	l9835
  4191  002F82                     u11110:
  4192  002F82                     
  4193                           ; BSR set to: 0
  4194  002F82  0E64               	movlw	100
  4195  002F84  6F88               	movwf	??_PID& (0+255),b
  4196  002F86  0E00               	movlw	0
  4197  002F88  6F89               	movwf	(??_PID+1)& (0+255),b
  4198  002F8A  5198               	movf	PID@error& (0+255),w,b
  4199  002F8C  5F88               	subwf	??_PID& (0+255),f,b
  4200  002F8E  5199               	movf	(PID@error+1)& (0+255),w,b
  4201  002F90  5B89               	subwfb	(??_PID+1)& (0+255),f,b
  4202  002F92  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4203  002F94  EFD7  F017         	goto	u11120
  4204  002F98  5189               	movf	(??_PID+1)& (0+255),w,b
  4205  002F9A  E107               	bnz	u11121
  4206  002F9C  0E65               	movlw	101
  4207  002F9E  5D88               	subwf	??_PID& (0+255),w,b
  4208  002FA0  B0D8               	btfsc	status,0,c
  4209  002FA2  EFD5  F017         	goto	u11121
  4210  002FA6  EFD7  F017         	goto	u11120
  4211  002FAA                     u11121:
  4212  002FAA  EFE1  F017         	goto	l9831
  4213  002FAE                     u11120:
  4214  002FAE                     
  4215                           ; BSR set to: 0
  4216  002FAE  5198               	movf	PID@error& (0+255),w,b
  4217  002FB0  0864               	sublw	100
  4218  002FB2  6F90               	movwf	_PID$760& (0+255),b
  4219  002FB4  5199               	movf	(PID@error+1)& (0+255),w,b
  4220  002FB6  A0D8               	btfss	status,0,c
  4221  002FB8  2AE8               	incf	wreg,f,c
  4222  002FBA  0800               	sublw	0
  4223  002FBC  6F91               	movwf	(_PID$760+1)& (0+255),b
  4224  002FBE  EFE5  F017         	goto	l9833
  4225  002FC2                     l9831:
  4226                           
  4227                           ; BSR set to: 0
  4228  002FC2  0E00               	movlw	0
  4229  002FC4  6F91               	movwf	(_PID$760+1)& (0+255),b
  4230  002FC6  0E64               	movlw	100
  4231  002FC8  6F90               	movwf	_PID$760& (0+255),b
  4232  002FCA                     l9833:
  4233                           
  4234                           ; BSR set to: 0
  4235  002FCA  C090  F08E         	movff	_PID$760,PID@velocidadIzquierda
  4236  002FCE  C091  F08F         	movff	_PID$760+1,PID@velocidadIzquierda+1
  4237  002FD2  EFEF  F017         	goto	l9837
  4238  002FD6                     l9835:
  4239                           
  4240                           ; BSR set to: 0
  4241  002FD6  0E00               	movlw	0
  4242  002FD8  6F8F               	movwf	(PID@velocidadIzquierda+1)& (0+255),b
  4243  002FDA  0E00               	movlw	0
  4244  002FDC  6F8E               	movwf	PID@velocidadIzquierda& (0+255),b
  4245  002FDE                     l9837:
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;main.c: 1271:     T_INT velocidadDerecha = ((100 + error)<(0)?(0):((100 + error)>(100)?
      +                          (100):(100 + error)));
  4249  002FDE  0E64               	movlw	100
  4250  002FE0  2598               	addwf	PID@error& (0+255),w,b
  4251  002FE2  0E00               	movlw	0
  4252  002FE4  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4253  002FE6  0B80               	andlw	128
  4254  002FE8  A4D8               	btfss	status,2,c
  4255  002FEA  EFF9  F017         	goto	u11131
  4256  002FEE  EFFB  F017         	goto	u11130
  4257  002FF2                     u11131:
  4258  002FF2  EF21  F018         	goto	l9847
  4259  002FF6                     u11130:
  4260  002FF6                     
  4261                           ; BSR set to: 0
  4262  002FF6  0E64               	movlw	100
  4263  002FF8  2598               	addwf	PID@error& (0+255),w,b
  4264  002FFA  6F88               	movwf	??_PID& (0+255),b
  4265  002FFC  0E00               	movlw	0
  4266  002FFE  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4267  003000  6F89               	movwf	(??_PID+1)& (0+255),b
  4268  003002  BF89               	btfsc	(??_PID+1)& (0+255),7,b
  4269  003004  EF0F  F018         	goto	u11140
  4270  003008  5189               	movf	(??_PID+1)& (0+255),w,b
  4271  00300A  E107               	bnz	u11141
  4272  00300C  0E65               	movlw	101
  4273  00300E  5D88               	subwf	??_PID& (0+255),w,b
  4274  003010  B0D8               	btfsc	status,0,c
  4275  003012  EF0D  F018         	goto	u11141
  4276  003016  EF0F  F018         	goto	u11140
  4277  00301A                     u11141:
  4278  00301A  EF17  F018         	goto	l9843
  4279  00301E                     u11140:
  4280  00301E                     
  4281                           ; BSR set to: 0
  4282  00301E  0E64               	movlw	100
  4283  003020  2598               	addwf	PID@error& (0+255),w,b
  4284  003022  6F94               	movwf	_PID$762& (0+255),b
  4285  003024  0E00               	movlw	0
  4286  003026  2199               	addwfc	(PID@error+1)& (0+255),w,b
  4287  003028  6F95               	movwf	(_PID$762+1)& (0+255),b
  4288  00302A  EF1B  F018         	goto	l9845
  4289  00302E                     l9843:
  4290                           
  4291                           ; BSR set to: 0
  4292  00302E  0E00               	movlw	0
  4293  003030  6F95               	movwf	(_PID$762+1)& (0+255),b
  4294  003032  0E64               	movlw	100
  4295  003034  6F94               	movwf	_PID$762& (0+255),b
  4296  003036                     l9845:
  4297                           
  4298                           ; BSR set to: 0
  4299  003036  C094  F092         	movff	_PID$762,PID@velocidadDerecha
  4300  00303A  C095  F093         	movff	_PID$762+1,PID@velocidadDerecha+1
  4301  00303E  EF25  F018         	goto	l9849
  4302  003042                     l9847:
  4303                           
  4304                           ; BSR set to: 0
  4305  003042  0E00               	movlw	0
  4306  003044  6F93               	movwf	(PID@velocidadDerecha+1)& (0+255),b
  4307  003046  0E00               	movlw	0
  4308  003048  6F92               	movwf	PID@velocidadDerecha& (0+255),b
  4309  00304A                     l9849:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;main.c: 1273:     pwmDuty(velocidadIzquierda, 1);
  4313  00304A  C08E  F07C         	movff	PID@velocidadIzquierda,pwmDuty@cicloTrabajo
  4314  00304E  C08F  F07D         	movff	PID@velocidadIzquierda+1,pwmDuty@cicloTrabajo+1
  4315  003052  0E01               	movlw	1
  4316  003054  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4317  003056  EC42  F019         	call	_pwmDuty	;wreg free
  4318  00305A                     
  4319                           ;main.c: 1274:     pwmDuty(velocidadDerecha, 2);
  4320  00305A  C092  F07C         	movff	PID@velocidadDerecha,pwmDuty@cicloTrabajo
  4321  00305E  C093  F07D         	movff	PID@velocidadDerecha+1,pwmDuty@cicloTrabajo+1
  4322  003062  0E02               	movlw	2
  4323  003064  0100               	movlb	0	; () banked
  4324  003066  6F7E               	movwf	pwmDuty@channel& (0+255),b
  4325  003068  EC42  F019         	call	_pwmDuty	;wreg free
  4326  00306C  0012               	return		;funcret
  4327  00306E                     __end_of_PID:
  4328                           	opt callstack 0
  4329                           
  4330 ;; *************** function _roundf *****************
  4331 ;; Defined at:
  4332 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\roundf.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  x               4   75[COMRAM] float 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  y               4   14[BANK0 ] float 
  4337 ;;  u               4   10[BANK0 ] struct .
  4338 ;;  e               2    4[BANK0 ] int 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  4   75[COMRAM] float 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4348 ;;      Params:         4       0       0       0       0       0       0       0       0
  4349 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4350 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4351 ;;      Totals:         8      18       0       0       0       0       0       0       0
  4352 ;;Total ram usage:       26 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    4
  4355 ;; This function calls:
  4356 ;;		___fladd
  4357 ;;		___flge
  4358 ;;		___flmul
  4359 ;;		___flneg
  4360 ;;		___flsub
  4361 ;; This function is called by:
  4362 ;;		_PID
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text11
  4367  0023F0                     __ptext11:
  4368                           	opt callstack 0
  4369  0023F0                     _roundf:
  4370                           	opt callstack 23
  4371  0023F0  C100  F06A         	movff	roundf@F525,roundf@u
  4372  0023F4  C101  F06B         	movff	roundf@F525+1,roundf@u+1
  4373  0023F8  C102  F06C         	movff	roundf@F525+2,roundf@u+2
  4374  0023FC  C103  F06D         	movff	roundf@F525+3,roundf@u+3
  4375  002400  C04C  F06A         	movff	roundf@x,roundf@u
  4376  002404  C04D  F06B         	movff	roundf@x+1,roundf@u+1
  4377  002408  C04E  F06C         	movff	roundf@x+2,roundf@u+2
  4378  00240C  C04F  F06D         	movff	roundf@x+3,roundf@u+3
  4379  002410  C06A  F050         	movff	roundf@u,??_roundf
  4380  002414  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4381  002418  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4382  00241C  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4383  002420  0E18               	movlw	24
  4384  002422  EF18  F012         	goto	u10860
  4385  002426                     u10865:
  4386  002426  90D8               	bcf	status,0,c
  4387  002428  3253               	rrcf	(??_roundf+3)^0,f,c
  4388  00242A  3252               	rrcf	(??_roundf+2)^0,f,c
  4389  00242C  3251               	rrcf	(??_roundf+1)^0,f,c
  4390  00242E  3250               	rrcf	??_roundf^0,f,c
  4391  002430                     u10860:
  4392  002430  2EE8               	decfsz	wreg,f,c
  4393  002432  EF13  F012         	goto	u10865
  4394  002436  5050               	movf	??_roundf^0,w,c
  4395  002438  0100               	movlb	0	; () banked
  4396  00243A  6F64               	movwf	roundf@e& (0+255),b
  4397  00243C  6B65               	clrf	(roundf@e+1)& (0+255),b
  4398  00243E  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4399  002440  EF2B  F012         	goto	u10871
  4400  002444  5165               	movf	(roundf@e+1)& (0+255),w,b
  4401  002446  E109               	bnz	u10870
  4402  002448  0E96               	movlw	150
  4403  00244A  5D64               	subwf	roundf@e& (0+255),w,b
  4404  00244C  A0D8               	btfss	status,0,c
  4405  00244E  EF2B  F012         	goto	u10871
  4406  002452  EF2D  F012         	goto	u10870
  4407  002456                     u10871:
  4408  002456  EF37  F012         	goto	l9669
  4409  00245A                     u10870:
  4410  00245A                     
  4411                           ; BSR set to: 0
  4412  00245A  C04C  F04C         	movff	roundf@x,?_roundf
  4413  00245E  C04D  F04D         	movff	roundf@x+1,?_roundf+1
  4414  002462  C04E  F04E         	movff	roundf@x+2,?_roundf+2
  4415  002466  C04F  F04F         	movff	roundf@x+3,?_roundf+3
  4416  00246A  EFD0  F013         	goto	l1752
  4417  00246E                     l9669:
  4418                           
  4419                           ; BSR set to: 0
  4420  00246E  C06A  F050         	movff	roundf@u,??_roundf
  4421  002472  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4422  002476  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4423  00247A  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4424  00247E  0E20               	movlw	32
  4425  002480  EF47  F012         	goto	u10880
  4426  002484                     u10885:
  4427  002484  90D8               	bcf	status,0,c
  4428  002486  3253               	rrcf	(??_roundf+3)^0,f,c
  4429  002488  3252               	rrcf	(??_roundf+2)^0,f,c
  4430  00248A  3251               	rrcf	(??_roundf+1)^0,f,c
  4431  00248C  3250               	rrcf	??_roundf^0,f,c
  4432  00248E                     u10880:
  4433  00248E  2EE8               	decfsz	wreg,f,c
  4434  002490  EF42  F012         	goto	u10885
  4435  002494  5050               	movf	??_roundf^0,w,c
  4436  002496  1051               	iorwf	(??_roundf+1)^0,w,c
  4437  002498  1052               	iorwf	(??_roundf+2)^0,w,c
  4438  00249A  1053               	iorwf	(??_roundf+3)^0,w,c
  4439  00249C  B4D8               	btfsc	status,2,c
  4440  00249E  EF53  F012         	goto	u10891
  4441  0024A2  EF55  F012         	goto	u10890
  4442  0024A6                     u10891:
  4443  0024A6  EF67  F012         	goto	l9673
  4444  0024AA                     u10890:
  4445  0024AA                     
  4446                           ; BSR set to: 0
  4447  0024AA  C04C  F006         	movff	roundf@x,___flneg@f1
  4448  0024AE  C04D  F007         	movff	roundf@x+1,___flneg@f1+1
  4449  0024B2  C04E  F008         	movff	roundf@x+2,___flneg@f1+2
  4450  0024B6  C04F  F009         	movff	roundf@x+3,___flneg@f1+3
  4451  0024BA  ECA2  F02A         	call	___flneg	;wreg free
  4452  0024BE  C006  F04C         	movff	?___flneg,roundf@x
  4453  0024C2  C007  F04D         	movff	?___flneg+1,roundf@x+1
  4454  0024C6  C008  F04E         	movff	?___flneg+2,roundf@x+2
  4455  0024CA  C009  F04F         	movff	?___flneg+3,roundf@x+3
  4456  0024CE                     l9673:
  4457  0024CE  0100               	movlb	0	; () banked
  4458  0024D0  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4459  0024D2  EF76  F012         	goto	u10900
  4460  0024D6  5165               	movf	(roundf@e+1)& (0+255),w,b
  4461  0024D8  E107               	bnz	u10901
  4462  0024DA  0E7E               	movlw	126
  4463  0024DC  5D64               	subwf	roundf@e& (0+255),w,b
  4464  0024DE  B0D8               	btfsc	status,0,c
  4465  0024E0  EF74  F012         	goto	u10901
  4466  0024E4  EF76  F012         	goto	u10900
  4467  0024E8                     u10901:
  4468  0024E8  EF92  F012         	goto	l9679
  4469  0024EC                     u10900:
  4470  0024EC                     
  4471                           ; BSR set to: 0
  4472  0024EC  C06A  F01B         	movff	roundf@u,___flmul@b
  4473  0024F0  C06B  F01C         	movff	roundf@u+1,___flmul@b+1
  4474  0024F4  C06C  F01D         	movff	roundf@u+2,___flmul@b+2
  4475  0024F8  C06D  F01E         	movff	roundf@u+3,___flmul@b+3
  4476  0024FC  0E00               	movlw	0
  4477  0024FE  6E1F               	movwf	___flmul@a^0,c
  4478  002500  0E00               	movlw	0
  4479  002502  6E20               	movwf	(___flmul@a+1)^0,c
  4480  002504  0E00               	movlw	0
  4481  002506  6E21               	movwf	(___flmul@a+2)^0,c
  4482  002508  0E00               	movlw	0
  4483  00250A  6E22               	movwf	(___flmul@a+3)^0,c
  4484  00250C  ECE0  F00D         	call	___flmul	;wreg free
  4485  002510  C01B  F04C         	movff	?___flmul,?_roundf
  4486  002514  C01C  F04D         	movff	?___flmul+1,?_roundf+1
  4487  002518  C01D  F04E         	movff	?___flmul+2,?_roundf+2
  4488  00251C  C01E  F04F         	movff	?___flmul+3,?_roundf+3
  4489  002520  EFD0  F013         	goto	l1752
  4490  002524                     l9679:
  4491                           
  4492                           ; BSR set to: 0
  4493  002524  0E00               	movlw	0
  4494  002526  6E38               	movwf	___fladd@a^0,c
  4495  002528  0E00               	movlw	0
  4496  00252A  6E39               	movwf	(___fladd@a+1)^0,c
  4497  00252C  0E00               	movlw	0
  4498  00252E  6E3A               	movwf	(___fladd@a+2)^0,c
  4499  002530  0E4B               	movlw	75
  4500  002532  6E3B               	movwf	(___fladd@a+3)^0,c
  4501  002534  C04C  F034         	movff	roundf@x,___fladd@b
  4502  002538  C04D  F035         	movff	roundf@x+1,___fladd@b+1
  4503  00253C  C04E  F036         	movff	roundf@x+2,___fladd@b+2
  4504  002540  C04F  F037         	movff	roundf@x+3,___fladd@b+3
  4505  002544  EC80  F00B         	call	___fladd	;wreg free
  4506  002548  C034  F066         	movff	?___fladd,_roundf$1843
  4507  00254C  C035  F067         	movff	?___fladd+1,_roundf$1843+1
  4508  002550  C036  F068         	movff	?___fladd+2,_roundf$1843+2
  4509  002554  C037  F069         	movff	?___fladd+3,_roundf$1843+3
  4510  002558  0E00               	movlw	0
  4511  00255A  6E38               	movwf	___fladd@a^0,c
  4512  00255C  0E00               	movlw	0
  4513  00255E  6E39               	movwf	(___fladd@a+1)^0,c
  4514  002560  0E00               	movlw	0
  4515  002562  6E3A               	movwf	(___fladd@a+2)^0,c
  4516  002564  0ECB               	movlw	203
  4517  002566  6E3B               	movwf	(___fladd@a+3)^0,c
  4518  002568  C066  F034         	movff	_roundf$1843,___fladd@b
  4519  00256C  C067  F035         	movff	_roundf$1843+1,___fladd@b+1
  4520  002570  C068  F036         	movff	_roundf$1843+2,___fladd@b+2
  4521  002574  C069  F037         	movff	_roundf$1843+3,___fladd@b+3
  4522  002578  EC80  F00B         	call	___fladd	;wreg free
  4523  00257C  C034  F060         	movff	?___fladd,_roundf$1844
  4524  002580  C035  F061         	movff	?___fladd+1,_roundf$1844+1
  4525  002584  C036  F062         	movff	?___fladd+2,_roundf$1844+2
  4526  002588  C037  F063         	movff	?___fladd+3,_roundf$1844+3
  4527  00258C  C060  F044         	movff	_roundf$1844,___flsub@b
  4528  002590  C061  F045         	movff	_roundf$1844+1,___flsub@b+1
  4529  002594  C062  F046         	movff	_roundf$1844+2,___flsub@b+2
  4530  002598  C063  F047         	movff	_roundf$1844+3,___flsub@b+3
  4531  00259C  C04C  F048         	movff	roundf@x,___flsub@a
  4532  0025A0  C04D  F049         	movff	roundf@x+1,___flsub@a+1
  4533  0025A4  C04E  F04A         	movff	roundf@x+2,___flsub@a+2
  4534  0025A8  C04F  F04B         	movff	roundf@x+3,___flsub@a+3
  4535  0025AC  ECBB  F029         	call	___flsub	;wreg free
  4536  0025B0  C044  F06E         	movff	?___flsub,roundf@y
  4537  0025B4  C045  F06F         	movff	?___flsub+1,roundf@y+1
  4538  0025B8  C046  F070         	movff	?___flsub+2,roundf@y+2
  4539  0025BC  C047  F071         	movff	?___flsub+3,roundf@y+3
  4540  0025C0  0E00               	movlw	0
  4541  0025C2  6E34               	movwf	___flge@ff1^0,c
  4542  0025C4  0E00               	movlw	0
  4543  0025C6  6E35               	movwf	(___flge@ff1+1)^0,c
  4544  0025C8  0E00               	movlw	0
  4545  0025CA  6E36               	movwf	(___flge@ff1+2)^0,c
  4546  0025CC  0E3F               	movlw	63
  4547  0025CE  6E37               	movwf	(___flge@ff1+3)^0,c
  4548  0025D0  C06E  F038         	movff	roundf@y,___flge@ff2
  4549  0025D4  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4550  0025D8  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4551  0025DC  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4552  0025E0  ECFC  F020         	call	___flge	;wreg free
  4553  0025E4  B0D8               	btfsc	status,0,c
  4554  0025E6  EFF7  F012         	goto	u10911
  4555  0025EA  EFF9  F012         	goto	u10910
  4556  0025EE                     u10911:
  4557  0025EE  EF2F  F013         	goto	l9683
  4558  0025F2                     u10910:
  4559  0025F2  C04C  F038         	movff	roundf@x,___fladd@a
  4560  0025F6  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4561  0025FA  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4562  0025FE  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4563  002602  C06E  F034         	movff	roundf@y,___fladd@b
  4564  002606  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4565  00260A  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4566  00260E  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4567  002612  EC80  F00B         	call	___fladd	;wreg free
  4568  002616  C034  F066         	movff	?___fladd,_roundf$1843
  4569  00261A  C035  F067         	movff	?___fladd+1,_roundf$1843+1
  4570  00261E  C036  F068         	movff	?___fladd+2,_roundf$1843+2
  4571  002622  C037  F069         	movff	?___fladd+3,_roundf$1843+3
  4572  002626  C066  F034         	movff	_roundf$1843,___fladd@b
  4573  00262A  C067  F035         	movff	_roundf$1843+1,___fladd@b+1
  4574  00262E  C068  F036         	movff	_roundf$1843+2,___fladd@b+2
  4575  002632  C069  F037         	movff	_roundf$1843+3,___fladd@b+3
  4576  002636  0E00               	movlw	0
  4577  002638  6E38               	movwf	___fladd@a^0,c
  4578  00263A  0E00               	movlw	0
  4579  00263C  6E39               	movwf	(___fladd@a+1)^0,c
  4580  00263E  0E80               	movlw	128
  4581  002640  6E3A               	movwf	(___fladd@a+2)^0,c
  4582  002642  0EBF               	movlw	191
  4583  002644  6E3B               	movwf	(___fladd@a+3)^0,c
  4584  002646  EC80  F00B         	call	___fladd	;wreg free
  4585  00264A  C034  F06E         	movff	?___fladd,roundf@y
  4586  00264E  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4587  002652  C036  F070         	movff	?___fladd+2,roundf@y+2
  4588  002656  C037  F071         	movff	?___fladd+3,roundf@y+3
  4589  00265A  EF98  F013         	goto	l9689
  4590  00265E                     l9683:
  4591  00265E  0E00               	movlw	0
  4592  002660  6E34               	movwf	___flge@ff1^0,c
  4593  002662  0E00               	movlw	0
  4594  002664  6E35               	movwf	(___flge@ff1+1)^0,c
  4595  002666  0E00               	movlw	0
  4596  002668  6E36               	movwf	(___flge@ff1+2)^0,c
  4597  00266A  0EBF               	movlw	191
  4598  00266C  6E37               	movwf	(___flge@ff1+3)^0,c
  4599  00266E  C06E  F038         	movff	roundf@y,___flge@ff2
  4600  002672  C06F  F039         	movff	roundf@y+1,___flge@ff2+1
  4601  002676  C070  F03A         	movff	roundf@y+2,___flge@ff2+2
  4602  00267A  C071  F03B         	movff	roundf@y+3,___flge@ff2+3
  4603  00267E  ECFC  F020         	call	___flge	;wreg free
  4604  002682  A0D8               	btfss	status,0,c
  4605  002684  EF46  F013         	goto	u10921
  4606  002688  EF48  F013         	goto	u10920
  4607  00268C                     u10921:
  4608  00268C  EF7E  F013         	goto	l9687
  4609  002690                     u10920:
  4610  002690  C04C  F038         	movff	roundf@x,___fladd@a
  4611  002694  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4612  002698  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4613  00269C  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4614  0026A0  C06E  F034         	movff	roundf@y,___fladd@b
  4615  0026A4  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4616  0026A8  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4617  0026AC  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4618  0026B0  EC80  F00B         	call	___fladd	;wreg free
  4619  0026B4  C034  F066         	movff	?___fladd,_roundf$1843
  4620  0026B8  C035  F067         	movff	?___fladd+1,_roundf$1843+1
  4621  0026BC  C036  F068         	movff	?___fladd+2,_roundf$1843+2
  4622  0026C0  C037  F069         	movff	?___fladd+3,_roundf$1843+3
  4623  0026C4  C066  F034         	movff	_roundf$1843,___fladd@b
  4624  0026C8  C067  F035         	movff	_roundf$1843+1,___fladd@b+1
  4625  0026CC  C068  F036         	movff	_roundf$1843+2,___fladd@b+2
  4626  0026D0  C069  F037         	movff	_roundf$1843+3,___fladd@b+3
  4627  0026D4  0E00               	movlw	0
  4628  0026D6  6E38               	movwf	___fladd@a^0,c
  4629  0026D8  0E00               	movlw	0
  4630  0026DA  6E39               	movwf	(___fladd@a+1)^0,c
  4631  0026DC  0E80               	movlw	128
  4632  0026DE  6E3A               	movwf	(___fladd@a+2)^0,c
  4633  0026E0  0E3F               	movlw	63
  4634  0026E2  6E3B               	movwf	(___fladd@a+3)^0,c
  4635  0026E4  EC80  F00B         	call	___fladd	;wreg free
  4636  0026E8  C034  F06E         	movff	?___fladd,roundf@y
  4637  0026EC  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4638  0026F0  C036  F070         	movff	?___fladd+2,roundf@y+2
  4639  0026F4  C037  F071         	movff	?___fladd+3,roundf@y+3
  4640  0026F8  EF98  F013         	goto	l9689
  4641  0026FC                     l9687:
  4642  0026FC  C06E  F034         	movff	roundf@y,___fladd@b
  4643  002700  C06F  F035         	movff	roundf@y+1,___fladd@b+1
  4644  002704  C070  F036         	movff	roundf@y+2,___fladd@b+2
  4645  002708  C071  F037         	movff	roundf@y+3,___fladd@b+3
  4646  00270C  C04C  F038         	movff	roundf@x,___fladd@a
  4647  002710  C04D  F039         	movff	roundf@x+1,___fladd@a+1
  4648  002714  C04E  F03A         	movff	roundf@x+2,___fladd@a+2
  4649  002718  C04F  F03B         	movff	roundf@x+3,___fladd@a+3
  4650  00271C  EC80  F00B         	call	___fladd	;wreg free
  4651  002720  C034  F06E         	movff	?___fladd,roundf@y
  4652  002724  C035  F06F         	movff	?___fladd+1,roundf@y+1
  4653  002728  C036  F070         	movff	?___fladd+2,roundf@y+2
  4654  00272C  C037  F071         	movff	?___fladd+3,roundf@y+3
  4655  002730                     l9689:
  4656  002730  C06A  F050         	movff	roundf@u,??_roundf
  4657  002734  C06B  F051         	movff	roundf@u+1,??_roundf+1
  4658  002738  C06C  F052         	movff	roundf@u+2,??_roundf+2
  4659  00273C  C06D  F053         	movff	roundf@u+3,??_roundf+3
  4660  002740  0E20               	movlw	32
  4661  002742  EFA8  F013         	goto	u10930
  4662  002746                     u10935:
  4663  002746  90D8               	bcf	status,0,c
  4664  002748  3253               	rrcf	(??_roundf+3)^0,f,c
  4665  00274A  3252               	rrcf	(??_roundf+2)^0,f,c
  4666  00274C  3251               	rrcf	(??_roundf+1)^0,f,c
  4667  00274E  3250               	rrcf	??_roundf^0,f,c
  4668  002750                     u10930:
  4669  002750  2EE8               	decfsz	wreg,f,c
  4670  002752  EFA3  F013         	goto	u10935
  4671  002756  5050               	movf	??_roundf^0,w,c
  4672  002758  1051               	iorwf	(??_roundf+1)^0,w,c
  4673  00275A  1052               	iorwf	(??_roundf+2)^0,w,c
  4674  00275C  1053               	iorwf	(??_roundf+3)^0,w,c
  4675  00275E  B4D8               	btfsc	status,2,c
  4676  002760  EFB4  F013         	goto	u10941
  4677  002764  EFB6  F013         	goto	u10940
  4678  002768                     u10941:
  4679  002768  EFC8  F013         	goto	l9693
  4680  00276C                     u10940:
  4681  00276C  C06E  F006         	movff	roundf@y,___flneg@f1
  4682  002770  C06F  F007         	movff	roundf@y+1,___flneg@f1+1
  4683  002774  C070  F008         	movff	roundf@y+2,___flneg@f1+2
  4684  002778  C071  F009         	movff	roundf@y+3,___flneg@f1+3
  4685  00277C  ECA2  F02A         	call	___flneg	;wreg free
  4686  002780  C006  F06E         	movff	?___flneg,roundf@y
  4687  002784  C007  F06F         	movff	?___flneg+1,roundf@y+1
  4688  002788  C008  F070         	movff	?___flneg+2,roundf@y+2
  4689  00278C  C009  F071         	movff	?___flneg+3,roundf@y+3
  4690  002790                     l9693:
  4691  002790  C06E  F04C         	movff	roundf@y,?_roundf
  4692  002794  C06F  F04D         	movff	roundf@y+1,?_roundf+1
  4693  002798  C070  F04E         	movff	roundf@y+2,?_roundf+2
  4694  00279C  C071  F04F         	movff	roundf@y+3,?_roundf+3
  4695  0027A0                     l1752:
  4696  0027A0  0012               	return		;funcret
  4697  0027A2                     __end_of_roundf:
  4698                           	opt callstack 0
  4699                           
  4700 ;; *************** function _moverCarrito *****************
  4701 ;; Defined at:
  4702 ;;		line 551 in file "main.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  espejearCarr    1    wreg     unsigned char 
  4705 ;;  carroEspejea    2   40[BANK0 ] PTR unsigned char 
  4706 ;;		 -> comportamientoBasico@carroEspejeado(1), 
  4707 ;;  avanceRectoL    2   42[BANK0 ] PTR unsigned char 
  4708 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  espejearCarr    1   83[COMRAM] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      void 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4720 ;;      Params:         0       4       0       0       0       0       0       0       0
  4721 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4722 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4723 ;;      Totals:         1       6       0       0       0       0       0       0       0
  4724 ;;Total ram usage:        7 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    8
  4727 ;; This function calls:
  4728 ;;		_forzarAvanceRecto
  4729 ;;		_forzarEspejeo
  4730 ;; This function is called by:
  4731 ;;		_comportamientoBasico
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text12
  4736  0040F2                     __ptext12:
  4737                           	opt callstack 0
  4738  0040F2                     _moverCarrito:
  4739                           	opt callstack 21
  4740                           
  4741                           ;incstack = 0
  4742                           ;moverCarrito@espejearCarroY stored from wreg
  4743  0040F2  6E54               	movwf	moverCarrito@espejearCarroY^0,c
  4744  0040F4                     
  4745                           ;main.c: 553:     switch (mouse.curr_state) {
  4746  0040F4  EFDD  F020         	goto	l10023
  4747  0040F8                     l437:
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;main.c: 557:             LATB4 = 1;
  4751  0040F8  888A               	bsf	3978,4,c	;volatile
  4752                           
  4753                           ;main.c: 558:             LATB5 = 0;
  4754  0040FA  9A8A               	bcf	3978,5,c	;volatile
  4755                           
  4756                           ;main.c: 559:             LATB6 = 1;
  4757  0040FC  8C8A               	bsf	3978,6,c	;volatile
  4758                           
  4759                           ;main.c: 560:             LATB7 = 0;
  4760  0040FE  9E8A               	bcf	3978,7,c	;volatile
  4761  004100                     
  4762                           ; BSR set to: 0
  4763                           ;main.c: 562:             if (*avanceRectoLargo) {
  4764  004100  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4765  004104  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4766  004108  50DF               	movf	indf2,w,c
  4767  00410A  B4D8               	btfsc	status,2,c
  4768  00410C  EF8A  F020         	goto	u11261
  4769  004110  EF8C  F020         	goto	u11260
  4770  004114                     u11261:
  4771  004114  EF9F  F020         	goto	l10005
  4772  004118                     u11260:
  4773  004118                     
  4774                           ; BSR set to: 0
  4775                           ;main.c: 563:                 *avanceRectoLargo = 0;
  4776  004118  C08A  FFD9         	movff	moverCarrito@avanceRectoLargo,fsr2l
  4777  00411C  C08B  FFDA         	movff	moverCarrito@avanceRectoLargo+1,fsr2h
  4778  004120  0E00               	movlw	0
  4779  004122  6EDF               	movwf	indf2,c
  4780  004124                     
  4781                           ; BSR set to: 0
  4782                           ;main.c: 564:                 _delay((unsigned long)((410 * 2)*(4000000/4000.0)));
  4783  004124  0E05               	movlw	5
  4784  004126  0100               	movlb	0	; () banked
  4785  004128  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4786  00412A  0E29               	movlw	41
  4787  00412C  6F8C               	movwf	??_moverCarrito& (0+255),b
  4788  00412E  0EEA               	movlw	234
  4789  004130                     u12027:
  4790  004130  2EE8               	decfsz	wreg,f,c
  4791  004132  D7FE               	bra	u12027
  4792  004134  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4793  004136  D7FC               	bra	u12027
  4794  004138  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4795  00413A  D7FA               	bra	u12027
  4796  00413C  F000               	nop	
  4797  00413E                     l10005:
  4798                           
  4799                           ;main.c: 568:                 _delay((unsigned long)((55)*(4000000/4000.0)));
  4800  00413E  0E48               	movlw	72
  4801  004140  0100               	movlb	0	; () banked
  4802  004142  6F8C               	movwf	??_moverCarrito& (0+255),b
  4803  004144  0E6C               	movlw	108
  4804  004146                     u12037:
  4805  004146  2EE8               	decfsz	wreg,f,c
  4806  004148  D7FE               	bra	u12037
  4807  00414A  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4808  00414C  D7FC               	bra	u12037
  4809  00414E  F000               	nop	
  4810  004150  EFFB  F020         	goto	l446
  4811  004154                     l10007:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;main.c: 574:             if (espejearCarroY) {
  4815  004154  5054               	movf	moverCarrito@espejearCarroY^0,w,c
  4816  004156  B4D8               	btfsc	status,2,c
  4817  004158  EFB0  F020         	goto	u11271
  4818  00415C  EFB2  F020         	goto	u11270
  4819  004160                     u11271:
  4820  004160  EFBC  F020         	goto	l442
  4821  004164                     u11270:
  4822  004164                     
  4823                           ; BSR set to: 0
  4824                           ;main.c: 575:                 forzarEspejeo();
  4825  004164  EC46  F02A         	call	_forzarEspejeo	;wreg free
  4826  004168                     
  4827                           ;main.c: 576:                 *carroEspejeado = 1;
  4828  004168  C088  FFD9         	movff	moverCarrito@carroEspejeado,fsr2l
  4829  00416C  C089  FFDA         	movff	moverCarrito@carroEspejeado+1,fsr2h
  4830  004170  0E01               	movlw	1
  4831  004172  6EDF               	movwf	indf2,c
  4832                           
  4833                           ;main.c: 577:             } else {
  4834  004174  EFFB  F020         	goto	l446
  4835  004178                     l442:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;main.c: 578:                 LATB4 = 0;
  4839  004178  988A               	bcf	3978,4,c	;volatile
  4840                           
  4841                           ;main.c: 579:                 LATB5 = 0;
  4842  00417A  9A8A               	bcf	3978,5,c	;volatile
  4843                           
  4844                           ;main.c: 580:                 LATB6 = 1;
  4845  00417C  8C8A               	bsf	3978,6,c	;volatile
  4846                           
  4847                           ;main.c: 581:                 LATB7 = 0;
  4848  00417E  9E8A               	bcf	3978,7,c	;volatile
  4849  004180                     l10013:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;main.c: 582:                 _delay((unsigned long)((410)*(4000000/4000.0)));
  4853  004180  0E03               	movlw	3
  4854  004182  0100               	movlb	0	; () banked
  4855  004184  6F8D               	movwf	(??_moverCarrito+1)& (0+255),b
  4856  004186  0E15               	movlw	21
  4857  004188  6F8C               	movwf	??_moverCarrito& (0+255),b
  4858  00418A  0E73               	movlw	115
  4859  00418C                     u12047:
  4860  00418C  2EE8               	decfsz	wreg,f,c
  4861  00418E  D7FE               	bra	u12047
  4862  004190  2F8C               	decfsz	??_moverCarrito& (0+255),f,b
  4863  004192  D7FC               	bra	u12047
  4864  004194  2F8D               	decfsz	(??_moverCarrito+1)& (0+255),f,b
  4865  004196  D7FA               	bra	u12047
  4866  004198  D000               	nop2	
  4867  00419A                     
  4868                           ;main.c: 583:                 forzarAvanceRecto();
  4869  00419A  EC45  F02B         	call	_forzarAvanceRecto	;wreg free
  4870  00419E  EFFB  F020         	goto	l446
  4871  0041A2                     l444:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;main.c: 591:             LATB4 = 1;
  4875  0041A2  888A               	bsf	3978,4,c	;volatile
  4876                           
  4877                           ;main.c: 592:             LATB5 = 0;
  4878  0041A4  9A8A               	bcf	3978,5,c	;volatile
  4879                           
  4880                           ;main.c: 593:             LATB6 = 0;
  4881  0041A6  9C8A               	bcf	3978,6,c	;volatile
  4882                           
  4883                           ;main.c: 594:             LATB7 = 0;
  4884  0041A8  9E8A               	bcf	3978,7,c	;volatile
  4885  0041AA  EFC0  F020         	goto	l10013
  4886  0041AE                     l445:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;main.c: 603:             LATB4 = 0;
  4890  0041AE  988A               	bcf	3978,4,c	;volatile
  4891                           
  4892                           ;main.c: 604:             LATB5 = 0;
  4893  0041B0  9A8A               	bcf	3978,5,c	;volatile
  4894                           
  4895                           ;main.c: 605:             LATB6 = 0;
  4896  0041B2  9C8A               	bcf	3978,6,c	;volatile
  4897                           
  4898                           ;main.c: 606:             LATB7 = 0;
  4899  0041B4  9E8A               	bcf	3978,7,c	;volatile
  4900                           
  4901                           ;main.c: 608:             break;
  4902  0041B6  EFFB  F020         	goto	l446
  4903  0041BA                     l10023:
  4904  0041BA  5057               	movf	_mouse^0,w,c
  4905  0041BC  0100               	movlb	0	; () banked
  4906  0041BE  6F8C               	movwf	??_moverCarrito& (0+255),b
  4907  0041C0  6B8D               	clrf	(??_moverCarrito+1)& (0+255),b
  4908                           
  4909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4910                           ; Switch size 1, requested type "simple"
  4911                           ; Number of cases is 1, Range of values is 0 to 0
  4912                           ; switch strategies available:
  4913                           ; Name         Instructions Cycles
  4914                           ; simple_byte            4     3 (average)
  4915                           ;	Chosen strategy is simple_byte
  4916  0041C2  518D               	movf	(??_moverCarrito+1)& (0+255),w,b
  4917  0041C4  0A00               	xorlw	0	; case 0
  4918  0041C6  B4D8               	btfsc	status,2,c
  4919  0041C8  EFE8  F020         	goto	l11165
  4920  0041CC  EFFB  F020         	goto	l446
  4921  0041D0                     l11165:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ; Switch size 1, requested type "simple"
  4925                           ; Number of cases is 4, Range of values is 1 to 4
  4926                           ; switch strategies available:
  4927                           ; Name         Instructions Cycles
  4928                           ; simple_byte           13     7 (average)
  4929                           ;	Chosen strategy is simple_byte
  4930  0041D0  518C               	movf	??_moverCarrito& (0+255),w,b
  4931  0041D2  0A01               	xorlw	1	; case 1
  4932  0041D4  B4D8               	btfsc	status,2,c
  4933  0041D6  EF7C  F020         	goto	l437
  4934  0041DA  0A03               	xorlw	3	; case 2
  4935  0041DC  B4D8               	btfsc	status,2,c
  4936  0041DE  EFAA  F020         	goto	l10007
  4937  0041E2  0A01               	xorlw	1	; case 3
  4938  0041E4  B4D8               	btfsc	status,2,c
  4939  0041E6  EFD1  F020         	goto	l444
  4940  0041EA  0A07               	xorlw	7	; case 4
  4941  0041EC  B4D8               	btfsc	status,2,c
  4942  0041EE  EFD7  F020         	goto	l445
  4943  0041F2  EFFB  F020         	goto	l446
  4944  0041F6                     l446:
  4945  0041F6  0012               	return		;funcret
  4946  0041F8                     __end_of_moverCarrito:
  4947                           	opt callstack 0
  4948                           
  4949 ;; *************** function _forzarAvanceRecto *****************
  4950 ;; Defined at:
  4951 ;;		line 495 in file "main.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4967 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4968 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4969 ;;Total ram usage:        2 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    2
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_moverCarrito
  4976 ;;		_mover
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text13
  4981  00568A                     __ptext13:
  4982                           	opt callstack 0
  4983  00568A                     _forzarAvanceRecto:
  4984                           	opt callstack 25
  4985  00568A                     
  4986                           ;main.c: 496:     LATB4 = 1;
  4987  00568A  888A               	bsf	3978,4,c	;volatile
  4988                           
  4989                           ;main.c: 497:     LATB5 = 0;
  4990  00568C  9A8A               	bcf	3978,5,c	;volatile
  4991                           
  4992                           ;main.c: 498:     LATB6 = 1;
  4993  00568E  8C8A               	bsf	3978,6,c	;volatile
  4994                           
  4995                           ;main.c: 499:     LATB7 = 0;
  4996  005690  9E8A               	bcf	3978,7,c	;volatile
  4997  005692                     
  4998                           ;main.c: 501:     _delay((unsigned long)((550)*(4000000/4000.0)));
  4999  005692  0E03               	movlw	3
  5000  005694  6E07               	movwf	(??_forzarAvanceRecto+1)^0,c
  5001  005696  0ECB               	movlw	203
  5002  005698  6E06               	movwf	??_forzarAvanceRecto^0,c
  5003  00569A  0E45               	movlw	69
  5004  00569C                     u12057:
  5005  00569C  2EE8               	decfsz	wreg,f,c
  5006  00569E  D7FE               	bra	u12057
  5007  0056A0  2E06               	decfsz	??_forzarAvanceRecto^0,f,c
  5008  0056A2  D7FC               	bra	u12057
  5009  0056A4  2E07               	decfsz	(??_forzarAvanceRecto+1)^0,f,c
  5010  0056A6  D7FA               	bra	u12057
  5011  0056A8  F000               	nop	
  5012  0056AA  0012               	return		;funcret
  5013  0056AC                     __end_of_forzarAvanceRecto:
  5014                           	opt callstack 0
  5015                           
  5016 ;; *************** function _leerSensores *****************
  5017 ;; Defined at:
  5018 ;;		line 1224 in file "main.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5032 ;;      Params:         0       0       0       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    4
  5039 ;; This function calls:
  5040 ;;		___fladd
  5041 ;;		___fldiv
  5042 ;;		_dameDistancia
  5043 ;; This function is called by:
  5044 ;;		_comportamientoBasico
  5045 ;;		_probarSensores
  5046 ;;		_probarPID
  5047 ;;		_probarCruceT
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text14
  5052  003A9C                     __ptext14:
  5053                           	opt callstack 0
  5054  003A9C                     _leerSensores:
  5055                           	opt callstack 25
  5056  003A9C                     
  5057                           ;main.c: 1226:     sensorDerecha = (dameDistancia(DERECHA) + oldSensorDerecha) / 2;
  5058  003A9C  C120  F038         	movff	_oldSensorDerecha,___fladd@a
  5059  003AA0  C121  F039         	movff	_oldSensorDerecha+1,___fladd@a+1
  5060  003AA4  C122  F03A         	movff	_oldSensorDerecha+2,___fladd@a+2
  5061  003AA8  C123  F03B         	movff	_oldSensorDerecha+3,___fladd@a+3
  5062  003AAC  0E03               	movlw	3
  5063  003AAE  ECBE  F01E         	call	_dameDistancia
  5064  003AB2  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5065  003AB6  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5066  003ABA  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5067  003ABE  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5068  003AC2  EC80  F00B         	call	___fladd	;wreg free
  5069  003AC6  C034  F044         	movff	?___fladd,___fldiv@b
  5070  003ACA  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5071  003ACE  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5072  003AD2  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5073  003AD6  0E00               	movlw	0
  5074  003AD8  6E48               	movwf	___fldiv@a^0,c
  5075  003ADA  0E00               	movlw	0
  5076  003ADC  6E49               	movwf	(___fldiv@a+1)^0,c
  5077  003ADE  0E00               	movlw	0
  5078  003AE0  6E4A               	movwf	(___fldiv@a+2)^0,c
  5079  003AE2  0E40               	movlw	64
  5080  003AE4  6E4B               	movwf	(___fldiv@a+3)^0,c
  5081  003AE6  ECD1  F013         	call	___fldiv	;wreg free
  5082  003AEA  C044  F12C         	movff	?___fldiv,_sensorDerecha
  5083  003AEE  C045  F12D         	movff	?___fldiv+1,_sensorDerecha+1
  5084  003AF2  C046  F12E         	movff	?___fldiv+2,_sensorDerecha+2
  5085  003AF6  C047  F12F         	movff	?___fldiv+3,_sensorDerecha+3
  5086                           
  5087                           ;main.c: 1227:     sensorIzquierda = (dameDistancia(IZQUIERDA) + oldSensorIzquierda) / 2
      +                          ;
  5088  003AFA  C11C  F038         	movff	_oldSensorIzquierda,___fladd@a
  5089  003AFE  C11D  F039         	movff	_oldSensorIzquierda+1,___fladd@a+1
  5090  003B02  C11E  F03A         	movff	_oldSensorIzquierda+2,___fladd@a+2
  5091  003B06  C11F  F03B         	movff	_oldSensorIzquierda+3,___fladd@a+3
  5092  003B0A  0E02               	movlw	2
  5093  003B0C  ECBE  F01E         	call	_dameDistancia
  5094  003B10  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5095  003B14  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5096  003B18  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5097  003B1C  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5098  003B20  EC80  F00B         	call	___fladd	;wreg free
  5099  003B24  C034  F044         	movff	?___fladd,___fldiv@b
  5100  003B28  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5101  003B2C  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5102  003B30  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5103  003B34  0E00               	movlw	0
  5104  003B36  6E48               	movwf	___fldiv@a^0,c
  5105  003B38  0E00               	movlw	0
  5106  003B3A  6E49               	movwf	(___fldiv@a+1)^0,c
  5107  003B3C  0E00               	movlw	0
  5108  003B3E  6E4A               	movwf	(___fldiv@a+2)^0,c
  5109  003B40  0E40               	movlw	64
  5110  003B42  6E4B               	movwf	(___fldiv@a+3)^0,c
  5111  003B44  ECD1  F013         	call	___fldiv	;wreg free
  5112  003B48  C044  F128         	movff	?___fldiv,_sensorIzquierda
  5113  003B4C  C045  F129         	movff	?___fldiv+1,_sensorIzquierda+1
  5114  003B50  C046  F12A         	movff	?___fldiv+2,_sensorIzquierda+2
  5115  003B54  C047  F12B         	movff	?___fldiv+3,_sensorIzquierda+3
  5116                           
  5117                           ;main.c: 1228:     sensorEnfrente = (dameDistancia(ENFRENTE) + oldSensorEnfrente) / 2;
  5118  003B58  C118  F038         	movff	_oldSensorEnfrente,___fladd@a
  5119  003B5C  C119  F039         	movff	_oldSensorEnfrente+1,___fladd@a+1
  5120  003B60  C11A  F03A         	movff	_oldSensorEnfrente+2,___fladd@a+2
  5121  003B64  C11B  F03B         	movff	_oldSensorEnfrente+3,___fladd@a+3
  5122  003B68  0E01               	movlw	1
  5123  003B6A  ECBE  F01E         	call	_dameDistancia
  5124  003B6E  C01B  F034         	movff	?_dameDistancia,___fladd@b
  5125  003B72  C01C  F035         	movff	?_dameDistancia+1,___fladd@b+1
  5126  003B76  C01D  F036         	movff	?_dameDistancia+2,___fladd@b+2
  5127  003B7A  C01E  F037         	movff	?_dameDistancia+3,___fladd@b+3
  5128  003B7E  EC80  F00B         	call	___fladd	;wreg free
  5129  003B82  C034  F044         	movff	?___fladd,___fldiv@b
  5130  003B86  C035  F045         	movff	?___fladd+1,___fldiv@b+1
  5131  003B8A  C036  F046         	movff	?___fladd+2,___fldiv@b+2
  5132  003B8E  C037  F047         	movff	?___fladd+3,___fldiv@b+3
  5133  003B92  0E00               	movlw	0
  5134  003B94  6E48               	movwf	___fldiv@a^0,c
  5135  003B96  0E00               	movlw	0
  5136  003B98  6E49               	movwf	(___fldiv@a+1)^0,c
  5137  003B9A  0E00               	movlw	0
  5138  003B9C  6E4A               	movwf	(___fldiv@a+2)^0,c
  5139  003B9E  0E40               	movlw	64
  5140  003BA0  6E4B               	movwf	(___fldiv@a+3)^0,c
  5141  003BA2  ECD1  F013         	call	___fldiv	;wreg free
  5142  003BA6  C044  F124         	movff	?___fldiv,_sensorEnfrente
  5143  003BAA  C045  F125         	movff	?___fldiv+1,_sensorEnfrente+1
  5144  003BAE  C046  F126         	movff	?___fldiv+2,_sensorEnfrente+2
  5145  003BB2  C047  F127         	movff	?___fldiv+3,_sensorEnfrente+3
  5146  003BB6                     
  5147                           ;main.c: 1230:     oldSensorDerecha = sensorDerecha;
  5148  003BB6  C12C  F120         	movff	_sensorDerecha,_oldSensorDerecha
  5149  003BBA  C12D  F121         	movff	_sensorDerecha+1,_oldSensorDerecha+1
  5150  003BBE  C12E  F122         	movff	_sensorDerecha+2,_oldSensorDerecha+2
  5151  003BC2  C12F  F123         	movff	_sensorDerecha+3,_oldSensorDerecha+3
  5152  003BC6                     
  5153                           ;main.c: 1231:     oldSensorIzquierda = sensorIzquierda;
  5154  003BC6  C128  F11C         	movff	_sensorIzquierda,_oldSensorIzquierda
  5155  003BCA  C129  F11D         	movff	_sensorIzquierda+1,_oldSensorIzquierda+1
  5156  003BCE  C12A  F11E         	movff	_sensorIzquierda+2,_oldSensorIzquierda+2
  5157  003BD2  C12B  F11F         	movff	_sensorIzquierda+3,_oldSensorIzquierda+3
  5158  003BD6                     
  5159                           ;main.c: 1232:     oldSensorEnfrente = sensorEnfrente;
  5160  003BD6  C124  F118         	movff	_sensorEnfrente,_oldSensorEnfrente
  5161  003BDA  C125  F119         	movff	_sensorEnfrente+1,_oldSensorEnfrente+1
  5162  003BDE  C126  F11A         	movff	_sensorEnfrente+2,_oldSensorEnfrente+2
  5163  003BE2  C127  F11B         	movff	_sensorEnfrente+3,_oldSensorEnfrente+3
  5164  003BE6                     
  5165                           ;main.c: 1237:         DISTANCIA_PRIORIDAD_BAJA = sensorDerecha;
  5166  003BE6  C12C  F10C         	movff	_sensorDerecha,_DISTANCIA_PRIORIDAD_BAJA
  5167  003BEA  C12D  F10D         	movff	_sensorDerecha+1,_DISTANCIA_PRIORIDAD_BAJA+1
  5168  003BEE  C12E  F10E         	movff	_sensorDerecha+2,_DISTANCIA_PRIORIDAD_BAJA+2
  5169  003BF2  C12F  F10F         	movff	_sensorDerecha+3,_DISTANCIA_PRIORIDAD_BAJA+3
  5170  003BF6                     
  5171                           ;main.c: 1246:         DISTANCIA_PRIORIDAD_MEDIA = sensorIzquierda;
  5172  003BF6  C128  F110         	movff	_sensorIzquierda,_DISTANCIA_PRIORIDAD_MEDIA
  5173  003BFA  C129  F111         	movff	_sensorIzquierda+1,_DISTANCIA_PRIORIDAD_MEDIA+1
  5174  003BFE  C12A  F112         	movff	_sensorIzquierda+2,_DISTANCIA_PRIORIDAD_MEDIA+2
  5175  003C02  C12B  F113         	movff	_sensorIzquierda+3,_DISTANCIA_PRIORIDAD_MEDIA+3
  5176  003C06                     
  5177                           ;main.c: 1249:         DISTANCIA_PRIORIDAD_ALTA = sensorEnfrente;
  5178  003C06  C124  F114         	movff	_sensorEnfrente,_DISTANCIA_PRIORIDAD_ALTA
  5179  003C0A  C125  F115         	movff	_sensorEnfrente+1,_DISTANCIA_PRIORIDAD_ALTA+1
  5180  003C0E  C126  F116         	movff	_sensorEnfrente+2,_DISTANCIA_PRIORIDAD_ALTA+2
  5181  003C12  C127  F117         	movff	_sensorEnfrente+3,_DISTANCIA_PRIORIDAD_ALTA+3
  5182  003C16  0012               	return		;funcret
  5183  003C18                     __end_of_leerSensores:
  5184                           	opt callstack 0
  5185                           
  5186 ;; *************** function _dameDistancia *****************
  5187 ;; Defined at:
  5188 ;;		line 26 in file "./ultrasonico.h"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  numeroSensor    1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  numeroSensor    1   32[COMRAM] unsigned char 
  5193 ;;  distancia       4   33[COMRAM] float 
  5194 ;;  conteo          2   37[COMRAM] unsigned int 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  4   26[COMRAM] float 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0, cstack
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5204 ;;      Params:         4       0       0       0       0       0       0       0       0
  5205 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5206 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5207 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5208 ;;Total ram usage:       13 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    3
  5211 ;; This function calls:
  5212 ;;		___lwdiv
  5213 ;;		___xxtofl
  5214 ;; This function is called by:
  5215 ;;		_inicializarComportamientoBasico
  5216 ;;		_leerSensores
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text15
  5221  003D7C                     __ptext15:
  5222                           	opt callstack 0
  5223  003D7C                     _dameDistancia:
  5224                           	opt callstack 26
  5225                           
  5226                           ;incstack = 0
  5227                           ;dameDistancia@numeroSensor stored from wreg
  5228  003D7C  6E21               	movwf	dameDistancia@numeroSensor^0,c
  5229  003D7E                     
  5230                           ;./ultrasonico.h: 28:     T_UINT conteo;;./ultrasonico.h: 29:     T_FLOAT distancia;;./u
      +                          ltrasonico.h: 31:     TMR1H = 0x00;
  5231  003D7E  0E00               	movlw	0
  5232  003D80  6ECF               	movwf	207,c	;volatile
  5233                           
  5234                           ;./ultrasonico.h: 32:     TMR1L = 0x00;
  5235  003D82  0E00               	movlw	0
  5236  003D84  6ECE               	movwf	206,c	;volatile
  5237                           
  5238                           ;./ultrasonico.h: 33:     conteo = 0;
  5239  003D86  0E00               	movlw	0
  5240  003D88  6E27               	movwf	(dameDistancia@conteo+1)^0,c
  5241  003D8A  0E00               	movlw	0
  5242  003D8C  6E26               	movwf	dameDistancia@conteo^0,c
  5243  003D8E                     
  5244                           ;./ultrasonico.h: 34:     LATD3 = 1;
  5245  003D8E  868C               	bsf	3980,3,c	;volatile
  5246  003D90                     
  5247                           ;./ultrasonico.h: 35:     _delay((unsigned long)((12)*(4000000/4000000.0)));
  5248  003D90  0E04               	movlw	4
  5249  003D92                     u12067:
  5250  003D92  2EE8               	decfsz	wreg,f,c
  5251  003D94  D7FE               	bra	u12067
  5252  003D96                     
  5253                           ;./ultrasonico.h: 36:     LATD3 = 0;
  5254  003D96  968C               	bcf	3980,3,c	;volatile
  5255                           
  5256                           ;./ultrasonico.h: 38:     switch (numeroSensor) {
  5257  003D98  EF16  F01F         	goto	l9743
  5258  003D9C                     l183:
  5259  003D9C  A281               	btfss	129,1,c	;volatile
  5260  003D9E  EFD3  F01E         	goto	u10991
  5261  003DA2  EFD5  F01E         	goto	u10990
  5262  003DA6                     u10991:
  5263  003DA6  EFCE  F01E         	goto	l183
  5264  003DAA                     u10990:
  5265  003DAA                     
  5266                           ;./ultrasonico.h: 43:             TMR1ON = 1;
  5267  003DAA  80CD               	bsf	4045,0,c	;volatile
  5268  003DAC                     l186:
  5269  003DAC  A281               	btfss	129,1,c	;volatile
  5270  003DAE  EFDB  F01E         	goto	u11001
  5271  003DB2  EFDD  F01E         	goto	u11000
  5272  003DB6                     u11001:
  5273  003DB6  EF2F  F01F         	goto	l191
  5274  003DBA                     u11000:
  5275  003DBA  A09E               	btfss	3998,0,c	;volatile
  5276  003DBC  EFE2  F01E         	goto	u11011
  5277  003DC0  EFE4  F01E         	goto	u11010
  5278  003DC4                     u11011:
  5279  003DC4  EFD6  F01E         	goto	l186
  5280  003DC8                     u11010:
  5281  003DC8  EF2F  F01F         	goto	l191
  5282  003DCC                     l193:
  5283  003DCC  A481               	btfss	129,2,c	;volatile
  5284  003DCE  EFEB  F01E         	goto	u11021
  5285  003DD2  EFED  F01E         	goto	u11020
  5286  003DD6                     u11021:
  5287  003DD6  EFE6  F01E         	goto	l193
  5288  003DDA                     u11020:
  5289  003DDA                     
  5290                           ;./ultrasonico.h: 51:             TMR1ON = 1;
  5291  003DDA  80CD               	bsf	4045,0,c	;volatile
  5292  003DDC                     l196:
  5293  003DDC  A481               	btfss	129,2,c	;volatile
  5294  003DDE  EFF3  F01E         	goto	u11031
  5295  003DE2  EFF5  F01E         	goto	u11030
  5296  003DE6                     u11031:
  5297  003DE6  EF2F  F01F         	goto	l191
  5298  003DEA                     u11030:
  5299  003DEA  A09E               	btfss	3998,0,c	;volatile
  5300  003DEC  EFFA  F01E         	goto	u11041
  5301  003DF0  EFFC  F01E         	goto	u11040
  5302  003DF4                     u11041:
  5303  003DF4  EFEE  F01E         	goto	l196
  5304  003DF8                     u11040:
  5305  003DF8  EF2F  F01F         	goto	l191
  5306  003DFC                     l202:
  5307  003DFC  A681               	btfss	129,3,c	;volatile
  5308  003DFE  EF03  F01F         	goto	u11051
  5309  003E02  EF05  F01F         	goto	u11050
  5310  003E06                     u11051:
  5311  003E06  EFFE  F01E         	goto	l202
  5312  003E0A                     u11050:
  5313  003E0A                     
  5314                           ;./ultrasonico.h: 59:             TMR1ON = 1;
  5315  003E0A  80CD               	bsf	4045,0,c	;volatile
  5316  003E0C                     l205:
  5317  003E0C  A681               	btfss	129,3,c	;volatile
  5318  003E0E  EF0B  F01F         	goto	u11061
  5319  003E12  EF0D  F01F         	goto	u11060
  5320  003E16                     u11061:
  5321  003E16  EF2F  F01F         	goto	l191
  5322  003E1A                     u11060:
  5323  003E1A  A09E               	btfss	3998,0,c	;volatile
  5324  003E1C  EF12  F01F         	goto	u11071
  5325  003E20  EF14  F01F         	goto	u11070
  5326  003E24                     u11071:
  5327  003E24  EF06  F01F         	goto	l205
  5328  003E28                     u11070:
  5329  003E28  EF2F  F01F         	goto	l191
  5330  003E2C                     l9743:
  5331  003E2C  5021               	movf	dameDistancia@numeroSensor^0,w,c
  5332  003E2E  6E1F               	movwf	??_dameDistancia^0,c
  5333  003E30  6A20               	clrf	(??_dameDistancia+1)^0,c
  5334                           
  5335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5336                           ; Switch size 1, requested type "simple"
  5337                           ; Number of cases is 1, Range of values is 0 to 0
  5338                           ; switch strategies available:
  5339                           ; Name         Instructions Cycles
  5340                           ; simple_byte            4     3 (average)
  5341                           ;	Chosen strategy is simple_byte
  5342  003E32  5020               	movf	(??_dameDistancia+1)^0,w,c
  5343  003E34  0A00               	xorlw	0	; case 0
  5344  003E36  B4D8               	btfsc	status,2,c
  5345  003E38  EF20  F01F         	goto	l11167
  5346  003E3C  EF2F  F01F         	goto	l191
  5347  003E40                     l11167:
  5348                           
  5349                           ; Switch size 1, requested type "simple"
  5350                           ; Number of cases is 3, Range of values is 1 to 3
  5351                           ; switch strategies available:
  5352                           ; Name         Instructions Cycles
  5353                           ; simple_byte           10     6 (average)
  5354                           ;	Chosen strategy is simple_byte
  5355  003E40  501F               	movf	??_dameDistancia^0,w,c
  5356  003E42  0A01               	xorlw	1	; case 1
  5357  003E44  B4D8               	btfsc	status,2,c
  5358  003E46  EFCE  F01E         	goto	l183
  5359  003E4A  0A03               	xorlw	3	; case 2
  5360  003E4C  B4D8               	btfsc	status,2,c
  5361  003E4E  EFE6  F01E         	goto	l193
  5362  003E52  0A01               	xorlw	1	; case 3
  5363  003E54  B4D8               	btfsc	status,2,c
  5364  003E56  EFFE  F01E         	goto	l202
  5365  003E5A  EF2F  F01F         	goto	l191
  5366  003E5E                     l191:
  5367                           
  5368                           ;./ultrasonico.h: 66:     TMR1ON = 0;
  5369  003E5E  90CD               	bcf	4045,0,c	;volatile
  5370                           
  5371                           ;./ultrasonico.h: 68:     if (!TMR1IF) {
  5372  003E60  B09E               	btfsc	3998,0,c	;volatile
  5373  003E62  EF35  F01F         	goto	u11081
  5374  003E66  EF37  F01F         	goto	u11080
  5375  003E6A                     u11081:
  5376  003E6A  EF5D  F01F         	goto	l9749
  5377  003E6E                     u11080:
  5378  003E6E                     
  5379                           ;./ultrasonico.h: 69:         conteo |= TMR1H << 8;
  5380  003E6E  50CF               	movf	207,w,c	;volatile
  5381  003E70  6E20               	movwf	(??_dameDistancia+1)^0,c
  5382  003E72  6A1F               	clrf	??_dameDistancia^0,c
  5383  003E74  501F               	movf	??_dameDistancia^0,w,c
  5384  003E76  1226               	iorwf	dameDistancia@conteo^0,f,c
  5385  003E78  5020               	movf	(??_dameDistancia+1)^0,w,c
  5386  003E7A  1227               	iorwf	(dameDistancia@conteo+1)^0,f,c
  5387                           
  5388                           ;./ultrasonico.h: 70:         conteo |= TMR1L;
  5389  003E7C  50CE               	movf	206,w,c	;volatile
  5390  003E7E  1226               	iorwf	dameDistancia@conteo^0,f,c
  5391  003E80                     
  5392                           ;./ultrasonico.h: 72:         distancia = conteo / 58;
  5393  003E80  0E00               	movlw	0
  5394  003E82  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  5395  003E84  0E3A               	movlw	58
  5396  003E86  6E08               	movwf	___lwdiv@divisor^0,c
  5397  003E88  C026  F006         	movff	dameDistancia@conteo,___lwdiv@dividend
  5398  003E8C  C027  F007         	movff	dameDistancia@conteo+1,___lwdiv@dividend+1
  5399  003E90  ECA2  F026         	call	___lwdiv	;wreg free
  5400  003E94  C006  F00D         	movff	?___lwdiv,___xxtofl@val
  5401  003E98  C007  F00E         	movff	?___lwdiv+1,___xxtofl@val+1
  5402  003E9C  6A0F               	clrf	(___xxtofl@val+2)^0,c
  5403  003E9E  6A10               	clrf	(___xxtofl@val+3)^0,c
  5404  003EA0  0E00               	movlw	0
  5405  003EA2  EC20  F01A         	call	___xxtofl
  5406  003EA6  C00D  F022         	movff	?___xxtofl,dameDistancia@distancia
  5407  003EAA  C00E  F023         	movff	?___xxtofl+1,dameDistancia@distancia+1
  5408  003EAE  C00F  F024         	movff	?___xxtofl+2,dameDistancia@distancia+2
  5409  003EB2  C010  F025         	movff	?___xxtofl+3,dameDistancia@distancia+3
  5410                           
  5411                           ;./ultrasonico.h: 73:     } else {
  5412  003EB6  EF66  F01F         	goto	l9753
  5413  003EBA                     l9749:
  5414  003EBA                     
  5415                           ;./ultrasonico.h: 75:         TMR1IF = 0;
  5416  003EBA  909E               	bcf	3998,0,c	;volatile
  5417                           
  5418                           ;./ultrasonico.h: 76:         distancia = 0;
  5419  003EBC  0E00               	movlw	0
  5420  003EBE  6E22               	movwf	dameDistancia@distancia^0,c
  5421  003EC0  0E00               	movlw	0
  5422  003EC2  6E23               	movwf	(dameDistancia@distancia+1)^0,c
  5423  003EC4  0E00               	movlw	0
  5424  003EC6  6E24               	movwf	(dameDistancia@distancia+2)^0,c
  5425  003EC8  0E00               	movlw	0
  5426  003ECA  6E25               	movwf	(dameDistancia@distancia+3)^0,c
  5427  003ECC                     l9753:
  5428                           
  5429                           ;./ultrasonico.h: 80:     return distancia;
  5430  003ECC  C022  F01B         	movff	dameDistancia@distancia,?_dameDistancia
  5431  003ED0  C023  F01C         	movff	dameDistancia@distancia+1,?_dameDistancia+1
  5432  003ED4  C024  F01D         	movff	dameDistancia@distancia+2,?_dameDistancia+2
  5433  003ED8  C025  F01E         	movff	dameDistancia@distancia+3,?_dameDistancia+3
  5434  003EDC  0012               	return		;funcret
  5435  003EDE                     __end_of_dameDistancia:
  5436                           	opt callstack 0
  5437                           
  5438 ;; *************** function ___lwdiv *****************
  5439 ;; Defined at:
  5440 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  dividend        2    5[COMRAM] unsigned int 
  5443 ;;  divisor         2    7[COMRAM] unsigned int 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  quotient        2   10[COMRAM] unsigned int 
  5446 ;;  counter         1    9[COMRAM] unsigned char 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  2    5[COMRAM] unsigned int 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5456 ;;      Params:         4       0       0       0       0       0       0       0       0
  5457 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5459 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5460 ;;Total ram usage:        7 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    2
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_dameDistancia
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text16
  5471  004D44                     __ptext16:
  5472                           	opt callstack 0
  5473  004D44                     ___lwdiv:
  5474                           	opt callstack 26
  5475  004D44  0E00               	movlw	0
  5476  004D46  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  5477  004D48  0E00               	movlw	0
  5478  004D4A  6E0B               	movwf	___lwdiv@quotient^0,c
  5479  004D4C  5008               	movf	___lwdiv@divisor^0,w,c
  5480  004D4E  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5481  004D50  B4D8               	btfsc	status,2,c
  5482  004D52  EFAD  F026         	goto	u10961
  5483  004D56  EFAF  F026         	goto	u10960
  5484  004D5A                     u10961:
  5485  004D5A  EFD7  F026         	goto	l1452
  5486  004D5E                     u10960:
  5487  004D5E  0E01               	movlw	1
  5488  004D60  6E0A               	movwf	___lwdiv@counter^0,c
  5489  004D62  EFB7  F026         	goto	l9713
  5490  004D66                     l9711:
  5491  004D66  90D8               	bcf	status,0,c
  5492  004D68  3608               	rlcf	___lwdiv@divisor^0,f,c
  5493  004D6A  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5494  004D6C  2A0A               	incf	___lwdiv@counter^0,f,c
  5495  004D6E                     l9713:
  5496  004D6E  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  5497  004D70  EFBC  F026         	goto	u10971
  5498  004D74  EFBE  F026         	goto	u10970
  5499  004D78                     u10971:
  5500  004D78  EFB3  F026         	goto	l9711
  5501  004D7C                     u10970:
  5502  004D7C                     l9715:
  5503  004D7C  90D8               	bcf	status,0,c
  5504  004D7E  360B               	rlcf	___lwdiv@quotient^0,f,c
  5505  004D80  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5506  004D82  5008               	movf	___lwdiv@divisor^0,w,c
  5507  004D84  5C06               	subwf	___lwdiv@dividend^0,w,c
  5508  004D86  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  5509  004D88  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5510  004D8A  A0D8               	btfss	status,0,c
  5511  004D8C  EFCA  F026         	goto	u10981
  5512  004D90  EFCC  F026         	goto	u10980
  5513  004D94                     u10981:
  5514  004D94  EFD1  F026         	goto	l9723
  5515  004D98                     u10980:
  5516  004D98  5008               	movf	___lwdiv@divisor^0,w,c
  5517  004D9A  5E06               	subwf	___lwdiv@dividend^0,f,c
  5518  004D9C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  5519  004D9E  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5520  004DA0  800B               	bsf	___lwdiv@quotient^0,0,c
  5521  004DA2                     l9723:
  5522  004DA2  90D8               	bcf	status,0,c
  5523  004DA4  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5524  004DA6  3208               	rrcf	___lwdiv@divisor^0,f,c
  5525  004DA8  2E0A               	decfsz	___lwdiv@counter^0,f,c
  5526  004DAA  EFBE  F026         	goto	l9715
  5527  004DAE                     l1452:
  5528  004DAE  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  5529  004DB2  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5530  004DB6  0012               	return		;funcret
  5531  004DB8                     __end_of___lwdiv:
  5532                           	opt callstack 0
  5533                           
  5534 ;; *************** function _finalizarRecorrido *****************
  5535 ;; Defined at:
  5536 ;;		line 467 in file "main.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5553 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5554 ;;Total ram usage:        0 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    8
  5557 ;; This function calls:
  5558 ;;		_forzarEspejeo
  5559 ;;		_forzarParoAuto
  5560 ;; This function is called by:
  5561 ;;		_comportamientoBasico
  5562 ;;		_probarPID
  5563 ;;		_probarCruceT
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           	psect	text17
  5568  005772                     __ptext17:
  5569                           	opt callstack 0
  5570  005772                     _finalizarRecorrido:
  5571                           	opt callstack 21
  5572  005772                     
  5573                           ;main.c: 468:     forzarEspejeo();
  5574  005772  EC46  F02A         	call	_forzarEspejeo	;wreg free
  5575  005776                     
  5576                           ;main.c: 469:     forzarParoAuto();
  5577  005776  ECA1  F02B         	call	_forzarParoAuto	;wreg free
  5578  00577A                     
  5579                           ;main.c: 470:     pausa = 1;
  5580  00577A  0E01               	movlw	1
  5581  00577C  0101               	movlb	1	; () banked
  5582  00577E  6FE9               	movwf	_pausa& (0+255),b
  5583  005780                     
  5584                           ; BSR set to: 1
  5585  005780  0012               	return		;funcret
  5586  005782                     __end_of_finalizarRecorrido:
  5587                           	opt callstack 0
  5588                           
  5589 ;; *************** function _forzarEspejeo *****************
  5590 ;; Defined at:
  5591 ;;		line 543 in file "main.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5605 ;;      Params:         0       0       0       0       0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    7
  5612 ;; This function calls:
  5613 ;;		___flge
  5614 ;;		_forzarEspejeoDerecha
  5615 ;;		_forzarEspejeoIzquierda
  5616 ;; This function is called by:
  5617 ;;		_comportamientoBasico
  5618 ;;		_finalizarRecorrido
  5619 ;;		_moverCarrito
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text18
  5624  00548C                     __ptext18:
  5625                           	opt callstack 0
  5626  00548C                     _forzarEspejeo:
  5627                           	opt callstack 21
  5628  00548C                     
  5629                           ;main.c: 545:     if (sensorIzquierda > sensorDerecha)
  5630  00548C  C12C  F034         	movff	_sensorDerecha,___flge@ff1
  5631  005490  C12D  F035         	movff	_sensorDerecha+1,___flge@ff1+1
  5632  005494  C12E  F036         	movff	_sensorDerecha+2,___flge@ff1+2
  5633  005498  C12F  F037         	movff	_sensorDerecha+3,___flge@ff1+3
  5634  00549C  C128  F038         	movff	_sensorIzquierda,___flge@ff2
  5635  0054A0  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
  5636  0054A4  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
  5637  0054A8  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
  5638  0054AC  ECFC  F020         	call	___flge	;wreg free
  5639  0054B0  B0D8               	btfsc	status,0,c
  5640  0054B2  EF5D  F02A         	goto	u11151
  5641  0054B6  EF5F  F02A         	goto	u11150
  5642  0054BA                     u11151:
  5643  0054BA  EF63  F02A         	goto	l9857
  5644  0054BE                     u11150:
  5645  0054BE                     
  5646                           ;main.c: 546:         forzarEspejeoIzquierda();
  5647  0054BE  EC87  F02B         	call	_forzarEspejeoIzquierda	;wreg free
  5648  0054C2  EF65  F02A         	goto	l433
  5649  0054C6                     l9857:
  5650                           
  5651                           ;main.c: 548:         forzarEspejeoDerecha();
  5652  0054C6  EC94  F02B         	call	_forzarEspejeoDerecha	;wreg free
  5653  0054CA                     l433:
  5654  0054CA  0012               	return		;funcret
  5655  0054CC                     __end_of_forzarEspejeo:
  5656                           	opt callstack 0
  5657                           
  5658 ;; *************** function _forzarEspejeoIzquierda *****************
  5659 ;; Defined at:
  5660 ;;		line 523 in file "main.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1    wreg      void 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5677 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5678 ;;Total ram usage:        0 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:    6
  5681 ;; This function calls:
  5682 ;;		_forzarGiroIzquierda
  5683 ;;		_forzarParoAuto
  5684 ;;		_forzarReversa
  5685 ;;		_velocidadEstandar
  5686 ;; This function is called by:
  5687 ;;		_forzarEspejeo
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text19
  5692  00570E                     __ptext19:
  5693                           	opt callstack 0
  5694  00570E                     _forzarEspejeoIzquierda:
  5695                           	opt callstack 21
  5696  00570E                     
  5697                           ;main.c: 525:     forzarParoAuto();
  5698  00570E  ECA1  F02B         	call	_forzarParoAuto	;wreg free
  5699  005712                     
  5700                           ;main.c: 526:     velocidadEstandar();
  5701  005712  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  5702  005716                     
  5703                           ;main.c: 527:     forzarReversa();
  5704  005716  EC56  F02B         	call	_forzarReversa	;wreg free
  5705  00571A                     
  5706                           ;main.c: 528:     forzarGiroIzquierda();
  5707  00571A  EC67  F02B         	call	_forzarGiroIzquierda	;wreg free
  5708  00571E                     
  5709                           ;main.c: 529:     forzarReversa();
  5710  00571E  EC56  F02B         	call	_forzarReversa	;wreg free
  5711  005722                     
  5712                           ;main.c: 530:     forzarGiroIzquierda();
  5713  005722  EC67  F02B         	call	_forzarGiroIzquierda	;wreg free
  5714  005726  0012               	return		;funcret
  5715  005728                     __end_of_forzarEspejeoIzquierda:
  5716                           	opt callstack 0
  5717                           
  5718 ;; *************** function _forzarGiroIzquierda *****************
  5719 ;; Defined at:
  5720 ;;		line 505 in file "main.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5736 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5737 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5738 ;;Total ram usage:        2 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    2
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_forzarEspejeoIzquierda
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text20
  5749  0056CE                     __ptext20:
  5750                           	opt callstack 0
  5751  0056CE                     _forzarGiroIzquierda:
  5752                           	opt callstack 24
  5753  0056CE                     
  5754                           ;main.c: 506:     LATB4 = 0;
  5755  0056CE  988A               	bcf	3978,4,c	;volatile
  5756                           
  5757                           ;main.c: 507:     LATB5 = 0;
  5758  0056D0  9A8A               	bcf	3978,5,c	;volatile
  5759                           
  5760                           ;main.c: 508:     LATB6 = 1;
  5761  0056D2  8C8A               	bsf	3978,6,c	;volatile
  5762                           
  5763                           ;main.c: 509:     LATB7 = 0;
  5764  0056D4  9E8A               	bcf	3978,7,c	;volatile
  5765  0056D6                     
  5766                           ;main.c: 510:     _delay((unsigned long)((410)*(4000000/4000.0)));
  5767  0056D6  0E03               	movlw	3
  5768  0056D8  6E07               	movwf	(??_forzarGiroIzquierda+1)^0,c
  5769  0056DA  0E15               	movlw	21
  5770  0056DC  6E06               	movwf	??_forzarGiroIzquierda^0,c
  5771  0056DE  0E74               	movlw	116
  5772  0056E0                     u12077:
  5773  0056E0  2EE8               	decfsz	wreg,f,c
  5774  0056E2  D7FE               	bra	u12077
  5775  0056E4  2E06               	decfsz	??_forzarGiroIzquierda^0,f,c
  5776  0056E6  D7FC               	bra	u12077
  5777  0056E8  2E07               	decfsz	(??_forzarGiroIzquierda+1)^0,f,c
  5778  0056EA  D7FA               	bra	u12077
  5779  0056EC  0012               	return		;funcret
  5780  0056EE                     __end_of_forzarGiroIzquierda:
  5781                           	opt callstack 0
  5782                           
  5783 ;; *************** function _forzarEspejeoDerecha *****************
  5784 ;; Defined at:
  5785 ;;		line 533 in file "main.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5802 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5803 ;;Total ram usage:        0 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    6
  5806 ;; This function calls:
  5807 ;;		_forzarGiroDerecha
  5808 ;;		_forzarParoAuto
  5809 ;;		_forzarReversa
  5810 ;;		_velocidadEstandar
  5811 ;; This function is called by:
  5812 ;;		_forzarEspejeo
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text21
  5817  005728                     __ptext21:
  5818                           	opt callstack 0
  5819  005728                     _forzarEspejeoDerecha:
  5820                           	opt callstack 21
  5821  005728                     
  5822                           ;main.c: 535:     forzarParoAuto();
  5823  005728  ECA1  F02B         	call	_forzarParoAuto	;wreg free
  5824  00572C                     
  5825                           ;main.c: 536:     velocidadEstandar();
  5826  00572C  EC0C  F02B         	call	_velocidadEstandar	;wreg free
  5827  005730                     
  5828                           ;main.c: 537:     forzarReversa();
  5829  005730  EC56  F02B         	call	_forzarReversa	;wreg free
  5830  005734                     
  5831                           ;main.c: 538:     forzarGiroDerecha();
  5832  005734  EC77  F02B         	call	_forzarGiroDerecha	;wreg free
  5833  005738                     
  5834                           ;main.c: 539:     forzarReversa();
  5835  005738  EC56  F02B         	call	_forzarReversa	;wreg free
  5836  00573C                     
  5837                           ;main.c: 540:     forzarGiroDerecha();
  5838  00573C  EC77  F02B         	call	_forzarGiroDerecha	;wreg free
  5839  005740  0012               	return		;funcret
  5840  005742                     __end_of_forzarEspejeoDerecha:
  5841                           	opt callstack 0
  5842                           
  5843 ;; *************** function _velocidadEstandar *****************
  5844 ;; Defined at:
  5845 ;;		line 1337 in file "main.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5859 ;;      Params:         0       0       0       0       0       0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    5
  5866 ;; This function calls:
  5867 ;;		_pwmDuty
  5868 ;; This function is called by:
  5869 ;;		_inicializarComportamientoBasico
  5870 ;;		_comportamientoBasico
  5871 ;;		_forzarEspejeoIzquierda
  5872 ;;		_forzarEspejeoDerecha
  5873 ;;		_regresarPuntoPartida
  5874 ;;		_regresarAlCruce
  5875 ;;		_recorrerCaminoEncontrado
  5876 ;;		_probarCruceT
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text22
  5881  005618                     __ptext22:
  5882                           	opt callstack 0
  5883  005618                     _velocidadEstandar:
  5884                           	opt callstack 24
  5885  005618                     
  5886                           ;main.c: 1339:     pwmDuty(100, 1);
  5887  005618  0E00               	movlw	0
  5888  00561A  0100               	movlb	0	; () banked
  5889  00561C  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5890  00561E  0E64               	movlw	100
  5891  005620  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5892  005622  0E01               	movlw	1
  5893  005624  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5894  005626  EC42  F019         	call	_pwmDuty	;wreg free
  5895                           
  5896                           ;main.c: 1340:     pwmDuty(100, 2);
  5897  00562A  0E00               	movlw	0
  5898  00562C  0100               	movlb	0	; () banked
  5899  00562E  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  5900  005630  0E64               	movlw	100
  5901  005632  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  5902  005634  0E02               	movlw	2
  5903  005636  6F7E               	movwf	pwmDuty@channel& (0+255),b
  5904  005638  EC42  F019         	call	_pwmDuty	;wreg free
  5905  00563C  0012               	return		;funcret
  5906  00563E                     __end_of_velocidadEstandar:
  5907                           	opt callstack 0
  5908                           
  5909 ;; *************** function _forzarReversa *****************
  5910 ;; Defined at:
  5911 ;;		line 485 in file "main.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		wreg
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5925 ;;      Params:         0       0       0       0       0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5927 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5928 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5929 ;;Total ram usage:        2 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    2
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_forzarEspejeoIzquierda
  5936 ;;		_forzarEspejeoDerecha
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text23
  5941  0056AC                     __ptext23:
  5942                           	opt callstack 0
  5943  0056AC                     _forzarReversa:
  5944                           	opt callstack 24
  5945  0056AC                     
  5946                           ;main.c: 486:     LATB4 = 0;
  5947  0056AC  988A               	bcf	3978,4,c	;volatile
  5948                           
  5949                           ;main.c: 487:     LATB5 = 1;
  5950  0056AE  8A8A               	bsf	3978,5,c	;volatile
  5951                           
  5952                           ;main.c: 488:     LATB6 = 0;
  5953  0056B0  9C8A               	bcf	3978,6,c	;volatile
  5954                           
  5955                           ;main.c: 489:     LATB7 = 1;
  5956  0056B2  8E8A               	bsf	3978,7,c	;volatile
  5957  0056B4                     
  5958                           ;main.c: 491:     _delay((unsigned long)((400)*(4000000/4000.0)));
  5959  0056B4  0E03               	movlw	3
  5960  0056B6  6E07               	movwf	(??_forzarReversa+1)^0,c
  5961  0056B8  0E08               	movlw	8
  5962  0056BA  6E06               	movwf	??_forzarReversa^0,c
  5963  0056BC  0E77               	movlw	119
  5964  0056BE                     u12087:
  5965  0056BE  2EE8               	decfsz	wreg,f,c
  5966  0056C0  D7FE               	bra	u12087
  5967  0056C2  2E06               	decfsz	??_forzarReversa^0,f,c
  5968  0056C4  D7FC               	bra	u12087
  5969  0056C6  2E07               	decfsz	(??_forzarReversa+1)^0,f,c
  5970  0056C8  D7FA               	bra	u12087
  5971  0056CA  F000               	nop	
  5972  0056CC  0012               	return		;funcret
  5973  0056CE                     __end_of_forzarReversa:
  5974                           	opt callstack 0
  5975                           
  5976 ;; *************** function _forzarParoAuto *****************
  5977 ;; Defined at:
  5978 ;;		line 474 in file "main.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5994 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5995 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5996 ;;Total ram usage:        1 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    2
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_comportamientoBasico
  6003 ;;		_finalizarRecorrido
  6004 ;;		_forzarEspejeoIzquierda
  6005 ;;		_forzarEspejeoDerecha
  6006 ;;		_main
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text24
  6011  005742                     __ptext24:
  6012                           	opt callstack 0
  6013  005742                     _forzarParoAuto:
  6014                           	opt callstack 28
  6015  005742                     
  6016                           ;main.c: 476:     LATB4 = 0;
  6017  005742  988A               	bcf	3978,4,c	;volatile
  6018                           
  6019                           ;main.c: 477:     LATB5 = 0;
  6020  005744  9A8A               	bcf	3978,5,c	;volatile
  6021                           
  6022                           ;main.c: 478:     LATB6 = 0;
  6023  005746  9C8A               	bcf	3978,6,c	;volatile
  6024                           
  6025                           ;main.c: 481:     if (!0)
  6026  005748  9E8A               	bcf	3978,7,c	;volatile
  6027  00574A                     
  6028                           ;main.c: 482:         _delay((unsigned long)((35)*(4000000/4000.0)));
  6029  00574A  0E2E               	movlw	46
  6030  00574C  6E06               	movwf	??_forzarParoAuto^0,c
  6031  00574E  0E73               	movlw	115
  6032  005750                     u12097:
  6033  005750  2EE8               	decfsz	wreg,f,c
  6034  005752  D7FE               	bra	u12097
  6035  005754  2E06               	decfsz	??_forzarParoAuto^0,f,c
  6036  005756  D7FC               	bra	u12097
  6037  005758  F000               	nop	
  6038  00575A  0012               	return		;funcret
  6039  00575C                     __end_of_forzarParoAuto:
  6040                           	opt callstack 0
  6041                           
  6042 ;; *************** function _forzarGiroDerecha *****************
  6043 ;; Defined at:
  6044 ;;		line 514 in file "main.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6058 ;;      Params:         0       0       0       0       0       0       0       0       0
  6059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6060 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6061 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6062 ;;Total ram usage:        2 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    2
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_forzarEspejeoDerecha
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text25
  6073  0056EE                     __ptext25:
  6074                           	opt callstack 0
  6075  0056EE                     _forzarGiroDerecha:
  6076                           	opt callstack 24
  6077  0056EE                     
  6078                           ;main.c: 515:     LATB4 = 1;
  6079  0056EE  888A               	bsf	3978,4,c	;volatile
  6080                           
  6081                           ;main.c: 516:     LATB5 = 0;
  6082  0056F0  9A8A               	bcf	3978,5,c	;volatile
  6083                           
  6084                           ;main.c: 517:     LATB6 = 0;
  6085  0056F2  9C8A               	bcf	3978,6,c	;volatile
  6086                           
  6087                           ;main.c: 518:     LATB7 = 0;
  6088  0056F4  9E8A               	bcf	3978,7,c	;volatile
  6089  0056F6                     
  6090                           ;main.c: 519:     _delay((unsigned long)((410)*(4000000/4000.0)));
  6091  0056F6  0E03               	movlw	3
  6092  0056F8  6E07               	movwf	(??_forzarGiroDerecha+1)^0,c
  6093  0056FA  0E15               	movlw	21
  6094  0056FC  6E06               	movwf	??_forzarGiroDerecha^0,c
  6095  0056FE  0E74               	movlw	116
  6096  005700                     u12107:
  6097  005700  2EE8               	decfsz	wreg,f,c
  6098  005702  D7FE               	bra	u12107
  6099  005704  2E06               	decfsz	??_forzarGiroDerecha^0,f,c
  6100  005706  D7FC               	bra	u12107
  6101  005708  2E07               	decfsz	(??_forzarGiroDerecha+1)^0,f,c
  6102  00570A  D7FA               	bra	u12107
  6103  00570C  0012               	return		;funcret
  6104  00570E                     __end_of_forzarGiroDerecha:
  6105                           	opt callstack 0
  6106                           
  6107 ;; *************** function _decidirDireccion *****************
  6108 ;; Defined at:
  6109 ;;		line 899 in file "main.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  caminosRecor    2    0[BANK1 ] PTR unsigned char 
  6112 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
  6113 ;;  investigando    2    2[BANK1 ] PTR unsigned char 
  6114 ;;		 -> comportamientoBasico@investigandoCruce(1), 
  6115 ;;  posicionInvC    2    4[BANK1 ] PTR unsigned char 
  6116 ;;		 -> comportamientoBasico@posicionInvCruce(1), 
  6117 ;;  contCaminosR    2    6[BANK1 ] PTR unsigned char 
  6118 ;;		 -> comportamientoBasico@contCaminosRecorridos(1), 
  6119 ;;  caminoActual    2    8[BANK1 ] PTR unsigned char 
  6120 ;;		 -> comportamientoBasico@caminoActual(1), 
  6121 ;;  cambioOrient    2   10[BANK1 ] PTR unsigned char 
  6122 ;;		 -> comportamientoBasico@cambioOrientacionCarro(1), 
  6123 ;;  mapear          2   12[BANK1 ] PTR unsigned char 
  6124 ;;		 -> comportamientoBasico@mapear(1), 
  6125 ;;  cruceDetecta    2   14[BANK1 ] PTR unsigned char 
  6126 ;;		 -> comportamientoBasico@cruceDetectado(1), 
  6127 ;;  avanceRectoL    2   16[BANK1 ] PTR unsigned char 
  6128 ;;		 -> comportamientoBasico@avanceRectoLargo(1), 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  direccionEle    1   83[COMRAM] unsigned char 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      unsigned char 
  6133 ;; Registers used:
  6134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6140 ;;      Params:         0       0      18       0       0       0       0       0       0
  6141 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6142 ;;      Temps:          0       3       0       0       0       0       0       0       0
  6143 ;;      Totals:         1       3      18       0       0       0       0       0       0
  6144 ;;Total ram usage:       22 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:   10
  6147 ;; This function calls:
  6148 ;;		_UART_printf
  6149 ;;		___flge
  6150 ;;		_hayCruce
  6151 ;;		_mostrarDireccionElegida
  6152 ;;		_seLlegoAlDestino
  6153 ;;		_sprintf
  6154 ;;		_velocidadBaja
  6155 ;; This function is called by:
  6156 ;;		_comportamientoBasico
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text26
  6161  001174                     __ptext26:
  6162                           	opt callstack 0
  6163  001174                     _decidirDireccion:
  6164                           	opt callstack 19
  6165  001174                     
  6166                           ;main.c: 899: T_UBYTE decidirDireccion(T_UBYTE* caminosRecorrer, T_UBYTE* investigandoCr
      +                          uce, T_UBYTE* posicionInvCruce,;main.c: 900:         T_UBYTE* contCaminosRecorridos, T_U
      +                          BYTE* caminoActual, T_BOOL* cambioOrientacionCarro,;main.c: 901:         T_UBYTE* mapear
      +                          , T_UBYTE* cruceDetectado, T_BOOL* avanceRectoLargo) {;main.c: 903:     T_UBYTE direccio
      +                          nElegida;;main.c: 904:     llegoDestino = seLlegoAlDestino();
  6167  001174  ECF5  F02A         	call	_seLlegoAlDestino	;wreg free
  6168  001178  0100               	movlb	0	; () banked
  6169  00117A  6FFF               	movwf	_llegoDestino& (0+255),b
  6170  00117C                     
  6171                           ; BSR set to: 0
  6172                           ;main.c: 907:     if (*posicionInvCruce && *investigandoCruce) {
  6173  00117C  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6174  001180  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6175  001184  50DF               	movf	indf2,w,c
  6176  001186  B4D8               	btfsc	status,2,c
  6177  001188  EFC8  F008         	goto	u11281
  6178  00118C  EFCA  F008         	goto	u11280
  6179  001190                     u11281:
  6180  001190  EF9B  F00A         	goto	l10285
  6181  001194                     u11280:
  6182  001194                     
  6183                           ; BSR set to: 0
  6184  001194  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6185  001198  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6186  00119C  50DF               	movf	indf2,w,c
  6187  00119E  B4D8               	btfsc	status,2,c
  6188  0011A0  EFD4  F008         	goto	u11291
  6189  0011A4  EFD6  F008         	goto	u11290
  6190  0011A8                     u11291:
  6191  0011A8  EF9B  F00A         	goto	l10285
  6192  0011AC                     u11290:
  6193  0011AC                     
  6194                           ; BSR set to: 0
  6195                           ;main.c: 909:         if (*posicionInvCruce)
  6196  0011AC  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6197  0011B0  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6198  0011B4  50DF               	movf	indf2,w,c
  6199  0011B6  B4D8               	btfsc	status,2,c
  6200  0011B8  EFE0  F008         	goto	u11301
  6201  0011BC  EFE2  F008         	goto	u11300
  6202  0011C0                     u11301:
  6203  0011C0  EFE8  F008         	goto	l10041
  6204  0011C4                     u11300:
  6205  0011C4                     
  6206                           ; BSR set to: 0
  6207                           ;main.c: 910:             *posicionInvCruce = 0;
  6208  0011C4  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6209  0011C8  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6210  0011CC  0E00               	movlw	0
  6211  0011CE  6EDF               	movwf	indf2,c
  6212  0011D0                     l10041:
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;main.c: 912:         if (llegoDestino) {
  6216  0011D0  51FF               	movf	_llegoDestino& (0+255),w,b
  6217  0011D2  B4D8               	btfsc	status,2,c
  6218  0011D4  EFEE  F008         	goto	u11311
  6219  0011D8  EFF0  F008         	goto	u11310
  6220  0011DC                     u11311:
  6221  0011DC  EF51  F009         	goto	l10065
  6222  0011E0                     u11310:
  6223  0011E0                     
  6224                           ; BSR set to: 0
  6225                           ;main.c: 913:             direccionElegida = ALTO;
  6226  0011E0  0E04               	movlw	4
  6227  0011E2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6228                           
  6229                           ;main.c: 915:         } else {
  6230  0011E4  EF6E  F009         	goto	l10067
  6231  0011E8                     l10045:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;main.c: 919:                     if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1'
      +                          )
  6235  0011E8  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6236  0011EC  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6237  0011F0  0E31               	movlw	49
  6238  0011F2  18DE               	xorwf	postinc2,w,c
  6239  0011F4  A4D8               	btfss	status,2,c
  6240  0011F6  EFFF  F008         	goto	u11321
  6241  0011FA  EF01  F009         	goto	u11320
  6242  0011FE                     u11321:
  6243  0011FE  EF09  F009         	goto	l10049
  6244  001202                     u11320:
  6245  001202                     
  6246                           ; BSR set to: 0
  6247                           ;main.c: 920:                         caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] = 'X';
  6248  001202  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6249  001206  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6250  00120A  0E58               	movlw	88
  6251  00120C  6EDF               	movwf	indf2,c
  6252  00120E  EF6E  F009         	goto	l10067
  6253  001212                     l10049:
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;main.c: 923:                         if (caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] =
      +                          = '1')
  6257  001212  0101               	movlb	1	; () banked
  6258  001214  EE20 F001          	lfsr	2,1
  6259  001218  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6260  00121A  26D9               	addwf	fsr2l,f,c
  6261  00121C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6262  00121E  22DA               	addwfc	fsr2h,f,c
  6263  001220  0E31               	movlw	49
  6264  001222  18DE               	xorwf	postinc2,w,c
  6265  001224  A4D8               	btfss	status,2,c
  6266  001226  EF17  F009         	goto	u11331
  6267  00122A  EF19  F009         	goto	u11330
  6268  00122E                     u11331:
  6269  00122E  EF6E  F009         	goto	l565
  6270  001232                     u11330:
  6271  001232                     l10051:
  6272                           
  6273                           ; BSR set to: 1
  6274                           ;main.c: 924:                             caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] =
      +                           'X';
  6275  001232  EE20 F001          	lfsr	2,1
  6276  001236  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6277  001238  26D9               	addwf	fsr2l,f,c
  6278  00123A  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6279  00123C  22DA               	addwfc	fsr2h,f,c
  6280  00123E  0E58               	movlw	88
  6281  001240  6EDF               	movwf	indf2,c
  6282  001242  EF6E  F009         	goto	l10067
  6283  001246                     l10053:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;main.c: 929:                     if (caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1 ] == '1
      +                          ')
  6287  001246  0101               	movlb	1	; () banked
  6288  001248  EE20 F001          	lfsr	2,1
  6289  00124C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6290  00124E  26D9               	addwf	fsr2l,f,c
  6291  001250  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6292  001252  22DA               	addwfc	fsr2h,f,c
  6293  001254  0E31               	movlw	49
  6294  001256  18DE               	xorwf	postinc2,w,c
  6295  001258  A4D8               	btfss	status,2,c
  6296  00125A  EF31  F009         	goto	u11341
  6297  00125E  EF33  F009         	goto	u11340
  6298  001262                     u11341:
  6299  001262  EF35  F009         	goto	l10057
  6300  001266                     u11340:
  6301  001266  EF19  F009         	goto	l10051
  6302  00126A                     l10057:
  6303                           
  6304                           ; BSR set to: 1
  6305                           ;main.c: 932:                         caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1 ] = 'X';
  6306  00126A  EE20 F002          	lfsr	2,2
  6307  00126E  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6308  001270  26D9               	addwf	fsr2l,f,c
  6309  001272  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6310  001274  22DA               	addwfc	fsr2h,f,c
  6311  001276  0E58               	movlw	88
  6312  001278  6EDF               	movwf	indf2,c
  6313  00127A  EF6E  F009         	goto	l10067
  6314  00127E                     l10059:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;main.c: 938:                     if (caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1 ] == '1'
      +                          )
  6318  00127E  0101               	movlb	1	; () banked
  6319  001280  EE20 F002          	lfsr	2,2
  6320  001284  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6321  001286  26D9               	addwf	fsr2l,f,c
  6322  001288  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6323  00128A  22DA               	addwfc	fsr2h,f,c
  6324  00128C  0E31               	movlw	49
  6325  00128E  18DE               	xorwf	postinc2,w,c
  6326  001290  A4D8               	btfss	status,2,c
  6327  001292  EF4D  F009         	goto	u11351
  6328  001296  EF4F  F009         	goto	u11350
  6329  00129A                     u11351:
  6330  00129A  EF6E  F009         	goto	l10067
  6331  00129E                     u11350:
  6332  00129E  EF35  F009         	goto	l10057
  6333  0012A2                     l10065:
  6334                           
  6335                           ; BSR set to: 0
  6336  0012A2  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6337  0012A6  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6338  0012AA  50DF               	movf	indf2,w,c
  6339  0012AC  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6340  0012AE  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6341                           
  6342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6343                           ; Switch size 1, requested type "simple"
  6344                           ; Number of cases is 1, Range of values is 0 to 0
  6345                           ; switch strategies available:
  6346                           ; Name         Instructions Cycles
  6347                           ; simple_byte            4     3 (average)
  6348                           ;	Chosen strategy is simple_byte
  6349  0012B0  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6350  0012B2  0A00               	xorlw	0	; case 0
  6351  0012B4  B4D8               	btfsc	status,2,c
  6352  0012B6  EF5F  F009         	goto	l11169
  6353  0012BA  EF6E  F009         	goto	l10067
  6354  0012BE                     l11169:
  6355                           
  6356                           ; BSR set to: 0
  6357                           ; Switch size 1, requested type "simple"
  6358                           ; Number of cases is 3, Range of values is 1 to 3
  6359                           ; switch strategies available:
  6360                           ; Name         Instructions Cycles
  6361                           ; simple_byte           10     6 (average)
  6362                           ;	Chosen strategy is simple_byte
  6363  0012BE  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6364  0012C0  0A01               	xorlw	1	; case 1
  6365  0012C2  B4D8               	btfsc	status,2,c
  6366  0012C4  EFF4  F008         	goto	l10045
  6367  0012C8  0A03               	xorlw	3	; case 2
  6368  0012CA  B4D8               	btfsc	status,2,c
  6369  0012CC  EF23  F009         	goto	l10053
  6370  0012D0  0A01               	xorlw	1	; case 3
  6371  0012D2  B4D8               	btfsc	status,2,c
  6372  0012D4  EF3F  F009         	goto	l10059
  6373  0012D8  EF6E  F009         	goto	l10067
  6374  0012DC                     l565:
  6375  0012DC                     l10067:
  6376                           
  6377                           ;main.c: 948:         if (!(*cambioOrientacionCarro)) {
  6378  0012DC  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6379  0012E0  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6380  0012E4  50DF               	movf	indf2,w,c
  6381  0012E6  A4D8               	btfss	status,2,c
  6382  0012E8  EF78  F009         	goto	u11361
  6383  0012EC  EF7A  F009         	goto	u11360
  6384  0012F0                     u11361:
  6385  0012F0  EF6A  F00A         	goto	l10277
  6386  0012F4                     u11360:
  6387  0012F4                     
  6388                           ;main.c: 950:             if (caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1 ] == '1')
  6389  0012F4  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6390  0012F8  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6391  0012FC  0E31               	movlw	49
  6392  0012FE  18DE               	xorwf	postinc2,w,c
  6393  001300  A4D8               	btfss	status,2,c
  6394  001302  EF85  F009         	goto	u11371
  6395  001306  EF87  F009         	goto	u11370
  6396  00130A                     u11371:
  6397  00130A  EF8B  F009         	goto	l10073
  6398  00130E                     u11370:
  6399  00130E                     
  6400                           ;main.c: 951:                 direccionElegida = SENSOR_PRIORIDAD_ALTA;
  6401  00130E  0E01               	movlw	1
  6402  001310  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6403  001312  EFB0  F009         	goto	l10081
  6404  001316                     l10073:
  6405  001316  0101               	movlb	1	; () banked
  6406  001318  EE20 F001          	lfsr	2,1
  6407  00131C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6408  00131E  26D9               	addwf	fsr2l,f,c
  6409  001320  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6410  001322  22DA               	addwfc	fsr2h,f,c
  6411  001324  0E31               	movlw	49
  6412  001326  18DE               	xorwf	postinc2,w,c
  6413  001328  A4D8               	btfss	status,2,c
  6414  00132A  EF99  F009         	goto	u11381
  6415  00132E  EF9B  F009         	goto	u11380
  6416  001332                     u11381:
  6417  001332  EF9F  F009         	goto	l10077
  6418  001336                     u11380:
  6419  001336                     
  6420                           ; BSR set to: 1
  6421                           ;main.c: 953:                 direccionElegida = SENSOR_PRIORIDAD_MEDIA;
  6422  001336  0E02               	movlw	2
  6423  001338  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6424  00133A  EFB0  F009         	goto	l10081
  6425  00133E                     l10077:
  6426                           
  6427                           ; BSR set to: 1
  6428  00133E  EE20 F002          	lfsr	2,2
  6429  001342  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6430  001344  26D9               	addwf	fsr2l,f,c
  6431  001346  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6432  001348  22DA               	addwfc	fsr2h,f,c
  6433  00134A  0E31               	movlw	49
  6434  00134C  18DE               	xorwf	postinc2,w,c
  6435  00134E  A4D8               	btfss	status,2,c
  6436  001350  EFAC  F009         	goto	u11391
  6437  001354  EFAE  F009         	goto	u11390
  6438  001358                     u11391:
  6439  001358  EFB0  F009         	goto	l10081
  6440  00135C                     u11390:
  6441  00135C                     
  6442                           ; BSR set to: 1
  6443                           ;main.c: 955:                 direccionElegida = SENSOR_PRIORIDAD_BAJA;
  6444  00135C  0E03               	movlw	3
  6445  00135E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6446  001360                     l10081:
  6447                           
  6448                           ;main.c: 958:             *caminoActual = direccionElegida;
  6449  001360  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6450  001364  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6451  001368  C054  FFDF         	movff	decidirDireccion@direccionElegida,indf2
  6452  00136C                     
  6453                           ;main.c: 959:             *cambioOrientacionCarro = 1;
  6454  00136C  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6455  001370  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6456  001374  0E01               	movlw	1
  6457  001376  6EDF               	movwf	indf2,c
  6458                           
  6459                           ;main.c: 961:         } else {
  6460  001378  EF88  F00A         	goto	l10279
  6461  00137C                     l595:
  6462                           
  6463                           ; BSR set to: 1
  6464  00137C  EF02  F00A         	goto	l10181
  6465  001380                     l10139:
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;main.c: 1017:                             if (SENSOR_PRIORIDAD_MEDIA == IZQUIERDA &&
  6469  001380  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6470  001384  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6471  001388  0E58               	movlw	88
  6472  00138A  18DE               	xorwf	postinc2,w,c
  6473  00138C  A4D8               	btfss	status,2,c
  6474  00138E  EFCB  F009         	goto	u11401
  6475  001392  EFCD  F009         	goto	u11400
  6476  001396                     u11401:
  6477  001396  EF02  F00A         	goto	l10181
  6478  00139A                     u11400:
  6479  00139A                     
  6480                           ; BSR set to: 0
  6481  00139A  0101               	movlb	1	; () banked
  6482  00139C  EE20 F001          	lfsr	2,1
  6483  0013A0  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6484  0013A2  26D9               	addwf	fsr2l,f,c
  6485  0013A4  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6486  0013A6  22DA               	addwfc	fsr2h,f,c
  6487  0013A8  0E31               	movlw	49
  6488  0013AA  18DE               	xorwf	postinc2,w,c
  6489  0013AC  A4D8               	btfss	status,2,c
  6490  0013AE  EFDB  F009         	goto	u11411
  6491  0013B2  EFDD  F009         	goto	u11410
  6492  0013B6                     u11411:
  6493  0013B6  EFE7  F009         	goto	l10159
  6494  0013BA                     u11410:
  6495  0013BA                     
  6496                           ; BSR set to: 1
  6497                           ;main.c: 1018:                                     caminosRecorrer[SENSOR_PRIORIDAD_MEDI
      +                          A - 1] == '1') {;main.c: 1019:                                 *caminoActual = IZQUIERDA
      +                          ;
  6498  0013BA  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6499  0013BE  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6500  0013C2  0E02               	movlw	2
  6501  0013C4  6EDF               	movwf	indf2,c
  6502  0013C6                     
  6503                           ; BSR set to: 1
  6504                           ;main.c: 1020:                                 direccionElegida = DERECHA;
  6505  0013C6  0E03               	movlw	3
  6506  0013C8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6507                           
  6508                           ;main.c: 1021:                             } else if (SENSOR_PRIORIDAD_MEDIA == DERECHA 
      +                          &&
  6509  0013CA  EF02  F00A         	goto	l10181
  6510  0013CE                     l10159:
  6511                           
  6512                           ; BSR set to: 1
  6513  0013CE  EE20 F002          	lfsr	2,2
  6514  0013D2  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6515  0013D4  26D9               	addwf	fsr2l,f,c
  6516  0013D6  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6517  0013D8  22DA               	addwfc	fsr2h,f,c
  6518  0013DA  0E31               	movlw	49
  6519  0013DC  18DE               	xorwf	postinc2,w,c
  6520  0013DE  A4D8               	btfss	status,2,c
  6521  0013E0  EFF4  F009         	goto	u11421
  6522  0013E4  EFF6  F009         	goto	u11420
  6523  0013E8                     u11421:
  6524  0013E8  EFBE  F009         	goto	l595
  6525  0013EC                     u11420:
  6526  0013EC                     
  6527                           ; BSR set to: 1
  6528                           ;main.c: 1030:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1031:                                 *caminoActual = DERECHA;
  6529  0013EC  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6530  0013F0  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6531  0013F4  0E03               	movlw	3
  6532  0013F6  6EDF               	movwf	indf2,c
  6533  0013F8                     
  6534                           ; BSR set to: 1
  6535                           ;main.c: 1032:                                 direccionElegida = IZQUIERDA;
  6536  0013F8  0E02               	movlw	2
  6537  0013FA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6538  0013FC  EF02  F00A         	goto	l10181
  6539  001400                     l612:
  6540                           
  6541                           ; BSR set to: 1
  6542  001400  EF88  F00A         	goto	l10279
  6543  001404                     l10181:
  6544                           
  6545                           ;main.c: 1059:                             if (SENSOR_PRIORIDAD_BAJA == DERECHA &&
  6546  001404  0101               	movlb	1	; () banked
  6547  001406  EE20 F001          	lfsr	2,1
  6548  00140A  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6549  00140C  26D9               	addwf	fsr2l,f,c
  6550  00140E  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6551  001410  22DA               	addwfc	fsr2h,f,c
  6552  001412  0E58               	movlw	88
  6553  001414  18DE               	xorwf	postinc2,w,c
  6554  001416  A4D8               	btfss	status,2,c
  6555  001418  EF10  F00A         	goto	u11431
  6556  00141C  EF12  F00A         	goto	u11430
  6557  001420                     u11431:
  6558  001420  EF88  F00A         	goto	l10279
  6559  001424                     u11430:
  6560  001424                     
  6561                           ; BSR set to: 1
  6562  001424  EE20 F002          	lfsr	2,2
  6563  001428  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6564  00142A  26D9               	addwf	fsr2l,f,c
  6565  00142C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6566  00142E  22DA               	addwfc	fsr2h,f,c
  6567  001430  0E31               	movlw	49
  6568  001432  18DE               	xorwf	postinc2,w,c
  6569  001434  A4D8               	btfss	status,2,c
  6570  001436  EF1F  F00A         	goto	u11441
  6571  00143A  EF21  F00A         	goto	u11440
  6572  00143E                     u11441:
  6573  00143E  EF00  F00A         	goto	l612
  6574  001442                     u11440:
  6575  001442                     l10185:
  6576                           
  6577                           ; BSR set to: 1
  6578                           ;main.c: 1060:                                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA
      +                           - 1] == '1') {;main.c: 1061:                                 *caminoActual = DERECHA;
  6579  001442  C1DA  FFD9         	movff	decidirDireccion@caminoActual,fsr2l
  6580  001446  C1DB  FFDA         	movff	decidirDireccion@caminoActual+1,fsr2h
  6581  00144A  0E03               	movlw	3
  6582  00144C  6EDF               	movwf	indf2,c
  6583  00144E                     
  6584                           ; BSR set to: 1
  6585                           ;main.c: 1062:                                 direccionElegida = ENFRENTE;
  6586  00144E  0E01               	movlw	1
  6587  001450  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6588                           
  6589                           ;main.c: 1063:                             } else if (SENSOR_PRIORIDAD_BAJA == ENFRENTE 
      +                          &&
  6590  001452  EF88  F00A         	goto	l10279
  6591  001456                     l10227:
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;main.c: 1114:                             if (SENSOR_PRIORIDAD_BAJA == DERECHA &&
  6595  001456  0101               	movlb	1	; () banked
  6596  001458  EE20 F001          	lfsr	2,1
  6597  00145C  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6598  00145E  26D9               	addwf	fsr2l,f,c
  6599  001460  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6600  001462  22DA               	addwfc	fsr2h,f,c
  6601  001464  0E58               	movlw	88
  6602  001466  18DE               	xorwf	postinc2,w,c
  6603  001468  A4D8               	btfss	status,2,c
  6604  00146A  EF39  F00A         	goto	u11451
  6605  00146E  EF3B  F00A         	goto	u11450
  6606  001472                     u11451:
  6607  001472  EF88  F00A         	goto	l10279
  6608  001476                     u11450:
  6609  001476                     
  6610                           ; BSR set to: 1
  6611  001476  EE20 F002          	lfsr	2,2
  6612  00147A  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6613  00147C  26D9               	addwf	fsr2l,f,c
  6614  00147E  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6615  001480  22DA               	addwfc	fsr2h,f,c
  6616  001482  0E31               	movlw	49
  6617  001484  18DE               	xorwf	postinc2,w,c
  6618  001486  A4D8               	btfss	status,2,c
  6619  001488  EF48  F00A         	goto	u11461
  6620  00148C  EF4A  F00A         	goto	u11460
  6621  001490                     u11461:
  6622  001490  EF4C  F00A         	goto	l10241
  6623  001494                     u11460:
  6624  001494  EF21  F00A         	goto	l10185
  6625  001498                     l10241:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;main.c: 1123:                                 *contCaminosRecorridos = 3;
  6629  001498  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6630  00149C  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6631  0014A0  0E03               	movlw	3
  6632  0014A2  6EDF               	movwf	indf2,c
  6633  0014A4  EF88  F00A         	goto	l10279
  6634  0014A8                     l10271:
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;main.c: 1162:                     *cambioOrientacionCarro = 0;
  6638  0014A8  C1DC  FFD9         	movff	decidirDireccion@cambioOrientacionCarro,fsr2l
  6639  0014AC  C1DD  FFDA         	movff	decidirDireccion@cambioOrientacionCarro+1,fsr2h
  6640  0014B0  0E00               	movlw	0
  6641  0014B2  6EDF               	movwf	indf2,c
  6642                           
  6643                           ;main.c: 1163:                     *contCaminosRecorridos = 0;
  6644  0014B4  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6645  0014B8  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6646  0014BC  0E00               	movlw	0
  6647  0014BE  6EDF               	movwf	indf2,c
  6648                           
  6649                           ;main.c: 1164:                     *investigandoCruce = 0;
  6650  0014C0  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6651  0014C4  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6652  0014C8  0E00               	movlw	0
  6653  0014CA  6EDF               	movwf	indf2,c
  6654  0014CC                     
  6655                           ; BSR set to: 0
  6656                           ;main.c: 1165:                     direccionElegida = ALTO;
  6657  0014CC  0E04               	movlw	4
  6658  0014CE  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6659                           
  6660                           ;main.c: 1167:                     break;
  6661  0014D0  EF88  F00A         	goto	l10279
  6662  0014D4                     l10277:
  6663  0014D4  C1D8  FFD9         	movff	decidirDireccion@contCaminosRecorridos,fsr2l
  6664  0014D8  C1D9  FFDA         	movff	decidirDireccion@contCaminosRecorridos+1,fsr2h
  6665  0014DC  50DF               	movf	indf2,w,c
  6666  0014DE  0100               	movlb	0	; () banked
  6667  0014E0  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6668  0014E2  6BFC               	clrf	(??_decidirDireccion+1)& (0+255),b
  6669                           
  6670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6671                           ; Switch size 1, requested type "simple"
  6672                           ; Number of cases is 1, Range of values is 0 to 0
  6673                           ; switch strategies available:
  6674                           ; Name         Instructions Cycles
  6675                           ; simple_byte            4     3 (average)
  6676                           ;	Chosen strategy is simple_byte
  6677  0014E4  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6678  0014E6  0A00               	xorlw	0	; case 0
  6679  0014E8  B4D8               	btfsc	status,2,c
  6680  0014EA  EF79  F00A         	goto	l11171
  6681  0014EE  EF88  F00A         	goto	l10279
  6682  0014F2                     l11171:
  6683                           
  6684                           ; BSR set to: 0
  6685                           ; Switch size 1, requested type "simple"
  6686                           ; Number of cases is 3, Range of values is 1 to 3
  6687                           ; switch strategies available:
  6688                           ; Name         Instructions Cycles
  6689                           ; simple_byte           10     6 (average)
  6690                           ;	Chosen strategy is simple_byte
  6691  0014F2  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6692  0014F4  0A01               	xorlw	1	; case 1
  6693  0014F6  B4D8               	btfsc	status,2,c
  6694  0014F8  EFC0  F009         	goto	l10139
  6695  0014FC  0A03               	xorlw	3	; case 2
  6696  0014FE  B4D8               	btfsc	status,2,c
  6697  001500  EF2B  F00A         	goto	l10227
  6698  001504  0A01               	xorlw	1	; case 3
  6699  001506  B4D8               	btfsc	status,2,c
  6700  001508  EF54  F00A         	goto	l10271
  6701  00150C  EF88  F00A         	goto	l10279
  6702  001510                     l10279:
  6703                           
  6704                           ;main.c: 1171:         if (direccionElegida == ENFRENTE)
  6705  001510  0454               	decf	decidirDireccion@direccionElegida^0,w,c
  6706  001512  A4D8               	btfss	status,2,c
  6707  001514  EF8E  F00A         	goto	u11471
  6708  001518  EF90  F00A         	goto	u11470
  6709  00151C                     u11471:
  6710  00151C  EF96  F00A         	goto	l10283
  6711  001520                     u11470:
  6712  001520                     
  6713                           ;main.c: 1172:             *avanceRectoLargo = 1;
  6714  001520  C1E2  FFD9         	movff	decidirDireccion@avanceRectoLargo,fsr2l
  6715  001524  C1E3  FFDA         	movff	decidirDireccion@avanceRectoLargo+1,fsr2h
  6716  001528  0E01               	movlw	1
  6717  00152A  6EDF               	movwf	indf2,c
  6718  00152C                     l10283:
  6719                           
  6720                           ;main.c: 1174:         mostrarDireccionElegida(direccionElegida);
  6721  00152C  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  6722  00152E  EC24  F026         	call	_mostrarDireccionElegida
  6723                           
  6724                           ;main.c: 1176:     } else {
  6725  001532  EF7E  F00B         	goto	l659
  6726  001536                     l10285:
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;main.c: 1178:         if (llegoDestino) {
  6730  001536  51FF               	movf	_llegoDestino& (0+255),w,b
  6731  001538  B4D8               	btfsc	status,2,c
  6732  00153A  EFA1  F00A         	goto	u11481
  6733  00153E  EFA3  F00A         	goto	u11480
  6734  001542                     u11481:
  6735  001542  EFA7  F00A         	goto	l10289
  6736  001546                     u11480:
  6737  001546                     
  6738                           ; BSR set to: 0
  6739                           ;main.c: 1179:             direccionElegida = ALTO;
  6740  001546  0E04               	movlw	4
  6741  001548  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6742                           
  6743                           ;main.c: 1181:         } else {
  6744  00154A  EF7E  F00B         	goto	l659
  6745  00154E                     l10289:
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;main.c: 1183:             if (hayCruce(caminosRecorrer, *investigandoCruce)) {
  6749  00154E  C1D2  F040         	movff	decidirDireccion@caminosRecorrer,hayCruce@caminosRecorrer
  6750  001552  C1D3  F041         	movff	decidirDireccion@caminosRecorrer+1,hayCruce@caminosRecorrer+1
  6751  001556  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6752  00155A  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6753  00155E  50DF               	movf	indf2,w,c
  6754  001560  6E42               	movwf	hayCruce@investigandoCruce^0,c
  6755  001562  ECC2  F01B         	call	_hayCruce	;wreg free
  6756  001566  0900               	iorlw	0
  6757  001568  B4D8               	btfsc	status,2,c
  6758  00156A  EFB9  F00A         	goto	u11491
  6759  00156E  EFBB  F00A         	goto	u11490
  6760  001572                     u11491:
  6761  001572  EF25  F00B         	goto	l10305
  6762  001576                     u11490:
  6763  001576                     
  6764                           ;main.c: 1185:                 velocidadBaja();
  6765  001576  EC1F  F02B         	call	_velocidadBaja	;wreg free
  6766  00157A                     
  6767                           ;main.c: 1187:                 if (!(*cruceDetectado)) {
  6768  00157A  C1E0  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  6769  00157E  C1E1  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  6770  001582  50DF               	movf	indf2,w,c
  6771  001584  A4D8               	btfss	status,2,c
  6772  001586  EFC7  F00A         	goto	u11501
  6773  00158A  EFC9  F00A         	goto	u11500
  6774  00158E                     u11501:
  6775  00158E  EF7E  F00B         	goto	l659
  6776  001592                     u11500:
  6777  001592                     
  6778                           ;main.c: 1189:                     if (!(*investigandoCruce))
  6779  001592  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6780  001596  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6781  00159A  50DF               	movf	indf2,w,c
  6782  00159C  A4D8               	btfss	status,2,c
  6783  00159E  EFD3  F00A         	goto	u11511
  6784  0015A2  EFD5  F00A         	goto	u11510
  6785  0015A6                     u11511:
  6786  0015A6  EFDB  F00A         	goto	l664
  6787  0015AA                     u11510:
  6788  0015AA                     
  6789                           ;main.c: 1190:                         *posicionInvCruce = 1;
  6790  0015AA  C1D6  FFD9         	movff	decidirDireccion@posicionInvCruce,fsr2l
  6791  0015AE  C1D7  FFDA         	movff	decidirDireccion@posicionInvCruce+1,fsr2h
  6792  0015B2  0E01               	movlw	1
  6793  0015B4  6EDF               	movwf	indf2,c
  6794  0015B6                     l664:
  6795                           
  6796                           ;main.c: 1192:                     *mapear = 1;
  6797  0015B6  C1DE  FFD9         	movff	decidirDireccion@mapear,fsr2l
  6798  0015BA  C1DF  FFDA         	movff	decidirDireccion@mapear+1,fsr2h
  6799  0015BE  0E01               	movlw	1
  6800  0015C0  6EDF               	movwf	indf2,c
  6801                           
  6802                           ;main.c: 1193:                     *cruceDetectado = 1;
  6803  0015C2  C1E0  FFD9         	movff	decidirDireccion@cruceDetectado,fsr2l
  6804  0015C6  C1E1  FFDA         	movff	decidirDireccion@cruceDetectado+1,fsr2h
  6805  0015CA  0E01               	movlw	1
  6806  0015CC  6EDF               	movwf	indf2,c
  6807                           
  6808                           ;main.c: 1194:                     *investigandoCruce = 1;
  6809  0015CE  C1D4  FFD9         	movff	decidirDireccion@investigandoCruce,fsr2l
  6810  0015D2  C1D5  FFDA         	movff	decidirDireccion@investigandoCruce+1,fsr2h
  6811  0015D6  0E01               	movlw	1
  6812  0015D8  6EDF               	movwf	indf2,c
  6813  0015DA                     
  6814                           ;main.c: 1195:                     direccionElegida = ALTO;
  6815  0015DA  0E04               	movlw	4
  6816  0015DC  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6817  0015DE                     
  6818                           ;main.c: 1197:                     sprintf(buffer, "Investigando Cruce: %c | %c | %c\n",
  6819  0015DE  0E91               	movlw	low _buffer
  6820  0015E0  0100               	movlb	0	; () banked
  6821  0015E2  6FE7               	movwf	sprintf@s& (0+255),b
  6822  0015E4  0E01               	movlw	high _buffer
  6823  0015E6  6FE8               	movwf	(sprintf@s+1)& (0+255),b
  6824  0015E8  0E88               	movlw	low STR_19
  6825  0015EA  6FE9               	movwf	sprintf@fmt& (0+255),b
  6826  0015EC  0E7E               	movlw	high STR_19
  6827  0015EE  6FEA               	movwf	(sprintf@fmt+1)& (0+255),b
  6828  0015F0  C1D2  FFD9         	movff	decidirDireccion@caminosRecorrer,fsr2l
  6829  0015F4  C1D3  FFDA         	movff	decidirDireccion@caminosRecorrer+1,fsr2h
  6830  0015F8  50DF               	movf	indf2,w,c
  6831  0015FA  6FFB               	movwf	??_decidirDireccion& (0+255),b
  6832  0015FC  51FB               	movf	??_decidirDireccion& (0+255),w,b
  6833  0015FE  6FEB               	movwf	(?_sprintf+4)& (0+255),b
  6834  001600  6BEC               	clrf	(?_sprintf+5)& (0+255),b
  6835  001602  0101               	movlb	1	; () banked
  6836  001604  EE20 F001          	lfsr	2,1
  6837  001608  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6838  00160A  26D9               	addwf	fsr2l,f,c
  6839  00160C  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6840  00160E  22DA               	addwfc	fsr2h,f,c
  6841  001610  50DF               	movf	indf2,w,c
  6842  001612  0100               	movlb	0	; () banked
  6843  001614  6FFC               	movwf	(??_decidirDireccion+1)& (0+255),b
  6844  001616  51FC               	movf	(??_decidirDireccion+1)& (0+255),w,b
  6845  001618  6FED               	movwf	(?_sprintf+6)& (0+255),b
  6846  00161A  6BEE               	clrf	(?_sprintf+7)& (0+255),b
  6847  00161C  0101               	movlb	1	; () banked
  6848  00161E  EE20 F002          	lfsr	2,2
  6849  001622  51D2               	movf	decidirDireccion@caminosRecorrer& (0+255),w,b
  6850  001624  26D9               	addwf	fsr2l,f,c
  6851  001626  51D3               	movf	(decidirDireccion@caminosRecorrer+1)& (0+255),w,b
  6852  001628  22DA               	addwfc	fsr2h,f,c
  6853  00162A  50DF               	movf	indf2,w,c
  6854  00162C  0100               	movlb	0	; () banked
  6855  00162E  6FFD               	movwf	(??_decidirDireccion+2)& (0+255),b
  6856  001630  51FD               	movf	(??_decidirDireccion+2)& (0+255),w,b
  6857  001632  6FEF               	movwf	(?_sprintf+8)& (0+255),b
  6858  001634  6BF0               	clrf	(?_sprintf+9)& (0+255),b
  6859  001636  ECF3  F028         	call	_sprintf	;wreg free
  6860  00163A                     
  6861                           ;main.c: 1199:                     UART_printf(buffer);
  6862  00163A  0E91               	movlw	low _buffer
  6863  00163C  6E07               	movwf	UART_printf@cadena^0,c
  6864  00163E  0E01               	movlw	high _buffer
  6865  001640  6E08               	movwf	(UART_printf@cadena+1)^0,c
  6866  001642  EC13  F028         	call	_UART_printf	;wreg free
  6867  001646  EF7E  F00B         	goto	l659
  6868  00164A                     l10305:
  6869                           
  6870                           ;main.c: 1205:                 if (DISTANCIA_PRIORIDAD_ALTA > 14)
  6871  00164A  0E00               	movlw	0
  6872  00164C  6E34               	movwf	___flge@ff1^0,c
  6873  00164E  0E00               	movlw	0
  6874  001650  6E35               	movwf	(___flge@ff1+1)^0,c
  6875  001652  0E60               	movlw	96
  6876  001654  6E36               	movwf	(___flge@ff1+2)^0,c
  6877  001656  0E41               	movlw	65
  6878  001658  6E37               	movwf	(___flge@ff1+3)^0,c
  6879  00165A  C114  F038         	movff	_DISTANCIA_PRIORIDAD_ALTA,___flge@ff2
  6880  00165E  C115  F039         	movff	_DISTANCIA_PRIORIDAD_ALTA+1,___flge@ff2+1
  6881  001662  C116  F03A         	movff	_DISTANCIA_PRIORIDAD_ALTA+2,___flge@ff2+2
  6882  001666  C117  F03B         	movff	_DISTANCIA_PRIORIDAD_ALTA+3,___flge@ff2+3
  6883  00166A  ECFC  F020         	call	___flge	;wreg free
  6884  00166E  B0D8               	btfsc	status,0,c
  6885  001670  EF3C  F00B         	goto	u11521
  6886  001674  EF3E  F00B         	goto	u11520
  6887  001678                     u11521:
  6888  001678  EF42  F00B         	goto	l10309
  6889  00167C                     u11520:
  6890  00167C                     
  6891                           ;main.c: 1206:                     direccionElegida = SENSOR_PRIORIDAD_ALTA;
  6892  00167C  0E01               	movlw	1
  6893  00167E  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6894  001680  EF7E  F00B         	goto	l659
  6895  001684                     l10309:
  6896  001684  0E00               	movlw	0
  6897  001686  6E34               	movwf	___flge@ff1^0,c
  6898  001688  0E00               	movlw	0
  6899  00168A  6E35               	movwf	(___flge@ff1+1)^0,c
  6900  00168C  0EF0               	movlw	240
  6901  00168E  6E36               	movwf	(___flge@ff1+2)^0,c
  6902  001690  0E41               	movlw	65
  6903  001692  6E37               	movwf	(___flge@ff1+3)^0,c
  6904  001694  C110  F038         	movff	_DISTANCIA_PRIORIDAD_MEDIA,___flge@ff2
  6905  001698  C111  F039         	movff	_DISTANCIA_PRIORIDAD_MEDIA+1,___flge@ff2+1
  6906  00169C  C112  F03A         	movff	_DISTANCIA_PRIORIDAD_MEDIA+2,___flge@ff2+2
  6907  0016A0  C113  F03B         	movff	_DISTANCIA_PRIORIDAD_MEDIA+3,___flge@ff2+3
  6908  0016A4  ECFC  F020         	call	___flge	;wreg free
  6909  0016A8  B0D8               	btfsc	status,0,c
  6910  0016AA  EF59  F00B         	goto	u11531
  6911  0016AE  EF5B  F00B         	goto	u11530
  6912  0016B2                     u11531:
  6913  0016B2  EF5F  F00B         	goto	l10313
  6914  0016B6                     u11530:
  6915  0016B6                     
  6916                           ;main.c: 1208:                     direccionElegida = SENSOR_PRIORIDAD_MEDIA;
  6917  0016B6  0E02               	movlw	2
  6918  0016B8  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6919  0016BA  EF7E  F00B         	goto	l659
  6920  0016BE                     l10313:
  6921  0016BE  0E00               	movlw	0
  6922  0016C0  6E34               	movwf	___flge@ff1^0,c
  6923  0016C2  0E00               	movlw	0
  6924  0016C4  6E35               	movwf	(___flge@ff1+1)^0,c
  6925  0016C6  0EF0               	movlw	240
  6926  0016C8  6E36               	movwf	(___flge@ff1+2)^0,c
  6927  0016CA  0E41               	movlw	65
  6928  0016CC  6E37               	movwf	(___flge@ff1+3)^0,c
  6929  0016CE  C10C  F038         	movff	_DISTANCIA_PRIORIDAD_BAJA,___flge@ff2
  6930  0016D2  C10D  F039         	movff	_DISTANCIA_PRIORIDAD_BAJA+1,___flge@ff2+1
  6931  0016D6  C10E  F03A         	movff	_DISTANCIA_PRIORIDAD_BAJA+2,___flge@ff2+2
  6932  0016DA  C10F  F03B         	movff	_DISTANCIA_PRIORIDAD_BAJA+3,___flge@ff2+3
  6933  0016DE  ECFC  F020         	call	___flge	;wreg free
  6934  0016E2  B0D8               	btfsc	status,0,c
  6935  0016E4  EF76  F00B         	goto	u11541
  6936  0016E8  EF78  F00B         	goto	u11540
  6937  0016EC                     u11541:
  6938  0016EC  EF7C  F00B         	goto	l10317
  6939  0016F0                     u11540:
  6940  0016F0                     
  6941                           ;main.c: 1210:                     direccionElegida = SENSOR_PRIORIDAD_BAJA;
  6942  0016F0  0E03               	movlw	3
  6943  0016F2  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6944  0016F4  EF7E  F00B         	goto	l659
  6945  0016F8                     l10317:
  6946                           
  6947                           ;main.c: 1212:                     direccionElegida = 0;
  6948  0016F8  0E00               	movlw	0
  6949  0016FA  6E54               	movwf	decidirDireccion@direccionElegida^0,c
  6950  0016FC                     l659:
  6951                           
  6952                           ;main.c: 1221:     return direccionElegida;
  6953  0016FC  5054               	movf	decidirDireccion@direccionElegida^0,w,c
  6954  0016FE  0012               	return		;funcret
  6955  001700                     __end_of_decidirDireccion:
  6956                           	opt callstack 0
  6957                           
  6958 ;; *************** function _velocidadBaja *****************
  6959 ;; Defined at:
  6960 ;;		line 1344 in file "main.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;		None
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;		None
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      void 
  6967 ;; Registers used:
  6968 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6974 ;;      Params:         0       0       0       0       0       0       0       0       0
  6975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6978 ;;Total ram usage:        0 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    5
  6981 ;; This function calls:
  6982 ;;		_pwmDuty
  6983 ;; This function is called by:
  6984 ;;		_comportamientoBasico
  6985 ;;		_decidirDireccion
  6986 ;;		_probarCruceT
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           	psect	text27
  6991  00563E                     __ptext27:
  6992                           	opt callstack 0
  6993  00563E                     _velocidadBaja:
  6994                           	opt callstack 24
  6995  00563E                     
  6996                           ;main.c: 1346:     pwmDuty(70, 1);
  6997  00563E  0E00               	movlw	0
  6998  005640  0100               	movlb	0	; () banked
  6999  005642  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7000  005644  0E46               	movlw	70
  7001  005646  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7002  005648  0E01               	movlw	1
  7003  00564A  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7004  00564C  EC42  F019         	call	_pwmDuty	;wreg free
  7005                           
  7006                           ;main.c: 1347:     pwmDuty(70, 2);
  7007  005650  0E00               	movlw	0
  7008  005652  0100               	movlb	0	; () banked
  7009  005654  6F7D               	movwf	(pwmDuty@cicloTrabajo+1)& (0+255),b
  7010  005656  0E46               	movlw	70
  7011  005658  6F7C               	movwf	pwmDuty@cicloTrabajo& (0+255),b
  7012  00565A  0E02               	movlw	2
  7013  00565C  6F7E               	movwf	pwmDuty@channel& (0+255),b
  7014  00565E  EC42  F019         	call	_pwmDuty	;wreg free
  7015  005662  0012               	return		;funcret
  7016  005664                     __end_of_velocidadBaja:
  7017                           	opt callstack 0
  7018                           
  7019 ;; *************** function _pwmDuty *****************
  7020 ;; Defined at:
  7021 ;;		line 20 in file "./pwm.h"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  cicloTrabajo    2   28[BANK0 ] unsigned int 
  7024 ;;  channel         1   30[BANK0 ] unsigned char 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  duty            4   36[BANK0 ] long 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7036 ;;      Params:         0       3       0       0       0       0       0       0       0
  7037 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7038 ;;      Temps:          0       5       0       0       0       0       0       0       0
  7039 ;;      Totals:         0      12       0       0       0       0       0       0       0
  7040 ;;Total ram usage:       12 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    4
  7043 ;; This function calls:
  7044 ;;		___fldiv
  7045 ;;		___flmul
  7046 ;;		___fltol
  7047 ;;		___xxtofl
  7048 ;;		_map
  7049 ;; This function is called by:
  7050 ;;		_PID
  7051 ;;		_velocidadEstandar
  7052 ;;		_velocidadBaja
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text28
  7057  003284                     __ptext28:
  7058                           	opt callstack 0
  7059  003284                     _pwmDuty:
  7060                           	opt callstack 24
  7061  003284                     
  7062                           ;./pwm.h: 22:     T_LONG duty = map(cicloTrabajo, 0, 100, 0, 1023);
  7063  003284  C07C  F020         	movff	pwmDuty@cicloTrabajo,map@x
  7064  003288  C07D  F021         	movff	pwmDuty@cicloTrabajo+1,map@x+1
  7065  00328C  6A22               	clrf	(map@x+2)^0,c
  7066  00328E  6A23               	clrf	(map@x+3)^0,c
  7067  003290  0E00               	movlw	0
  7068  003292  6E24               	movwf	map@in_min^0,c
  7069  003294  0E00               	movlw	0
  7070  003296  6E25               	movwf	(map@in_min+1)^0,c
  7071  003298  0E00               	movlw	0
  7072  00329A  6E26               	movwf	(map@in_min+2)^0,c
  7073  00329C  0E00               	movlw	0
  7074  00329E  6E27               	movwf	(map@in_min+3)^0,c
  7075  0032A0  0E64               	movlw	100
  7076  0032A2  6E28               	movwf	map@in_max^0,c
  7077  0032A4  0E00               	movlw	0
  7078  0032A6  6E29               	movwf	(map@in_max+1)^0,c
  7079  0032A8  0E00               	movlw	0
  7080  0032AA  6E2A               	movwf	(map@in_max+2)^0,c
  7081  0032AC  0E00               	movlw	0
  7082  0032AE  6E2B               	movwf	(map@in_max+3)^0,c
  7083  0032B0  0E00               	movlw	0
  7084  0032B2  6E2C               	movwf	map@out_min^0,c
  7085  0032B4  0E00               	movlw	0
  7086  0032B6  6E2D               	movwf	(map@out_min+1)^0,c
  7087  0032B8  0E00               	movlw	0
  7088  0032BA  6E2E               	movwf	(map@out_min+2)^0,c
  7089  0032BC  0E00               	movlw	0
  7090  0032BE  6E2F               	movwf	(map@out_min+3)^0,c
  7091  0032C0  0EFF               	movlw	255
  7092  0032C2  6E30               	movwf	map@out_max^0,c
  7093  0032C4  0E03               	movlw	3
  7094  0032C6  6E31               	movwf	(map@out_max+1)^0,c
  7095  0032C8  0E00               	movlw	0
  7096  0032CA  6E32               	movwf	(map@out_max+2)^0,c
  7097  0032CC  0E00               	movlw	0
  7098  0032CE  6E33               	movwf	(map@out_max+3)^0,c
  7099  0032D0  EC65  F026         	call	_map	;wreg free
  7100  0032D4  C020  F084         	movff	?_map,pwmDuty@duty
  7101  0032D8  C021  F085         	movff	?_map+1,pwmDuty@duty+1
  7102  0032DC  C022  F086         	movff	?_map+2,pwmDuty@duty+2
  7103  0032E0  C023  F087         	movff	?_map+3,pwmDuty@duty+3
  7104  0032E4                     
  7105                           ;./pwm.h: 24:     if (duty < 1024) {
  7106  0032E4  0100               	movlb	0	; () banked
  7107  0032E6  BF87               	btfsc	(pwmDuty@duty+3)& (0+255),7,b
  7108  0032E8  EF82  F019         	goto	u9810
  7109  0032EC  5187               	movf	(pwmDuty@duty+3)& (0+255),w,b
  7110  0032EE  1186               	iorwf	(pwmDuty@duty+2)& (0+255),w,b
  7111  0032F0  E107               	bnz	u9811
  7112  0032F2  0E04               	movlw	4
  7113  0032F4  5D85               	subwf	(pwmDuty@duty+1)& (0+255),w,b
  7114  0032F6  B0D8               	btfsc	status,0,c
  7115  0032F8  EF80  F019         	goto	u9811
  7116  0032FC  EF82  F019         	goto	u9810
  7117  003300                     u9811:
  7118  003300  EF1F  F01A         	goto	l155
  7119  003304                     u9810:
  7120  003304                     
  7121                           ; BSR set to: 0
  7122                           ;./pwm.h: 26:         duty = ((T_FLOAT) duty / 1023)*(4000000 / (500 * 16));
  7123  003304  0E00               	movlw	0
  7124  003306  6E1F               	movwf	___flmul@a^0,c
  7125  003308  0E00               	movlw	0
  7126  00330A  6E20               	movwf	(___flmul@a+1)^0,c
  7127  00330C  0EFA               	movlw	250
  7128  00330E  6E21               	movwf	(___flmul@a+2)^0,c
  7129  003310  0E43               	movlw	67
  7130  003312  6E22               	movwf	(___flmul@a+3)^0,c
  7131  003314  0E00               	movlw	0
  7132  003316  6E48               	movwf	___fldiv@a^0,c
  7133  003318  0EC0               	movlw	192
  7134  00331A  6E49               	movwf	(___fldiv@a+1)^0,c
  7135  00331C  0E7F               	movlw	127
  7136  00331E  6E4A               	movwf	(___fldiv@a+2)^0,c
  7137  003320  0E44               	movlw	68
  7138  003322  6E4B               	movwf	(___fldiv@a+3)^0,c
  7139  003324  C084  F00D         	movff	pwmDuty@duty,___xxtofl@val
  7140  003328  C085  F00E         	movff	pwmDuty@duty+1,___xxtofl@val+1
  7141  00332C  C086  F00F         	movff	pwmDuty@duty+2,___xxtofl@val+2
  7142  003330  C087  F010         	movff	pwmDuty@duty+3,___xxtofl@val+3
  7143  003334  0E01               	movlw	1
  7144  003336  EC20  F01A         	call	___xxtofl
  7145  00333A  C00D  F044         	movff	?___xxtofl,___fldiv@b
  7146  00333E  C00E  F045         	movff	?___xxtofl+1,___fldiv@b+1
  7147  003342  C00F  F046         	movff	?___xxtofl+2,___fldiv@b+2
  7148  003346  C010  F047         	movff	?___xxtofl+3,___fldiv@b+3
  7149  00334A  ECD1  F013         	call	___fldiv	;wreg free
  7150  00334E  C044  F01B         	movff	?___fldiv,___flmul@b
  7151  003352  C045  F01C         	movff	?___fldiv+1,___flmul@b+1
  7152  003356  C046  F01D         	movff	?___fldiv+2,___flmul@b+2
  7153  00335A  C047  F01E         	movff	?___fldiv+3,___flmul@b+3
  7154  00335E  ECE0  F00D         	call	___flmul	;wreg free
  7155  003362  C01B  F072         	movff	?___flmul,___fltol@f1
  7156  003366  C01C  F073         	movff	?___flmul+1,___fltol@f1+1
  7157  00336A  C01D  F074         	movff	?___flmul+2,___fltol@f1+2
  7158  00336E  C01E  F075         	movff	?___flmul+3,___fltol@f1+3
  7159  003372  ECF5  F01F         	call	___fltol	;wreg free
  7160  003376  C072  F084         	movff	?___fltol,pwmDuty@duty
  7161  00337A  C073  F085         	movff	?___fltol+1,pwmDuty@duty+1
  7162  00337E  C074  F086         	movff	?___fltol+2,pwmDuty@duty+2
  7163  003382  C075  F087         	movff	?___fltol+3,pwmDuty@duty+3
  7164                           
  7165                           ;./pwm.h: 28:         switch (channel) {
  7166  003386  EF09  F01A         	goto	l9043
  7167  00338A                     l9037:
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;./pwm.h: 31:                 CCPR1L = duty >> 2;
  7171  00338A  0E02               	movlw	2
  7172  00338C  6F7F               	movwf	??_pwmDuty& (0+255),b
  7173  00338E  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7174  003392  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7175  003396  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7176  00339A  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7177  00339E                     u9825:
  7178  00339E  677F               	tstfsz	??_pwmDuty& (0+255),b
  7179  0033A0  EFD4  F019         	goto	u9826
  7180  0033A4  EFDC  F019         	goto	u9827
  7181  0033A8                     u9826:
  7182  0033A8  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7183  0033AA  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7184  0033AC  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7185  0033AE  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7186  0033B0  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7187  0033B2  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7188  0033B4  EFCF  F019         	goto	u9825
  7189  0033B8                     u9827:
  7190  0033B8  0100               	movlb	0	; () banked
  7191  0033BA  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7192  0033BC  6EBE               	movwf	190,c	;volatile
  7193                           
  7194                           ;./pwm.h: 32:                 CCP1CON &= 0xCF;
  7195  0033BE  0ECF               	movlw	207
  7196  0033C0  16BD               	andwf	189,f,c	;volatile
  7197                           
  7198                           ;./pwm.h: 33:                 CCP1CON |= ((duty << 4)&0x30);
  7199  0033C2  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7200  0033C4  0BF0               	andlw	240
  7201  0033C6  0B30               	andlw	48
  7202  0033C8  12BD               	iorwf	189,f,c	;volatile
  7203                           
  7204                           ;./pwm.h: 34:                 break;
  7205  0033CA  EF1F  F01A         	goto	l155
  7206  0033CE                     l9039:
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;./pwm.h: 37:                 CCPR2L = duty >> 2;
  7210  0033CE  0E02               	movlw	2
  7211  0033D0  6F7F               	movwf	??_pwmDuty& (0+255),b
  7212  0033D2  C084  F080         	movff	pwmDuty@duty,??_pwmDuty+1
  7213  0033D6  C085  F081         	movff	pwmDuty@duty+1,??_pwmDuty+2
  7214  0033DA  C086  F082         	movff	pwmDuty@duty+2,??_pwmDuty+3
  7215  0033DE  C087  F083         	movff	pwmDuty@duty+3,??_pwmDuty+4
  7216  0033E2                     u9835:
  7217  0033E2  677F               	tstfsz	??_pwmDuty& (0+255),b
  7218  0033E4  EFF6  F019         	goto	u9836
  7219  0033E8  EFFE  F019         	goto	u9837
  7220  0033EC                     u9836:
  7221  0033EC  3583               	rlcf	(??_pwmDuty+4)& (0+255),w,b
  7222  0033EE  3383               	rrcf	(??_pwmDuty+4)& (0+255),f,b
  7223  0033F0  3382               	rrcf	(??_pwmDuty+3)& (0+255),f,b
  7224  0033F2  3381               	rrcf	(??_pwmDuty+2)& (0+255),f,b
  7225  0033F4  3380               	rrcf	(??_pwmDuty+1)& (0+255),f,b
  7226  0033F6  2F7F               	decfsz	??_pwmDuty& (0+255),f,b
  7227  0033F8  EFF1  F019         	goto	u9835
  7228  0033FC                     u9837:
  7229  0033FC  0100               	movlb	0	; () banked
  7230  0033FE  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7231  003400  6EBB               	movwf	187,c	;volatile
  7232                           
  7233                           ;./pwm.h: 38:                 CCP2CON &= 0xCF;
  7234  003402  0ECF               	movlw	207
  7235  003404  16BA               	andwf	186,f,c	;volatile
  7236                           
  7237                           ;./pwm.h: 39:                 CCP2CON |= ((duty << 4)&0x30);
  7238  003406  3984               	swapf	pwmDuty@duty& (0+255),w,b	;volatile
  7239  003408  0BF0               	andlw	240
  7240  00340A  0B30               	andlw	48
  7241  00340C  12BA               	iorwf	186,f,c	;volatile
  7242                           
  7243                           ;./pwm.h: 40:                 break;
  7244  00340E  EF1F  F01A         	goto	l155
  7245  003412                     l9043:
  7246  003412  0100               	movlb	0	; () banked
  7247  003414  517E               	movf	pwmDuty@channel& (0+255),w,b
  7248  003416  6F7F               	movwf	??_pwmDuty& (0+255),b
  7249  003418  6B80               	clrf	(??_pwmDuty+1)& (0+255),b
  7250                           
  7251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7252                           ; Switch size 1, requested type "simple"
  7253                           ; Number of cases is 1, Range of values is 0 to 0
  7254                           ; switch strategies available:
  7255                           ; Name         Instructions Cycles
  7256                           ; simple_byte            4     3 (average)
  7257                           ;	Chosen strategy is simple_byte
  7258  00341A  5180               	movf	(??_pwmDuty+1)& (0+255),w,b
  7259  00341C  0A00               	xorlw	0	; case 0
  7260  00341E  B4D8               	btfsc	status,2,c
  7261  003420  EF14  F01A         	goto	l11173
  7262  003424  EF1F  F01A         	goto	l155
  7263  003428                     l11173:
  7264                           
  7265                           ; BSR set to: 0
  7266                           ; Switch size 1, requested type "simple"
  7267                           ; Number of cases is 2, Range of values is 1 to 2
  7268                           ; switch strategies available:
  7269                           ; Name         Instructions Cycles
  7270                           ; simple_byte            7     4 (average)
  7271                           ;	Chosen strategy is simple_byte
  7272  003428  517F               	movf	??_pwmDuty& (0+255),w,b
  7273  00342A  0A01               	xorlw	1	; case 1
  7274  00342C  B4D8               	btfsc	status,2,c
  7275  00342E  EFC5  F019         	goto	l9037
  7276  003432  0A03               	xorlw	3	; case 2
  7277  003434  B4D8               	btfsc	status,2,c
  7278  003436  EFE7  F019         	goto	l9039
  7279  00343A  EF1F  F01A         	goto	l155
  7280  00343E                     l155:
  7281                           
  7282                           ; BSR set to: 0
  7283  00343E  0012               	return		;funcret
  7284  003440                     __end_of_pwmDuty:
  7285                           	opt callstack 0
  7286                           
  7287 ;; *************** function _map *****************
  7288 ;; Defined at:
  7289 ;;		line 16 in file "./pwm.h"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  x               4   31[COMRAM] long 
  7292 ;;  in_min          4   35[COMRAM] long 
  7293 ;;  in_max          4   39[COMRAM] long 
  7294 ;;  out_min         4   43[COMRAM] long 
  7295 ;;  out_max         4   47[COMRAM] long 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  4   31[COMRAM] long 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7307 ;;      Params:        20       0       0       0       0       0       0       0       0
  7308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7310 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7311 ;;Total ram usage:       20 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    3
  7314 ;; This function calls:
  7315 ;;		___aldiv
  7316 ;;		___lmul
  7317 ;; This function is called by:
  7318 ;;		_pwmDuty
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text29
  7323  004CCA                     __ptext29:
  7324                           	opt callstack 0
  7325  004CCA                     _map:
  7326                           	opt callstack 24
  7327  004CCA                     
  7328                           ;./pwm.h: 17:     return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_mi
      +                          n;
  7329  004CCA  5024               	movf	map@in_min^0,w,c
  7330  004CCC  5C20               	subwf	map@x^0,w,c
  7331  004CCE  6E06               	movwf	___lmul@multiplier^0,c
  7332  004CD0  5025               	movf	(map@in_min+1)^0,w,c
  7333  004CD2  5821               	subwfb	(map@x+1)^0,w,c
  7334  004CD4  6E07               	movwf	(___lmul@multiplier+1)^0,c
  7335  004CD6  5026               	movf	(map@in_min+2)^0,w,c
  7336  004CD8  5822               	subwfb	(map@x+2)^0,w,c
  7337  004CDA  6E08               	movwf	(___lmul@multiplier+2)^0,c
  7338  004CDC  5027               	movf	(map@in_min+3)^0,w,c
  7339  004CDE  5823               	subwfb	(map@x+3)^0,w,c
  7340  004CE0  6E09               	movwf	(___lmul@multiplier+3)^0,c
  7341  004CE2  502C               	movf	map@out_min^0,w,c
  7342  004CE4  5C30               	subwf	map@out_max^0,w,c
  7343  004CE6  6E0A               	movwf	___lmul@multiplicand^0,c
  7344  004CE8  502D               	movf	(map@out_min+1)^0,w,c
  7345  004CEA  5831               	subwfb	(map@out_max+1)^0,w,c
  7346  004CEC  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  7347  004CEE  502E               	movf	(map@out_min+2)^0,w,c
  7348  004CF0  5832               	subwfb	(map@out_max+2)^0,w,c
  7349  004CF2  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  7350  004CF4  502F               	movf	(map@out_min+3)^0,w,c
  7351  004CF6  5833               	subwfb	(map@out_max+3)^0,w,c
  7352  004CF8  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  7353  004CFA  EC14  F027         	call	___lmul	;wreg free
  7354  004CFE  C006  F012         	movff	?___lmul,___aldiv@dividend
  7355  004D02  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
  7356  004D06  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
  7357  004D0A  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
  7358  004D0E  5024               	movf	map@in_min^0,w,c
  7359  004D10  5C28               	subwf	map@in_max^0,w,c
  7360  004D12  6E16               	movwf	___aldiv@divisor^0,c
  7361  004D14  5025               	movf	(map@in_min+1)^0,w,c
  7362  004D16  5829               	subwfb	(map@in_max+1)^0,w,c
  7363  004D18  6E17               	movwf	(___aldiv@divisor+1)^0,c
  7364  004D1A  5026               	movf	(map@in_min+2)^0,w,c
  7365  004D1C  582A               	subwfb	(map@in_max+2)^0,w,c
  7366  004D1E  6E18               	movwf	(___aldiv@divisor+2)^0,c
  7367  004D20  5027               	movf	(map@in_min+3)^0,w,c
  7368  004D22  582B               	subwfb	(map@in_max+3)^0,w,c
  7369  004D24  6E19               	movwf	(___aldiv@divisor+3)^0,c
  7370  004D26  EC6F  F01F         	call	___aldiv	;wreg free
  7371  004D2A  502C               	movf	map@out_min^0,w,c
  7372  004D2C  2412               	addwf	?___aldiv^0,w,c
  7373  004D2E  6E20               	movwf	?_map^0,c
  7374  004D30  502D               	movf	(map@out_min+1)^0,w,c
  7375  004D32  2013               	addwfc	(?___aldiv+1)^0,w,c
  7376  004D34  6E21               	movwf	(?_map+1)^0,c
  7377  004D36  502E               	movf	(map@out_min+2)^0,w,c
  7378  004D38  2014               	addwfc	(?___aldiv+2)^0,w,c
  7379  004D3A  6E22               	movwf	(?_map+2)^0,c
  7380  004D3C  502F               	movf	(map@out_min+3)^0,w,c
  7381  004D3E  2015               	addwfc	(?___aldiv+3)^0,w,c
  7382  004D40  6E23               	movwf	(?_map+3)^0,c
  7383  004D42  0012               	return		;funcret
  7384  004D44                     __end_of_map:
  7385                           	opt callstack 0
  7386                           
  7387 ;; *************** function ___lmul *****************
  7388 ;; Defined at:
  7389 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  multiplier      4    5[COMRAM] unsigned long 
  7392 ;;  multiplicand    4    9[COMRAM] unsigned long 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  product         4   13[COMRAM] unsigned long 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  4    5[COMRAM] unsigned long 
  7397 ;; Registers used:
  7398 ;;		wreg, status,2, status,0
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7404 ;;      Params:         8       0       0       0       0       0       0       0       0
  7405 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7407 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7408 ;;Total ram usage:       12 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    2
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_map
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text30
  7419  004E28                     __ptext30:
  7420                           	opt callstack 0
  7421  004E28                     ___lmul:
  7422                           	opt callstack 24
  7423  004E28  0E00               	movlw	0
  7424  004E2A  6E0E               	movwf	___lmul@product^0,c
  7425  004E2C  0E00               	movlw	0
  7426  004E2E  6E0F               	movwf	(___lmul@product+1)^0,c
  7427  004E30  0E00               	movlw	0
  7428  004E32  6E10               	movwf	(___lmul@product+2)^0,c
  7429  004E34  0E00               	movlw	0
  7430  004E36  6E11               	movwf	(___lmul@product+3)^0,c
  7431  004E38                     l8091:
  7432  004E38  A006               	btfss	___lmul@multiplier^0,0,c
  7433  004E3A  EF21  F027         	goto	u8101
  7434  004E3E  EF23  F027         	goto	u8100
  7435  004E42                     u8101:
  7436  004E42  EF2B  F027         	goto	l8095
  7437  004E46                     u8100:
  7438  004E46  500A               	movf	___lmul@multiplicand^0,w,c
  7439  004E48  260E               	addwf	___lmul@product^0,f,c
  7440  004E4A  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  7441  004E4C  220F               	addwfc	(___lmul@product+1)^0,f,c
  7442  004E4E  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  7443  004E50  2210               	addwfc	(___lmul@product+2)^0,f,c
  7444  004E52  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  7445  004E54  2211               	addwfc	(___lmul@product+3)^0,f,c
  7446  004E56                     l8095:
  7447  004E56  90D8               	bcf	status,0,c
  7448  004E58  360A               	rlcf	___lmul@multiplicand^0,f,c
  7449  004E5A  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7450  004E5C  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7451  004E5E  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7452  004E60  90D8               	bcf	status,0,c
  7453  004E62  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  7454  004E64  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  7455  004E66  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  7456  004E68  3206               	rrcf	___lmul@multiplier^0,f,c
  7457  004E6A  5006               	movf	___lmul@multiplier^0,w,c
  7458  004E6C  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  7459  004E6E  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  7460  004E70  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  7461  004E72  A4D8               	btfss	status,2,c
  7462  004E74  EF3E  F027         	goto	u8111
  7463  004E78  EF40  F027         	goto	u8110
  7464  004E7C                     u8111:
  7465  004E7C  EF1C  F027         	goto	l8091
  7466  004E80                     u8110:
  7467  004E80  C00E  F006         	movff	___lmul@product,?___lmul
  7468  004E84  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  7469  004E88  C010  F008         	movff	___lmul@product+2,?___lmul+2
  7470  004E8C  C011  F009         	movff	___lmul@product+3,?___lmul+3
  7471  004E90  0012               	return		;funcret
  7472  004E92                     __end_of___lmul:
  7473                           	opt callstack 0
  7474                           
  7475 ;; *************** function ___xxtofl *****************
  7476 ;; Defined at:
  7477 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  sign            1    wreg     unsigned char 
  7480 ;;  val             4   12[COMRAM] long 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  sign            1   20[COMRAM] unsigned char 
  7483 ;;  arg             4   22[COMRAM] unsigned long 
  7484 ;;  exp             1   21[COMRAM] unsigned char 
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  4   12[COMRAM] unsigned char 
  7487 ;; Registers used:
  7488 ;;		wreg, status,2, status,0
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7494 ;;      Params:         4       0       0       0       0       0       0       0       0
  7495 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7496 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7497 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7498 ;;Total ram usage:       14 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:    2
  7501 ;; This function calls:
  7502 ;;		Nothing
  7503 ;; This function is called by:
  7504 ;;		_pwmDuty
  7505 ;;		_dameDistancia
  7506 ;;		_PID
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text31
  7511  003440                     __ptext31:
  7512                           	opt callstack 0
  7513  003440                     ___xxtofl:
  7514                           	opt callstack 25
  7515                           
  7516                           ;incstack = 0
  7517                           ;___xxtofl@sign stored from wreg
  7518  003440  6E15               	movwf	___xxtofl@sign^0,c
  7519  003442  5015               	movf	___xxtofl@sign^0,w,c
  7520  003444  B4D8               	btfsc	status,2,c
  7521  003446  EF27  F01A         	goto	u9691
  7522  00344A  EF29  F01A         	goto	u9690
  7523  00344E                     u9691:
  7524  00344E  EF4B  F01A         	goto	l1616
  7525  003452                     u9690:
  7526  003452  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7527  003454  EF30  F01A         	goto	u9700
  7528  003458  EF2E  F01A         	goto	u9701
  7529  00345C                     u9701:
  7530  00345C  EF4B  F01A         	goto	l1616
  7531  003460                     u9700:
  7532  003460  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  7533  003464  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  7534  003468  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  7535  00346C  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  7536  003470  1E11               	comf	??___xxtofl^0,f,c
  7537  003472  1E12               	comf	(??___xxtofl+1)^0,f,c
  7538  003474  1E13               	comf	(??___xxtofl+2)^0,f,c
  7539  003476  1E14               	comf	(??___xxtofl+3)^0,f,c
  7540  003478  2A11               	incf	??___xxtofl^0,f,c
  7541  00347A  0E00               	movlw	0
  7542  00347C  2212               	addwfc	(??___xxtofl+1)^0,f,c
  7543  00347E  2213               	addwfc	(??___xxtofl+2)^0,f,c
  7544  003480  2214               	addwfc	(??___xxtofl+3)^0,f,c
  7545  003482  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  7546  003486  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  7547  00348A  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  7548  00348E  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  7549  003492  EF53  F01A         	goto	l8979
  7550  003496                     l1616:
  7551  003496  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  7552  00349A  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7553  00349E  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7554  0034A2  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7555  0034A6                     l8979:
  7556  0034A6  500D               	movf	___xxtofl@val^0,w,c
  7557  0034A8  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  7558  0034AA  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  7559  0034AC  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  7560  0034AE  A4D8               	btfss	status,2,c
  7561  0034B0  EF5C  F01A         	goto	u9711
  7562  0034B4  EF5E  F01A         	goto	u9710
  7563  0034B8                     u9711:
  7564  0034B8  EF68  F01A         	goto	l8985
  7565  0034BC                     u9710:
  7566  0034BC  0E00               	movlw	0
  7567  0034BE  6E0D               	movwf	?___xxtofl^0,c
  7568  0034C0  0E00               	movlw	0
  7569  0034C2  6E0E               	movwf	(?___xxtofl+1)^0,c
  7570  0034C4  0E00               	movlw	0
  7571  0034C6  6E0F               	movwf	(?___xxtofl+2)^0,c
  7572  0034C8  0E00               	movlw	0
  7573  0034CA  6E10               	movwf	(?___xxtofl+3)^0,c
  7574  0034CC  EFF9  F01A         	goto	l1619
  7575  0034D0                     l8985:
  7576  0034D0  0E96               	movlw	150
  7577  0034D2  6E16               	movwf	___xxtofl@exp^0,c
  7578  0034D4  EF72  F01A         	goto	l8989
  7579  0034D8                     l8987:
  7580  0034D8  2A16               	incf	___xxtofl@exp^0,f,c
  7581  0034DA  90D8               	bcf	status,0,c
  7582  0034DC  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7583  0034DE  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7584  0034E0  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7585  0034E2  3217               	rrcf	___xxtofl@arg^0,f,c
  7586  0034E4                     l8989:
  7587  0034E4  0E00               	movlw	0
  7588  0034E6  1417               	andwf	___xxtofl@arg^0,w,c
  7589  0034E8  6E11               	movwf	??___xxtofl^0,c
  7590  0034EA  0E00               	movlw	0
  7591  0034EC  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7592  0034EE  6E12               	movwf	(??___xxtofl+1)^0,c
  7593  0034F0  0E00               	movlw	0
  7594  0034F2  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7595  0034F4  6E13               	movwf	(??___xxtofl+2)^0,c
  7596  0034F6  0EFE               	movlw	254
  7597  0034F8  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7598  0034FA  6E14               	movwf	(??___xxtofl+3)^0,c
  7599  0034FC  5011               	movf	??___xxtofl^0,w,c
  7600  0034FE  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7601  003500  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7602  003502  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7603  003504  A4D8               	btfss	status,2,c
  7604  003506  EF87  F01A         	goto	u9721
  7605  00350A  EF89  F01A         	goto	u9720
  7606  00350E                     u9721:
  7607  00350E  EF6C  F01A         	goto	l8987
  7608  003512                     u9720:
  7609  003512  EF97  F01A         	goto	l1623
  7610  003516                     l8991:
  7611  003516  2A16               	incf	___xxtofl@exp^0,f,c
  7612  003518  0E01               	movlw	1
  7613  00351A  2617               	addwf	___xxtofl@arg^0,f,c
  7614  00351C  0E00               	movlw	0
  7615  00351E  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  7616  003520  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  7617  003522  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  7618  003524  90D8               	bcf	status,0,c
  7619  003526  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  7620  003528  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  7621  00352A  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  7622  00352C  3217               	rrcf	___xxtofl@arg^0,f,c
  7623  00352E                     l1623:
  7624  00352E  0E00               	movlw	0
  7625  003530  1417               	andwf	___xxtofl@arg^0,w,c
  7626  003532  6E11               	movwf	??___xxtofl^0,c
  7627  003534  0E00               	movlw	0
  7628  003536  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  7629  003538  6E12               	movwf	(??___xxtofl+1)^0,c
  7630  00353A  0E00               	movlw	0
  7631  00353C  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  7632  00353E  6E13               	movwf	(??___xxtofl+2)^0,c
  7633  003540  0EFF               	movlw	255
  7634  003542  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  7635  003544  6E14               	movwf	(??___xxtofl+3)^0,c
  7636  003546  5011               	movf	??___xxtofl^0,w,c
  7637  003548  1012               	iorwf	(??___xxtofl+1)^0,w,c
  7638  00354A  1013               	iorwf	(??___xxtofl+2)^0,w,c
  7639  00354C  1014               	iorwf	(??___xxtofl+3)^0,w,c
  7640  00354E  A4D8               	btfss	status,2,c
  7641  003550  EFAC  F01A         	goto	u9731
  7642  003554  EFAE  F01A         	goto	u9730
  7643  003558                     u9731:
  7644  003558  EF8B  F01A         	goto	l8991
  7645  00355C                     u9730:
  7646  00355C  EFB6  F01A         	goto	l8999
  7647  003560                     l8997:
  7648  003560  0616               	decf	___xxtofl@exp^0,f,c
  7649  003562  90D8               	bcf	status,0,c
  7650  003564  3617               	rlcf	___xxtofl@arg^0,f,c
  7651  003566  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  7652  003568  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  7653  00356A  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  7654  00356C                     l8999:
  7655  00356C  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  7656  00356E  EFBB  F01A         	goto	u9741
  7657  003572  EFBD  F01A         	goto	u9740
  7658  003576                     u9741:
  7659  003576  EFC5  F01A         	goto	l1630
  7660  00357A                     u9740:
  7661  00357A  0E02               	movlw	2
  7662  00357C  6016               	cpfslt	___xxtofl@exp^0,c
  7663  00357E  EFC3  F01A         	goto	u9751
  7664  003582  EFC5  F01A         	goto	u9750
  7665  003586                     u9751:
  7666  003586  EFB0  F01A         	goto	l8997
  7667  00358A                     u9750:
  7668  00358A                     l1630:
  7669  00358A  B016               	btfsc	___xxtofl@exp^0,0,c
  7670  00358C  EFCA  F01A         	goto	u9761
  7671  003590  EFCC  F01A         	goto	u9760
  7672  003594                     u9761:
  7673  003594  EFCD  F01A         	goto	l9005
  7674  003598                     u9760:
  7675  003598  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  7676  00359A                     l9005:
  7677  00359A  90D8               	bcf	status,0,c
  7678  00359C  3216               	rrcf	___xxtofl@exp^0,f,c
  7679  00359E  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  7680  0035A2  6A12               	clrf	(??___xxtofl+1)^0,c
  7681  0035A4  6A13               	clrf	(??___xxtofl+2)^0,c
  7682  0035A6  6A14               	clrf	(??___xxtofl+3)^0,c
  7683  0035A8  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  7684  0035AC  6A13               	clrf	(??___xxtofl+2)^0,c
  7685  0035AE  6A12               	clrf	(??___xxtofl+1)^0,c
  7686  0035B0  6A11               	clrf	??___xxtofl^0,c
  7687  0035B2  5011               	movf	??___xxtofl^0,w,c
  7688  0035B4  1217               	iorwf	___xxtofl@arg^0,f,c
  7689  0035B6  5012               	movf	(??___xxtofl+1)^0,w,c
  7690  0035B8  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  7691  0035BA  5013               	movf	(??___xxtofl+2)^0,w,c
  7692  0035BC  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  7693  0035BE  5014               	movf	(??___xxtofl+3)^0,w,c
  7694  0035C0  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  7695  0035C2  5015               	movf	___xxtofl@sign^0,w,c
  7696  0035C4  B4D8               	btfsc	status,2,c
  7697  0035C6  EFE7  F01A         	goto	u9771
  7698  0035CA  EFE9  F01A         	goto	u9770
  7699  0035CE                     u9771:
  7700  0035CE  EFF1  F01A         	goto	l9015
  7701  0035D2                     u9770:
  7702  0035D2  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  7703  0035D4  EFF0  F01A         	goto	u9780
  7704  0035D8  EFEE  F01A         	goto	u9781
  7705  0035DC                     u9781:
  7706  0035DC  EFF1  F01A         	goto	l9015
  7707  0035E0                     u9780:
  7708  0035E0  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  7709  0035E2                     l9015:
  7710  0035E2  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  7711  0035E6  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  7712  0035EA  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  7713  0035EE  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  7714  0035F2                     l1619:
  7715  0035F2  0012               	return		;funcret
  7716  0035F4                     __end_of___xxtofl:
  7717                           	opt callstack 0
  7718                           
  7719 ;; *************** function _sprintf *****************
  7720 ;; Defined at:
  7721 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;  s               2  135[BANK0 ] PTR unsigned char 
  7724 ;;		 -> buffer(50), 
  7725 ;;  fmt             2  137[BANK0 ] PTR const unsigned char 
  7726 ;;		 -> STR_19(34), STR_11(32), STR_6(17), STR_5(19), 
  7727 ;;		 -> STR_4(18), STR_3(34), 
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;  f               6  149[BANK0 ] struct _IO_FILE
  7730 ;;  ap              2  147[BANK0 ] PTR void [1]
  7731 ;;		 -> ?_sprintf(2), 
  7732 ;;  ret             2    0        int 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2  135[BANK0 ] int 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7742 ;;      Params:         0      10       0       0       0       0       0       0       0
  7743 ;;      Locals:         0      10       0       0       0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7745 ;;      Totals:         0      20       0       0       0       0       0       0       0
  7746 ;;Total ram usage:       20 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    9
  7749 ;; This function calls:
  7750 ;;		_vfprintf
  7751 ;; This function is called by:
  7752 ;;		_visualizarPasosRealizados
  7753 ;;		_decidirDireccion
  7754 ;;		_probarSensores
  7755 ;;		_probarUltrasonico
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text32
  7760  0051E6                     __ptext32:
  7761                           	opt callstack 0
  7762  0051E6                     _sprintf:
  7763                           	opt callstack 20
  7764  0051E6  0EEB               	movlw	low (?_sprintf+4)
  7765  0051E8  0100               	movlb	0	; () banked
  7766  0051EA  6FF3               	movwf	sprintf@ap& (0+255),b
  7767  0051EC  0E00               	movlw	high (?_sprintf+4)
  7768  0051EE  6FF4               	movwf	(sprintf@ap+1)& (0+255),b
  7769  0051F0  C0E7  F0F5         	movff	sprintf@s,sprintf@f
  7770  0051F4  C0E8  F0F6         	movff	sprintf@s+1,sprintf@f+1
  7771  0051F8                     
  7772                           ; BSR set to: 0
  7773  0051F8  0E00               	movlw	0
  7774  0051FA  6FF8               	movwf	(sprintf@f+3)& (0+255),b
  7775  0051FC  0E00               	movlw	0
  7776  0051FE  6FF7               	movwf	(sprintf@f+2)& (0+255),b
  7777  005200                     
  7778                           ; BSR set to: 0
  7779  005200  0E00               	movlw	0
  7780  005202  6FFA               	movwf	(sprintf@f+5)& (0+255),b
  7781  005204  0E00               	movlw	0
  7782  005206  6FF9               	movwf	(sprintf@f+4)& (0+255),b
  7783  005208                     
  7784                           ; BSR set to: 0
  7785  005208  0EF5               	movlw	low sprintf@f
  7786  00520A  6FDF               	movwf	vfprintf@fp& (0+255),b
  7787  00520C  0E00               	movlw	high sprintf@f
  7788  00520E  6FE0               	movwf	(vfprintf@fp+1)& (0+255),b
  7789  005210  C0E9  F0E1         	movff	sprintf@fmt,vfprintf@fmt
  7790  005214  C0EA  F0E2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7791  005218  0EF3               	movlw	low sprintf@ap
  7792  00521A  6FE3               	movwf	vfprintf@ap& (0+255),b
  7793  00521C  0E00               	movlw	high sprintf@ap
  7794  00521E  6FE4               	movwf	(vfprintf@ap+1)& (0+255),b
  7795  005220  EC49  F027         	call	_vfprintf	;wreg free
  7796  005224  0100               	movlb	0	; () banked
  7797  005226  51F7               	movf	(sprintf@f+2)& (0+255),w,b
  7798  005228  25E7               	addwf	sprintf@s& (0+255),w,b
  7799  00522A  6ED9               	movwf	fsr2l,c
  7800  00522C  51F8               	movf	(sprintf@f+3)& (0+255),w,b
  7801  00522E  21E8               	addwfc	(sprintf@s+1)& (0+255),w,b
  7802  005230  6EDA               	movwf	fsr2h,c
  7803  005232  0E00               	movlw	0
  7804  005234  6EDF               	movwf	indf2,c
  7805  005236                     
  7806                           ; BSR set to: 0
  7807  005236  0012               	return		;funcret
  7808  005238                     __end_of_sprintf:
  7809                           	opt callstack 0
  7810                           
  7811 ;; *************** function _vfprintf *****************
  7812 ;; Defined at:
  7813 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  fp              2  127[BANK0 ] PTR struct _IO_FILE
  7816 ;;		 -> sprintf@f(6), 
  7817 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  7818 ;;		 -> STR_19(34), STR_11(32), STR_6(17), STR_5(19), 
  7819 ;;		 -> STR_4(18), STR_3(34), 
  7820 ;;  ap              2  131[BANK0 ] PTR PTR void 
  7821 ;;		 -> sprintf@ap(2), 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  cfmt            2  133[BANK0 ] PTR unsigned char 
  7824 ;;		 -> STR_19(34), STR_11(32), STR_6(17), STR_5(19), 
  7825 ;;		 -> STR_4(18), STR_3(34), 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  2  127[BANK0 ] int 
  7828 ;; Registers used:
  7829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7835 ;;      Params:         0       6       0       0       0       0       0       0       0
  7836 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7838 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7839 ;;Total ram usage:        8 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:    8
  7842 ;; This function calls:
  7843 ;;		_vfpfcnvrt
  7844 ;; This function is called by:
  7845 ;;		_sprintf
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text33
  7850  004E92                     __ptext33:
  7851                           	opt callstack 0
  7852  004E92                     _vfprintf:
  7853                           	opt callstack 20
  7854  004E92                     
  7855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7856  004E92  C0E1  F0E5         	movff	vfprintf@fmt,vfprintf@cfmt
  7857  004E96  C0E2  F0E6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7858  004E9A                     
  7859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7860  004E9A  0E00               	movlw	0
  7861  004E9C  0101               	movlb	1	; () banked
  7862  004E9E  6F31               	movwf	(_nout+1)& (0+255),b
  7863  004EA0  0E00               	movlw	0
  7864  004EA2  6F30               	movwf	_nout& (0+255),b
  7865                           
  7866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7867  004EA4  EF6B  F027         	goto	l9703
  7868  004EA8                     l9701:
  7869                           
  7870                           ; BSR set to: 1
  7871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7872  004EA8  C0DF  F0C1         	movff	vfprintf@fp,vfpfcnvrt@fp
  7873  004EAC  C0E0  F0C2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7874  004EB0  0EE5               	movlw	low vfprintf@cfmt
  7875  004EB2  0100               	movlb	0	; () banked
  7876  004EB4  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  7877  004EB6  0E00               	movlw	high vfprintf@cfmt
  7878  004EB8  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7879  004EBA  C0E3  F0C5         	movff	vfprintf@ap,vfpfcnvrt@ap
  7880  004EBE  C0E4  F0C6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7881  004EC2  ECE6  F005         	call	_vfpfcnvrt	;wreg free
  7882  004EC6  0100               	movlb	0	; () banked
  7883  004EC8  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  7884  004ECA  0101               	movlb	1	; () banked
  7885  004ECC  2730               	addwf	_nout& (0+255),f,b
  7886  004ECE  0100               	movlb	0	; () banked
  7887  004ED0  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7888  004ED2  0101               	movlb	1	; () banked
  7889  004ED4  2331               	addwfc	(_nout+1)& (0+255),f,b
  7890  004ED6                     l9703:
  7891                           
  7892                           ; BSR set to: 1
  7893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7894  004ED6  C0E5  FFF6         	movff	vfprintf@cfmt,tblptrl
  7895  004EDA  C0E6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7896  004EDE                     	if	0	;tblptru may be non-zero
  7897  004EDE                     	endif
  7898  004EDE                     	if	0	;tblptru may be non-zero
  7899  004EDE                     	endif
  7900  004EDE  0008               	tblrd		*
  7901  004EE0  50F5               	movf	tablat,w,c
  7902  004EE2  0900               	iorlw	0
  7903  004EE4  A4D8               	btfss	status,2,c
  7904  004EE6  EF77  F027         	goto	u10951
  7905  004EEA  EF79  F027         	goto	u10950
  7906  004EEE                     u10951:
  7907  004EEE  EF54  F027         	goto	l9701
  7908  004EF2                     u10950:
  7909  004EF2                     
  7910                           ; BSR set to: 1
  7911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7912  004EF2  C130  F0DF         	movff	_nout,?_vfprintf
  7913  004EF6  C131  F0E0         	movff	_nout+1,?_vfprintf+1
  7914  004EFA                     
  7915                           ; BSR set to: 1
  7916  004EFA  0012               	return		;funcret
  7917  004EFC                     __end_of_vfprintf:
  7918                           	opt callstack 0
  7919                           
  7920 ;; *************** function _vfpfcnvrt *****************
  7921 ;; Defined at:
  7922 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  7925 ;;		 -> sprintf@f(6), 
  7926 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  7927 ;;		 -> vfprintf@cfmt(2), 
  7928 ;;  ap              2  101[BANK0 ] PTR PTR void 
  7929 ;;		 -> sprintf@ap(2), 
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  ll              8  107[BANK0 ] long long 
  7932 ;;  llu             8    0        unsigned long long 
  7933 ;;  f               4  119[BANK0 ] unsigned long long 
  7934 ;;  ct              3  123[BANK0 ] unsigned char [3]
  7935 ;;  vp              3    0        PTR void 
  7936 ;;  cp              3    0        PTR unsigned char 
  7937 ;;  i               2    0        int 
  7938 ;;  done            2    0        int 
  7939 ;;  c               1  126[BANK0 ] unsigned char 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  2   97[BANK0 ] int 
  7942 ;; Registers used:
  7943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7949 ;;      Params:         0       6       0       0       0       0       0       0       0
  7950 ;;      Locals:         0      20       0       0       0       0       0       0       0
  7951 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7952 ;;      Totals:         0      30       0       0       0       0       0       0       0
  7953 ;;Total ram usage:       30 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:    7
  7956 ;; This function calls:
  7957 ;;		_atoi
  7958 ;;		_ctoa
  7959 ;;		_dtoa
  7960 ;;		_efgtoa
  7961 ;;		_fputc
  7962 ;;		_isdigit
  7963 ;;		_isupper
  7964 ;;		_strncmp
  7965 ;;		_tolower
  7966 ;; This function is called by:
  7967 ;;		_vfprintf
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text34
  7972  000BCC                     __ptext34:
  7973                           	opt callstack 0
  7974  000BCC                     _vfpfcnvrt:
  7975                           	opt callstack 20
  7976  000BCC                     
  7977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7978  000BCC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7979  000BD0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7980  000BD4  CFDE FFF6          	movff	postinc2,tblptrl
  7981  000BD8  CFDD FFF7          	movff	postdec2,tblptrh
  7982  000BDC                     	if	0	;tblptru may be non-zero
  7983  000BDC                     	endif
  7984  000BDC                     	if	0	;tblptru may be non-zero
  7985  000BDC                     	endif
  7986  000BDC  0008               	tblrd		*
  7987  000BDE  50F5               	movf	tablat,w,c
  7988  000BE0  0A25               	xorlw	37
  7989  000BE2  A4D8               	btfss	status,2,c
  7990  000BE4  EFF6  F005         	goto	u10651
  7991  000BE8  EFF8  F005         	goto	u10650
  7992  000BEC                     u10651:
  7993  000BEC  EF9E  F008         	goto	l9605
  7994  000BF0                     u10650:
  7995  000BF0                     
  7996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7997  000BF0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7998  000BF4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7999  000BF8  2ADE               	incf	postinc2,f,c
  8000  000BFA  0E00               	movlw	0
  8001  000BFC  22DD               	addwfc	postdec2,f,c
  8002  000BFE                     
  8003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8004  000BFE  0E00               	movlw	0
  8005  000C00  0101               	movlb	1	; () banked
  8006  000C02  6F33               	movwf	(_width+1)& (0+255),b
  8007  000C04  0E00               	movlw	0
  8008  000C06  6F32               	movwf	_width& (0+255),b
  8009  000C08  C132  F055         	movff	_width,_flags
  8010  000C0C  C133  F056         	movff	_width+1,_flags+1
  8011  000C10                     
  8012                           ; BSR set to: 1
  8013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8014  000C10  6934               	setf	_prec& (0+255),b
  8015  000C12  6935               	setf	(_prec+1)& (0+255),b
  8016  000C14                     
  8017                           ; BSR set to: 1
  8018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  8019  000C14  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8020  000C18  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8021  000C1C  CFDE FFF6          	movff	postinc2,tblptrl
  8022  000C20  CFDD FFF7          	movff	postdec2,tblptrh
  8023  000C24                     	if	0	;tblptru may be non-zero
  8024  000C24                     	endif
  8025  000C24                     	if	0	;tblptru may be non-zero
  8026  000C24                     	endif
  8027  000C24  0008               	tblrd		*
  8028  000C26  50F5               	movf	tablat,w,c
  8029  000C28  0A2E               	xorlw	46
  8030  000C2A  A4D8               	btfss	status,2,c
  8031  000C2C  EF1A  F006         	goto	u10661
  8032  000C30  EF1C  F006         	goto	u10660
  8033  000C34                     u10661:
  8034  000C34  EF9A  F006         	goto	l9533
  8035  000C38                     u10660:
  8036  000C38                     
  8037                           ; BSR set to: 1
  8038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  8039  000C38  0E00               	movlw	0
  8040  000C3A  6F35               	movwf	(_prec+1)& (0+255),b
  8041  000C3C  0E00               	movlw	0
  8042  000C3E  6F34               	movwf	_prec& (0+255),b
  8043  000C40                     
  8044                           ; BSR set to: 1
  8045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  8046  000C40  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8047  000C44  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8048  000C48  2ADE               	incf	postinc2,f,c
  8049  000C4A  0E00               	movlw	0
  8050  000C4C  22DD               	addwfc	postdec2,f,c
  8051  000C4E                     
  8052                           ; BSR set to: 1
  8053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  8054  000C4E  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8055  000C52  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8056  000C56  CFDE FFF6          	movff	postinc2,tblptrl
  8057  000C5A  CFDD FFF7          	movff	postdec2,tblptrh
  8058  000C5E                     	if	0	;tblptru may be non-zero
  8059  000C5E                     	endif
  8060  000C5E                     	if	0	;tblptru may be non-zero
  8061  000C5E                     	endif
  8062  000C5E  0008               	tblrd		*
  8063  000C60  50F5               	movf	tablat,w,c
  8064  000C62  0A2A               	xorlw	42
  8065  000C64  A4D8               	btfss	status,2,c
  8066  000C66  EF37  F006         	goto	u10671
  8067  000C6A  EF39  F006         	goto	u10670
  8068  000C6E                     u10671:
  8069  000C6E  EF56  F006         	goto	l9523
  8070  000C72                     u10670:
  8071  000C72                     
  8072                           ; BSR set to: 1
  8073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  8074  000C72  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8075  000C76  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8076  000C7A  2ADE               	incf	postinc2,f,c
  8077  000C7C  0E00               	movlw	0
  8078  000C7E  22DD               	addwfc	postdec2,f,c
  8079                           
  8080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  8081  000C80  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8082  000C84  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8083  000C88  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8084  000C8C  0E02               	movlw	2
  8085  000C8E  26DE               	addwf	postinc2,f,c
  8086  000C90  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8087  000C94  0E00               	movlw	0
  8088  000C96  22DD               	addwfc	postdec2,f,c
  8089  000C98  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8090  000C9C  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8091  000CA0  CFDE F134          	movff	postinc2,_prec
  8092  000CA4  CFDD F135          	movff	postdec2,_prec+1
  8093                           
  8094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  8095  000CA8  EF9A  F006         	goto	l9533
  8096  000CAC                     l9523:
  8097                           
  8098                           ; BSR set to: 1
  8099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  8100  000CAC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8101  000CB0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8102  000CB4  CFDE F00D          	movff	postinc2,atoi@s
  8103  000CB8  CFDD F00E          	movff	postdec2,atoi@s+1
  8104  000CBC  ECFA  F01A         	call	_atoi	;wreg free
  8105  000CC0  C00D  F134         	movff	?_atoi,_prec
  8106  000CC4  C00E  F135         	movff	?_atoi+1,_prec+1
  8107                           
  8108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8109  000CC8  EF6D  F006         	goto	l9527
  8110  000CCC                     l9525:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8114  000CCC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8115  000CD0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8116  000CD4  2ADE               	incf	postinc2,f,c
  8117  000CD6  0E00               	movlw	0
  8118  000CD8  22DD               	addwfc	postdec2,f,c
  8119  000CDA                     l9527:
  8120  000CDA  0ED0               	movlw	208
  8121  000CDC  0100               	movlb	0	; () banked
  8122  000CDE  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8123  000CE0  0EFF               	movlw	255
  8124  000CE2  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8125  000CE4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8126  000CE8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8127  000CEC  CFDE FFF6          	movff	postinc2,tblptrl
  8128  000CF0  CFDD FFF7          	movff	postdec2,tblptrh
  8129  000CF4                     	if	0	;tblptru may be non-zero
  8130  000CF4                     	endif
  8131  000CF4                     	if	0	;tblptru may be non-zero
  8132  000CF4                     	endif
  8133  000CF4  0008               	tblrd		*
  8134  000CF6  50F5               	movf	tablat,w,c
  8135  000CF8  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8136  000CFA  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8137  000CFC  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8138  000CFE  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8139  000D00  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8140  000D02  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8141  000D04  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8142  000D06  E10A               	bnz	u10680
  8143  000D08  0E0A               	movlw	10
  8144  000D0A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8145  000D0C  A0D8               	btfss	status,0,c
  8146  000D0E  EF8B  F006         	goto	u10681
  8147  000D12  EF8E  F006         	goto	u10680
  8148  000D16                     u10681:
  8149  000D16  0E01               	movlw	1
  8150  000D18  EF8F  F006         	goto	u10690
  8151  000D1C                     u10680:
  8152  000D1C  0E00               	movlw	0
  8153  000D1E                     u10690:
  8154  000D1E  6FD3               	movwf	_vfpfcnvrt$964& (0+255),b
  8155  000D20  6BD4               	clrf	(_vfpfcnvrt$964+1)& (0+255),b
  8156  000D22                     
  8157                           ; BSR set to: 0
  8158  000D22  51D3               	movf	_vfpfcnvrt$964& (0+255),w,b
  8159  000D24  11D4               	iorwf	(_vfpfcnvrt$964+1)& (0+255),w,b
  8160  000D26  A4D8               	btfss	status,2,c
  8161  000D28  EF98  F006         	goto	u10701
  8162  000D2C  EF9A  F006         	goto	u10700
  8163  000D30                     u10701:
  8164  000D30  EF66  F006         	goto	l9525
  8165  000D34                     u10700:
  8166  000D34                     l9533:
  8167                           
  8168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  8169  000D34  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8170  000D38  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8171  000D3C  CFDE FFF6          	movff	postinc2,tblptrl
  8172  000D40  CFDD FFF7          	movff	postdec2,tblptrh
  8173  000D44                     	if	0	;tblptru may be non-zero
  8174  000D44                     	endif
  8175  000D44                     	if	0	;tblptru may be non-zero
  8176  000D44                     	endif
  8177  000D44  0008               	tblrd		*
  8178  000D46  50F5               	movf	tablat,w,c
  8179  000D48  6E0C               	movwf	tolower@c^0,c
  8180  000D4A  6A0D               	clrf	(tolower@c+1)^0,c
  8181  000D4C  ECE3  F027         	call	_tolower	;wreg free
  8182  000D50  500C               	movf	?_tolower^0,w,c
  8183  000D52  0100               	movlb	0	; () banked
  8184  000D54  6FDB               	movwf	vfpfcnvrt@ct& (0+255),b
  8185  000D56                     
  8186                           ; BSR set to: 0
  8187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  8188  000D56  51DB               	movf	vfpfcnvrt@ct& (0+255),w,b
  8189  000D58  B4D8               	btfsc	status,2,c
  8190  000D5A  EFB1  F006         	goto	u10711
  8191  000D5E  EFB3  F006         	goto	u10710
  8192  000D62                     u10711:
  8193  000D62  EFED  F006         	goto	l9543
  8194  000D66                     u10710:
  8195  000D66                     
  8196                           ; BSR set to: 0
  8197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  8198  000D66  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8199  000D6A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8200  000D6E  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8201  000D72  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8202  000D76  0E01               	movlw	1
  8203  000D78  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8204  000D7A  0E00               	movlw	0
  8205  000D7C  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8206  000D7E  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8207  000D82  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8208  000D86                     	if	0	;tblptru may be non-zero
  8209  000D86                     	endif
  8210  000D86                     	if	0	;tblptru may be non-zero
  8211  000D86                     	endif
  8212  000D86  0008               	tblrd		*
  8213  000D88  50F5               	movf	tablat,w,c
  8214  000D8A  6E0C               	movwf	tolower@c^0,c
  8215  000D8C  6A0D               	clrf	(tolower@c+1)^0,c
  8216  000D8E  ECE3  F027         	call	_tolower	;wreg free
  8217  000D92  500C               	movf	?_tolower^0,w,c
  8218  000D94  0100               	movlb	0	; () banked
  8219  000D96  6FDC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  8220  000D98                     
  8221                           ; BSR set to: 0
  8222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  8223  000D98  51DC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  8224  000D9A  B4D8               	btfsc	status,2,c
  8225  000D9C  EFD2  F006         	goto	u10721
  8226  000DA0  EFD4  F006         	goto	u10720
  8227  000DA4                     u10721:
  8228  000DA4  EFED  F006         	goto	l9543
  8229  000DA8                     u10720:
  8230  000DA8                     
  8231                           ; BSR set to: 0
  8232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  8233  000DA8  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8234  000DAC  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8235  000DB0  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8236  000DB4  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8237  000DB8  0E02               	movlw	2
  8238  000DBA  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8239  000DBC  0E00               	movlw	0
  8240  000DBE  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8241  000DC0  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8242  000DC4  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8243  000DC8                     	if	0	;tblptru may be non-zero
  8244  000DC8                     	endif
  8245  000DC8                     	if	0	;tblptru may be non-zero
  8246  000DC8                     	endif
  8247  000DC8  0008               	tblrd		*
  8248  000DCA  50F5               	movf	tablat,w,c
  8249  000DCC  6E0C               	movwf	tolower@c^0,c
  8250  000DCE  6A0D               	clrf	(tolower@c+1)^0,c
  8251  000DD0  ECE3  F027         	call	_tolower	;wreg free
  8252  000DD4  500C               	movf	?_tolower^0,w,c
  8253  000DD6  0100               	movlb	0	; () banked
  8254  000DD8  6FDD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  8255  000DDA                     l9543:
  8256                           
  8257                           ; BSR set to: 0
  8258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8259  000DDA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8260  000DDE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8261  000DE2  CFDE FFF6          	movff	postinc2,tblptrl
  8262  000DE6  CFDD FFF7          	movff	postdec2,tblptrh
  8263  000DEA                     	if	0	;tblptru may be non-zero
  8264  000DEA                     	endif
  8265  000DEA                     	if	0	;tblptru may be non-zero
  8266  000DEA                     	endif
  8267  000DEA  0008               	tblrd		*
  8268  000DEC  50F5               	movf	tablat,w,c
  8269  000DEE  0A63               	xorlw	99
  8270  000DF0  A4D8               	btfss	status,2,c
  8271  000DF2  EFFD  F006         	goto	u10731
  8272  000DF6  EFFF  F006         	goto	u10730
  8273  000DFA                     u10731:
  8274  000DFA  EF26  F007         	goto	l9551
  8275  000DFE                     u10730:
  8276  000DFE                     
  8277                           ; BSR set to: 0
  8278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8279  000DFE  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8280  000E02  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8281  000E06  2ADE               	incf	postinc2,f,c
  8282  000E08  0E00               	movlw	0
  8283  000E0A  22DD               	addwfc	postdec2,f,c
  8284                           
  8285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8286  000E0C  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8287  000E10  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8288  000E14  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8289  000E18  0E02               	movlw	2
  8290  000E1A  26DE               	addwf	postinc2,f,c
  8291  000E1C  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8292  000E20  0E00               	movlw	0
  8293  000E22  22DD               	addwfc	postdec2,f,c
  8294  000E24  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8295  000E28  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8296  000E2C  50DF               	movf	indf2,w,c
  8297  000E2E  6FDE               	movwf	vfpfcnvrt@c& (0+255),b
  8298  000E30                     
  8299                           ; BSR set to: 0
  8300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8301  000E30  C0C1  F021         	movff	vfpfcnvrt@fp,ctoa@fp
  8302  000E34  C0C2  F022         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8303  000E38  C0DE  F023         	movff	vfpfcnvrt@c,ctoa@c
  8304  000E3C  EC70  F028         	call	_ctoa	;wreg free
  8305  000E40  C021  F0C1         	movff	?_ctoa,?_vfpfcnvrt
  8306  000E44  C022  F0C2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8307  000E48  EFB9  F008         	goto	l940
  8308  000E4C                     l9551:
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8312  000E4C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8313  000E50  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8314  000E54  CFDE FFF6          	movff	postinc2,tblptrl
  8315  000E58  CFDD FFF7          	movff	postdec2,tblptrh
  8316  000E5C                     	if	0	;tblptru may be non-zero
  8317  000E5C                     	endif
  8318  000E5C                     	if	0	;tblptru may be non-zero
  8319  000E5C                     	endif
  8320  000E5C  0008               	tblrd		*
  8321  000E5E  50F5               	movf	tablat,w,c
  8322  000E60  0A64               	xorlw	100
  8323  000E62  B4D8               	btfsc	status,2,c
  8324  000E64  EF36  F007         	goto	u10741
  8325  000E68  EF38  F007         	goto	u10740
  8326  000E6C                     u10741:
  8327  000E6C  EF4A  F007         	goto	l9555
  8328  000E70                     u10740:
  8329  000E70                     
  8330                           ; BSR set to: 0
  8331  000E70  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8332  000E74  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8333  000E78  CFDE FFF6          	movff	postinc2,tblptrl
  8334  000E7C  CFDD FFF7          	movff	postdec2,tblptrh
  8335  000E80                     	if	0	;tblptru may be non-zero
  8336  000E80                     	endif
  8337  000E80                     	if	0	;tblptru may be non-zero
  8338  000E80                     	endif
  8339  000E80  0008               	tblrd		*
  8340  000E82  50F5               	movf	tablat,w,c
  8341  000E84  0A69               	xorlw	105
  8342  000E86  A4D8               	btfss	status,2,c
  8343  000E88  EF48  F007         	goto	u10751
  8344  000E8C  EF4A  F007         	goto	u10750
  8345  000E90                     u10751:
  8346  000E90  EF8A  F007         	goto	l9561
  8347  000E94                     u10750:
  8348  000E94                     l9555:
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8352  000E94  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8353  000E98  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8354  000E9C  2ADE               	incf	postinc2,f,c
  8355  000E9E  0E00               	movlw	0
  8356  000EA0  22DD               	addwfc	postdec2,f,c
  8357                           
  8358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8359  000EA2  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8360  000EA6  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8361  000EAA  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8362  000EAE  0E02               	movlw	2
  8363  000EB0  26DE               	addwf	postinc2,f,c
  8364  000EB2  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8365  000EB6  0E00               	movlw	0
  8366  000EB8  22DD               	addwfc	postdec2,f,c
  8367  000EBA  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8368  000EBE  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8369  000EC2  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  8370  000EC6  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  8371  000ECA  0E00               	movlw	0
  8372  000ECC  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8373  000ECE  0EFF               	movlw	-1
  8374  000ED0  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8375  000ED2  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8376  000ED4  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8377  000ED6  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8378  000ED8  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8379  000EDA  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8380  000EDC                     
  8381                           ; BSR set to: 0
  8382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  8383  000EDC  C0C1  F021         	movff	vfpfcnvrt@fp,dtoa@fp
  8384  000EE0  C0C2  F022         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8385  000EE4  C0CB  F023         	movff	vfpfcnvrt@ll,dtoa@d
  8386  000EE8  C0CC  F024         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8387  000EEC  C0CD  F025         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8388  000EF0  C0CE  F026         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8389  000EF4  C0CF  F027         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8390  000EF8  C0D0  F028         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8391  000EFC  C0D1  F029         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8392  000F00  C0D2  F02A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8393  000F04  EC9F  F015         	call	_dtoa	;wreg free
  8394  000F08  C021  F0C1         	movff	?_dtoa,?_vfpfcnvrt
  8395  000F0C  C022  F0C2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8396  000F10  EFB9  F008         	goto	l940
  8397  000F14                     l9561:
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  8401  000F14  0E66               	movlw	102
  8402  000F16  19DB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  8403  000F18  A4D8               	btfss	status,2,c
  8404  000F1A  EF91  F007         	goto	u10761
  8405  000F1E  EF93  F007         	goto	u10760
  8406  000F22                     u10761:
  8407  000F22  EFD3  F007         	goto	l9573
  8408  000F26                     u10760:
  8409  000F26                     
  8410                           ; BSR set to: 0
  8411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  8412  000F26  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8413  000F2A  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8414  000F2E  CFDE FFF6          	movff	postinc2,tblptrl
  8415  000F32  CFDD FFF7          	movff	postdec2,tblptrh
  8416  000F36                     	if	0	;tblptru may be non-zero
  8417  000F36                     	endif
  8418  000F36                     	if	0	;tblptru may be non-zero
  8419  000F36                     	endif
  8420  000F36  0008               	tblrd		*
  8421  000F38  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8422  000F3C                     
  8423                           ; BSR set to: 0
  8424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  8425  000F3C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8426  000F40  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8427  000F44  2ADE               	incf	postinc2,f,c
  8428  000F46  0E00               	movlw	0
  8429  000F48  22DD               	addwfc	postdec2,f,c
  8430  000F4A                     
  8431                           ; BSR set to: 0
  8432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8433  000F4A  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8434  000F4E  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8435  000F52  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8436  000F56  0E04               	movlw	4
  8437  000F58  26DE               	addwf	postinc2,f,c
  8438  000F5A  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8439  000F5E  0E00               	movlw	0
  8440  000F60  22DD               	addwfc	postdec2,f,c
  8441  000F62  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8442  000F66  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8443  000F6A  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8444  000F6E  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8445  000F72  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8446  000F76  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8447  000F7A                     l9569:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  8451  000F7A  C0C1  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  8452  000F7E  C0C2  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8453  000F82  C0D7  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  8454  000F86  C0D8  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  8455  000F8A  C0D9  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  8456  000F8E  C0DA  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  8457  000F92  C0DE  F083         	movff	vfpfcnvrt@c,efgtoa@c
  8458  000F96  EC09  F000         	call	_efgtoa	;wreg free
  8459  000F9A  C07D  F0C1         	movff	?_efgtoa,?_vfpfcnvrt
  8460  000F9E  C07E  F0C2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  8461  000FA2  EFB9  F008         	goto	l940
  8462  000FA6                     l9573:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8466  000FA6  0EDB               	movlw	low vfpfcnvrt@ct
  8467  000FA8  6E06               	movwf	strncmp@_l^0,c
  8468  000FAA  0E00               	movlw	high vfpfcnvrt@ct
  8469  000FAC  6E07               	movwf	(strncmp@_l+1)^0,c
  8470  000FAE  0EFC               	movlw	low STR_28
  8471  000FB0  6E08               	movwf	strncmp@_r^0,c
  8472  000FB2  0E7F               	movlw	high STR_28
  8473  000FB4  6E09               	movwf	(strncmp@_r+1)^0,c
  8474  000FB6  0E00               	movlw	0
  8475  000FB8  6E0B               	movwf	(strncmp@n+1)^0,c
  8476  000FBA  0E02               	movlw	2
  8477  000FBC  6E0A               	movwf	strncmp@n^0,c
  8478  000FBE  ECFD  F021         	call	_strncmp	;wreg free
  8479  000FC2  5006               	movf	?_strncmp^0,w,c
  8480  000FC4  1007               	iorwf	(?_strncmp+1)^0,w,c
  8481  000FC6  A4D8               	btfss	status,2,c
  8482  000FC8  EFE8  F007         	goto	u10771
  8483  000FCC  EFEA  F007         	goto	u10770
  8484  000FD0                     u10771:
  8485  000FD0  EF66  F008         	goto	l9589
  8486  000FD4                     u10770:
  8487  000FD4                     
  8488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8489  000FD4  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8490  000FD8  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8491  000FDC  CFDE F0C7          	movff	postinc2,??_vfpfcnvrt
  8492  000FE0  CFDD F0C8          	movff	postdec2,??_vfpfcnvrt+1
  8493  000FE4  0E01               	movlw	1
  8494  000FE6  0100               	movlb	0	; () banked
  8495  000FE8  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  8496  000FEA  0E00               	movlw	0
  8497  000FEC  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8498  000FEE  C0C7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8499  000FF2  C0C8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8500  000FF6                     	if	0	;tblptru may be non-zero
  8501  000FF6                     	endif
  8502  000FF6                     	if	0	;tblptru may be non-zero
  8503  000FF6                     	endif
  8504  000FF6  0008               	tblrd		*
  8505  000FF8  CFF5 F0DE          	movff	tablat,vfpfcnvrt@c
  8506  000FFC  0EBF               	movlw	191
  8507  000FFE  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  8508  001000  0EFF               	movlw	255
  8509  001002  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8510  001004  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8511  001008  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8512  00100C  CFDE FFF6          	movff	postinc2,tblptrl
  8513  001010  CFDD FFF7          	movff	postdec2,tblptrh
  8514  001014                     	if	0	;tblptru may be non-zero
  8515  001014                     	endif
  8516  001014                     	if	0	;tblptru may be non-zero
  8517  001014                     	endif
  8518  001014  0008               	tblrd		*
  8519  001016  50F5               	movf	tablat,w,c
  8520  001018  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8521  00101A  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8522  00101C  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  8523  00101E  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8524  001020  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8525  001022  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8526  001024  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8527  001026  E10A               	bnz	u10780
  8528  001028  0E1A               	movlw	26
  8529  00102A  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8530  00102C  A0D8               	btfss	status,0,c
  8531  00102E  EF1B  F008         	goto	u10781
  8532  001032  EF1E  F008         	goto	u10780
  8533  001036                     u10781:
  8534  001036  0E01               	movlw	1
  8535  001038  EF1F  F008         	goto	u10790
  8536  00103C                     u10780:
  8537  00103C  0E00               	movlw	0
  8538  00103E                     u10790:
  8539  00103E  6FD5               	movwf	_vfpfcnvrt$970& (0+255),b
  8540  001040  6BD6               	clrf	(_vfpfcnvrt$970+1)& (0+255),b
  8541  001042                     
  8542                           ; BSR set to: 0
  8543  001042  51D5               	movf	_vfpfcnvrt$970& (0+255),w,b
  8544  001044  11D6               	iorwf	(_vfpfcnvrt$970+1)& (0+255),w,b
  8545  001046  B4D8               	btfsc	status,2,c
  8546  001048  EF28  F008         	goto	u10801
  8547  00104C  EF2A  F008         	goto	u10800
  8548  001050                     u10801:
  8549  001050  EF44  F008         	goto	l9583
  8550  001054                     u10800:
  8551  001054                     
  8552                           ; BSR set to: 0
  8553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8554  001054  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8555  001058  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8556  00105C  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8557  001060  0E04               	movlw	4
  8558  001062  26DE               	addwf	postinc2,f,c
  8559  001064  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8560  001068  0E00               	movlw	0
  8561  00106A  22DD               	addwfc	postdec2,f,c
  8562  00106C  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8563  001070  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8564  001074  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8565  001078  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8566  00107C  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8567  001080  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8568                           
  8569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  8570  001084  EF5C  F008         	goto	l951
  8571  001088                     l9583:
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8575  001088  C0C5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8576  00108C  C0C6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8577  001090  CFDF F0C7          	movff	indf2,??_vfpfcnvrt
  8578  001094  0E04               	movlw	4
  8579  001096  26DE               	addwf	postinc2,f,c
  8580  001098  CFDF F0C8          	movff	indf2,??_vfpfcnvrt+1
  8581  00109C  0E00               	movlw	0
  8582  00109E  22DD               	addwfc	postdec2,f,c
  8583  0010A0  C0C7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8584  0010A4  C0C8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8585  0010A8  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f
  8586  0010AC  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+1
  8587  0010B0  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+2
  8588  0010B4  CFDE F0DA          	movff	postinc2,vfpfcnvrt@f+3
  8589  0010B8                     l951:
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  8593  0010B8  0E02               	movlw	2
  8594  0010BA  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8595  0010BE  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8596  0010C2  26DE               	addwf	postinc2,f,c
  8597  0010C4  0E00               	movlw	0
  8598  0010C6  22DD               	addwfc	postdec2,f,c
  8599  0010C8  EFBD  F007         	goto	l9569
  8600  0010CC                     l9589:
  8601                           
  8602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  8603  0010CC  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8604  0010D0  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8605  0010D4  CFDE FFF6          	movff	postinc2,tblptrl
  8606  0010D8  CFDD FFF7          	movff	postdec2,tblptrh
  8607  0010DC                     	if	0	;tblptru may be non-zero
  8608  0010DC                     	endif
  8609  0010DC                     	if	0	;tblptru may be non-zero
  8610  0010DC                     	endif
  8611  0010DC  0008               	tblrd		*
  8612  0010DE  50F5               	movf	tablat,w,c
  8613  0010E0  0A25               	xorlw	37
  8614  0010E2  A4D8               	btfss	status,2,c
  8615  0010E4  EF76  F008         	goto	u10811
  8616  0010E8  EF78  F008         	goto	u10810
  8617  0010EC                     u10811:
  8618  0010EC  EF90  F008         	goto	l9599
  8619  0010F0                     u10810:
  8620  0010F0                     
  8621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  8622  0010F0  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8623  0010F4  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8624  0010F8  2ADE               	incf	postinc2,f,c
  8625  0010FA  0E00               	movlw	0
  8626  0010FC  22DD               	addwfc	postdec2,f,c
  8627  0010FE                     
  8628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  8629  0010FE  0E00               	movlw	0
  8630  001100  6E07               	movwf	(fputc@c+1)^0,c
  8631  001102  0E25               	movlw	37
  8632  001104  6E06               	movwf	fputc@c^0,c
  8633  001106  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  8634  00110A  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8635  00110E  EC68  F022         	call	_fputc	;wreg free
  8636  001112                     l9595:
  8637                           
  8638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  8639  001112  0E00               	movlw	0
  8640  001114  0100               	movlb	0	; () banked
  8641  001116  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8642  001118  0E01               	movlw	1
  8643  00111A  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  8644  00111C  EFB9  F008         	goto	l940
  8645  001120                     l9599:
  8646                           
  8647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  8648  001120  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8649  001124  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8650  001128  2ADE               	incf	postinc2,f,c
  8651  00112A  0E00               	movlw	0
  8652  00112C  22DD               	addwfc	postdec2,f,c
  8653  00112E                     
  8654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  8655  00112E  0E00               	movlw	0
  8656  001130  0100               	movlb	0	; () banked
  8657  001132  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8658  001134  0E00               	movlw	0
  8659  001136  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  8660  001138  EFB9  F008         	goto	l940
  8661  00113C                     l9605:
  8662                           
  8663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  8664  00113C  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8665  001140  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8666  001144  CFDE FFF6          	movff	postinc2,tblptrl
  8667  001148  CFDD FFF7          	movff	postdec2,tblptrh
  8668  00114C                     	if	0	;tblptru may be non-zero
  8669  00114C                     	endif
  8670  00114C                     	if	0	;tblptru may be non-zero
  8671  00114C                     	endif
  8672  00114C  0008               	tblrd		*
  8673  00114E  50F5               	movf	tablat,w,c
  8674  001150  6E06               	movwf	fputc@c^0,c
  8675  001152  6A07               	clrf	(fputc@c+1)^0,c
  8676  001154  C0C1  F008         	movff	vfpfcnvrt@fp,fputc@fp
  8677  001158  C0C2  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8678  00115C  EC68  F022         	call	_fputc	;wreg free
  8679  001160                     
  8680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  8681  001160  C0C3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8682  001164  C0C4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8683  001168  2ADE               	incf	postinc2,f,c
  8684  00116A  0E00               	movlw	0
  8685  00116C  22DD               	addwfc	postdec2,f,c
  8686  00116E  EF89  F008         	goto	l9595
  8687  001172                     l940:
  8688  001172  0012               	return		;funcret
  8689  001174                     __end_of_vfpfcnvrt:
  8690                           	opt callstack 0
  8691                           
  8692 ;; *************** function _strncmp *****************
  8693 ;; Defined at:
  8694 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  8697 ;;		 -> vfpfcnvrt@ct(3), 
  8698 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  8699 ;;		 -> STR_30(3), 
  8700 ;;  n               2    9[COMRAM] unsigned int 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  r               2   14[COMRAM] PTR const unsigned char 
  8703 ;;		 -> STR_30(3), 
  8704 ;;  l               2   12[COMRAM] PTR const unsigned char 
  8705 ;;		 -> vfpfcnvrt@ct(3), 
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  2    5[COMRAM] int 
  8708 ;; Registers used:
  8709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8715 ;;      Params:         6       0       0       0       0       0       0       0       0
  8716 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8717 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8718 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8719 ;;Total ram usage:       11 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    2
  8722 ;; This function calls:
  8723 ;;		Nothing
  8724 ;; This function is called by:
  8725 ;;		_vfpfcnvrt
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text35
  8730  0043FA                     __ptext35:
  8731                           	opt callstack 0
  8732  0043FA                     _strncmp:
  8733                           	opt callstack 24
  8734  0043FA  C006  F00D         	movff	strncmp@_l,strncmp@l
  8735  0043FE  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  8736  004402  C008  F00F         	movff	strncmp@_r,strncmp@r
  8737  004406  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  8738  00440A  060A               	decf	strncmp@n^0,f,c
  8739  00440C  A0D8               	btfss	status,0,c
  8740  00440E  060B               	decf	(strncmp@n+1)^0,f,c
  8741  004410  280A               	incf	strncmp@n^0,w,c
  8742  004412  E106               	bnz	u10591
  8743  004414  280B               	incf	(strncmp@n+1)^0,w,c
  8744  004416  A4D8               	btfss	status,2,c
  8745  004418  EF10  F022         	goto	u10591
  8746  00441C  EF12  F022         	goto	u10590
  8747  004420                     u10591:
  8748  004420  EF1F  F022         	goto	l9473
  8749  004424                     u10590:
  8750  004424  0E00               	movlw	0
  8751  004426  6E07               	movwf	(?_strncmp+1)^0,c
  8752  004428  0E00               	movlw	0
  8753  00442A  6E06               	movwf	?_strncmp^0,c
  8754  00442C  EF67  F022         	goto	l1775
  8755  004430                     l9471:
  8756  004430  4A0D               	infsnz	strncmp@l^0,f,c
  8757  004432  2A0E               	incf	(strncmp@l+1)^0,f,c
  8758  004434  4A0F               	infsnz	strncmp@r^0,f,c
  8759  004436  2A10               	incf	(strncmp@r+1)^0,f,c
  8760  004438  060A               	decf	strncmp@n^0,f,c
  8761  00443A  A0D8               	btfss	status,0,c
  8762  00443C  060B               	decf	(strncmp@n+1)^0,f,c
  8763  00443E                     l9473:
  8764  00443E  C00D  FFD9         	movff	strncmp@l,fsr2l
  8765  004442  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8766  004446  50DF               	movf	indf2,w,c
  8767  004448  B4D8               	btfsc	status,2,c
  8768  00444A  EF29  F022         	goto	u10601
  8769  00444E  EF2B  F022         	goto	u10600
  8770  004452                     u10601:
  8771  004452  EF56  F022         	goto	l9481
  8772  004456                     u10600:
  8773  004456  C00F  FFF6         	movff	strncmp@r,tblptrl
  8774  00445A  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8775  00445E                     	if	0	;tblptru may be non-zero
  8776  00445E                     	endif
  8777  00445E                     	if	0	;tblptru may be non-zero
  8778  00445E                     	endif
  8779  00445E  0008               	tblrd		*
  8780  004460  50F5               	movf	tablat,w,c
  8781  004462  0900               	iorlw	0
  8782  004464  B4D8               	btfsc	status,2,c
  8783  004466  EF37  F022         	goto	u10611
  8784  00446A  EF39  F022         	goto	u10610
  8785  00446E                     u10611:
  8786  00446E  EF56  F022         	goto	l9481
  8787  004472                     u10610:
  8788  004472  500A               	movf	strncmp@n^0,w,c
  8789  004474  100B               	iorwf	(strncmp@n+1)^0,w,c
  8790  004476  B4D8               	btfsc	status,2,c
  8791  004478  EF40  F022         	goto	u10621
  8792  00447C  EF42  F022         	goto	u10620
  8793  004480                     u10621:
  8794  004480  EF56  F022         	goto	l9481
  8795  004484                     u10620:
  8796  004484  C00D  FFD9         	movff	strncmp@l,fsr2l
  8797  004488  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8798  00448C  50DF               	movf	indf2,w,c
  8799  00448E  6E0C               	movwf	??_strncmp^0,c
  8800  004490  C00F  FFF6         	movff	strncmp@r,tblptrl
  8801  004494  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8802  004498                     	if	0	;tblptru may be non-zero
  8803  004498                     	endif
  8804  004498                     	if	0	;tblptru may be non-zero
  8805  004498                     	endif
  8806  004498  0008               	tblrd		*
  8807  00449A  50F5               	movf	tablat,w,c
  8808  00449C  180C               	xorwf	??_strncmp^0,w,c
  8809  00449E  B4D8               	btfsc	status,2,c
  8810  0044A0  EF54  F022         	goto	u10631
  8811  0044A4  EF56  F022         	goto	u10630
  8812  0044A8                     u10631:
  8813  0044A8  EF18  F022         	goto	l9471
  8814  0044AC                     u10630:
  8815  0044AC                     l9481:
  8816  0044AC  C00D  FFD9         	movff	strncmp@l,fsr2l
  8817  0044B0  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  8818  0044B4  50DF               	movf	indf2,w,c
  8819  0044B6  6E0C               	movwf	??_strncmp^0,c
  8820  0044B8  C00F  FFF6         	movff	strncmp@r,tblptrl
  8821  0044BC  C010  FFF7         	movff	strncmp@r+1,tblptrh
  8822  0044C0                     	if	0	;tblptru may be non-zero
  8823  0044C0                     	endif
  8824  0044C0                     	if	0	;tblptru may be non-zero
  8825  0044C0                     	endif
  8826  0044C0  0008               	tblrd		*
  8827  0044C2  50F5               	movf	tablat,w,c
  8828  0044C4  5C0C               	subwf	??_strncmp^0,w,c
  8829  0044C6  6E06               	movwf	?_strncmp^0,c
  8830  0044C8  6A07               	clrf	(?_strncmp+1)^0,c
  8831  0044CA  A0D8               	btfss	status,0,c
  8832  0044CC  0607               	decf	(?_strncmp+1)^0,f,c
  8833  0044CE                     l1775:
  8834  0044CE  0012               	return		;funcret
  8835  0044D0                     __end_of_strncmp:
  8836                           	opt callstack 0
  8837                           
  8838 ;; *************** function _efgtoa *****************
  8839 ;; Defined at:
  8840 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  8843 ;;		 -> sprintf@f(6), 
  8844 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  8845 ;;  c               1   35[BANK0 ] unsigned char 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;  u               4   93[BANK0 ] unsigned char 
  8848 ;;  g               4   85[BANK0 ] unsigned char 
  8849 ;;  l               4   79[BANK0 ] unsigned char 
  8850 ;;  h               4   75[BANK0 ] unsigned char 
  8851 ;;  ou              4   41[BANK0 ] unsigned char 
  8852 ;;  n               2   91[BANK0 ] int 
  8853 ;;  e               2   89[BANK0 ] int 
  8854 ;;  i               2   83[BANK0 ] int 
  8855 ;;  w               2   72[BANK0 ] int 
  8856 ;;  p               2   69[BANK0 ] int 
  8857 ;;  sign            2   67[BANK0 ] int 
  8858 ;;  d               2   65[BANK0 ] int 
  8859 ;;  ne              2   63[BANK0 ] int 
  8860 ;;  m               2   61[BANK0 ] int 
  8861 ;;  pp              2   59[BANK0 ] int 
  8862 ;;  t               2   57[BANK0 ] int 
  8863 ;;  mode            1   74[BANK0 ] unsigned char 
  8864 ;;  nmode           1   71[BANK0 ] unsigned char 
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  2   29[BANK0 ] int 
  8867 ;; Registers used:
  8868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8874 ;;      Params:         0       7       0       0       0       0       0       0       0
  8875 ;;      Locals:         0      56       0       0       0       0       0       0       0
  8876 ;;      Temps:          0       5       0       0       0       0       0       0       0
  8877 ;;      Totals:         0      68       0       0       0       0       0       0       0
  8878 ;;Total ram usage:       68 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; Hardware stack levels required when called:    6
  8881 ;; This function calls:
  8882 ;;		___awdiv
  8883 ;;		___awmod
  8884 ;;		___fladd
  8885 ;;		___fldiv
  8886 ;;		___fleq
  8887 ;;		___flge
  8888 ;;		___flmul
  8889 ;;		___flneg
  8890 ;;		___flsub
  8891 ;;		___fltol
  8892 ;;		___fpclassifyf
  8893 ;;		_floorf
  8894 ;;		_isupper
  8895 ;;		_pad
  8896 ;;		_strcpy
  8897 ;;		_tolower
  8898 ;; This function is called by:
  8899 ;;		_vfpfcnvrt
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text36
  8904  000012                     __ptext36:
  8905                           	opt callstack 0
  8906  000012                     _efgtoa:
  8907                           	opt callstack 20
  8908  000012                     
  8909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8910  000012  0E00               	movlw	0
  8911  000014  0100               	movlb	0	; () banked
  8912  000016  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  8913  000018  0E00               	movlw	0
  8914  00001A  6FA3               	movwf	efgtoa@sign& (0+255),b
  8915  00001C                     
  8916                           ; BSR set to: 0
  8917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8918  00001C  C07F  F0B5         	movff	efgtoa@f,efgtoa@g
  8919  000020  C080  F0B6         	movff	efgtoa@f+1,efgtoa@g+1
  8920  000024  C081  F0B7         	movff	efgtoa@f+2,efgtoa@g+2
  8921  000028  C082  F0B8         	movff	efgtoa@f+3,efgtoa@g+3
  8922  00002C                     
  8923                           ; BSR set to: 0
  8924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8925  00002C  BFB8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8926  00002E  EF1D  F000         	goto	u10000
  8927  000032  EF1B  F000         	goto	u10001
  8928  000036                     u10001:
  8929  000036  EF33  F000         	goto	l9135
  8930  00003A                     u10000:
  8931  00003A                     
  8932                           ; BSR set to: 0
  8933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8934  00003A  0E00               	movlw	0
  8935  00003C  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  8936  00003E  0E01               	movlw	1
  8937  000040  6FA3               	movwf	efgtoa@sign& (0+255),b
  8938  000042                     
  8939                           ; BSR set to: 0
  8940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8941  000042  C0B5  F006         	movff	efgtoa@g,___flneg@f1
  8942  000046  C0B6  F007         	movff	efgtoa@g+1,___flneg@f1+1
  8943  00004A  C0B7  F008         	movff	efgtoa@g+2,___flneg@f1+2
  8944  00004E  C0B8  F009         	movff	efgtoa@g+3,___flneg@f1+3
  8945  000052  ECA2  F02A         	call	___flneg	;wreg free
  8946  000056  C006  F0B5         	movff	?___flneg,efgtoa@g
  8947  00005A  C007  F0B6         	movff	?___flneg+1,efgtoa@g+1
  8948  00005E  C008  F0B7         	movff	?___flneg+2,efgtoa@g+2
  8949  000062  C009  F0B8         	movff	?___flneg+3,efgtoa@g+3
  8950  000066                     l9135:
  8951                           
  8952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8953  000066  0E00               	movlw	0
  8954  000068  0100               	movlb	0	; () banked
  8955  00006A  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  8956  00006C  0E00               	movlw	0
  8957  00006E  6FBB               	movwf	efgtoa@n& (0+255),b
  8958  000070                     
  8959                           ; BSR set to: 0
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8961  000070  C132  F0A8         	movff	_width,efgtoa@w
  8962  000074  C133  F0A9         	movff	_width+1,efgtoa@w+1
  8963  000078                     
  8964                           ; BSR set to: 0
  8965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8966  000078  51A3               	movf	efgtoa@sign& (0+255),w,b
  8967  00007A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8968  00007C  A4D8               	btfss	status,2,c
  8969  00007E  EF43  F000         	goto	u10011
  8970  000082  EF45  F000         	goto	u10010
  8971  000086                     u10011:
  8972  000086  EF4C  F000         	goto	l9143
  8973  00008A                     u10010:
  8974  00008A                     
  8975                           ; BSR set to: 0
  8976  00008A  A455               	btfss	_flags^0,2,c
  8977  00008C  EF4A  F000         	goto	u10021
  8978  000090  EF4C  F000         	goto	u10020
  8979  000094                     u10021:
  8980  000094  EF66  F000         	goto	l9155
  8981  000098                     u10020:
  8982  000098                     l9143:
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8986  000098  51A3               	movf	efgtoa@sign& (0+255),w,b
  8987  00009A  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8988  00009C  A4D8               	btfss	status,2,c
  8989  00009E  EF53  F000         	goto	u10031
  8990  0000A2  EF55  F000         	goto	u10030
  8991  0000A6                     u10031:
  8992  0000A6  EF5B  F000         	goto	l9147
  8993  0000AA                     u10030:
  8994  0000AA                     
  8995                           ; BSR set to: 0
  8996  0000AA  0E00               	movlw	0
  8997  0000AC  6F8E               	movwf	(_efgtoa$939+1)& (0+255),b
  8998  0000AE  0E2B               	movlw	43
  8999  0000B0  6F8D               	movwf	_efgtoa$939& (0+255),b
  9000  0000B2  EF5F  F000         	goto	l9149
  9001  0000B6                     l9147:
  9002                           
  9003                           ; BSR set to: 0
  9004  0000B6  0E00               	movlw	0
  9005  0000B8  6F8E               	movwf	(_efgtoa$939+1)& (0+255),b
  9006  0000BA  0E2D               	movlw	45
  9007  0000BC  6F8D               	movwf	_efgtoa$939& (0+255),b
  9008  0000BE                     l9149:
  9009                           
  9010                           ; BSR set to: 0
  9011  0000BE  C08D  F141         	movff	_efgtoa$939,_dbuf
  9012  0000C2                     
  9013                           ; BSR set to: 0
  9014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9015  0000C2  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  9016  0000C4  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  9017  0000C6                     
  9018                           ; BSR set to: 0
  9019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9020  0000C6  07A8               	decf	efgtoa@w& (0+255),f,b
  9021  0000C8  A0D8               	btfss	status,0,c
  9022  0000CA  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  9023  0000CC                     l9155:
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9027  0000CC  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9028  0000D0  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9029  0000D4  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9030  0000D8  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9031  0000DC  EC7E  F021         	call	___fpclassifyf	;wreg free
  9032  0000E0  0406               	decf	?___fpclassifyf^0,w,c
  9033  0000E2  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9034  0000E4  A4D8               	btfss	status,2,c
  9035  0000E6  EF77  F000         	goto	u10041
  9036  0000EA  EF79  F000         	goto	u10040
  9037  0000EE                     u10041:
  9038  0000EE  EFD0  F000         	goto	l9173
  9039  0000F2                     u10040:
  9040  0000F2  0EBF               	movlw	191
  9041  0000F4  0100               	movlb	0	; () banked
  9042  0000F6  6F84               	movwf	??_efgtoa& (0+255),b
  9043  0000F8  0EFF               	movlw	255
  9044  0000FA  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9045  0000FC  5183               	movf	efgtoa@c& (0+255),w,b
  9046  0000FE  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9047  000100  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9048  000102  5184               	movf	??_efgtoa& (0+255),w,b
  9049  000104  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9050  000106  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9051  000108  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9052  00010A  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9053  00010C  E10A               	bnz	u10050
  9054  00010E  0E1A               	movlw	26
  9055  000110  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9056  000112  A0D8               	btfss	status,0,c
  9057  000114  EF8E  F000         	goto	u10051
  9058  000118  EF91  F000         	goto	u10050
  9059  00011C                     u10051:
  9060  00011C  0E01               	movlw	1
  9061  00011E  EF92  F000         	goto	u10060
  9062  000122                     u10050:
  9063  000122  0E00               	movlw	0
  9064  000124                     u10060:
  9065  000124  6F8F               	movwf	_efgtoa$940& (0+255),b
  9066  000126  6B90               	clrf	(_efgtoa$940+1)& (0+255),b
  9067  000128                     
  9068                           ; BSR set to: 0
  9069  000128  518F               	movf	_efgtoa$940& (0+255),w,b
  9070  00012A  1190               	iorwf	(_efgtoa$940+1)& (0+255),w,b
  9071  00012C  B4D8               	btfsc	status,2,c
  9072  00012E  EF9B  F000         	goto	u10071
  9073  000132  EF9D  F000         	goto	u10070
  9074  000136                     u10071:
  9075  000136  EFAB  F000         	goto	l9165
  9076  00013A                     u10070:
  9077  00013A                     
  9078                           ; BSR set to: 0
  9079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9080  00013A  0E41               	movlw	low _dbuf
  9081  00013C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9082  00013E  6E06               	movwf	strcpy@dest^0,c
  9083  000140  0E01               	movlw	high _dbuf
  9084  000142  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9085  000144  6E07               	movwf	(strcpy@dest+1)^0,c
  9086  000146  0EEC               	movlw	low STR_20
  9087  000148  6E08               	movwf	strcpy@src^0,c
  9088  00014A  0E7F               	movlw	high STR_20
  9089  00014C  6E09               	movwf	(strcpy@src+1)^0,c
  9090  00014E  EC42  F028         	call	_strcpy	;wreg free
  9091                           
  9092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9093  000152  EFB7  F000         	goto	l9167
  9094  000156                     l9165:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9098  000156  0E41               	movlw	low _dbuf
  9099  000158  25BB               	addwf	efgtoa@n& (0+255),w,b
  9100  00015A  6E06               	movwf	strcpy@dest^0,c
  9101  00015C  0E01               	movlw	high _dbuf
  9102  00015E  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9103  000160  6E07               	movwf	(strcpy@dest+1)^0,c
  9104  000162  0EF4               	movlw	low STR_21
  9105  000164  6E08               	movwf	strcpy@src^0,c
  9106  000166  0E7F               	movlw	high STR_21
  9107  000168  6E09               	movwf	(strcpy@src+1)^0,c
  9108  00016A  EC42  F028         	call	_strcpy	;wreg free
  9109  00016E                     l9167:
  9110                           
  9111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9112  00016E  0100               	movlb	0	; () banked
  9113  000170  0EFD               	movlw	253
  9114  000172  27A8               	addwf	efgtoa@w& (0+255),f,b
  9115  000174  0EFF               	movlw	255
  9116  000176  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9117  000178                     l9169:
  9118                           
  9119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9120  000178  C07D  F016         	movff	efgtoa@fp,pad@fp
  9121  00017C  C07E  F017         	movff	efgtoa@fp+1,pad@fp+1
  9122  000180  0E41               	movlw	low _dbuf
  9123  000182  6E18               	movwf	pad@buf^0,c
  9124  000184  0E01               	movlw	high _dbuf
  9125  000186  6E19               	movwf	(pad@buf+1)^0,c
  9126  000188  C0A8  F01A         	movff	efgtoa@w,pad@p
  9127  00018C  C0A9  F01B         	movff	efgtoa@w+1,pad@p+1
  9128  000190  EC90  F023         	call	_pad	;wreg free
  9129  000194  C016  F07D         	movff	?_pad,?_efgtoa
  9130  000198  C017  F07E         	movff	?_pad+1,?_efgtoa+1
  9131  00019C  EFE5  F005         	goto	l850
  9132  0001A0                     l9173:
  9133                           
  9134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9135  0001A0  C0B5  F006         	movff	efgtoa@g,___fpclassifyf@x
  9136  0001A4  C0B6  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9137  0001A8  C0B7  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9138  0001AC  C0B8  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9139  0001B0  EC7E  F021         	call	___fpclassifyf	;wreg free
  9140  0001B4  5006               	movf	?___fpclassifyf^0,w,c
  9141  0001B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9142  0001B8  A4D8               	btfss	status,2,c
  9143  0001BA  EFE1  F000         	goto	u10081
  9144  0001BE  EFE3  F000         	goto	u10080
  9145  0001C2                     u10081:
  9146  0001C2  EF23  F001         	goto	l9191
  9147  0001C6                     u10080:
  9148  0001C6  0EBF               	movlw	191
  9149  0001C8  0100               	movlb	0	; () banked
  9150  0001CA  6F84               	movwf	??_efgtoa& (0+255),b
  9151  0001CC  0EFF               	movlw	255
  9152  0001CE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9153  0001D0  5183               	movf	efgtoa@c& (0+255),w,b
  9154  0001D2  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  9155  0001D4  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  9156  0001D6  5184               	movf	??_efgtoa& (0+255),w,b
  9157  0001D8  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9158  0001DA  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9159  0001DC  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9160  0001DE  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9161  0001E0  E10A               	bnz	u10090
  9162  0001E2  0E1A               	movlw	26
  9163  0001E4  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9164  0001E6  A0D8               	btfss	status,0,c
  9165  0001E8  EFF8  F000         	goto	u10091
  9166  0001EC  EFFB  F000         	goto	u10090
  9167  0001F0                     u10091:
  9168  0001F0  0E01               	movlw	1
  9169  0001F2  EFFC  F000         	goto	u10100
  9170  0001F6                     u10090:
  9171  0001F6  0E00               	movlw	0
  9172  0001F8                     u10100:
  9173  0001F8  6F91               	movwf	_efgtoa$944& (0+255),b
  9174  0001FA  6B92               	clrf	(_efgtoa$944+1)& (0+255),b
  9175  0001FC                     
  9176                           ; BSR set to: 0
  9177  0001FC  5191               	movf	_efgtoa$944& (0+255),w,b
  9178  0001FE  1192               	iorwf	(_efgtoa$944+1)& (0+255),w,b
  9179  000200  B4D8               	btfsc	status,2,c
  9180  000202  EF05  F001         	goto	u10111
  9181  000206  EF07  F001         	goto	u10110
  9182  00020A                     u10111:
  9183  00020A  EF15  F001         	goto	l9183
  9184  00020E                     u10110:
  9185  00020E                     
  9186                           ; BSR set to: 0
  9187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9188  00020E  0E41               	movlw	low _dbuf
  9189  000210  25BB               	addwf	efgtoa@n& (0+255),w,b
  9190  000212  6E06               	movwf	strcpy@dest^0,c
  9191  000214  0E01               	movlw	high _dbuf
  9192  000216  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9193  000218  6E07               	movwf	(strcpy@dest+1)^0,c
  9194  00021A  0EF0               	movlw	low STR_24
  9195  00021C  6E08               	movwf	strcpy@src^0,c
  9196  00021E  0E7F               	movlw	high STR_24
  9197  000220  6E09               	movwf	(strcpy@src+1)^0,c
  9198  000222  EC42  F028         	call	_strcpy	;wreg free
  9199                           
  9200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9201  000226  EFB7  F000         	goto	l9167
  9202  00022A                     l9183:
  9203                           
  9204                           ; BSR set to: 0
  9205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9206  00022A  0E41               	movlw	low _dbuf
  9207  00022C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9208  00022E  6E06               	movwf	strcpy@dest^0,c
  9209  000230  0E01               	movlw	high _dbuf
  9210  000232  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9211  000234  6E07               	movwf	(strcpy@dest+1)^0,c
  9212  000236  0EF8               	movlw	low STR_25
  9213  000238  6E08               	movwf	strcpy@src^0,c
  9214  00023A  0E7F               	movlw	high STR_25
  9215  00023C  6E09               	movwf	(strcpy@src+1)^0,c
  9216  00023E  EC42  F028         	call	_strcpy	;wreg free
  9217  000242  EFB7  F000         	goto	l9167
  9218  000246                     l9191:
  9219                           
  9220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9221  000246  0E00               	movlw	0
  9222  000248  0100               	movlb	0	; () banked
  9223  00024A  6FBD               	movwf	efgtoa@u& (0+255),b
  9224  00024C  0E00               	movlw	0
  9225  00024E  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9226  000250  0E80               	movlw	128
  9227  000252  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9228  000254  0E3F               	movlw	63
  9229  000256  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9230                           
  9231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9232  000258  0E00               	movlw	0
  9233  00025A  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9234  00025C  0E00               	movlw	0
  9235  00025E  6FB9               	movwf	efgtoa@e& (0+255),b
  9236  000260                     
  9237                           ; BSR set to: 0
  9238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9239  000260  C0B5  F006         	movff	efgtoa@g,___fleq@ff1
  9240  000264  C0B6  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9241  000268  C0B7  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9242  00026C  C0B8  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9243  000270  0E00               	movlw	0
  9244  000272  6E0A               	movwf	___fleq@ff2^0,c
  9245  000274  0E00               	movlw	0
  9246  000276  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9247  000278  0E00               	movlw	0
  9248  00027A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9249  00027C  0E00               	movlw	0
  9250  00027E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9251  000280  EC9F  F024         	call	___fleq	;wreg free
  9252  000284  B0D8               	btfsc	status,0,c
  9253  000286  EF47  F001         	goto	u10121
  9254  00028A  EF49  F001         	goto	u10120
  9255  00028E                     u10121:
  9256  00028E  EFCC  F001         	goto	l9209
  9257  000292                     u10120:
  9258  000292  EF68  F001         	goto	l9201
  9259  000296                     l9197:
  9260                           
  9261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9262  000296  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9263  00029A  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9264  00029E  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9265  0002A2  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9266  0002A6  0E00               	movlw	0
  9267  0002A8  6E1F               	movwf	___flmul@a^0,c
  9268  0002AA  0E00               	movlw	0
  9269  0002AC  6E20               	movwf	(___flmul@a+1)^0,c
  9270  0002AE  0E20               	movlw	32
  9271  0002B0  6E21               	movwf	(___flmul@a+2)^0,c
  9272  0002B2  0E41               	movlw	65
  9273  0002B4  6E22               	movwf	(___flmul@a+3)^0,c
  9274  0002B6  ECE0  F00D         	call	___flmul	;wreg free
  9275  0002BA  C01B  F0BD         	movff	?___flmul,efgtoa@u
  9276  0002BE  C01C  F0BE         	movff	?___flmul+1,efgtoa@u+1
  9277  0002C2  C01D  F0BF         	movff	?___flmul+2,efgtoa@u+2
  9278  0002C6  C01E  F0C0         	movff	?___flmul+3,efgtoa@u+3
  9279  0002CA                     
  9280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9281  0002CA  0100               	movlb	0	; () banked
  9282  0002CC  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  9283  0002CE  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  9284  0002D0                     l9201:
  9285                           
  9286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9287  0002D0  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9288  0002D4  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9289  0002D8  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9290  0002DC  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9291  0002E0  0E00               	movlw	0
  9292  0002E2  6E1F               	movwf	___flmul@a^0,c
  9293  0002E4  0E00               	movlw	0
  9294  0002E6  6E20               	movwf	(___flmul@a+1)^0,c
  9295  0002E8  0E20               	movlw	32
  9296  0002EA  6E21               	movwf	(___flmul@a+2)^0,c
  9297  0002EC  0E41               	movlw	65
  9298  0002EE  6E22               	movwf	(___flmul@a+3)^0,c
  9299  0002F0  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9300  0002F4  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9301  0002F8  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9302  0002FC  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9303  000300  ECE0  F00D         	call	___flmul	;wreg free
  9304  000304  C01B  F038         	movff	?___flmul,___flge@ff2
  9305  000308  C01C  F039         	movff	?___flmul+1,___flge@ff2+1
  9306  00030C  C01D  F03A         	movff	?___flmul+2,___flge@ff2+2
  9307  000310  C01E  F03B         	movff	?___flmul+3,___flge@ff2+3
  9308  000314  ECFC  F020         	call	___flge	;wreg free
  9309  000318  B0D8               	btfsc	status,0,c
  9310  00031A  EF91  F001         	goto	u10131
  9311  00031E  EF93  F001         	goto	u10130
  9312  000322                     u10131:
  9313  000322  EF4B  F001         	goto	l9197
  9314  000326                     u10130:
  9315  000326  EFB3  F001         	goto	l9207
  9316  00032A                     l9203:
  9317                           
  9318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9319  00032A  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9320  00032E  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9321  000332  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9322  000336  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9323  00033A  0E00               	movlw	0
  9324  00033C  6E48               	movwf	___fldiv@a^0,c
  9325  00033E  0E00               	movlw	0
  9326  000340  6E49               	movwf	(___fldiv@a+1)^0,c
  9327  000342  0E20               	movlw	32
  9328  000344  6E4A               	movwf	(___fldiv@a+2)^0,c
  9329  000346  0E41               	movlw	65
  9330  000348  6E4B               	movwf	(___fldiv@a+3)^0,c
  9331  00034A  ECD1  F013         	call	___fldiv	;wreg free
  9332  00034E  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9333  000352  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9334  000356  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9335  00035A  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9336  00035E                     
  9337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9338  00035E  0100               	movlb	0	; () banked
  9339  000360  07B9               	decf	efgtoa@e& (0+255),f,b
  9340  000362  A0D8               	btfss	status,0,c
  9341  000364  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  9342  000366                     l9207:
  9343                           
  9344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9345  000366  C0B5  F034         	movff	efgtoa@g,___flge@ff1
  9346  00036A  C0B6  F035         	movff	efgtoa@g+1,___flge@ff1+1
  9347  00036E  C0B7  F036         	movff	efgtoa@g+2,___flge@ff1+2
  9348  000372  C0B8  F037         	movff	efgtoa@g+3,___flge@ff1+3
  9349  000376  C0BD  F038         	movff	efgtoa@u,___flge@ff2
  9350  00037A  C0BE  F039         	movff	efgtoa@u+1,___flge@ff2+1
  9351  00037E  C0BF  F03A         	movff	efgtoa@u+2,___flge@ff2+2
  9352  000382  C0C0  F03B         	movff	efgtoa@u+3,___flge@ff2+3
  9353  000386  ECFC  F020         	call	___flge	;wreg free
  9354  00038A  A0D8               	btfss	status,0,c
  9355  00038C  EFCA  F001         	goto	u10141
  9356  000390  EFCC  F001         	goto	u10140
  9357  000394                     u10141:
  9358  000394  EF95  F001         	goto	l9203
  9359  000398                     u10140:
  9360  000398                     l9209:
  9361                           
  9362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9363  000398  C083  F00C         	movff	efgtoa@c,tolower@c
  9364  00039C  6A0D               	clrf	(tolower@c+1)^0,c
  9365  00039E  ECE3  F027         	call	_tolower	;wreg free
  9366  0003A2  500C               	movf	?_tolower^0,w,c
  9367  0003A4  0100               	movlb	0	; () banked
  9368  0003A6  6FAA               	movwf	efgtoa@mode& (0+255),b
  9369  0003A8                     
  9370                           ; BSR set to: 0
  9371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9372  0003A8  C0AA  F0A7         	movff	efgtoa@mode,efgtoa@nmode
  9373  0003AC                     
  9374                           ; BSR set to: 0
  9375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9376  0003AC  0E67               	movlw	103
  9377  0003AE  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9378  0003B0  A4D8               	btfss	status,2,c
  9379  0003B2  EFDD  F001         	goto	u10151
  9380  0003B6  EFDF  F001         	goto	u10150
  9381  0003BA                     u10151:
  9382  0003BA  EF07  F002         	goto	l9223
  9383  0003BE                     u10150:
  9384  0003BE                     
  9385                           ; BSR set to: 0
  9386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9387  0003BE  0101               	movlb	1	; () banked
  9388  0003C0  5134               	movf	_prec& (0+255),w,b
  9389  0003C2  1135               	iorwf	(_prec+1)& (0+255),w,b
  9390  0003C4  A4D8               	btfss	status,2,c
  9391  0003C6  EFE7  F001         	goto	u10161
  9392  0003CA  EFE9  F001         	goto	u10160
  9393  0003CE                     u10161:
  9394  0003CE  EFED  F001         	goto	l9219
  9395  0003D2                     u10160:
  9396  0003D2                     
  9397                           ; BSR set to: 1
  9398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9399  0003D2  0E00               	movlw	0
  9400  0003D4  6F35               	movwf	(_prec+1)& (0+255),b
  9401  0003D6  0E01               	movlw	1
  9402  0003D8  6F34               	movwf	_prec& (0+255),b
  9403  0003DA                     l9219:
  9404                           
  9405                           ; BSR set to: 1
  9406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9407  0003DA  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9408  0003DC  EFFA  F001         	goto	u10170
  9409  0003E0  5135               	movf	(_prec+1)& (0+255),w,b
  9410  0003E2  E106               	bnz	u10171
  9411  0003E4  0534               	decf	_prec& (0+255),w,b
  9412  0003E6  B0D8               	btfsc	status,0,c
  9413  0003E8  EFF8  F001         	goto	u10171
  9414  0003EC  EFFA  F001         	goto	u10170
  9415  0003F0                     u10171:
  9416  0003F0  EF01  F002         	goto	l868
  9417  0003F4                     u10170:
  9418  0003F4                     l9221:
  9419                           
  9420                           ; BSR set to: 1
  9421  0003F4  0E00               	movlw	0
  9422  0003F6  0100               	movlb	0	; () banked
  9423  0003F8  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  9424  0003FA  0E06               	movlw	6
  9425  0003FC  6FA5               	movwf	efgtoa@p& (0+255),b
  9426  0003FE  EF11  F002         	goto	l9229
  9427  000402                     l868:
  9428                           
  9429                           ; BSR set to: 1
  9430  000402  C134  F0A5         	movff	_prec,efgtoa@p
  9431  000406  C135  F0A6         	movff	_prec+1,efgtoa@p+1
  9432  00040A  EF11  F002         	goto	l9229
  9433  00040E                     l9223:
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9437  00040E  0101               	movlb	1	; () banked
  9438  000410  BF35               	btfsc	(_prec+1)& (0+255),7,b
  9439  000412  EF0D  F002         	goto	u10181
  9440  000416  EF0F  F002         	goto	u10180
  9441  00041A                     u10181:
  9442  00041A  EFFA  F001         	goto	l9221
  9443  00041E                     u10180:
  9444  00041E  EF01  F002         	goto	l868
  9445  000422                     l9229:
  9446                           
  9447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9448  000422  0E67               	movlw	103
  9449  000424  0100               	movlb	0	; () banked
  9450  000426  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9451  000428  A4D8               	btfss	status,2,c
  9452  00042A  EF19  F002         	goto	u10191
  9453  00042E  EF1B  F002         	goto	u10190
  9454  000432                     u10191:
  9455  000432  EF4A  F002         	goto	l9239
  9456  000436                     u10190:
  9457  000436                     
  9458                           ; BSR set to: 0
  9459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9460  000436  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  9461  000438  EF29  F002         	goto	u10200
  9462  00043C  0EFC               	movlw	252
  9463  00043E  5DB9               	subwf	efgtoa@e& (0+255),w,b
  9464  000440  0EFF               	movlw	255
  9465  000442  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9466  000444  A0D8               	btfss	status,0,c
  9467  000446  EF27  F002         	goto	u10201
  9468  00044A  EF29  F002         	goto	u10200
  9469  00044E                     u10201:
  9470  00044E  EF48  F002         	goto	l9237
  9471  000452                     u10200:
  9472  000452                     
  9473                           ; BSR set to: 0
  9474  000452  0EFF               	movlw	255
  9475  000454  6F84               	movwf	??_efgtoa& (0+255),b
  9476  000456  0EFF               	movlw	255
  9477  000458  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  9478  00045A  C0A5  F086         	movff	efgtoa@p,??_efgtoa+2
  9479  00045E  C0A6  F087         	movff	efgtoa@p+1,??_efgtoa+3
  9480  000462  5184               	movf	??_efgtoa& (0+255),w,b
  9481  000464  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  9482  000466  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  9483  000468  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9484  00046A  51B9               	movf	efgtoa@e& (0+255),w,b
  9485  00046C  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  9486  00046E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  9487  000470  0A80               	xorlw	128
  9488  000472  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  9489  000474  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9490  000476  0A80               	xorlw	128
  9491  000478  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9492  00047A  A0D8               	btfss	status,0,c
  9493  00047C  EF42  F002         	goto	u10211
  9494  000480  EF44  F002         	goto	u10210
  9495  000484                     u10211:
  9496  000484  EF48  F002         	goto	l9237
  9497  000488                     u10210:
  9498  000488                     
  9499                           ; BSR set to: 0
  9500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9501  000488  0E66               	movlw	102
  9502  00048A  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9503                           
  9504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9505  00048C  EF4A  F002         	goto	l9239
  9506  000490                     l9237:
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9510  000490  0E65               	movlw	101
  9511  000492  6FA7               	movwf	efgtoa@nmode& (0+255),b
  9512  000494                     l9239:
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9516  000494  C0A5  F09D         	movff	efgtoa@p,efgtoa@m
  9517  000498  C0A6  F09E         	movff	efgtoa@p+1,efgtoa@m+1
  9518  00049C                     
  9519                           ; BSR set to: 0
  9520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9521  00049C  0E67               	movlw	103
  9522  00049E  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9523  0004A0  A4D8               	btfss	status,2,c
  9524  0004A2  EF55  F002         	goto	u10221
  9525  0004A6  EF57  F002         	goto	u10220
  9526  0004AA                     u10221:
  9527  0004AA  EF67  F002         	goto	l9247
  9528  0004AE                     u10220:
  9529  0004AE                     
  9530                           ; BSR set to: 0
  9531  0004AE  0E66               	movlw	102
  9532  0004B0  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9533  0004B2  A4D8               	btfss	status,2,c
  9534  0004B4  EF5E  F002         	goto	u10231
  9535  0004B8  EF60  F002         	goto	u10230
  9536  0004BC                     u10231:
  9537  0004BC  EF69  F002         	goto	l9249
  9538  0004C0                     u10230:
  9539  0004C0                     
  9540                           ; BSR set to: 0
  9541  0004C0  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9542  0004C2  EF67  F002         	goto	u10240
  9543  0004C6  EF65  F002         	goto	u10241
  9544  0004CA                     u10241:
  9545  0004CA  EF69  F002         	goto	l9249
  9546  0004CE                     u10240:
  9547  0004CE                     l9247:
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9551  0004CE  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  9552  0004D0  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  9553  0004D2                     l9249:
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9557  0004D2  0E66               	movlw	102
  9558  0004D4  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9559  0004D6  A4D8               	btfss	status,2,c
  9560  0004D8  EF70  F002         	goto	u10251
  9561  0004DC  EF72  F002         	goto	u10250
  9562  0004E0                     u10251:
  9563  0004E0  EF92  F002         	goto	l9259
  9564  0004E4                     u10250:
  9565  0004E4                     
  9566                           ; BSR set to: 0
  9567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9568  0004E4  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9569  0004E6  EF79  F002         	goto	u10260
  9570  0004EA  EF77  F002         	goto	u10261
  9571  0004EE                     u10261:
  9572  0004EE  EF85  F002         	goto	l9255
  9573  0004F2                     u10260:
  9574  0004F2                     
  9575                           ; BSR set to: 0
  9576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9577  0004F2  0E00               	movlw	0
  9578  0004F4  6FBD               	movwf	efgtoa@u& (0+255),b
  9579  0004F6  0E00               	movlw	0
  9580  0004F8  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  9581  0004FA  0E80               	movlw	128
  9582  0004FC  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  9583  0004FE  0E3F               	movlw	63
  9584  000500  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  9585                           
  9586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9587  000502  0E00               	movlw	0
  9588  000504  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  9589  000506  0E00               	movlw	0
  9590  000508  6FB9               	movwf	efgtoa@e& (0+255),b
  9591  00050A                     l9255:
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9595  00050A  0E67               	movlw	103
  9596  00050C  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9597  00050E  B4D8               	btfsc	status,2,c
  9598  000510  EF8C  F002         	goto	u10271
  9599  000514  EF8E  F002         	goto	u10270
  9600  000518                     u10271:
  9601  000518  EF92  F002         	goto	l9259
  9602  00051C                     u10270:
  9603  00051C                     
  9604                           ; BSR set to: 0
  9605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9606  00051C  51B9               	movf	efgtoa@e& (0+255),w,b
  9607  00051E  279D               	addwf	efgtoa@m& (0+255),f,b
  9608  000520  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  9609  000522  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9610  000524                     l9259:
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9614  000524  0E00               	movlw	0
  9615  000526  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  9616  000528  0E00               	movlw	0
  9617  00052A  6FB3               	movwf	efgtoa@i& (0+255),b
  9618  00052C                     
  9619                           ; BSR set to: 0
  9620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9621  00052C  C0B5  F0AB         	movff	efgtoa@g,efgtoa@h
  9622  000530  C0B6  F0AC         	movff	efgtoa@g+1,efgtoa@h+1
  9623  000534  C0B7  F0AD         	movff	efgtoa@g+2,efgtoa@h+2
  9624  000538  C0B8  F0AE         	movff	efgtoa@g+3,efgtoa@h+3
  9625  00053C                     
  9626                           ; BSR set to: 0
  9627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9628  00053C  C0BD  F089         	movff	efgtoa@u,efgtoa@ou
  9629  000540  C0BE  F08A         	movff	efgtoa@u+1,efgtoa@ou+1
  9630  000544  C0BF  F08B         	movff	efgtoa@u+2,efgtoa@ou+2
  9631  000548  C0C0  F08C         	movff	efgtoa@u+3,efgtoa@ou+3
  9632                           
  9633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9634  00054C  EF23  F003         	goto	l9273
  9635  000550                     l9265:
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9639  000550  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  9640  000554  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  9641  000558  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  9642  00055C  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  9643  000560  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  9644  000564  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  9645  000568  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  9646  00056C  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  9647  000570  ECD1  F013         	call	___fldiv	;wreg free
  9648  000574  C044  F050         	movff	?___fldiv,floorf@x
  9649  000578  C045  F051         	movff	?___fldiv+1,floorf@x+1
  9650  00057C  C046  F052         	movff	?___fldiv+2,floorf@x+2
  9651  000580  C047  F053         	movff	?___fldiv+3,floorf@x+3
  9652  000584  EC37  F018         	call	_floorf	;wreg free
  9653  000588  C050  F0AF         	movff	?_floorf,efgtoa@l
  9654  00058C  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  9655  000590  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  9656  000594  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  9657                           
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9659  000598  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  9660  00059C  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  9661  0005A0  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  9662  0005A4  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  9663  0005A8  ECF5  F01F         	call	___fltol	;wreg free
  9664  0005AC  C072  F0A1         	movff	?___fltol,efgtoa@d
  9665  0005B0  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  9666  0005B4                     
  9667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9668  0005B4  C0AB  F044         	movff	efgtoa@h,___flsub@b
  9669  0005B8  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
  9670  0005BC  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
  9671  0005C0  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
  9672  0005C4  C0BD  F01F         	movff	efgtoa@u,___flmul@a
  9673  0005C8  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
  9674  0005CC  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
  9675  0005D0  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
  9676  0005D4  C0AF  F01B         	movff	efgtoa@l,___flmul@b
  9677  0005D8  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
  9678  0005DC  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
  9679  0005E0  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
  9680  0005E4  ECE0  F00D         	call	___flmul	;wreg free
  9681  0005E8  C01B  F048         	movff	?___flmul,___flsub@a
  9682  0005EC  C01C  F049         	movff	?___flmul+1,___flsub@a+1
  9683  0005F0  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
  9684  0005F4  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
  9685  0005F8  ECBB  F029         	call	___flsub	;wreg free
  9686  0005FC  C044  F0AB         	movff	?___flsub,efgtoa@h
  9687  000600  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
  9688  000604  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
  9689  000608  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
  9690  00060C                     
  9691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9692  00060C  C0BD  F044         	movff	efgtoa@u,___fldiv@b
  9693  000610  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
  9694  000614  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
  9695  000618  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
  9696  00061C  0E00               	movlw	0
  9697  00061E  6E48               	movwf	___fldiv@a^0,c
  9698  000620  0E00               	movlw	0
  9699  000622  6E49               	movwf	(___fldiv@a+1)^0,c
  9700  000624  0E20               	movlw	32
  9701  000626  6E4A               	movwf	(___fldiv@a+2)^0,c
  9702  000628  0E41               	movlw	65
  9703  00062A  6E4B               	movwf	(___fldiv@a+3)^0,c
  9704  00062C  ECD1  F013         	call	___fldiv	;wreg free
  9705  000630  C044  F0BD         	movff	?___fldiv,efgtoa@u
  9706  000634  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
  9707  000638  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
  9708  00063C  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
  9709  000640                     
  9710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9711  000640  0100               	movlb	0	; () banked
  9712  000642  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  9713  000644  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  9714  000646                     l9273:
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9718  000646  519D               	movf	efgtoa@m& (0+255),w,b
  9719  000648  5DB3               	subwf	efgtoa@i& (0+255),w,b
  9720  00064A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  9721  00064C  0A80               	xorlw	128
  9722  00064E  6F84               	movwf	??_efgtoa& (0+255),b
  9723  000650  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  9724  000652  0A80               	xorlw	128
  9725  000654  5984               	subwfb	??_efgtoa& (0+255),w,b
  9726  000656  A0D8               	btfss	status,0,c
  9727  000658  EF30  F003         	goto	u10281
  9728  00065C  EF32  F003         	goto	u10280
  9729  000660                     u10281:
  9730  000660  EFA8  F002         	goto	l9265
  9731  000664                     u10280:
  9732  000664                     
  9733                           ; BSR set to: 0
  9734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9735  000664  C0BD  F01B         	movff	efgtoa@u,___flmul@b
  9736  000668  C0BE  F01C         	movff	efgtoa@u+1,___flmul@b+1
  9737  00066C  C0BF  F01D         	movff	efgtoa@u+2,___flmul@b+2
  9738  000670  C0C0  F01E         	movff	efgtoa@u+3,___flmul@b+3
  9739  000674  0E00               	movlw	0
  9740  000676  6E1F               	movwf	___flmul@a^0,c
  9741  000678  0E00               	movlw	0
  9742  00067A  6E20               	movwf	(___flmul@a+1)^0,c
  9743  00067C  0EA0               	movlw	160
  9744  00067E  6E21               	movwf	(___flmul@a+2)^0,c
  9745  000680  0E40               	movlw	64
  9746  000682  6E22               	movwf	(___flmul@a+3)^0,c
  9747  000684  ECE0  F00D         	call	___flmul	;wreg free
  9748  000688  C01B  F0AF         	movff	?___flmul,efgtoa@l
  9749  00068C  C01C  F0B0         	movff	?___flmul+1,efgtoa@l+1
  9750  000690  C01D  F0B1         	movff	?___flmul+2,efgtoa@l+2
  9751  000694  C01E  F0B2         	movff	?___flmul+3,efgtoa@l+3
  9752  000698                     
  9753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9754  000698  C0AB  F034         	movff	efgtoa@h,___flge@ff1
  9755  00069C  C0AC  F035         	movff	efgtoa@h+1,___flge@ff1+1
  9756  0006A0  C0AD  F036         	movff	efgtoa@h+2,___flge@ff1+2
  9757  0006A4  C0AE  F037         	movff	efgtoa@h+3,___flge@ff1+3
  9758  0006A8  C0AF  F038         	movff	efgtoa@l,___flge@ff2
  9759  0006AC  C0B0  F039         	movff	efgtoa@l+1,___flge@ff2+1
  9760  0006B0  C0B1  F03A         	movff	efgtoa@l+2,___flge@ff2+2
  9761  0006B4  C0B2  F03B         	movff	efgtoa@l+3,___flge@ff2+3
  9762  0006B8  ECFC  F020         	call	___flge	;wreg free
  9763  0006BC  B0D8               	btfsc	status,0,c
  9764  0006BE  EF63  F003         	goto	u10291
  9765  0006C2  EF65  F003         	goto	u10290
  9766  0006C6                     u10291:
  9767  0006C6  EF70  F003         	goto	l9281
  9768  0006CA                     u10290:
  9769  0006CA                     
  9770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9771  0006CA  0E00               	movlw	0
  9772  0006CC  0100               	movlb	0	; () banked
  9773  0006CE  6FAF               	movwf	efgtoa@l& (0+255),b
  9774  0006D0  0E00               	movlw	0
  9775  0006D2  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  9776  0006D4  0E00               	movlw	0
  9777  0006D6  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  9778  0006D8  0E00               	movlw	0
  9779  0006DA  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  9780                           
  9781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9782  0006DC  EF99  F003         	goto	l9287
  9783  0006E0                     l9281:
  9784                           
  9785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9786  0006E0  C0AB  F006         	movff	efgtoa@h,___fleq@ff1
  9787  0006E4  C0AC  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  9788  0006E8  C0AD  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  9789  0006EC  C0AE  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  9790  0006F0  C0AF  F00A         	movff	efgtoa@l,___fleq@ff2
  9791  0006F4  C0B0  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  9792  0006F8  C0B1  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  9793  0006FC  C0B2  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  9794  000700  EC9F  F024         	call	___fleq	;wreg free
  9795  000704  A0D8               	btfss	status,0,c
  9796  000706  EF87  F003         	goto	u10301
  9797  00070A  EF89  F003         	goto	u10300
  9798  00070E                     u10301:
  9799  00070E  EF99  F003         	goto	l9287
  9800  000712                     u10300:
  9801  000712  0100               	movlb	0	; () banked
  9802  000714  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  9803  000716  EF8F  F003         	goto	u10311
  9804  00071A  EF91  F003         	goto	u10310
  9805  00071E                     u10311:
  9806  00071E  EF99  F003         	goto	l9287
  9807  000722                     u10310:
  9808  000722                     
  9809                           ; BSR set to: 0
  9810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9811  000722  0E00               	movlw	0
  9812  000724  6FAF               	movwf	efgtoa@l& (0+255),b
  9813  000726  0E00               	movlw	0
  9814  000728  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  9815  00072A  0E00               	movlw	0
  9816  00072C  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  9817  00072E  0E00               	movlw	0
  9818  000730  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  9819  000732                     l9287:
  9820                           
  9821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9822  000732  C0B5  F034         	movff	efgtoa@g,___fladd@b
  9823  000736  C0B6  F035         	movff	efgtoa@g+1,___fladd@b+1
  9824  00073A  C0B7  F036         	movff	efgtoa@g+2,___fladd@b+2
  9825  00073E  C0B8  F037         	movff	efgtoa@g+3,___fladd@b+3
  9826  000742  C0AF  F038         	movff	efgtoa@l,___fladd@a
  9827  000746  C0B0  F039         	movff	efgtoa@l+1,___fladd@a+1
  9828  00074A  C0B1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  9829  00074E  C0B2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  9830  000752  EC80  F00B         	call	___fladd	;wreg free
  9831  000756  C034  F0AB         	movff	?___fladd,efgtoa@h
  9832  00075A  C035  F0AC         	movff	?___fladd+1,efgtoa@h+1
  9833  00075E  C036  F0AD         	movff	?___fladd+2,efgtoa@h+2
  9834  000762  C037  F0AE         	movff	?___fladd+3,efgtoa@h+3
  9835  000766                     
  9836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9837  000766  C089  F0BD         	movff	efgtoa@ou,efgtoa@u
  9838  00076A  C08A  F0BE         	movff	efgtoa@ou+1,efgtoa@u+1
  9839  00076E  C08B  F0BF         	movff	efgtoa@ou+2,efgtoa@u+2
  9840  000772  C08C  F0C0         	movff	efgtoa@ou+3,efgtoa@u+3
  9841  000776                     
  9842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9843  000776  0E65               	movlw	101
  9844  000778  0100               	movlb	0	; () banked
  9845  00077A  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  9846  00077C  B4D8               	btfsc	status,2,c
  9847  00077E  EFC3  F003         	goto	u10321
  9848  000782  EFC5  F003         	goto	u10320
  9849  000786                     u10321:
  9850  000786  EFCB  F003         	goto	l9295
  9851  00078A                     u10320:
  9852  00078A                     
  9853                           ; BSR set to: 0
  9854  00078A  C0B9  F09F         	movff	efgtoa@e,efgtoa@ne
  9855  00078E  C0BA  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  9856  000792  EFCF  F003         	goto	l894
  9857  000796                     l9295:
  9858                           
  9859                           ; BSR set to: 0
  9860  000796  0E00               	movlw	0
  9861  000798  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  9862  00079A  0E00               	movlw	0
  9863  00079C  6F9F               	movwf	efgtoa@ne& (0+255),b
  9864  00079E                     l894:
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9868  00079E  0E00               	movlw	0
  9869  0007A0  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  9870  0007A2  0E00               	movlw	0
  9871  0007A4  6F9B               	movwf	efgtoa@pp& (0+255),b
  9872                           
  9873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9874  0007A6  0E00               	movlw	0
  9875  0007A8  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  9876  0007AA  0E00               	movlw	0
  9877  0007AC  6F99               	movwf	efgtoa@t& (0+255),b
  9878                           
  9879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9880  0007AE  0E00               	movlw	0
  9881  0007B0  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  9882  0007B2  0E00               	movlw	0
  9883  0007B4  6FB3               	movwf	efgtoa@i& (0+255),b
  9884                           
  9885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9886  0007B6  EFCB  F004         	goto	l9345
  9887  0007BA                     l9297:
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9891  0007BA  C0AB  F044         	movff	efgtoa@h,___fldiv@b
  9892  0007BE  C0AC  F045         	movff	efgtoa@h+1,___fldiv@b+1
  9893  0007C2  C0AD  F046         	movff	efgtoa@h+2,___fldiv@b+2
  9894  0007C6  C0AE  F047         	movff	efgtoa@h+3,___fldiv@b+3
  9895  0007CA  C0BD  F048         	movff	efgtoa@u,___fldiv@a
  9896  0007CE  C0BE  F049         	movff	efgtoa@u+1,___fldiv@a+1
  9897  0007D2  C0BF  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  9898  0007D6  C0C0  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  9899  0007DA  ECD1  F013         	call	___fldiv	;wreg free
  9900  0007DE  C044  F050         	movff	?___fldiv,floorf@x
  9901  0007E2  C045  F051         	movff	?___fldiv+1,floorf@x+1
  9902  0007E6  C046  F052         	movff	?___fldiv+2,floorf@x+2
  9903  0007EA  C047  F053         	movff	?___fldiv+3,floorf@x+3
  9904  0007EE  EC37  F018         	call	_floorf	;wreg free
  9905  0007F2  C050  F0AF         	movff	?_floorf,efgtoa@l
  9906  0007F6  C051  F0B0         	movff	?_floorf+1,efgtoa@l+1
  9907  0007FA  C052  F0B1         	movff	?_floorf+2,efgtoa@l+2
  9908  0007FE  C053  F0B2         	movff	?_floorf+3,efgtoa@l+3
  9909                           
  9910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9911  000802  C0AF  F072         	movff	efgtoa@l,___fltol@f1
  9912  000806  C0B0  F073         	movff	efgtoa@l+1,___fltol@f1+1
  9913  00080A  C0B1  F074         	movff	efgtoa@l+2,___fltol@f1+2
  9914  00080E  C0B2  F075         	movff	efgtoa@l+3,___fltol@f1+3
  9915  000812  ECF5  F01F         	call	___fltol	;wreg free
  9916  000816  C072  F0A1         	movff	?___fltol,efgtoa@d
  9917  00081A  C073  F0A2         	movff	?___fltol+1,efgtoa@d+1
  9918  00081E                     
  9919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9920  00081E  B855               	btfsc	_flags^0,4,c
  9921  000820  EF14  F004         	goto	u10331
  9922  000824  EF16  F004         	goto	u10330
  9923  000828                     u10331:
  9924  000828  EF34  F004         	goto	l9309
  9925  00082C                     u10330:
  9926  00082C  0100               	movlb	0	; () banked
  9927  00082E  51A1               	movf	efgtoa@d& (0+255),w,b
  9928  000830  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9929  000832  A4D8               	btfss	status,2,c
  9930  000834  EF1E  F004         	goto	u10341
  9931  000838  EF20  F004         	goto	u10340
  9932  00083C                     u10341:
  9933  00083C  EF34  F004         	goto	l9309
  9934  000840                     u10340:
  9935  000840                     
  9936                           ; BSR set to: 0
  9937  000840  0E67               	movlw	103
  9938  000842  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  9939  000844  A4D8               	btfss	status,2,c
  9940  000846  EF27  F004         	goto	u10351
  9941  00084A  EF29  F004         	goto	u10350
  9942  00084E                     u10351:
  9943  00084E  EF34  F004         	goto	l9309
  9944  000852                     u10350:
  9945  000852                     
  9946                           ; BSR set to: 0
  9947  000852  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9948  000854  EF30  F004         	goto	u10360
  9949  000858  EF2E  F004         	goto	u10361
  9950  00085C                     u10361:
  9951  00085C  EF34  F004         	goto	l9309
  9952  000860                     u10360:
  9953  000860                     
  9954                           ; BSR set to: 0
  9955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9956  000860  4B99               	infsnz	efgtoa@t& (0+255),f,b
  9957  000862  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  9958                           
  9959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9960  000864  EF7F  F004         	goto	l9337
  9961  000868                     l9309:
  9962                           
  9963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9964  000868  0100               	movlb	0	; () banked
  9965  00086A  519B               	movf	efgtoa@pp& (0+255),w,b
  9966  00086C  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9967  00086E  A4D8               	btfss	status,2,c
  9968  000870  EF3C  F004         	goto	u10371
  9969  000874  EF3E  F004         	goto	u10370
  9970  000878                     u10371:
  9971  000878  EF68  F004         	goto	l9329
  9972  00087C                     u10370:
  9973  00087C                     
  9974                           ; BSR set to: 0
  9975  00087C  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9976  00087E  EF45  F004         	goto	u10380
  9977  000882  EF43  F004         	goto	u10381
  9978  000886                     u10381:
  9979  000886  EF68  F004         	goto	l9329
  9980  00088A                     u10380:
  9981  00088A                     
  9982                           ; BSR set to: 0
  9983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9984  00088A  0E41               	movlw	low _dbuf
  9985  00088C  25BB               	addwf	efgtoa@n& (0+255),w,b
  9986  00088E  6ED9               	movwf	fsr2l,c
  9987  000890  0E01               	movlw	high _dbuf
  9988  000892  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9989  000894  6EDA               	movwf	fsr2h,c
  9990  000896  0E2E               	movlw	46
  9991  000898  6EDF               	movwf	indf2,c
  9992  00089A                     
  9993                           ; BSR set to: 0
  9994  00089A  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  9995  00089C  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  9996  00089E                     
  9997                           ; BSR set to: 0
  9998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9999  00089E  07A8               	decf	efgtoa@w& (0+255),f,b
 10000  0008A0  A0D8               	btfss	status,0,c
 10001  0008A2  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10002  0008A4                     
 10003                           ; BSR set to: 0
 10004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10005  0008A4  0E00               	movlw	0
 10006  0008A6  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
 10007  0008A8  0E01               	movlw	1
 10008  0008AA  6F9B               	movwf	efgtoa@pp& (0+255),b
 10009  0008AC  EF68  F004         	goto	l9329
 10010  0008B0                     l9321:
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10014  0008B0  0E41               	movlw	low _dbuf
 10015  0008B2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10016  0008B4  6ED9               	movwf	fsr2l,c
 10017  0008B6  0E01               	movlw	high _dbuf
 10018  0008B8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10019  0008BA  6EDA               	movwf	fsr2h,c
 10020  0008BC  0E30               	movlw	48
 10021  0008BE  6EDF               	movwf	indf2,c
 10022  0008C0                     
 10023                           ; BSR set to: 0
 10024  0008C0  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10025  0008C2  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10026  0008C4                     
 10027                           ; BSR set to: 0
 10028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10029  0008C4  07A8               	decf	efgtoa@w& (0+255),f,b
 10030  0008C6  A0D8               	btfss	status,0,c
 10031  0008C8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10032  0008CA                     
 10033                           ; BSR set to: 0
 10034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10035  0008CA  0799               	decf	efgtoa@t& (0+255),f,b
 10036  0008CC  A0D8               	btfss	status,0,c
 10037  0008CE  079A               	decf	(efgtoa@t+1)& (0+255),f,b
 10038  0008D0                     l9329:
 10039                           
 10040                           ; BSR set to: 0
 10041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10042  0008D0  5199               	movf	efgtoa@t& (0+255),w,b
 10043  0008D2  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10044  0008D4  A4D8               	btfss	status,2,c
 10045  0008D6  EF6F  F004         	goto	u10391
 10046  0008DA  EF71  F004         	goto	u10390
 10047  0008DE                     u10391:
 10048  0008DE  EF58  F004         	goto	l9321
 10049  0008E2                     u10390:
 10050  0008E2                     
 10051                           ; BSR set to: 0
 10052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10053  0008E2  0E41               	movlw	low _dbuf
 10054  0008E4  25BB               	addwf	efgtoa@n& (0+255),w,b
 10055  0008E6  6ED9               	movwf	fsr2l,c
 10056  0008E8  0E01               	movlw	high _dbuf
 10057  0008EA  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10058  0008EC  6EDA               	movwf	fsr2h,c
 10059  0008EE  51A1               	movf	efgtoa@d& (0+255),w,b
 10060  0008F0  0F30               	addlw	48
 10061  0008F2  6EDF               	movwf	indf2,c
 10062  0008F4                     
 10063                           ; BSR set to: 0
 10064  0008F4  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10065  0008F6  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10066  0008F8                     
 10067                           ; BSR set to: 0
 10068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 10069  0008F8  07A8               	decf	efgtoa@w& (0+255),f,b
 10070  0008FA  A0D8               	btfss	status,0,c
 10071  0008FC  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10072  0008FE                     l9337:
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10076  0008FE  C0AB  F044         	movff	efgtoa@h,___flsub@b
 10077  000902  C0AC  F045         	movff	efgtoa@h+1,___flsub@b+1
 10078  000906  C0AD  F046         	movff	efgtoa@h+2,___flsub@b+2
 10079  00090A  C0AE  F047         	movff	efgtoa@h+3,___flsub@b+3
 10080  00090E  C0BD  F01F         	movff	efgtoa@u,___flmul@a
 10081  000912  C0BE  F020         	movff	efgtoa@u+1,___flmul@a+1
 10082  000916  C0BF  F021         	movff	efgtoa@u+2,___flmul@a+2
 10083  00091A  C0C0  F022         	movff	efgtoa@u+3,___flmul@a+3
 10084  00091E  C0AF  F01B         	movff	efgtoa@l,___flmul@b
 10085  000922  C0B0  F01C         	movff	efgtoa@l+1,___flmul@b+1
 10086  000926  C0B1  F01D         	movff	efgtoa@l+2,___flmul@b+2
 10087  00092A  C0B2  F01E         	movff	efgtoa@l+3,___flmul@b+3
 10088  00092E  ECE0  F00D         	call	___flmul	;wreg free
 10089  000932  C01B  F048         	movff	?___flmul,___flsub@a
 10090  000936  C01C  F049         	movff	?___flmul+1,___flsub@a+1
 10091  00093A  C01D  F04A         	movff	?___flmul+2,___flsub@a+2
 10092  00093E  C01E  F04B         	movff	?___flmul+3,___flsub@a+3
 10093  000942  ECBB  F029         	call	___flsub	;wreg free
 10094  000946  C044  F0AB         	movff	?___flsub,efgtoa@h
 10095  00094A  C045  F0AC         	movff	?___flsub+1,efgtoa@h+1
 10096  00094E  C046  F0AD         	movff	?___flsub+2,efgtoa@h+2
 10097  000952  C047  F0AE         	movff	?___flsub+3,efgtoa@h+3
 10098  000956                     
 10099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10100  000956  C0BD  F044         	movff	efgtoa@u,___fldiv@b
 10101  00095A  C0BE  F045         	movff	efgtoa@u+1,___fldiv@b+1
 10102  00095E  C0BF  F046         	movff	efgtoa@u+2,___fldiv@b+2
 10103  000962  C0C0  F047         	movff	efgtoa@u+3,___fldiv@b+3
 10104  000966  0E00               	movlw	0
 10105  000968  6E48               	movwf	___fldiv@a^0,c
 10106  00096A  0E00               	movlw	0
 10107  00096C  6E49               	movwf	(___fldiv@a+1)^0,c
 10108  00096E  0E20               	movlw	32
 10109  000970  6E4A               	movwf	(___fldiv@a+2)^0,c
 10110  000972  0E41               	movlw	65
 10111  000974  6E4B               	movwf	(___fldiv@a+3)^0,c
 10112  000976  ECD1  F013         	call	___fldiv	;wreg free
 10113  00097A  C044  F0BD         	movff	?___fldiv,efgtoa@u
 10114  00097E  C045  F0BE         	movff	?___fldiv+1,efgtoa@u+1
 10115  000982  C046  F0BF         	movff	?___fldiv+2,efgtoa@u+2
 10116  000986  C047  F0C0         	movff	?___fldiv+3,efgtoa@u+3
 10117  00098A                     
 10118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10119  00098A  0100               	movlb	0	; () banked
 10120  00098C  079F               	decf	efgtoa@ne& (0+255),f,b
 10121  00098E  A0D8               	btfss	status,0,c
 10122  000990  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
 10123  000992                     
 10124                           ; BSR set to: 0
 10125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10126  000992  4BB3               	infsnz	efgtoa@i& (0+255),f,b
 10127  000994  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
 10128  000996                     l9345:
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10132  000996  519D               	movf	efgtoa@m& (0+255),w,b
 10133  000998  5DB3               	subwf	efgtoa@i& (0+255),w,b
 10134  00099A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
 10135  00099C  0A80               	xorlw	128
 10136  00099E  6F84               	movwf	??_efgtoa& (0+255),b
 10137  0009A0  519E               	movf	(efgtoa@m+1)& (0+255),w,b
 10138  0009A2  0A80               	xorlw	128
 10139  0009A4  5984               	subwfb	??_efgtoa& (0+255),w,b
 10140  0009A6  B0D8               	btfsc	status,0,c
 10141  0009A8  EFD8  F004         	goto	u10401
 10142  0009AC  EFDA  F004         	goto	u10400
 10143  0009B0                     u10401:
 10144  0009B0  EFE8  F004         	goto	l9349
 10145  0009B4                     u10400:
 10146  0009B4                     
 10147                           ; BSR set to: 0
 10148  0009B4  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10149  0009B6  EFE6  F004         	goto	u10411
 10150  0009BA  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
 10151  0009BC  E109               	bnz	u10410
 10152  0009BE  0E4B               	movlw	75
 10153  0009C0  5DBB               	subwf	efgtoa@n& (0+255),w,b
 10154  0009C2  A0D8               	btfss	status,0,c
 10155  0009C4  EFE6  F004         	goto	u10411
 10156  0009C8  EFE8  F004         	goto	u10410
 10157  0009CC                     u10411:
 10158  0009CC  EFDD  F003         	goto	l9297
 10159  0009D0                     u10410:
 10160  0009D0                     l9349:
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10164  0009D0  519B               	movf	efgtoa@pp& (0+255),w,b
 10165  0009D2  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10166  0009D4  A4D8               	btfss	status,2,c
 10167  0009D6  EFEF  F004         	goto	u10421
 10168  0009DA  EFF1  F004         	goto	u10420
 10169  0009DE                     u10421:
 10170  0009DE  EF02  F005         	goto	l9357
 10171  0009E2                     u10420:
 10172  0009E2                     
 10173                           ; BSR set to: 0
 10174  0009E2  A855               	btfss	_flags^0,4,c
 10175  0009E4  EFF6  F004         	goto	u10431
 10176  0009E8  EFF8  F004         	goto	u10430
 10177  0009EC                     u10431:
 10178  0009EC  EF02  F005         	goto	l9357
 10179  0009F0                     u10430:
 10180  0009F0                     
 10181                           ; BSR set to: 0
 10182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10183  0009F0  0E41               	movlw	low _dbuf
 10184  0009F2  25BB               	addwf	efgtoa@n& (0+255),w,b
 10185  0009F4  6ED9               	movwf	fsr2l,c
 10186  0009F6  0E01               	movlw	high _dbuf
 10187  0009F8  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10188  0009FA  6EDA               	movwf	fsr2h,c
 10189  0009FC  0E2E               	movlw	46
 10190  0009FE  6EDF               	movwf	indf2,c
 10191  000A00                     
 10192                           ; BSR set to: 0
 10193  000A00  4BBB               	infsnz	efgtoa@n& (0+255),f,b
 10194  000A02  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
 10195  000A04                     l9357:
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10199  000A04  0E41               	movlw	low _dbuf
 10200  000A06  25BB               	addwf	efgtoa@n& (0+255),w,b
 10201  000A08  6ED9               	movwf	fsr2l,c
 10202  000A0A  0E01               	movlw	high _dbuf
 10203  000A0C  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10204  000A0E  6EDA               	movwf	fsr2h,c
 10205  000A10  0E00               	movlw	0
 10206  000A12  6EDF               	movwf	indf2,c
 10207  000A14                     
 10208                           ; BSR set to: 0
 10209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10210  000A14  0E65               	movlw	101
 10211  000A16  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
 10212  000A18  A4D8               	btfss	status,2,c
 10213  000A1A  EF11  F005         	goto	u10441
 10214  000A1E  EF13  F005         	goto	u10440
 10215  000A22                     u10441:
 10216  000A22  EFBC  F000         	goto	l9169
 10217  000A26                     u10440:
 10218  000A26                     
 10219                           ; BSR set to: 0
 10220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10221  000A26  0E00               	movlw	0
 10222  000A28  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
 10223  000A2A  0E4F               	movlw	79
 10224  000A2C  6FB3               	movwf	efgtoa@i& (0+255),b
 10225  000A2E                     
 10226                           ; BSR set to: 0
 10227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10228  000A2E  0E41               	movlw	low _dbuf
 10229  000A30  25B3               	addwf	efgtoa@i& (0+255),w,b
 10230  000A32  6ED9               	movwf	fsr2l,c
 10231  000A34  0E01               	movlw	high _dbuf
 10232  000A36  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10233  000A38  6EDA               	movwf	fsr2h,c
 10234  000A3A  0E00               	movlw	0
 10235  000A3C  6EDF               	movwf	indf2,c
 10236  000A3E                     
 10237                           ; BSR set to: 0
 10238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10239  000A3E  0E00               	movlw	0
 10240  000A40  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10241  000A42  0E00               	movlw	0
 10242  000A44  6FA3               	movwf	efgtoa@sign& (0+255),b
 10243  000A46                     
 10244                           ; BSR set to: 0
 10245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10246  000A46  BFBA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10247  000A48  EF2A  F005         	goto	u10450
 10248  000A4C  EF28  F005         	goto	u10451
 10249  000A50                     u10451:
 10250  000A50  EF32  F005         	goto	l9373
 10251  000A54                     u10450:
 10252  000A54                     
 10253                           ; BSR set to: 0
 10254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10255  000A54  0E00               	movlw	0
 10256  000A56  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
 10257  000A58  0E01               	movlw	1
 10258  000A5A  6FA3               	movwf	efgtoa@sign& (0+255),b
 10259  000A5C                     
 10260                           ; BSR set to: 0
 10261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10262  000A5C  6DB9               	negf	efgtoa@e& (0+255),b
 10263  000A5E  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
 10264  000A60  B0D8               	btfsc	status,0,c
 10265  000A62  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
 10266  000A64                     l9373:
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10270  000A64  0E00               	movlw	0
 10271  000A66  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
 10272  000A68  0E02               	movlw	2
 10273  000A6A  6FA5               	movwf	efgtoa@p& (0+255),b
 10274                           
 10275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10276  000A6C  EF63  F005         	goto	l9385
 10277  000A70                     l9375:
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10281  000A70  07B3               	decf	efgtoa@i& (0+255),f,b
 10282  000A72  A0D8               	btfss	status,0,c
 10283  000A74  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10284  000A76                     
 10285                           ; BSR set to: 0
 10286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10287  000A76  0E41               	movlw	low _dbuf
 10288  000A78  25B3               	addwf	efgtoa@i& (0+255),w,b
 10289  000A7A  6ED9               	movwf	fsr2l,c
 10290  000A7C  0E01               	movlw	high _dbuf
 10291  000A7E  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10292  000A80  6EDA               	movwf	fsr2h,c
 10293  000A82  C0B9  F006         	movff	efgtoa@e,___awmod@dividend
 10294  000A86  C0BA  F007         	movff	efgtoa@e+1,___awmod@dividend+1
 10295  000A8A  0E00               	movlw	0
 10296  000A8C  6E09               	movwf	(___awmod@divisor+1)^0,c
 10297  000A8E  0E0A               	movlw	10
 10298  000A90  6E08               	movwf	___awmod@divisor^0,c
 10299  000A92  ECF1  F023         	call	___awmod	;wreg free
 10300  000A96  5006               	movf	?___awmod^0,w,c
 10301  000A98  0F30               	addlw	48
 10302  000A9A  6EDF               	movwf	indf2,c
 10303  000A9C                     
 10304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10305  000A9C  C0B9  F006         	movff	efgtoa@e,___awdiv@dividend
 10306  000AA0  C0BA  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
 10307  000AA4  0E00               	movlw	0
 10308  000AA6  6E09               	movwf	(___awdiv@divisor+1)^0,c
 10309  000AA8  0E0A               	movlw	10
 10310  000AAA  6E08               	movwf	___awdiv@divisor^0,c
 10311  000AAC  ECCD  F022         	call	___awdiv	;wreg free
 10312  000AB0  C006  F0B9         	movff	?___awdiv,efgtoa@e
 10313  000AB4  C007  F0BA         	movff	?___awdiv+1,efgtoa@e+1
 10314  000AB8                     
 10315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10316  000AB8  0100               	movlb	0	; () banked
 10317  000ABA  07A5               	decf	efgtoa@p& (0+255),f,b
 10318  000ABC  A0D8               	btfss	status,0,c
 10319  000ABE  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
 10320  000AC0                     
 10321                           ; BSR set to: 0
 10322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10323  000AC0  07A8               	decf	efgtoa@w& (0+255),f,b
 10324  000AC2  A0D8               	btfss	status,0,c
 10325  000AC4  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10326  000AC6                     l9385:
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10330  000AC6  51B9               	movf	efgtoa@e& (0+255),w,b
 10331  000AC8  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10332  000ACA  A4D8               	btfss	status,2,c
 10333  000ACC  EF6A  F005         	goto	u10461
 10334  000AD0  EF6C  F005         	goto	u10460
 10335  000AD4                     u10461:
 10336  000AD4  EF38  F005         	goto	l9375
 10337  000AD8                     u10460:
 10338  000AD8                     
 10339                           ; BSR set to: 0
 10340  000AD8  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10341  000ADA  EF79  F005         	goto	u10470
 10342  000ADE  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
 10343  000AE0  E106               	bnz	u10471
 10344  000AE2  05A5               	decf	efgtoa@p& (0+255),w,b
 10345  000AE4  B0D8               	btfsc	status,0,c
 10346  000AE6  EF77  F005         	goto	u10471
 10347  000AEA  EF79  F005         	goto	u10470
 10348  000AEE                     u10471:
 10349  000AEE  EF38  F005         	goto	l9375
 10350  000AF2                     u10470:
 10351  000AF2                     
 10352                           ; BSR set to: 0
 10353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10354  000AF2  07B3               	decf	efgtoa@i& (0+255),f,b
 10355  000AF4  A0D8               	btfss	status,0,c
 10356  000AF6  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10357  000AF8                     
 10358                           ; BSR set to: 0
 10359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10360  000AF8  51A3               	movf	efgtoa@sign& (0+255),w,b
 10361  000AFA  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10362  000AFC  A4D8               	btfss	status,2,c
 10363  000AFE  EF83  F005         	goto	u10481
 10364  000B02  EF85  F005         	goto	u10480
 10365  000B06                     u10481:
 10366  000B06  EF8B  F005         	goto	l9395
 10367  000B0A                     u10480:
 10368  000B0A                     
 10369                           ; BSR set to: 0
 10370  000B0A  0E00               	movlw	0
 10371  000B0C  6F94               	movwf	(_efgtoa$948+1)& (0+255),b
 10372  000B0E  0E2B               	movlw	43
 10373  000B10  6F93               	movwf	_efgtoa$948& (0+255),b
 10374  000B12  EF8F  F005         	goto	l9397
 10375  000B16                     l9395:
 10376                           
 10377                           ; BSR set to: 0
 10378  000B16  0E00               	movlw	0
 10379  000B18  6F94               	movwf	(_efgtoa$948+1)& (0+255),b
 10380  000B1A  0E2D               	movlw	45
 10381  000B1C  6F93               	movwf	_efgtoa$948& (0+255),b
 10382  000B1E                     l9397:
 10383                           
 10384                           ; BSR set to: 0
 10385  000B1E  0E41               	movlw	low _dbuf
 10386  000B20  25B3               	addwf	efgtoa@i& (0+255),w,b
 10387  000B22  6ED9               	movwf	fsr2l,c
 10388  000B24  0E01               	movlw	high _dbuf
 10389  000B26  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10390  000B28  6EDA               	movwf	fsr2h,c
 10391  000B2A  C093  FFDF         	movff	_efgtoa$948,indf2
 10392  000B2E                     
 10393                           ; BSR set to: 0
 10394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10395  000B2E  07A8               	decf	efgtoa@w& (0+255),f,b
 10396  000B30  A0D8               	btfss	status,0,c
 10397  000B32  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10398  000B34                     
 10399                           ; BSR set to: 0
 10400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10401  000B34  07B3               	decf	efgtoa@i& (0+255),f,b
 10402  000B36  A0D8               	btfss	status,0,c
 10403  000B38  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
 10404  000B3A                     
 10405                           ; BSR set to: 0
 10406  000B3A  0EBF               	movlw	191
 10407  000B3C  6F84               	movwf	??_efgtoa& (0+255),b
 10408  000B3E  0EFF               	movlw	255
 10409  000B40  6F85               	movwf	(??_efgtoa+1)& (0+255),b
 10410  000B42  5183               	movf	efgtoa@c& (0+255),w,b
 10411  000B44  6F86               	movwf	(??_efgtoa+2)& (0+255),b
 10412  000B46  6B87               	clrf	(??_efgtoa+3)& (0+255),b
 10413  000B48  5184               	movf	??_efgtoa& (0+255),w,b
 10414  000B4A  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
 10415  000B4C  5185               	movf	(??_efgtoa+1)& (0+255),w,b
 10416  000B4E  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10417  000B50  5187               	movf	(??_efgtoa+3)& (0+255),w,b
 10418  000B52  E10A               	bnz	u10490
 10419  000B54  0E1A               	movlw	26
 10420  000B56  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
 10421  000B58  A0D8               	btfss	status,0,c
 10422  000B5A  EFB1  F005         	goto	u10491
 10423  000B5E  EFB4  F005         	goto	u10490
 10424  000B62                     u10491:
 10425  000B62  0E01               	movlw	1
 10426  000B64  EFB5  F005         	goto	u10500
 10427  000B68                     u10490:
 10428  000B68  0E00               	movlw	0
 10429  000B6A                     u10500:
 10430  000B6A  6F97               	movwf	_efgtoa$950& (0+255),b
 10431  000B6C  6B98               	clrf	(_efgtoa$950+1)& (0+255),b
 10432  000B6E                     
 10433                           ; BSR set to: 0
 10434  000B6E  5197               	movf	_efgtoa$950& (0+255),w,b
 10435  000B70  1198               	iorwf	(_efgtoa$950+1)& (0+255),w,b
 10436  000B72  A4D8               	btfss	status,2,c
 10437  000B74  EFBE  F005         	goto	u10511
 10438  000B78  EFC0  F005         	goto	u10510
 10439  000B7C                     u10511:
 10440  000B7C  EFC6  F005         	goto	l9411
 10441  000B80                     u10510:
 10442  000B80                     
 10443                           ; BSR set to: 0
 10444  000B80  0E00               	movlw	0
 10445  000B82  6F96               	movwf	(_efgtoa$949+1)& (0+255),b
 10446  000B84  0E65               	movlw	101
 10447  000B86  6F95               	movwf	_efgtoa$949& (0+255),b
 10448  000B88  EFCA  F005         	goto	l9413
 10449  000B8C                     l9411:
 10450                           
 10451                           ; BSR set to: 0
 10452  000B8C  0E00               	movlw	0
 10453  000B8E  6F96               	movwf	(_efgtoa$949+1)& (0+255),b
 10454  000B90  0E45               	movlw	69
 10455  000B92  6F95               	movwf	_efgtoa$949& (0+255),b
 10456  000B94                     l9413:
 10457                           
 10458                           ; BSR set to: 0
 10459  000B94  0E41               	movlw	low _dbuf
 10460  000B96  25B3               	addwf	efgtoa@i& (0+255),w,b
 10461  000B98  6ED9               	movwf	fsr2l,c
 10462  000B9A  0E01               	movlw	high _dbuf
 10463  000B9C  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10464  000B9E  6EDA               	movwf	fsr2h,c
 10465  000BA0  C095  FFDF         	movff	_efgtoa$949,indf2
 10466  000BA4                     
 10467                           ; BSR set to: 0
 10468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10469  000BA4  07A8               	decf	efgtoa@w& (0+255),f,b
 10470  000BA6  A0D8               	btfss	status,0,c
 10471  000BA8  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
 10472  000BAA                     
 10473                           ; BSR set to: 0
 10474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10475  000BAA  0E41               	movlw	low _dbuf
 10476  000BAC  25BB               	addwf	efgtoa@n& (0+255),w,b
 10477  000BAE  6E06               	movwf	strcpy@dest^0,c
 10478  000BB0  0E01               	movlw	high _dbuf
 10479  000BB2  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10480  000BB4  6E07               	movwf	(strcpy@dest+1)^0,c
 10481  000BB6  0E41               	movlw	low _dbuf
 10482  000BB8  25B3               	addwf	efgtoa@i& (0+255),w,b
 10483  000BBA  6E08               	movwf	strcpy@src^0,c
 10484  000BBC  0E01               	movlw	high _dbuf
 10485  000BBE  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10486  000BC0  6E09               	movwf	(strcpy@src+1)^0,c
 10487  000BC2  EC42  F028         	call	_strcpy	;wreg free
 10488  000BC6  EFBC  F000         	goto	l9169
 10489  000BCA                     l850:
 10490  000BCA  0012               	return		;funcret
 10491  000BCC                     __end_of_efgtoa:
 10492                           	opt callstack 0
 10493                           
 10494 ;; *************** function _tolower *****************
 10495 ;; Defined at:
 10496 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  c               2   11[COMRAM] int 
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;		None
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  2   11[COMRAM] int 
 10503 ;; Registers used:
 10504 ;;		wreg, status,2, status,0
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10510 ;;      Params:         2       0       0       0       0       0       0       0       0
 10511 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10512 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10513 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10514 ;;Total ram usage:        8 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; Hardware stack levels required when called:    3
 10517 ;; This function calls:
 10518 ;;		_isupper
 10519 ;; This function is called by:
 10520 ;;		_efgtoa
 10521 ;;		_vfpfcnvrt
 10522 ;; This function uses a non-reentrant model
 10523 ;;
 10524                           
 10525                           	psect	text37
 10526  004FC6                     __ptext37:
 10527                           	opt callstack 0
 10528  004FC6                     _tolower:
 10529                           	opt callstack 23
 10530  004FC6  0EBF               	movlw	191
 10531  004FC8  6E0E               	movwf	??_tolower^0,c
 10532  004FCA  0EFF               	movlw	255
 10533  004FCC  6E0F               	movwf	(??_tolower+1)^0,c
 10534  004FCE  C00C  F010         	movff	tolower@c,??_tolower+2
 10535  004FD2  C00D  F011         	movff	tolower@c+1,??_tolower+3
 10536  004FD6  500E               	movf	??_tolower^0,w,c
 10537  004FD8  2610               	addwf	(??_tolower+2)^0,f,c
 10538  004FDA  500F               	movf	(??_tolower+1)^0,w,c
 10539  004FDC  2211               	addwfc	(??_tolower+3)^0,f,c
 10540  004FDE  5011               	movf	(??_tolower+3)^0,w,c
 10541  004FE0  E10A               	bnz	u8710
 10542  004FE2  0E1A               	movlw	26
 10543  004FE4  5C10               	subwf	(??_tolower+2)^0,w,c
 10544  004FE6  A0D8               	btfss	status,0,c
 10545  004FE8  EFF8  F027         	goto	u8711
 10546  004FEC  EFFB  F027         	goto	u8710
 10547  004FF0                     u8711:
 10548  004FF0  0E01               	movlw	1
 10549  004FF2  EFFC  F027         	goto	u8720
 10550  004FF6                     u8710:
 10551  004FF6  0E00               	movlw	0
 10552  004FF8                     u8720:
 10553  004FF8  6E12               	movwf	_tolower$1573^0,c
 10554  004FFA  6A13               	clrf	(_tolower$1573+1)^0,c
 10555  004FFC  5012               	movf	_tolower$1573^0,w,c
 10556  004FFE  1013               	iorwf	(_tolower$1573+1)^0,w,c
 10557  005000  B4D8               	btfsc	status,2,c
 10558  005002  EF05  F028         	goto	u8731
 10559  005006  EF07  F028         	goto	u8730
 10560  00500A                     u8731:
 10561  00500A  EF0E  F028         	goto	l1785
 10562  00500E                     u8730:
 10563  00500E  0E20               	movlw	32
 10564  005010  100C               	iorwf	tolower@c^0,w,c
 10565  005012  6E0C               	movwf	?_tolower^0,c
 10566  005014  500D               	movf	(tolower@c+1)^0,w,c
 10567  005016  6E0D               	movwf	(?_tolower+1)^0,c
 10568  005018  EF12  F028         	goto	l1790
 10569  00501C                     l1785:
 10570  00501C  C00C  F00C         	movff	tolower@c,?_tolower
 10571  005020  C00D  F00D         	movff	tolower@c+1,?_tolower+1
 10572  005024                     l1790:
 10573  005024  0012               	return		;funcret
 10574  005026                     __end_of_tolower:
 10575                           	opt callstack 0
 10576                           
 10577 ;; *************** function _isupper *****************
 10578 ;; Defined at:
 10579 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;  c               2    5[COMRAM] int 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  2    5[COMRAM] int 
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, status,0
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10593 ;;      Params:         2       0       0       0       0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10595 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10596 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10597 ;;Total ram usage:        6 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:    2
 10600 ;; This function calls:
 10601 ;;		Nothing
 10602 ;; This function is called by:
 10603 ;;		_efgtoa
 10604 ;;		_vfpfcnvrt
 10605 ;;		_tolower
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           	psect	text38
 10610  00550C                     __ptext38:
 10611                           	opt callstack 0
 10612  00550C                     _isupper:
 10613                           	opt callstack 23
 10614  00550C  0EBF               	movlw	191
 10615  00550E  6E08               	movwf	??_isupper^0,c
 10616  005510  0EFF               	movlw	255
 10617  005512  6E09               	movwf	(??_isupper+1)^0,c
 10618  005514  C006  F00A         	movff	isupper@c,??_isupper+2
 10619  005518  C007  F00B         	movff	isupper@c+1,??_isupper+3
 10620  00551C  5008               	movf	??_isupper^0,w,c
 10621  00551E  260A               	addwf	(??_isupper+2)^0,f,c
 10622  005520  5009               	movf	(??_isupper+1)^0,w,c
 10623  005522  220B               	addwfc	(??_isupper+3)^0,f,c
 10624  005524  500B               	movf	(??_isupper+3)^0,w,c
 10625  005526  E10A               	bnz	u8080
 10626  005528  0E1A               	movlw	26
 10627  00552A  5C0A               	subwf	(??_isupper+2)^0,w,c
 10628  00552C  A0D8               	btfss	status,0,c
 10629  00552E  EF9B  F02A         	goto	u8081
 10630  005532  EF9E  F02A         	goto	u8080
 10631  005536                     u8081:
 10632  005536  0E01               	movlw	1
 10633  005538  EF9F  F02A         	goto	u8090
 10634  00553C                     u8080:
 10635  00553C  0E00               	movlw	0
 10636  00553E                     u8090:
 10637  00553E  6E06               	movwf	?_isupper^0,c
 10638  005540  6A07               	clrf	(?_isupper+1)^0,c
 10639  005542  0012               	return		;funcret
 10640  005544                     __end_of_isupper:
 10641                           	opt callstack 0
 10642                           
 10643 ;; *************** function _strcpy *****************
 10644 ;; Defined at:
 10645 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10648 ;;		 -> dbuf(80), 
 10649 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10650 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
 10651 ;;		 -> dbuf(80), 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;  d               2   13[COMRAM] PTR unsigned char 
 10654 ;;		 -> dbuf(80), 
 10655 ;;  s               2   11[COMRAM] PTR const unsigned char 
 10656 ;;		 -> STR_25(4), STR_24(4), STR_21(4), STR_20(4), 
 10657 ;;		 -> dbuf(80), 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  2    5[COMRAM] PTR unsigned char 
 10660 ;; Registers used:
 10661 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10667 ;;      Params:         4       0       0       0       0       0       0       0       0
 10668 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10669 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10670 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10671 ;;Total ram usage:       10 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    2
 10674 ;; This function calls:
 10675 ;;		Nothing
 10676 ;; This function is called by:
 10677 ;;		_efgtoa
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           	psect	text39
 10682  005084                     __ptext39:
 10683                           	opt callstack 0
 10684  005084                     _strcpy:
 10685                           	opt callstack 23
 10686  005084  C008  F00C         	movff	strcpy@src,strcpy@s
 10687  005088  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
 10688  00508C  C006  F00E         	movff	strcpy@dest,strcpy@d
 10689  005090  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
 10690  005094                     l8399:
 10691  005094  500C               	movf	strcpy@s^0,w,c
 10692  005096  6E0A               	movwf	??_strcpy^0,c
 10693  005098  500D               	movf	(strcpy@s+1)^0,w,c
 10694  00509A  6E0B               	movwf	(??_strcpy+1)^0,c
 10695  00509C  4A0C               	infsnz	strcpy@s^0,f,c
 10696  00509E  2A0D               	incf	(strcpy@s+1)^0,f,c
 10697  0050A0  C00A  FFF6         	movff	??_strcpy,tblptrl
 10698  0050A4  C00B  FFF7         	movff	??_strcpy+1,tblptrh
 10699  0050A8  6AF8               	clrf	tblptru,c
 10700  0050AA  C00E  FFD9         	movff	strcpy@d,fsr2l
 10701  0050AE  C00F  FFDA         	movff	strcpy@d+1,fsr2h
 10702  0050B2  4A0E               	infsnz	strcpy@d^0,f,c
 10703  0050B4  2A0F               	incf	(strcpy@d+1)^0,f,c
 10704  0050B6  0E07               	movlw	(high __ramtop+-1)
 10705  0050B8  64F7               	cpfsgt	tblptrh,c
 10706  0050BA  D003               	bra	u8697
 10707  0050BC  0008               	tblrd		*
 10708  0050BE  50F5               	movf	tablat,w,c
 10709  0050C0  D005               	bra	u8690
 10710  0050C2                     u8697:
 10711  0050C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10712  0050C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10713  0050CA  50EF               	movf	indf0,w,c
 10714  0050CC                     u8690:
 10715  0050CC  6EDF               	movwf	indf2,c
 10716  0050CE  50DF               	movf	indf2,w,c
 10717  0050D0  A4D8               	btfss	status,2,c
 10718  0050D2  EF6D  F028         	goto	u8701
 10719  0050D6  EF6F  F028         	goto	u8700
 10720  0050DA                     u8701:
 10721  0050DA  EF4A  F028         	goto	l8399
 10722  0050DE                     u8700:
 10723  0050DE  0012               	return		;funcret
 10724  0050E0                     __end_of_strcpy:
 10725                           	opt callstack 0
 10726                           
 10727 ;; *************** function _floorf *****************
 10728 ;; Defined at:
 10729 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;  x               4   79[COMRAM] float 
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  u               4   25[BANK0 ] struct .
 10734 ;;  m               4   19[BANK0 ] unsigned long 
 10735 ;;  e               2   23[BANK0 ] int 
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  4   79[COMRAM] float 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2, status,0
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10745 ;;      Params:         4       0       0       0       0       0       0       0       0
 10746 ;;      Locals:         0      10       0       0       0       0       0       0       0
 10747 ;;      Temps:          0       6       0       0       0       0       0       0       0
 10748 ;;      Totals:         4      16       0       0       0       0       0       0       0
 10749 ;;Total ram usage:       20 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    2
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_efgtoa
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text40
 10760  00306E                     __ptext40:
 10761                           	opt callstack 0
 10762  00306E                     _floorf:
 10763                           	opt callstack 23
 10764  00306E  C104  F079         	movff	floorf@F524,floorf@u
 10765  003072  C105  F07A         	movff	floorf@F524+1,floorf@u+1
 10766  003076  C106  F07B         	movff	floorf@F524+2,floorf@u+2
 10767  00307A  C107  F07C         	movff	floorf@F524+3,floorf@u+3
 10768  00307E  C050  F079         	movff	floorf@x,floorf@u
 10769  003082  C051  F07A         	movff	floorf@x+1,floorf@u+1
 10770  003086  C052  F07B         	movff	floorf@x+2,floorf@u+2
 10771  00308A  C053  F07C         	movff	floorf@x+3,floorf@u+3
 10772  00308E  0E81               	movlw	129
 10773  003090  0100               	movlb	0	; () banked
 10774  003092  6F6D               	movwf	??_floorf& (0+255),b
 10775  003094  0EFF               	movlw	255
 10776  003096  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10777  003098  C079  F06F         	movff	floorf@u,??_floorf+2
 10778  00309C  C07A  F070         	movff	floorf@u+1,??_floorf+3
 10779  0030A0  C07B  F071         	movff	floorf@u+2,??_floorf+4
 10780  0030A4  C07C  F072         	movff	floorf@u+3,??_floorf+5
 10781  0030A8  0E18               	movlw	24
 10782  0030AA  EF5C  F018         	goto	u8740
 10783  0030AE                     u8745:
 10784  0030AE  90D8               	bcf	status,0,c
 10785  0030B0  3372               	rrcf	(??_floorf+5)& (0+255),f,b
 10786  0030B2  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 10787  0030B4  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10788  0030B6  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10789  0030B8                     u8740:
 10790  0030B8  2EE8               	decfsz	wreg,f,c
 10791  0030BA  EF57  F018         	goto	u8745
 10792  0030BE  516F               	movf	(??_floorf+2)& (0+255),w,b
 10793  0030C0  256D               	addwf	??_floorf& (0+255),w,b
 10794  0030C2  6F77               	movwf	floorf@e& (0+255),b
 10795  0030C4  0E00               	movlw	0
 10796  0030C6  216E               	addwfc	(??_floorf+1)& (0+255),w,b
 10797  0030C8  6F78               	movwf	(floorf@e+1)& (0+255),b
 10798  0030CA  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 10799  0030CC  EF71  F018         	goto	u8751
 10800  0030D0  5178               	movf	(floorf@e+1)& (0+255),w,b
 10801  0030D2  E109               	bnz	u8750
 10802  0030D4  0E17               	movlw	23
 10803  0030D6  5D77               	subwf	floorf@e& (0+255),w,b
 10804  0030D8  A0D8               	btfss	status,0,c
 10805  0030DA  EF71  F018         	goto	u8751
 10806  0030DE  EF73  F018         	goto	u8750
 10807  0030E2                     u8751:
 10808  0030E2  EF7D  F018         	goto	l8417
 10809  0030E6                     u8750:
 10810  0030E6                     l8415:
 10811                           
 10812                           ; BSR set to: 0
 10813  0030E6  C050  F050         	movff	floorf@x,?_floorf
 10814  0030EA  C051  F051         	movff	floorf@x+1,?_floorf+1
 10815  0030EE  C052  F052         	movff	floorf@x+2,?_floorf+2
 10816  0030F2  C053  F053         	movff	floorf@x+3,?_floorf+3
 10817  0030F6  EF41  F019         	goto	l1687
 10818  0030FA                     l8417:
 10819                           
 10820                           ; BSR set to: 0
 10821  0030FA  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
 10822  0030FC  EF82  F018         	goto	u8761
 10823  003100  EF84  F018         	goto	u8760
 10824  003104                     u8761:
 10825  003104  EFF5  F018         	goto	l8427
 10826  003108                     u8760:
 10827  003108                     
 10828                           ; BSR set to: 0
 10829  003108  C077  F06D         	movff	floorf@e,??_floorf
 10830  00310C  0EFF               	movlw	255
 10831  00310E  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10832  003110  0EFF               	movlw	255
 10833  003112  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10834  003114  0E7F               	movlw	127
 10835  003116  6F70               	movwf	(??_floorf+3)& (0+255),b
 10836  003118  0E00               	movlw	0
 10837  00311A  6F71               	movwf	(??_floorf+4)& (0+255),b
 10838  00311C                     u8775:
 10839  00311C  676D               	tstfsz	??_floorf& (0+255),b
 10840  00311E  EF93  F018         	goto	u8776
 10841  003122  EF9B  F018         	goto	u8777
 10842  003126                     u8776:
 10843  003126  3571               	rlcf	(??_floorf+4)& (0+255),w,b
 10844  003128  3371               	rrcf	(??_floorf+4)& (0+255),f,b
 10845  00312A  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10846  00312C  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10847  00312E  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 10848  003130  2F6D               	decfsz	??_floorf& (0+255),f,b
 10849  003132  EF8E  F018         	goto	u8775
 10850  003136                     u8777:
 10851  003136  C06E  F073         	movff	??_floorf+1,floorf@m
 10852  00313A  C06F  F074         	movff	??_floorf+2,floorf@m+1
 10853  00313E  C070  F075         	movff	??_floorf+3,floorf@m+2
 10854  003142  C071  F076         	movff	??_floorf+4,floorf@m+3
 10855  003146  0100               	movlb	0	; () banked
 10856  003148  5173               	movf	floorf@m& (0+255),w,b
 10857  00314A  1579               	andwf	floorf@u& (0+255),w,b
 10858  00314C  6F6D               	movwf	??_floorf& (0+255),b
 10859  00314E  5174               	movf	(floorf@m+1)& (0+255),w,b
 10860  003150  157A               	andwf	(floorf@u+1)& (0+255),w,b
 10861  003152  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10862  003154  5175               	movf	(floorf@m+2)& (0+255),w,b
 10863  003156  157B               	andwf	(floorf@u+2)& (0+255),w,b
 10864  003158  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10865  00315A  5176               	movf	(floorf@m+3)& (0+255),w,b
 10866  00315C  157C               	andwf	(floorf@u+3)& (0+255),w,b
 10867  00315E  6F70               	movwf	(??_floorf+3)& (0+255),b
 10868  003160  516D               	movf	??_floorf& (0+255),w,b
 10869  003162  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 10870  003164  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 10871  003166  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 10872  003168  A4D8               	btfss	status,2,c
 10873  00316A  EFB9  F018         	goto	u8781
 10874  00316E  EFBB  F018         	goto	u8780
 10875  003172                     u8781:
 10876  003172  EFBD  F018         	goto	l8423
 10877  003176                     u8780:
 10878  003176  EF73  F018         	goto	l8415
 10879  00317A                     l8423:
 10880                           
 10881                           ; BSR set to: 0
 10882  00317A  C079  F06D         	movff	floorf@u,??_floorf
 10883  00317E  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 10884  003182  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 10885  003186  C07C  F070         	movff	floorf@u+3,??_floorf+3
 10886  00318A  0E20               	movlw	32
 10887  00318C  EFCD  F018         	goto	u8790
 10888  003190                     u8795:
 10889  003190  90D8               	bcf	status,0,c
 10890  003192  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10891  003194  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10892  003196  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 10893  003198  336D               	rrcf	??_floorf& (0+255),f,b
 10894  00319A                     u8790:
 10895  00319A  2EE8               	decfsz	wreg,f,c
 10896  00319C  EFC8  F018         	goto	u8795
 10897  0031A0  516D               	movf	??_floorf& (0+255),w,b
 10898  0031A2  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 10899  0031A4  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 10900  0031A6  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 10901  0031A8  B4D8               	btfsc	status,2,c
 10902  0031AA  EFD9  F018         	goto	u8801
 10903  0031AE  EFDB  F018         	goto	u8800
 10904  0031B2                     u8801:
 10905  0031B2  EFE3  F018         	goto	l1690
 10906  0031B6                     u8800:
 10907  0031B6                     
 10908                           ; BSR set to: 0
 10909  0031B6  5173               	movf	floorf@m& (0+255),w,b
 10910  0031B8  2779               	addwf	floorf@u& (0+255),f,b
 10911  0031BA  5174               	movf	(floorf@m+1)& (0+255),w,b
 10912  0031BC  237A               	addwfc	(floorf@u+1)& (0+255),f,b
 10913  0031BE  5175               	movf	(floorf@m+2)& (0+255),w,b
 10914  0031C0  237B               	addwfc	(floorf@u+2)& (0+255),f,b
 10915  0031C2  5176               	movf	(floorf@m+3)& (0+255),w,b
 10916  0031C4  237C               	addwfc	(floorf@u+3)& (0+255),f,b
 10917  0031C6                     l1690:
 10918                           
 10919                           ; BSR set to: 0
 10920  0031C6  1D73               	comf	floorf@m& (0+255),w,b
 10921  0031C8  6F6D               	movwf	??_floorf& (0+255),b
 10922  0031CA  1D74               	comf	(floorf@m+1)& (0+255),w,b
 10923  0031CC  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10924  0031CE  1D75               	comf	(floorf@m+2)& (0+255),w,b
 10925  0031D0  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10926  0031D2  1D76               	comf	(floorf@m+3)& (0+255),w,b
 10927  0031D4  6F70               	movwf	(??_floorf+3)& (0+255),b
 10928  0031D6  516D               	movf	??_floorf& (0+255),w,b
 10929  0031D8  1779               	andwf	floorf@u& (0+255),f,b
 10930  0031DA  516E               	movf	(??_floorf+1)& (0+255),w,b
 10931  0031DC  177A               	andwf	(floorf@u+1)& (0+255),f,b
 10932  0031DE  516F               	movf	(??_floorf+2)& (0+255),w,b
 10933  0031E0  177B               	andwf	(floorf@u+2)& (0+255),f,b
 10934  0031E2  5170               	movf	(??_floorf+3)& (0+255),w,b
 10935  0031E4  177C               	andwf	(floorf@u+3)& (0+255),f,b
 10936  0031E6  EF39  F019         	goto	l8435
 10937  0031EA                     l8427:
 10938                           
 10939                           ; BSR set to: 0
 10940  0031EA  C079  F06D         	movff	floorf@u,??_floorf
 10941  0031EE  C07A  F06E         	movff	floorf@u+1,??_floorf+1
 10942  0031F2  C07B  F06F         	movff	floorf@u+2,??_floorf+2
 10943  0031F6  C07C  F070         	movff	floorf@u+3,??_floorf+3
 10944  0031FA  0E20               	movlw	32
 10945  0031FC  EF05  F019         	goto	u8810
 10946  003200                     u8815:
 10947  003200  90D8               	bcf	status,0,c
 10948  003202  3370               	rrcf	(??_floorf+3)& (0+255),f,b
 10949  003204  336F               	rrcf	(??_floorf+2)& (0+255),f,b
 10950  003206  336E               	rrcf	(??_floorf+1)& (0+255),f,b
 10951  003208  336D               	rrcf	??_floorf& (0+255),f,b
 10952  00320A                     u8810:
 10953  00320A  2EE8               	decfsz	wreg,f,c
 10954  00320C  EF00  F019         	goto	u8815
 10955  003210  516D               	movf	??_floorf& (0+255),w,b
 10956  003212  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 10957  003214  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 10958  003216  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 10959  003218  A4D8               	btfss	status,2,c
 10960  00321A  EF11  F019         	goto	u8821
 10961  00321E  EF13  F019         	goto	u8820
 10962  003222                     u8821:
 10963  003222  EF1D  F019         	goto	l8431
 10964  003226                     u8820:
 10965  003226                     
 10966                           ; BSR set to: 0
 10967  003226  0E00               	movlw	0
 10968  003228  6F79               	movwf	floorf@u& (0+255),b
 10969  00322A  0E00               	movlw	0
 10970  00322C  6F7A               	movwf	(floorf@u+1)& (0+255),b
 10971  00322E  0E00               	movlw	0
 10972  003230  6F7B               	movwf	(floorf@u+2)& (0+255),b
 10973  003232  0E00               	movlw	0
 10974  003234  6F7C               	movwf	(floorf@u+3)& (0+255),b
 10975  003236  EF39  F019         	goto	l8435
 10976  00323A                     l8431:
 10977                           
 10978                           ; BSR set to: 0
 10979  00323A  90D8               	bcf	status,0,c
 10980  00323C  3579               	rlcf	floorf@u& (0+255),w,b
 10981  00323E  6F6D               	movwf	??_floorf& (0+255),b
 10982  003240  357A               	rlcf	(floorf@u+1)& (0+255),w,b
 10983  003242  6F6E               	movwf	(??_floorf+1)& (0+255),b
 10984  003244  357B               	rlcf	(floorf@u+2)& (0+255),w,b
 10985  003246  6F6F               	movwf	(??_floorf+2)& (0+255),b
 10986  003248  357C               	rlcf	(floorf@u+3)& (0+255),w,b
 10987  00324A  6F70               	movwf	(??_floorf+3)& (0+255),b
 10988  00324C  516D               	movf	??_floorf& (0+255),w,b
 10989  00324E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
 10990  003250  116F               	iorwf	(??_floorf+2)& (0+255),w,b
 10991  003252  1170               	iorwf	(??_floorf+3)& (0+255),w,b
 10992  003254  B4D8               	btfsc	status,2,c
 10993  003256  EF2F  F019         	goto	u8831
 10994  00325A  EF31  F019         	goto	u8830
 10995  00325E                     u8831:
 10996  00325E  EF39  F019         	goto	l8435
 10997  003262                     u8830:
 10998  003262                     
 10999                           ; BSR set to: 0
 11000  003262  0E00               	movlw	0
 11001  003264  6F79               	movwf	floorf@u& (0+255),b
 11002  003266  0E00               	movlw	0
 11003  003268  6F7A               	movwf	(floorf@u+1)& (0+255),b
 11004  00326A  0E80               	movlw	128
 11005  00326C  6F7B               	movwf	(floorf@u+2)& (0+255),b
 11006  00326E  0EBF               	movlw	191
 11007  003270  6F7C               	movwf	(floorf@u+3)& (0+255),b
 11008  003272                     l8435:
 11009                           
 11010                           ; BSR set to: 0
 11011  003272  C079  F050         	movff	floorf@u,?_floorf
 11012  003276  C07A  F051         	movff	floorf@u+1,?_floorf+1
 11013  00327A  C07B  F052         	movff	floorf@u+2,?_floorf+2
 11014  00327E  C07C  F053         	movff	floorf@u+3,?_floorf+3
 11015  003282                     l1687:
 11016                           
 11017                           ; BSR set to: 0
 11018  003282  0012               	return		;funcret
 11019  003284                     __end_of_floorf:
 11020                           	opt callstack 0
 11021                           
 11022 ;; *************** function ___fpclassifyf *****************
 11023 ;; Defined at:
 11024 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;  x               4    5[COMRAM] float 
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;  u               4   15[COMRAM] struct .
 11029 ;;  e               2   13[COMRAM] int 
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  2    5[COMRAM] int 
 11032 ;; Registers used:
 11033 ;;		wreg, status,2, status,0
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11039 ;;      Params:         4       0       0       0       0       0       0       0       0
 11040 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11041 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11042 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11043 ;;Total ram usage:       14 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:    2
 11046 ;; This function calls:
 11047 ;;		Nothing
 11048 ;; This function is called by:
 11049 ;;		_efgtoa
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053                           	psect	text41
 11054  0042FC                     __ptext41:
 11055                           	opt callstack 0
 11056  0042FC                     ___fpclassifyf:
 11057                           	opt callstack 23
 11058  0042FC  C108  F010         	movff	___fpclassifyf@F463,___fpclassifyf@u
 11059  004300  C109  F011         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 11060  004304  C10A  F012         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 11061  004308  C10B  F013         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 11062  00430C  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11063  004310  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11064  004314  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11065  004318  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11066  00431C  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11067  004320  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11068  004324  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11069  004328  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11070  00432C  0E18               	movlw	24
 11071  00432E  EF9E  F021         	goto	u8620
 11072  004332                     u8625:
 11073  004332  90D8               	bcf	status,0,c
 11074  004334  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11075  004336  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11076  004338  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11077  00433A  320A               	rrcf	??___fpclassifyf^0,f,c
 11078  00433C                     u8620:
 11079  00433C  2EE8               	decfsz	wreg,f,c
 11080  00433E  EF99  F021         	goto	u8625
 11081  004342  500A               	movf	??___fpclassifyf^0,w,c
 11082  004344  6E0E               	movwf	___fpclassifyf@e^0,c
 11083  004346  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11084  004348  500E               	movf	___fpclassifyf@e^0,w,c
 11085  00434A  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11086  00434C  A4D8               	btfss	status,2,c
 11087  00434E  EFAB  F021         	goto	u8631
 11088  004352  EFAD  F021         	goto	u8630
 11089  004356                     u8631:
 11090  004356  EFCD  F021         	goto	l8387
 11091  00435A                     u8630:
 11092  00435A  90D8               	bcf	status,0,c
 11093  00435C  3410               	rlcf	___fpclassifyf@u^0,w,c
 11094  00435E  6E0A               	movwf	??___fpclassifyf^0,c
 11095  004360  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11096  004362  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11097  004364  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11098  004366  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11099  004368  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11100  00436A  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11101  00436C  500A               	movf	??___fpclassifyf^0,w,c
 11102  00436E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11103  004370  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11104  004372  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11105  004374  A4D8               	btfss	status,2,c
 11106  004376  EFBF  F021         	goto	u8641
 11107  00437A  EFC1  F021         	goto	u8640
 11108  00437E                     u8641:
 11109  00437E  EFC7  F021         	goto	l8383
 11110  004382                     u8640:
 11111  004382  0E00               	movlw	0
 11112  004384  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11113  004386  0E02               	movlw	2
 11114  004388  6E06               	movwf	?___fpclassifyf^0,c
 11115  00438A  EFFC  F021         	goto	l1642
 11116  00438E                     l8383:
 11117  00438E  0E00               	movlw	0
 11118  004390  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11119  004392  0E03               	movlw	3
 11120  004394  6E06               	movwf	?___fpclassifyf^0,c
 11121  004396  EFFC  F021         	goto	l1642
 11122  00439A                     l8387:
 11123  00439A  280E               	incf	___fpclassifyf@e^0,w,c
 11124  00439C  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11125  00439E  A4D8               	btfss	status,2,c
 11126  0043A0  EFD4  F021         	goto	u8651
 11127  0043A4  EFD6  F021         	goto	u8650
 11128  0043A8                     u8651:
 11129  0043A8  EFF8  F021         	goto	l8393
 11130  0043AC                     u8650:
 11131  0043AC  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11132  0043B0  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11133  0043B4  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11134  0043B8  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11135  0043BC  0E09               	movlw	9
 11136  0043BE                     u8665:
 11137  0043BE  90D8               	bcf	status,0,c
 11138  0043C0  360A               	rlcf	??___fpclassifyf^0,f,c
 11139  0043C2  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11140  0043C4  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11141  0043C6  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11142  0043C8  2EE8               	decfsz	wreg,f,c
 11143  0043CA  EFDF  F021         	goto	u8665
 11144  0043CE  500A               	movf	??___fpclassifyf^0,w,c
 11145  0043D0  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11146  0043D2  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11147  0043D4  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11148  0043D6  B4D8               	btfsc	status,2,c
 11149  0043D8  EFF0  F021         	goto	u8671
 11150  0043DC  EFF3  F021         	goto	u8670
 11151  0043E0                     u8671:
 11152  0043E0  0E01               	movlw	1
 11153  0043E2  EFF4  F021         	goto	u8680
 11154  0043E6                     u8670:
 11155  0043E6  0E00               	movlw	0
 11156  0043E8                     u8680:
 11157  0043E8  6E06               	movwf	?___fpclassifyf^0,c
 11158  0043EA  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11159  0043EC  EFFC  F021         	goto	l1642
 11160  0043F0                     l8393:
 11161  0043F0  0E00               	movlw	0
 11162  0043F2  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11163  0043F4  0E04               	movlw	4
 11164  0043F6  6E06               	movwf	?___fpclassifyf^0,c
 11165  0043F8                     l1642:
 11166  0043F8  0012               	return		;funcret
 11167  0043FA                     __end_of___fpclassifyf:
 11168                           	opt callstack 0
 11169                           
 11170 ;; *************** function ___fltol *****************
 11171 ;; Defined at:
 11172 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11173 ;; Parameters:    Size  Location     Type
 11174 ;;  f1              4   18[BANK0 ] int 
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;  exp1            1   27[BANK0 ] unsigned char 
 11177 ;;  sign1           1   26[BANK0 ] unsigned char 
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  4   18[BANK0 ] long 
 11180 ;; Registers used:
 11181 ;;		wreg, status,2, status,0
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11187 ;;      Params:         0       4       0       0       0       0       0       0       0
 11188 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11189 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11190 ;;      Totals:         0      10       0       0       0       0       0       0       0
 11191 ;;Total ram usage:       10 bytes
 11192 ;; Hardware stack levels used:    1
 11193 ;; Hardware stack levels required when called:    2
 11194 ;; This function calls:
 11195 ;;		Nothing
 11196 ;; This function is called by:
 11197 ;;		_pwmDuty
 11198 ;;		_PID
 11199 ;;		_efgtoa
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text42
 11204  003FEA                     __ptext42:
 11205                           	opt callstack 0
 11206  003FEA                     ___fltol:
 11207                           	opt callstack 23
 11208  003FEA  0100               	movlb	0	; () banked
 11209  003FEC  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11210  003FEE  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11211  003FF0  6F7B               	movwf	___fltol@exp1& (0+255),b
 11212  003FF2  517B               	movf	___fltol@exp1& (0+255),w,b
 11213  003FF4  A4D8               	btfss	status,2,c
 11214  003FF6  EFFF  F01F         	goto	u9621
 11215  003FFA  EF01  F020         	goto	u9620
 11216  003FFE                     u9621:
 11217  003FFE  EF0B  F020         	goto	l8935
 11218  004002                     u9620:
 11219  004002                     l8931:
 11220                           
 11221                           ; BSR set to: 0
 11222  004002  0E00               	movlw	0
 11223  004004  6F72               	movwf	?___fltol& (0+255),b
 11224  004006  0E00               	movlw	0
 11225  004008  6F73               	movwf	(?___fltol+1)& (0+255),b
 11226  00400A  0E00               	movlw	0
 11227  00400C  6F74               	movwf	(?___fltol+2)& (0+255),b
 11228  00400E  0E00               	movlw	0
 11229  004010  6F75               	movwf	(?___fltol+3)& (0+255),b
 11230  004012  EF78  F020         	goto	l1258
 11231  004016                     l8935:
 11232                           
 11233                           ; BSR set to: 0
 11234  004016  C072  F076         	movff	___fltol@f1,??___fltol
 11235  00401A  C073  F077         	movff	___fltol@f1+1,??___fltol+1
 11236  00401E  C074  F078         	movff	___fltol@f1+2,??___fltol+2
 11237  004022  C075  F079         	movff	___fltol@f1+3,??___fltol+3
 11238  004026  0E20               	movlw	32
 11239  004028  EF1B  F020         	goto	u9630
 11240  00402C                     u9635:
 11241  00402C  90D8               	bcf	status,0,c
 11242  00402E  3379               	rrcf	(??___fltol+3)& (0+255),f,b
 11243  004030  3378               	rrcf	(??___fltol+2)& (0+255),f,b
 11244  004032  3377               	rrcf	(??___fltol+1)& (0+255),f,b
 11245  004034  3376               	rrcf	??___fltol& (0+255),f,b
 11246  004036                     u9630:
 11247  004036  2EE8               	decfsz	wreg,f,c
 11248  004038  EF16  F020         	goto	u9635
 11249  00403C  5176               	movf	??___fltol& (0+255),w,b
 11250  00403E  6F7A               	movwf	___fltol@sign1& (0+255),b
 11251  004040                     
 11252                           ; BSR set to: 0
 11253  004040  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
 11254  004042                     
 11255                           ; BSR set to: 0
 11256  004042  0EFF               	movlw	255
 11257  004044  1772               	andwf	___fltol@f1& (0+255),f,b
 11258  004046  0EFF               	movlw	255
 11259  004048  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
 11260  00404A  0EFF               	movlw	255
 11261  00404C  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
 11262  00404E  0E00               	movlw	0
 11263  004050  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
 11264  004052                     
 11265                           ; BSR set to: 0
 11266  004052  0E96               	movlw	150
 11267  004054  5F7B               	subwf	___fltol@exp1& (0+255),f,b
 11268  004056                     
 11269                           ; BSR set to: 0
 11270  004056  BF7B               	btfsc	___fltol@exp1& (0+255),7,b
 11271  004058  EF32  F020         	goto	u9640
 11272  00405C  EF30  F020         	goto	u9641
 11273  004060                     u9641:
 11274  004060  EF48  F020         	goto	l8955
 11275  004064                     u9640:
 11276  004064                     
 11277                           ; BSR set to: 0
 11278  004064  517B               	movf	___fltol@exp1& (0+255),w,b
 11279  004066  0A80               	xorlw	128
 11280  004068  0F97               	addlw	151
 11281  00406A  B0D8               	btfsc	status,0,c
 11282  00406C  EF3A  F020         	goto	u9651
 11283  004070  EF3C  F020         	goto	u9650
 11284  004074                     u9651:
 11285  004074  EF3E  F020         	goto	l8951
 11286  004078                     u9650:
 11287  004078  EF01  F020         	goto	l8931
 11288  00407C                     l8951:
 11289                           
 11290                           ; BSR set to: 0
 11291  00407C  90D8               	bcf	status,0,c
 11292  00407E  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11293  004080  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11294  004082  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11295  004084  3372               	rrcf	___fltol@f1& (0+255),f,b
 11296  004086                     
 11297                           ; BSR set to: 0
 11298  004086  3F7B               	incfsz	___fltol@exp1& (0+255),f,b
 11299  004088  EF3E  F020         	goto	l8951
 11300  00408C  EF60  F020         	goto	l8965
 11301  004090                     l8955:
 11302                           
 11303                           ; BSR set to: 0
 11304  004090  0E1F               	movlw	31
 11305  004092  657B               	cpfsgt	___fltol@exp1& (0+255),b
 11306  004094  EF4E  F020         	goto	u9661
 11307  004098  EF50  F020         	goto	u9660
 11308  00409C                     u9661:
 11309  00409C  EF58  F020         	goto	l8963
 11310  0040A0                     u9660:
 11311  0040A0  EF01  F020         	goto	l8931
 11312  0040A4                     l8961:
 11313                           
 11314                           ; BSR set to: 0
 11315  0040A4  90D8               	bcf	status,0,c
 11316  0040A6  3772               	rlcf	___fltol@f1& (0+255),f,b
 11317  0040A8  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11318  0040AA  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11319  0040AC  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11320  0040AE  077B               	decf	___fltol@exp1& (0+255),f,b
 11321  0040B0                     l8963:
 11322                           
 11323                           ; BSR set to: 0
 11324  0040B0  517B               	movf	___fltol@exp1& (0+255),w,b
 11325  0040B2  A4D8               	btfss	status,2,c
 11326  0040B4  EF5E  F020         	goto	u9671
 11327  0040B8  EF60  F020         	goto	u9670
 11328  0040BC                     u9671:
 11329  0040BC  EF52  F020         	goto	l8961
 11330  0040C0                     u9670:
 11331  0040C0                     l8965:
 11332                           
 11333                           ; BSR set to: 0
 11334  0040C0  517A               	movf	___fltol@sign1& (0+255),w,b
 11335  0040C2  B4D8               	btfsc	status,2,c
 11336  0040C4  EF66  F020         	goto	u9681
 11337  0040C8  EF68  F020         	goto	u9680
 11338  0040CC                     u9681:
 11339  0040CC  EF70  F020         	goto	l8969
 11340  0040D0                     u9680:
 11341  0040D0                     
 11342                           ; BSR set to: 0
 11343  0040D0  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
 11344  0040D2  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
 11345  0040D4  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
 11346  0040D6  6D72               	negf	___fltol@f1& (0+255),b
 11347  0040D8  0E00               	movlw	0
 11348  0040DA  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11349  0040DC  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11350  0040DE  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11351  0040E0                     l8969:
 11352                           
 11353                           ; BSR set to: 0
 11354  0040E0  C072  F072         	movff	___fltol@f1,?___fltol
 11355  0040E4  C073  F073         	movff	___fltol@f1+1,?___fltol+1
 11356  0040E8  C074  F074         	movff	___fltol@f1+2,?___fltol+2
 11357  0040EC  C075  F075         	movff	___fltol@f1+3,?___fltol+3
 11358  0040F0                     l1258:
 11359                           
 11360                           ; BSR set to: 0
 11361  0040F0  0012               	return		;funcret
 11362  0040F2                     __end_of___fltol:
 11363                           	opt callstack 0
 11364                           
 11365 ;; *************** function ___flsub *****************
 11366 ;; Defined at:
 11367 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  b               4   67[COMRAM] long 
 11370 ;;  a               4   71[COMRAM] long 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;		None
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  4   67[COMRAM] long 
 11375 ;; Registers used:
 11376 ;;		wreg, status,2, status,0, cstack
 11377 ;; Tracked objects:
 11378 ;;		On entry : 0/0
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11382 ;;      Params:         8       0       0       0       0       0       0       0       0
 11383 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11384 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11385 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11386 ;;Total ram usage:        8 bytes
 11387 ;; Hardware stack levels used:    1
 11388 ;; Hardware stack levels required when called:    3
 11389 ;; This function calls:
 11390 ;;		___fladd
 11391 ;; This function is called by:
 11392 ;;		_PID
 11393 ;;		_efgtoa
 11394 ;;		_roundf
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text43
 11399  005376                     __ptext43:
 11400                           	opt callstack 0
 11401  005376                     ___flsub:
 11402                           	opt callstack 22
 11403  005376  0E00               	movlw	0
 11404  005378  1A48               	xorwf	___flsub@a^0,f,c
 11405  00537A  0E00               	movlw	0
 11406  00537C  1A49               	xorwf	(___flsub@a+1)^0,f,c
 11407  00537E  0E00               	movlw	0
 11408  005380  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 11409  005382  0E80               	movlw	128
 11410  005384  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 11411  005386  C044  F034         	movff	___flsub@b,___fladd@b
 11412  00538A  C045  F035         	movff	___flsub@b+1,___fladd@b+1
 11413  00538E  C046  F036         	movff	___flsub@b+2,___fladd@b+2
 11414  005392  C047  F037         	movff	___flsub@b+3,___fladd@b+3
 11415  005396  C048  F038         	movff	___flsub@a,___fladd@a
 11416  00539A  C049  F039         	movff	___flsub@a+1,___fladd@a+1
 11417  00539E  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
 11418  0053A2  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
 11419  0053A6  EC80  F00B         	call	___fladd	;wreg free
 11420  0053AA  C034  F044         	movff	?___fladd,?___flsub
 11421  0053AE  C035  F045         	movff	?___fladd+1,?___flsub+1
 11422  0053B2  C036  F046         	movff	?___fladd+2,?___flsub+2
 11423  0053B6  C037  F047         	movff	?___fladd+3,?___flsub+3
 11424  0053BA  0012               	return		;funcret
 11425  0053BC                     __end_of___flsub:
 11426                           	opt callstack 0
 11427                           
 11428 ;; *************** function ___fladd *****************
 11429 ;; Defined at:
 11430 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  b               4   51[COMRAM] long 
 11433 ;;  a               4   55[COMRAM] long 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  grs             1   66[COMRAM] unsigned char 
 11436 ;;  bexp            1   65[COMRAM] unsigned char 
 11437 ;;  aexp            1   64[COMRAM] unsigned char 
 11438 ;;  signs           1   63[COMRAM] unsigned char 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  4   51[COMRAM] unsigned char 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11448 ;;      Params:         8       0       0       0       0       0       0       0       0
 11449 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11450 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11451 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11452 ;;Total ram usage:       16 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; Hardware stack levels required when called:    2
 11455 ;; This function calls:
 11456 ;;		Nothing
 11457 ;; This function is called by:
 11458 ;;		_leerSensores
 11459 ;;		_PID
 11460 ;;		_efgtoa
 11461 ;;		___flsub
 11462 ;;		_roundf
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           	psect	text44
 11467  001700                     __ptext44:
 11468                           	opt callstack 0
 11469  001700                     ___fladd:
 11470                           	opt callstack 22
 11471  001700  5037               	movf	(___fladd@b+3)^0,w,c
 11472  001702  0B80               	andlw	128
 11473  001704  6E40               	movwf	___fladd@signs^0,c
 11474  001706  5037               	movf	(___fladd@b+3)^0,w,c
 11475  001708  2437               	addwf	(___fladd@b+3)^0,w,c
 11476  00170A  6E42               	movwf	___fladd@bexp^0,c
 11477  00170C  AE36               	btfss	(___fladd@b+2)^0,7,c
 11478  00170E  EF8B  F00B         	goto	u8181
 11479  001712  EF8D  F00B         	goto	u8180
 11480  001716                     u8181:
 11481  001716  EF8E  F00B         	goto	l8149
 11482  00171A                     u8180:
 11483  00171A  8042               	bsf	___fladd@bexp^0,0,c
 11484  00171C                     l8149:
 11485  00171C  5042               	movf	___fladd@bexp^0,w,c
 11486  00171E  B4D8               	btfsc	status,2,c
 11487  001720  EF94  F00B         	goto	u8191
 11488  001724  EF96  F00B         	goto	u8190
 11489  001728                     u8191:
 11490  001728  EFAB  F00B         	goto	l8159
 11491  00172C                     u8190:
 11492  00172C  2842               	incf	___fladd@bexp^0,w,c
 11493  00172E  A4D8               	btfss	status,2,c
 11494  001730  EF9C  F00B         	goto	u8201
 11495  001734  EF9E  F00B         	goto	u8200
 11496  001738                     u8201:
 11497  001738  EFA6  F00B         	goto	l8155
 11498  00173C                     u8200:
 11499  00173C  0E00               	movlw	0
 11500  00173E  6E34               	movwf	___fladd@b^0,c
 11501  001740  0E00               	movlw	0
 11502  001742  6E35               	movwf	(___fladd@b+1)^0,c
 11503  001744  0E00               	movlw	0
 11504  001746  6E36               	movwf	(___fladd@b+2)^0,c
 11505  001748  0E00               	movlw	0
 11506  00174A  6E37               	movwf	(___fladd@b+3)^0,c
 11507  00174C                     l8155:
 11508  00174C  8E36               	bsf	(___fladd@b+2)^0,7,c
 11509  00174E  0E00               	movlw	0
 11510  001750  6E37               	movwf	(___fladd@b+3)^0,c
 11511  001752  EFB3  F00B         	goto	l8161
 11512  001756                     l8159:
 11513  001756  0E00               	movlw	0
 11514  001758  6E34               	movwf	___fladd@b^0,c
 11515  00175A  0E00               	movlw	0
 11516  00175C  6E35               	movwf	(___fladd@b+1)^0,c
 11517  00175E  0E00               	movlw	0
 11518  001760  6E36               	movwf	(___fladd@b+2)^0,c
 11519  001762  0E00               	movlw	0
 11520  001764  6E37               	movwf	(___fladd@b+3)^0,c
 11521  001766                     l8161:
 11522  001766  503B               	movf	(___fladd@a+3)^0,w,c
 11523  001768  0B80               	andlw	128
 11524  00176A  6E41               	movwf	___fladd@aexp^0,c
 11525  00176C  5040               	movf	___fladd@signs^0,w,c
 11526  00176E  1841               	xorwf	___fladd@aexp^0,w,c
 11527  001770  B4D8               	btfsc	status,2,c
 11528  001772  EFBD  F00B         	goto	u8211
 11529  001776  EFBF  F00B         	goto	u8210
 11530  00177A                     u8211:
 11531  00177A  EFC0  F00B         	goto	l8167
 11532  00177E                     u8210:
 11533  00177E  8C40               	bsf	___fladd@signs^0,6,c
 11534  001780                     l8167:
 11535  001780  503B               	movf	(___fladd@a+3)^0,w,c
 11536  001782  243B               	addwf	(___fladd@a+3)^0,w,c
 11537  001784  6E41               	movwf	___fladd@aexp^0,c
 11538  001786  AE3A               	btfss	(___fladd@a+2)^0,7,c
 11539  001788  EFC8  F00B         	goto	u8221
 11540  00178C  EFCA  F00B         	goto	u8220
 11541  001790                     u8221:
 11542  001790  EFCB  F00B         	goto	l8173
 11543  001794                     u8220:
 11544  001794  8041               	bsf	___fladd@aexp^0,0,c
 11545  001796                     l8173:
 11546  001796  5041               	movf	___fladd@aexp^0,w,c
 11547  001798  B4D8               	btfsc	status,2,c
 11548  00179A  EFD1  F00B         	goto	u8231
 11549  00179E  EFD3  F00B         	goto	u8230
 11550  0017A2                     u8231:
 11551  0017A2  EFE8  F00B         	goto	l8183
 11552  0017A6                     u8230:
 11553  0017A6  2841               	incf	___fladd@aexp^0,w,c
 11554  0017A8  A4D8               	btfss	status,2,c
 11555  0017AA  EFD9  F00B         	goto	u8241
 11556  0017AE  EFDB  F00B         	goto	u8240
 11557  0017B2                     u8241:
 11558  0017B2  EFE3  F00B         	goto	l8179
 11559  0017B6                     u8240:
 11560  0017B6  0E00               	movlw	0
 11561  0017B8  6E38               	movwf	___fladd@a^0,c
 11562  0017BA  0E00               	movlw	0
 11563  0017BC  6E39               	movwf	(___fladd@a+1)^0,c
 11564  0017BE  0E00               	movlw	0
 11565  0017C0  6E3A               	movwf	(___fladd@a+2)^0,c
 11566  0017C2  0E00               	movlw	0
 11567  0017C4  6E3B               	movwf	(___fladd@a+3)^0,c
 11568  0017C6                     l8179:
 11569  0017C6  8E3A               	bsf	(___fladd@a+2)^0,7,c
 11570  0017C8  0E00               	movlw	0
 11571  0017CA  6E3B               	movwf	(___fladd@a+3)^0,c
 11572  0017CC  EFF0  F00B         	goto	l8185
 11573  0017D0                     l8183:
 11574  0017D0  0E00               	movlw	0
 11575  0017D2  6E38               	movwf	___fladd@a^0,c
 11576  0017D4  0E00               	movlw	0
 11577  0017D6  6E39               	movwf	(___fladd@a+1)^0,c
 11578  0017D8  0E00               	movlw	0
 11579  0017DA  6E3A               	movwf	(___fladd@a+2)^0,c
 11580  0017DC  0E00               	movlw	0
 11581  0017DE  6E3B               	movwf	(___fladd@a+3)^0,c
 11582  0017E0                     l8185:
 11583  0017E0  5042               	movf	___fladd@bexp^0,w,c
 11584  0017E2  5C41               	subwf	___fladd@aexp^0,w,c
 11585  0017E4  B0D8               	btfsc	status,0,c
 11586  0017E6  EFF7  F00B         	goto	u8251
 11587  0017EA  EFF9  F00B         	goto	u8250
 11588  0017EE                     u8251:
 11589  0017EE  EF20  F00C         	goto	l8221
 11590  0017F2                     u8250:
 11591  0017F2  AC40               	btfss	___fladd@signs^0,6,c
 11592  0017F4  EFFE  F00B         	goto	u8261
 11593  0017F8  EF00  F00C         	goto	u8260
 11594  0017FC                     u8261:
 11595  0017FC  EF02  F00C         	goto	l8191
 11596  001800                     u8260:
 11597  001800  0E80               	movlw	128
 11598  001802  1A40               	xorwf	___fladd@signs^0,f,c
 11599  001804                     l8191:
 11600  001804  C042  F043         	movff	___fladd@bexp,___fladd@grs
 11601  001808  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11602  00180C  C043  F041         	movff	___fladd@grs,___fladd@aexp
 11603  001810  C034  F043         	movff	___fladd@b,___fladd@grs
 11604  001814  C038  F034         	movff	___fladd@a,___fladd@b
 11605  001818  C043  F038         	movff	___fladd@grs,___fladd@a
 11606  00181C  C035  F043         	movff	___fladd@b+1,___fladd@grs
 11607  001820  C039  F035         	movff	___fladd@a+1,___fladd@b+1
 11608  001824  C043  F039         	movff	___fladd@grs,___fladd@a+1
 11609  001828  C036  F043         	movff	___fladd@b+2,___fladd@grs
 11610  00182C  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
 11611  001830  C043  F03A         	movff	___fladd@grs,___fladd@a+2
 11612  001834  C037  F043         	movff	___fladd@b+3,___fladd@grs
 11613  001838  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
 11614  00183C  C043  F03B         	movff	___fladd@grs,___fladd@a+3
 11615  001840                     l8221:
 11616  001840  0E00               	movlw	0
 11617  001842  6E43               	movwf	___fladd@grs^0,c
 11618  001844  5042               	movf	___fladd@bexp^0,w,c
 11619  001846  C041  F03C         	movff	___fladd@aexp,??___fladd
 11620  00184A  6A3D               	clrf	(??___fladd+1)^0,c
 11621  00184C  5E3C               	subwf	??___fladd^0,f,c
 11622  00184E  0E00               	movlw	0
 11623  001850  5A3D               	subwfb	(??___fladd+1)^0,f,c
 11624  001852  BE3D               	btfsc	(??___fladd+1)^0,7,c
 11625  001854  EF35  F00C         	goto	u8271
 11626  001858  503D               	movf	(??___fladd+1)^0,w,c
 11627  00185A  E109               	bnz	u8270
 11628  00185C  0E1A               	movlw	26
 11629  00185E  5C3C               	subwf	??___fladd^0,w,c
 11630  001860  A0D8               	btfss	status,0,c
 11631  001862  EF35  F00C         	goto	u8271
 11632  001866  EF37  F00C         	goto	u8270
 11633  00186A                     u8271:
 11634  00186A  EF6E  F00C         	goto	l1490
 11635  00186E                     u8270:
 11636  00186E  5034               	movf	___fladd@b^0,w,c
 11637  001870  1035               	iorwf	(___fladd@b+1)^0,w,c
 11638  001872  1036               	iorwf	(___fladd@b+2)^0,w,c
 11639  001874  1037               	iorwf	(___fladd@b+3)^0,w,c
 11640  001876  A4D8               	btfss	status,2,c
 11641  001878  EF40  F00C         	goto	u8281
 11642  00187C  EF43  F00C         	goto	u8280
 11643  001880                     u8281:
 11644  001880  0E01               	movlw	1
 11645  001882  EF44  F00C         	goto	u8290
 11646  001886                     u8280:
 11647  001886  0E00               	movlw	0
 11648  001888                     u8290:
 11649  001888  6E43               	movwf	___fladd@grs^0,c
 11650  00188A  0E00               	movlw	0
 11651  00188C  6E34               	movwf	___fladd@b^0,c
 11652  00188E  0E00               	movlw	0
 11653  001890  6E35               	movwf	(___fladd@b+1)^0,c
 11654  001892  0E00               	movlw	0
 11655  001894  6E36               	movwf	(___fladd@b+2)^0,c
 11656  001896  0E00               	movlw	0
 11657  001898  6E37               	movwf	(___fladd@b+3)^0,c
 11658  00189A  C041  F042         	movff	___fladd@aexp,___fladd@bexp
 11659  00189E  EF77  F00C         	goto	l1489
 11660  0018A2                     l1491:
 11661  0018A2  A043               	btfss	___fladd@grs^0,0,c
 11662  0018A4  EF56  F00C         	goto	u8301
 11663  0018A8  EF58  F00C         	goto	u8300
 11664  0018AC                     u8301:
 11665  0018AC  EF5E  F00C         	goto	l8233
 11666  0018B0                     u8300:
 11667  0018B0  90D8               	bcf	status,0,c
 11668  0018B2  3043               	rrcf	___fladd@grs^0,w,c
 11669  0018B4  0901               	iorlw	1
 11670  0018B6  6E43               	movwf	___fladd@grs^0,c
 11671  0018B8  EF60  F00C         	goto	l8235
 11672  0018BC                     l8233:
 11673  0018BC  90D8               	bcf	status,0,c
 11674  0018BE  3243               	rrcf	___fladd@grs^0,f,c
 11675  0018C0                     l8235:
 11676  0018C0  A034               	btfss	___fladd@b^0,0,c
 11677  0018C2  EF65  F00C         	goto	u8311
 11678  0018C6  EF67  F00C         	goto	u8310
 11679  0018CA                     u8311:
 11680  0018CA  EF68  F00C         	goto	l8239
 11681  0018CE                     u8310:
 11682  0018CE  8E43               	bsf	___fladd@grs^0,7,c
 11683  0018D0                     l8239:
 11684  0018D0  3437               	rlcf	(___fladd@b+3)^0,w,c
 11685  0018D2  3237               	rrcf	(___fladd@b+3)^0,f,c
 11686  0018D4  3236               	rrcf	(___fladd@b+2)^0,f,c
 11687  0018D6  3235               	rrcf	(___fladd@b+1)^0,f,c
 11688  0018D8  3234               	rrcf	___fladd@b^0,f,c
 11689  0018DA  2A42               	incf	___fladd@bexp^0,f,c
 11690  0018DC                     l1490:
 11691  0018DC  5041               	movf	___fladd@aexp^0,w,c
 11692  0018DE  5C42               	subwf	___fladd@bexp^0,w,c
 11693  0018E0  A0D8               	btfss	status,0,c
 11694  0018E2  EF75  F00C         	goto	u8321
 11695  0018E6  EF77  F00C         	goto	u8320
 11696  0018EA                     u8321:
 11697  0018EA  EF51  F00C         	goto	l1491
 11698  0018EE                     u8320:
 11699  0018EE                     l1489:
 11700  0018EE  BC40               	btfsc	___fladd@signs^0,6,c
 11701  0018F0  EF7C  F00C         	goto	u8331
 11702  0018F4  EF7E  F00C         	goto	u8330
 11703  0018F8                     u8331:
 11704  0018F8  EFBE  F00C         	goto	l8267
 11705  0018FC                     u8330:
 11706  0018FC  5042               	movf	___fladd@bexp^0,w,c
 11707  0018FE  A4D8               	btfss	status,2,c
 11708  001900  EF84  F00C         	goto	u8341
 11709  001904  EF86  F00C         	goto	u8340
 11710  001908                     u8341:
 11711  001908  EF90  F00C         	goto	l8249
 11712  00190C                     u8340:
 11713  00190C  0E00               	movlw	0
 11714  00190E  6E34               	movwf	?___fladd^0,c
 11715  001910  0E00               	movlw	0
 11716  001912  6E35               	movwf	(?___fladd+1)^0,c
 11717  001914  0E00               	movlw	0
 11718  001916  6E36               	movwf	(?___fladd+2)^0,c
 11719  001918  0E00               	movlw	0
 11720  00191A  6E37               	movwf	(?___fladd+3)^0,c
 11721  00191C  EFDF  F00D         	goto	l1498
 11722  001920                     l8249:
 11723  001920  5038               	movf	___fladd@a^0,w,c
 11724  001922  2634               	addwf	___fladd@b^0,f,c
 11725  001924  5039               	movf	(___fladd@a+1)^0,w,c
 11726  001926  2235               	addwfc	(___fladd@b+1)^0,f,c
 11727  001928  503A               	movf	(___fladd@a+2)^0,w,c
 11728  00192A  2236               	addwfc	(___fladd@b+2)^0,f,c
 11729  00192C  503B               	movf	(___fladd@a+3)^0,w,c
 11730  00192E  2237               	addwfc	(___fladd@b+3)^0,f,c
 11731  001930  A037               	btfss	(___fladd@b+3)^0,0,c
 11732  001932  EF9D  F00C         	goto	u8351
 11733  001936  EF9F  F00C         	goto	u8350
 11734  00193A                     u8351:
 11735  00193A  EF4B  F00D         	goto	l8303
 11736  00193E                     u8350:
 11737  00193E  A043               	btfss	___fladd@grs^0,0,c
 11738  001940  EFA4  F00C         	goto	u8361
 11739  001944  EFA6  F00C         	goto	u8360
 11740  001948                     u8361:
 11741  001948  EFAC  F00C         	goto	l8257
 11742  00194C                     u8360:
 11743  00194C  90D8               	bcf	status,0,c
 11744  00194E  3043               	rrcf	___fladd@grs^0,w,c
 11745  001950  0901               	iorlw	1
 11746  001952  6E43               	movwf	___fladd@grs^0,c
 11747  001954  EFAE  F00C         	goto	l8259
 11748  001958                     l8257:
 11749  001958  90D8               	bcf	status,0,c
 11750  00195A  3243               	rrcf	___fladd@grs^0,f,c
 11751  00195C                     l8259:
 11752  00195C  A034               	btfss	___fladd@b^0,0,c
 11753  00195E  EFB3  F00C         	goto	u8371
 11754  001962  EFB5  F00C         	goto	u8370
 11755  001966                     u8371:
 11756  001966  EFB6  F00C         	goto	l8263
 11757  00196A                     u8370:
 11758  00196A  8E43               	bsf	___fladd@grs^0,7,c
 11759  00196C                     l8263:
 11760  00196C  3437               	rlcf	(___fladd@b+3)^0,w,c
 11761  00196E  3237               	rrcf	(___fladd@b+3)^0,f,c
 11762  001970  3236               	rrcf	(___fladd@b+2)^0,f,c
 11763  001972  3235               	rrcf	(___fladd@b+1)^0,f,c
 11764  001974  3234               	rrcf	___fladd@b^0,f,c
 11765  001976  2A42               	incf	___fladd@bexp^0,f,c
 11766  001978  EF4B  F00D         	goto	l8303
 11767  00197C                     l8267:
 11768  00197C  5038               	movf	___fladd@a^0,w,c
 11769  00197E  5C34               	subwf	___fladd@b^0,w,c
 11770  001980  5039               	movf	(___fladd@a+1)^0,w,c
 11771  001982  5835               	subwfb	(___fladd@b+1)^0,w,c
 11772  001984  503A               	movf	(___fladd@a+2)^0,w,c
 11773  001986  5836               	subwfb	(___fladd@b+2)^0,w,c
 11774  001988  5037               	movf	(___fladd@b+3)^0,w,c
 11775  00198A  0A80               	xorlw	128
 11776  00198C  6E3C               	movwf	??___fladd^0,c
 11777  00198E  503B               	movf	(___fladd@a+3)^0,w,c
 11778  001990  0A80               	xorlw	128
 11779  001992  583C               	subwfb	??___fladd^0,w,c
 11780  001994  B0D8               	btfsc	status,0,c
 11781  001996  EFCF  F00C         	goto	u8381
 11782  00199A  EFD1  F00C         	goto	u8380
 11783  00199E                     u8381:
 11784  00199E  EFFC  F00C         	goto	l8277
 11785  0019A2                     u8380:
 11786  0019A2  5034               	movf	___fladd@b^0,w,c
 11787  0019A4  5C38               	subwf	___fladd@a^0,w,c
 11788  0019A6  6E3C               	movwf	??___fladd^0,c
 11789  0019A8  5035               	movf	(___fladd@b+1)^0,w,c
 11790  0019AA  5839               	subwfb	(___fladd@a+1)^0,w,c
 11791  0019AC  6E3D               	movwf	(??___fladd+1)^0,c
 11792  0019AE  5036               	movf	(___fladd@b+2)^0,w,c
 11793  0019B0  583A               	subwfb	(___fladd@a+2)^0,w,c
 11794  0019B2  6E3E               	movwf	(??___fladd+2)^0,c
 11795  0019B4  5037               	movf	(___fladd@b+3)^0,w,c
 11796  0019B6  583B               	subwfb	(___fladd@a+3)^0,w,c
 11797  0019B8  6E3F               	movwf	(??___fladd+3)^0,c
 11798  0019BA  0EFF               	movlw	255
 11799  0019BC  243C               	addwf	??___fladd^0,w,c
 11800  0019BE  6E34               	movwf	___fladd@b^0,c
 11801  0019C0  0EFF               	movlw	255
 11802  0019C2  203D               	addwfc	(??___fladd+1)^0,w,c
 11803  0019C4  6E35               	movwf	(___fladd@b+1)^0,c
 11804  0019C6  0EFF               	movlw	255
 11805  0019C8  203E               	addwfc	(??___fladd+2)^0,w,c
 11806  0019CA  6E36               	movwf	(___fladd@b+2)^0,c
 11807  0019CC  0EFF               	movlw	255
 11808  0019CE  203F               	addwfc	(??___fladd+3)^0,w,c
 11809  0019D0  6E37               	movwf	(___fladd@b+3)^0,c
 11810  0019D2  0E80               	movlw	128
 11811  0019D4  1A40               	xorwf	___fladd@signs^0,f,c
 11812  0019D6  6C43               	negf	___fladd@grs^0,c
 11813  0019D8  5043               	movf	___fladd@grs^0,w,c
 11814  0019DA  A4D8               	btfss	status,2,c
 11815  0019DC  EFF2  F00C         	goto	u8391
 11816  0019E0  EFF4  F00C         	goto	u8390
 11817  0019E4                     u8391:
 11818  0019E4  EF04  F00D         	goto	l1506
 11819  0019E8                     u8390:
 11820  0019E8  0E01               	movlw	1
 11821  0019EA  2634               	addwf	___fladd@b^0,f,c
 11822  0019EC  0E00               	movlw	0
 11823  0019EE  2235               	addwfc	(___fladd@b+1)^0,f,c
 11824  0019F0  2236               	addwfc	(___fladd@b+2)^0,f,c
 11825  0019F2  2237               	addwfc	(___fladd@b+3)^0,f,c
 11826  0019F4  EF04  F00D         	goto	l1506
 11827  0019F8                     l8277:
 11828  0019F8  5038               	movf	___fladd@a^0,w,c
 11829  0019FA  5E34               	subwf	___fladd@b^0,f,c
 11830  0019FC  5039               	movf	(___fladd@a+1)^0,w,c
 11831  0019FE  5A35               	subwfb	(___fladd@b+1)^0,f,c
 11832  001A00  503A               	movf	(___fladd@a+2)^0,w,c
 11833  001A02  5A36               	subwfb	(___fladd@b+2)^0,f,c
 11834  001A04  503B               	movf	(___fladd@a+3)^0,w,c
 11835  001A06  5A37               	subwfb	(___fladd@b+3)^0,f,c
 11836  001A08                     l1506:
 11837  001A08  5034               	movf	___fladd@b^0,w,c
 11838  001A0A  1035               	iorwf	(___fladd@b+1)^0,w,c
 11839  001A0C  1036               	iorwf	(___fladd@b+2)^0,w,c
 11840  001A0E  1037               	iorwf	(___fladd@b+3)^0,w,c
 11841  001A10  A4D8               	btfss	status,2,c
 11842  001A12  EF0D  F00D         	goto	u8401
 11843  001A16  EF0F  F00D         	goto	u8400
 11844  001A1A                     u8401:
 11845  001A1A  EF44  F00D         	goto	l8301
 11846  001A1E                     u8400:
 11847  001A1E  5043               	movf	___fladd@grs^0,w,c
 11848  001A20  A4D8               	btfss	status,2,c
 11849  001A22  EF15  F00D         	goto	u8411
 11850  001A26  EF17  F00D         	goto	u8410
 11851  001A2A                     u8411:
 11852  001A2A  EF44  F00D         	goto	l8301
 11853  001A2E                     u8410:
 11854  001A2E  0E00               	movlw	0
 11855  001A30  6E34               	movwf	?___fladd^0,c
 11856  001A32  0E00               	movlw	0
 11857  001A34  6E35               	movwf	(?___fladd+1)^0,c
 11858  001A36  0E00               	movlw	0
 11859  001A38  6E36               	movwf	(?___fladd+2)^0,c
 11860  001A3A  0E00               	movlw	0
 11861  001A3C  6E37               	movwf	(?___fladd+3)^0,c
 11862  001A3E  EFDF  F00D         	goto	l1498
 11863  001A42                     l8285:
 11864  001A42  90D8               	bcf	status,0,c
 11865  001A44  3634               	rlcf	___fladd@b^0,f,c
 11866  001A46  3635               	rlcf	(___fladd@b+1)^0,f,c
 11867  001A48  3636               	rlcf	(___fladd@b+2)^0,f,c
 11868  001A4A  3637               	rlcf	(___fladd@b+3)^0,f,c
 11869  001A4C  AE43               	btfss	___fladd@grs^0,7,c
 11870  001A4E  EF2B  F00D         	goto	u8421
 11871  001A52  EF2D  F00D         	goto	u8420
 11872  001A56                     u8421:
 11873  001A56  EF2E  F00D         	goto	l8291
 11874  001A5A                     u8420:
 11875  001A5A  8034               	bsf	___fladd@b^0,0,c
 11876  001A5C                     l8291:
 11877  001A5C  A043               	btfss	___fladd@grs^0,0,c
 11878  001A5E  EF33  F00D         	goto	u8431
 11879  001A62  EF35  F00D         	goto	u8430
 11880  001A66                     u8431:
 11881  001A66  EF39  F00D         	goto	l8295
 11882  001A6A                     u8430:
 11883  001A6A  80D8               	bsf	status,0,c
 11884  001A6C  3643               	rlcf	___fladd@grs^0,f,c
 11885  001A6E  EF3B  F00D         	goto	l8297
 11886  001A72                     l8295:
 11887  001A72  90D8               	bcf	status,0,c
 11888  001A74  3643               	rlcf	___fladd@grs^0,f,c
 11889  001A76                     l8297:
 11890  001A76  5042               	movf	___fladd@bexp^0,w,c
 11891  001A78  B4D8               	btfsc	status,2,c
 11892  001A7A  EF41  F00D         	goto	u8441
 11893  001A7E  EF43  F00D         	goto	u8440
 11894  001A82                     u8441:
 11895  001A82  EF44  F00D         	goto	l8301
 11896  001A86                     u8440:
 11897  001A86  0642               	decf	___fladd@bexp^0,f,c
 11898  001A88                     l8301:
 11899  001A88  AE36               	btfss	(___fladd@b+2)^0,7,c
 11900  001A8A  EF49  F00D         	goto	u8451
 11901  001A8E  EF4B  F00D         	goto	u8450
 11902  001A92                     u8451:
 11903  001A92  EF21  F00D         	goto	l8285
 11904  001A96                     u8450:
 11905  001A96                     l8303:
 11906  001A96  0E00               	movlw	0
 11907  001A98  6E41               	movwf	___fladd@aexp^0,c
 11908  001A9A  AE43               	btfss	___fladd@grs^0,7,c
 11909  001A9C  EF52  F00D         	goto	u8461
 11910  001AA0  EF54  F00D         	goto	u8460
 11911  001AA4                     u8461:
 11912  001AA4  EF6C  F00D         	goto	l1515
 11913  001AA8                     u8460:
 11914  001AA8  C043  F03C         	movff	___fladd@grs,??___fladd
 11915  001AAC  0E7F               	movlw	127
 11916  001AAE  163C               	andwf	??___fladd^0,f,c
 11917  001AB0  B4D8               	btfsc	status,2,c
 11918  001AB2  EF5D  F00D         	goto	u8471
 11919  001AB6  EF5F  F00D         	goto	u8470
 11920  001ABA                     u8471:
 11921  001ABA  EF63  F00D         	goto	l1516
 11922  001ABE                     u8470:
 11923  001ABE                     l8309:
 11924  001ABE  0E01               	movlw	1
 11925  001AC0  6E41               	movwf	___fladd@aexp^0,c
 11926  001AC2  EF6C  F00D         	goto	l1515
 11927  001AC6                     l1516:
 11928  001AC6  A034               	btfss	___fladd@b^0,0,c
 11929  001AC8  EF68  F00D         	goto	u8481
 11930  001ACC  EF6A  F00D         	goto	u8480
 11931  001AD0                     u8481:
 11932  001AD0  EF6C  F00D         	goto	l1515
 11933  001AD4                     u8480:
 11934  001AD4  EF5F  F00D         	goto	l8309
 11935  001AD8                     l1515:
 11936  001AD8  5041               	movf	___fladd@aexp^0,w,c
 11937  001ADA  B4D8               	btfsc	status,2,c
 11938  001ADC  EF72  F00D         	goto	u8491
 11939  001AE0  EF74  F00D         	goto	u8490
 11940  001AE4                     u8491:
 11941  001AE4  EF9F  F00D         	goto	l8321
 11942  001AE8                     u8490:
 11943  001AE8  0E01               	movlw	1
 11944  001AEA  2634               	addwf	___fladd@b^0,f,c
 11945  001AEC  0E00               	movlw	0
 11946  001AEE  2235               	addwfc	(___fladd@b+1)^0,f,c
 11947  001AF0  2236               	addwfc	(___fladd@b+2)^0,f,c
 11948  001AF2  2237               	addwfc	(___fladd@b+3)^0,f,c
 11949  001AF4  A037               	btfss	(___fladd@b+3)^0,0,c
 11950  001AF6  EF7F  F00D         	goto	u8501
 11951  001AFA  EF81  F00D         	goto	u8500
 11952  001AFE                     u8501:
 11953  001AFE  EF9F  F00D         	goto	l8321
 11954  001B02                     u8500:
 11955  001B02  C034  F03C         	movff	___fladd@b,??___fladd
 11956  001B06  C035  F03D         	movff	___fladd@b+1,??___fladd+1
 11957  001B0A  C036  F03E         	movff	___fladd@b+2,??___fladd+2
 11958  001B0E  C037  F03F         	movff	___fladd@b+3,??___fladd+3
 11959  001B12  343F               	rlcf	(??___fladd+3)^0,w,c
 11960  001B14  323F               	rrcf	(??___fladd+3)^0,f,c
 11961  001B16  323E               	rrcf	(??___fladd+2)^0,f,c
 11962  001B18  323D               	rrcf	(??___fladd+1)^0,f,c
 11963  001B1A  323C               	rrcf	??___fladd^0,f,c
 11964  001B1C  C03C  F034         	movff	??___fladd,___fladd@b
 11965  001B20  C03D  F035         	movff	??___fladd+1,___fladd@b+1
 11966  001B24  C03E  F036         	movff	??___fladd+2,___fladd@b+2
 11967  001B28  C03F  F037         	movff	??___fladd+3,___fladd@b+3
 11968  001B2C  2842               	incf	___fladd@bexp^0,w,c
 11969  001B2E  B4D8               	btfsc	status,2,c
 11970  001B30  EF9C  F00D         	goto	u8511
 11971  001B34  EF9E  F00D         	goto	u8510
 11972  001B38                     u8511:
 11973  001B38  EF9F  F00D         	goto	l8321
 11974  001B3C                     u8510:
 11975  001B3C  2A42               	incf	___fladd@bexp^0,f,c
 11976  001B3E                     l8321:
 11977  001B3E  2842               	incf	___fladd@bexp^0,w,c
 11978  001B40  B4D8               	btfsc	status,2,c
 11979  001B42  EFA5  F00D         	goto	u8521
 11980  001B46  EFA7  F00D         	goto	u8520
 11981  001B4A                     u8521:
 11982  001B4A  EFAF  F00D         	goto	l8325
 11983  001B4E                     u8520:
 11984  001B4E  5042               	movf	___fladd@bexp^0,w,c
 11985  001B50  A4D8               	btfss	status,2,c
 11986  001B52  EFAD  F00D         	goto	u8531
 11987  001B56  EFAF  F00D         	goto	u8530
 11988  001B5A                     u8531:
 11989  001B5A  EFC1  F00D         	goto	l8329
 11990  001B5E                     u8530:
 11991  001B5E                     l8325:
 11992  001B5E  0E00               	movlw	0
 11993  001B60  6E34               	movwf	___fladd@b^0,c
 11994  001B62  0E00               	movlw	0
 11995  001B64  6E35               	movwf	(___fladd@b+1)^0,c
 11996  001B66  0E00               	movlw	0
 11997  001B68  6E36               	movwf	(___fladd@b+2)^0,c
 11998  001B6A  0E00               	movlw	0
 11999  001B6C  6E37               	movwf	(___fladd@b+3)^0,c
 12000  001B6E  5042               	movf	___fladd@bexp^0,w,c
 12001  001B70  A4D8               	btfss	status,2,c
 12002  001B72  EFBD  F00D         	goto	u8541
 12003  001B76  EFBF  F00D         	goto	u8540
 12004  001B7A                     u8541:
 12005  001B7A  EFC1  F00D         	goto	l8329
 12006  001B7E                     u8540:
 12007  001B7E  0E00               	movlw	0
 12008  001B80  6E40               	movwf	___fladd@signs^0,c
 12009  001B82                     l8329:
 12010  001B82  A042               	btfss	___fladd@bexp^0,0,c
 12011  001B84  EFC6  F00D         	goto	u8551
 12012  001B88  EFC8  F00D         	goto	u8550
 12013  001B8C                     u8551:
 12014  001B8C  EFCB  F00D         	goto	l8333
 12015  001B90                     u8550:
 12016  001B90  8E36               	bsf	(___fladd@b+2)^0,7,c
 12017  001B92  EFCC  F00D         	goto	l8335
 12018  001B96                     l8333:
 12019  001B96  9E36               	bcf	(___fladd@b+2)^0,7,c
 12020  001B98                     l8335:
 12021  001B98  90D8               	bcf	status,0,c
 12022  001B9A  3042               	rrcf	___fladd@bexp^0,w,c
 12023  001B9C  6E37               	movwf	(___fladd@b+3)^0,c
 12024  001B9E  AE40               	btfss	___fladd@signs^0,7,c
 12025  001BA0  EFD4  F00D         	goto	u8561
 12026  001BA4  EFD6  F00D         	goto	u8560
 12027  001BA8                     u8561:
 12028  001BA8  EFD7  F00D         	goto	l8341
 12029  001BAC                     u8560:
 12030  001BAC  8E37               	bsf	(___fladd@b+3)^0,7,c
 12031  001BAE                     l8341:
 12032  001BAE  C034  F034         	movff	___fladd@b,?___fladd
 12033  001BB2  C035  F035         	movff	___fladd@b+1,?___fladd+1
 12034  001BB6  C036  F036         	movff	___fladd@b+2,?___fladd+2
 12035  001BBA  C037  F037         	movff	___fladd@b+3,?___fladd+3
 12036  001BBE                     l1498:
 12037  001BBE  0012               	return		;funcret
 12038  001BC0                     __end_of___fladd:
 12039                           	opt callstack 0
 12040                           
 12041 ;; *************** function ___flneg *****************
 12042 ;; Defined at:
 12043 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  f1              4    5[COMRAM] unsigned char 
 12046 ;; Auto vars:     Size  Location     Type
 12047 ;;		None
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  4    5[COMRAM] unsigned char 
 12050 ;; Registers used:
 12051 ;;		wreg, status,2, status,0
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/0
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12057 ;;      Params:         4       0       0       0       0       0       0       0       0
 12058 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12059 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12060 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12061 ;;Total ram usage:        4 bytes
 12062 ;; Hardware stack levels used:    1
 12063 ;; Hardware stack levels required when called:    2
 12064 ;; This function calls:
 12065 ;;		Nothing
 12066 ;; This function is called by:
 12067 ;;		_efgtoa
 12068 ;;		_roundf
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           	psect	text45
 12073  005544                     __ptext45:
 12074                           	opt callstack 0
 12075  005544                     ___flneg:
 12076                           	opt callstack 23
 12077  005544  5006               	movf	___flneg@f1^0,w,c
 12078  005546  1007               	iorwf	(___flneg@f1+1)^0,w,c
 12079  005548  1008               	iorwf	(___flneg@f1+2)^0,w,c
 12080  00554A  1009               	iorwf	(___flneg@f1+3)^0,w,c
 12081  00554C  B4D8               	btfsc	status,2,c
 12082  00554E  EFAB  F02A         	goto	u9611
 12083  005552  EFAD  F02A         	goto	u9610
 12084  005556                     u9611:
 12085  005556  EFB5  F02A         	goto	l8925
 12086  00555A                     u9610:
 12087  00555A  0E00               	movlw	0
 12088  00555C  1A06               	xorwf	___flneg@f1^0,f,c
 12089  00555E  0E00               	movlw	0
 12090  005560  1A07               	xorwf	(___flneg@f1+1)^0,f,c
 12091  005562  0E00               	movlw	0
 12092  005564  1A08               	xorwf	(___flneg@f1+2)^0,f,c
 12093  005566  0E80               	movlw	128
 12094  005568  1A09               	xorwf	(___flneg@f1+3)^0,f,c
 12095  00556A                     l8925:
 12096  00556A  C006  F006         	movff	___flneg@f1,?___flneg
 12097  00556E  C007  F007         	movff	___flneg@f1+1,?___flneg+1
 12098  005572  C008  F008         	movff	___flneg@f1+2,?___flneg+2
 12099  005576  C009  F009         	movff	___flneg@f1+3,?___flneg+3
 12100  00557A  0012               	return		;funcret
 12101  00557C                     __end_of___flneg:
 12102                           	opt callstack 0
 12103                           
 12104 ;; *************** function ___flmul *****************
 12105 ;; Defined at:
 12106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;  b               4   26[COMRAM] unsigned char 
 12109 ;;  a               4   30[COMRAM] unsigned char 
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;  prod            4   45[COMRAM] struct .
 12112 ;;  grs             4   40[COMRAM] unsigned long 
 12113 ;;  temp            2   49[COMRAM] struct .
 12114 ;;  bexp            1   44[COMRAM] unsigned char 
 12115 ;;  aexp            1   39[COMRAM] unsigned char 
 12116 ;;  sign            1   38[COMRAM] unsigned char 
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  4   26[COMRAM] unsigned char 
 12119 ;; Registers used:
 12120 ;;		wreg, status,2, status,0, prodl, prodh
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12126 ;;      Params:         8       0       0       0       0       0       0       0       0
 12127 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12128 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12129 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12130 ;;Total ram usage:       25 bytes
 12131 ;; Hardware stack levels used:    1
 12132 ;; Hardware stack levels required when called:    2
 12133 ;; This function calls:
 12134 ;;		Nothing
 12135 ;; This function is called by:
 12136 ;;		_pwmDuty
 12137 ;;		_PID
 12138 ;;		_efgtoa
 12139 ;;		_roundf
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text46
 12144  001BC0                     __ptext46:
 12145                           	opt callstack 0
 12146  001BC0                     ___flmul:
 12147                           	opt callstack 23
 12148  001BC0  501E               	movf	(___flmul@b+3)^0,w,c
 12149  001BC2  0B80               	andlw	128
 12150  001BC4  6E27               	movwf	___flmul@sign^0,c
 12151  001BC6  501E               	movf	(___flmul@b+3)^0,w,c
 12152  001BC8  241E               	addwf	(___flmul@b+3)^0,w,c
 12153  001BCA  6E2D               	movwf	___flmul@bexp^0,c
 12154  001BCC  AE1D               	btfss	(___flmul@b+2)^0,7,c
 12155  001BCE  EFEB  F00D         	goto	u9221
 12156  001BD2  EFED  F00D         	goto	u9220
 12157  001BD6                     u9221:
 12158  001BD6  EFEE  F00D         	goto	l8673
 12159  001BDA                     u9220:
 12160  001BDA  802D               	bsf	___flmul@bexp^0,0,c
 12161  001BDC                     l8673:
 12162  001BDC  502D               	movf	___flmul@bexp^0,w,c
 12163  001BDE  B4D8               	btfsc	status,2,c
 12164  001BE0  EFF4  F00D         	goto	u9231
 12165  001BE4  EFF6  F00D         	goto	u9230
 12166  001BE8                     u9231:
 12167  001BE8  EF09  F00E         	goto	l8681
 12168  001BEC                     u9230:
 12169  001BEC  282D               	incf	___flmul@bexp^0,w,c
 12170  001BEE  A4D8               	btfss	status,2,c
 12171  001BF0  EFFC  F00D         	goto	u9241
 12172  001BF4  EFFE  F00D         	goto	u9240
 12173  001BF8                     u9241:
 12174  001BF8  EF06  F00E         	goto	l8679
 12175  001BFC                     u9240:
 12176  001BFC  0E00               	movlw	0
 12177  001BFE  6E1B               	movwf	___flmul@b^0,c
 12178  001C00  0E00               	movlw	0
 12179  001C02  6E1C               	movwf	(___flmul@b+1)^0,c
 12180  001C04  0E00               	movlw	0
 12181  001C06  6E1D               	movwf	(___flmul@b+2)^0,c
 12182  001C08  0E00               	movlw	0
 12183  001C0A  6E1E               	movwf	(___flmul@b+3)^0,c
 12184  001C0C                     l8679:
 12185  001C0C  8E1D               	bsf	(___flmul@b+2)^0,7,c
 12186  001C0E  EF11  F00E         	goto	l8683
 12187  001C12                     l8681:
 12188  001C12  0E00               	movlw	0
 12189  001C14  6E1B               	movwf	___flmul@b^0,c
 12190  001C16  0E00               	movlw	0
 12191  001C18  6E1C               	movwf	(___flmul@b+1)^0,c
 12192  001C1A  0E00               	movlw	0
 12193  001C1C  6E1D               	movwf	(___flmul@b+2)^0,c
 12194  001C1E  0E00               	movlw	0
 12195  001C20  6E1E               	movwf	(___flmul@b+3)^0,c
 12196  001C22                     l8683:
 12197  001C22  5022               	movf	(___flmul@a+3)^0,w,c
 12198  001C24  0B80               	andlw	128
 12199  001C26  1A27               	xorwf	___flmul@sign^0,f,c
 12200  001C28  5022               	movf	(___flmul@a+3)^0,w,c
 12201  001C2A  2422               	addwf	(___flmul@a+3)^0,w,c
 12202  001C2C  6E28               	movwf	___flmul@aexp^0,c
 12203  001C2E  AE21               	btfss	(___flmul@a+2)^0,7,c
 12204  001C30  EF1C  F00E         	goto	u9251
 12205  001C34  EF1E  F00E         	goto	u9250
 12206  001C38                     u9251:
 12207  001C38  EF1F  F00E         	goto	l8691
 12208  001C3C                     u9250:
 12209  001C3C  8028               	bsf	___flmul@aexp^0,0,c
 12210  001C3E                     l8691:
 12211  001C3E  5028               	movf	___flmul@aexp^0,w,c
 12212  001C40  B4D8               	btfsc	status,2,c
 12213  001C42  EF25  F00E         	goto	u9261
 12214  001C46  EF27  F00E         	goto	u9260
 12215  001C4A                     u9261:
 12216  001C4A  EF3A  F00E         	goto	l8699
 12217  001C4E                     u9260:
 12218  001C4E  2828               	incf	___flmul@aexp^0,w,c
 12219  001C50  A4D8               	btfss	status,2,c
 12220  001C52  EF2D  F00E         	goto	u9271
 12221  001C56  EF2F  F00E         	goto	u9270
 12222  001C5A                     u9271:
 12223  001C5A  EF37  F00E         	goto	l8697
 12224  001C5E                     u9270:
 12225  001C5E  0E00               	movlw	0
 12226  001C60  6E1F               	movwf	___flmul@a^0,c
 12227  001C62  0E00               	movlw	0
 12228  001C64  6E20               	movwf	(___flmul@a+1)^0,c
 12229  001C66  0E00               	movlw	0
 12230  001C68  6E21               	movwf	(___flmul@a+2)^0,c
 12231  001C6A  0E00               	movlw	0
 12232  001C6C  6E22               	movwf	(___flmul@a+3)^0,c
 12233  001C6E                     l8697:
 12234  001C6E  8E21               	bsf	(___flmul@a+2)^0,7,c
 12235  001C70  EF42  F00E         	goto	l1575
 12236  001C74                     l8699:
 12237  001C74  0E00               	movlw	0
 12238  001C76  6E1F               	movwf	___flmul@a^0,c
 12239  001C78  0E00               	movlw	0
 12240  001C7A  6E20               	movwf	(___flmul@a+1)^0,c
 12241  001C7C  0E00               	movlw	0
 12242  001C7E  6E21               	movwf	(___flmul@a+2)^0,c
 12243  001C80  0E00               	movlw	0
 12244  001C82  6E22               	movwf	(___flmul@a+3)^0,c
 12245  001C84                     l1575:
 12246  001C84  5028               	movf	___flmul@aexp^0,w,c
 12247  001C86  B4D8               	btfsc	status,2,c
 12248  001C88  EF48  F00E         	goto	u9281
 12249  001C8C  EF4A  F00E         	goto	u9280
 12250  001C90                     u9281:
 12251  001C90  EF52  F00E         	goto	l8703
 12252  001C94                     u9280:
 12253  001C94  502D               	movf	___flmul@bexp^0,w,c
 12254  001C96  A4D8               	btfss	status,2,c
 12255  001C98  EF50  F00E         	goto	u9291
 12256  001C9C  EF52  F00E         	goto	u9290
 12257  001CA0                     u9291:
 12258  001CA0  EF5C  F00E         	goto	l8707
 12259  001CA4                     u9290:
 12260  001CA4                     l8703:
 12261  001CA4  0E00               	movlw	0
 12262  001CA6  6E1B               	movwf	?___flmul^0,c
 12263  001CA8  0E00               	movlw	0
 12264  001CAA  6E1C               	movwf	(?___flmul+1)^0,c
 12265  001CAC  0E00               	movlw	0
 12266  001CAE  6E1D               	movwf	(?___flmul+2)^0,c
 12267  001CB0  0E00               	movlw	0
 12268  001CB2  6E1E               	movwf	(?___flmul+3)^0,c
 12269  001CB4  EFF4  F00F         	goto	l1579
 12270  001CB8                     l8707:
 12271  001CB8  5021               	movf	(___flmul@a+2)^0,w,c
 12272  001CBA  021B               	mulwf	___flmul@b^0,c
 12273  001CBC  CFF3 F032          	movff	prodl,___flmul@temp
 12274  001CC0  CFF4 F033          	movff	prodh,___flmul@temp+1
 12275  001CC4  5032               	movf	___flmul@temp^0,w,c
 12276  001CC6  6E29               	movwf	___flmul@grs^0,c
 12277  001CC8  6A2A               	clrf	(___flmul@grs+1)^0,c
 12278  001CCA  6A2B               	clrf	(___flmul@grs+2)^0,c
 12279  001CCC  6A2C               	clrf	(___flmul@grs+3)^0,c
 12280  001CCE  5033               	movf	(___flmul@temp+1)^0,w,c
 12281  001CD0  6E2E               	movwf	___flmul@prod^0,c
 12282  001CD2  6A2F               	clrf	(___flmul@prod+1)^0,c
 12283  001CD4  6A30               	clrf	(___flmul@prod+2)^0,c
 12284  001CD6  6A31               	clrf	(___flmul@prod+3)^0,c
 12285  001CD8  5020               	movf	(___flmul@a+1)^0,w,c
 12286  001CDA  021C               	mulwf	(___flmul@b+1)^0,c
 12287  001CDC  CFF3 F032          	movff	prodl,___flmul@temp
 12288  001CE0  CFF4 F033          	movff	prodh,___flmul@temp+1
 12289  001CE4  5032               	movf	___flmul@temp^0,w,c
 12290  001CE6  2629               	addwf	___flmul@grs^0,f,c
 12291  001CE8  0E00               	movlw	0
 12292  001CEA  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12293  001CEC  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12294  001CEE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12295  001CF0  5033               	movf	(___flmul@temp+1)^0,w,c
 12296  001CF2  262E               	addwf	___flmul@prod^0,f,c
 12297  001CF4  0E00               	movlw	0
 12298  001CF6  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12299  001CF8  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12300  001CFA  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12301  001CFC  501F               	movf	___flmul@a^0,w,c
 12302  001CFE  021D               	mulwf	(___flmul@b+2)^0,c
 12303  001D00  CFF3 F032          	movff	prodl,___flmul@temp
 12304  001D04  CFF4 F033          	movff	prodh,___flmul@temp+1
 12305  001D08  5032               	movf	___flmul@temp^0,w,c
 12306  001D0A  2629               	addwf	___flmul@grs^0,f,c
 12307  001D0C  0E00               	movlw	0
 12308  001D0E  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12309  001D10  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12310  001D12  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12311  001D14  5033               	movf	(___flmul@temp+1)^0,w,c
 12312  001D16  262E               	addwf	___flmul@prod^0,f,c
 12313  001D18  0E00               	movlw	0
 12314  001D1A  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12315  001D1C  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12316  001D1E  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12317  001D20  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12318  001D24  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12319  001D28  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12320  001D2C  6A29               	clrf	___flmul@grs^0,c
 12321  001D2E  501F               	movf	___flmul@a^0,w,c
 12322  001D30  021C               	mulwf	(___flmul@b+1)^0,c
 12323  001D32  CFF3 F032          	movff	prodl,___flmul@temp
 12324  001D36  CFF4 F033          	movff	prodh,___flmul@temp+1
 12325  001D3A  5032               	movf	___flmul@temp^0,w,c
 12326  001D3C  2629               	addwf	___flmul@grs^0,f,c
 12327  001D3E  5033               	movf	(___flmul@temp+1)^0,w,c
 12328  001D40  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12329  001D42  0E00               	movlw	0
 12330  001D44  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12331  001D46  0E00               	movlw	0
 12332  001D48  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12333  001D4A  5020               	movf	(___flmul@a+1)^0,w,c
 12334  001D4C  021B               	mulwf	___flmul@b^0,c
 12335  001D4E  CFF3 F032          	movff	prodl,___flmul@temp
 12336  001D52  CFF4 F033          	movff	prodh,___flmul@temp+1
 12337  001D56  5032               	movf	___flmul@temp^0,w,c
 12338  001D58  2629               	addwf	___flmul@grs^0,f,c
 12339  001D5A  5033               	movf	(___flmul@temp+1)^0,w,c
 12340  001D5C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12341  001D5E  0E00               	movlw	0
 12342  001D60  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12343  001D62  0E00               	movlw	0
 12344  001D64  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12345  001D66  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12346  001D6A  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12347  001D6E  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12348  001D72  6A29               	clrf	___flmul@grs^0,c
 12349  001D74  501F               	movf	___flmul@a^0,w,c
 12350  001D76  021B               	mulwf	___flmul@b^0,c
 12351  001D78  CFF3 F032          	movff	prodl,___flmul@temp
 12352  001D7C  CFF4 F033          	movff	prodh,___flmul@temp+1
 12353  001D80  5032               	movf	___flmul@temp^0,w,c
 12354  001D82  2629               	addwf	___flmul@grs^0,f,c
 12355  001D84  5033               	movf	(___flmul@temp+1)^0,w,c
 12356  001D86  222A               	addwfc	(___flmul@grs+1)^0,f,c
 12357  001D88  0E00               	movlw	0
 12358  001D8A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 12359  001D8C  0E00               	movlw	0
 12360  001D8E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 12361  001D90  5021               	movf	(___flmul@a+2)^0,w,c
 12362  001D92  021C               	mulwf	(___flmul@b+1)^0,c
 12363  001D94  CFF3 F032          	movff	prodl,___flmul@temp
 12364  001D98  CFF4 F033          	movff	prodh,___flmul@temp+1
 12365  001D9C  5032               	movf	___flmul@temp^0,w,c
 12366  001D9E  262E               	addwf	___flmul@prod^0,f,c
 12367  001DA0  5033               	movf	(___flmul@temp+1)^0,w,c
 12368  001DA2  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12369  001DA4  0E00               	movlw	0
 12370  001DA6  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12371  001DA8  0E00               	movlw	0
 12372  001DAA  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12373  001DAC  5020               	movf	(___flmul@a+1)^0,w,c
 12374  001DAE  021D               	mulwf	(___flmul@b+2)^0,c
 12375  001DB0  CFF3 F032          	movff	prodl,___flmul@temp
 12376  001DB4  CFF4 F033          	movff	prodh,___flmul@temp+1
 12377  001DB8  5032               	movf	___flmul@temp^0,w,c
 12378  001DBA  262E               	addwf	___flmul@prod^0,f,c
 12379  001DBC  5033               	movf	(___flmul@temp+1)^0,w,c
 12380  001DBE  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12381  001DC0  0E00               	movlw	0
 12382  001DC2  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12383  001DC4  0E00               	movlw	0
 12384  001DC6  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12385  001DC8  5021               	movf	(___flmul@a+2)^0,w,c
 12386  001DCA  021D               	mulwf	(___flmul@b+2)^0,c
 12387  001DCC  CFF3 F032          	movff	prodl,___flmul@temp
 12388  001DD0  CFF4 F033          	movff	prodh,___flmul@temp+1
 12389  001DD4  5032               	movf	___flmul@temp^0,w,c
 12390  001DD6  6E23               	movwf	??___flmul^0,c
 12391  001DD8  5033               	movf	(___flmul@temp+1)^0,w,c
 12392  001DDA  6E24               	movwf	(??___flmul+1)^0,c
 12393  001DDC  6A25               	clrf	(??___flmul+2)^0,c
 12394  001DDE  6A26               	clrf	(??___flmul+3)^0,c
 12395  001DE0  C025  F026         	movff	??___flmul+2,??___flmul+3
 12396  001DE4  C024  F025         	movff	??___flmul+1,??___flmul+2
 12397  001DE8  C023  F024         	movff	??___flmul,??___flmul+1
 12398  001DEC  6A23               	clrf	??___flmul^0,c
 12399  001DEE  5023               	movf	??___flmul^0,w,c
 12400  001DF0  262E               	addwf	___flmul@prod^0,f,c
 12401  001DF2  5024               	movf	(??___flmul+1)^0,w,c
 12402  001DF4  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12403  001DF6  5025               	movf	(??___flmul+2)^0,w,c
 12404  001DF8  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12405  001DFA  5026               	movf	(??___flmul+3)^0,w,c
 12406  001DFC  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12407  001DFE  C029  F023         	movff	___flmul@grs,??___flmul
 12408  001E02  C02A  F024         	movff	___flmul@grs+1,??___flmul+1
 12409  001E06  C02B  F025         	movff	___flmul@grs+2,??___flmul+2
 12410  001E0A  C02C  F026         	movff	___flmul@grs+3,??___flmul+3
 12411  001E0E  0E19               	movlw	25
 12412  001E10  EF0F  F00F         	goto	u9300
 12413  001E14                     u9305:
 12414  001E14  90D8               	bcf	status,0,c
 12415  001E16  3226               	rrcf	(??___flmul+3)^0,f,c
 12416  001E18  3225               	rrcf	(??___flmul+2)^0,f,c
 12417  001E1A  3224               	rrcf	(??___flmul+1)^0,f,c
 12418  001E1C  3223               	rrcf	??___flmul^0,f,c
 12419  001E1E                     u9300:
 12420  001E1E  2EE8               	decfsz	wreg,f,c
 12421  001E20  EF0A  F00F         	goto	u9305
 12422  001E24  5023               	movf	??___flmul^0,w,c
 12423  001E26  262E               	addwf	___flmul@prod^0,f,c
 12424  001E28  5024               	movf	(??___flmul+1)^0,w,c
 12425  001E2A  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12426  001E2C  5025               	movf	(??___flmul+2)^0,w,c
 12427  001E2E  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12428  001E30  5026               	movf	(??___flmul+3)^0,w,c
 12429  001E32  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12430  001E34  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 12431  001E38  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 12432  001E3C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 12433  001E40  6A29               	clrf	___flmul@grs^0,c
 12434  001E42  5028               	movf	___flmul@aexp^0,w,c
 12435  001E44  C02D  F023         	movff	___flmul@bexp,??___flmul
 12436  001E48  6A24               	clrf	(??___flmul+1)^0,c
 12437  001E4A  2623               	addwf	??___flmul^0,f,c
 12438  001E4C  0E00               	movlw	0
 12439  001E4E  2224               	addwfc	(??___flmul+1)^0,f,c
 12440  001E50  0E82               	movlw	130
 12441  001E52  2423               	addwf	??___flmul^0,w,c
 12442  001E54  6E32               	movwf	___flmul@temp^0,c
 12443  001E56  0EFF               	movlw	255
 12444  001E58  2024               	addwfc	(??___flmul+1)^0,w,c
 12445  001E5A  6E33               	movwf	(___flmul@temp+1)^0,c
 12446  001E5C  EF45  F00F         	goto	l8755
 12447  001E60                     l8749:
 12448  001E60  90D8               	bcf	status,0,c
 12449  001E62  362E               	rlcf	___flmul@prod^0,f,c
 12450  001E64  362F               	rlcf	(___flmul@prod+1)^0,f,c
 12451  001E66  3630               	rlcf	(___flmul@prod+2)^0,f,c
 12452  001E68  3631               	rlcf	(___flmul@prod+3)^0,f,c
 12453  001E6A  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12454  001E6C  EF3A  F00F         	goto	u9311
 12455  001E70  EF3C  F00F         	goto	u9310
 12456  001E74                     u9311:
 12457  001E74  EF3D  F00F         	goto	l1582
 12458  001E78                     u9310:
 12459  001E78  802E               	bsf	___flmul@prod^0,0,c
 12460  001E7A                     l1582:
 12461  001E7A  90D8               	bcf	status,0,c
 12462  001E7C  3629               	rlcf	___flmul@grs^0,f,c
 12463  001E7E  362A               	rlcf	(___flmul@grs+1)^0,f,c
 12464  001E80  362B               	rlcf	(___flmul@grs+2)^0,f,c
 12465  001E82  362C               	rlcf	(___flmul@grs+3)^0,f,c
 12466  001E84  0632               	decf	___flmul@temp^0,f,c
 12467  001E86  A0D8               	btfss	status,0,c
 12468  001E88  0633               	decf	(___flmul@temp+1)^0,f,c
 12469  001E8A                     l8755:
 12470  001E8A  AE30               	btfss	(___flmul@prod+2)^0,7,c
 12471  001E8C  EF4A  F00F         	goto	u9321
 12472  001E90  EF4C  F00F         	goto	u9320
 12473  001E94                     u9321:
 12474  001E94  EF30  F00F         	goto	l8749
 12475  001E98                     u9320:
 12476  001E98  0E00               	movlw	0
 12477  001E9A  6E28               	movwf	___flmul@aexp^0,c
 12478  001E9C  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 12479  001E9E  EF53  F00F         	goto	u9331
 12480  001EA2  EF55  F00F         	goto	u9330
 12481  001EA6                     u9331:
 12482  001EA6  EF79  F00F         	goto	l1584
 12483  001EAA                     u9330:
 12484  001EAA  0EFF               	movlw	255
 12485  001EAC  1429               	andwf	___flmul@grs^0,w,c
 12486  001EAE  6E23               	movwf	??___flmul^0,c
 12487  001EB0  0EFF               	movlw	255
 12488  001EB2  142A               	andwf	(___flmul@grs+1)^0,w,c
 12489  001EB4  6E24               	movwf	(??___flmul+1)^0,c
 12490  001EB6  0EFF               	movlw	255
 12491  001EB8  142B               	andwf	(___flmul@grs+2)^0,w,c
 12492  001EBA  6E25               	movwf	(??___flmul+2)^0,c
 12493  001EBC  0E7F               	movlw	127
 12494  001EBE  142C               	andwf	(___flmul@grs+3)^0,w,c
 12495  001EC0  6E26               	movwf	(??___flmul+3)^0,c
 12496  001EC2  5023               	movf	??___flmul^0,w,c
 12497  001EC4  1024               	iorwf	(??___flmul+1)^0,w,c
 12498  001EC6  1025               	iorwf	(??___flmul+2)^0,w,c
 12499  001EC8  1026               	iorwf	(??___flmul+3)^0,w,c
 12500  001ECA  B4D8               	btfsc	status,2,c
 12501  001ECC  EF6A  F00F         	goto	u9341
 12502  001ED0  EF6C  F00F         	goto	u9340
 12503  001ED4                     u9341:
 12504  001ED4  EF70  F00F         	goto	l1585
 12505  001ED8                     u9340:
 12506  001ED8                     l8763:
 12507  001ED8  0E01               	movlw	1
 12508  001EDA  6E28               	movwf	___flmul@aexp^0,c
 12509  001EDC  EF79  F00F         	goto	l1584
 12510  001EE0                     l1585:
 12511  001EE0  A02E               	btfss	___flmul@prod^0,0,c
 12512  001EE2  EF75  F00F         	goto	u9351
 12513  001EE6  EF77  F00F         	goto	u9350
 12514  001EEA                     u9351:
 12515  001EEA  EF79  F00F         	goto	l1584
 12516  001EEE                     u9350:
 12517  001EEE  EF6C  F00F         	goto	l8763
 12518  001EF2                     l1584:
 12519  001EF2  5028               	movf	___flmul@aexp^0,w,c
 12520  001EF4  B4D8               	btfsc	status,2,c
 12521  001EF6  EF7F  F00F         	goto	u9361
 12522  001EFA  EF81  F00F         	goto	u9360
 12523  001EFE                     u9361:
 12524  001EFE  EFA5  F00F         	goto	l8775
 12525  001F02                     u9360:
 12526  001F02  0E01               	movlw	1
 12527  001F04  262E               	addwf	___flmul@prod^0,f,c
 12528  001F06  0E00               	movlw	0
 12529  001F08  222F               	addwfc	(___flmul@prod+1)^0,f,c
 12530  001F0A  2230               	addwfc	(___flmul@prod+2)^0,f,c
 12531  001F0C  2231               	addwfc	(___flmul@prod+3)^0,f,c
 12532  001F0E  A031               	btfss	(___flmul@prod+3)^0,0,c
 12533  001F10  EF8C  F00F         	goto	u9371
 12534  001F14  EF8E  F00F         	goto	u9370
 12535  001F18                     u9371:
 12536  001F18  EFA5  F00F         	goto	l8775
 12537  001F1C                     u9370:
 12538  001F1C  C02E  F023         	movff	___flmul@prod,??___flmul
 12539  001F20  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
 12540  001F24  C030  F025         	movff	___flmul@prod+2,??___flmul+2
 12541  001F28  C031  F026         	movff	___flmul@prod+3,??___flmul+3
 12542  001F2C  3426               	rlcf	(??___flmul+3)^0,w,c
 12543  001F2E  3226               	rrcf	(??___flmul+3)^0,f,c
 12544  001F30  3225               	rrcf	(??___flmul+2)^0,f,c
 12545  001F32  3224               	rrcf	(??___flmul+1)^0,f,c
 12546  001F34  3223               	rrcf	??___flmul^0,f,c
 12547  001F36  C023  F02E         	movff	??___flmul,___flmul@prod
 12548  001F3A  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
 12549  001F3E  C025  F030         	movff	??___flmul+2,___flmul@prod+2
 12550  001F42  C026  F031         	movff	??___flmul+3,___flmul@prod+3
 12551  001F46  4A32               	infsnz	___flmul@temp^0,f,c
 12552  001F48  2A33               	incf	(___flmul@temp+1)^0,f,c
 12553  001F4A                     l8775:
 12554  001F4A  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12555  001F4C  EFB0  F00F         	goto	u9381
 12556  001F50  5033               	movf	(___flmul@temp+1)^0,w,c
 12557  001F52  E108               	bnz	u9380
 12558  001F54  2832               	incf	___flmul@temp^0,w,c
 12559  001F56  A0D8               	btfss	status,0,c
 12560  001F58  EFB0  F00F         	goto	u9381
 12561  001F5C  EFB2  F00F         	goto	u9380
 12562  001F60                     u9381:
 12563  001F60  EFBC  F00F         	goto	l8779
 12564  001F64                     u9380:
 12565  001F64  0E00               	movlw	0
 12566  001F66  6E2E               	movwf	___flmul@prod^0,c
 12567  001F68  0E00               	movlw	0
 12568  001F6A  6E2F               	movwf	(___flmul@prod+1)^0,c
 12569  001F6C  0E80               	movlw	128
 12570  001F6E  6E30               	movwf	(___flmul@prod+2)^0,c
 12571  001F70  0E7F               	movlw	127
 12572  001F72  6E31               	movwf	(___flmul@prod+3)^0,c
 12573  001F74  EFEA  F00F         	goto	l8791
 12574  001F78                     l8779:
 12575  001F78  BE33               	btfsc	(___flmul@temp+1)^0,7,c
 12576  001F7A  EFC9  F00F         	goto	u9390
 12577  001F7E  5033               	movf	(___flmul@temp+1)^0,w,c
 12578  001F80  E106               	bnz	u9391
 12579  001F82  0432               	decf	___flmul@temp^0,w,c
 12580  001F84  B0D8               	btfsc	status,0,c
 12581  001F86  EFC7  F00F         	goto	u9391
 12582  001F8A  EFC9  F00F         	goto	u9390
 12583  001F8E                     u9391:
 12584  001F8E  EFD5  F00F         	goto	l1592
 12585  001F92                     u9390:
 12586  001F92  0E00               	movlw	0
 12587  001F94  6E2E               	movwf	___flmul@prod^0,c
 12588  001F96  0E00               	movlw	0
 12589  001F98  6E2F               	movwf	(___flmul@prod+1)^0,c
 12590  001F9A  0E00               	movlw	0
 12591  001F9C  6E30               	movwf	(___flmul@prod+2)^0,c
 12592  001F9E  0E00               	movlw	0
 12593  001FA0  6E31               	movwf	(___flmul@prod+3)^0,c
 12594  001FA2  0E00               	movlw	0
 12595  001FA4  6E27               	movwf	___flmul@sign^0,c
 12596  001FA6  EFEA  F00F         	goto	l8791
 12597  001FAA                     l1592:
 12598  001FAA  C032  F02D         	movff	___flmul@temp,___flmul@bexp
 12599  001FAE  0EFF               	movlw	255
 12600  001FB0  162E               	andwf	___flmul@prod^0,f,c
 12601  001FB2  0EFF               	movlw	255
 12602  001FB4  162F               	andwf	(___flmul@prod+1)^0,f,c
 12603  001FB6  0E7F               	movlw	127
 12604  001FB8  1630               	andwf	(___flmul@prod+2)^0,f,c
 12605  001FBA  0E00               	movlw	0
 12606  001FBC  1631               	andwf	(___flmul@prod+3)^0,f,c
 12607  001FBE  A02D               	btfss	___flmul@bexp^0,0,c
 12608  001FC0  EFE4  F00F         	goto	u9401
 12609  001FC4  EFE6  F00F         	goto	u9400
 12610  001FC8                     u9401:
 12611  001FC8  EFE7  F00F         	goto	l8789
 12612  001FCC                     u9400:
 12613  001FCC  8E30               	bsf	(___flmul@prod+2)^0,7,c
 12614  001FCE                     l8789:
 12615  001FCE  90D8               	bcf	status,0,c
 12616  001FD0  302D               	rrcf	___flmul@bexp^0,w,c
 12617  001FD2  6E31               	movwf	(___flmul@prod+3)^0,c
 12618  001FD4                     l8791:
 12619  001FD4  5027               	movf	___flmul@sign^0,w,c
 12620  001FD6  1231               	iorwf	(___flmul@prod+3)^0,f,c
 12621  001FD8  C02E  F01B         	movff	___flmul@prod,?___flmul
 12622  001FDC  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
 12623  001FE0  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
 12624  001FE4  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
 12625  001FE8                     l1579:
 12626  001FE8  0012               	return		;funcret
 12627  001FEA                     __end_of___flmul:
 12628                           	opt callstack 0
 12629                           
 12630 ;; *************** function ___fleq *****************
 12631 ;; Defined at:
 12632 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;  ff1             4    5[COMRAM] unsigned char 
 12635 ;;  ff2             4    9[COMRAM] unsigned char 
 12636 ;; Auto vars:     Size  Location     Type
 12637 ;;		None
 12638 ;; Return value:  Size  Location     Type
 12639 ;;		None               void
 12640 ;; Registers used:
 12641 ;;		wreg, status,2, status,0
 12642 ;; Tracked objects:
 12643 ;;		On entry : 0/0
 12644 ;;		On exit  : 0/0
 12645 ;;		Unchanged: 0/0
 12646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12647 ;;      Params:         8       0       0       0       0       0       0       0       0
 12648 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12649 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12650 ;;      Totals:        12       0       0       0       0       0       0       0       0
 12651 ;;Total ram usage:       12 bytes
 12652 ;; Hardware stack levels used:    1
 12653 ;; Hardware stack levels required when called:    2
 12654 ;; This function calls:
 12655 ;;		Nothing
 12656 ;; This function is called by:
 12657 ;;		_efgtoa
 12658 ;; This function uses a non-reentrant model
 12659 ;;
 12660                           
 12661                           	psect	text47
 12662  00493E                     __ptext47:
 12663                           	opt callstack 0
 12664  00493E                     ___fleq:
 12665                           	opt callstack 23
 12666  00493E  0E00               	movlw	0
 12667  004940  1406               	andwf	___fleq@ff1^0,w,c
 12668  004942  6E0E               	movwf	??___fleq^0,c
 12669  004944  0E00               	movlw	0
 12670  004946  1407               	andwf	(___fleq@ff1+1)^0,w,c
 12671  004948  6E0F               	movwf	(??___fleq+1)^0,c
 12672  00494A  0E80               	movlw	128
 12673  00494C  1408               	andwf	(___fleq@ff1+2)^0,w,c
 12674  00494E  6E10               	movwf	(??___fleq+2)^0,c
 12675  004950  0E7F               	movlw	127
 12676  004952  1409               	andwf	(___fleq@ff1+3)^0,w,c
 12677  004954  6E11               	movwf	(??___fleq+3)^0,c
 12678  004956  500E               	movf	??___fleq^0,w,c
 12679  004958  100F               	iorwf	(??___fleq+1)^0,w,c
 12680  00495A  1010               	iorwf	(??___fleq+2)^0,w,c
 12681  00495C  1011               	iorwf	(??___fleq+3)^0,w,c
 12682  00495E  A4D8               	btfss	status,2,c
 12683  004960  EFB4  F024         	goto	u9531
 12684  004964  EFB6  F024         	goto	u9530
 12685  004968                     u9531:
 12686  004968  EFBE  F024         	goto	l8887
 12687  00496C                     u9530:
 12688  00496C  0E00               	movlw	0
 12689  00496E  6E06               	movwf	___fleq@ff1^0,c
 12690  004970  0E00               	movlw	0
 12691  004972  6E07               	movwf	(___fleq@ff1+1)^0,c
 12692  004974  0E00               	movlw	0
 12693  004976  6E08               	movwf	(___fleq@ff1+2)^0,c
 12694  004978  0E00               	movlw	0
 12695  00497A  6E09               	movwf	(___fleq@ff1+3)^0,c
 12696  00497C                     l8887:
 12697  00497C  0E00               	movlw	0
 12698  00497E  140A               	andwf	___fleq@ff2^0,w,c
 12699  004980  6E0E               	movwf	??___fleq^0,c
 12700  004982  0E00               	movlw	0
 12701  004984  140B               	andwf	(___fleq@ff2+1)^0,w,c
 12702  004986  6E0F               	movwf	(??___fleq+1)^0,c
 12703  004988  0E80               	movlw	128
 12704  00498A  140C               	andwf	(___fleq@ff2+2)^0,w,c
 12705  00498C  6E10               	movwf	(??___fleq+2)^0,c
 12706  00498E  0E7F               	movlw	127
 12707  004990  140D               	andwf	(___fleq@ff2+3)^0,w,c
 12708  004992  6E11               	movwf	(??___fleq+3)^0,c
 12709  004994  500E               	movf	??___fleq^0,w,c
 12710  004996  100F               	iorwf	(??___fleq+1)^0,w,c
 12711  004998  1010               	iorwf	(??___fleq+2)^0,w,c
 12712  00499A  1011               	iorwf	(??___fleq+3)^0,w,c
 12713  00499C  A4D8               	btfss	status,2,c
 12714  00499E  EFD3  F024         	goto	u9541
 12715  0049A2  EFD5  F024         	goto	u9540
 12716  0049A6                     u9541:
 12717  0049A6  EFDD  F024         	goto	l8891
 12718  0049AA                     u9540:
 12719  0049AA  0E00               	movlw	0
 12720  0049AC  6E0A               	movwf	___fleq@ff2^0,c
 12721  0049AE  0E00               	movlw	0
 12722  0049B0  6E0B               	movwf	(___fleq@ff2+1)^0,c
 12723  0049B2  0E00               	movlw	0
 12724  0049B4  6E0C               	movwf	(___fleq@ff2+2)^0,c
 12725  0049B6  0E00               	movlw	0
 12726  0049B8  6E0D               	movwf	(___fleq@ff2+3)^0,c
 12727  0049BA                     l8891:
 12728  0049BA  500A               	movf	___fleq@ff2^0,w,c
 12729  0049BC  1806               	xorwf	___fleq@ff1^0,w,c
 12730  0049BE  E10F               	bnz	u9550
 12731  0049C0  500B               	movf	(___fleq@ff2+1)^0,w,c
 12732  0049C2  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 12733  0049C4  E10C               	bnz	u9550
 12734  0049C6  500C               	movf	(___fleq@ff2+2)^0,w,c
 12735  0049C8  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 12736  0049CA  E109               	bnz	u9550
 12737  0049CC  500D               	movf	(___fleq@ff2+3)^0,w,c
 12738  0049CE  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 12739  0049D0  B4D8               	btfsc	status,2,c
 12740  0049D2  EFED  F024         	goto	u9551
 12741  0049D6  EFEF  F024         	goto	u9550
 12742  0049DA                     u9551:
 12743  0049DA  EFF2  F024         	goto	l8895
 12744  0049DE                     u9550:
 12745  0049DE  90D8               	bcf	status,0,c
 12746  0049E0  EFF3  F024         	goto	l1220
 12747  0049E4                     l8895:
 12748  0049E4  80D8               	bsf	status,0,c
 12749  0049E6                     l1220:
 12750  0049E6  0012               	return		;funcret
 12751  0049E8                     __end_of___fleq:
 12752                           	opt callstack 0
 12753                           
 12754 ;; *************** function ___fldiv *****************
 12755 ;; Defined at:
 12756 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;  b               4   67[COMRAM] unsigned char 
 12759 ;;  a               4   71[COMRAM] unsigned char 
 12760 ;; Auto vars:     Size  Location     Type
 12761 ;;  grs             4    7[BANK0 ] unsigned long 
 12762 ;;  rem             4    0[BANK0 ] unsigned long 
 12763 ;;  new_exp         2    5[BANK0 ] short 
 12764 ;;  aexp            1   12[BANK0 ] unsigned char 
 12765 ;;  bexp            1   11[BANK0 ] unsigned char 
 12766 ;;  sign            1    4[BANK0 ] unsigned char 
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  4   67[COMRAM] unsigned char 
 12769 ;; Registers used:
 12770 ;;		wreg, status,2, status,0
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12776 ;;      Params:         8       0       0       0       0       0       0       0       0
 12777 ;;      Locals:         0      13       0       0       0       0       0       0       0
 12778 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12779 ;;      Totals:        12      13       0       0       0       0       0       0       0
 12780 ;;Total ram usage:       25 bytes
 12781 ;; Hardware stack levels used:    1
 12782 ;; Hardware stack levels required when called:    2
 12783 ;; This function calls:
 12784 ;;		Nothing
 12785 ;; This function is called by:
 12786 ;;		_pwmDuty
 12787 ;;		_leerSensores
 12788 ;;		_efgtoa
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792                           	psect	text48
 12793  0027A2                     __ptext48:
 12794                           	opt callstack 0
 12795  0027A2                     ___fldiv:
 12796                           	opt callstack 23
 12797  0027A2  5047               	movf	(___fldiv@b+3)^0,w,c
 12798  0027A4  0B80               	andlw	128
 12799  0027A6  0100               	movlb	0	; () banked
 12800  0027A8  6F64               	movwf	___fldiv@sign& (0+255),b
 12801  0027AA  5047               	movf	(___fldiv@b+3)^0,w,c
 12802  0027AC  2447               	addwf	(___fldiv@b+3)^0,w,c
 12803  0027AE  6F6B               	movwf	___fldiv@bexp& (0+255),b
 12804  0027B0                     
 12805                           ; BSR set to: 0
 12806  0027B0  AE46               	btfss	(___fldiv@b+2)^0,7,c
 12807  0027B2  EFDD  F013         	goto	u8991
 12808  0027B6  EFDF  F013         	goto	u8990
 12809  0027BA                     u8991:
 12810  0027BA  EFE0  F013         	goto	l8535
 12811  0027BE                     u8990:
 12812  0027BE                     
 12813                           ; BSR set to: 0
 12814  0027BE  816B               	bsf	___fldiv@bexp& (0+255),0,b
 12815  0027C0                     l8535:
 12816                           
 12817                           ; BSR set to: 0
 12818  0027C0  516B               	movf	___fldiv@bexp& (0+255),w,b
 12819  0027C2  B4D8               	btfsc	status,2,c
 12820  0027C4  EFE6  F013         	goto	u9001
 12821  0027C8  EFE8  F013         	goto	u9000
 12822  0027CC                     u9001:
 12823  0027CC  EFFD  F013         	goto	l8545
 12824  0027D0                     u9000:
 12825  0027D0                     
 12826                           ; BSR set to: 0
 12827  0027D0  296B               	incf	___fldiv@bexp& (0+255),w,b
 12828  0027D2  A4D8               	btfss	status,2,c
 12829  0027D4  EFEE  F013         	goto	u9011
 12830  0027D8  EFF0  F013         	goto	u9010
 12831  0027DC                     u9011:
 12832  0027DC  EFF8  F013         	goto	l8541
 12833  0027E0                     u9010:
 12834  0027E0                     
 12835                           ; BSR set to: 0
 12836  0027E0  0E00               	movlw	0
 12837  0027E2  6E44               	movwf	___fldiv@b^0,c
 12838  0027E4  0E00               	movlw	0
 12839  0027E6  6E45               	movwf	(___fldiv@b+1)^0,c
 12840  0027E8  0E00               	movlw	0
 12841  0027EA  6E46               	movwf	(___fldiv@b+2)^0,c
 12842  0027EC  0E00               	movlw	0
 12843  0027EE  6E47               	movwf	(___fldiv@b+3)^0,c
 12844  0027F0                     l8541:
 12845                           
 12846                           ; BSR set to: 0
 12847  0027F0  8E46               	bsf	(___fldiv@b+2)^0,7,c
 12848  0027F2                     
 12849                           ; BSR set to: 0
 12850  0027F2  0E00               	movlw	0
 12851  0027F4  6E47               	movwf	(___fldiv@b+3)^0,c
 12852  0027F6  EF05  F014         	goto	l8547
 12853  0027FA                     l8545:
 12854                           
 12855                           ; BSR set to: 0
 12856  0027FA  0E00               	movlw	0
 12857  0027FC  6E44               	movwf	___fldiv@b^0,c
 12858  0027FE  0E00               	movlw	0
 12859  002800  6E45               	movwf	(___fldiv@b+1)^0,c
 12860  002802  0E00               	movlw	0
 12861  002804  6E46               	movwf	(___fldiv@b+2)^0,c
 12862  002806  0E00               	movlw	0
 12863  002808  6E47               	movwf	(___fldiv@b+3)^0,c
 12864  00280A                     l8547:
 12865                           
 12866                           ; BSR set to: 0
 12867  00280A  504B               	movf	(___fldiv@a+3)^0,w,c
 12868  00280C  0B80               	andlw	128
 12869  00280E  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 12870  002810                     
 12871                           ; BSR set to: 0
 12872  002810  504B               	movf	(___fldiv@a+3)^0,w,c
 12873  002812  244B               	addwf	(___fldiv@a+3)^0,w,c
 12874  002814  6F6C               	movwf	___fldiv@aexp& (0+255),b
 12875  002816                     
 12876                           ; BSR set to: 0
 12877  002816  AE4A               	btfss	(___fldiv@a+2)^0,7,c
 12878  002818  EF10  F014         	goto	u9021
 12879  00281C  EF12  F014         	goto	u9020
 12880  002820                     u9021:
 12881  002820  EF13  F014         	goto	l8555
 12882  002824                     u9020:
 12883  002824                     
 12884                           ; BSR set to: 0
 12885  002824  816C               	bsf	___fldiv@aexp& (0+255),0,b
 12886  002826                     l8555:
 12887                           
 12888                           ; BSR set to: 0
 12889  002826  516C               	movf	___fldiv@aexp& (0+255),w,b
 12890  002828  B4D8               	btfsc	status,2,c
 12891  00282A  EF19  F014         	goto	u9031
 12892  00282E  EF1B  F014         	goto	u9030
 12893  002832                     u9031:
 12894  002832  EF30  F014         	goto	l8565
 12895  002836                     u9030:
 12896  002836                     
 12897                           ; BSR set to: 0
 12898  002836  296C               	incf	___fldiv@aexp& (0+255),w,b
 12899  002838  A4D8               	btfss	status,2,c
 12900  00283A  EF21  F014         	goto	u9041
 12901  00283E  EF23  F014         	goto	u9040
 12902  002842                     u9041:
 12903  002842  EF2B  F014         	goto	l8561
 12904  002846                     u9040:
 12905  002846                     
 12906                           ; BSR set to: 0
 12907  002846  0E00               	movlw	0
 12908  002848  6E48               	movwf	___fldiv@a^0,c
 12909  00284A  0E00               	movlw	0
 12910  00284C  6E49               	movwf	(___fldiv@a+1)^0,c
 12911  00284E  0E00               	movlw	0
 12912  002850  6E4A               	movwf	(___fldiv@a+2)^0,c
 12913  002852  0E00               	movlw	0
 12914  002854  6E4B               	movwf	(___fldiv@a+3)^0,c
 12915  002856                     l8561:
 12916                           
 12917                           ; BSR set to: 0
 12918  002856  8E4A               	bsf	(___fldiv@a+2)^0,7,c
 12919  002858                     
 12920                           ; BSR set to: 0
 12921  002858  0E00               	movlw	0
 12922  00285A  6E4B               	movwf	(___fldiv@a+3)^0,c
 12923  00285C  EF38  F014         	goto	l8567
 12924  002860                     l8565:
 12925                           
 12926                           ; BSR set to: 0
 12927  002860  0E00               	movlw	0
 12928  002862  6E48               	movwf	___fldiv@a^0,c
 12929  002864  0E00               	movlw	0
 12930  002866  6E49               	movwf	(___fldiv@a+1)^0,c
 12931  002868  0E00               	movlw	0
 12932  00286A  6E4A               	movwf	(___fldiv@a+2)^0,c
 12933  00286C  0E00               	movlw	0
 12934  00286E  6E4B               	movwf	(___fldiv@a+3)^0,c
 12935  002870                     l8567:
 12936                           
 12937                           ; BSR set to: 0
 12938  002870  5048               	movf	___fldiv@a^0,w,c
 12939  002872  1049               	iorwf	(___fldiv@a+1)^0,w,c
 12940  002874  104A               	iorwf	(___fldiv@a+2)^0,w,c
 12941  002876  104B               	iorwf	(___fldiv@a+3)^0,w,c
 12942  002878  A4D8               	btfss	status,2,c
 12943  00287A  EF41  F014         	goto	u9051
 12944  00287E  EF43  F014         	goto	u9050
 12945  002882                     u9051:
 12946  002882  EF5B  F014         	goto	l8579
 12947  002886                     u9050:
 12948  002886                     
 12949                           ; BSR set to: 0
 12950  002886  0E00               	movlw	0
 12951  002888  6E44               	movwf	___fldiv@b^0,c
 12952  00288A  0E00               	movlw	0
 12953  00288C  6E45               	movwf	(___fldiv@b+1)^0,c
 12954  00288E  0E00               	movlw	0
 12955  002890  6E46               	movwf	(___fldiv@b+2)^0,c
 12956  002892  0E00               	movlw	0
 12957  002894  6E47               	movwf	(___fldiv@b+3)^0,c
 12958  002896                     
 12959                           ; BSR set to: 0
 12960  002896  0E80               	movlw	128
 12961  002898  1246               	iorwf	(___fldiv@b+2)^0,f,c
 12962  00289A  0E7F               	movlw	127
 12963  00289C  1247               	iorwf	(___fldiv@b+3)^0,f,c
 12964  00289E                     l8573:
 12965                           
 12966                           ; BSR set to: 0
 12967  00289E  5164               	movf	___fldiv@sign& (0+255),w,b
 12968  0028A0  1247               	iorwf	(___fldiv@b+3)^0,f,c
 12969  0028A2                     
 12970                           ; BSR set to: 0
 12971  0028A2  C044  F044         	movff	___fldiv@b,?___fldiv
 12972  0028A6  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
 12973  0028AA  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
 12974  0028AE  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
 12975  0028B2  EF9E  F015         	goto	l1543
 12976  0028B6                     l8579:
 12977                           
 12978                           ; BSR set to: 0
 12979  0028B6  516B               	movf	___fldiv@bexp& (0+255),w,b
 12980  0028B8  A4D8               	btfss	status,2,c
 12981  0028BA  EF61  F014         	goto	u9061
 12982  0028BE  EF63  F014         	goto	u9060
 12983  0028C2                     u9061:
 12984  0028C2  EF6D  F014         	goto	l8587
 12985  0028C6                     u9060:
 12986  0028C6                     
 12987                           ; BSR set to: 0
 12988  0028C6  0E00               	movlw	0
 12989  0028C8  6E44               	movwf	?___fldiv^0,c
 12990  0028CA  0E00               	movlw	0
 12991  0028CC  6E45               	movwf	(?___fldiv+1)^0,c
 12992  0028CE  0E00               	movlw	0
 12993  0028D0  6E46               	movwf	(?___fldiv+2)^0,c
 12994  0028D2  0E00               	movlw	0
 12995  0028D4  6E47               	movwf	(?___fldiv+3)^0,c
 12996  0028D6  EF9E  F015         	goto	l1543
 12997  0028DA                     l8587:
 12998                           
 12999                           ; BSR set to: 0
 13000  0028DA  516C               	movf	___fldiv@aexp& (0+255),w,b
 13001  0028DC  C06B  F04C         	movff	___fldiv@bexp,??___fldiv
 13002  0028E0  6A4D               	clrf	(??___fldiv+1)^0,c
 13003  0028E2  5E4C               	subwf	??___fldiv^0,f,c
 13004  0028E4  0E00               	movlw	0
 13005  0028E6  5A4D               	subwfb	(??___fldiv+1)^0,f,c
 13006  0028E8  0E7F               	movlw	127
 13007  0028EA  244C               	addwf	??___fldiv^0,w,c
 13008  0028EC  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13009  0028EE  0E00               	movlw	0
 13010  0028F0  204D               	addwfc	(??___fldiv+1)^0,w,c
 13011  0028F2  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13012  0028F4                     
 13013                           ; BSR set to: 0
 13014  0028F4  C044  F060         	movff	___fldiv@b,___fldiv@rem
 13015  0028F8  C045  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 13016  0028FC  C046  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 13017  002900  C047  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 13018  002904                     
 13019                           ; BSR set to: 0
 13020  002904  0E00               	movlw	0
 13021  002906  6E44               	movwf	___fldiv@b^0,c
 13022  002908  0E00               	movlw	0
 13023  00290A  6E45               	movwf	(___fldiv@b+1)^0,c
 13024  00290C  0E00               	movlw	0
 13025  00290E  6E46               	movwf	(___fldiv@b+2)^0,c
 13026  002910  0E00               	movlw	0
 13027  002912  6E47               	movwf	(___fldiv@b+3)^0,c
 13028  002914                     
 13029                           ; BSR set to: 0
 13030  002914  0E00               	movlw	0
 13031  002916  6F67               	movwf	___fldiv@grs& (0+255),b
 13032  002918  0E00               	movlw	0
 13033  00291A  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 13034  00291C  0E00               	movlw	0
 13035  00291E  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 13036  002920  0E00               	movlw	0
 13037  002922  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 13038  002924                     
 13039                           ; BSR set to: 0
 13040  002924  0E00               	movlw	0
 13041  002926  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13042  002928  EFCE  F014         	goto	l1545
 13043  00292C                     l8597:
 13044                           
 13045                           ; BSR set to: 0
 13046  00292C  516C               	movf	___fldiv@aexp& (0+255),w,b
 13047  00292E  B4D8               	btfsc	status,2,c
 13048  002930  EF9C  F014         	goto	u9071
 13049  002934  EF9E  F014         	goto	u9070
 13050  002938                     u9071:
 13051  002938  EFB5  F014         	goto	l8605
 13052  00293C                     u9070:
 13053  00293C                     
 13054                           ; BSR set to: 0
 13055  00293C  90D8               	bcf	status,0,c
 13056  00293E  3760               	rlcf	___fldiv@rem& (0+255),f,b
 13057  002940  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13058  002942  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13059  002944  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13060  002946  90D8               	bcf	status,0,c
 13061  002948  3644               	rlcf	___fldiv@b^0,f,c
 13062  00294A  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13063  00294C  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13064  00294E  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13065  002950                     
 13066                           ; BSR set to: 0
 13067  002950  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13068  002952  EFAD  F014         	goto	u9081
 13069  002956  EFAF  F014         	goto	u9080
 13070  00295A                     u9081:
 13071  00295A  EFB0  F014         	goto	l1548
 13072  00295E                     u9080:
 13073  00295E                     
 13074                           ; BSR set to: 0
 13075  00295E  8044               	bsf	___fldiv@b^0,0,c
 13076  002960                     l1548:
 13077                           
 13078                           ; BSR set to: 0
 13079  002960  90D8               	bcf	status,0,c
 13080  002962  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13081  002964  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13082  002966  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13083  002968  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13084  00296A                     l8605:
 13085                           
 13086                           ; BSR set to: 0
 13087  00296A  5048               	movf	___fldiv@a^0,w,c
 13088  00296C  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13089  00296E  5049               	movf	(___fldiv@a+1)^0,w,c
 13090  002970  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13091  002972  504A               	movf	(___fldiv@a+2)^0,w,c
 13092  002974  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13093  002976  504B               	movf	(___fldiv@a+3)^0,w,c
 13094  002978  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13095  00297A  A0D8               	btfss	status,0,c
 13096  00297C  EFC2  F014         	goto	u9091
 13097  002980  EFC4  F014         	goto	u9090
 13098  002984                     u9091:
 13099  002984  EFCD  F014         	goto	l8611
 13100  002988                     u9090:
 13101  002988                     
 13102                           ; BSR set to: 0
 13103  002988  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13104  00298A                     
 13105                           ; BSR set to: 0
 13106  00298A  5048               	movf	___fldiv@a^0,w,c
 13107  00298C  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13108  00298E  5049               	movf	(___fldiv@a+1)^0,w,c
 13109  002990  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13110  002992  504A               	movf	(___fldiv@a+2)^0,w,c
 13111  002994  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13112  002996  504B               	movf	(___fldiv@a+3)^0,w,c
 13113  002998  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13114  00299A                     l8611:
 13115                           
 13116                           ; BSR set to: 0
 13117  00299A  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13118  00299C                     l1545:
 13119                           
 13120                           ; BSR set to: 0
 13121  00299C  0E19               	movlw	25
 13122  00299E  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13123  0029A0  EFD4  F014         	goto	u9101
 13124  0029A4  EFD6  F014         	goto	u9100
 13125  0029A8                     u9101:
 13126  0029A8  EF96  F014         	goto	l8597
 13127  0029AC                     u9100:
 13128  0029AC                     
 13129                           ; BSR set to: 0
 13130  0029AC  5160               	movf	___fldiv@rem& (0+255),w,b
 13131  0029AE  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13132  0029B0  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13133  0029B2  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13134  0029B4  B4D8               	btfsc	status,2,c
 13135  0029B6  EFDF  F014         	goto	u9111
 13136  0029BA  EFE1  F014         	goto	u9110
 13137  0029BE                     u9111:
 13138  0029BE  EFF9  F014         	goto	l8623
 13139  0029C2                     u9110:
 13140  0029C2                     
 13141                           ; BSR set to: 0
 13142  0029C2  8167               	bsf	___fldiv@grs& (0+255),0,b
 13143  0029C4  EFF9  F014         	goto	l8623
 13144  0029C8                     l8617:
 13145                           
 13146                           ; BSR set to: 0
 13147  0029C8  90D8               	bcf	status,0,c
 13148  0029CA  3644               	rlcf	___fldiv@b^0,f,c
 13149  0029CC  3645               	rlcf	(___fldiv@b+1)^0,f,c
 13150  0029CE  3646               	rlcf	(___fldiv@b+2)^0,f,c
 13151  0029D0  3647               	rlcf	(___fldiv@b+3)^0,f,c
 13152  0029D2                     
 13153                           ; BSR set to: 0
 13154  0029D2  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13155  0029D4  EFEE  F014         	goto	u9121
 13156  0029D8  EFF0  F014         	goto	u9120
 13157  0029DC                     u9121:
 13158  0029DC  EFF1  F014         	goto	l1554
 13159  0029E0                     u9120:
 13160  0029E0                     
 13161                           ; BSR set to: 0
 13162  0029E0  8044               	bsf	___fldiv@b^0,0,c
 13163  0029E2                     l1554:
 13164                           
 13165                           ; BSR set to: 0
 13166  0029E2  90D8               	bcf	status,0,c
 13167  0029E4  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13168  0029E6  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13169  0029E8  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13170  0029EA  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13171  0029EC  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13172  0029EE  A0D8               	btfss	status,0,c
 13173  0029F0  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13174  0029F2                     l8623:
 13175                           
 13176                           ; BSR set to: 0
 13177  0029F2  AE46               	btfss	(___fldiv@b+2)^0,7,c
 13178  0029F4  EFFE  F014         	goto	u9131
 13179  0029F8  EF00  F015         	goto	u9130
 13180  0029FC                     u9131:
 13181  0029FC  EFE4  F014         	goto	l8617
 13182  002A00                     u9130:
 13183  002A00                     
 13184                           ; BSR set to: 0
 13185  002A00  0E00               	movlw	0
 13186  002A02  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13187  002A04                     
 13188                           ; BSR set to: 0
 13189  002A04  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13190  002A06  EF07  F015         	goto	u9141
 13191  002A0A  EF09  F015         	goto	u9140
 13192  002A0E                     u9141:
 13193  002A0E  EF2D  F015         	goto	l1556
 13194  002A12                     u9140:
 13195  002A12                     
 13196                           ; BSR set to: 0
 13197  002A12  0EFF               	movlw	255
 13198  002A14  1567               	andwf	___fldiv@grs& (0+255),w,b
 13199  002A16  6E4C               	movwf	??___fldiv^0,c
 13200  002A18  0EFF               	movlw	255
 13201  002A1A  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13202  002A1C  6E4D               	movwf	(??___fldiv+1)^0,c
 13203  002A1E  0EFF               	movlw	255
 13204  002A20  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13205  002A22  6E4E               	movwf	(??___fldiv+2)^0,c
 13206  002A24  0E7F               	movlw	127
 13207  002A26  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13208  002A28  6E4F               	movwf	(??___fldiv+3)^0,c
 13209  002A2A  504C               	movf	??___fldiv^0,w,c
 13210  002A2C  104D               	iorwf	(??___fldiv+1)^0,w,c
 13211  002A2E  104E               	iorwf	(??___fldiv+2)^0,w,c
 13212  002A30  104F               	iorwf	(??___fldiv+3)^0,w,c
 13213  002A32  B4D8               	btfsc	status,2,c
 13214  002A34  EF1E  F015         	goto	u9151
 13215  002A38  EF20  F015         	goto	u9150
 13216  002A3C                     u9151:
 13217  002A3C  EF24  F015         	goto	l1557
 13218  002A40                     u9150:
 13219  002A40                     l8631:
 13220                           
 13221                           ; BSR set to: 0
 13222  002A40  0E01               	movlw	1
 13223  002A42  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13224  002A44  EF2D  F015         	goto	l1556
 13225  002A48                     l1557:
 13226                           
 13227                           ; BSR set to: 0
 13228  002A48  A044               	btfss	___fldiv@b^0,0,c
 13229  002A4A  EF29  F015         	goto	u9161
 13230  002A4E  EF2B  F015         	goto	u9160
 13231  002A52                     u9161:
 13232  002A52  EF2D  F015         	goto	l1556
 13233  002A56                     u9160:
 13234  002A56  EF20  F015         	goto	l8631
 13235  002A5A                     l1556:
 13236                           
 13237                           ; BSR set to: 0
 13238  002A5A  516C               	movf	___fldiv@aexp& (0+255),w,b
 13239  002A5C  B4D8               	btfsc	status,2,c
 13240  002A5E  EF33  F015         	goto	u9171
 13241  002A62  EF35  F015         	goto	u9170
 13242  002A66                     u9171:
 13243  002A66  EF59  F015         	goto	l8643
 13244  002A6A                     u9170:
 13245  002A6A                     
 13246                           ; BSR set to: 0
 13247  002A6A  0E01               	movlw	1
 13248  002A6C  2644               	addwf	___fldiv@b^0,f,c
 13249  002A6E  0E00               	movlw	0
 13250  002A70  2245               	addwfc	(___fldiv@b+1)^0,f,c
 13251  002A72  2246               	addwfc	(___fldiv@b+2)^0,f,c
 13252  002A74  2247               	addwfc	(___fldiv@b+3)^0,f,c
 13253  002A76                     
 13254                           ; BSR set to: 0
 13255  002A76  A047               	btfss	(___fldiv@b+3)^0,0,c
 13256  002A78  EF40  F015         	goto	u9181
 13257  002A7C  EF42  F015         	goto	u9180
 13258  002A80                     u9181:
 13259  002A80  EF59  F015         	goto	l8643
 13260  002A84                     u9180:
 13261  002A84                     
 13262                           ; BSR set to: 0
 13263  002A84  C044  F04C         	movff	___fldiv@b,??___fldiv
 13264  002A88  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
 13265  002A8C  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
 13266  002A90  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
 13267  002A94  344F               	rlcf	(??___fldiv+3)^0,w,c
 13268  002A96  324F               	rrcf	(??___fldiv+3)^0,f,c
 13269  002A98  324E               	rrcf	(??___fldiv+2)^0,f,c
 13270  002A9A  324D               	rrcf	(??___fldiv+1)^0,f,c
 13271  002A9C  324C               	rrcf	??___fldiv^0,f,c
 13272  002A9E  C04C  F044         	movff	??___fldiv,___fldiv@b
 13273  002AA2  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
 13274  002AA6  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
 13275  002AAA  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
 13276  002AAE                     
 13277                           ; BSR set to: 0
 13278  002AAE  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13279  002AB0  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13280  002AB2                     l8643:
 13281                           
 13282                           ; BSR set to: 0
 13283  002AB2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13284  002AB4  EF64  F015         	goto	u9191
 13285  002AB8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13286  002ABA  E108               	bnz	u9190
 13287  002ABC  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13288  002ABE  A0D8               	btfss	status,0,c
 13289  002AC0  EF64  F015         	goto	u9191
 13290  002AC4  EF66  F015         	goto	u9190
 13291  002AC8                     u9191:
 13292  002AC8  EF71  F015         	goto	l8647
 13293  002ACC                     u9190:
 13294  002ACC                     
 13295                           ; BSR set to: 0
 13296  002ACC  0E00               	movlw	0
 13297  002ACE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13298  002AD0  6965               	setf	___fldiv@new_exp& (0+255),b
 13299  002AD2  0E00               	movlw	0
 13300  002AD4  6E44               	movwf	___fldiv@b^0,c
 13301  002AD6  0E00               	movlw	0
 13302  002AD8  6E45               	movwf	(___fldiv@b+1)^0,c
 13303  002ADA  0E00               	movlw	0
 13304  002ADC  6E46               	movwf	(___fldiv@b+2)^0,c
 13305  002ADE  0E00               	movlw	0
 13306  002AE0  6E47               	movwf	(___fldiv@b+3)^0,c
 13307  002AE2                     l8647:
 13308                           
 13309                           ; BSR set to: 0
 13310  002AE2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13311  002AE4  EF7E  F015         	goto	u9200
 13312  002AE8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13313  002AEA  E106               	bnz	u9201
 13314  002AEC  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13315  002AEE  B0D8               	btfsc	status,0,c
 13316  002AF0  EF7C  F015         	goto	u9201
 13317  002AF4  EF7E  F015         	goto	u9200
 13318  002AF8                     u9201:
 13319  002AF8  EF8C  F015         	goto	l8651
 13320  002AFC                     u9200:
 13321  002AFC                     
 13322                           ; BSR set to: 0
 13323  002AFC  0E00               	movlw	0
 13324  002AFE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13325  002B00  0E00               	movlw	0
 13326  002B02  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13327  002B04  0E00               	movlw	0
 13328  002B06  6E44               	movwf	___fldiv@b^0,c
 13329  002B08  0E00               	movlw	0
 13330  002B0A  6E45               	movwf	(___fldiv@b+1)^0,c
 13331  002B0C  0E00               	movlw	0
 13332  002B0E  6E46               	movwf	(___fldiv@b+2)^0,c
 13333  002B10  0E00               	movlw	0
 13334  002B12  6E47               	movwf	(___fldiv@b+3)^0,c
 13335  002B14  0E00               	movlw	0
 13336  002B16  6F64               	movwf	___fldiv@sign& (0+255),b
 13337  002B18                     l8651:
 13338                           
 13339                           ; BSR set to: 0
 13340  002B18  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13341  002B1C                     
 13342                           ; BSR set to: 0
 13343  002B1C  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13344  002B1E  EF93  F015         	goto	u9211
 13345  002B22  EF95  F015         	goto	u9210
 13346  002B26                     u9211:
 13347  002B26  EF98  F015         	goto	l8657
 13348  002B2A                     u9210:
 13349  002B2A                     
 13350                           ; BSR set to: 0
 13351  002B2A  8E46               	bsf	(___fldiv@b+2)^0,7,c
 13352  002B2C  EF99  F015         	goto	l8659
 13353  002B30                     l8657:
 13354                           
 13355                           ; BSR set to: 0
 13356  002B30  9E46               	bcf	(___fldiv@b+2)^0,7,c
 13357  002B32                     l8659:
 13358                           
 13359                           ; BSR set to: 0
 13360  002B32  90D8               	bcf	status,0,c
 13361  002B34  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13362  002B36  6E47               	movwf	(___fldiv@b+3)^0,c
 13363  002B38  EF4F  F014         	goto	l8573
 13364  002B3C                     l1543:
 13365                           
 13366                           ; BSR set to: 0
 13367  002B3C  0012               	return		;funcret
 13368  002B3E                     __end_of___fldiv:
 13369                           	opt callstack 0
 13370                           
 13371 ;; *************** function ___awmod *****************
 13372 ;; Defined at:
 13373 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;  dividend        2    5[COMRAM] int 
 13376 ;;  divisor         2    7[COMRAM] int 
 13377 ;; Auto vars:     Size  Location     Type
 13378 ;;  sign            1   10[COMRAM] unsigned char 
 13379 ;;  counter         1    9[COMRAM] unsigned char 
 13380 ;; Return value:  Size  Location     Type
 13381 ;;                  2    5[COMRAM] int 
 13382 ;; Registers used:
 13383 ;;		wreg, status,2, status,0
 13384 ;; Tracked objects:
 13385 ;;		On entry : 0/0
 13386 ;;		On exit  : 0/0
 13387 ;;		Unchanged: 0/0
 13388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13389 ;;      Params:         4       0       0       0       0       0       0       0       0
 13390 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13391 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13392 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13393 ;;Total ram usage:        6 bytes
 13394 ;; Hardware stack levels used:    1
 13395 ;; Hardware stack levels required when called:    2
 13396 ;; This function calls:
 13397 ;;		Nothing
 13398 ;; This function is called by:
 13399 ;;		_efgtoa
 13400 ;; This function uses a non-reentrant model
 13401 ;;
 13402                           
 13403                           	psect	text49
 13404  0047E2                     __ptext49:
 13405                           	opt callstack 0
 13406  0047E2                     ___awmod:
 13407                           	opt callstack 23
 13408  0047E2  0E00               	movlw	0
 13409  0047E4  6E0B               	movwf	___awmod@sign^0,c
 13410  0047E6  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 13411  0047E8  EFFA  F023         	goto	u9470
 13412  0047EC  EFF8  F023         	goto	u9471
 13413  0047F0                     u9471:
 13414  0047F0  EF00  F024         	goto	l8855
 13415  0047F4                     u9470:
 13416  0047F4  6C06               	negf	___awmod@dividend^0,c
 13417  0047F6  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13418  0047F8  B0D8               	btfsc	status,0,c
 13419  0047FA  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13420  0047FC  0E01               	movlw	1
 13421  0047FE  6E0B               	movwf	___awmod@sign^0,c
 13422  004800                     l8855:
 13423  004800  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 13424  004802  EF07  F024         	goto	u9480
 13425  004806  EF05  F024         	goto	u9481
 13426  00480A                     u9481:
 13427  00480A  EF0B  F024         	goto	l8859
 13428  00480E                     u9480:
 13429  00480E  6C08               	negf	___awmod@divisor^0,c
 13430  004810  1E09               	comf	(___awmod@divisor+1)^0,f,c
 13431  004812  B0D8               	btfsc	status,0,c
 13432  004814  2A09               	incf	(___awmod@divisor+1)^0,f,c
 13433  004816                     l8859:
 13434  004816  5008               	movf	___awmod@divisor^0,w,c
 13435  004818  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 13436  00481A  B4D8               	btfsc	status,2,c
 13437  00481C  EF12  F024         	goto	u9491
 13438  004820  EF14  F024         	goto	u9490
 13439  004824                     u9491:
 13440  004824  EF38  F024         	goto	l8875
 13441  004828                     u9490:
 13442  004828  0E01               	movlw	1
 13443  00482A  6E0A               	movwf	___awmod@counter^0,c
 13444  00482C  EF1C  F024         	goto	l8865
 13445  004830                     l8863:
 13446  004830  90D8               	bcf	status,0,c
 13447  004832  3608               	rlcf	___awmod@divisor^0,f,c
 13448  004834  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 13449  004836  2A0A               	incf	___awmod@counter^0,f,c
 13450  004838                     l8865:
 13451  004838  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 13452  00483A  EF21  F024         	goto	u9501
 13453  00483E  EF23  F024         	goto	u9500
 13454  004842                     u9501:
 13455  004842  EF18  F024         	goto	l8863
 13456  004846                     u9500:
 13457  004846                     l8867:
 13458  004846  5008               	movf	___awmod@divisor^0,w,c
 13459  004848  5C06               	subwf	___awmod@dividend^0,w,c
 13460  00484A  5009               	movf	(___awmod@divisor+1)^0,w,c
 13461  00484C  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 13462  00484E  A0D8               	btfss	status,0,c
 13463  004850  EF2C  F024         	goto	u9511
 13464  004854  EF2E  F024         	goto	u9510
 13465  004858                     u9511:
 13466  004858  EF32  F024         	goto	l8871
 13467  00485C                     u9510:
 13468  00485C  5008               	movf	___awmod@divisor^0,w,c
 13469  00485E  5E06               	subwf	___awmod@dividend^0,f,c
 13470  004860  5009               	movf	(___awmod@divisor+1)^0,w,c
 13471  004862  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 13472  004864                     l8871:
 13473  004864  90D8               	bcf	status,0,c
 13474  004866  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 13475  004868  3208               	rrcf	___awmod@divisor^0,f,c
 13476  00486A  2E0A               	decfsz	___awmod@counter^0,f,c
 13477  00486C  EF23  F024         	goto	l8867
 13478  004870                     l8875:
 13479  004870  500B               	movf	___awmod@sign^0,w,c
 13480  004872  B4D8               	btfsc	status,2,c
 13481  004874  EF3E  F024         	goto	u9521
 13482  004878  EF40  F024         	goto	u9520
 13483  00487C                     u9521:
 13484  00487C  EF44  F024         	goto	l8879
 13485  004880                     u9520:
 13486  004880  6C06               	negf	___awmod@dividend^0,c
 13487  004882  1E07               	comf	(___awmod@dividend+1)^0,f,c
 13488  004884  B0D8               	btfsc	status,0,c
 13489  004886  2A07               	incf	(___awmod@dividend+1)^0,f,c
 13490  004888                     l8879:
 13491  004888  C006  F006         	movff	___awmod@dividend,?___awmod
 13492  00488C  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 13493  004890  0012               	return		;funcret
 13494  004892                     __end_of___awmod:
 13495                           	opt callstack 0
 13496                           
 13497 ;; *************** function ___awdiv *****************
 13498 ;; Defined at:
 13499 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;  dividend        2    5[COMRAM] int 
 13502 ;;  divisor         2    7[COMRAM] int 
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;  quotient        2   11[COMRAM] int 
 13505 ;;  sign            1   10[COMRAM] unsigned char 
 13506 ;;  counter         1    9[COMRAM] unsigned char 
 13507 ;; Return value:  Size  Location     Type
 13508 ;;                  2    5[COMRAM] int 
 13509 ;; Registers used:
 13510 ;;		wreg, status,2, status,0
 13511 ;; Tracked objects:
 13512 ;;		On entry : 0/0
 13513 ;;		On exit  : 0/0
 13514 ;;		Unchanged: 0/0
 13515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13516 ;;      Params:         4       0       0       0       0       0       0       0       0
 13517 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13518 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13519 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13520 ;;Total ram usage:        8 bytes
 13521 ;; Hardware stack levels used:    1
 13522 ;; Hardware stack levels required when called:    2
 13523 ;; This function calls:
 13524 ;;		Nothing
 13525 ;; This function is called by:
 13526 ;;		_efgtoa
 13527 ;; This function uses a non-reentrant model
 13528 ;;
 13529                           
 13530                           	psect	text50
 13531  00459A                     __ptext50:
 13532                           	opt callstack 0
 13533  00459A                     ___awdiv:
 13534                           	opt callstack 23
 13535  00459A  0E00               	movlw	0
 13536  00459C  6E0B               	movwf	___awdiv@sign^0,c
 13537  00459E  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 13538  0045A0  EFD6  F022         	goto	u9410
 13539  0045A4  EFD4  F022         	goto	u9411
 13540  0045A8                     u9411:
 13541  0045A8  EFDC  F022         	goto	l8811
 13542  0045AC                     u9410:
 13543  0045AC  6C08               	negf	___awdiv@divisor^0,c
 13544  0045AE  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 13545  0045B0  B0D8               	btfsc	status,0,c
 13546  0045B2  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 13547  0045B4  0E01               	movlw	1
 13548  0045B6  6E0B               	movwf	___awdiv@sign^0,c
 13549  0045B8                     l8811:
 13550  0045B8  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 13551  0045BA  EFE3  F022         	goto	u9420
 13552  0045BE  EFE1  F022         	goto	u9421
 13553  0045C2                     u9421:
 13554  0045C2  EFE9  F022         	goto	l8817
 13555  0045C6                     u9420:
 13556  0045C6  6C06               	negf	___awdiv@dividend^0,c
 13557  0045C8  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 13558  0045CA  B0D8               	btfsc	status,0,c
 13559  0045CC  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 13560  0045CE  0E01               	movlw	1
 13561  0045D0  1A0B               	xorwf	___awdiv@sign^0,f,c
 13562  0045D2                     l8817:
 13563  0045D2  0E00               	movlw	0
 13564  0045D4  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 13565  0045D6  0E00               	movlw	0
 13566  0045D8  6E0C               	movwf	___awdiv@quotient^0,c
 13567  0045DA  5008               	movf	___awdiv@divisor^0,w,c
 13568  0045DC  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 13569  0045DE  B4D8               	btfsc	status,2,c
 13570  0045E0  EFF4  F022         	goto	u9431
 13571  0045E4  EFF6  F022         	goto	u9430
 13572  0045E8                     u9431:
 13573  0045E8  EF1E  F023         	goto	l8839
 13574  0045EC                     u9430:
 13575  0045EC  0E01               	movlw	1
 13576  0045EE  6E0A               	movwf	___awdiv@counter^0,c
 13577  0045F0  EFFE  F022         	goto	l8825
 13578  0045F4                     l8823:
 13579  0045F4  90D8               	bcf	status,0,c
 13580  0045F6  3608               	rlcf	___awdiv@divisor^0,f,c
 13581  0045F8  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 13582  0045FA  2A0A               	incf	___awdiv@counter^0,f,c
 13583  0045FC                     l8825:
 13584  0045FC  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 13585  0045FE  EF03  F023         	goto	u9441
 13586  004602  EF05  F023         	goto	u9440
 13587  004606                     u9441:
 13588  004606  EFFA  F022         	goto	l8823
 13589  00460A                     u9440:
 13590  00460A                     l8827:
 13591  00460A  90D8               	bcf	status,0,c
 13592  00460C  360C               	rlcf	___awdiv@quotient^0,f,c
 13593  00460E  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 13594  004610  5008               	movf	___awdiv@divisor^0,w,c
 13595  004612  5C06               	subwf	___awdiv@dividend^0,w,c
 13596  004614  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13597  004616  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 13598  004618  A0D8               	btfss	status,0,c
 13599  00461A  EF11  F023         	goto	u9451
 13600  00461E  EF13  F023         	goto	u9450
 13601  004622                     u9451:
 13602  004622  EF18  F023         	goto	l8835
 13603  004626                     u9450:
 13604  004626  5008               	movf	___awdiv@divisor^0,w,c
 13605  004628  5E06               	subwf	___awdiv@dividend^0,f,c
 13606  00462A  5009               	movf	(___awdiv@divisor+1)^0,w,c
 13607  00462C  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 13608  00462E  800C               	bsf	___awdiv@quotient^0,0,c
 13609  004630                     l8835:
 13610  004630  90D8               	bcf	status,0,c
 13611  004632  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 13612  004634  3208               	rrcf	___awdiv@divisor^0,f,c
 13613  004636  2E0A               	decfsz	___awdiv@counter^0,f,c
 13614  004638  EF05  F023         	goto	l8827
 13615  00463C                     l8839:
 13616  00463C  500B               	movf	___awdiv@sign^0,w,c
 13617  00463E  B4D8               	btfsc	status,2,c
 13618  004640  EF24  F023         	goto	u9461
 13619  004644  EF26  F023         	goto	u9460
 13620  004648                     u9461:
 13621  004648  EF2A  F023         	goto	l8843
 13622  00464C                     u9460:
 13623  00464C  6C0C               	negf	___awdiv@quotient^0,c
 13624  00464E  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 13625  004650  B0D8               	btfsc	status,0,c
 13626  004652  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 13627  004654                     l8843:
 13628  004654  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 13629  004658  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 13630  00465C  0012               	return		;funcret
 13631  00465E                     __end_of___awdiv:
 13632                           	opt callstack 0
 13633                           
 13634 ;; *************** function _dtoa *****************
 13635 ;; Defined at:
 13636 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13637 ;; Parameters:    Size  Location     Type
 13638 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 13639 ;;		 -> sprintf@f(6), 
 13640 ;;  d               8   34[COMRAM] long long 
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;  n               8   58[COMRAM] long long 
 13643 ;;  i               2   66[COMRAM] int 
 13644 ;;  s               2   56[COMRAM] int 
 13645 ;;  w               2   54[COMRAM] int 
 13646 ;;  p               2   52[COMRAM] int 
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  2   32[COMRAM] int 
 13649 ;; Registers used:
 13650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13656 ;;      Params:        10       0       0       0       0       0       0       0       0
 13657 ;;      Locals:        18       0       0       0       0       0       0       0       0
 13658 ;;      Temps:          8       0       0       0       0       0       0       0       0
 13659 ;;      Totals:        36       0       0       0       0       0       0       0       0
 13660 ;;Total ram usage:       36 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    6
 13663 ;; This function calls:
 13664 ;;		___aodiv
 13665 ;;		___aomod
 13666 ;;		_abs
 13667 ;;		_pad
 13668 ;; This function is called by:
 13669 ;;		_vfpfcnvrt
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           	psect	text51
 13674  002B3E                     __ptext51:
 13675                           	opt callstack 0
 13676  002B3E                     _dtoa:
 13677                           	opt callstack 20
 13678  002B3E                     
 13679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13680  002B3E  C023  F03B         	movff	dtoa@d,dtoa@n
 13681  002B42  C024  F03C         	movff	dtoa@d+1,dtoa@n+1
 13682  002B46  C025  F03D         	movff	dtoa@d+2,dtoa@n+2
 13683  002B4A  C026  F03E         	movff	dtoa@d+3,dtoa@n+3
 13684  002B4E  C027  F03F         	movff	dtoa@d+4,dtoa@n+4
 13685  002B52  C028  F040         	movff	dtoa@d+5,dtoa@n+5
 13686  002B56  C029  F041         	movff	dtoa@d+6,dtoa@n+6
 13687  002B5A  C02A  F042         	movff	dtoa@d+7,dtoa@n+7
 13688  002B5E                     
 13689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13690  002B5E  BE42               	btfsc	(dtoa@n+7)^0,7,c
 13691  002B60  EFB4  F015         	goto	u9851
 13692  002B64  EFB7  F015         	goto	u9850
 13693  002B68                     u9851:
 13694  002B68  0E01               	movlw	1
 13695  002B6A  EFB8  F015         	goto	u9860
 13696  002B6E                     u9850:
 13697  002B6E  0E00               	movlw	0
 13698  002B70                     u9860:
 13699  002B70  6E39               	movwf	dtoa@s^0,c
 13700  002B72  6A3A               	clrf	(dtoa@s+1)^0,c
 13701                           
 13702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13703  002B74  5039               	movf	dtoa@s^0,w,c
 13704  002B76  103A               	iorwf	(dtoa@s+1)^0,w,c
 13705  002B78  B4D8               	btfsc	status,2,c
 13706  002B7A  EFC1  F015         	goto	u9871
 13707  002B7E  EFC3  F015         	goto	u9870
 13708  002B82                     u9871:
 13709  002B82  EFD3  F015         	goto	l9069
 13710  002B86                     u9870:
 13711  002B86                     
 13712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13713  002B86  1E42               	comf	(dtoa@n+7)^0,f,c
 13714  002B88  1E41               	comf	(dtoa@n+6)^0,f,c
 13715  002B8A  1E40               	comf	(dtoa@n+5)^0,f,c
 13716  002B8C  1E3F               	comf	(dtoa@n+4)^0,f,c
 13717  002B8E  1E3E               	comf	(dtoa@n+3)^0,f,c
 13718  002B90  1E3D               	comf	(dtoa@n+2)^0,f,c
 13719  002B92  1E3C               	comf	(dtoa@n+1)^0,f,c
 13720  002B94  6C3B               	negf	dtoa@n^0,c
 13721  002B96  0E00               	movlw	0
 13722  002B98  223C               	addwfc	(dtoa@n+1)^0,f,c
 13723  002B9A  223D               	addwfc	(dtoa@n+2)^0,f,c
 13724  002B9C  223E               	addwfc	(dtoa@n+3)^0,f,c
 13725  002B9E  223F               	addwfc	(dtoa@n+4)^0,f,c
 13726  002BA0  2240               	addwfc	(dtoa@n+5)^0,f,c
 13727  002BA2  2241               	addwfc	(dtoa@n+6)^0,f,c
 13728  002BA4  2242               	addwfc	(dtoa@n+7)^0,f,c
 13729  002BA6                     l9069:
 13730                           
 13731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13732  002BA6  0101               	movlb	1	; () banked
 13733  002BA8  BF35               	btfsc	(_prec+1)& (0+255),7,b
 13734  002BAA  EFD9  F015         	goto	u9881
 13735  002BAE  EFDB  F015         	goto	u9880
 13736  002BB2                     u9881:
 13737  002BB2  EFDC  F015         	goto	l9073
 13738  002BB6                     u9880:
 13739  002BB6                     
 13740                           ; BSR set to: 1
 13741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13742  002BB6  9255               	bcf	_flags^0,1,c
 13743  002BB8                     l9073:
 13744                           
 13745                           ; BSR set to: 1
 13746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13747  002BB8  BF35               	btfsc	(_prec+1)& (0+255),7,b
 13748  002BBA  EFE9  F015         	goto	u9890
 13749  002BBE  5135               	movf	(_prec+1)& (0+255),w,b
 13750  002BC0  E106               	bnz	u9891
 13751  002BC2  0534               	decf	_prec& (0+255),w,b
 13752  002BC4  B0D8               	btfsc	status,0,c
 13753  002BC6  EFE7  F015         	goto	u9891
 13754  002BCA  EFE9  F015         	goto	u9890
 13755  002BCE                     u9891:
 13756  002BCE  EFEF  F015         	goto	l812
 13757  002BD2                     u9890:
 13758  002BD2                     
 13759                           ; BSR set to: 1
 13760  002BD2  0E00               	movlw	0
 13761  002BD4  6E36               	movwf	(dtoa@p+1)^0,c
 13762  002BD6  0E01               	movlw	1
 13763  002BD8  6E35               	movwf	dtoa@p^0,c
 13764  002BDA  EFF3  F015         	goto	l814
 13765  002BDE                     l812:
 13766                           
 13767                           ; BSR set to: 1
 13768  002BDE  C134  F035         	movff	_prec,dtoa@p
 13769  002BE2  C135  F036         	movff	_prec+1,dtoa@p+1
 13770  002BE6                     l814:
 13771                           
 13772                           ; BSR set to: 1
 13773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13774  002BE6  C132  F037         	movff	_width,dtoa@w
 13775  002BEA  C133  F038         	movff	_width+1,dtoa@w+1
 13776  002BEE                     
 13777                           ; BSR set to: 1
 13778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13779  002BEE  5039               	movf	dtoa@s^0,w,c
 13780  002BF0  103A               	iorwf	(dtoa@s+1)^0,w,c
 13781  002BF2  A4D8               	btfss	status,2,c
 13782  002BF4  EFFE  F015         	goto	u9901
 13783  002BF8  EF00  F016         	goto	u9900
 13784  002BFC                     u9901:
 13785  002BFC  EF07  F016         	goto	l9081
 13786  002C00                     u9900:
 13787  002C00                     
 13788                           ; BSR set to: 1
 13789  002C00  A455               	btfss	_flags^0,2,c
 13790  002C02  EF05  F016         	goto	u9911
 13791  002C06  EF07  F016         	goto	u9910
 13792  002C0A                     u9911:
 13793  002C0A  EF0A  F016         	goto	l9083
 13794  002C0E                     u9910:
 13795  002C0E                     l9081:
 13796                           
 13797                           ; BSR set to: 1
 13798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13799  002C0E  0637               	decf	dtoa@w^0,f,c
 13800  002C10  A0D8               	btfss	status,0,c
 13801  002C12  0638               	decf	(dtoa@w+1)^0,f,c
 13802  002C14                     l9083:
 13803                           
 13804                           ; BSR set to: 1
 13805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13806  002C14  0E00               	movlw	0
 13807  002C16  6E44               	movwf	(dtoa@i+1)^0,c
 13808  002C18  0E4F               	movlw	79
 13809  002C1A  6E43               	movwf	dtoa@i^0,c
 13810  002C1C                     
 13811                           ; BSR set to: 1
 13812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13813  002C1C  0E00               	movlw	0
 13814  002C1E  6F90               	movwf	(_dbuf+79)& (0+255),b
 13815                           
 13816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13817  002C20  EF8E  F016         	goto	l9097
 13818  002C24                     l9087:
 13819                           
 13820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13821  002C24  0643               	decf	dtoa@i^0,f,c
 13822  002C26  A0D8               	btfss	status,0,c
 13823  002C28  0644               	decf	(dtoa@i+1)^0,f,c
 13824  002C2A                     
 13825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13826  002C2A  0E41               	movlw	low _dbuf
 13827  002C2C  2443               	addwf	dtoa@i^0,w,c
 13828  002C2E  6ED9               	movwf	fsr2l,c
 13829  002C30  0E01               	movlw	high _dbuf
 13830  002C32  2044               	addwfc	(dtoa@i+1)^0,w,c
 13831  002C34  6EDA               	movwf	fsr2h,c
 13832  002C36  C03B  F006         	movff	dtoa@n,___aomod@dividend
 13833  002C3A  C03C  F007         	movff	dtoa@n+1,___aomod@dividend+1
 13834  002C3E  C03D  F008         	movff	dtoa@n+2,___aomod@dividend+2
 13835  002C42  C03E  F009         	movff	dtoa@n+3,___aomod@dividend+3
 13836  002C46  C03F  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 13837  002C4A  C040  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 13838  002C4E  C041  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 13839  002C52  C042  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 13840  002C56  0E0A               	movlw	10
 13841  002C58  6E0E               	movwf	___aomod@divisor^0,c
 13842  002C5A  0E00               	movlw	0
 13843  002C5C  6E0F               	movwf	(___aomod@divisor+1)^0,c
 13844  002C5E  0E00               	movlw	0
 13845  002C60  6E10               	movwf	(___aomod@divisor+2)^0,c
 13846  002C62  0E00               	movlw	0
 13847  002C64  6E11               	movwf	(___aomod@divisor+3)^0,c
 13848  002C66  0E00               	movlw	0
 13849  002C68  6E12               	movwf	(___aomod@divisor+4)^0,c
 13850  002C6A  0E00               	movlw	0
 13851  002C6C  6E13               	movwf	(___aomod@divisor+5)^0,c
 13852  002C6E  0E00               	movlw	0
 13853  002C70  6E14               	movwf	(___aomod@divisor+6)^0,c
 13854  002C72  0E00               	movlw	0
 13855  002C74  6E15               	movwf	(___aomod@divisor+7)^0,c
 13856  002C76  EC0C  F01E         	call	___aomod	;wreg free
 13857  002C7A  C006  F02B         	movff	?___aomod,??_dtoa
 13858  002C7E  C007  F02C         	movff	?___aomod+1,??_dtoa+1
 13859  002C82  C008  F02D         	movff	?___aomod+2,??_dtoa+2
 13860  002C86  C009  F02E         	movff	?___aomod+3,??_dtoa+3
 13861  002C8A  C00A  F02F         	movff	?___aomod+4,??_dtoa+4
 13862  002C8E  C00B  F030         	movff	?___aomod+5,??_dtoa+5
 13863  002C92  C00C  F031         	movff	?___aomod+6,??_dtoa+6
 13864  002C96  C00D  F032         	movff	?___aomod+7,??_dtoa+7
 13865  002C9A  C02B  F018         	movff	??_dtoa,abs@a
 13866  002C9E  C02D  F019         	movff	??_dtoa+2,abs@a+1
 13867  002CA2  EC66  F02A         	call	_abs	;wreg free
 13868  002CA6  5018               	movf	?_abs^0,w,c
 13869  002CA8  0F30               	addlw	48
 13870  002CAA  6EDF               	movwf	indf2,c
 13871  002CAC                     
 13872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13873  002CAC  0635               	decf	dtoa@p^0,f,c
 13874  002CAE  A0D8               	btfss	status,0,c
 13875  002CB0  0636               	decf	(dtoa@p+1)^0,f,c
 13876  002CB2                     
 13877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13878  002CB2  0637               	decf	dtoa@w^0,f,c
 13879  002CB4  A0D8               	btfss	status,0,c
 13880  002CB6  0638               	decf	(dtoa@w+1)^0,f,c
 13881  002CB8                     
 13882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13883  002CB8  C03B  F006         	movff	dtoa@n,___aodiv@dividend
 13884  002CBC  C03C  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 13885  002CC0  C03D  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 13886  002CC4  C03E  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 13887  002CC8  C03F  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 13888  002CCC  C040  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 13889  002CD0  C041  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 13890  002CD4  C042  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 13891  002CD8  0E0A               	movlw	10
 13892  002CDA  6E0E               	movwf	___aodiv@divisor^0,c
 13893  002CDC  0E00               	movlw	0
 13894  002CDE  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 13895  002CE0  0E00               	movlw	0
 13896  002CE2  6E10               	movwf	(___aodiv@divisor+2)^0,c
 13897  002CE4  0E00               	movlw	0
 13898  002CE6  6E11               	movwf	(___aodiv@divisor+3)^0,c
 13899  002CE8  0E00               	movlw	0
 13900  002CEA  6E12               	movwf	(___aodiv@divisor+4)^0,c
 13901  002CEC  0E00               	movlw	0
 13902  002CEE  6E13               	movwf	(___aodiv@divisor+5)^0,c
 13903  002CF0  0E00               	movlw	0
 13904  002CF2  6E14               	movwf	(___aodiv@divisor+6)^0,c
 13905  002CF4  0E00               	movlw	0
 13906  002CF6  6E15               	movwf	(___aodiv@divisor+7)^0,c
 13907  002CF8  EC8A  F01C         	call	___aodiv	;wreg free
 13908  002CFC  C006  F03B         	movff	?___aodiv,dtoa@n
 13909  002D00  C007  F03C         	movff	?___aodiv+1,dtoa@n+1
 13910  002D04  C008  F03D         	movff	?___aodiv+2,dtoa@n+2
 13911  002D08  C009  F03E         	movff	?___aodiv+3,dtoa@n+3
 13912  002D0C  C00A  F03F         	movff	?___aodiv+4,dtoa@n+4
 13913  002D10  C00B  F040         	movff	?___aodiv+5,dtoa@n+5
 13914  002D14  C00C  F041         	movff	?___aodiv+6,dtoa@n+6
 13915  002D18  C00D  F042         	movff	?___aodiv+7,dtoa@n+7
 13916  002D1C                     l9097:
 13917                           
 13918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13919  002D1C  BE44               	btfsc	(dtoa@i+1)^0,7,c
 13920  002D1E  EF99  F016         	goto	u9921
 13921  002D22  5044               	movf	(dtoa@i+1)^0,w,c
 13922  002D24  E108               	bnz	u9920
 13923  002D26  0443               	decf	dtoa@i^0,w,c
 13924  002D28  A0D8               	btfss	status,0,c
 13925  002D2A  EF99  F016         	goto	u9921
 13926  002D2E  EF9B  F016         	goto	u9920
 13927  002D32                     u9921:
 13928  002D32  EFCB  F016         	goto	l9107
 13929  002D36                     u9920:
 13930  002D36  503B               	movf	dtoa@n^0,w,c
 13931  002D38  103C               	iorwf	(dtoa@n+1)^0,w,c
 13932  002D3A  103D               	iorwf	(dtoa@n+2)^0,w,c
 13933  002D3C  103E               	iorwf	(dtoa@n+3)^0,w,c
 13934  002D3E  103F               	iorwf	(dtoa@n+4)^0,w,c
 13935  002D40  1040               	iorwf	(dtoa@n+5)^0,w,c
 13936  002D42  1041               	iorwf	(dtoa@n+6)^0,w,c
 13937  002D44  1042               	iorwf	(dtoa@n+7)^0,w,c
 13938  002D46  A4D8               	btfss	status,2,c
 13939  002D48  EFA8  F016         	goto	u9931
 13940  002D4C  EFAA  F016         	goto	u9930
 13941  002D50                     u9931:
 13942  002D50  EF12  F016         	goto	l9087
 13943  002D54                     u9930:
 13944  002D54  BE36               	btfsc	(dtoa@p+1)^0,7,c
 13945  002D56  EFB7  F016         	goto	u9940
 13946  002D5A  5036               	movf	(dtoa@p+1)^0,w,c
 13947  002D5C  E106               	bnz	u9941
 13948  002D5E  0435               	decf	dtoa@p^0,w,c
 13949  002D60  B0D8               	btfsc	status,0,c
 13950  002D62  EFB5  F016         	goto	u9941
 13951  002D66  EFB7  F016         	goto	u9940
 13952  002D6A                     u9941:
 13953  002D6A  EF12  F016         	goto	l9087
 13954  002D6E                     u9940:
 13955  002D6E  BE38               	btfsc	(dtoa@w+1)^0,7,c
 13956  002D70  EFC2  F016         	goto	u9951
 13957  002D74  5038               	movf	(dtoa@w+1)^0,w,c
 13958  002D76  E108               	bnz	u9950
 13959  002D78  0437               	decf	dtoa@w^0,w,c
 13960  002D7A  A0D8               	btfss	status,0,c
 13961  002D7C  EFC2  F016         	goto	u9951
 13962  002D80  EFC4  F016         	goto	u9950
 13963  002D84                     u9951:
 13964  002D84  EFCB  F016         	goto	l9107
 13965  002D88                     u9950:
 13966  002D88  B255               	btfsc	_flags^0,1,c
 13967  002D8A  EFC9  F016         	goto	u9961
 13968  002D8E  EFCB  F016         	goto	u9960
 13969  002D92                     u9961:
 13970  002D92  EF12  F016         	goto	l9087
 13971  002D96                     u9960:
 13972  002D96                     l9107:
 13973                           
 13974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13975  002D96  5039               	movf	dtoa@s^0,w,c
 13976  002D98  103A               	iorwf	(dtoa@s+1)^0,w,c
 13977  002D9A  A4D8               	btfss	status,2,c
 13978  002D9C  EFD2  F016         	goto	u9971
 13979  002DA0  EFD4  F016         	goto	u9970
 13980  002DA4                     u9971:
 13981  002DA4  EFDB  F016         	goto	l9111
 13982  002DA8                     u9970:
 13983  002DA8  A455               	btfss	_flags^0,2,c
 13984  002DAA  EFD9  F016         	goto	u9981
 13985  002DAE  EFDB  F016         	goto	u9980
 13986  002DB2                     u9981:
 13987  002DB2  EFF9  F016         	goto	l9121
 13988  002DB6                     u9980:
 13989  002DB6                     l9111:
 13990                           
 13991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13992  002DB6  0643               	decf	dtoa@i^0,f,c
 13993  002DB8  A0D8               	btfss	status,0,c
 13994  002DBA  0644               	decf	(dtoa@i+1)^0,f,c
 13995  002DBC                     
 13996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13997  002DBC  5039               	movf	dtoa@s^0,w,c
 13998  002DBE  103A               	iorwf	(dtoa@s+1)^0,w,c
 13999  002DC0  A4D8               	btfss	status,2,c
 14000  002DC2  EFE5  F016         	goto	u9991
 14001  002DC6  EFE7  F016         	goto	u9990
 14002  002DCA                     u9991:
 14003  002DCA  EFED  F016         	goto	l9117
 14004  002DCE                     u9990:
 14005  002DCE  0E00               	movlw	0
 14006  002DD0  6E34               	movwf	(_dtoa$916+1)^0,c
 14007  002DD2  0E2B               	movlw	43
 14008  002DD4  6E33               	movwf	_dtoa$916^0,c
 14009  002DD6  EFF1  F016         	goto	l9119
 14010  002DDA                     l9117:
 14011  002DDA  0E00               	movlw	0
 14012  002DDC  6E34               	movwf	(_dtoa$916+1)^0,c
 14013  002DDE  0E2D               	movlw	45
 14014  002DE0  6E33               	movwf	_dtoa$916^0,c
 14015  002DE2                     l9119:
 14016  002DE2  0E41               	movlw	low _dbuf
 14017  002DE4  2443               	addwf	dtoa@i^0,w,c
 14018  002DE6  6ED9               	movwf	fsr2l,c
 14019  002DE8  0E01               	movlw	high _dbuf
 14020  002DEA  2044               	addwfc	(dtoa@i+1)^0,w,c
 14021  002DEC  6EDA               	movwf	fsr2h,c
 14022  002DEE  C033  FFDF         	movff	_dtoa$916,indf2
 14023  002DF2                     l9121:
 14024                           
 14025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 14026  002DF2  C021  F016         	movff	dtoa@fp,pad@fp
 14027  002DF6  C022  F017         	movff	dtoa@fp+1,pad@fp+1
 14028  002DFA  0E41               	movlw	low _dbuf
 14029  002DFC  2443               	addwf	dtoa@i^0,w,c
 14030  002DFE  6E18               	movwf	pad@buf^0,c
 14031  002E00  0E01               	movlw	high _dbuf
 14032  002E02  2044               	addwfc	(dtoa@i+1)^0,w,c
 14033  002E04  6E19               	movwf	(pad@buf+1)^0,c
 14034  002E06  C037  F01A         	movff	dtoa@w,pad@p
 14035  002E0A  C038  F01B         	movff	dtoa@w+1,pad@p+1
 14036  002E0E  EC90  F023         	call	_pad	;wreg free
 14037  002E12  C016  F021         	movff	?_pad,?_dtoa
 14038  002E16  C017  F022         	movff	?_pad+1,?_dtoa+1
 14039  002E1A  0012               	return		;funcret
 14040  002E1C                     __end_of_dtoa:
 14041                           	opt callstack 0
 14042                           
 14043 ;; *************** function _abs *****************
 14044 ;; Defined at:
 14045 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14046 ;; Parameters:    Size  Location     Type
 14047 ;;  a               2   23[COMRAM] int 
 14048 ;; Auto vars:     Size  Location     Type
 14049 ;;		None
 14050 ;; Return value:  Size  Location     Type
 14051 ;;                  2   23[COMRAM] int 
 14052 ;; Registers used:
 14053 ;;		wreg, status,2, status,0
 14054 ;; Tracked objects:
 14055 ;;		On entry : 0/0
 14056 ;;		On exit  : 0/0
 14057 ;;		Unchanged: 0/0
 14058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14059 ;;      Params:         2       0       0       0       0       0       0       0       0
 14060 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14061 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14062 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14063 ;;Total ram usage:        4 bytes
 14064 ;; Hardware stack levels used:    1
 14065 ;; Hardware stack levels required when called:    2
 14066 ;; This function calls:
 14067 ;;		Nothing
 14068 ;; This function is called by:
 14069 ;;		_dtoa
 14070 ;; This function uses a non-reentrant model
 14071 ;;
 14072                           
 14073                           	psect	text52
 14074  0054CC                     __ptext52:
 14075                           	opt callstack 0
 14076  0054CC                     _abs:
 14077                           	opt callstack 23
 14078  0054CC  BE19               	btfsc	(abs@a+1)^0,7,c
 14079  0054CE  EF73  F02A         	goto	u8610
 14080  0054D2  5019               	movf	(abs@a+1)^0,w,c
 14081  0054D4  E106               	bnz	u8611
 14082  0054D6  0418               	decf	abs@a^0,w,c
 14083  0054D8  B0D8               	btfsc	status,0,c
 14084  0054DA  EF71  F02A         	goto	u8611
 14085  0054DE  EF73  F02A         	goto	u8610
 14086  0054E2                     u8611:
 14087  0054E2  EF81  F02A         	goto	l1647
 14088  0054E6                     u8610:
 14089  0054E6  C018  F01A         	movff	abs@a,??_abs
 14090  0054EA  C019  F01B         	movff	abs@a+1,??_abs+1
 14091  0054EE  1E1A               	comf	??_abs^0,f,c
 14092  0054F0  1E1B               	comf	(??_abs+1)^0,f,c
 14093  0054F2  4A1A               	infsnz	??_abs^0,f,c
 14094  0054F4  2A1B               	incf	(??_abs+1)^0,f,c
 14095  0054F6  C01A  F018         	movff	??_abs,?_abs
 14096  0054FA  C01B  F019         	movff	??_abs+1,?_abs+1
 14097  0054FE  EF85  F02A         	goto	l1650
 14098  005502                     l1647:
 14099  005502  C018  F018         	movff	abs@a,?_abs
 14100  005506  C019  F019         	movff	abs@a+1,?_abs+1
 14101  00550A                     l1650:
 14102  00550A  0012               	return		;funcret
 14103  00550C                     __end_of_abs:
 14104                           	opt callstack 0
 14105                           
 14106 ;; *************** function ___aomod *****************
 14107 ;; Defined at:
 14108 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;  dividend        8    5[COMRAM] long long 
 14111 ;;  divisor         8   13[COMRAM] long long 
 14112 ;; Auto vars:     Size  Location     Type
 14113 ;;  sign            1   22[COMRAM] unsigned char 
 14114 ;;  counter         1   21[COMRAM] unsigned char 
 14115 ;; Return value:  Size  Location     Type
 14116 ;;                  8    5[COMRAM] long long 
 14117 ;; Registers used:
 14118 ;;		wreg, status,2, status,0
 14119 ;; Tracked objects:
 14120 ;;		On entry : 0/0
 14121 ;;		On exit  : 0/0
 14122 ;;		Unchanged: 0/0
 14123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14124 ;;      Params:        16       0       0       0       0       0       0       0       0
 14125 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14126 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14127 ;;      Totals:        18       0       0       0       0       0       0       0       0
 14128 ;;Total ram usage:       18 bytes
 14129 ;; Hardware stack levels used:    1
 14130 ;; Hardware stack levels required when called:    2
 14131 ;; This function calls:
 14132 ;;		Nothing
 14133 ;; This function is called by:
 14134 ;;		_dtoa
 14135 ;; This function uses a non-reentrant model
 14136 ;;
 14137                           
 14138                           	psect	text53
 14139  003C18                     __ptext53:
 14140                           	opt callstack 0
 14141  003C18                     ___aomod:
 14142                           	opt callstack 23
 14143  003C18  0E00               	movlw	0
 14144  003C1A  6E17               	movwf	___aomod@sign^0,c
 14145  003C1C  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 14146  003C1E  EF15  F01E         	goto	u8930
 14147  003C22  EF13  F01E         	goto	u8931
 14148  003C26                     u8931:
 14149  003C26  EF27  F01E         	goto	l8501
 14150  003C2A                     u8930:
 14151  003C2A  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14152  003C2C  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14153  003C2E  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14154  003C30  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14155  003C32  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14156  003C34  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14157  003C36  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14158  003C38  6C06               	negf	___aomod@dividend^0,c
 14159  003C3A  0E00               	movlw	0
 14160  003C3C  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14161  003C3E  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14162  003C40  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14163  003C42  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14164  003C44  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14165  003C46  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14166  003C48  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14167  003C4A  0E01               	movlw	1
 14168  003C4C  6E17               	movwf	___aomod@sign^0,c
 14169  003C4E                     l8501:
 14170  003C4E  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 14171  003C50  EF2E  F01E         	goto	u8940
 14172  003C54  EF2C  F01E         	goto	u8941
 14173  003C58                     u8941:
 14174  003C58  EF3E  F01E         	goto	l8505
 14175  003C5C                     u8940:
 14176  003C5C  1E15               	comf	(___aomod@divisor+7)^0,f,c
 14177  003C5E  1E14               	comf	(___aomod@divisor+6)^0,f,c
 14178  003C60  1E13               	comf	(___aomod@divisor+5)^0,f,c
 14179  003C62  1E12               	comf	(___aomod@divisor+4)^0,f,c
 14180  003C64  1E11               	comf	(___aomod@divisor+3)^0,f,c
 14181  003C66  1E10               	comf	(___aomod@divisor+2)^0,f,c
 14182  003C68  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 14183  003C6A  6C0E               	negf	___aomod@divisor^0,c
 14184  003C6C  0E00               	movlw	0
 14185  003C6E  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 14186  003C70  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 14187  003C72  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 14188  003C74  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 14189  003C76  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 14190  003C78  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 14191  003C7A  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 14192  003C7C                     l8505:
 14193  003C7C  500E               	movf	___aomod@divisor^0,w,c
 14194  003C7E  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 14195  003C80  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 14196  003C82  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 14197  003C84  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 14198  003C86  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 14199  003C88  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 14200  003C8A  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 14201  003C8C  B4D8               	btfsc	status,2,c
 14202  003C8E  EF4B  F01E         	goto	u8951
 14203  003C92  EF4D  F01E         	goto	u8950
 14204  003C96                     u8951:
 14205  003C96  EF95  F01E         	goto	l8521
 14206  003C9A                     u8950:
 14207  003C9A  0E01               	movlw	1
 14208  003C9C  6E16               	movwf	___aomod@counter^0,c
 14209  003C9E  EF5B  F01E         	goto	l8511
 14210  003CA2                     l8509:
 14211  003CA2  90D8               	bcf	status,0,c
 14212  003CA4  360E               	rlcf	___aomod@divisor^0,f,c
 14213  003CA6  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 14214  003CA8  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 14215  003CAA  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 14216  003CAC  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 14217  003CAE  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 14218  003CB0  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 14219  003CB2  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 14220  003CB4  2A16               	incf	___aomod@counter^0,f,c
 14221  003CB6                     l8511:
 14222  003CB6  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 14223  003CB8  EF60  F01E         	goto	u8961
 14224  003CBC  EF62  F01E         	goto	u8960
 14225  003CC0                     u8961:
 14226  003CC0  EF51  F01E         	goto	l8509
 14227  003CC4                     u8960:
 14228  003CC4                     l8513:
 14229  003CC4  500E               	movf	___aomod@divisor^0,w,c
 14230  003CC6  5C06               	subwf	___aomod@dividend^0,w,c
 14231  003CC8  500F               	movf	(___aomod@divisor+1)^0,w,c
 14232  003CCA  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 14233  003CCC  5010               	movf	(___aomod@divisor+2)^0,w,c
 14234  003CCE  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 14235  003CD0  5011               	movf	(___aomod@divisor+3)^0,w,c
 14236  003CD2  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 14237  003CD4  5012               	movf	(___aomod@divisor+4)^0,w,c
 14238  003CD6  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 14239  003CD8  5013               	movf	(___aomod@divisor+5)^0,w,c
 14240  003CDA  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 14241  003CDC  5014               	movf	(___aomod@divisor+6)^0,w,c
 14242  003CDE  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 14243  003CE0  5015               	movf	(___aomod@divisor+7)^0,w,c
 14244  003CE2  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 14245  003CE4  A0D8               	btfss	status,0,c
 14246  003CE6  EF77  F01E         	goto	u8971
 14247  003CEA  EF79  F01E         	goto	u8970
 14248  003CEE                     u8971:
 14249  003CEE  EF89  F01E         	goto	l8517
 14250  003CF2                     u8970:
 14251  003CF2  500E               	movf	___aomod@divisor^0,w,c
 14252  003CF4  5E06               	subwf	___aomod@dividend^0,f,c
 14253  003CF6  500F               	movf	(___aomod@divisor+1)^0,w,c
 14254  003CF8  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 14255  003CFA  5010               	movf	(___aomod@divisor+2)^0,w,c
 14256  003CFC  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 14257  003CFE  5011               	movf	(___aomod@divisor+3)^0,w,c
 14258  003D00  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 14259  003D02  5012               	movf	(___aomod@divisor+4)^0,w,c
 14260  003D04  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 14261  003D06  5013               	movf	(___aomod@divisor+5)^0,w,c
 14262  003D08  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 14263  003D0A  5014               	movf	(___aomod@divisor+6)^0,w,c
 14264  003D0C  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 14265  003D0E  5015               	movf	(___aomod@divisor+7)^0,w,c
 14266  003D10  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 14267  003D12                     l8517:
 14268  003D12  90D8               	bcf	status,0,c
 14269  003D14  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 14270  003D16  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 14271  003D18  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 14272  003D1A  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 14273  003D1C  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 14274  003D1E  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 14275  003D20  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 14276  003D22  320E               	rrcf	___aomod@divisor^0,f,c
 14277  003D24  2E16               	decfsz	___aomod@counter^0,f,c
 14278  003D26  EF62  F01E         	goto	l8513
 14279  003D2A                     l8521:
 14280  003D2A  5017               	movf	___aomod@sign^0,w,c
 14281  003D2C  B4D8               	btfsc	status,2,c
 14282  003D2E  EF9B  F01E         	goto	u8981
 14283  003D32  EF9D  F01E         	goto	u8980
 14284  003D36                     u8981:
 14285  003D36  EFAD  F01E         	goto	l8525
 14286  003D3A                     u8980:
 14287  003D3A  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 14288  003D3C  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 14289  003D3E  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 14290  003D40  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 14291  003D42  1E09               	comf	(___aomod@dividend+3)^0,f,c
 14292  003D44  1E08               	comf	(___aomod@dividend+2)^0,f,c
 14293  003D46  1E07               	comf	(___aomod@dividend+1)^0,f,c
 14294  003D48  6C06               	negf	___aomod@dividend^0,c
 14295  003D4A  0E00               	movlw	0
 14296  003D4C  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 14297  003D4E  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 14298  003D50  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 14299  003D52  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 14300  003D54  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 14301  003D56  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 14302  003D58  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 14303  003D5A                     l8525:
 14304  003D5A  C006  F006         	movff	___aomod@dividend,?___aomod
 14305  003D5E  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 14306  003D62  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 14307  003D66  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 14308  003D6A  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 14309  003D6E  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 14310  003D72  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 14311  003D76  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 14312  003D7A  0012               	return		;funcret
 14313  003D7C                     __end_of___aomod:
 14314                           	opt callstack 0
 14315                           
 14316 ;; *************** function ___aodiv *****************
 14317 ;; Defined at:
 14318 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;  dividend        8    5[COMRAM] long long 
 14321 ;;  divisor         8   13[COMRAM] long long 
 14322 ;; Auto vars:     Size  Location     Type
 14323 ;;  quotient        8   23[COMRAM] long long 
 14324 ;;  sign            1   22[COMRAM] unsigned char 
 14325 ;;  counter         1   21[COMRAM] unsigned char 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  8    5[COMRAM] long long 
 14328 ;; Registers used:
 14329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14335 ;;      Params:        16       0       0       0       0       0       0       0       0
 14336 ;;      Locals:        10       0       0       0       0       0       0       0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14338 ;;      Totals:        26       0       0       0       0       0       0       0       0
 14339 ;;Total ram usage:       26 bytes
 14340 ;; Hardware stack levels used:    1
 14341 ;; Hardware stack levels required when called:    2
 14342 ;; This function calls:
 14343 ;;		Nothing
 14344 ;; This function is called by:
 14345 ;;		_dtoa
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349                           	psect	text54
 14350  003914                     __ptext54:
 14351                           	opt callstack 0
 14352  003914                     ___aodiv:
 14353                           	opt callstack 23
 14354  003914  0E00               	movlw	0
 14355  003916  6E17               	movwf	___aodiv@sign^0,c
 14356  003918  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 14357  00391A  EF93  F01C         	goto	u8860
 14358  00391E  EF91  F01C         	goto	u8861
 14359  003922                     u8861:
 14360  003922  EFA5  F01C         	goto	l8457
 14361  003926                     u8860:
 14362  003926  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 14363  003928  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 14364  00392A  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 14365  00392C  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 14366  00392E  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 14367  003930  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 14368  003932  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 14369  003934  6C0E               	negf	___aodiv@divisor^0,c
 14370  003936  0E00               	movlw	0
 14371  003938  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 14372  00393A  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 14373  00393C  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 14374  00393E  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 14375  003940  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 14376  003942  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 14377  003944  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 14378  003946  0E01               	movlw	1
 14379  003948  6E17               	movwf	___aodiv@sign^0,c
 14380  00394A                     l8457:
 14381  00394A  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 14382  00394C  EFAC  F01C         	goto	u8870
 14383  003950  EFAA  F01C         	goto	u8871
 14384  003954                     u8871:
 14385  003954  EFBE  F01C         	goto	l8463
 14386  003958                     u8870:
 14387  003958  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 14388  00395A  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 14389  00395C  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 14390  00395E  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 14391  003960  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 14392  003962  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 14393  003964  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 14394  003966  6C06               	negf	___aodiv@dividend^0,c
 14395  003968  0E00               	movlw	0
 14396  00396A  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 14397  00396C  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 14398  00396E  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 14399  003970  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 14400  003972  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 14401  003974  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 14402  003976  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 14403  003978  0E01               	movlw	1
 14404  00397A  1A17               	xorwf	___aodiv@sign^0,f,c
 14405  00397C                     l8463:
 14406  00397C  EE20  F018         	lfsr	2,___aodiv@quotient
 14407  003980  0E07               	movlw	7
 14408  003982                     u8881:
 14409  003982  6ADE               	clrf	postinc2,c
 14410  003984  06E8               	decf	wreg,f,c
 14411  003986  E2FD               	bc	u8881
 14412  003988  500E               	movf	___aodiv@divisor^0,w,c
 14413  00398A  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 14414  00398C  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 14415  00398E  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 14416  003990  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 14417  003992  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 14418  003994  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 14419  003996  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 14420  003998  B4D8               	btfsc	status,2,c
 14421  00399A  EFD1  F01C         	goto	u8891
 14422  00399E  EFD3  F01C         	goto	u8890
 14423  0039A2                     u8891:
 14424  0039A2  EF25  F01D         	goto	l8485
 14425  0039A6                     u8890:
 14426  0039A6  0E01               	movlw	1
 14427  0039A8  6E16               	movwf	___aodiv@counter^0,c
 14428  0039AA  EFE1  F01C         	goto	l8471
 14429  0039AE                     l8469:
 14430  0039AE  90D8               	bcf	status,0,c
 14431  0039B0  360E               	rlcf	___aodiv@divisor^0,f,c
 14432  0039B2  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 14433  0039B4  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 14434  0039B6  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 14435  0039B8  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 14436  0039BA  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 14437  0039BC  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 14438  0039BE  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 14439  0039C0  2A16               	incf	___aodiv@counter^0,f,c
 14440  0039C2                     l8471:
 14441  0039C2  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 14442  0039C4  EFE6  F01C         	goto	u8901
 14443  0039C8  EFE8  F01C         	goto	u8900
 14444  0039CC                     u8901:
 14445  0039CC  EFD7  F01C         	goto	l8469
 14446  0039D0                     u8900:
 14447  0039D0                     l8473:
 14448  0039D0  90D8               	bcf	status,0,c
 14449  0039D2  3618               	rlcf	___aodiv@quotient^0,f,c
 14450  0039D4  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 14451  0039D6  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 14452  0039D8  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 14453  0039DA  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 14454  0039DC  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 14455  0039DE  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 14456  0039E0  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 14457  0039E2  500E               	movf	___aodiv@divisor^0,w,c
 14458  0039E4  5C06               	subwf	___aodiv@dividend^0,w,c
 14459  0039E6  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14460  0039E8  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 14461  0039EA  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14462  0039EC  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 14463  0039EE  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14464  0039F0  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 14465  0039F2  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14466  0039F4  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 14467  0039F6  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14468  0039F8  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 14469  0039FA  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14470  0039FC  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 14471  0039FE  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14472  003A00  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 14473  003A02  A0D8               	btfss	status,0,c
 14474  003A04  EF06  F01D         	goto	u8911
 14475  003A08  EF08  F01D         	goto	u8910
 14476  003A0C                     u8911:
 14477  003A0C  EF19  F01D         	goto	l8481
 14478  003A10                     u8910:
 14479  003A10  500E               	movf	___aodiv@divisor^0,w,c
 14480  003A12  5E06               	subwf	___aodiv@dividend^0,f,c
 14481  003A14  500F               	movf	(___aodiv@divisor+1)^0,w,c
 14482  003A16  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 14483  003A18  5010               	movf	(___aodiv@divisor+2)^0,w,c
 14484  003A1A  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 14485  003A1C  5011               	movf	(___aodiv@divisor+3)^0,w,c
 14486  003A1E  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 14487  003A20  5012               	movf	(___aodiv@divisor+4)^0,w,c
 14488  003A22  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 14489  003A24  5013               	movf	(___aodiv@divisor+5)^0,w,c
 14490  003A26  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 14491  003A28  5014               	movf	(___aodiv@divisor+6)^0,w,c
 14492  003A2A  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 14493  003A2C  5015               	movf	(___aodiv@divisor+7)^0,w,c
 14494  003A2E  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 14495  003A30  8018               	bsf	___aodiv@quotient^0,0,c
 14496  003A32                     l8481:
 14497  003A32  90D8               	bcf	status,0,c
 14498  003A34  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 14499  003A36  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 14500  003A38  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 14501  003A3A  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 14502  003A3C  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 14503  003A3E  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 14504  003A40  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 14505  003A42  320E               	rrcf	___aodiv@divisor^0,f,c
 14506  003A44  2E16               	decfsz	___aodiv@counter^0,f,c
 14507  003A46  EFE8  F01C         	goto	l8473
 14508  003A4A                     l8485:
 14509  003A4A  5017               	movf	___aodiv@sign^0,w,c
 14510  003A4C  B4D8               	btfsc	status,2,c
 14511  003A4E  EF2B  F01D         	goto	u8921
 14512  003A52  EF2D  F01D         	goto	u8920
 14513  003A56                     u8921:
 14514  003A56  EF3D  F01D         	goto	l8489
 14515  003A5A                     u8920:
 14516  003A5A  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 14517  003A5C  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 14518  003A5E  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 14519  003A60  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 14520  003A62  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 14521  003A64  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 14522  003A66  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 14523  003A68  6C18               	negf	___aodiv@quotient^0,c
 14524  003A6A  0E00               	movlw	0
 14525  003A6C  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 14526  003A6E  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 14527  003A70  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 14528  003A72  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 14529  003A74  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 14530  003A76  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 14531  003A78  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 14532  003A7A                     l8489:
 14533  003A7A  C018  F006         	movff	___aodiv@quotient,?___aodiv
 14534  003A7E  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 14535  003A82  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 14536  003A86  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 14537  003A8A  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 14538  003A8E  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 14539  003A92  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 14540  003A96  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 14541  003A9A  0012               	return		;funcret
 14542  003A9C                     __end_of___aodiv:
 14543                           	opt callstack 0
 14544                           
 14545 ;; *************** function _ctoa *****************
 14546 ;; Defined at:
 14547 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 14550 ;;		 -> sprintf@f(6), 
 14551 ;;  c               1   34[COMRAM] unsigned char 
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;  w               2   35[COMRAM] int 
 14554 ;;  l               2    0        int 
 14555 ;; Return value:  Size  Location     Type
 14556 ;;                  2   32[COMRAM] int 
 14557 ;; Registers used:
 14558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14559 ;; Tracked objects:
 14560 ;;		On entry : 0/0
 14561 ;;		On exit  : 0/0
 14562 ;;		Unchanged: 0/0
 14563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14564 ;;      Params:         3       0       0       0       0       0       0       0       0
 14565 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14566 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14567 ;;      Totals:         5       0       0       0       0       0       0       0       0
 14568 ;;Total ram usage:        5 bytes
 14569 ;; Hardware stack levels used:    1
 14570 ;; Hardware stack levels required when called:    6
 14571 ;; This function calls:
 14572 ;;		_pad
 14573 ;; This function is called by:
 14574 ;;		_vfpfcnvrt
 14575 ;; This function uses a non-reentrant model
 14576 ;;
 14577                           
 14578                           	psect	text55
 14579  0050E0                     __ptext55:
 14580                           	opt callstack 0
 14581  0050E0                     _ctoa:
 14582                           	opt callstack 20
 14583  0050E0                     
 14584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14585  0050E0  0101               	movlb	1	; () banked
 14586  0050E2  5132               	movf	_width& (0+255),w,b
 14587  0050E4  1133               	iorwf	(_width+1)& (0+255),w,b
 14588  0050E6  A4D8               	btfss	status,2,c
 14589  0050E8  EF78  F028         	goto	u9841
 14590  0050EC  EF7A  F028         	goto	u9840
 14591  0050F0                     u9841:
 14592  0050F0  EF80  F028         	goto	l9053
 14593  0050F4                     u9840:
 14594  0050F4                     
 14595                           ; BSR set to: 1
 14596  0050F4  C132  F024         	movff	_width,ctoa@w
 14597  0050F8  C133  F025         	movff	_width+1,ctoa@w+1
 14598  0050FC  EF86  F028         	goto	l9055
 14599  005100                     l9053:
 14600                           
 14601                           ; BSR set to: 1
 14602  005100  0EFF               	movlw	255
 14603  005102  2532               	addwf	_width& (0+255),w,b
 14604  005104  6E24               	movwf	ctoa@w^0,c
 14605  005106  0EFF               	movlw	255
 14606  005108  2133               	addwfc	(_width+1)& (0+255),w,b
 14607  00510A  6E25               	movwf	(ctoa@w+1)^0,c
 14608  00510C                     l9055:
 14609                           
 14610                           ; BSR set to: 1
 14611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14612  00510C  C023  F141         	movff	ctoa@c,_dbuf
 14613  005110                     
 14614                           ; BSR set to: 1
 14615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14616  005110  0E00               	movlw	0
 14617  005112  6F42               	movwf	(_dbuf+1)& (0+255),b
 14618  005114                     
 14619                           ; BSR set to: 1
 14620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14621  005114  C021  F016         	movff	ctoa@fp,pad@fp
 14622  005118  C022  F017         	movff	ctoa@fp+1,pad@fp+1
 14623  00511C  0E41               	movlw	low _dbuf
 14624  00511E  6E18               	movwf	pad@buf^0,c
 14625  005120  0E01               	movlw	high _dbuf
 14626  005122  6E19               	movwf	(pad@buf+1)^0,c
 14627  005124  C024  F01A         	movff	ctoa@w,pad@p
 14628  005128  C025  F01B         	movff	ctoa@w+1,pad@p+1
 14629  00512C  EC90  F023         	call	_pad	;wreg free
 14630  005130  C016  F021         	movff	?_pad,?_ctoa
 14631  005134  C017  F022         	movff	?_pad+1,?_ctoa+1
 14632  005138  0012               	return		;funcret
 14633  00513A                     __end_of_ctoa:
 14634                           	opt callstack 0
 14635                           
 14636 ;; *************** function _pad *****************
 14637 ;; Defined at:
 14638 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14639 ;; Parameters:    Size  Location     Type
 14640 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
 14641 ;;		 -> sprintf@f(6), 
 14642 ;;  buf             2   23[COMRAM] PTR unsigned char 
 14643 ;;		 -> dbuf(80), 
 14644 ;;  p               2   25[COMRAM] int 
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;  w               2   30[COMRAM] int 
 14647 ;;  i               2   28[COMRAM] int 
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  2   21[COMRAM] int 
 14650 ;; Registers used:
 14651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/0
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14657 ;;      Params:         6       0       0       0       0       0       0       0       0
 14658 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14659 ;;      Temps:          1       0       0       0       0       0       0       0       0
 14660 ;;      Totals:        11       0       0       0       0       0       0       0       0
 14661 ;;Total ram usage:       11 bytes
 14662 ;; Hardware stack levels used:    1
 14663 ;; Hardware stack levels required when called:    5
 14664 ;; This function calls:
 14665 ;;		_fputc
 14666 ;;		_fputs
 14667 ;;		_strlen
 14668 ;; This function is called by:
 14669 ;;		_ctoa
 14670 ;;		_dtoa
 14671 ;;		_efgtoa
 14672 ;; This function uses a non-reentrant model
 14673 ;;
 14674                           
 14675                           	psect	text56
 14676  004720                     __ptext56:
 14677                           	opt callstack 0
 14678  004720                     _pad:
 14679                           	opt callstack 20
 14680  004720                     
 14681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14682  004720  A055               	btfss	_flags^0,0,c
 14683  004722  EF95  F023         	goto	u8571
 14684  004726  EF97  F023         	goto	u8570
 14685  00472A                     u8571:
 14686  00472A  EFA1  F023         	goto	l8353
 14687  00472E                     u8570:
 14688  00472E                     
 14689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14690  00472E  C018  F00F         	movff	pad@buf,fputs@s
 14691  004732  C019  F010         	movff	pad@buf+1,fputs@s+1
 14692  004736  C016  F011         	movff	pad@fp,fputs@fp
 14693  00473A  C017  F012         	movff	pad@fp+1,fputs@fp+1
 14694  00473E  EC24  F02A         	call	_fputs	;wreg free
 14695  004742                     l8353:
 14696                           
 14697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14698  004742  BE1B               	btfsc	(pad@p+1)^0,7,c
 14699  004744  EFA6  F023         	goto	u8581
 14700  004748  EFA8  F023         	goto	u8580
 14701  00474C                     u8581:
 14702  00474C  EFAE  F023         	goto	l8357
 14703  004750                     u8580:
 14704  004750  C01A  F01F         	movff	pad@p,pad@w
 14705  004754  C01B  F020         	movff	pad@p+1,pad@w+1
 14706  004758  EFB2  F023         	goto	l794
 14707  00475C                     l8357:
 14708  00475C  0E00               	movlw	0
 14709  00475E  6E20               	movwf	(pad@w+1)^0,c
 14710  004760  0E00               	movlw	0
 14711  004762  6E1F               	movwf	pad@w^0,c
 14712  004764                     l794:
 14713                           
 14714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14715  004764  0E00               	movlw	0
 14716  004766  6E1E               	movwf	(pad@i+1)^0,c
 14717  004768  0E00               	movlw	0
 14718  00476A  6E1D               	movwf	pad@i^0,c
 14719                           
 14720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14721  00476C  EFC4  F023         	goto	l8363
 14722  004770                     l8359:
 14723                           
 14724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14725  004770  0E00               	movlw	0
 14726  004772  6E07               	movwf	(fputc@c+1)^0,c
 14727  004774  0E20               	movlw	32
 14728  004776  6E06               	movwf	fputc@c^0,c
 14729  004778  C016  F008         	movff	pad@fp,fputc@fp
 14730  00477C  C017  F009         	movff	pad@fp+1,fputc@fp+1
 14731  004780  EC68  F022         	call	_fputc	;wreg free
 14732  004784                     
 14733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14734  004784  4A1D               	infsnz	pad@i^0,f,c
 14735  004786  2A1E               	incf	(pad@i+1)^0,f,c
 14736  004788                     l8363:
 14737                           
 14738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14739  004788  501F               	movf	pad@w^0,w,c
 14740  00478A  5C1D               	subwf	pad@i^0,w,c
 14741  00478C  501E               	movf	(pad@i+1)^0,w,c
 14742  00478E  0A80               	xorlw	128
 14743  004790  6E1C               	movwf	??_pad^0,c
 14744  004792  5020               	movf	(pad@w+1)^0,w,c
 14745  004794  0A80               	xorlw	128
 14746  004796  581C               	subwfb	??_pad^0,w,c
 14747  004798  A0D8               	btfss	status,0,c
 14748  00479A  EFD1  F023         	goto	u8591
 14749  00479E  EFD3  F023         	goto	u8590
 14750  0047A2                     u8591:
 14751  0047A2  EFB8  F023         	goto	l8359
 14752  0047A6                     u8590:
 14753  0047A6                     
 14754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14755  0047A6  B055               	btfsc	_flags^0,0,c
 14756  0047A8  EFD8  F023         	goto	u8601
 14757  0047AC  EFDA  F023         	goto	u8600
 14758  0047B0                     u8601:
 14759  0047B0  EFE4  F023         	goto	l8367
 14760  0047B4                     u8600:
 14761  0047B4                     
 14762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14763  0047B4  C018  F00F         	movff	pad@buf,fputs@s
 14764  0047B8  C019  F010         	movff	pad@buf+1,fputs@s+1
 14765  0047BC  C016  F011         	movff	pad@fp,fputs@fp
 14766  0047C0  C017  F012         	movff	pad@fp+1,fputs@fp+1
 14767  0047C4  EC24  F02A         	call	_fputs	;wreg free
 14768  0047C8                     l8367:
 14769                           
 14770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14771  0047C8  C018  F006         	movff	pad@buf,strlen@s
 14772  0047CC  C019  F007         	movff	pad@buf+1,strlen@s+1
 14773  0047D0  ECDA  F02A         	call	_strlen	;wreg free
 14774  0047D4  501F               	movf	pad@w^0,w,c
 14775  0047D6  2406               	addwf	?_strlen^0,w,c
 14776  0047D8  6E16               	movwf	?_pad^0,c
 14777  0047DA  5020               	movf	(pad@w+1)^0,w,c
 14778  0047DC  2007               	addwfc	(?_strlen+1)^0,w,c
 14779  0047DE  6E17               	movwf	(?_pad+1)^0,c
 14780  0047E0  0012               	return		;funcret
 14781  0047E2                     __end_of_pad:
 14782                           	opt callstack 0
 14783                           
 14784 ;; *************** function _strlen *****************
 14785 ;; Defined at:
 14786 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  s               2    5[COMRAM] PTR const unsigned char 
 14789 ;;		 -> dbuf(80), 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;  a               2    7[COMRAM] PTR const unsigned char 
 14792 ;;		 -> dbuf(80), 
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  2    5[COMRAM] unsigned int 
 14795 ;; Registers used:
 14796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14802 ;;      Params:         2       0       0       0       0       0       0       0       0
 14803 ;;      Locals:         2       0       0       0       0       0       0       0       0
 14804 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14805 ;;      Totals:         4       0       0       0       0       0       0       0       0
 14806 ;;Total ram usage:        4 bytes
 14807 ;; Hardware stack levels used:    1
 14808 ;; Hardware stack levels required when called:    2
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_pad
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text57
 14817  0055B4                     __ptext57:
 14818                           	opt callstack 0
 14819  0055B4                     _strlen:
 14820                           	opt callstack 22
 14821  0055B4  C006  F008         	movff	strlen@s,strlen@a
 14822  0055B8  C007  F009         	movff	strlen@s+1,strlen@a+1
 14823  0055BC  EFE2  F02A         	goto	l8079
 14824  0055C0                     l8077:
 14825  0055C0  4A06               	infsnz	strlen@s^0,f,c
 14826  0055C2  2A07               	incf	(strlen@s+1)^0,f,c
 14827  0055C4                     l8079:
 14828  0055C4  C006  FFD9         	movff	strlen@s,fsr2l
 14829  0055C8  C007  FFDA         	movff	strlen@s+1,fsr2h
 14830  0055CC  50DF               	movf	indf2,w,c
 14831  0055CE  A4D8               	btfss	status,2,c
 14832  0055D0  EFEC  F02A         	goto	u8071
 14833  0055D4  EFEE  F02A         	goto	u8070
 14834  0055D8                     u8071:
 14835  0055D8  EFE0  F02A         	goto	l8077
 14836  0055DC                     u8070:
 14837  0055DC  5008               	movf	strlen@a^0,w,c
 14838  0055DE  5C06               	subwf	strlen@s^0,w,c
 14839  0055E0  6E06               	movwf	?_strlen^0,c
 14840  0055E2  5009               	movf	(strlen@a+1)^0,w,c
 14841  0055E4  5807               	subwfb	(strlen@s+1)^0,w,c
 14842  0055E6  6E07               	movwf	(?_strlen+1)^0,c
 14843  0055E8  0012               	return		;funcret
 14844  0055EA                     __end_of_strlen:
 14845                           	opt callstack 0
 14846                           
 14847 ;; *************** function _fputs *****************
 14848 ;; Defined at:
 14849 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  s               2   14[COMRAM] PTR const unsigned char 
 14852 ;;		 -> dbuf(80), 
 14853 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 14854 ;;		 -> sprintf@f(6), 
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;  i               2   19[COMRAM] int 
 14857 ;;  c               1   18[COMRAM] unsigned char 
 14858 ;; Return value:  Size  Location     Type
 14859 ;;                  2   14[COMRAM] int 
 14860 ;; Registers used:
 14861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14862 ;; Tracked objects:
 14863 ;;		On entry : 0/0
 14864 ;;		On exit  : 0/0
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14867 ;;      Params:         4       0       0       0       0       0       0       0       0
 14868 ;;      Locals:         3       0       0       0       0       0       0       0       0
 14869 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14870 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14871 ;;Total ram usage:        7 bytes
 14872 ;; Hardware stack levels used:    1
 14873 ;; Hardware stack levels required when called:    4
 14874 ;; This function calls:
 14875 ;;		_fputc
 14876 ;; This function is called by:
 14877 ;;		_pad
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           	psect	text58
 14882  005448                     __ptext58:
 14883                           	opt callstack 0
 14884  005448                     _fputs:
 14885                           	opt callstack 20
 14886  005448  0E00               	movlw	0
 14887  00544A  6E15               	movwf	(fputs@i+1)^0,c
 14888  00544C  0E00               	movlw	0
 14889  00544E  6E14               	movwf	fputs@i^0,c
 14890  005450  EF35  F02A         	goto	l8073
 14891  005454                     l8069:
 14892  005454  C013  F006         	movff	fputs@c,fputc@c
 14893  005458  6A07               	clrf	(fputc@c+1)^0,c
 14894  00545A  C011  F008         	movff	fputs@fp,fputc@fp
 14895  00545E  C012  F009         	movff	fputs@fp+1,fputc@fp+1
 14896  005462  EC68  F022         	call	_fputc	;wreg free
 14897  005466  4A14               	infsnz	fputs@i^0,f,c
 14898  005468  2A15               	incf	(fputs@i+1)^0,f,c
 14899  00546A                     l8073:
 14900  00546A  5014               	movf	fputs@i^0,w,c
 14901  00546C  240F               	addwf	fputs@s^0,w,c
 14902  00546E  6ED9               	movwf	fsr2l,c
 14903  005470  5015               	movf	(fputs@i+1)^0,w,c
 14904  005472  2010               	addwfc	(fputs@s+1)^0,w,c
 14905  005474  6EDA               	movwf	fsr2h,c
 14906  005476  50DF               	movf	indf2,w,c
 14907  005478  6E13               	movwf	fputs@c^0,c
 14908  00547A  5013               	movf	fputs@c^0,w,c
 14909  00547C  A4D8               	btfss	status,2,c
 14910  00547E  EF43  F02A         	goto	u8061
 14911  005482  EF45  F02A         	goto	u8060
 14912  005486                     u8061:
 14913  005486  EF2A  F02A         	goto	l8069
 14914  00548A                     u8060:
 14915  00548A  0012               	return		;funcret
 14916  00548C                     __end_of_fputs:
 14917                           	opt callstack 0
 14918                           
 14919 ;; *************** function _fputc *****************
 14920 ;; Defined at:
 14921 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14922 ;; Parameters:    Size  Location     Type
 14923 ;;  c               2    5[COMRAM] int 
 14924 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
 14925 ;;		 -> sprintf@f(6), 
 14926 ;; Auto vars:     Size  Location     Type
 14927 ;;		None
 14928 ;; Return value:  Size  Location     Type
 14929 ;;                  2    5[COMRAM] int 
 14930 ;; Registers used:
 14931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14932 ;; Tracked objects:
 14933 ;;		On entry : 0/0
 14934 ;;		On exit  : 0/0
 14935 ;;		Unchanged: 0/0
 14936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14937 ;;      Params:         4       0       0       0       0       0       0       0       0
 14938 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14939 ;;      Temps:          5       0       0       0       0       0       0       0       0
 14940 ;;      Totals:         9       0       0       0       0       0       0       0       0
 14941 ;;Total ram usage:        9 bytes
 14942 ;; Hardware stack levels used:    1
 14943 ;; Hardware stack levels required when called:    3
 14944 ;; This function calls:
 14945 ;;		_putch
 14946 ;; This function is called by:
 14947 ;;		_pad
 14948 ;;		_vfpfcnvrt
 14949 ;;		_fputs
 14950 ;; This function uses a non-reentrant model
 14951 ;;
 14952                           
 14953                           	psect	text59
 14954  0044D0                     __ptext59:
 14955                           	opt callstack 0
 14956  0044D0                     _fputc:
 14957                           	opt callstack 23
 14958  0044D0  5008               	movf	fputc@fp^0,w,c
 14959  0044D2  1009               	iorwf	(fputc@fp+1)^0,w,c
 14960  0044D4  B4D8               	btfsc	status,2,c
 14961  0044D6  EF6F  F022         	goto	u8021
 14962  0044DA  EF71  F022         	goto	u8020
 14963  0044DE                     u8021:
 14964  0044DE  EF7A  F022         	goto	l8057
 14965  0044E2                     u8020:
 14966  0044E2  5008               	movf	fputc@fp^0,w,c
 14967  0044E4  1009               	iorwf	(fputc@fp+1)^0,w,c
 14968  0044E6  A4D8               	btfss	status,2,c
 14969  0044E8  EF78  F022         	goto	u8031
 14970  0044EC  EF7A  F022         	goto	u8030
 14971  0044F0                     u8031:
 14972  0044F0  EF7F  F022         	goto	l8059
 14973  0044F4                     u8030:
 14974  0044F4                     l8057:
 14975  0044F4  5006               	movf	fputc@c^0,w,c
 14976  0044F6  ECC8  F02B         	call	_putch
 14977  0044FA  EFCC  F022         	goto	l1726
 14978  0044FE                     l8059:
 14979  0044FE  EE20 F004          	lfsr	2,4
 14980  004502  5008               	movf	fputc@fp^0,w,c
 14981  004504  26D9               	addwf	fsr2l,f,c
 14982  004506  5009               	movf	(fputc@fp+1)^0,w,c
 14983  004508  22DA               	addwfc	fsr2h,f,c
 14984  00450A  50DE               	movf	postinc2,w,c
 14985  00450C  10DE               	iorwf	postinc2,w,c
 14986  00450E  B4D8               	btfsc	status,2,c
 14987  004510  EF8C  F022         	goto	u8041
 14988  004514  EF8E  F022         	goto	u8040
 14989  004518                     u8041:
 14990  004518  EFA9  F022         	goto	l8063
 14991  00451C                     u8040:
 14992  00451C  EE20 F004          	lfsr	2,4
 14993  004520  5008               	movf	fputc@fp^0,w,c
 14994  004522  26D9               	addwf	fsr2l,f,c
 14995  004524  5009               	movf	(fputc@fp+1)^0,w,c
 14996  004526  22DA               	addwfc	fsr2h,f,c
 14997  004528  EE10 F002          	lfsr	1,2
 14998  00452C  5008               	movf	fputc@fp^0,w,c
 14999  00452E  26E1               	addwf	fsr1l,f,c
 15000  004530  5009               	movf	(fputc@fp+1)^0,w,c
 15001  004532  22E2               	addwfc	fsr1h,f,c
 15002  004534  50DE               	movf	postinc2,w,c
 15003  004536  5CE6               	subwf	postinc1,w,c
 15004  004538  50E6               	movf	postinc1,w,c
 15005  00453A  0A80               	xorlw	128
 15006  00453C  6E0E               	movwf	(??_fputc+4)^0,c
 15007  00453E  50DE               	movf	postinc2,w,c
 15008  004540  0A80               	xorlw	128
 15009  004542  580E               	subwfb	(??_fputc+4)^0,w,c
 15010  004544  B0D8               	btfsc	status,0,c
 15011  004546  EFA7  F022         	goto	u8051
 15012  00454A  EFA9  F022         	goto	u8050
 15013  00454E                     u8051:
 15014  00454E  EFCC  F022         	goto	l1726
 15015  004552                     u8050:
 15016  004552                     l8063:
 15017  004552  EE20 F002          	lfsr	2,2
 15018  004556  5008               	movf	fputc@fp^0,w,c
 15019  004558  26D9               	addwf	fsr2l,f,c
 15020  00455A  5009               	movf	(fputc@fp+1)^0,w,c
 15021  00455C  22DA               	addwfc	fsr2h,f,c
 15022  00455E  CFDE F00A          	movff	postinc2,??_fputc
 15023  004562  CFDD F00B          	movff	postdec2,??_fputc+1
 15024  004566  C008  FFD9         	movff	fputc@fp,fsr2l
 15025  00456A  C009  FFDA         	movff	fputc@fp+1,fsr2h
 15026  00456E  CFDE F00C          	movff	postinc2,??_fputc+2
 15027  004572  CFDD F00D          	movff	postdec2,??_fputc+3
 15028  004576  500A               	movf	??_fputc^0,w,c
 15029  004578  240C               	addwf	(??_fputc+2)^0,w,c
 15030  00457A  6ED9               	movwf	fsr2l,c
 15031  00457C  500B               	movf	(??_fputc+1)^0,w,c
 15032  00457E  200D               	addwfc	(??_fputc+3)^0,w,c
 15033  004580  6EDA               	movwf	fsr2h,c
 15034  004582  C006  FFDF         	movff	fputc@c,indf2
 15035  004586  EE20 F002          	lfsr	2,2
 15036  00458A  5008               	movf	fputc@fp^0,w,c
 15037  00458C  26D9               	addwf	fsr2l,f,c
 15038  00458E  5009               	movf	(fputc@fp+1)^0,w,c
 15039  004590  22DA               	addwfc	fsr2h,f,c
 15040  004592  2ADE               	incf	postinc2,f,c
 15041  004594  0E00               	movlw	0
 15042  004596  22DD               	addwfc	postdec2,f,c
 15043  004598                     l1726:
 15044  004598  0012               	return		;funcret
 15045  00459A                     __end_of_fputc:
 15046                           	opt callstack 0
 15047                           
 15048 ;; *************** function _putch *****************
 15049 ;; Defined at:
 15050 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;  c               1    wreg     unsigned char 
 15053 ;; Auto vars:     Size  Location     Type
 15054 ;;  c               1    0[COMRAM] unsigned char 
 15055 ;; Return value:  Size  Location     Type
 15056 ;;                  1    wreg      void 
 15057 ;; Registers used:
 15058 ;;		wreg
 15059 ;; Tracked objects:
 15060 ;;		On entry : 0/0
 15061 ;;		On exit  : 0/0
 15062 ;;		Unchanged: 0/0
 15063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15064 ;;      Params:         0       0       0       0       0       0       0       0       0
 15065 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15066 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15067 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15068 ;;Total ram usage:        0 bytes
 15069 ;; Hardware stack levels used:    1
 15070 ;; Hardware stack levels required when called:    2
 15071 ;; This function calls:
 15072 ;;		Nothing
 15073 ;; This function is called by:
 15074 ;;		_fputc
 15075 ;; This function uses a non-reentrant model
 15076 ;;
 15077                           
 15078                           	psect	text60
 15079  005790                     __ptext60:
 15080                           	opt callstack 0
 15081  005790                     _putch:
 15082                           	opt callstack 23
 15083  005790  0012               	return		;funcret
 15084  005792                     __end_of_putch:
 15085                           	opt callstack 0
 15086                           
 15087 ;; *************** function _atoi *****************
 15088 ;; Defined at:
 15089 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15092 ;;		 -> STR_19(34), STR_11(32), STR_6(17), STR_5(19), 
 15093 ;;		 -> STR_4(18), STR_3(34), 
 15094 ;; Auto vars:     Size  Location     Type
 15095 ;;  n               2   25[COMRAM] int 
 15096 ;;  neg             2   18[COMRAM] int 
 15097 ;; Return value:  Size  Location     Type
 15098 ;;                  2   12[COMRAM] int 
 15099 ;; Registers used:
 15100 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15101 ;; Tracked objects:
 15102 ;;		On entry : 0/0
 15103 ;;		On exit  : 0/0
 15104 ;;		Unchanged: 0/0
 15105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15106 ;;      Params:         2       0       0       0       0       0       0       0       0
 15107 ;;      Locals:         9       0       0       0       0       0       0       0       0
 15108 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15109 ;;      Totals:        15       0       0       0       0       0       0       0       0
 15110 ;;Total ram usage:       15 bytes
 15111 ;; Hardware stack levels used:    1
 15112 ;; Hardware stack levels required when called:    3
 15113 ;; This function calls:
 15114 ;;		___wmul
 15115 ;;		_isdigit
 15116 ;;		_isspace
 15117 ;; This function is called by:
 15118 ;;		_vfpfcnvrt
 15119 ;; This function uses a non-reentrant model
 15120 ;;
 15121                           
 15122                           	psect	text61
 15123  0035F4                     __ptext61:
 15124                           	opt callstack 0
 15125  0035F4                     _atoi:
 15126                           	opt callstack 23
 15127  0035F4  0E00               	movlw	0
 15128  0035F6  6E1B               	movwf	(atoi@n+1)^0,c
 15129  0035F8  0E00               	movlw	0
 15130  0035FA  6E1A               	movwf	atoi@n^0,c
 15131  0035FC  0E00               	movlw	0
 15132  0035FE  6E14               	movwf	(atoi@neg+1)^0,c
 15133  003600  0E00               	movlw	0
 15134  003602  6E13               	movwf	atoi@neg^0,c
 15135  003604  EF06  F01B         	goto	l9427
 15136  003608                     l9425:
 15137  003608  4A0D               	infsnz	atoi@s^0,f,c
 15138  00360A  2A0E               	incf	(atoi@s+1)^0,f,c
 15139  00360C                     l9427:
 15140  00360C  0E01               	movlw	1
 15141  00360E  6E19               	movwf	_atoi$1444^0,c
 15142  003610  C00D  FFF6         	movff	atoi@s,tblptrl
 15143  003614  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15144  003618                     	if	0	;tblptru may be non-zero
 15145  003618                     	endif
 15146  003618                     	if	0	;tblptru may be non-zero
 15147  003618                     	endif
 15148  003618  0008               	tblrd		*
 15149  00361A  50F5               	movf	tablat,w,c
 15150  00361C  0A20               	xorlw	32
 15151  00361E  B4D8               	btfsc	status,2,c
 15152  003620  EF14  F01B         	goto	u10521
 15153  003624  EF16  F01B         	goto	u10520
 15154  003628                     u10521:
 15155  003628  EF33  F01B         	goto	l9435
 15156  00362C                     u10520:
 15157  00362C  0EF7               	movlw	247
 15158  00362E  6E0F               	movwf	??_atoi^0,c
 15159  003630  0EFF               	movlw	255
 15160  003632  6E10               	movwf	(??_atoi+1)^0,c
 15161  003634  C00D  FFF6         	movff	atoi@s,tblptrl
 15162  003638  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15163  00363C                     	if	0	;tblptru may be non-zero
 15164  00363C                     	endif
 15165  00363C                     	if	0	;tblptru may be non-zero
 15166  00363C                     	endif
 15167  00363C  0008               	tblrd		*
 15168  00363E  50F5               	movf	tablat,w,c
 15169  003640  6E11               	movwf	(??_atoi+2)^0,c
 15170  003642  6A12               	clrf	(??_atoi+3)^0,c
 15171  003644  500F               	movf	??_atoi^0,w,c
 15172  003646  2611               	addwf	(??_atoi+2)^0,f,c
 15173  003648  5010               	movf	(??_atoi+1)^0,w,c
 15174  00364A  2212               	addwfc	(??_atoi+3)^0,f,c
 15175  00364C  5012               	movf	(??_atoi+3)^0,w,c
 15176  00364E  E109               	bnz	u10530
 15177  003650  0E05               	movlw	5
 15178  003652  5C11               	subwf	(??_atoi+2)^0,w,c
 15179  003654  A0D8               	btfss	status,0,c
 15180  003656  EF2F  F01B         	goto	u10531
 15181  00365A  EF31  F01B         	goto	u10530
 15182  00365E                     u10531:
 15183  00365E  EF33  F01B         	goto	l9435
 15184  003662                     u10530:
 15185  003662  0E00               	movlw	0
 15186  003664  6E19               	movwf	_atoi$1444^0,c
 15187  003666                     l9435:
 15188  003666  C019  F015         	movff	_atoi$1444,_atoi$1443
 15189  00366A  6A16               	clrf	(_atoi$1443+1)^0,c
 15190  00366C  5015               	movf	_atoi$1443^0,w,c
 15191  00366E  1016               	iorwf	(_atoi$1443+1)^0,w,c
 15192  003670  A4D8               	btfss	status,2,c
 15193  003672  EF3D  F01B         	goto	u10541
 15194  003676  EF3F  F01B         	goto	u10540
 15195  00367A                     u10541:
 15196  00367A  EF04  F01B         	goto	l9425
 15197  00367E                     u10540:
 15198  00367E  EF49  F01B         	goto	l9445
 15199  003682                     l9441:
 15200  003682  0E00               	movlw	0
 15201  003684  6E14               	movwf	(atoi@neg+1)^0,c
 15202  003686  0E01               	movlw	1
 15203  003688  6E13               	movwf	atoi@neg^0,c
 15204  00368A                     l9443:
 15205  00368A  4A0D               	infsnz	atoi@s^0,f,c
 15206  00368C  2A0E               	incf	(atoi@s+1)^0,f,c
 15207  00368E  EF7E  F01B         	goto	l9451
 15208  003692                     l9445:
 15209  003692  C00D  FFF6         	movff	atoi@s,tblptrl
 15210  003696  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15211  00369A                     	if	0	;tblptru may be non-zero
 15212  00369A                     	endif
 15213  00369A                     	if	0	;tblptru may be non-zero
 15214  00369A                     	endif
 15215  00369A  0008               	tblrd		*
 15216  00369C  50F5               	movf	tablat,w,c
 15217  00369E  6E0F               	movwf	??_atoi^0,c
 15218  0036A0  6A10               	clrf	(??_atoi+1)^0,c
 15219                           
 15220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15221                           ; Switch size 1, requested type "simple"
 15222                           ; Number of cases is 1, Range of values is 0 to 0
 15223                           ; switch strategies available:
 15224                           ; Name         Instructions Cycles
 15225                           ; simple_byte            4     3 (average)
 15226                           ;	Chosen strategy is simple_byte
 15227  0036A2  5010               	movf	(??_atoi+1)^0,w,c
 15228  0036A4  0A00               	xorlw	0	; case 0
 15229  0036A6  B4D8               	btfsc	status,2,c
 15230  0036A8  EF58  F01B         	goto	l11175
 15231  0036AC  EF7E  F01B         	goto	l9451
 15232  0036B0                     l11175:
 15233                           
 15234                           ; Switch size 1, requested type "simple"
 15235                           ; Number of cases is 2, Range of values is 43 to 45
 15236                           ; switch strategies available:
 15237                           ; Name         Instructions Cycles
 15238                           ; simple_byte            7     4 (average)
 15239                           ;	Chosen strategy is simple_byte
 15240  0036B0  500F               	movf	??_atoi^0,w,c
 15241  0036B2  0A2B               	xorlw	43	; case 43
 15242  0036B4  B4D8               	btfsc	status,2,c
 15243  0036B6  EF45  F01B         	goto	l9443
 15244  0036BA  0A06               	xorlw	6	; case 45
 15245  0036BC  B4D8               	btfsc	status,2,c
 15246  0036BE  EF41  F01B         	goto	l9441
 15247  0036C2  EF7E  F01B         	goto	l9451
 15248  0036C6                     l9447:
 15249  0036C6  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15250  0036CA  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15251  0036CE  0E00               	movlw	0
 15252  0036D0  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 15253  0036D2  0E0A               	movlw	10
 15254  0036D4  6E08               	movwf	___wmul@multiplicand^0,c
 15255  0036D6  EC32  F02B         	call	___wmul	;wreg free
 15256  0036DA  C00D  FFF6         	movff	atoi@s,tblptrl
 15257  0036DE  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15258  0036E2                     	if	0	;tblptru may be non-zero
 15259  0036E2                     	endif
 15260  0036E2                     	if	0	;tblptru may be non-zero
 15261  0036E2                     	endif
 15262  0036E2  0008               	tblrd		*
 15263  0036E4  50F5               	movf	tablat,w,c
 15264  0036E6  5E06               	subwf	?___wmul^0,f,c
 15265  0036E8  0E00               	movlw	0
 15266  0036EA  5A07               	subwfb	(?___wmul+1)^0,f,c
 15267  0036EC  0E30               	movlw	48
 15268  0036EE  2406               	addwf	?___wmul^0,w,c
 15269  0036F0  6E1A               	movwf	atoi@n^0,c
 15270  0036F2  0E00               	movlw	0
 15271  0036F4  2007               	addwfc	(?___wmul+1)^0,w,c
 15272  0036F6  6E1B               	movwf	(atoi@n+1)^0,c
 15273  0036F8  EF45  F01B         	goto	l9443
 15274  0036FC                     l9451:
 15275  0036FC  0ED0               	movlw	208
 15276  0036FE  6E0F               	movwf	??_atoi^0,c
 15277  003700  0EFF               	movlw	255
 15278  003702  6E10               	movwf	(??_atoi+1)^0,c
 15279  003704  C00D  FFF6         	movff	atoi@s,tblptrl
 15280  003708  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15281  00370C                     	if	0	;tblptru may be non-zero
 15282  00370C                     	endif
 15283  00370C                     	if	0	;tblptru may be non-zero
 15284  00370C                     	endif
 15285  00370C  0008               	tblrd		*
 15286  00370E  50F5               	movf	tablat,w,c
 15287  003710  6E11               	movwf	(??_atoi+2)^0,c
 15288  003712  6A12               	clrf	(??_atoi+3)^0,c
 15289  003714  500F               	movf	??_atoi^0,w,c
 15290  003716  2611               	addwf	(??_atoi+2)^0,f,c
 15291  003718  5010               	movf	(??_atoi+1)^0,w,c
 15292  00371A  2212               	addwfc	(??_atoi+3)^0,f,c
 15293  00371C  5012               	movf	(??_atoi+3)^0,w,c
 15294  00371E  E10A               	bnz	u10550
 15295  003720  0E0A               	movlw	10
 15296  003722  5C11               	subwf	(??_atoi+2)^0,w,c
 15297  003724  A0D8               	btfss	status,0,c
 15298  003726  EF97  F01B         	goto	u10551
 15299  00372A  EF9A  F01B         	goto	u10550
 15300  00372E                     u10551:
 15301  00372E  0E01               	movlw	1
 15302  003730  EF9B  F01B         	goto	u10560
 15303  003734                     u10550:
 15304  003734  0E00               	movlw	0
 15305  003736                     u10560:
 15306  003736  6E17               	movwf	_atoi$1445^0,c
 15307  003738  6A18               	clrf	(_atoi$1445+1)^0,c
 15308  00373A  5017               	movf	_atoi$1445^0,w,c
 15309  00373C  1018               	iorwf	(_atoi$1445+1)^0,w,c
 15310  00373E  A4D8               	btfss	status,2,c
 15311  003740  EFA4  F01B         	goto	u10571
 15312  003744  EFA6  F01B         	goto	u10570
 15313  003748                     u10571:
 15314  003748  EF63  F01B         	goto	l9447
 15315  00374C                     u10570:
 15316  00374C  5013               	movf	atoi@neg^0,w,c
 15317  00374E  1014               	iorwf	(atoi@neg+1)^0,w,c
 15318  003750  A4D8               	btfss	status,2,c
 15319  003752  EFAD  F01B         	goto	u10581
 15320  003756  EFAF  F01B         	goto	u10580
 15321  00375A                     u10581:
 15322  00375A  EFBD  F01B         	goto	l1678
 15323  00375E                     u10580:
 15324  00375E  C01A  F00F         	movff	atoi@n,??_atoi
 15325  003762  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15326  003766  1E0F               	comf	??_atoi^0,f,c
 15327  003768  1E10               	comf	(??_atoi+1)^0,f,c
 15328  00376A  4A0F               	infsnz	??_atoi^0,f,c
 15329  00376C  2A10               	incf	(??_atoi+1)^0,f,c
 15330  00376E  C00F  F00D         	movff	??_atoi,?_atoi
 15331  003772  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15332  003776  EFC1  F01B         	goto	l1681
 15333  00377A                     l1678:
 15334  00377A  C01A  F00D         	movff	atoi@n,?_atoi
 15335  00377E  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15336  003782                     l1681:
 15337  003782  0012               	return		;funcret
 15338  003784                     __end_of_atoi:
 15339                           	opt callstack 0
 15340                           
 15341 ;; *************** function _isspace *****************
 15342 ;; Defined at:
 15343 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;  c               2    5[COMRAM] int 
 15346 ;; Auto vars:     Size  Location     Type
 15347 ;;		None
 15348 ;; Return value:  Size  Location     Type
 15349 ;;                  2    5[COMRAM] int 
 15350 ;; Registers used:
 15351 ;;		wreg, status,2, status,0
 15352 ;; Tracked objects:
 15353 ;;		On entry : 0/0
 15354 ;;		On exit  : 0/0
 15355 ;;		Unchanged: 0/0
 15356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15357 ;;      Params:         2       0       0       0       0       0       0       0       0
 15358 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15359 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15360 ;;      Totals:         7       0       0       0       0       0       0       0       0
 15361 ;;Total ram usage:        7 bytes
 15362 ;; Hardware stack levels used:    1
 15363 ;; Hardware stack levels required when called:    2
 15364 ;; This function calls:
 15365 ;;		Nothing
 15366 ;; This function is called by:
 15367 ;;		_atoi
 15368 ;; This function uses a non-reentrant model
 15369 ;;
 15370                           
 15371                           	psect	text62
 15372  005238                     __ptext62:
 15373                           	opt callstack 0
 15374  005238                     _isspace:
 15375                           	opt callstack 23
 15376  005238  0E01               	movlw	1
 15377  00523A  6E0C               	movwf	_isspace$1474^0,c
 15378  00523C  0E20               	movlw	32
 15379  00523E  1806               	xorwf	isspace@c^0,w,c
 15380  005240  1007               	iorwf	(isspace@c+1)^0,w,c
 15381  005242  B4D8               	btfsc	status,2,c
 15382  005244  EF26  F029         	goto	u9791
 15383  005248  EF28  F029         	goto	u9790
 15384  00524C                     u9791:
 15385  00524C  EF41  F029         	goto	l9027
 15386  005250                     u9790:
 15387  005250  0EF7               	movlw	247
 15388  005252  6E08               	movwf	??_isspace^0,c
 15389  005254  0EFF               	movlw	255
 15390  005256  6E09               	movwf	(??_isspace+1)^0,c
 15391  005258  C006  F00A         	movff	isspace@c,??_isspace+2
 15392  00525C  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15393  005260  5008               	movf	??_isspace^0,w,c
 15394  005262  260A               	addwf	(??_isspace+2)^0,f,c
 15395  005264  5009               	movf	(??_isspace+1)^0,w,c
 15396  005266  220B               	addwfc	(??_isspace+3)^0,f,c
 15397  005268  500B               	movf	(??_isspace+3)^0,w,c
 15398  00526A  E109               	bnz	u9800
 15399  00526C  0E05               	movlw	5
 15400  00526E  5C0A               	subwf	(??_isspace+2)^0,w,c
 15401  005270  A0D8               	btfss	status,0,c
 15402  005272  EF3D  F029         	goto	u9801
 15403  005276  EF3F  F029         	goto	u9800
 15404  00527A                     u9801:
 15405  00527A  EF41  F029         	goto	l9027
 15406  00527E                     u9800:
 15407  00527E  0E00               	movlw	0
 15408  005280  6E0C               	movwf	_isspace$1474^0,c
 15409  005282                     l9027:
 15410  005282  C00C  F006         	movff	_isspace$1474,?_isspace
 15411  005286  6A07               	clrf	(?_isspace+1)^0,c
 15412  005288  0012               	return		;funcret
 15413  00528A                     __end_of_isspace:
 15414                           	opt callstack 0
 15415                           
 15416 ;; *************** function _isdigit *****************
 15417 ;; Defined at:
 15418 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15419 ;; Parameters:    Size  Location     Type
 15420 ;;  c               2    5[COMRAM] int 
 15421 ;; Auto vars:     Size  Location     Type
 15422 ;;		None
 15423 ;; Return value:  Size  Location     Type
 15424 ;;                  2    5[COMRAM] int 
 15425 ;; Registers used:
 15426 ;;		wreg, status,2, status,0
 15427 ;; Tracked objects:
 15428 ;;		On entry : 0/0
 15429 ;;		On exit  : 0/0
 15430 ;;		Unchanged: 0/0
 15431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15432 ;;      Params:         2       0       0       0       0       0       0       0       0
 15433 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15434 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15435 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15436 ;;Total ram usage:        6 bytes
 15437 ;; Hardware stack levels used:    1
 15438 ;; Hardware stack levels required when called:    2
 15439 ;; This function calls:
 15440 ;;		Nothing
 15441 ;; This function is called by:
 15442 ;;		_vfpfcnvrt
 15443 ;;		_atoi
 15444 ;; This function uses a non-reentrant model
 15445 ;;
 15446                           
 15447                           	psect	text63
 15448  00557C                     __ptext63:
 15449                           	opt callstack 0
 15450  00557C                     _isdigit:
 15451                           	opt callstack 24
 15452  00557C  0ED0               	movlw	208
 15453  00557E  6E08               	movwf	??_isdigit^0,c
 15454  005580  0EFF               	movlw	255
 15455  005582  6E09               	movwf	(??_isdigit+1)^0,c
 15456  005584  C006  F00A         	movff	isdigit@c,??_isdigit+2
 15457  005588  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 15458  00558C  5008               	movf	??_isdigit^0,w,c
 15459  00558E  260A               	addwf	(??_isdigit+2)^0,f,c
 15460  005590  5009               	movf	(??_isdigit+1)^0,w,c
 15461  005592  220B               	addwfc	(??_isdigit+3)^0,f,c
 15462  005594  500B               	movf	(??_isdigit+3)^0,w,c
 15463  005596  E10A               	bnz	u8840
 15464  005598  0E0A               	movlw	10
 15465  00559A  5C0A               	subwf	(??_isdigit+2)^0,w,c
 15466  00559C  A0D8               	btfss	status,0,c
 15467  00559E  EFD3  F02A         	goto	u8841
 15468  0055A2  EFD6  F02A         	goto	u8840
 15469  0055A6                     u8841:
 15470  0055A6  0E01               	movlw	1
 15471  0055A8  EFD7  F02A         	goto	u8850
 15472  0055AC                     u8840:
 15473  0055AC  0E00               	movlw	0
 15474  0055AE                     u8850:
 15475  0055AE  6E06               	movwf	?_isdigit^0,c
 15476  0055B0  6A07               	clrf	(?_isdigit+1)^0,c
 15477  0055B2  0012               	return		;funcret
 15478  0055B4                     __end_of_isdigit:
 15479                           	opt callstack 0
 15480                           
 15481 ;; *************** function ___wmul *****************
 15482 ;; Defined at:
 15483 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15484 ;; Parameters:    Size  Location     Type
 15485 ;;  multiplier      2    5[COMRAM] unsigned int 
 15486 ;;  multiplicand    2    7[COMRAM] unsigned int 
 15487 ;; Auto vars:     Size  Location     Type
 15488 ;;  product         2    9[COMRAM] unsigned int 
 15489 ;; Return value:  Size  Location     Type
 15490 ;;                  2    5[COMRAM] unsigned int 
 15491 ;; Registers used:
 15492 ;;		wreg, status,2, status,0, prodl, prodh
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15498 ;;      Params:         4       0       0       0       0       0       0       0       0
 15499 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15500 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15501 ;;      Totals:         6       0       0       0       0       0       0       0       0
 15502 ;;Total ram usage:        6 bytes
 15503 ;; Hardware stack levels used:    1
 15504 ;; Hardware stack levels required when called:    2
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		_atoi
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           	psect	text64
 15513  005664                     __ptext64:
 15514                           	opt callstack 0
 15515  005664                     ___wmul:
 15516                           	opt callstack 23
 15517  005664  5006               	movf	___wmul@multiplier^0,w,c
 15518  005666  0208               	mulwf	___wmul@multiplicand^0,c
 15519  005668  CFF3 F00A          	movff	prodl,___wmul@product
 15520  00566C  CFF4 F00B          	movff	prodh,___wmul@product+1
 15521  005670  5006               	movf	___wmul@multiplier^0,w,c
 15522  005672  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 15523  005674  50F3               	movf	243,w,c
 15524  005676  260B               	addwf	(___wmul@product+1)^0,f,c
 15525  005678  5007               	movf	(___wmul@multiplier+1)^0,w,c
 15526  00567A  0208               	mulwf	___wmul@multiplicand^0,c
 15527  00567C  50F3               	movf	243,w,c
 15528  00567E  260B               	addwf	(___wmul@product+1)^0,f,c
 15529  005680  C00A  F006         	movff	___wmul@product,?___wmul
 15530  005684  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 15531  005688  0012               	return		;funcret
 15532  00568A                     __end_of___wmul:
 15533                           	opt callstack 0
 15534                           
 15535 ;; *************** function _seLlegoAlDestino *****************
 15536 ;; Defined at:
 15537 ;;		line 862 in file "main.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;		None
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;  llegoDestino    1   10[COMRAM] unsigned char 
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      unsigned char 
 15544 ;; Registers used:
 15545 ;;		wreg, status,2, status,0, cstack
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0
 15552 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15554 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15555 ;;Total ram usage:        1 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; Hardware stack levels required when called:    3
 15558 ;; This function calls:
 15559 ;;		_dameLecturaAdc
 15560 ;; This function is called by:
 15561 ;;		_decidirDireccion
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           	psect	text65
 15566  0055EA                     __ptext65:
 15567                           	opt callstack 0
 15568  0055EA                     _seLlegoAlDestino:
 15569                           	opt callstack 25
 15570  0055EA                     
 15571                           ;main.c: 864:     T_BOOL llegoDestino = 0;
 15572  0055EA  0E00               	movlw	0
 15573  0055EC  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15574  0055EE                     
 15575                           ;main.c: 867:     if (dameLecturaAdc(0) < 20)
 15576  0055EE  0E00               	movlw	0
 15577  0055F0  ECDE  F029         	call	_dameLecturaAdc
 15578  0055F4  BE07               	btfsc	(?_dameLecturaAdc+1)^0,7,c
 15579  0055F6  EF08  F02B         	goto	u11250
 15580  0055FA  5007               	movf	(?_dameLecturaAdc+1)^0,w,c
 15581  0055FC  E107               	bnz	u11251
 15582  0055FE  0E14               	movlw	20
 15583  005600  5C06               	subwf	?_dameLecturaAdc^0,w,c
 15584  005602  B0D8               	btfsc	status,0,c
 15585  005604  EF06  F02B         	goto	u11251
 15586  005608  EF08  F02B         	goto	u11250
 15587  00560C                     u11251:
 15588  00560C  EF0A  F02B         	goto	l542
 15589  005610                     u11250:
 15590  005610                     
 15591                           ;main.c: 868:         llegoDestino = 1;
 15592  005610  0E01               	movlw	1
 15593  005612  6E0B               	movwf	seLlegoAlDestino@llegoDestino^0,c
 15594  005614                     l542:
 15595                           
 15596                           ;main.c: 870:     return llegoDestino;
 15597  005614  500B               	movf	seLlegoAlDestino@llegoDestino^0,w,c
 15598  005616  0012               	return		;funcret
 15599  005618                     __end_of_seLlegoAlDestino:
 15600                           	opt callstack 0
 15601                           
 15602 ;; *************** function _dameLecturaAdc *****************
 15603 ;; Defined at:
 15604 ;;		line 12 in file "./adc.h"
 15605 ;; Parameters:    Size  Location     Type
 15606 ;;  canalLeer       1    wreg     unsigned char 
 15607 ;; Auto vars:     Size  Location     Type
 15608 ;;  canalLeer       1    9[COMRAM] unsigned char 
 15609 ;; Return value:  Size  Location     Type
 15610 ;;                  2    5[COMRAM] short 
 15611 ;; Registers used:
 15612 ;;		wreg, status,2, status,0
 15613 ;; Tracked objects:
 15614 ;;		On entry : 0/0
 15615 ;;		On exit  : 0/0
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15618 ;;      Params:         2       0       0       0       0       0       0       0       0
 15619 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15620 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15621 ;;      Totals:         5       0       0       0       0       0       0       0       0
 15622 ;;Total ram usage:        5 bytes
 15623 ;; Hardware stack levels used:    1
 15624 ;; Hardware stack levels required when called:    2
 15625 ;; This function calls:
 15626 ;;		Nothing
 15627 ;; This function is called by:
 15628 ;;		_seLlegoAlDestino
 15629 ;;		_probarSensores
 15630 ;; This function uses a non-reentrant model
 15631 ;;
 15632                           
 15633                           	psect	text66
 15634  0053BC                     __ptext66:
 15635                           	opt callstack 0
 15636  0053BC                     _dameLecturaAdc:
 15637                           	opt callstack 25
 15638                           
 15639                           ;incstack = 0
 15640                           ;dameLecturaAdc@canalLeer stored from wreg
 15641  0053BC  6E0A               	movwf	dameLecturaAdc@canalLeer^0,c
 15642  0053BE                     
 15643                           ;./adc.h: 14:     _delay((unsigned long)((20)*(4000000/4000000.0)));
 15644  0053BE  0E06               	movlw	6
 15645  0053C0                     u12117:
 15646  0053C0  2EE8               	decfsz	wreg,f,c
 15647  0053C2  D7FE               	bra	u12117
 15648  0053C4  D000               	nop2	
 15649  0053C6                     
 15650                           ;./adc.h: 16:     ADCON0bits.ADON = 1;
 15651  0053C6  80C2               	bsf	194,0,c	;volatile
 15652  0053C8                     
 15653                           ;./adc.h: 17:     ADCON0bits.CHS = canalLeer;
 15654  0053C8  C00A  F008         	movff	dameLecturaAdc@canalLeer,??_dameLecturaAdc
 15655  0053CC  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15656  0053CE  4608               	rlncf	??_dameLecturaAdc^0,f,c
 15657  0053D0  50C2               	movf	194,w,c	;volatile
 15658  0053D2  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15659  0053D4  0BC3               	andlw	-61
 15660  0053D6  1808               	xorwf	??_dameLecturaAdc^0,w,c
 15661  0053D8  6EC2               	movwf	194,c	;volatile
 15662  0053DA                     
 15663                           ;./adc.h: 18:     ADCON0bits.GO = 1;
 15664  0053DA  82C2               	bsf	194,1,c	;volatile
 15665  0053DC                     
 15666                           ;./adc.h: 19:     ADCON0bits.GO_DONE = 1;
 15667  0053DC  82C2               	bsf	194,1,c	;volatile
 15668  0053DE                     l239:
 15669  0053DE  B2C2               	btfsc	194,1,c	;volatile
 15670  0053E0  EFF4  F029         	goto	u10851
 15671  0053E4  EFF6  F029         	goto	u10850
 15672  0053E8                     u10851:
 15673  0053E8  EFEF  F029         	goto	l239
 15674  0053EC                     u10850:
 15675  0053EC                     
 15676                           ;./adc.h: 23:     ADCON0bits.ADON = 0;
 15677  0053EC  90C2               	bcf	194,0,c	;volatile
 15678  0053EE                     
 15679                           ;./adc.h: 25:     return (ADRESH << 8) +ADRESL;
 15680  0053EE  50C4               	movf	196,w,c	;volatile
 15681  0053F0  6E09               	movwf	(??_dameLecturaAdc+1)^0,c
 15682  0053F2  6A08               	clrf	??_dameLecturaAdc^0,c
 15683  0053F4  50C3               	movf	195,w,c	;volatile
 15684  0053F6  2408               	addwf	??_dameLecturaAdc^0,w,c
 15685  0053F8  6E06               	movwf	?_dameLecturaAdc^0,c
 15686  0053FA  0E00               	movlw	0
 15687  0053FC  2009               	addwfc	(??_dameLecturaAdc+1)^0,w,c
 15688  0053FE  6E07               	movwf	(?_dameLecturaAdc+1)^0,c
 15689  005400  0012               	return		;funcret
 15690  005402                     __end_of_dameLecturaAdc:
 15691                           	opt callstack 0
 15692                           
 15693 ;; *************** function _mostrarDireccionElegida *****************
 15694 ;; Defined at:
 15695 ;;		line 874 in file "main.c"
 15696 ;; Parameters:    Size  Location     Type
 15697 ;;  direccionEle    1    wreg     unsigned char 
 15698 ;; Auto vars:     Size  Location     Type
 15699 ;;  direccionEle    1   10[COMRAM] unsigned char 
 15700 ;; Return value:  Size  Location     Type
 15701 ;;                  1    wreg      void 
 15702 ;; Registers used:
 15703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15704 ;; Tracked objects:
 15705 ;;		On entry : 0/0
 15706 ;;		On exit  : 0/0
 15707 ;;		Unchanged: 0/0
 15708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15709 ;;      Params:         0       0       0       0       0       0       0       0       0
 15710 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15711 ;;      Temps:          2       0       0       0       0       0       0       0       0
 15712 ;;      Totals:         3       0       0       0       0       0       0       0       0
 15713 ;;Total ram usage:        3 bytes
 15714 ;; Hardware stack levels used:    1
 15715 ;; Hardware stack levels required when called:    4
 15716 ;; This function calls:
 15717 ;;		_UART_printf
 15718 ;; This function is called by:
 15719 ;;		_decidirDireccion
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723                           	psect	text67
 15724  004C48                     __ptext67:
 15725                           	opt callstack 0
 15726  004C48                     _mostrarDireccionElegida:
 15727                           	opt callstack 24
 15728                           
 15729                           ;incstack = 0
 15730                           ;mostrarDireccionElegida@direccionElegida stored from wreg
 15731  004C48  6E0B               	movwf	mostrarDireccionElegida@direccionElegida^0,c
 15732  004C4A                     
 15733                           ;main.c: 876:     switch (direccionElegida) {
 15734  004C4A  EF47  F026         	goto	l9969
 15735  004C4E                     l9959:
 15736                           
 15737                           ;main.c: 878:             UART_printf("\rDireccion Elegida: ENFRENTE\n\n\r");
 15738  004C4E  0EEB               	movlw	low STR_15
 15739  004C50  6E07               	movwf	UART_printf@cadena^0,c
 15740  004C52  0E7E               	movlw	high STR_15
 15741  004C54  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15742  004C56  EC13  F028         	call	_UART_printf	;wreg free
 15743                           
 15744                           ;main.c: 879:             break;
 15745  004C5A  EF64  F026         	goto	l553
 15746  004C5E                     l9961:
 15747                           
 15748                           ;main.c: 882:             UART_printf("\rDireccion Elegida: IZQUIERDA\n\n\r");
 15749  004C5E  0EAA               	movlw	low STR_16
 15750  004C60  6E07               	movwf	UART_printf@cadena^0,c
 15751  004C62  0E7E               	movlw	high STR_16
 15752  004C64  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15753  004C66  EC13  F028         	call	_UART_printf	;wreg free
 15754                           
 15755                           ;main.c: 883:             break;
 15756  004C6A  EF64  F026         	goto	l553
 15757  004C6E                     l9963:
 15758                           
 15759                           ;main.c: 886:             UART_printf("\rDireccion Elegida: DERECHA\n\n\r");
 15760  004C6E  0E2B               	movlw	low STR_17
 15761  004C70  6E07               	movwf	UART_printf@cadena^0,c
 15762  004C72  0E7F               	movlw	high STR_17
 15763  004C74  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15764  004C76  EC13  F028         	call	_UART_printf	;wreg free
 15765                           
 15766                           ;main.c: 887:             break;
 15767  004C7A  EF64  F026         	goto	l553
 15768  004C7E                     l9965:
 15769                           
 15770                           ;main.c: 890:             UART_printf("\rDireccion Elegida: CALLEJON\n\n\r");
 15771  004C7E  0E0B               	movlw	low STR_18
 15772  004C80  6E07               	movwf	UART_printf@cadena^0,c
 15773  004C82  0E7F               	movlw	high STR_18
 15774  004C84  6E08               	movwf	(UART_printf@cadena+1)^0,c
 15775  004C86  EC13  F028         	call	_UART_printf	;wreg free
 15776                           
 15777                           ;main.c: 891:             break;
 15778  004C8A  EF64  F026         	goto	l553
 15779  004C8E                     l9969:
 15780  004C8E  500B               	movf	mostrarDireccionElegida@direccionElegida^0,w,c
 15781  004C90  6E09               	movwf	??_mostrarDireccionElegida^0,c
 15782  004C92  6A0A               	clrf	(??_mostrarDireccionElegida+1)^0,c
 15783                           
 15784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15785                           ; Switch size 1, requested type "simple"
 15786                           ; Number of cases is 1, Range of values is 0 to 0
 15787                           ; switch strategies available:
 15788                           ; Name         Instructions Cycles
 15789                           ; simple_byte            4     3 (average)
 15790                           ;	Chosen strategy is simple_byte
 15791  004C94  500A               	movf	(??_mostrarDireccionElegida+1)^0,w,c
 15792  004C96  0A00               	xorlw	0	; case 0
 15793  004C98  B4D8               	btfsc	status,2,c
 15794  004C9A  EF51  F026         	goto	l11177
 15795  004C9E  EF64  F026         	goto	l553
 15796  004CA2                     l11177:
 15797                           
 15798                           ; Switch size 1, requested type "simple"
 15799                           ; Number of cases is 4, Range of values is 0 to 3
 15800                           ; switch strategies available:
 15801                           ; Name         Instructions Cycles
 15802                           ; simple_byte           13     7 (average)
 15803                           ;	Chosen strategy is simple_byte
 15804  004CA2  5009               	movf	??_mostrarDireccionElegida^0,w,c
 15805  004CA4  0A00               	xorlw	0	; case 0
 15806  004CA6  B4D8               	btfsc	status,2,c
 15807  004CA8  EF3F  F026         	goto	l9965
 15808  004CAC  0A01               	xorlw	1	; case 1
 15809  004CAE  B4D8               	btfsc	status,2,c
 15810  004CB0  EF27  F026         	goto	l9959
 15811  004CB4  0A03               	xorlw	3	; case 2
 15812  004CB6  B4D8               	btfsc	status,2,c
 15813  004CB8  EF2F  F026         	goto	l9961
 15814  004CBC  0A01               	xorlw	1	; case 3
 15815  004CBE  B4D8               	btfsc	status,2,c
 15816  004CC0  EF37  F026         	goto	l9963
 15817  004CC4  EF64  F026         	goto	l553
 15818  004CC8                     l553:
 15819  004CC8  0012               	return		;funcret
 15820  004CCA                     __end_of_mostrarDireccionElegida:
 15821                           	opt callstack 0
 15822                           
 15823 ;; *************** function _UART_printf *****************
 15824 ;; Defined at:
 15825 ;;		line 47 in file "./UART.h"
 15826 ;; Parameters:    Size  Location     Type
 15827 ;;  cadena          2    6[COMRAM] PTR unsigned char 
 15828 ;;		 -> STR_18(32), STR_17(31), STR_16(33), STR_15(32), 
 15829 ;;		 -> STR_14(23), STR_13(63), STR_12(56), STR_10(6), 
 15830 ;;		 -> STR_9(9), STR_8(11), STR_7(10), buffer(50), 
 15831 ;;		 -> STR_2(25), STR_1(24), 
 15832 ;; Auto vars:     Size  Location     Type
 15833 ;;		None
 15834 ;; Return value:  Size  Location     Type
 15835 ;;                  1    wreg      void 
 15836 ;; Registers used:
 15837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15838 ;; Tracked objects:
 15839 ;;		On entry : 0/0
 15840 ;;		On exit  : 0/0
 15841 ;;		Unchanged: 0/0
 15842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15843 ;;      Params:         2       0       0       0       0       0       0       0       0
 15844 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15846 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15847 ;;Total ram usage:        2 bytes
 15848 ;; Hardware stack levels used:    1
 15849 ;; Hardware stack levels required when called:    3
 15850 ;; This function calls:
 15851 ;;		_UART_write
 15852 ;; This function is called by:
 15853 ;;		_visualizarPasosRealizados
 15854 ;;		_comportamientoBasico
 15855 ;;		_mostrarDireccionElegida
 15856 ;;		_decidirDireccion
 15857 ;;		_probarSensores
 15858 ;;		_probarUltrasonico
 15859 ;; This function uses a non-reentrant model
 15860 ;;
 15861                           
 15862                           	psect	text68
 15863  005026                     __ptext68:
 15864                           	opt callstack 0
 15865  005026                     _UART_printf:
 15866                           	opt callstack 26
 15867  005026                     
 15868                           ;./UART.h: 48:     while (*cadena) {
 15869  005026  EF29  F028         	goto	l9619
 15870  00502A                     l9615:
 15871                           
 15872                           ;./UART.h: 49:         UART_write(*cadena++);
 15873  00502A  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15874  00502E  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15875  005032  6AF8               	clrf	tblptru,c
 15876  005034  0E07               	movlw	(high __ramtop+-1)
 15877  005036  64F7               	cpfsgt	tblptrh,c
 15878  005038  D003               	bra	u10827
 15879  00503A  0008               	tblrd		*
 15880  00503C  50F5               	movf	tablat,w,c
 15881  00503E  D005               	bra	u10820
 15882  005040                     u10827:
 15883  005040  CFF6 FFE9          	movff	tblptrl,fsr0l
 15884  005044  CFF7 FFEA          	movff	tblptrh,fsr0h
 15885  005048  50EF               	movf	indf0,w,c
 15886  00504A                     u10820:
 15887  00504A  ECAE  F02B         	call	_UART_write
 15888  00504E  4A07               	infsnz	UART_printf@cadena^0,f,c
 15889  005050  2A08               	incf	(UART_printf@cadena+1)^0,f,c
 15890  005052                     l9619:
 15891                           
 15892                           ;./UART.h: 48:     while (*cadena) {
 15893  005052  C007  FFF6         	movff	UART_printf@cadena,tblptrl
 15894  005056  C008  FFF7         	movff	UART_printf@cadena+1,tblptrh
 15895  00505A  6AF8               	clrf	tblptru,c
 15896  00505C  0E07               	movlw	(high __ramtop+-1)
 15897  00505E  64F7               	cpfsgt	tblptrh,c
 15898  005060  D003               	bra	u10837
 15899  005062  0008               	tblrd		*
 15900  005064  50F5               	movf	tablat,w,c
 15901  005066  D005               	bra	u10830
 15902  005068                     u10837:
 15903  005068  CFF6 FFE9          	movff	tblptrl,fsr0l
 15904  00506C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15905  005070  50EF               	movf	indf0,w,c
 15906  005072                     u10830:
 15907  005072  0900               	iorlw	0
 15908  005074  A4D8               	btfss	status,2,c
 15909  005076  EF3F  F028         	goto	u10841
 15910  00507A  EF41  F028         	goto	u10840
 15911  00507E                     u10841:
 15912  00507E  EF15  F028         	goto	l9615
 15913  005082                     u10840:
 15914  005082  0012               	return		;funcret
 15915  005084                     __end_of_UART_printf:
 15916                           	opt callstack 0
 15917                           
 15918 ;; *************** function _UART_write *****************
 15919 ;; Defined at:
 15920 ;;		line 42 in file "./UART.h"
 15921 ;; Parameters:    Size  Location     Type
 15922 ;;  dato            1    wreg     unsigned char 
 15923 ;; Auto vars:     Size  Location     Type
 15924 ;;  dato            1    5[COMRAM] unsigned char 
 15925 ;; Return value:  Size  Location     Type
 15926 ;;                  1    wreg      void 
 15927 ;; Registers used:
 15928 ;;		wreg
 15929 ;; Tracked objects:
 15930 ;;		On entry : 0/0
 15931 ;;		On exit  : 0/0
 15932 ;;		Unchanged: 0/0
 15933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15934 ;;      Params:         0       0       0       0       0       0       0       0       0
 15935 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15936 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15937 ;;      Totals:         1       0       0       0       0       0       0       0       0
 15938 ;;Total ram usage:        1 bytes
 15939 ;; Hardware stack levels used:    1
 15940 ;; Hardware stack levels required when called:    2
 15941 ;; This function calls:
 15942 ;;		Nothing
 15943 ;; This function is called by:
 15944 ;;		_UART_printf
 15945 ;; This function uses a non-reentrant model
 15946 ;;
 15947                           
 15948                           	psect	text69
 15949  00575C                     __ptext69:
 15950                           	opt callstack 0
 15951  00575C                     _UART_write:
 15952                           	opt callstack 26
 15953                           
 15954                           ;incstack = 0
 15955                           ;UART_write@dato stored from wreg
 15956  00575C  6E06               	movwf	UART_write@dato^0,c
 15957  00575E                     
 15958                           ;./UART.h: 43:     TXREG = dato;
 15959  00575E  C006  FFAD         	movff	UART_write@dato,4013	;volatile
 15960  005762                     l224:
 15961  005762  A2AC               	btfss	172,1,c	;volatile
 15962  005764  EFB6  F02B         	goto	u10641
 15963  005768  EFB8  F02B         	goto	u10640
 15964  00576C                     u10641:
 15965  00576C  EFB1  F02B         	goto	l224
 15966  005770                     u10640:
 15967  005770  0012               	return		;funcret
 15968  005772                     __end_of_UART_write:
 15969                           	opt callstack 0
 15970                           
 15971 ;; *************** function _hayCruce *****************
 15972 ;; Defined at:
 15973 ;;		line 726 in file "main.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;  caminosRecor    2   63[COMRAM] PTR unsigned char 
 15976 ;;		 -> comportamientoBasico@caminosRecorrer(3), 
 15977 ;;  investigando    1   65[COMRAM] unsigned char 
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;  contCaminos     1   66[COMRAM] unsigned char 
 15980 ;; Return value:  Size  Location     Type
 15981 ;;                  1    wreg      unsigned char 
 15982 ;; Registers used:
 15983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15984 ;; Tracked objects:
 15985 ;;		On entry : 0/0
 15986 ;;		On exit  : 0/0
 15987 ;;		Unchanged: 0/0
 15988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15989 ;;      Params:         3       0       0       0       0       0       0       0       0
 15990 ;;      Locals:         1       0       0       0       0       0       0       0       0
 15991 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15992 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15993 ;;Total ram usage:        4 bytes
 15994 ;; Hardware stack levels used:    1
 15995 ;; Hardware stack levels required when called:    3
 15996 ;; This function calls:
 15997 ;;		___flge
 15998 ;; This function is called by:
 15999 ;;		_decidirDireccion
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text70
 16004  003784                     __ptext70:
 16005                           	opt callstack 0
 16006  003784                     _hayCruce:
 16007                           	opt callstack 25
 16008  003784                     
 16009                           ;main.c: 728:     T_UBYTE contCaminos = 0;
 16010  003784  0E00               	movlw	0
 16011  003786  6E43               	movwf	hayCruce@contCaminos^0,c
 16012                           
 16013                           ;main.c: 730:     paredEnfrente = 0;
 16014  003788  0E00               	movlw	0
 16015  00378A  0101               	movlb	1	; () banked
 16016  00378C  6F3C               	movwf	_paredEnfrente& (0+255),b
 16017                           
 16018                           ;main.c: 731:     paredDerecha = 0;
 16019  00378E  0E00               	movlw	0
 16020  003790  6F3B               	movwf	_paredDerecha& (0+255),b
 16021                           
 16022                           ;main.c: 732:     paredIzquierda = 0;
 16023  003792  0E00               	movlw	0
 16024  003794  6F3A               	movwf	_paredIzquierda& (0+255),b
 16025                           
 16026                           ;main.c: 734:     if (!investigandoCruce) {
 16027  003796  5042               	movf	hayCruce@investigandoCruce^0,w,c
 16028  003798  A4D8               	btfss	status,2,c
 16029  00379A  EFD1  F01B         	goto	u11161
 16030  00379E  EFD3  F01B         	goto	u11160
 16031  0037A2                     u11161:
 16032  0037A2  EF7D  F01C         	goto	l9937
 16033  0037A6                     u11160:
 16034  0037A6                     
 16035                           ; BSR set to: 1
 16036                           ;main.c: 736:         if (sensorEnfrente > 35) {
 16037  0037A6  0E00               	movlw	0
 16038  0037A8  6E34               	movwf	___flge@ff1^0,c
 16039  0037AA  0E00               	movlw	0
 16040  0037AC  6E35               	movwf	(___flge@ff1+1)^0,c
 16041  0037AE  0E0C               	movlw	12
 16042  0037B0  6E36               	movwf	(___flge@ff1+2)^0,c
 16043  0037B2  0E42               	movlw	66
 16044  0037B4  6E37               	movwf	(___flge@ff1+3)^0,c
 16045  0037B6  C124  F038         	movff	_sensorEnfrente,___flge@ff2
 16046  0037BA  C125  F039         	movff	_sensorEnfrente+1,___flge@ff2+1
 16047  0037BE  C126  F03A         	movff	_sensorEnfrente+2,___flge@ff2+2
 16048  0037C2  C127  F03B         	movff	_sensorEnfrente+3,___flge@ff2+3
 16049  0037C6  ECFC  F020         	call	___flge	;wreg free
 16050  0037CA  B0D8               	btfsc	status,0,c
 16051  0037CC  EFEA  F01B         	goto	u11171
 16052  0037D0  EFEC  F01B         	goto	u11170
 16053  0037D4                     u11171:
 16054  0037D4  EFF0  F01B         	goto	l9867
 16055  0037D8                     u11170:
 16056  0037D8                     
 16057                           ;main.c: 737:             paredEnfrente = 1;
 16058  0037D8  0E01               	movlw	1
 16059  0037DA  0101               	movlb	1	; () banked
 16060  0037DC  6F3C               	movwf	_paredEnfrente& (0+255),b
 16061  0037DE                     
 16062                           ; BSR set to: 1
 16063                           ;main.c: 738:             contCaminos++;
 16064  0037DE  2A43               	incf	hayCruce@contCaminos^0,f,c
 16065  0037E0                     l9867:
 16066                           
 16067                           ;main.c: 741:         if (sensorIzquierda > 30) {
 16068  0037E0  0E00               	movlw	0
 16069  0037E2  6E34               	movwf	___flge@ff1^0,c
 16070  0037E4  0E00               	movlw	0
 16071  0037E6  6E35               	movwf	(___flge@ff1+1)^0,c
 16072  0037E8  0EF0               	movlw	240
 16073  0037EA  6E36               	movwf	(___flge@ff1+2)^0,c
 16074  0037EC  0E41               	movlw	65
 16075  0037EE  6E37               	movwf	(___flge@ff1+3)^0,c
 16076  0037F0  C128  F038         	movff	_sensorIzquierda,___flge@ff2
 16077  0037F4  C129  F039         	movff	_sensorIzquierda+1,___flge@ff2+1
 16078  0037F8  C12A  F03A         	movff	_sensorIzquierda+2,___flge@ff2+2
 16079  0037FC  C12B  F03B         	movff	_sensorIzquierda+3,___flge@ff2+3
 16080  003800  ECFC  F020         	call	___flge	;wreg free
 16081  003804  B0D8               	btfsc	status,0,c
 16082  003806  EF07  F01C         	goto	u11181
 16083  00380A  EF09  F01C         	goto	u11180
 16084  00380E                     u11181:
 16085  00380E  EF0D  F01C         	goto	l9873
 16086  003812                     u11180:
 16087  003812                     
 16088                           ;main.c: 742:             paredIzquierda = 1;
 16089  003812  0E01               	movlw	1
 16090  003814  0101               	movlb	1	; () banked
 16091  003816  6F3A               	movwf	_paredIzquierda& (0+255),b
 16092  003818                     
 16093                           ; BSR set to: 1
 16094                           ;main.c: 743:             contCaminos++;
 16095  003818  2A43               	incf	hayCruce@contCaminos^0,f,c
 16096  00381A                     l9873:
 16097                           
 16098                           ;main.c: 746:         if (sensorDerecha > 30) {
 16099  00381A  0E00               	movlw	0
 16100  00381C  6E34               	movwf	___flge@ff1^0,c
 16101  00381E  0E00               	movlw	0
 16102  003820  6E35               	movwf	(___flge@ff1+1)^0,c
 16103  003822  0EF0               	movlw	240
 16104  003824  6E36               	movwf	(___flge@ff1+2)^0,c
 16105  003826  0E41               	movlw	65
 16106  003828  6E37               	movwf	(___flge@ff1+3)^0,c
 16107  00382A  C12C  F038         	movff	_sensorDerecha,___flge@ff2
 16108  00382E  C12D  F039         	movff	_sensorDerecha+1,___flge@ff2+1
 16109  003832  C12E  F03A         	movff	_sensorDerecha+2,___flge@ff2+2
 16110  003836  C12F  F03B         	movff	_sensorDerecha+3,___flge@ff2+3
 16111  00383A  ECFC  F020         	call	___flge	;wreg free
 16112  00383E  B0D8               	btfsc	status,0,c
 16113  003840  EF24  F01C         	goto	u11191
 16114  003844  EF26  F01C         	goto	u11190
 16115  003848                     u11191:
 16116  003848  EF2A  F01C         	goto	l9879
 16117  00384C                     u11190:
 16118  00384C                     
 16119                           ;main.c: 747:             paredDerecha = 1;
 16120  00384C  0E01               	movlw	1
 16121  00384E  0101               	movlb	1	; () banked
 16122  003850  6F3B               	movwf	_paredDerecha& (0+255),b
 16123  003852                     
 16124                           ; BSR set to: 1
 16125                           ;main.c: 748:             contCaminos++;
 16126  003852  2A43               	incf	hayCruce@contCaminos^0,f,c
 16127  003854                     l9879:
 16128                           
 16129                           ;main.c: 752:         if (contCaminos > 1) {
 16130  003854  0E01               	movlw	1
 16131  003856  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16132  003858  EF30  F01C         	goto	u11201
 16133  00385C  EF32  F01C         	goto	u11200
 16134  003860                     u11201:
 16135  003860  EF7D  F01C         	goto	l9937
 16136  003864                     u11200:
 16137  003864                     
 16138                           ;main.c: 763:                 if (paredDerecha)
 16139  003864  0101               	movlb	1	; () banked
 16140  003866  513B               	movf	_paredDerecha& (0+255),w,b
 16141  003868  B4D8               	btfsc	status,2,c
 16142  00386A  EF39  F01C         	goto	u11211
 16143  00386E  EF3B  F01C         	goto	u11210
 16144  003872                     u11211:
 16145  003872  EF45  F01C         	goto	l9893
 16146  003876                     u11210:
 16147  003876                     
 16148                           ; BSR set to: 1
 16149                           ;main.c: 764:                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1] = '1';
 16150  003876  EE20 F002          	lfsr	2,2
 16151  00387A  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16152  00387C  26D9               	addwf	fsr2l,f,c
 16153  00387E  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16154  003880  22DA               	addwfc	fsr2h,f,c
 16155  003882  0E31               	movlw	49
 16156  003884  6EDF               	movwf	indf2,c
 16157  003886  EF4D  F01C         	goto	l9913
 16158  00388A                     l9893:
 16159                           
 16160                           ; BSR set to: 1
 16161                           ;main.c: 766:                     caminosRecorrer[SENSOR_PRIORIDAD_BAJA - 1] = '0';
 16162  00388A  EE20 F002          	lfsr	2,2
 16163  00388E  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16164  003890  26D9               	addwf	fsr2l,f,c
 16165  003892  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16166  003894  22DA               	addwfc	fsr2h,f,c
 16167  003896  0E30               	movlw	48
 16168  003898  6EDF               	movwf	indf2,c
 16169  00389A                     l9913:
 16170                           
 16171                           ; BSR set to: 1
 16172                           ;main.c: 793:                 if (paredIzquierda)
 16173  00389A  513A               	movf	_paredIzquierda& (0+255),w,b
 16174  00389C  B4D8               	btfsc	status,2,c
 16175  00389E  EF53  F01C         	goto	u11221
 16176  0038A2  EF55  F01C         	goto	u11220
 16177  0038A6                     u11221:
 16178  0038A6  EF5F  F01C         	goto	l9917
 16179  0038AA                     u11220:
 16180  0038AA                     
 16181                           ; BSR set to: 1
 16182                           ;main.c: 794:                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1] = '1';
 16183  0038AA  EE20 F001          	lfsr	2,1
 16184  0038AE  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16185  0038B0  26D9               	addwf	fsr2l,f,c
 16186  0038B2  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16187  0038B4  22DA               	addwfc	fsr2h,f,c
 16188  0038B6  0E31               	movlw	49
 16189  0038B8  6EDF               	movwf	indf2,c
 16190  0038BA  EF67  F01C         	goto	l9919
 16191  0038BE                     l9917:
 16192                           
 16193                           ; BSR set to: 1
 16194                           ;main.c: 796:                     caminosRecorrer[SENSOR_PRIORIDAD_MEDIA - 1] = '0';
 16195  0038BE  EE20 F001          	lfsr	2,1
 16196  0038C2  5040               	movf	hayCruce@caminosRecorrer^0,w,c
 16197  0038C4  26D9               	addwf	fsr2l,f,c
 16198  0038C6  5041               	movf	(hayCruce@caminosRecorrer+1)^0,w,c
 16199  0038C8  22DA               	addwfc	fsr2h,f,c
 16200  0038CA  0E30               	movlw	48
 16201  0038CC  6EDF               	movwf	indf2,c
 16202  0038CE                     l9919:
 16203                           
 16204                           ; BSR set to: 1
 16205                           ;main.c: 802:                 if (paredEnfrente)
 16206  0038CE  513C               	movf	_paredEnfrente& (0+255),w,b
 16207  0038D0  B4D8               	btfsc	status,2,c
 16208  0038D2  EF6D  F01C         	goto	u11231
 16209  0038D6  EF6F  F01C         	goto	u11230
 16210  0038DA                     u11231:
 16211  0038DA  EF77  F01C         	goto	l9923
 16212  0038DE                     u11230:
 16213  0038DE                     
 16214                           ; BSR set to: 1
 16215                           ;main.c: 803:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '1';
 16216  0038DE  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16217  0038E2  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16218  0038E6  0E31               	movlw	49
 16219  0038E8  6EDF               	movwf	indf2,c
 16220  0038EA  EF7D  F01C         	goto	l9937
 16221  0038EE                     l9923:
 16222                           
 16223                           ; BSR set to: 1
 16224                           ;main.c: 805:                     caminosRecorrer[SENSOR_PRIORIDAD_ALTA - 1] = '0';
 16225  0038EE  C040  FFD9         	movff	hayCruce@caminosRecorrer,fsr2l
 16226  0038F2  C041  FFDA         	movff	hayCruce@caminosRecorrer+1,fsr2h
 16227  0038F6  0E30               	movlw	48
 16228  0038F8  6EDF               	movwf	indf2,c
 16229  0038FA                     l9937:
 16230                           
 16231                           ;main.c: 830:     if (contCaminos > 1)
 16232  0038FA  0E01               	movlw	1
 16233  0038FC  6443               	cpfsgt	hayCruce@contCaminos^0,c
 16234  0038FE  EF83  F01C         	goto	u11241
 16235  003902  EF85  F01C         	goto	u11240
 16236  003906                     u11241:
 16237  003906  EF88  F01C         	goto	l9945
 16238  00390A                     u11240:
 16239  00390A                     
 16240                           ;main.c: 831:         return 1;
 16241  00390A  0E01               	movlw	1
 16242  00390C  EF89  F01C         	goto	l523
 16243  003910                     l9945:
 16244                           
 16245                           ;main.c: 834:         return 0;
 16246  003910  0E00               	movlw	0
 16247  003912                     l523:
 16248  003912  0012               	return		;funcret
 16249  003914                     __end_of_hayCruce:
 16250                           	opt callstack 0
 16251                           
 16252 ;; *************** function ___flge *****************
 16253 ;; Defined at:
 16254 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16255 ;; Parameters:    Size  Location     Type
 16256 ;;  ff1             4   51[COMRAM] unsigned char 
 16257 ;;  ff2             4   55[COMRAM] unsigned char 
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;		None
 16260 ;; Return value:  Size  Location     Type
 16261 ;;		None               void
 16262 ;; Registers used:
 16263 ;;		wreg, status,2, status,0
 16264 ;; Tracked objects:
 16265 ;;		On entry : 0/0
 16266 ;;		On exit  : 0/0
 16267 ;;		Unchanged: 0/0
 16268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16269 ;;      Params:         8       0       0       0       0       0       0       0       0
 16270 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16271 ;;      Temps:          4       0       0       0       0       0       0       0       0
 16272 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16273 ;;Total ram usage:       12 bytes
 16274 ;; Hardware stack levels used:    1
 16275 ;; Hardware stack levels required when called:    2
 16276 ;; This function calls:
 16277 ;;		Nothing
 16278 ;; This function is called by:
 16279 ;;		_forzarEspejeo
 16280 ;;		_hayCruce
 16281 ;;		_decidirDireccion
 16282 ;;		_efgtoa
 16283 ;;		_roundf
 16284 ;;		_probarPID
 16285 ;;		_probarCruceT
 16286 ;; This function uses a non-reentrant model
 16287 ;;
 16288                           
 16289                           	psect	text71
 16290  0041F8                     __ptext71:
 16291                           	opt callstack 0
 16292  0041F8                     ___flge:
 16293                           	opt callstack 23
 16294  0041F8  0E00               	movlw	0
 16295  0041FA  1434               	andwf	___flge@ff1^0,w,c
 16296  0041FC  6E3C               	movwf	??___flge^0,c
 16297  0041FE  0E00               	movlw	0
 16298  004200  1435               	andwf	(___flge@ff1+1)^0,w,c
 16299  004202  6E3D               	movwf	(??___flge+1)^0,c
 16300  004204  0E80               	movlw	128
 16301  004206  1436               	andwf	(___flge@ff1+2)^0,w,c
 16302  004208  6E3E               	movwf	(??___flge+2)^0,c
 16303  00420A  0E7F               	movlw	127
 16304  00420C  1437               	andwf	(___flge@ff1+3)^0,w,c
 16305  00420E  6E3F               	movwf	(??___flge+3)^0,c
 16306  004210  503C               	movf	??___flge^0,w,c
 16307  004212  103D               	iorwf	(??___flge+1)^0,w,c
 16308  004214  103E               	iorwf	(??___flge+2)^0,w,c
 16309  004216  103F               	iorwf	(??___flge+3)^0,w,c
 16310  004218  A4D8               	btfss	status,2,c
 16311  00421A  EF11  F021         	goto	u9561
 16312  00421E  EF13  F021         	goto	u9560
 16313  004222                     u9561:
 16314  004222  EF1B  F021         	goto	l8903
 16315  004226                     u9560:
 16316  004226  0E00               	movlw	0
 16317  004228  6E34               	movwf	___flge@ff1^0,c
 16318  00422A  0E00               	movlw	0
 16319  00422C  6E35               	movwf	(___flge@ff1+1)^0,c
 16320  00422E  0E00               	movlw	0
 16321  004230  6E36               	movwf	(___flge@ff1+2)^0,c
 16322  004232  0E00               	movlw	0
 16323  004234  6E37               	movwf	(___flge@ff1+3)^0,c
 16324  004236                     l8903:
 16325  004236  0E00               	movlw	0
 16326  004238  1438               	andwf	___flge@ff2^0,w,c
 16327  00423A  6E3C               	movwf	??___flge^0,c
 16328  00423C  0E00               	movlw	0
 16329  00423E  1439               	andwf	(___flge@ff2+1)^0,w,c
 16330  004240  6E3D               	movwf	(??___flge+1)^0,c
 16331  004242  0E80               	movlw	128
 16332  004244  143A               	andwf	(___flge@ff2+2)^0,w,c
 16333  004246  6E3E               	movwf	(??___flge+2)^0,c
 16334  004248  0E7F               	movlw	127
 16335  00424A  143B               	andwf	(___flge@ff2+3)^0,w,c
 16336  00424C  6E3F               	movwf	(??___flge+3)^0,c
 16337  00424E  503C               	movf	??___flge^0,w,c
 16338  004250  103D               	iorwf	(??___flge+1)^0,w,c
 16339  004252  103E               	iorwf	(??___flge+2)^0,w,c
 16340  004254  103F               	iorwf	(??___flge+3)^0,w,c
 16341  004256  A4D8               	btfss	status,2,c
 16342  004258  EF30  F021         	goto	u9571
 16343  00425C  EF32  F021         	goto	u9570
 16344  004260                     u9571:
 16345  004260  EF3A  F021         	goto	l8907
 16346  004264                     u9570:
 16347  004264  0E00               	movlw	0
 16348  004266  6E38               	movwf	___flge@ff2^0,c
 16349  004268  0E00               	movlw	0
 16350  00426A  6E39               	movwf	(___flge@ff2+1)^0,c
 16351  00426C  0E00               	movlw	0
 16352  00426E  6E3A               	movwf	(___flge@ff2+2)^0,c
 16353  004270  0E00               	movlw	0
 16354  004272  6E3B               	movwf	(___flge@ff2+3)^0,c
 16355  004274                     l8907:
 16356  004274  AE37               	btfss	(___flge@ff1+3)^0,7,c
 16357  004276  EF3F  F021         	goto	u9581
 16358  00427A  EF41  F021         	goto	u9580
 16359  00427E                     u9581:
 16360  00427E  EF4A  F021         	goto	l8911
 16361  004282                     u9580:
 16362  004282  6C34               	negf	___flge@ff1^0,c
 16363  004284  1E35               	comf	(___flge@ff1+1)^0,f,c
 16364  004286  B0D8               	btfsc	status,0,c
 16365  004288  2A35               	incf	(___flge@ff1+1)^0,f,c
 16366  00428A  1E36               	comf	(___flge@ff1+2)^0,f,c
 16367  00428C  B0D8               	btfsc	status,0,c
 16368  00428E  2A36               	incf	(___flge@ff1+2)^0,f,c
 16369  004290  0E80               	movlw	128
 16370  004292  5637               	subfwb	(___flge@ff1+3)^0,f,c
 16371  004294                     l8911:
 16372  004294  AE3B               	btfss	(___flge@ff2+3)^0,7,c
 16373  004296  EF4F  F021         	goto	u9591
 16374  00429A  EF51  F021         	goto	u9590
 16375  00429E                     u9591:
 16376  00429E  EF5A  F021         	goto	l1226
 16377  0042A2                     u9590:
 16378  0042A2  6C38               	negf	___flge@ff2^0,c
 16379  0042A4  1E39               	comf	(___flge@ff2+1)^0,f,c
 16380  0042A6  B0D8               	btfsc	status,0,c
 16381  0042A8  2A39               	incf	(___flge@ff2+1)^0,f,c
 16382  0042AA  1E3A               	comf	(___flge@ff2+2)^0,f,c
 16383  0042AC  B0D8               	btfsc	status,0,c
 16384  0042AE  2A3A               	incf	(___flge@ff2+2)^0,f,c
 16385  0042B0  0E80               	movlw	128
 16386  0042B2  563B               	subfwb	(___flge@ff2+3)^0,f,c
 16387  0042B4                     l1226:
 16388  0042B4  0E00               	movlw	0
 16389  0042B6  1A34               	xorwf	___flge@ff1^0,f,c
 16390  0042B8  0E00               	movlw	0
 16391  0042BA  1A35               	xorwf	(___flge@ff1+1)^0,f,c
 16392  0042BC  0E00               	movlw	0
 16393  0042BE  1A36               	xorwf	(___flge@ff1+2)^0,f,c
 16394  0042C0  0E80               	movlw	128
 16395  0042C2  1A37               	xorwf	(___flge@ff1+3)^0,f,c
 16396  0042C4  0E00               	movlw	0
 16397  0042C6  1A38               	xorwf	___flge@ff2^0,f,c
 16398  0042C8  0E00               	movlw	0
 16399  0042CA  1A39               	xorwf	(___flge@ff2+1)^0,f,c
 16400  0042CC  0E00               	movlw	0
 16401  0042CE  1A3A               	xorwf	(___flge@ff2+2)^0,f,c
 16402  0042D0  0E80               	movlw	128
 16403  0042D2  1A3B               	xorwf	(___flge@ff2+3)^0,f,c
 16404  0042D4  5038               	movf	___flge@ff2^0,w,c
 16405  0042D6  5C34               	subwf	___flge@ff1^0,w,c
 16406  0042D8  5039               	movf	(___flge@ff2+1)^0,w,c
 16407  0042DA  5835               	subwfb	(___flge@ff1+1)^0,w,c
 16408  0042DC  503A               	movf	(___flge@ff2+2)^0,w,c
 16409  0042DE  5836               	subwfb	(___flge@ff1+2)^0,w,c
 16410  0042E0  503B               	movf	(___flge@ff2+3)^0,w,c
 16411  0042E2  5837               	subwfb	(___flge@ff1+3)^0,w,c
 16412  0042E4  B0D8               	btfsc	status,0,c
 16413  0042E6  EF77  F021         	goto	u9601
 16414  0042EA  EF79  F021         	goto	u9600
 16415  0042EE                     u9601:
 16416  0042EE  EF7C  F021         	goto	l8917
 16417  0042F2                     u9600:
 16418  0042F2  90D8               	bcf	status,0,c
 16419  0042F4  EF7D  F021         	goto	l1231
 16420  0042F8                     l8917:
 16421  0042F8  80D8               	bsf	status,0,c
 16422  0042FA                     l1231:
 16423  0042FA  0012               	return		;funcret
 16424  0042FC                     __end_of___flge:
 16425                           	opt callstack 0
 16426                           
 16427 ;; *************** function _caminoCorrecto *****************
 16428 ;; Defined at:
 16429 ;;		line 273 in file "main.c"
 16430 ;; Parameters:    Size  Location     Type
 16431 ;;  movimientos     2   17[COMRAM] PTR unsigned char 
 16432 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16433 ;;  caminoFinal     2   19[COMRAM] PTR unsigned char 
 16434 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 16435 ;;  numMovimient    2   21[COMRAM] unsigned int 
 16436 ;;  numMovimient    2   23[COMRAM] PTR unsigned int 
 16437 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 16438 ;;  caminoActual    1   25[COMRAM] unsigned char 
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;		None
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  1    wreg      void 
 16443 ;; Registers used:
 16444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16450 ;;      Params:         9       0       0       0       0       0       0       0       0
 16451 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16452 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16453 ;;      Totals:         9       0       0       0       0       0       0       0       0
 16454 ;;Total ram usage:        9 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; Hardware stack levels required when called:    3
 16457 ;; This function calls:
 16458 ;;		_combinarArreglos
 16459 ;;		_limpiarMovimientos
 16460 ;; This function is called by:
 16461 ;;		_comportamientoBasico
 16462 ;; This function uses a non-reentrant model
 16463 ;;
 16464                           
 16465                           	psect	text72
 16466  005402                     __ptext72:
 16467                           	opt callstack 0
 16468  005402                     _caminoCorrecto:
 16469                           	opt callstack 26
 16470  005402                     
 16471                           ;main.c: 273: void caminoCorrecto(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT num
      +                          Movimientos,;main.c: 274:         T_UINT* numMovimientosFinal, T_UBYTE caminoActual) {;m
      +                          ain.c: 276:     movimientos[0] = caminoActual;
 16472  005402  C012  FFD9         	movff	caminoCorrecto@movimientos,fsr2l
 16473  005406  C013  FFDA         	movff	caminoCorrecto@movimientos+1,fsr2h
 16474  00540A  C01A  FFDF         	movff	caminoCorrecto@caminoActual,indf2
 16475  00540E                     
 16476                           ;main.c: 277:     combinarArreglos(movimientos, caminoFinal, numMovimientos, numMovimien
      +                          tosFinal);
 16477  00540E  C012  F006         	movff	caminoCorrecto@movimientos,combinarArreglos@movimientos
 16478  005412  C013  F007         	movff	caminoCorrecto@movimientos+1,combinarArreglos@movimientos+1
 16479  005416  C014  F008         	movff	caminoCorrecto@caminoFinal,combinarArreglos@caminoFinal
 16480  00541A  C015  F009         	movff	caminoCorrecto@caminoFinal+1,combinarArreglos@caminoFinal+1
 16481  00541E  C016  F00A         	movff	caminoCorrecto@numMovimientos,combinarArreglos@numMovimientos
 16482  005422  C017  F00B         	movff	caminoCorrecto@numMovimientos+1,combinarArreglos@numMovimientos+1
 16483  005426  C018  F00C         	movff	caminoCorrecto@numMovimientosFinal,combinarArreglos@numMovimientosFinal
 16484  00542A  C019  F00D         	movff	caminoCorrecto@numMovimientosFinal+1,combinarArreglos@numMovimientosFinal+1
 16485  00542E  ECB2  F027         	call	_combinarArreglos	;wreg free
 16486  005432                     
 16487                           ;main.c: 278:     limpiarMovimientos(movimientos, &numMovimientos);
 16488  005432  C012  F006         	movff	caminoCorrecto@movimientos,limpiarMovimientos@movimientos
 16489  005436  C013  F007         	movff	caminoCorrecto@movimientos+1,limpiarMovimientos@movimientos+1
 16490  00543A  0E16               	movlw	low caminoCorrecto@numMovimientos
 16491  00543C  6E08               	movwf	limpiarMovimientos@numMovimientos^0,c
 16492  00543E  0E00               	movlw	high caminoCorrecto@numMovimientos
 16493  005440  6E09               	movwf	(limpiarMovimientos@numMovimientos+1)^0,c
 16494  005442  EC6D  F029         	call	_limpiarMovimientos	;wreg free
 16495  005446  0012               	return		;funcret
 16496  005448                     __end_of_caminoCorrecto:
 16497                           	opt callstack 0
 16498                           
 16499 ;; *************** function _limpiarMovimientos *****************
 16500 ;; Defined at:
 16501 ;;		line 854 in file "main.c"
 16502 ;; Parameters:    Size  Location     Type
 16503 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 16504 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16505 ;;  numMovimient    2    7[COMRAM] PTR unsigned int 
 16506 ;;		 -> comportamientoBasico@numMovimientos(2), caminoCorrecto@numMovimientos(2), 
 16507 ;; Auto vars:     Size  Location     Type
 16508 ;;  i               2   11[COMRAM] int 
 16509 ;; Return value:  Size  Location     Type
 16510 ;;                  1    wreg      void 
 16511 ;; Registers used:
 16512 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16513 ;; Tracked objects:
 16514 ;;		On entry : 0/0
 16515 ;;		On exit  : 0/0
 16516 ;;		Unchanged: 0/0
 16517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16518 ;;      Params:         4       0       0       0       0       0       0       0       0
 16519 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16520 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16521 ;;      Totals:         8       0       0       0       0       0       0       0       0
 16522 ;;Total ram usage:        8 bytes
 16523 ;; Hardware stack levels used:    1
 16524 ;; Hardware stack levels required when called:    2
 16525 ;; This function calls:
 16526 ;;		Nothing
 16527 ;; This function is called by:
 16528 ;;		_caminoCorrecto
 16529 ;;		_comportamientoBasico
 16530 ;; This function uses a non-reentrant model
 16531 ;;
 16532                           
 16533                           	psect	text73
 16534  0052DA                     __ptext73:
 16535                           	opt callstack 0
 16536  0052DA                     _limpiarMovimientos:
 16537                           	opt callstack 27
 16538  0052DA                     
 16539                           ;main.c: 856:     for (T_INT i = 0; i < *numMovimientos; i++)
 16540  0052DA  0E00               	movlw	0
 16541  0052DC  6E0D               	movwf	(limpiarMovimientos@i+1)^0,c
 16542  0052DE  0E00               	movlw	0
 16543  0052E0  6E0C               	movwf	limpiarMovimientos@i^0,c
 16544  0052E2  EF7D  F029         	goto	l9809
 16545  0052E6                     l9805:
 16546                           
 16547                           ;main.c: 857:         movimientos[i] = 0;
 16548  0052E6  500C               	movf	limpiarMovimientos@i^0,w,c
 16549  0052E8  2406               	addwf	limpiarMovimientos@movimientos^0,w,c
 16550  0052EA  6ED9               	movwf	fsr2l,c
 16551  0052EC  500D               	movf	(limpiarMovimientos@i+1)^0,w,c
 16552  0052EE  2007               	addwfc	(limpiarMovimientos@movimientos+1)^0,w,c
 16553  0052F0  6EDA               	movwf	fsr2h,c
 16554  0052F2  0E00               	movlw	0
 16555  0052F4  6EDF               	movwf	indf2,c
 16556  0052F6  4A0C               	infsnz	limpiarMovimientos@i^0,f,c
 16557  0052F8  2A0D               	incf	(limpiarMovimientos@i+1)^0,f,c
 16558  0052FA                     l9809:
 16559  0052FA  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 16560  0052FE  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 16561  005302  50DE               	movf	postinc2,w,c
 16562  005304  5C0C               	subwf	limpiarMovimientos@i^0,w,c
 16563  005306  50DE               	movf	postinc2,w,c
 16564  005308  580D               	subwfb	(limpiarMovimientos@i+1)^0,w,c
 16565  00530A  A0D8               	btfss	status,0,c
 16566  00530C  EF8A  F029         	goto	u11101
 16567  005310  EF8C  F029         	goto	u11100
 16568  005314                     u11101:
 16569  005314  EF73  F029         	goto	l9805
 16570  005318                     u11100:
 16571  005318                     
 16572                           ;main.c: 859:     *numMovimientos = 0;
 16573  005318  C008  FFD9         	movff	limpiarMovimientos@numMovimientos,fsr2l
 16574  00531C  C009  FFDA         	movff	limpiarMovimientos@numMovimientos+1,fsr2h
 16575  005320  0E00               	movlw	0
 16576  005322  6EDE               	movwf	postinc2,c
 16577  005324  0E00               	movlw	0
 16578  005326  6EDD               	movwf	postdec2,c
 16579  005328  0012               	return		;funcret
 16580  00532A                     __end_of_limpiarMovimientos:
 16581                           	opt callstack 0
 16582                           
 16583 ;; *************** function _combinarArreglos *****************
 16584 ;; Defined at:
 16585 ;;		line 1351 in file "main.c"
 16586 ;; Parameters:    Size  Location     Type
 16587 ;;  movimientos     2    5[COMRAM] PTR unsigned char 
 16588 ;;		 -> comportamientoBasico@movimientosRealizados(200), 
 16589 ;;  caminoFinal     2    7[COMRAM] PTR unsigned char 
 16590 ;;		 -> comportamientoBasico@caminoFinal(1000), 
 16591 ;;  numMovimient    2    9[COMRAM] unsigned int 
 16592 ;;  numMovimient    2   11[COMRAM] PTR unsigned int 
 16593 ;;		 -> comportamientoBasico@numMovimientosTotales(2), 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;  i               2   15[COMRAM] int 
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      void 
 16598 ;; Registers used:
 16599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16605 ;;      Params:         8       0       0       0       0       0       0       0       0
 16606 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16607 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16608 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16609 ;;Total ram usage:       12 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:    2
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		_caminoCorrecto
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           	psect	text74
 16620  004F64                     __ptext74:
 16621                           	opt callstack 0
 16622  004F64                     _combinarArreglos:
 16623                           	opt callstack 26
 16624  004F64                     
 16625                           ;main.c: 1351: void combinarArreglos(T_UBYTE* movimientos, T_UBYTE* caminoFinal, T_UINT 
      +                          numMovimientos,;main.c: 1352:         T_UINT* numMovimientosFinal) {;main.c: 1353:     f
      +                          or (T_INT i = 0; i < numMovimientos; i++) {
 16626  004F64  0E00               	movlw	0
 16627  004F66  6E11               	movwf	(combinarArreglos@i+1)^0,c
 16628  004F68  0E00               	movlw	0
 16629  004F6A  6E10               	movwf	combinarArreglos@i^0,c
 16630  004F6C  EFD7  F027         	goto	l9801
 16631  004F70                     l9795:
 16632                           
 16633                           ;main.c: 1355:         caminoFinal[*numMovimientosFinal] = movimientos[i];
 16634  004F70  5010               	movf	combinarArreglos@i^0,w,c
 16635  004F72  2406               	addwf	combinarArreglos@movimientos^0,w,c
 16636  004F74  6ED9               	movwf	fsr2l,c
 16637  004F76  5011               	movf	(combinarArreglos@i+1)^0,w,c
 16638  004F78  2007               	addwfc	(combinarArreglos@movimientos+1)^0,w,c
 16639  004F7A  6EDA               	movwf	fsr2h,c
 16640  004F7C  C00C  FFE1         	movff	combinarArreglos@numMovimientosFinal,fsr1l
 16641  004F80  C00D  FFE2         	movff	combinarArreglos@numMovimientosFinal+1,fsr1h
 16642  004F84  CFE6 F00E          	movff	postinc1,??_combinarArreglos
 16643  004F88  CFE5 F00F          	movff	postdec1,??_combinarArreglos+1
 16644  004F8C  500E               	movf	??_combinarArreglos^0,w,c
 16645  004F8E  2408               	addwf	combinarArreglos@caminoFinal^0,w,c
 16646  004F90  6EE1               	movwf	fsr1l,c
 16647  004F92  500F               	movf	(??_combinarArreglos+1)^0,w,c
 16648  004F94  2009               	addwfc	(combinarArreglos@caminoFinal+1)^0,w,c
 16649  004F96  6EE2               	movwf	fsr1h,c
 16650  004F98  CFDF FFE7          	movff	indf2,indf1
 16651  004F9C                     
 16652                           ;main.c: 1356:         *numMovimientosFinal += 1;
 16653  004F9C  C00C  FFD9         	movff	combinarArreglos@numMovimientosFinal,fsr2l
 16654  004FA0  C00D  FFDA         	movff	combinarArreglos@numMovimientosFinal+1,fsr2h
 16655  004FA4  2ADE               	incf	postinc2,f,c
 16656  004FA6  0E00               	movlw	0
 16657  004FA8  22DD               	addwfc	postdec2,f,c
 16658  004FAA                     
 16659                           ;main.c: 1357:     }
 16660  004FAA  4A10               	infsnz	combinarArreglos@i^0,f,c
 16661  004FAC  2A11               	incf	(combinarArreglos@i+1)^0,f,c
 16662  004FAE                     l9801:
 16663  004FAE  500A               	movf	combinarArreglos@numMovimientos^0,w,c
 16664  004FB0  5C10               	subwf	combinarArreglos@i^0,w,c
 16665  004FB2  500B               	movf	(combinarArreglos@numMovimientos+1)^0,w,c
 16666  004FB4  5811               	subwfb	(combinarArreglos@i+1)^0,w,c
 16667  004FB6  A0D8               	btfss	status,0,c
 16668  004FB8  EFE0  F027         	goto	u11091
 16669  004FBC  EFE2  F027         	goto	u11090
 16670  004FC0                     u11091:
 16671  004FC0  EFB8  F027         	goto	l9795
 16672  004FC4                     u11090:
 16673  004FC4  0012               	return		;funcret
 16674  004FC6                     __end_of_combinarArreglos:
 16675                           	opt callstack 0
 16676                           
 16677 ;; *************** function _UART_init *****************
 16678 ;; Defined at:
 16679 ;;		line 13 in file "./UART.h"
 16680 ;; Parameters:    Size  Location     Type
 16681 ;;  BAUD            4   31[COMRAM] long 
 16682 ;; Auto vars:     Size  Location     Type
 16683 ;;  frecuenciaCr    4    0        long 
 16684 ;; Return value:  Size  Location     Type
 16685 ;;                  1    wreg      void 
 16686 ;; Registers used:
 16687 ;;		wreg, status,2, status,0, cstack
 16688 ;; Tracked objects:
 16689 ;;		On entry : 0/0
 16690 ;;		On exit  : 0/0
 16691 ;;		Unchanged: 0/0
 16692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16693 ;;      Params:         4       0       0       0       0       0       0       0       0
 16694 ;;      Locals:         8       0       0       0       0       0       0       0       0
 16695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16696 ;;      Totals:        12       0       0       0       0       0       0       0       0
 16697 ;;Total ram usage:       12 bytes
 16698 ;; Hardware stack levels used:    1
 16699 ;; Hardware stack levels required when called:    3
 16700 ;; This function calls:
 16701 ;;		___aldiv
 16702 ;; This function is called by:
 16703 ;;		_main
 16704 ;; This function uses a non-reentrant model
 16705 ;;
 16706                           
 16707                           	psect	text75
 16708  004DB8                     __ptext75:
 16709                           	opt callstack 0
 16710  004DB8                     _UART_init:
 16711                           	opt callstack 27
 16712  004DB8                     
 16713                           ;./UART.h: 16:     TRISC6 = 0;
 16714  004DB8  9C94               	bcf	3988,6,c	;volatile
 16715  004DBA                     
 16716                           ;./UART.h: 17:     TRISC7 = 1;
 16717  004DBA  8E94               	bsf	3988,7,c	;volatile
 16718  004DBC                     
 16719                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16720  004DBC  0E10               	movlw	16
 16721  004DBE  6E16               	movwf	___aldiv@divisor^0,c
 16722  004DC0  0E00               	movlw	0
 16723  004DC2  6E17               	movwf	(___aldiv@divisor+1)^0,c
 16724  004DC4  0E00               	movlw	0
 16725  004DC6  6E18               	movwf	(___aldiv@divisor+2)^0,c
 16726  004DC8  0E00               	movlw	0
 16727  004DCA  6E19               	movwf	(___aldiv@divisor+3)^0,c
 16728  004DCC  0E00               	movlw	0
 16729  004DCE  6E12               	movwf	___aldiv@dividend^0,c
 16730  004DD0  0E09               	movlw	9
 16731  004DD2  6E13               	movwf	(___aldiv@dividend+1)^0,c
 16732  004DD4  0E3D               	movlw	61
 16733  004DD6  6E14               	movwf	(___aldiv@dividend+2)^0,c
 16734  004DD8  0E00               	movlw	0
 16735  004DDA  6E15               	movwf	(___aldiv@dividend+3)^0,c
 16736  004DDC  EC6F  F01F         	call	___aldiv	;wreg free
 16737  004DE0  C012  F028         	movff	?___aldiv,_UART_init$1841
 16738  004DE4  C013  F029         	movff	?___aldiv+1,_UART_init$1841+1
 16739  004DE8  C014  F02A         	movff	?___aldiv+2,_UART_init$1841+2
 16740  004DEC  C015  F02B         	movff	?___aldiv+3,_UART_init$1841+3
 16741  004DF0                     
 16742                           ;./UART.h: 20:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
 16743  004DF0  C028  F012         	movff	_UART_init$1841,___aldiv@dividend
 16744  004DF4  C029  F013         	movff	_UART_init$1841+1,___aldiv@dividend+1
 16745  004DF8  C02A  F014         	movff	_UART_init$1841+2,___aldiv@dividend+2
 16746  004DFC  C02B  F015         	movff	_UART_init$1841+3,___aldiv@dividend+3
 16747  004E00  C020  F016         	movff	UART_init@BAUD,___aldiv@divisor
 16748  004E04  C021  F017         	movff	UART_init@BAUD+1,___aldiv@divisor+1
 16749  004E08  C022  F018         	movff	UART_init@BAUD+2,___aldiv@divisor+2
 16750  004E0C  C023  F019         	movff	UART_init@BAUD+3,___aldiv@divisor+3
 16751  004E10  EC6F  F01F         	call	___aldiv	;wreg free
 16752  004E14  0412               	decf	?___aldiv^0,w,c
 16753  004E16  6EAF               	movwf	175,c	;volatile
 16754  004E18                     
 16755                           ;./UART.h: 23:     TXSTAbits.BRGH = 1;
 16756  004E18  84AC               	bsf	172,2,c	;volatile
 16757  004E1A                     
 16758                           ;./UART.h: 24:     TXSTAbits.SYNC = 0;
 16759  004E1A  98AC               	bcf	172,4,c	;volatile
 16760  004E1C                     
 16761                           ;./UART.h: 25:     RCSTAbits.SPEN = 1;
 16762  004E1C  8EAB               	bsf	171,7,c	;volatile
 16763  004E1E                     
 16764                           ;./UART.h: 28:     TXSTAbits.TX9 = 0;
 16765  004E1E  9CAC               	bcf	172,6,c	;volatile
 16766  004E20                     
 16767                           ;./UART.h: 29:     TXSTAbits.TXEN = 1;
 16768  004E20  8AAC               	bsf	172,5,c	;volatile
 16769  004E22                     
 16770                           ;./UART.h: 32:     RCSTAbits.RC9 = 0;
 16771  004E22  9CAB               	bcf	171,6,c	;volatile
 16772  004E24                     
 16773                           ;./UART.h: 33:     RCSTAbits.CREN = 1;
 16774  004E24  88AB               	bsf	171,4,c	;volatile
 16775  004E26  0012               	return		;funcret
 16776  004E28                     __end_of_UART_init:
 16777                           	opt callstack 0
 16778                           
 16779 ;; *************** function ___aldiv *****************
 16780 ;; Defined at:
 16781 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 16782 ;; Parameters:    Size  Location     Type
 16783 ;;  dividend        4   17[COMRAM] long 
 16784 ;;  divisor         4   21[COMRAM] long 
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;  quotient        4   27[COMRAM] long 
 16787 ;;  sign            1   26[COMRAM] unsigned char 
 16788 ;;  counter         1   25[COMRAM] unsigned char 
 16789 ;; Return value:  Size  Location     Type
 16790 ;;                  4   17[COMRAM] long 
 16791 ;; Registers used:
 16792 ;;		wreg, status,2, status,0
 16793 ;; Tracked objects:
 16794 ;;		On entry : 0/0
 16795 ;;		On exit  : 0/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16798 ;;      Params:         8       0       0       0       0       0       0       0       0
 16799 ;;      Locals:         6       0       0       0       0       0       0       0       0
 16800 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16801 ;;      Totals:        14       0       0       0       0       0       0       0       0
 16802 ;;Total ram usage:       14 bytes
 16803 ;; Hardware stack levels used:    1
 16804 ;; Hardware stack levels required when called:    2
 16805 ;; This function calls:
 16806 ;;		Nothing
 16807 ;; This function is called by:
 16808 ;;		_map
 16809 ;;		_UART_init
 16810 ;; This function uses a non-reentrant model
 16811 ;;
 16812                           
 16813                           	psect	text76
 16814  003EDE                     __ptext76:
 16815                           	opt callstack 0
 16816  003EDE                     ___aldiv:
 16817                           	opt callstack 24
 16818  003EDE  0E00               	movlw	0
 16819  003EE0  6E1B               	movwf	___aldiv@sign^0,c
 16820  003EE2  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 16821  003EE4  EF78  F01F         	goto	u8120
 16822  003EE8  EF76  F01F         	goto	u8121
 16823  003EEC                     u8121:
 16824  003EEC  EF82  F01F         	goto	l8107
 16825  003EF0                     u8120:
 16826  003EF0  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 16827  003EF2  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 16828  003EF4  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 16829  003EF6  6C16               	negf	___aldiv@divisor^0,c
 16830  003EF8  0E00               	movlw	0
 16831  003EFA  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 16832  003EFC  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 16833  003EFE  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 16834  003F00  0E01               	movlw	1
 16835  003F02  6E1B               	movwf	___aldiv@sign^0,c
 16836  003F04                     l8107:
 16837  003F04  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 16838  003F06  EF89  F01F         	goto	u8130
 16839  003F0A  EF87  F01F         	goto	u8131
 16840  003F0E                     u8131:
 16841  003F0E  EF93  F01F         	goto	l8113
 16842  003F12                     u8130:
 16843  003F12  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 16844  003F14  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 16845  003F16  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 16846  003F18  6C12               	negf	___aldiv@dividend^0,c
 16847  003F1A  0E00               	movlw	0
 16848  003F1C  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 16849  003F1E  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 16850  003F20  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 16851  003F22  0E01               	movlw	1
 16852  003F24  1A1B               	xorwf	___aldiv@sign^0,f,c
 16853  003F26                     l8113:
 16854  003F26  0E00               	movlw	0
 16855  003F28  6E1C               	movwf	___aldiv@quotient^0,c
 16856  003F2A  0E00               	movlw	0
 16857  003F2C  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 16858  003F2E  0E00               	movlw	0
 16859  003F30  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 16860  003F32  0E00               	movlw	0
 16861  003F34  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 16862  003F36  5016               	movf	___aldiv@divisor^0,w,c
 16863  003F38  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 16864  003F3A  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 16865  003F3C  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 16866  003F3E  B4D8               	btfsc	status,2,c
 16867  003F40  EFA4  F01F         	goto	u8141
 16868  003F44  EFA6  F01F         	goto	u8140
 16869  003F48                     u8141:
 16870  003F48  EFDC  F01F         	goto	l8135
 16871  003F4C                     u8140:
 16872  003F4C  0E01               	movlw	1
 16873  003F4E  6E1A               	movwf	___aldiv@counter^0,c
 16874  003F50  EFB0  F01F         	goto	l8121
 16875  003F54                     l8119:
 16876  003F54  90D8               	bcf	status,0,c
 16877  003F56  3616               	rlcf	___aldiv@divisor^0,f,c
 16878  003F58  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 16879  003F5A  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 16880  003F5C  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 16881  003F5E  2A1A               	incf	___aldiv@counter^0,f,c
 16882  003F60                     l8121:
 16883  003F60  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 16884  003F62  EFB5  F01F         	goto	u8151
 16885  003F66  EFB7  F01F         	goto	u8150
 16886  003F6A                     u8151:
 16887  003F6A  EFAA  F01F         	goto	l8119
 16888  003F6E                     u8150:
 16889  003F6E                     l8123:
 16890  003F6E  90D8               	bcf	status,0,c
 16891  003F70  361C               	rlcf	___aldiv@quotient^0,f,c
 16892  003F72  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 16893  003F74  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 16894  003F76  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 16895  003F78  5016               	movf	___aldiv@divisor^0,w,c
 16896  003F7A  5C12               	subwf	___aldiv@dividend^0,w,c
 16897  003F7C  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16898  003F7E  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 16899  003F80  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16900  003F82  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 16901  003F84  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16902  003F86  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 16903  003F88  A0D8               	btfss	status,0,c
 16904  003F8A  EFC9  F01F         	goto	u8161
 16905  003F8E  EFCB  F01F         	goto	u8160
 16906  003F92                     u8161:
 16907  003F92  EFD4  F01F         	goto	l8131
 16908  003F96                     u8160:
 16909  003F96  5016               	movf	___aldiv@divisor^0,w,c
 16910  003F98  5E12               	subwf	___aldiv@dividend^0,f,c
 16911  003F9A  5017               	movf	(___aldiv@divisor+1)^0,w,c
 16912  003F9C  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 16913  003F9E  5018               	movf	(___aldiv@divisor+2)^0,w,c
 16914  003FA0  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 16915  003FA2  5019               	movf	(___aldiv@divisor+3)^0,w,c
 16916  003FA4  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 16917  003FA6  801C               	bsf	___aldiv@quotient^0,0,c
 16918  003FA8                     l8131:
 16919  003FA8  90D8               	bcf	status,0,c
 16920  003FAA  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 16921  003FAC  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 16922  003FAE  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 16923  003FB0  3216               	rrcf	___aldiv@divisor^0,f,c
 16924  003FB2  2E1A               	decfsz	___aldiv@counter^0,f,c
 16925  003FB4  EFB7  F01F         	goto	l8123
 16926  003FB8                     l8135:
 16927  003FB8  501B               	movf	___aldiv@sign^0,w,c
 16928  003FBA  B4D8               	btfsc	status,2,c
 16929  003FBC  EFE2  F01F         	goto	u8171
 16930  003FC0  EFE4  F01F         	goto	u8170
 16931  003FC4                     u8171:
 16932  003FC4  EFEC  F01F         	goto	l8139
 16933  003FC8                     u8170:
 16934  003FC8  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 16935  003FCA  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 16936  003FCC  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 16937  003FCE  6C1C               	negf	___aldiv@quotient^0,c
 16938  003FD0  0E00               	movlw	0
 16939  003FD2  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 16940  003FD4  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 16941  003FD6  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 16942  003FD8                     l8139:
 16943  003FD8  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 16944  003FDC  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 16945  003FE0  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 16946  003FE4  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 16947  003FE8  0012               	return		;funcret
 16948  003FEA                     __end_of___aldiv:
 16949                           	opt callstack 0
 16950                           
 16951 ;; *************** function _boton *****************
 16952 ;; Defined at:
 16953 ;;		line 134 in file "main.c"
 16954 ;; Parameters:    Size  Location     Type
 16955 ;;		None
 16956 ;; Auto vars:     Size  Location     Type
 16957 ;;		None
 16958 ;; Return value:  Size  Location     Type
 16959 ;;                  1    wreg      void 
 16960 ;; Registers used:
 16961 ;;		wreg, status,2, status,0, cstack
 16962 ;; Tracked objects:
 16963 ;;		On entry : 0/0
 16964 ;;		On exit  : 0/0
 16965 ;;		Unchanged: 0/0
 16966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16967 ;;      Params:         0       0       0       0       0       0       0       0       0
 16968 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16969 ;;      Temps:          2       0       0       0       0       0       0       0       0
 16970 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16971 ;;Total ram usage:        2 bytes
 16972 ;; Hardware stack levels used:    1
 16973 ;; Hardware stack levels required when called:    1
 16974 ;; This function calls:
 16975 ;;		_antiRebote
 16976 ;; This function is called by:
 16977 ;;		Interrupt level 2
 16978 ;; This function uses a non-reentrant model
 16979 ;;
 16980                           
 16981                           	psect	intcode
 16982  000008                     __pintcode:
 16983                           	opt callstack 0
 16984  000008                     _boton:
 16985                           	opt callstack 19
 16986                           
 16987                           ;incstack = 0
 16988  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16989  00000A  EDC9  F028         	call	int_func,f	;refresh shadow registers
 16990                           
 16991                           	psect	intcode_body
 16992  005192                     __pintcode_body:
 16993                           	opt callstack 19
 16994  005192                     int_func:
 16995                           	opt callstack 19
 16996  005192  0006               	pop		; remove dummy address from shadow register refresh
 16997  005194                     
 16998                           ;main.c: 136:     if (INT0IF)
 16999  005194  A2F2               	btfss	4082,1,c	;volatile
 17000  005196  EFCF  F028         	goto	i2u786_41
 17001  00519A  EFD1  F028         	goto	i2u786_40
 17002  00519E                     i2u786_41:
 17003  00519E  EFF1  F028         	goto	i2l284
 17004  0051A2                     i2u786_40:
 17005  0051A2                     
 17006                           ;main.c: 137:     {;main.c: 138:         antiRebote(1);
 17007  0051A2  0E01               	movlw	1
 17008  0051A4  EC9D  F028         	call	_antiRebote
 17009  0051A8                     
 17010                           ;main.c: 139:         if (pausa) {
 17011  0051A8  0101               	movlb	1	; () banked
 17012  0051AA  51E9               	movf	_pausa& (0+255),w,b
 17013  0051AC  B4D8               	btfsc	status,2,c
 17014  0051AE  EFDB  F028         	goto	i2u787_41
 17015  0051B2  EFDD  F028         	goto	i2u787_40
 17016  0051B6                     i2u787_41:
 17017  0051B6  EFED  F028         	goto	i2l282
 17018  0051BA                     i2u787_40:
 17019  0051BA                     
 17020                           ; BSR set to: 1
 17021                           ;main.c: 140:             pausa = 0;
 17022  0051BA  0E00               	movlw	0
 17023  0051BC  6FE9               	movwf	_pausa& (0+255),b
 17024  0051BE                     
 17025                           ; BSR set to: 1
 17026                           ;main.c: 141:             LATD2 = 1;
 17027  0051BE  848C               	bsf	3980,2,c	;volatile
 17028  0051C0                     
 17029                           ; BSR set to: 1
 17030                           ;main.c: 142:             _delay((unsigned long)((3000)*(4000000/4000.0)));
 17031  0051C0  0E10               	movlw	16
 17032  0051C2  6E05               	movwf	(??_boton+1)^0,c
 17033  0051C4  0E39               	movlw	57
 17034  0051C6  6E04               	movwf	??_boton^0,c
 17035  0051C8  0E0E               	movlw	14
 17036  0051CA                     i2u1212_47:
 17037  0051CA  2EE8               	decfsz	wreg,f,c
 17038  0051CC  D7FE               	bra	i2u1212_47
 17039  0051CE  2E04               	decfsz	??_boton^0,f,c
 17040  0051D0  D7FC               	bra	i2u1212_47
 17041  0051D2  2E05               	decfsz	(??_boton+1)^0,f,c
 17042  0051D4  D7FA               	bra	i2u1212_47
 17043                           
 17044                           ;main.c: 143:         } else {
 17045  0051D6  EFF0  F028         	goto	i2l7533
 17046  0051DA                     i2l282:
 17047                           
 17048                           ; BSR set to: 1
 17049                           ;main.c: 144:             LATD2 = 0;
 17050  0051DA  948C               	bcf	3980,2,c	;volatile
 17051  0051DC                     
 17052                           ; BSR set to: 1
 17053                           ;main.c: 145:             pausa = 1;
 17054  0051DC  0E01               	movlw	1
 17055  0051DE  6FE9               	movwf	_pausa& (0+255),b
 17056  0051E0                     i2l7533:
 17057                           
 17058                           ;main.c: 148:         INT0IF = 0;
 17059  0051E0  92F2               	bcf	4082,1,c	;volatile
 17060  0051E2                     i2l284:
 17061  0051E2  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17062  0051E4  0011               	retfie		f
 17063  0051E6                     __end_of_boton:
 17064                           	opt callstack 0
 17065                           
 17066 ;; *************** function _antiRebote *****************
 17067 ;; Defined at:
 17068 ;;		line 246 in file "main.c"
 17069 ;; Parameters:    Size  Location     Type
 17070 ;;  pin             1    wreg     unsigned char 
 17071 ;; Auto vars:     Size  Location     Type
 17072 ;;  pin             1    2[COMRAM] unsigned char 
 17073 ;; Return value:  Size  Location     Type
 17074 ;;                  1    wreg      void 
 17075 ;; Registers used:
 17076 ;;		wreg, status,2, status,0
 17077 ;; Tracked objects:
 17078 ;;		On entry : 0/0
 17079 ;;		On exit  : 0/0
 17080 ;;		Unchanged: 0/0
 17081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17082 ;;      Params:         0       0       0       0       0       0       0       0       0
 17083 ;;      Locals:         1       0       0       0       0       0       0       0       0
 17084 ;;      Temps:          2       0       0       0       0       0       0       0       0
 17085 ;;      Totals:         3       0       0       0       0       0       0       0       0
 17086 ;;Total ram usage:        3 bytes
 17087 ;; Hardware stack levels used:    1
 17088 ;; This function calls:
 17089 ;;		Nothing
 17090 ;; This function is called by:
 17091 ;;		_boton
 17092 ;; This function uses a non-reentrant model
 17093 ;;
 17094                           
 17095                           	psect	text78
 17096  00513A                     __ptext78:
 17097                           	opt callstack 0
 17098  00513A                     _antiRebote:
 17099                           	opt callstack 19
 17100                           
 17101                           ;incstack = 0
 17102                           ;antiRebote@pin stored from wreg
 17103  00513A  6E03               	movwf	antiRebote@pin^0,c
 17104  00513C                     
 17105                           ;main.c: 248:     switch (pin) {
 17106  00513C  EFB7  F028         	goto	i2l7327
 17107  005140                     i2l318:
 17108  005140  A081               	btfss	129,0,c	;volatile
 17109  005142  EFA5  F028         	goto	i2u766_41
 17110  005146  EFA7  F028         	goto	i2u766_40
 17111  00514A                     i2u766_41:
 17112  00514A  EFA0  F028         	goto	i2l318
 17113  00514E                     i2u766_40:
 17114  00514E                     i2l321:
 17115  00514E  B081               	btfsc	129,0,c	;volatile
 17116  005150  EFAC  F028         	goto	i2u767_41
 17117  005154  EFAE  F028         	goto	i2u767_40
 17118  005158                     i2u767_41:
 17119  005158  EFA7  F028         	goto	i2l321
 17120  00515C                     i2u767_40:
 17121  00515C                     
 17122                           ;main.c: 252:             _delay((unsigned long)((100)*(4000000/4000.0)));
 17123  00515C  0E82               	movlw	130
 17124  00515E  6E01               	movwf	??_antiRebote^0,c
 17125  005160  0EDE               	movlw	222
 17126  005162                     i2u1213_47:
 17127  005162  2EE8               	decfsz	wreg,f,c
 17128  005164  D7FE               	bra	i2u1213_47
 17129  005166  2E01               	decfsz	??_antiRebote^0,f,c
 17130  005168  D7FC               	bra	i2u1213_47
 17131                           
 17132                           ;main.c: 253:             break;
 17133  00516A  EFC8  F028         	goto	i2l326
 17134  00516E                     i2l7327:
 17135  00516E  5003               	movf	antiRebote@pin^0,w,c
 17136  005170  6E01               	movwf	??_antiRebote^0,c
 17137  005172  6A02               	clrf	(??_antiRebote+1)^0,c
 17138                           
 17139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17140                           ; Switch size 1, requested type "simple"
 17141                           ; Number of cases is 1, Range of values is 0 to 0
 17142                           ; switch strategies available:
 17143                           ; Name         Instructions Cycles
 17144                           ; simple_byte            4     3 (average)
 17145                           ;	Chosen strategy is simple_byte
 17146  005174  5002               	movf	(??_antiRebote+1)^0,w,c
 17147  005176  0A00               	xorlw	0	; case 0
 17148  005178  B4D8               	btfsc	status,2,c
 17149  00517A  EFC1  F028         	goto	i2l11179
 17150  00517E  EFC8  F028         	goto	i2l326
 17151  005182                     i2l11179:
 17152                           
 17153                           ; Switch size 1, requested type "simple"
 17154                           ; Number of cases is 1, Range of values is 1 to 1
 17155                           ; switch strategies available:
 17156                           ; Name         Instructions Cycles
 17157                           ; simple_byte            4     3 (average)
 17158                           ;	Chosen strategy is simple_byte
 17159  005182  5001               	movf	??_antiRebote^0,w,c
 17160  005184  0A01               	xorlw	1	; case 1
 17161  005186  B4D8               	btfsc	status,2,c
 17162  005188  EFA0  F028         	goto	i2l318
 17163  00518C  EFC8  F028         	goto	i2l326
 17164  005190                     i2l326:
 17165  005190  0012               	return		;funcret
 17166  005192                     __end_of_antiRebote:
 17167                           	opt callstack 0
 17168                           
 17169                           	psect	rparam
 17170  0000                     
 17171                           	psect	temp
 17172  00005A                     btemp:
 17173                           	opt callstack 0
 17174  00005A                     	ds	1
 17175  0000                     int$flags	set	btemp
 17176  0000                     wtemp8	set	btemp+1
 17177  0000                     ttemp5	set	btemp+1
 17178  0000                     ttemp6	set	btemp+4
 17179  0000                     ttemp7	set	btemp+8
 17180                           tosu	equ	0xFFF
 17181                           tosh	equ	0xFFE
 17182                           tosl	equ	0xFFD
 17183                           stkptr	equ	0xFFC
 17184                           pclatu	equ	0xFFB
 17185                           pclath	equ	0xFFA
 17186                           pcl	equ	0xFF9
 17187                           tblptru	equ	0xFF8
 17188                           tblptrh	equ	0xFF7
 17189                           tblptrl	equ	0xFF6
 17190                           tablat	equ	0xFF5
 17191                           prodh	equ	0xFF4
 17192                           prodl	equ	0xFF3
 17193                           indf0	equ	0xFEF
 17194                           postinc0	equ	0xFEE
 17195                           postdec0	equ	0xFED
 17196                           preinc0	equ	0xFEC
 17197                           plusw0	equ	0xFEB
 17198                           fsr0h	equ	0xFEA
 17199                           fsr0l	equ	0xFE9
 17200                           wreg	equ	0xFE8
 17201                           indf1	equ	0xFE7
 17202                           postinc1	equ	0xFE6
 17203                           postdec1	equ	0xFE5
 17204                           preinc1	equ	0xFE4
 17205                           plusw1	equ	0xFE3
 17206                           fsr1h	equ	0xFE2
 17207                           fsr1l	equ	0xFE1
 17208                           bsr	equ	0xFE0
 17209                           indf2	equ	0xFDF
 17210                           postinc2	equ	0xFDE
 17211                           postdec2	equ	0xFDD
 17212                           preinc2	equ	0xFDC
 17213                           plusw2	equ	0xFDB
 17214                           fsr2h	equ	0xFDA
 17215                           fsr2l	equ	0xFD9
 17216                           status	equ	0xFD8


Data Sizes:
    Strings     528
    Constant    4
    Data        4
    BSS         1416
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    159     160
    BANK1           256     23     237
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_19(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1487_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> buffer(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_19(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_19(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_19(CODE[34]), STR_11(CODE[32]), STR_6(CODE[17]), STR_5(CODE[19]), 
		 -> STR_4(CODE[18]), STR_3(CODE[34]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    combinarArreglos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    combinarArreglos@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    combinarArreglos@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    decidirDireccion@mapear	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@mapear(BANK1[1]), 

    decidirDireccion@cruceDetectado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cruceDetectado(BANK1[1]), 

    decidirDireccion@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    decidirDireccion@caminoActual	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@caminoActual(BANK1[1]), 

    decidirDireccion@cambioOrientacionCarro	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@cambioOrientacionCarro(BANK1[1]), 

    decidirDireccion@contCaminosRecorridos	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@contCaminosRecorridos(BANK1[1]), 

    decidirDireccion@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    decidirDireccion@investigandoCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@investigandoCruce(BANK1[1]), 

    decidirDireccion@posicionInvCruce	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@posicionInvCruce(BANK1[1]), 

    limpiarMovimientos@numMovimientos	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientos(BANK1[2]), caminoCorrecto@numMovimientos(COMRAM[2]), 

    limpiarMovimientos@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    hayCruce@caminosRecorrer	PTR unsigned char  size(2) Largest target is 3
		 -> comportamientoBasico@caminosRecorrer(BANK1[3]), 

    recorrerCaminoEncontrado@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    regresarAlCruce@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    regresarPuntoPartida@movimientos	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    moverCarrito@carroEspejeado	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@carroEspejeado(COMRAM[1]), 

    moverCarrito@avanceRectoLargo	PTR unsigned char  size(2) Largest target is 1
		 -> comportamientoBasico@avanceRectoLargo(BANK1[1]), 

    caminoCorrecto@numMovimientosFinal	PTR unsigned int  size(2) Largest target is 2
		 -> comportamientoBasico@numMovimientosTotales(BANK1[2]), 

    caminoCorrecto@caminoFinal	PTR unsigned char  size(2) Largest target is 1000
		 -> comportamientoBasico@caminoFinal(BIGRAM[1000]), 

    caminoCorrecto@movimientos	PTR unsigned char  size(2) Largest target is 200
		 -> comportamientoBasico@movimientosRealizados(BANK2[200]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 63
		 -> STR_18(CODE[32]), STR_17(CODE[31]), STR_16(CODE[33]), STR_15(CODE[32]), 
		 -> STR_14(CODE[23]), STR_13(CODE[63]), STR_12(CODE[56]), STR_10(CODE[6]), 
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[10]), buffer(BANK1[50]), 
		 -> STR_2(CODE[25]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _comportamientoBasico->_decidirDireccion
    _comportamientoBasico->_moverCarrito
    _comportamientoBasico->_recorrerCaminoEncontrado
    _comportamientoBasico->_regresarAlCruce
    _comportamientoBasico->_regresarPuntoPartida
    _mover->_forzarAvanceRecto
    _PID->_roundf
    _roundf->___flsub
    _leerSensores->___fldiv
    _dameDistancia->___xxtofl
    _map->___aldiv
    ___xxtofl->___lwdiv
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->_roundf
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___fladd
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _seLlegoAlDestino->_dameLecturaAdc
    _mostrarDireccionElegida->_UART_printf
    _UART_printf->_UART_write
    _hayCruce->___flge
    ___flge->___flmul
    _caminoCorrecto->_combinarArreglos
    _UART_init->___aldiv
    ___aldiv->___lmul

Critical Paths under _boton in COMRAM

    _boton->_antiRebote

Critical Paths under _main in BANK0

    _main->_comportamientoBasico
    _main->_visualizarPasosRealizados
    _visualizarPasosRealizados->_sprintf
    _comportamientoBasico->_decidirDireccion
    _regresarPuntoPartida->_PID
    _regresarAlCruce->_PID
    _recorrerCaminoEncontrado->_PID
    _PID->_pwmDuty
    _leerSensores->___fldiv
    _velocidadEstandar->_pwmDuty
    _decidirDireccion->_sprintf
    _velocidadBaja->_pwmDuty
    _pwmDuty->___fltol
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___fltol->_roundf

Critical Paths under _boton in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_comportamientoBasico
    _comportamientoBasico->_decidirDireccion

Critical Paths under _boton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _boton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _boton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _boton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _boton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _boton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _boton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  533680
                                             20 BANK1      3     3      0
                          _UART_init
               _comportamientoBasico
                          _configPwm
                      _configurarAdc
                     _forzarParoAuto
    _inicializarComportamientoBasico
          _visualizarPasosRealizados
 ---------------------------------------------------------------------------------
 (1) _visualizarPasosRealizados                            4     2      2   61233
                                            155 BANK0      4     2      2
                        _UART_printf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _inicializarComportamientoBasico                      0     0      0   13829
                      _dameDistancia
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comportamientoBasico                                 3     3      0  457336
                                            158 BANK0      1     1      0
                                             18 BANK1      2     2      0
                                _PID
                        _UART_printf
                     _caminoCorrecto
                   _decidirDireccion
                 _finalizarRecorrido
                      _forzarEspejeo
                     _forzarParoAuto
                       _leerSensores
                 _limpiarMovimientos
                       _moverCarrito
           _recorrerCaminoEncontrado
                    _regresarAlCruce
               _regresarPuntoPartida
                      _velocidadBaja
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarPuntoPartida                                 7     3      4   64212
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _regresarAlCruce                                      7     3      4   64032
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _recorrerCaminoEncontrado                             7     3      4   64001
                                             83 COMRAM     1     1      0
                                             58 BANK0      6     2      4
                                _PID
                              _mover
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (3) _mover                                                2     2      0       0
                                              7 COMRAM     2     2      0
                  _forzarAvanceRecto
 ---------------------------------------------------------------------------------
 (3) _PID                                                 18    18      0   51106
                                             40 BANK0     18    18      0
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _pwmDuty
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   20827
                                             75 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _moverCarrito                                         7     3      4   29092
                                             83 COMRAM     1     1      0
                                             40 BANK0      6     2      4
                  _forzarAvanceRecto
                      _forzarEspejeo
 ---------------------------------------------------------------------------------
 (4) _forzarAvanceRecto                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _leerSensores                                         0     0      0   10233
                            ___fladd
                            ___fldiv
                      _dameDistancia
 ---------------------------------------------------------------------------------
 (2) _dameDistancia                                       13     9      4    1368
                                             26 COMRAM    13     9      4
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _finalizarRecorrido                                   0     0      0   28788
                      _forzarEspejeo
                     _forzarParoAuto
 ---------------------------------------------------------------------------------
 (3) _forzarEspejeo                                        0     0      0   28788
                             ___flge
               _forzarEspejeoDerecha
             _forzarEspejeoIzquierda
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoIzquierda                               0     0      0   12461
                _forzarGiroIzquierda
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (5) _forzarGiroIzquierda                                  2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _forzarEspejeoDerecha                                 0     0      0   12461
                  _forzarGiroDerecha
                     _forzarParoAuto
                      _forzarReversa
                  _velocidadEstandar
 ---------------------------------------------------------------------------------
 (2) _velocidadEstandar                                    0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (5) _forzarReversa                                        2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forzarParoAuto                                       1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _forzarGiroDerecha                                    2     2      0       0
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _decidirDireccion                                    22     4     18   88074
                                             83 COMRAM     1     1      0
                                            155 BANK0      3     3      0
                                              0 BANK1     18     0     18
                        _UART_printf
                             ___flge
                           _hayCruce
            _mostrarDireccionElegida
                   _seLlegoAlDestino
                            _sprintf
                      _velocidadBaja
 ---------------------------------------------------------------------------------
 (2) _velocidadBaja                                        0     0      0   12461
                            _pwmDuty
 ---------------------------------------------------------------------------------
 (3) _pwmDuty                                             12     9      3   12461
                                             28 BANK0     12     9      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (4) _map                                                 20     0     20    2108
                                             31 COMRAM    20     0     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   59486
                                            135 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58070
                                            127 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   57522
                                             97 BANK0     30    24      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   38677
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             11 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             79 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     787
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    6347
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    5422
                                             51 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3953
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3443
                                             67 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _dameDistancia (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6763
                                             32 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4776
                                             32 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4497
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1665
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     562
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _seLlegoAlDestino                                     1     1      0      68
                                             10 COMRAM     1     1      0
                     _dameLecturaAdc
 ---------------------------------------------------------------------------------
 (4) _dameLecturaAdc                                       5     3      2      31
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _mostrarDireccionElegida                              3     3      0    1657
                                              8 COMRAM     3     3      0
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2    1626
                                              6 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _hayCruce                                             4     1      3    4709
                                             63 COMRAM     4     1      3
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    3866
                                             51 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _caminoCorrecto                                       9     0      9    1811
                                             17 COMRAM     9     0      9
                   _combinarArreglos
                 _limpiarMovimientos
 ---------------------------------------------------------------------------------
 (2) _limpiarMovimientos                                   8     4      4     521
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _combinarArreglos                                    12     4      8     583
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4    1174
                                             31 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     985
                                             17 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _boton                                               2     2      0      22
                                              3 COMRAM     2     2      0
                         _antiRebote
 ---------------------------------------------------------------------------------
 (12) _antiRebote                                          3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
       ___lmul (ARG)
   _comportamientoBasico
     _PID
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _roundf (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       ___xxtofl
         ___lwdiv (ARG)
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
       _roundf
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
     _UART_printf
       _UART_write
     _caminoCorrecto
       _combinarArreglos
       _limpiarMovimientos
     _decidirDireccion
       _UART_printf
         _UART_write
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _hayCruce
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
       _mostrarDireccionElegida
         _UART_printf
           _UART_write
       _seLlegoAlDestino
         _dameLecturaAdc
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _velocidadBaja
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _finalizarRecorrido
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
       _forzarParoAuto
     _forzarEspejeo
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _forzarEspejeoDerecha
         _forzarGiroDerecha
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
       _forzarEspejeoIzquierda
         _forzarGiroIzquierda
         _forzarParoAuto
         _forzarReversa
         _velocidadEstandar
           _pwmDuty
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl
               ___lwdiv (ARG)
             _map
               ___aldiv
                 ___lmul (ARG)
               ___lmul
     _forzarParoAuto
     _leerSensores
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       ___fldiv
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _dameDistancia (ARG)
           ___lwdiv
           ___xxtofl
             ___lwdiv (ARG)
       _dameDistancia
         ___lwdiv
         ___xxtofl
           ___lwdiv (ARG)
     _limpiarMovimientos
     _moverCarrito
       _forzarAvanceRecto
       _forzarEspejeo
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         _forzarEspejeoDerecha
           _forzarGiroDerecha
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
         _forzarEspejeoIzquierda
           _forzarGiroIzquierda
           _forzarParoAuto
           _forzarReversa
           _velocidadEstandar
             _pwmDuty
               ___fldiv
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flsub (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _roundf (ARG)
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flge
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___flmul
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___flneg
                   ___flsub
                     ___fladd
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                           ___lwdiv (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                       _dameDistancia (ARG)
                         ___lwdiv
                         ___xxtofl
                           ___lwdiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl
                 ___lwdiv (ARG)
               _map
                 ___aldiv
                   ___lmul (ARG)
                 ___lmul
     _recorrerCaminoEncontrado
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarAlCruce
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _regresarPuntoPartida
       _PID
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
         _roundf
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
       _mover
         _forzarAvanceRecto
       _velocidadEstandar
         _pwmDuty
           ___fldiv
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flsub (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _roundf (ARG)
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _map
             ___aldiv
               ___lmul (ARG)
             ___lmul
     _velocidadBaja
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _configPwm
   _configurarAdc
   _forzarParoAuto
   _inicializarComportamientoBasico
     _dameDistancia
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _velocidadEstandar
       _pwmDuty
         ___fldiv
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _dameDistancia (ARG)
             ___lwdiv
             ___xxtofl
               ___lwdiv (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _dameDistancia (ARG)
               ___lwdiv
               ___xxtofl
                 ___lwdiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___flsub (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _roundf (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _map
           ___aldiv
             ___lmul (ARG)
           ___lmul
   _visualizarPasosRealizados
     _UART_printf
       _UART_write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _dameDistancia (ARG)
                 ___lwdiv
                 ___xxtofl
                   ___lwdiv (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
               ___flsub (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _roundf (ARG)
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lwdiv (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                     _dameDistancia (ARG)
                       ___lwdiv
                       ___xxtofl
                         ___lwdiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lwdiv (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                   _dameDistancia (ARG)
                     ___lwdiv
                     ___xxtofl
                       ___lwdiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lwdiv (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _dameDistancia (ARG)
                   ___lwdiv
                   ___xxtofl
                     ___lwdiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _boton (ROOT)
   _antiRebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     3E8      21       48.9%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AE      20        0.0%
DATA                 0      0     696       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Sep 18 14:53:26 2020

                              ___fldiv@aexp 006C                                ___fldiv@bexp 006B  
                    __end_of_caminoCorrecto 5448                                ___fldiv@sign 0064  
                              ___awdiv@sign 000B                              ?_configurarAdc 0001  
                       ___wmul@multiplicand 0008                                 __CFG_BORV$3 000000  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
           comportamientoBasico@caminoFinal 02C8                                         l202 3DFC  
                                       l212 3EDC                                         l204 3E0A  
                                       l205 3E0C                                         l215 4E26  
                                       l224 5762                                         l160 528C  
                                       l233 5082                                         l241 53EC  
                                       l313 493C                                         l242 5400  
                                       l410 575A                                         l227 5770  
                                       l147 4D42                                         l155 343E  
                                       l403 23EE                                         l163 5298  
                                       l332 5446                                         l164 52D6  
                                       l236 578A                                         l413 56CC  
                                       l165 52A2                                         l422 570C  
                                       l406 5780                                         l166 52D8  
                                       l239 53DE                                         l191 3E5E  
                                       l183 3D9C                                         l416 56AA  
                                       l425 5726                                         l433 54CA  
                                       l193 3DCC                                         l185 3DAA  
                                       l329 5374                                         l186 3DAC  
                                       l442 4178                                         l450 4A92  
                                       l523 3912                                         l419 56EC  
                                       l195 3DDA                                         l612 1400  
                                       l428 5740                                         l196 3DDC  
                                       l444 41A2                                         l445 41AE  
                                       l437 40F8                                         l453 4AAE  
                                       l542 5614                                         l446 41F6  
                                       l454 4AD4                                         l543 5616  
                                       l455 4AE0                                         l456 4B26  
                                       l553 4CC8                                         l465 4A8C  
                                       l730 563C                                         l474 471E  
                                       l539 5328                                         l387 2398  
                                       l812 2BDE                                         l708 306C  
                                       l484 4C46                                         l733 5662  
                                       l565 12DC                                         l806 5138  
                                       l814 2BE6                                         l832 2E1A  
                                       l672 16FE                                         l664 15B6  
                                       l680 3C06                                         l681 3BF6  
                                       l850 0BCA                                         l739 4FC4  
                                       l659 16FC                                         l595 137C  
                                       l675 3BE6                                         l940 1172  
                                       l951 10B8                                         l687 3C16  
                                       l961 5688                                         l794 4764  
                                       l868 0402                                         l972 4E80  
                                       l797 47A6                                         l957 4EF2  
                                       l973 4E90                                         l894 079E  
                                       l958 4EFA                                         l799 47E0  
                              __CFG_CPB$OFF 000000                                         _PR2 000FCB  
                                       _PID 2E1C                                __CFG_CPD$OFF 000000  
                              __CFG_BOR$OFF 000000                                         _abs 54CC  
                                       _pad 4720                                         _map 4CCA  
                              ___awmod@sign 000B                                         wreg 000FE8  
                              ___flmul@aexp 0028                                ___flmul@bexp 002D  
                  _DISTANCIA_PRIORIDAD_BAJA 010C                    _DISTANCIA_PRIORIDAD_ALTA 0114  
                              ___flmul@sign 0027                                ___flmul@temp 0032  
                              ___flmul@prod 002E                 __size_of_limpiarMovimientos 0050  
                              __CFG_LVP$OFF 000000                                        ?_PID 0001  
                              ___fltol@exp1 007B                                __CFG_WDT$OFF 000000  
                                      l1040 3FE8                                        ?_abs 0018  
                                      l1220 49E6                                        l1205 4890  
                                      l1231 42FA                                        l1226 42B4  
                                      l1075 3A9A                                        l1235 557A  
                                      l1088 3D7A                                        l1192 465C  
                                      l1506 1A08                                        l1258 40F0  
                                      l1515 1AD8                                        l1531 53BA  
                                      l1516 1AC6                                        l1452 4DAE  
                                      l1630 358A                                        l1543 2B3C  
                                      l1711 5542                                        l1623 352E  
                                      l1616 3496                                        l1705 5288  
                                      l1545 299C                                        l1650 550A  
                                      l1554 29E2                                        l1490 18DC  
                                      l1642 43F8                                        l1491 18A2  
                                      l1619 35F2                                        l1459 4DB6  
                                      l1556 2A5A                                        l1548 2960  
                                      l1557 2A48                                        l1741 5236  
                                      l1726 4598                                        l1734 548A  
                                      l1582 1E7A                                        l1647 5502  
                                      l1575 1C84                                        l1744 5790  
                                      l1592 1FAA                                        l1584 1EF2  
                                      l1752 27A0                                        l1681 3782  
                                      l1585 1EE0                                        l1489 18EE  
                                      l1498 1BBE                                        l1690 31C6  
                                      l1771 55E8                                        l1579 1FE8  
                                      l1765 50DE                                        l1678 377A  
                                      l1790 5024                                        l1687 3282  
                                      l1775 44CE                                        l1697 55B2  
                                      l1785 501C                                        ?_map 0020  
                                      ?_pad 0016                                        l8101 3EE2  
                                      l8111 3F22                                        l8103 3EF0  
                                      l8121 3F60                                        l8113 3F26  
                                      l8105 3F00                                        l8201 1818  
                                      l9001 357A                                        l8131 3FA8  
                                      l8123 3F6E                                        l8115 3F36  
                                      l8107 3F04                                        l8211 182C  
                                      l8203 181C                                        l9011 35D2  
                                      l9003 3598                                        l8133 3FB2  
                                      l8125 3F78                                        l8117 3F4C  
                                      l8109 3F12                                        l9021 523C  
                                      l8061 451C                                        l8053 44D0  
                                      l9101 2D54                                        l8301 1A88  
                                      l8213 1830                                        l8205 1820  
                                      l8221 1840                                        l9013 35E0  
                                      l9005 359A                                        l8127 3F96  
                                      l8119 3F54                                        l8135 3FB8  
                                      l9023 5250                                        l8063 4552  
                                      l8055 44E2                                        l8071 5466  
                                      l9111 2DB6                                        l9103 2D6E  
                                      l8303 1A96                                        l8231 18B0  
                                      l8223 1844                                        l8215 1834  
                                      l8207 1824                                        l8151 172C  
                                      l8143 1700                                        l9015 35E2  
                                      l9007 359E                                        l9031 3284  
                                      l8137 3FC8                                        l8129 3FA6  
                                      l9025 527E                                        l8057 44F4  
                                      l8073 546A                                        l8081 55DC  
                                      l9113 2DBC                                        l9121 2DF2  
                                      l9105 2D88                                        l8313 1AE8  
                                      l8321 1B3E                                        l8305 1A9A  
                                      l8241 18DA                                        l8233 18BC  
                                      l8225 186E                                        l8217 1838  
                                      l8209 1828                                        l8161 1766  
                                      l8153 173C                                        l8145 170C  
                                      l8401 4FC6                                        l9201 02D0  
                                      l9009 35C2                                        l9033 32E4  
                                      l8139 3FD8                                        l9027 5282  
                                      l9019 5238                                        l8059 44FE  
                                      l8067 5448                                        l8075 55B4  
                                      l9051 50F4                                        l9115 2DCE  
                                      l9107 2D96                                        l8331 1B90  
                                      l8323 1B4E                                        l8315 1AF4  
                                      l8307 1AA8                                        l8251 1930  
                                      l8243 18FC                                        l8235 18C0  
                                      l8227 188A                                        l8219 183C  
                                      l8171 1794                                        l8163 176C  
                                      l8155 174C                                        l8147 171A  
                                      l8411 306E                                        l9211 03A8  
                                      l9203 032A                                        l9131 003A  
                                      l8091 4E38                                        l9043 3412  
                                      l9035 3304                                        l8069 5454  
                                      l8077 55C0                                        l9053 5100  
                                      l8501 3C4E                                        l9117 2DDA  
                                      l9109 2DA8                                        l8341 1BAE  
                                      l8333 1B96                                        l8325 1B5E  
                                      l8317 1B02                                        l8309 1ABE  
                                      l8261 196A                                        l8253 193E  
                                      l8245 190C                                        l8237 18CE  
                                      l8229 189A                                        l8181 17C8  
                                      l8173 1796                                        l8165 177E  
                                      l8157 174E                                        l8149 171C  
                                      l8413 308E                                        l8085 550C  
                                      l8405 4FFC                                        l9301 082C  
                                      l9221 03F4                                        l9213 03AC  
                                      l9205 035E                                        l9141 008A  
                                      l9133 0042                                        l9125 0012  
                                      l8093 4E46                                        l9037 338A  
                                      l8079 55C4                                        l8351 472E  
                                      l9055 510C                                        l8511 3CB6  
                                      l8503 3C5C                                        l9119 2DE2  
                                      l9071 2BB6                                        l9063 2B3E  
                                      l8335 1B98                                        l8327 1B7E  
                                      l8319 1B3C                                        l8271 19D6  
                                      l8263 196C                                        l8255 194C  
                                      l8239 18D0                                        l8191 1804  
                                      l8175 17A6                                        l8183 17D0  
                                      l8167 1780                                        l8159 1756  
                                      l8431 323A                                        l8423 317A  
                                      l8415 30E6                                        l8407 500E  
                                      l9311 087C                                        l9303 0840  
                                      l9231 0436                                        l9215 03BE  
                                      l9223 040E                                        l9207 0366  
                                      l9151 00C2                                        l9143 0098  
                                      l9135 0066                                        l9127 001C  
                                      l8095 4E56                                        l9039 33CE  
                                      l8361 4784                                        l8353 4742  
                                      l9057 5110                                        l9049 50E0  
                                      l8513 3CC4                                        l8521 3D2A  
                                      l8505 3C7C                                        l9081 2C0E  
                                      l9073 2BB8                                        l9065 2B5E  
                                      l8601 2950                                        l8337 1B9E  
                                      l8329 1B82                                        l8281 1A2E  
                                      l8273 19D8                                        l8265 1976  
                                      l8257 1958                                        l8249 1920  
                                      l8193 1808                                        l8185 17E0  
                                      l8177 17B6                                        l8169 1786  
                                      l8433 3262                                        l8425 31B6  
                                      l8417 30FA                                        l9401 0B34  
                                      l9321 08B0                                        l9313 088A  
                                      l9305 0852                                        l9241 049C  
                                      l9233 0452                                        l9217 03D2  
                                      l9209 0398                                        l9161 0128  
                                      l9153 00C6                                        l9145 00AA  
                                      l9137 0070                                        l9129 002C  
                                      l8097 4E60                                        l8089 4E28  
                                      l8345 4CCA                                        l8099 3EDE  
                                      l8443 5664                                        l8363 4788  
                                      l8355 4750                                        l9059 5114  
                                      l8451 3918                                        l8523 3D3A  
                                      l8515 3CF2                                        l8507 3C9A  
                                      l8371 54CC                                        l9091 2CAC  
                                      l9083 2C14                                        l9075 2BD2  
                                      l9067 2B86                                        l8611 299A  
                                      l8603 295E                                        l8531 27B0  
                                      l8339 1BAC                                        l8291 1A5C  
                                      l8275 19E8                                        l8259 195C  
                                      l8267 197C                                        l8195 180C  
                                      l8187 17F2                                        l8179 17C6  
                                      l8435 3272                                        l8419 3108  
                                      l8427 31EA                                        l9411 0B8C  
                                      l9403 0B3A                                        l9331 08E2  
                                      l9323 08C0                                        l9315 089A  
                                      l9307 0860                                        l9251 04E4  
                                      l9243 04AE                                        l9235 0488  
                                      l9219 03DA                                        l9163 013A  
                                      l9147 00B6                                        l9155 00CC  
                                      l9139 0078                                        l8445 5680  
                                      l8365 47B4                                        l8357 475C  
                                      l8349 4720                                        l8461 3978  
                                      l8453 3926                                        l8525 3D5A  
                                      l8517 3D12                                        l8509 3CA2  
                                      l8373 54E6                                        l9093 2CB2  
                                      l9085 2C1C                                        l9077 2BEE  
                                      l9069 2BA6                                        l8621 29E0  
                                      l8613 29AC                                        l8605 296A  
                                      l8541 27F0                                        l8533 27BE  
                                      l8701 1C94                                        l8293 1A6A  
                                      l8285 1A42                                        l8269 19A2  
                                      l8277 19F8                                        l8197 1810  
                                      l8189 1800                                        l8381 4382  
                                      l8429 3226                                        l9413 0B94  
                                      l9341 098A                                        l9333 08F4  
                                      l9325 08C4                                        l9317 089E  
                                      l9309 0868                                        l9261 052C  
                                      l9253 04F2                                        l9245 04C0  
                                      l9237 0490                                        l9229 0422  
                                      l9181 020E                                        l9165 0156  
                                      l9157 00F2                                        l9173 01A0  
                                      l9149 00BE                                        l9501 56EE  
                                      l8439 557C                                        l9431 362C  
                                      l9423 35F4                                        l8367 47C8  
                                      l8359 4770                                        l8471 39C2  
                                      l8463 397C                                        l8455 3946  
                                      l8519 3D24                                        l9095 2CB8  
                                      l9087 2C24                                        l9079 2C00  
                                      l8631 2A40                                        l8615 29C2  
                                      l8623 29F2                                        l8607 2988  
                                      l8551 2816                                        l8543 27F2  
                                      l8535 27C0                                        l8711 1CCE  
                                      l8703 1CA4                                        l8295 1A72  
                                      l8287 1A4C                                        l8279 1A1E  
                                      l8199 1814                                        l8383 438E  
                                      l8375 42FC                                        l9415 0BA4  
                                      l9407 0B6E                                        l9351 09E2  
                                      l9343 0992                                        l9335 08F8  
                                      l9327 08CA                                        l9319 08A4  
                                      l9271 0640                                        l9263 053C  
                                      l9255 050A                                        l9247 04CE  
                                      l9239 0494                                        l9183 022A  
                                      l9175 01C6                                        l9191 0246  
                                      l9167 016E                                        l9511 0C10  
                                      l9503 56F6                                        l9441 3682  
                                      l9433 3662                                        l9425 3608  
                                      l8481 3A32                                        l8473 39D0  
                                      l8465 3988                                        l8457 394A  
                                      l8449 3914                                        l9089 2C2A  
                                      l9097 2D1C                                        l8641 2AAE  
                                      l8625 2A00                                        l8617 29C8  
                                      l8609 298A                                        l8561 2856  
                                      l8553 2824                                        l8537 27D0  
                                      l8545 27FA                                        l8529 27A2  
                                      l8721 1D20                                        l8713 1CE4  
                                      l8297 1A76                                        l8289 1A5A  
                                      l8393 43F0                                        l8377 431C  
                                      l9417 0BAA                                        l9409 0B80  
                                      l9361 0A26                                        l9353 09F0  
                                      l9329 08D0                                        l9337 08FE  
                                      l9345 0996                                        l9281 06E0  
                                      l9265 0550                                        l9273 0646  
                                      l9257 051C                                        l9249 04D2  
                                      l9193 0260                                        l9169 0178  
                                      l9601 112E                                        l9521 0C72  
                                      l9513 0C14                                        l9505 0BCC  
                                      l9451 36FC                                        l9443 368A  
                                      l9435 3666                                        l9427 360C  
                                      l8483 3A44                                        l8475 39E2  
                                      l8467 39A6                                        l8459 3958  
                                      l9099 2D36                                        l8811 45B8  
                                      l8803 459A                                        l8651 2B18  
                                      l8635 2A6A                                        l8643 2AB2  
                                      l8627 2A04                                        l8619 29D2  
                                      l8571 2896                                        l8563 2858  
                                      l8555 2826                                        l8547 280A  
                                      l8539 27E0                                        l8731 1D66  
                                      l8723 1D2E                                        l8715 1CF0  
                                      l8707 1CB8                                        l8299 1A86  
                                      l8379 435A                                        l8387 439A  
                                      l9371 0A5C                                        l9363 0A2E  
                                      l9355 0A00                                        l9347 09B4  
                                      l9339 0956                                        l9291 0776  
                                      l9283 0712                                        l9275 0664  
                                      l9267 05B4                                        l9259 0524  
                                      l9179 01FC                                        l9531 0D22  
                                      l9523 0CAC                                        l9515 0C38  
                                      l9507 0BF0                                        l8901 4226  
                                      l9613 5026                                        l9621 53BE  
                                      l9445 3692                                        l9429 3610  
                                      l8477 3A10                                        l8469 39AE  
                                      l8485 3A4A                                        l8493 3C18  
                                      l8821 45EC                                        l8813 45C6  
                                      l8805 459E                                        l8653 2B1C  
                                      l8645 2ACC                                        l8637 2A76  
                                      l8629 2A12                                        l8581 28C6  
                                      l8573 289E                                        l8557 2836  
                                      l8565 2860                                        l8549 2810  
                                      l8741 1DD4                                        l8733 1D80  
                                      l8725 1D3A                                        l8717 1D08  
                                      l8709 1CC4                                        l8389 43AC  
                                      l8397 5084                                        l9381 0AB8  
                                      l9373 0A64                                        l9365 0A3E  
                                      l9357 0A04                                        l9349 09D0  
                                      l9293 078A                                        l9285 0722  
                                      l9277 0698                                        l9269 060C  
                                      l9197 0296                                        l9541 0DA8  
                                      l9525 0CCC                                        l9517 0C40  
                                      l9533 0D34                                        l9509 0BFE  
                                      l9605 113C                                        l9701 4EA8  
                                      l8911 4294                                        l8903 4236  
                                      l9615 502A                                        l9631 53EE  
                                      l9623 53C6                                        l9455 373A  
                                      l9447 36C6                                        l9439 366C  
                                      l8487 3A5A                                        l8479 3A30  
                                      l8495 3C1C                                        l8831 4626  
                                      l8823 45F4                                        l8815 45CE  
                                      l8807 45AC                                        l8655 2B2A  
                                      l8647 2AE2                                        l8639 2A84  
                                      l8591 2904                                        l8583 28C6  
                                      l8575 28A2                                        l8567 2870  
                                      l8559 2846                                        l8751 1E6A  
                                      l8743 1DFE                                        l8735 1D90  
                                      l8727 1D4A                                        l8719 1D14  
                                      l8671 1BDA                                        l8399 5094  
                                      l9391 0AF8                                        l9383 0AC0  
                                      l9375 0A70                                        l9367 0A46  
                                      l9359 0A14                                        l9295 0796  
                                      l9287 0732                                        l9279 06CA  
                                      l9199 02CA                                        l9471 4430  
                                      l9607 1160                                        l9551 0E4C  
                                      l9543 0DDA                                        l9535 0D56  
                                      l9527 0CDA                                        l9519 0C4E  
                                      l9703 4ED6                                        l9711 4D66  
                                      l9801 4FAE                                        l8913 42A2  
                                      l8905 4264                                        l9617 504E  
                                      l9625 53C8                                        l9457 374C  
                                      l8489 3A7A                                        l8497 3C2A  
                                      l8841 464C                                        l8833 462E  
                                      l8825 45FC                                        l8817 45D2  
                                      l8809 45B4                                        l8657 2B30  
                                      l8649 2AFC                                        l8593 2914  
                                      l8569 2886                                        l8761 1EAA  
                                      l8753 1E78                                        l8745 1E34  
                                      l8737 1DAC                                        l8729 1D56  
                                      l8681 1C12                                        l8673 1BDC  
                                      l8921 5544                                        l9393 0B0A  
                                      l9377 0A76                                        l9385 0AC6  
                                      l9369 0A54                                        l9297 07BA  
                                      l9289 0766                                        l9481 44AC  
                                      l9473 443E                                        l9465 43FA  
                                      l9561 0F14                                        l9553 0E70  
                                      l9545 0DFE                                        l9537 0D66  
                                      l9641 5712                                        l9721 4DA0  
                                      l9713 4D6E                                        l9705 4D44  
                                      l9811 5318                                        l9803 52DA  
                                      l8915 42F2                                        l8907 4274  
                                      l9619 5052                                        l9627 53DA  
                                      l9459 375E                                        l8499 3C4A  
                                      l8843 4654                                        l8835 4630  
                                      l8827 460A                                        l8819 45DA  
                                      l8851 47F4                                        l8659 2B32  
                                      l8595 2924                                        l8587 28DA  
                                      l8579 28B6                                        l8771 1F1C  
                                      l8763 1ED8                                        l8755 1E8A  
                                      l8747 1E42                                        l8739 1DB8  
                                      l8691 1C3E                                        l8683 1C22  
                                      l8675 1BEC                                        l8667 1BC0  
                                      l8923 555A                                        l8931 4002  
                                      l9395 0B16                                        l9387 0AD8  
                                      l9379 0A9C                                        l9299 081E  
                                      l9475 4456                                        l9467 4424  
                                      l9563 0F26                                        l9555 0E94  
                                      l9547 0E30                                        l9539 0D98  
                                      l9491 574A                                        l9651 5728  
                                      l9643 5716                                        l9723 4DA2  
                                      l9715 4D7C                                        l9707 4D4C  
                                      l9731 3D90                                        l9635 568A  
                                      l9805 52E6                                        l8917 42F8  
                                      l8909 4282                                        l9485 575E  
                                      l9629 53DC                                        l8837 4636  
                                      l8829 4610                                        l8861 4828  
                                      l8853 47FC                                        l8597 292C  
                                      l8589 28F4                                        l8781 1F92  
                                      l8773 1F46                                        l8757 1E98  
                                      l8749 1E60                                        l8693 1C4E  
                                      l8685 1C28                                        l8677 1BFC  
                                      l8669 1BCC                                        l8925 556A  
                                      l8941 4052                                        l9397 0B1E  
                                      l9389 0AF2                                        l9477 4472  
                                      l9581 1054                                        l9565 0F3C  
                                      l9573 0FA6                                        l9557 0EDC  
                                      l9813 563E                                        l9493 56AC  
                                      l9661 573C                                        l9653 572C  
                                      l9645 571A                                        l9725 4DA8  
                                      l9717 4D82                                        l9709 4D5E  
                                      l9733 3D96                                        l9637 5692  
                                      l9821 2F28                                        l9807 52F6  
                                      l8839 463C                                        l8871 4864  
                                      l8863 4830                                        l8855 4800  
                                      l8847 47E2                                        l8599 293C  
                                      l8783 1FAE                                        l8791 1FD4  
                                      l8767 1F02                                        l8775 1F4A  
                                      l8759 1E9C                                        l8695 1C5E  
                                      l8687 1C2E                                        l8679 1C0C  
                                      l8951 407C                                        l8943 4056  
                                      l8935 4016                                        l9399 0B2E  
                                      l9479 4484                                        l9591 10F0  
                                      l9583 1088                                        l9575 0FD4  
                                      l9567 0F4A                                        l9495 56B4  
                                      l9487 5618                                        l9655 5730  
                                      l9647 571E                                        l9639 570E  
                                      l9719 4D98                                        l9751 3EBA  
                                      l9735 3DBA                                        l9743 3E2C  
                                      l9727 3D7E                                        l9671 24AA  
                                      l9663 23F0                                        l9831 2FC2  
                                      l9823 2F58                                        l9815 2E1C  
                                      l9809 52FA                                        l9921 38DE  
                                      l9913 389A                                        l8873 486A  
                                      l8865 4838                                        l8857 480E  
                                      l8849 47E6                                        l8793 1FD8  
                                      l8785 1FBE                                        l8777 1F64  
                                      l8769 1F0E                                        l8697 1C6E  
                                      l8689 1C3C                                        l8961 40A4  
                                      l8953 4086                                        l8945 4064  
                                      l8937 4040                                        l8929 3FEA  
                                      l9593 10FE                                        l9569 0F7A  
                                      l9761 51E6                                        l9489 5742  
                                      l9657 5734                                        l9497 56CE  
                                      l9649 5722                                        l9753 3ECC  
                                      l9745 3E6E                                        l9737 3DEA  
                                      l9729 3D8E                                        l9681 25F2  
                                      l9673 24CE                                        l9665 2410  
                                      l9841 301E                                        l9833 2FCA  
                                      l9825 2F60                                        l9817 2E26  
                                      l9923 38EE                                        l9915 38AA  
                                      l8867 4846                                        l8875 4870  
                                      l8859 4816                                        l8891 49BA  
                                      l8883 493E                                        l8787 1FCC  
                                      l8779 1F78                                        l8699 1C74  
                                      l8963 40B0                                        l8955 4090  
                                      l8939 4042                                        l9595 1112  
                                      l9579 1042                                        l9763 51F8  
                                      l9659 5738                                        l9499 56D6  
                                      l9747 3E80                                        l9739 3E1A  
                                      l9691 276C                                        l9683 265E  
                                      l9675 24EC                                        l9667 245A  
                                      l9851 305A                                        l9843 302E  
                                      l9827 2F82                                        l9835 2FD6  
                                      l9819 2E66                                        l9917 38BE  
                                      l9861 37A6                                        l8877 4880  
                                      l8869 485C                                        l8893 49DE  
                                      l8885 496C                                        l8789 1FCE  
                                      l8797 5376                                        l8965 40C0  
                                      l9589 10CC                                        l9765 5200  
                                      l8981 34BC                                        l8973 3442  
                                      l9853 548C                                        l9749 3EBA  
                                      l9693 2790                                        l9685 2690  
                                      l9669 246E                                        l9845 3036  
                                      l9837 2FDE                                        l9829 2FAE  
                                      l9773 4A8E                                        l9919 38CE  
                                      l9871 3818                                        l9863 37D8  
                                      l9951 55EE                                        l8879 4888  
                                      l8895 49E4                                        l8887 497C  
                                      l8799 5386                                        l8967 40D0  
                                      l9599 1120                                        l9767 5208  
                                      l8991 3516                                        l8975 3452  
                                      l9855 54BE                                        l9687 26FC  
                                      l9679 2524                                        l9839 2FF6  
                                      l9847 3042                                        l9775 4A9A  
                                      STR_1 7F63                                        STR_2 7F4A  
                                      l9793 4F64                                        l9945 3910  
                                      l9873 381A                                        l9865 37DE  
                                      l9937 38FA                                        l9961 4C5E  
                                      l9953 5610                                        l8889 49AA  
                                      l8969 40E0                                        l9697 4E92  
                                      l9769 5224                                        l8993 3518  
                                      l8985 34D0                                        l8977 3460  
                                      l9857 54C6                                        l9689 2730  
                                      l9849 304A                                        l9777 4AB6  
                                      STR_3 7E66                                        STR_4 7FA5  
                                      l9795 4F70                                        l8899 41F8  
                                      l9939 390A                                        l9891 3876  
                                      l9875 384C                                        l9867 37E0  
                                      l9859 3784                                        l9963 4C6E  
                                      l9699 4E9A                                        l8995 3524  
                                      l8987 34D8                                        l8979 34A6  
                                      l9779 4ACC                                        l9787 4AEC  
                                      STR_5 7F92                                        STR_6 7FB7  
                                      l9797 4F9C                                        l9893 388A  
                                      l9877 3852                                        l9869 3812  
                                      l9965 4C7E                                        l9957 4C4A  
                                      l9949 55EA                                        l8997 3560  
                                      l8989 34E4                                        l9981 3BD6  
                                      STR_7 7FD3                                        STR_8 7FC8  
                                      l9799 4FAA                                        l9991 5402  
                                      l9879 3854                                        l9959 4C4E  
                                      l8999 356C                                        l9975 3A9C  
                                      STR_9 7FDD                                        l9993 540E  
                                      l9889 3864                                        l9969 4C8E  
                                      l9977 3BB6                                        l9995 5432  
                                      l9979 3BC6                                        l9997 40F4  
                                      l9999 4100                                        u8020 44E2  
                                      u8100 4E46                                        _RCIF 007CF5  
                                      u8021 44DE                                        u8101 4E42  
                                      u8030 44F4                                        u8110 4E80  
                                      u8031 44F0                                        u8111 4E7C  
                                      u8120 3EF0                                        u8040 451C  
                                      u9000 27D0                                        u8200 173C  
                                      u8121 3EEC                                        u8041 4518  
                                      u9001 27CC                                        u8201 1738  
                                      u8130 3F12                                        u8050 4552  
                                      u9010 27E0                                        u8210 177E  
                                      u8131 3F0E                                        u8051 454E  
                                      u9011 27DC                                        u8211 177A  
                                      u8140 3F4C                                        u8060 548A  
                                      u9100 29AC                                        u9020 2824  
                                      u8300 18B0                                        u8220 1794  
                                      u8141 3F48                                        u8061 5486  
                                      u9101 29A8                                        u9021 2820  
                                      u8301 18AC                                        u8221 1790  
                                      u8150 3F6E                                        u8070 55DC  
                                      u9110 29C2                                        u9030 2836  
                                      u8310 18CE                                        u8230 17A6  
                                      u8151 3F6A                                        u8071 55D8  
                                      u9111 29BE                                        u9031 2832  
                                      u8311 18CA                                        u8231 17A2  
                                      u8160 3F96                                        u9200 2AFC  
                                      u9120 29E0                                        u9040 2846  
                                      u8400 1A1E                                        u8320 18EE  
                                      u8240 17B6                                        u8080 553C  
                                      u8161 3F92                                        u9201 2AF8  
                                      u9121 29DC                                        u9041 2842  
                                      u8401 1A1A                                        u8321 18EA  
                                      u8241 17B2                                        u8081 5536  
                                      u8170 3FC8                                        u9210 2B2A  
                                      u9130 2A00                                        u9050 2886  
                                      u8410 1A2E                                        u8330 18FC  
                                      u8250 17F2                                        u8090 553E  
                                      u8171 3FC4                                        u9211 2B26  
                                      u9131 29FC                                        u9051 2882  
                                      u8411 1A2A                                        u8331 18F8  
                                      u8251 17EE                                        u9140 2A12  
                                      u9060 28C6                                        u9300 1E1E  
                                      u9220 1BDA                                        u8500 1B02  
                                      u8420 1A5A                                        u8340 190C  
                                      u8260 1800                                        u8180 171A  
                                      u9141 2A0E                                        u9061 28C2  
                                      u9221 1BD6                                        u8501 1AFE  
                                      u8421 1A56                                        u8341 1908  
                                      u8261 17FC                                        u8181 1716  
                                      u9150 2A40                                        u9070 293C  
                                      u9310 1E78                                        u9230 1BEC  
                                      u8510 1B3C                                        u8430 1A6A  
                                      u8350 193E                                        u8270 186E  
                                      u8190 172C                                        u9151 2A3C  
                                      u9071 2938                                        u9311 1E74  
                                      u9231 1BE8                                        u8511 1B38  
                                      u8431 1A66                                        u8351 193A  
                                      u8271 186A                                        u8191 1728  
                                      u8600 47B4                                        u9160 2A56  
                                      u9080 295E                                        u9400 1FCC  
                                      u9320 1E98                                        u9240 1BFC  
                                      u8520 1B4E                                        u8440 1A86  
                                      u8360 194C                                        u8280 1886  
                                      u8601 47B0                                        u9161 2A52  
                                      u9081 295A                                        u9401 1FC8  
                                      u9321 1E94                                        u9305 1E14  
                                      u9241 1BF8                                        u8521 1B4A  
                                      u8441 1A82                                        u8361 1948  
                                      u8281 1880                                        u8610 54E6  
                                      u9410 45AC                                        u9170 2A6A  
                                      u9090 2988                                        u9330 1EAA  
                                      u9250 1C3C                                        u8530 1B5E  
                                      u8450 1A96                                        u8370 196A  
                                      u8290 1888                                        u8611 54E2  
                                      u9411 45A8                                        u9171 2A66  
                                      u9091 2984                                        u9331 1EA6  
                                      u9251 1C38                                        u8531 1B5A  
                                      u8451 1A92                                        u8371 1966  
                                      u9420 45C6                                        u9500 4846  
                                      u9180 2A84                                        u9340 1ED8  
                                      u9260 1C4E                                        u8540 1B7E  
                                      u8460 1AA8                                        u8380 19A2  
                                      u8620 433C                                        u8700 50DE  
                                      u9421 45C2                                        u9501 4842  
                                      u9181 2A80                                        u9341 1ED4  
                                      u9261 1C4A                                        u8541 1B7A  
                                      u8461 1AA4                                        u8381 199E  
                                      u8701 50DA                                        u9430 45EC  
                                      u9510 485C                                        u9190 2ACC  
                                      u9350 1EEE                                        u9270 1C5E  
                                      u8550 1B90                                        u8470 1ABE  
                                      u8390 19E8                                        u8630 435A  
                                      u8710 4FF6                                        u9431 45E8  
                                      u9511 4858                                        u9191 2AC8  
                                      u9351 1EEA                                        u9271 1C5A  
                                      u8551 1B8C                                        u8471 1ABA  
                                      u8391 19E4                                        u8631 4356  
                                      u8711 4FF0                                        u9600 42F2  
                                      u9440 460A                                        u9520 4880  
                                      u9360 1F02                                        u9280 1C94  
                                      u8560 1BAC                                        u8480 1AD4  
                                      u8640 4382                                        u8800 31B6  
                                      u8720 4FF8                                        u9601 42EE  
                                      u9441 4606                                        u9521 487C  
                                      u9361 1EFE                                        u9281 1C90  
                                      u8561 1BA8                                        u8481 1AD0  
                                      u8641 437E                                        u8625 4332  
                                      u8801 31B2                                        u8570 472E  
                                      u9450 4626                                        u9530 496C  
                                      u9370 1F1C                                        u9290 1CA4  
                                      u9610 555A                                        u8490 1AE8  
                                      u8650 43AC                                        u8810 320A  
                                      u8730 500E                                        u8571 472A  
                                      u9451 4622                                        u9531 4968  
                                      u9371 1F18                                        u9291 1CA0  
                                      u9611 5556                                        u8491 1AE4  
                                      u8651 43A8                                        u8731 500A  
                                      u8580 4750                                        u8900 39D0  
                                      u9460 464C                                        u9540 49AA  
                                      u9380 1F64                                        u9620 4002  
                                      u8820 3226                                        u8740 30B8  
                                      u9700 3460                                        u8581 474C  
                                      u8901 39CC                                        u9461 4648  
                                      u9541 49A6                                        u9381 1F60  
                                      u9621 3FFE                                        u8821 3222  
                                      u9701 345C                                        u8590 47A6  
                                      u8910 3A10                                        u9470 47F4  
                                      u9550 49DE                                        u9390 1F92  
                                      u9630 4036                                        u8670 43E6  
                                      u8830 3262                                        u8750 30E6  
                                      u9710 34BC                                        u8591 47A2  
                                      u8911 3A0C                                        u9471 47F0  
                                      u9551 49DA                                        u9391 1F8E  
                                      u8671 43E0                                        u8831 325E  
                                      u8815 3200                                        u8751 30E2  
                                      u9711 34B8                                        u9560 4226  
                                      u8840 55AC                                        u9800 527E  
                                      u8920 3A5A                                        u9480 480E  
                                      u9640 4064                                        u8680 43E8  
                                      u8760 3108                                        u9720 3512  
                                      u9561 4222                                        u8841 55A6  
                                      u9801 527A                                        u8921 3A56  
                                      u9481 480A                                        u9641 4060  
                                      u8665 43BE                                        u8761 3104  
                                      u8745 30AE                                        u9721 350E  
                                      u9570 4264                                        u8850 55AE  
                                      u8930 3C2A                                        u9490 4828  
                                      u9650 4078                                        u8690 50CC  
                                      u9730 355C                                        u9810 3304  
                                      u9571 4260                                        u8931 3C26  
                                      u9491 4824                                        u9651 4074  
                                      u9635 402C                                        u9731 3558  
                                      u9811 3300                                        u9580 4282  
                                      u8860 3926                                        u8940 3C5C  
                                      u9900 2C00                                        u9660 40A0  
                                      u8780 3176                                        u9740 357A  
                                      u9581 427E                                        u8861 3922  
                                      u8941 3C58                                        u9901 2BFC  
                                      u9661 409C                                        u8781 3172  
                                      u9741 3576                                        u9590 42A2  
                                      u8870 3958                                        u8950 3C9A  
                                      u9910 2C0E                                        u9670 40C0  
                                      u8790 319A                                        u9750 358A  
                                      u9591 429E                                        u8871 3954  
                                      u8951 3C96                                        u9911 2C0A  
                                      u9671 40BC                                        u8775 311C  
                                      u9751 3586                                        u9840 50F4  
                                      u8960 3CC4                                        u9920 2D36  
                                      u9680 40D0                                        u8776 3126  
                                      u9760 3598                                        u9841 50F0  
                                      u8881 3982                                        u8961 3CC0  
                                      u9921 2D32                                        u9681 40CC  
                                      u8777 3136                                        u8697 50C2  
                                      u9761 3594                                        u9825 339E  
                                      u8890 39A6                                        u8970 3CF2  
                                      u9930 2D54                                        u9850 2B6E  
                                      u9770 35D2                                        u9690 3452  
                                      u9826 33A8                                        u8891 39A2  
                                      u8971 3CEE                                        u9931 2D50  
                                      u9851 2B68                                        u8795 3190  
                                      u9771 35CE                                        u9691 344E  
                                      u9835 33E2                                        u9827 33B8  
                                      u8980 3D3A                                        u9940 2D6E  
                                      u9860 2B70                                        u9780 35E0  
                                      u9836 33EC                                        u8981 3D36  
                                      u9941 2D6A                                        u9781 35DC  
                                      u9837 33FC                                        u9790 5250  
                                      u9950 2D88                                        u9870 2B86  
                                      u8990 27BE                                        u9791 524C  
                                      u9951 2D84                                        u9871 2B82  
                                      u8991 27BA                                        u9960 2D96  
                                      u9880 2BB6                                        u9961 2D92  
                                      u9881 2BB2                                        u9970 2DA8  
                                      u9890 2BD2                                        u9971 2DA4  
                                      u9891 2BCE                                        u9980 2DB6  
                                      u9981 2DB2                                        u9990 2DCE  
                                      u9991 2DCA        comportamientoBasico@caminoEncontrado 0138  
                          ??_forzarParoAuto 0006                                        abs@a 0018  
                                      _dbuf 0141                                        _atoi 35F4  
                                      _ctoa 50E0                                        _main 4B28  
                                      _dtoa 2B3E                                        _prec 0134  
                                      _nout 0130                                        pad@i 001D  
                                      pad@p 001A                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr2h 000FDA                                        fsr0l 000FE9  
                                      indf1 000FE7                                        indf2 000FDF  
                                      fsr1l 000FE1                                        pad@w 001F  
                                      map@x 0020                                        fsr2l 000FD9  
                                      btemp 005A                               ___fpclassifyf 42FC  
                  __end_of_decidirDireccion 1700                                        prodh 000FF4  
                                      prodl 000FF3                                        start 000E  
                             __CFG_IESO$OFF 000000                             ___fldiv@new_exp 0065  
                              _tolower$1573 0012                               __CFG_MCLRE$ON 000000  
                             ?_leerSensores 0001                                ___param_bank 000000  
                                     ??_PID 0088                             ?_caminoCorrecto 0012  
                                     ??_abs 001A                                       ??_map 0034  
                                     ??_pad 001C                             ??_velocidadBaja 0054  
                             __CFG_PLLDIV$1 000000                              __CFG_CCP2MX$ON 000000  
                                     l10001 4118                                       l10011 4168  
                                     l10003 4124                                       l10013 4180  
                                     l10005 413E                                       l10031 1174  
                                     l10015 419A                                       l10007 4154  
                                     l10023 41BA                                       l10041 11D0  
                                     l10033 117C                                       l10009 4164  
                                     l10051 1232                                       l10043 11E0  
                                     l10035 1194                                       l10301 15DE  
                                     l10141 139A                                       l10053 1246  
                                     l10045 11E8                                       l10037 11AC  
                                     l10311 16B6                                       l10303 163A  
                                     l10143 13BA                                       l10071 130E  
                                     l10047 1202                                       l10039 11C4  
                                     l10313 16BE                                       l10305 164A  
                                     l10241 1498                                       l10161 13EC  
                                     l10145 13C6                                       l10081 1360  
                                     l10073 1316                                       l10057 126A  
                                     l10049 1212                                       l10065 12A2  
                                     l10401 4C14                                       l10315 16F0  
                                     l10307 167C                                       l10227 1456  
                                     l10163 13F8                                       l10139 1380  
                                     l10083 136C                                       l10075 1336  
                                     l10059 127E                                       l10067 12DC  
                                     l10403 4C26                                       l10317 16F8  
                                     l10309 1684                                       l10229 1476  
                                     l10181 1404                                       l10077 133E  
                                     l10069 12F4                                       l10405 4C2A  
                                     l10341 46AE                                       l10333 465E  
                                     l10501 2078                                       l10431 4DBC  
                                     l10271 14A8                                       l10183 1424  
                                     l10159 13CE                                       l10079 135C  
                                     l10407 4C30                                       l10351 46E4  
                                     l10343 46B6                                       l10511 20C0  
                                     l10503 2082                                       l10415 5290  
                                     l10441 4E1E                                       l10433 4DF0  
                                     l10425 4DB8                                       l10281 1520  
                                     l10273 14CC                                       l10185 1442  
                                     l10345 46D4                                       l10353 46F6  
                                     l10337 468C                                       l11161 2372  
                                     l10521 212A                                       l10505 2092  
                                     l10409 528C                                       l10443 4E20  
                                     l10435 4E18                                       l10427 4DB8  
                                     l10291 1576                                       l10283 152C  
                                     l11171 14F2                                       l10187 144E  
                                     l11163 4B00                                       l10355 46FA  
                                     l10347 46D8                                       l10339 46AA  
                                     l10371 4A50                                       l10363 4A08  
                                     l10603 232C                                       l10531 215E  
                                     l10523 213A                                       l10507 20A8  
                                     l10419 52AC                                       l11155 48EC  
                                     l10451 4892                                       l10445 4E22  
                                     l10437 4E1A                                       l10429 4DBA  
                                     l11173 3428                                       l10293 157A  
                                     l10277 14D4                                       l10285 1536  
                                     l11165 41D0                                       l10357 4702  
                                     l10349 46E0                                       l10381 4A76  
                                     l10373 4A54                                       l10365 4A26  
                                     l10621 23D4                                       l10605 233E  
                                     l10533 2162                                       l10525 214A  
                                     l10613 235C                                       l10509 20B8  
                                     l10517 20D0                                       l11157 52C0  
                                     l10453 4896                                       l10447 4E24  
                                     l10439 4E1C                                       l11175 36B0  
                                     l10295 1592                                       l10287 1546  
                                     l10279 1510                                       l11167 3E40  
                                     l10391 4BBE                                       l10383 4A7E  
                                     l10375 4A5C                                       l10367 4A2A  
                                     l10359 49E8                                       l10623 23EA  
                                     l10607 2350                                       l10551 21EC  
                                     l11159 2196                                       l10543 217E  
                                     l10535 216A                                       l10527 2152  
                                     l10519 20D4                                       l10615 23A0  
                                     l10455 48A6                                       l10463 48D6  
                                     l11177 4CA2                                       l10297 15AA  
                                     l10289 154E                                       l11169 12BE  
                                     l10385 5772                                       l10393 4BCC  
                                     l10377 4A60                                       l10369 4A32  
                                     l10617 23B6                                       l10609 2354  
                                     l10553 2202                                       l10545 21C4  
                                     l10537 216E                                       l10529 2156  
                                     l10449 5782                                       l10481 5370  
                                     l10473 532A                                       l10457 48B6  
                                     l10465 4912                                       l10801 4B42  
                                     l10299 15DA                                       l10387 5776  
                                     l10395 4BEA                                       l10379 4A72  
                                     l10619 23D0                                       l10555 2216  
                                     l10547 21D4                                       l10563 2226  
                                     l10539 2176                                       l10491 203A  
                                     l10483 1FEA                                       l10475 532E  
                                     l10467 4930                                       l10459 48C6  
                                     l10811 4B4C                                       l10803 4B44  
                                     l10389 577A                                       l10397 4C08  
                                     l10581 228C                                       l10565 2236  
                                     l10557 221C                                       l10549 21E4  
                                     l10493 2050                                       l10485 1FFC  
                                     l10477 5344                                       l10821 4B5E  
                                     l10813 4B4E                                       l10805 4B46  
                                     l10399 4C10                                       l10591 22C4  
                                     l10583 22A0                                       l10575 2266  
                                     l10567 2246                                       l10559 2220  
                                     l10495 2060                                       l10487 2016  
                                     l10479 535A                                       l10831 4B9E  
                                     l10823 4B64                                       l10815 4B50  
                                     l10807 4B48                                       l10593 22D4  
                                     l10585 22A6                                       l10577 2278  
                                     l10569 2258                                       l10497 2068  
                                     l10489 2028                                       l10841 4BAA  
                                     l10833 4BA2                                       l10825 4B68  
                                     l10817 4B52                                       l10809 4B4A  
                                     l10595 22FC                                       l10587 22AC  
                                     l10579 2288                                       l10499 2074  
                                     l10843 4BB2                                       l10827 4B7C  
                                     l10819 4B58                                       l10597 2302  
                                     l10589 22B4                                       l10829 4B8E  
                                     l10781 4B2E                                       l10599 230E  
                                     l10839 4BA6                                       l10791 4B38  
                                     l10783 4B30                                       l10793 4B3A  
                                     l10785 4B32                                       l10795 4B3C  
                                     l10787 4B34                                       l10779 4B28  
                                     l10797 4B3E                                       l10789 4B36  
                                     l10799 4B40                               ___fltol@sign1 007A  
                           __end_of___aldiv 3FEA                             __end_of___aodiv 3A9C  
                                     ?_atoi 000D                                       ?_ctoa 0021  
                           __end_of___fladd 1BC0                                       ?_main 0001  
                                     ?_dtoa 0021                             __end_of___aomod 3D7C  
                           __end_of___fldiv 2B3E                             __end_of___awdiv 465E  
                           __end_of___flneg 557C                                       STR_10 7FE6  
                                     STR_11 7ECB                                       STR_20 7FEC  
                                     STR_12 7E2E                                       STR_21 7FF4  
                                     STR_13 7DEF                                       STR_30 7FFC  
                                     STR_14 7F7B                                       STR_15 7EEB  
                                     STR_24 7FF0                                       STR_16 7EAA  
                                     STR_25 7FF8                                       STR_17 7F2B  
                                     STR_18 7F0B                                       STR_19 7E88  
                                     STR_28 7FFC                             __end_of___awmod 4892  
                           __end_of___flmul 1FEA                             __end_of___flsub 53BC  
                           __end_of___fltol 40F2                                       u10000 003A  
                                     u10001 0036                                       u10010 008A  
                                     u10011 0086                                       u10100 01F8  
                                     u10020 0098                                       u10021 0094  
                                     u10110 020E                                       u10030 00AA  
                                     u10111 020A                                       u10031 00A6  
                                     u10200 0452                                       u10120 0292  
                                     u10040 00F2                                       u11000 3DBA  
                                     u10201 044E                                       u10121 028E  
                                     u10041 00EE                                       u11001 3DB6  
                                     u10210 0488                                       u10130 0326  
                                     u10050 0122                                       u11010 3DC8  
                                     u10211 0484                                       u10131 0322  
                                     u10051 011C                                       u11011 3DC4  
                                     u11100 5318                                       u10300 0712  
                                     u10220 04AE                                       u10140 0398  
                                     u10060 0124                                       u11020 3DDA  
                                     u11101 5314                                       u10301 070E  
                                     u10221 04AA                                       u10141 0394  
                                     u11021 3DD6                                       u10310 0722  
                                     u10230 04C0                                       u10150 03BE  
                                     u10070 013A                                       u11030 3DEA  
                                     u11110 2F82                                       u10311 071E  
                                     u10231 04BC                                       u10151 03BA  
                                     u10071 0136                                       u11031 3DE6  
                                     u11111 2F7E                                       u11200 3864  
                                     u10400 09B4                                       u10320 078A  
                                     u10240 04CE                                       u10160 03D2  
                                     u10080 01C6                                       u11040 3DF8  
                                     u11120 2FAE                                       u11201 3860  
                                     u10401 09B0                                       u10321 0786  
                                     u10241 04CA                                       u10161 03CE  
                                     u10081 01C2                                       u11041 3DF4  
                                     u11121 2FAA                                       u11210 3876  
                                     u10410 09D0                                       u10330 082C  
                                     u10250 04E4                                       u10170 03F4  
                                     u10090 01F6                                       u11050 3E0A  
                                     u11130 2FF6                                       u11211 3872  
                                     u10411 09CC                                       u10331 0828  
                                     u10251 04E0                                       u10171 03F0  
                                     u10091 01F0                                       u11051 3E06  
                                     u11131 2FF2                                       u11220 38AA  
                                     u10500 0B6A                                       u10420 09E2  
                                     u10340 0840                                       u10260 04F2  
                                     u10180 041E                                       u11300 11C4  
                                     u11060 3E1A                                       u11140 301E  
                                     u11221 38A6                                       u10421 09DE  
                                     u10341 083C                                       u10261 04EE  
                                     u10181 041A                                       u11301 11C0  
                                     u11061 3E16                                       u11141 301A  
                                     u11230 38DE                                       u10510 0B80  
                                     u10430 09F0                                       u10350 0852  
                                     u10270 051C                                       u10190 0436  
                                     u11310 11E0                                       u11150 54BE  
                                     u11070 3E28                                       u11231 38DA  
                                     u10511 0B7C                                       u10431 09EC  
                                     u10351 084E                                       u10271 0518  
                                     u10191 0432                                       u11311 11DC  
                                     u11151 54BA                                       u11071 3E24  
                                     u12007 4AA0                                       u11240 390A  
                                     u11160 37A6                                       u10520 362C  
                                     u10440 0A26                                       u10360 0860  
                                     u10280 0664                                       u10600 4456  
                                     u11400 139A                                       u11320 1202  
                                     u11080 3E6E                                       u11241 3906  
                                     u11161 37A2                                       u10521 3628  
                                     u10441 0A22                                       u10361 085C  
                                     u10281 0660                                       u10601 4452  
                                     u11401 1396                                       u11321 11FE  
                                     u11081 3E6A                                       u12017 4AC0  
                                     u11090 4FC4                                       u11170 37D8  
                                     u11250 5610                                       u10530 3662  
                                     u10450 0A54                                       u10370 087C  
                                     u10290 06CA                                       u10610 4472  
                                     u11410 13BA                                       u11330 1232  
                                     u11091 4FC0                                       u11171 37D4  
                                     u11251 560C                                       u10531 365E  
                                     u10451 0A50                                       u10371 0878  
                                     u10291 06C6                                       u10611 446E  
                                     u11411 13B6                                       u11331 122E  
                                     u12107 5700                                       u12027 4130  
                                     u11180 3812                                       u10540 367E  
                                     u10460 0AD8                                       u10380 088A  
                                     u10620 4484                                       u10700 0D34  
                                     u11500 1592                                       u11420 13EC  
                                     u11340 1266                                       u11260 4118  
                           ___awdiv@divisor 0008                                       u11181 380E  
                                     u12117 53C0                                       u10541 367A  
                                     u10461 0AD4                                       u10381 0886  
                                     u10621 4480                                       u10701 0D30  
                                     u11501 158E                                       u11421 13E8  
                                     u11341 1262                                       u12037 4146  
                                     u11261 4114                                       u11190 384C  
                                     u10550 3734                                       u10470 0AF2  
                                     u10390 08E2                                       u10630 44AC  
                                     u10710 0D66                                       u11510 15AA  
                                     u11430 1424                                       u11350 129E  
                                     u11270 4164                                       u11191 3848  
                                     u10551 372E                                       u10471 0AEE  
                                     u10391 08DE                                       u10631 44A8  
                                     u10711 0D62                                       u11511 15A6  
                                     u11431 1420                                       u11351 129A  
                                     u12047 418C                                       u11271 4160  
                                     u10640 5770                                       u10560 3736  
                                     u10480 0B0A                                       u10800 1054  
                                     u10720 0DA8                                       u11520 167C  
                                     u11440 1442                                       u11360 12F4  
                                     u11280 1194                                       u11600 4A26  
                                     _T1CON 000FCD                                       u10641 576C  
                                     u10481 0B06                                       u10801 1050  
                                     u10721 0DA4                                       u11521 1678  
                                     u11441 143E                                       u11361 12F0  
                                     u11281 1190                                       u12057 569C  
                                     u11601 4A22                                       u10570 374C  
                                     u10490 0B68                                       u10810 10F0  
                                     u10730 0DFE                                       u10650 0BF0  
                                     u11530 16B6                                       u11450 1476  
                                     u11370 130E                                       u11290 11AC  
                                     u11610 4A50                                       u10571 3748  
                                     u10491 0B62                                       u10811 10EC  
                                     u10731 0DFA                                       u10651 0BEC  
                                     u11531 16B2                                       u11451 1472  
                                     u11371 130A                                       u11291 11A8  
                                     u12067 3D92                                       u11611 4A4C  
                                     u10820 504A                                       u10580 375E  
                                     u10740 0E70                                       u10660 0C38  
                                     u11540 16F0                                       u11460 1494  
                                     u11380 1336                                       u10900 24EC  
                                     u11620 4A8C                                       u11700 2092  
                                     u10581 375A                                       u10741 0E6C  
                                     u10661 0C34                                       u11541 16EC  
                                     u11461 1490                                       u11381 1332  
                                     u12077 56E0                                       u10901 24E8  
                                     u11621 4A88                                       u11701 208E  
                                     u10830 5072                                       u10590 4424  
                                     u10750 0E94                                       u10670 0C72  
                                     u11470 1520                                       u11390 135C  
                                     u10910 25F2                                       u11630 4BEA  
                                     u11550 4688                                       u11710 20A8  
                                     u10591 4420                                       u10751 0E90  
                                     u10671 0C6E                                       u11471 151C  
                                     u11391 1358                                       u12087 56BE  
                                     u10911 25EE                                       u11631 4BE6  
                                     u11551 4684                                       u11711 20A4  
                                     u10840 5082                                       u10760 0F26  
                                     u10680 0D1C                                       u11480 1546  
                                     u10920 2690                                       u11640 4C08  
                                     u11560 46AA                                       u11800 22C4  
                                     u11720 214A                                       u10841 507E  
                                     u10761 0F22                                       u10681 0D16  
                                     u11481 1542                                       u12097 5750  
                                     u10921 268C                                       u11641 4C04  
                                     u11561 46A6                                       u11801 22C0  
                                     u11721 2146                                       u10850 53EC  
                                     u10770 0FD4                                       u10690 0D1E  
                                     u11490 1576                                       u10930 2750  
                                     u11650 4C46                                       u11570 46D4  
                                     u11810 22D4                                       u11730 21D4  
                                     u10827 5040                                       u10851 53E8  
                                     u10771 0FD0                                       u11491 1572  
                                     u11651 4C42                                       u11571 46D0  
                                     u11811 22D0                                       u11731 21D0  
                                     u10780 103C                                       u10940 276C  
                                     u10860 2430                                       u11580 471E  
                                     u11820 233E                                       u11740 21E4  
                                     u11660 1FFC                                       u10837 5068  
                                     u10781 1036                                       u10941 2768  
                                     u11581 471A                                       u11821 233A  
                                     u11741 21E0                                       u11661 1FF8  
                                     u10790 103E                                       u10950 4EF2  
                                     u10870 245A                                       u11590 4A04  
                                     u11830 2350                                       u11750 2236  
                                     u11670 2028                                       u10951 4EEE  
                                     u10935 2746                                       u10871 2456  
                                     u11591 4A00                                       u11831 234C  
                                     u11751 2232                                       u11671 2024  
                                     u10960 4D5E                                       u10880 248E  
                                     u11760 2246                                       u11680 203A  
                                     _LATB4 007C54                                       u10961 4D5A  
                                     u10865 2426                                       u11761 2242  
                                     u11681 2036                                       _LATB5 007C55  
                                     u10970 4D7C                                       u10890 24AA  
                                     u11770 2258                                       u11690 2050  
                                     _LATD2 007C62                                       _LATB6 007C56  
                                     u10971 4D78                                       u10891 24A6  
                                     u11771 2254                                       u11691 204C  
                                     _LATD3 007C63                                       _LATB7 007C57  
                                     u10980 4D98                                       u11780 2278  
                                     u10981 4D94                                       u10885 2484  
                                     u11781 2274                                       u10990 3DAA  
                                     u11790 2288                                       u10991 3DA6  
                                     u11791 2284                                       u11960 4B8E  
                                     u11961 4B8A                                       u11970 4B9E  
                                     u11971 4B9A                                       u11987 231A  
                                     u11997 23C2                             __end_of___lwdiv 4DB8  
                                     i2l321 514E                                       i2l326 5190  
                                     i2l318 5140                                       i2l282 51DA  
                                     i2l284 51E2                                main@iniciado 01E8  
                           ___awdiv@counter 000A                                       _RCREG 000FAE  
                              vfpfcnvrt@fmt 00C3                  ??_recorrerCaminoEncontrado 0054  
                                     _TMR1H 000FCF                                       _TMR1L 000FCE  
                                     _SPBRG 000FAF            decidirDireccion@posicionInvCruce 01D6  
                             __CFG_USBDIV$1 000000                                       _TXREG 000FAD  
                             __CFG_PWRT$OFF 000000                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                       ___lmul@multiplicand 000A                               __CFG_WRT3$OFF 000000  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                          _combinarArreglos 4F64                              __CFG_EBTR3$OFF 000000  
                 hayCruce@investigandoCruce 0042                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                            __CFG_EBTRB$OFF 000000                          __size_of_UART_init 0070  
                                     _flags 0055                                       _boton 0008  
                                     _fputc 44D0                                       _fputs 5448  
                           __end_of_isdigit 55B4                                       _pausa 01E9  
                                     _mover 4A8E                                       _mouse 0057  
                               ?_UART_write 0001                                       atoi@n 001A  
                                     pad@fp 0016                                       atoi@s 000D  
                                     _width 0132                                       ctoa@c 0023  
                                     _putch 5790                                       _toint 7DEB  
                                     ctoa@w 0024                                       dtoa@d 0023  
                                     dtoa@i 0043                                       dtoa@n 003B  
                                     dtoa@p 0035                                       dtoa@s 0039  
                                     dtoa@w 0037                           ??_regresarAlCruce 0054  
                           __end_of_isspace 528A                             __end_of_isupper 5544  
                                     tablat 000FF5                             __end_of_pwmDuty 3440  
                                     ttemp5 005B                                       ttemp6 005E  
                                     ttemp7 0062                                       status 000FD8  
                                     wtemp8 005B                             __end_of_sprintf 5238  
                            ?___fpclassifyf 0006                             __end_of_tolower 5026  
                           __end_of_strncmp 44D0                              __CFG_ICPRT$OFF 000000  
                            ??_leerSensores 0050                             __initialization 4EFC  
                          ??_dameLecturaAdc 0008                                __end_of_atoi 3784  
                              __end_of_ctoa 513A                                __end_of_main 4BBE  
                              __end_of_dtoa 2E1C                             ??_configurarAdc 0006  
                       dameDistancia@conteo 0026                      dameDistancia@distancia 0022  
          limpiarMovimientos@numMovimientos 0008                                      ??_atoi 000F  
                                    ??_ctoa 0024                                      ??_main 0055  
                                    ??_dtoa 002B                 combinarArreglos@movimientos 0006  
       comportamientoBasico@caminosRecorrer 01C3                               __activetblptr 000002  
              caminoCorrecto@numMovimientos 0016                                      PID@dif 0096  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                                    ?_boton 0001                                      _CCP1M2 007DEA  
                                    _CCP1M3 007DEB                                      _CCP2M2 007DD2  
                                    _CCP2M3 007DD3                                      ?_fputc 0006  
                                    ?_fputs 000F                                      _ADRESH 000FC4  
                                    _ADRESL 000FC3                                      _CCPR1L 000FBE  
                                    _CCPR2L 000FBB                            ___awdiv@dividend 0006  
                                    ?_mover 0001                                      ?_putch 0001  
                                    _INT0IF 007F91                                      i2l7321 513C  
                                    i2l7323 515C                                      i2l7327 516E  
                                    i2l7521 51A2                __end_of_regresarPuntoPartida 4A8E  
                                    i2l7531 51DC                                      i2l7523 51A8  
                                    i2l7533 51E0                                      i2l7525 51BA  
                                    i2l7527 51BE                                      i2l7519 5194  
                                    i2l7529 51C0                     _mostrarDireccionElegida 4C48  
                                    _TMR1IF 007CF0                                      _TMR1ON 007E68  
                                    _TMR2ON 007E52                                      _TRISB0 007C98  
                                    _TRISB1 007C99                                      _TRISB2 007C9A  
                                    _TRISC1 007CA1                                      _TRISB3 007C9B  
                                    _TRISC2 007CA2                                      _TRISB4 007C9C  
                                    _TRISB5 007C9D                                      _TRISB6 007C9E  
                                    _TRISD3 007CAB                                      _TRISB7 007C9F  
                                    _TRISC6 007CA6                                      _TRISC7 007CA7  
                          __end_of___xxtofl 35F4                            __end_of_hayCruce 3914  
                            __CFG_XINST$OFF 000000                    __end_of_seLlegoAlDestino 5618  
        comportamientoBasico@numMovimientos 01C8                                vfprintf@cfmt 00E5  
                 dameDistancia@numeroSensor 0021                                      ___flge 41F8  
                                    ___fleq 493E                                      ___lmul 4E28  
                                 ??___aldiv 001A                                   ??___aodiv 0016  
                                 ??___fladd 003C                                   ??___aomod 0016  
                                    ___wmul 5664                           __end_of_UART_init 4E28  
                                 ??___fldiv 004C                                   ??___awdiv 000A  
                                 ??___flneg 000A          comportamientoBasico@espejearCarroY 0139  
                                 ??___awmod 000A                                   ??___flmul 0023  
                                 ??___flsub 004C                                   ??___fltol 0076  
                                    _efgtoa 0012                                   ??___lwdiv 000A  
                moverCarrito@espejearCarroY 0054                                      _buffer 0191  
                       _forzarGiroIzquierda 56CE                                      _floorf 306E  
                       __size_of_UART_write 0016                                ?_UART_printf 0007  
                                    clear_0 4F24                                      clear_1 4F36  
                                    clear_2 4F42                            ___awdiv@quotient 000C  
                           ___awmod@divisor 0008                             ___awmod@counter 000A  
                                    pad@buf 0018                                      ctoa@fp 0021  
                                    _roundf 23F0                                      dtoa@fp 0021  
                                    _strcpy 5084                 ??_visualizarPasosRealizados 00FD  
                                    _strlen 55B4                   recorrerCaminoEncontrado@i 009E  
                         _oldSensorEnfrente 0118                                      fputc@c 0006  
                                    fputs@c 0013                                      fputs@i 0014  
                                    fputs@s 000F                                   ??_isdigit 0008  
                     _SENSOR_PRIORIDAD_BAJA 01EA                       _SENSOR_PRIORIDAD_ALTA 01EC  
                           ___fpclassifyf@e 000E     mostrarDireccionElegida@direccionElegida 000B  
                           ___fpclassifyf@u 0010                             ___fpclassifyf@x 0006  
                              __mediumconst 7DEA                                   ??_isspace 0008  
                   ?_forzarEspejeoIzquierda 0001                                      tblptrh 000FF7  
                                 ??_isupper 0008                                      tblptrl 000FF6  
                                    tblptru 000FF8                      __size_of_forzarEspejeo 0040  
                                 ??_pwmDuty 007F                                      putch@c 0001  
                          __end_of_vfprintf 4EFC                            _posicionDestinoX 013E  
                          _posicionDestinoY 013D                                   ??_sprintf 0054  
                                 ??_tolower 000E             regresarPuntoPartida@movimientos 009A  
                                 ??_strncmp 000C                        ?_forzarGiroIzquierda 0001  
                         _forzarAvanceRecto 568A                      __size_of_forzarReversa 0022  
                                ___flge@ff1 0034                           _velocidadEstandar 5618  
                                ___flge@ff2 0038                             ??___fpclassifyf 000A  
                              ___xxtofl@arg 0017                                ___xxtofl@exp 0016  
                              ___xxtofl@val 000D                                  ___fleq@ff1 0006  
                                ___fleq@ff2 000A                                  __accesstop 0060  
                   __end_of__initialization 4F56                          ?_forzarAvanceRecto 0001  
                           __CFG_PBADEN$OFF 000000                                  ___flneg@f1 0006  
                           __CFG_FOSC$XT_XT 000000                          ?_velocidadEstandar 0001  
   visualizarPasosRealizados@numMovimientos 00FB                  __end_of_finalizarRecorrido 5782  
                             ___rparam_used 000001               __size_of_forzarEspejeoDerecha 001A  
                                ___fltol@f1 0072                         ??_forzarAvanceRecto 0006  
                    __size_of_dameDistancia 0162                              __pcstackCOMRAM 0001  
                       ??_velocidadEstandar 0054                                __pidataBANK1 578C  
                           _sensorIzquierda 0128         combinarArreglos@numMovimientosFinal 000C  
                             __end_of_boton 51E6                               __end_of_fputc 459A  
                             __end_of_fputs 548C                               __end_of_mover 4B28  
                             __end_of_putch 5792                               __end_of_toint 7DEF  
                         _forzarGiroDerecha 56EE            __end_of_recorrerCaminoEncontrado 4C48  
                        ?_forzarGiroDerecha 0001              __end_of_forzarEspejeoIzquierda 5728  
 comportamientoBasico@numMovimientosTotales 01C6          regresarPuntoPartida@numMovimientos 009C  
 comportamientoBasico@movimientosRealizados 0200                        __end_of_leerSensores 3C18  
                        __size_of_configPwm 0050                   __end_of_forzarAvanceRecto 56AC  
                                 PID@difAnt 0136                   __end_of_velocidadEstandar 563E  
                                   ??_boton 0004                   ??_mostrarDireccionElegida 0009  
                     ??_forzarGiroIzquierda 0006                                     ??_fputc 000A  
                                   ??_fputs 0013                         ??_forzarGiroDerecha 0006  
                                   ??_mover 0008                                     ??_putch 0006  
                                __pbssBANK0 00FF                                  __pbssBANK1 0100  
                                __pbssBANK2 0200                moverCarrito@avanceRectoLargo 008A  
                             _paredEnfrente 013C               __size_of_comportamientoBasico 0406  
                 _visualizarPasosRealizados 4892                            ??_caminoCorrecto 001B  
                         ?_decidirDireccion 01D2                       PID@velocidadIzquierda 008E  
                                _efgtoa$940 008F                                  _efgtoa$950 0097  
                                _efgtoa$944 0091                                  _efgtoa$939 008D  
                                _efgtoa$948 0093                                  _efgtoa$949 0095  
                  __end_of_combinarArreglos 4FC6                               _forzarEspejeo 548C  
                        ??_decidirDireccion 00FB                                     ?___flge 0034  
                                   ?___fleq 0006                                     ?___lmul 0006  
                                   ?___wmul 0006                   __end_of_forzarGiroDerecha 570E  
                                   ?_efgtoa 007D                               _forzarReversa 56AC  
                                   _CCP1CON 000FBD                                     _CCP2CON 000FBA  
                                   ?_floorf 0050               limpiarMovimientos@movimientos 0006  
                            ___lmul@product 000E      decidirDireccion@cambioOrientacionCarro 01DC  
                                _antiRebote 513A                        _regresarPuntoPartida 49E8  
                                   ?_roundf 004C                                     ?_strcpy 0006  
                                   ?_strlen 0006                                     _T2CKPS0 007E50  
                                   _T2CKPS1 007E51                             _regresarAlCruce 465E  
                                   _PID$760 0090                                     _PID$762 0094  
                                   i2l11179 5182                                   ?___xxtofl 000D  
                __end_of_limpiarMovimientos 532A                               _dameDistancia 3D7C  
                        __size_of_vfpfcnvrt 05A8                                   ?_hayCruce 0040  
                              ??_UART_write 0006                               ?_moverCarrito 0088  
                           __CFG_VREGEN$OFF 000000   comportamientoBasico@contCaminosRecorridos 01CD  
                                   __Hparam 0000                              ?_forzarEspejeo 0001  
                                   __Lparam 0000                           __end_of_configPwm 52DA  
           __end_of_mostrarDireccionElegida 4CCA                                     ___aldiv 3EDE  
                           __size_of___flge 0104                              ?_forzarReversa 0001  
                           __size_of___fleq 00AA                                     ___aodiv 3914  
                                   ___fladd 1700                                     ___aomod 3C18  
                                   ___fldiv 27A2                                     ___awdiv 459A  
                                   ___flneg 5544                             __size_of___lmul 006A  
                                   ___awmod 47E2                                     ___flmul 1BC0  
                                   ___flsub 5376                                     ___fltol 3FEA  
                           __size_of___wmul 0026                                     ___lwdiv 4D44  
                                 ?_vfprintf 00DF                             __size_of_efgtoa 0BBA  
       recorrerCaminoEncontrado@movimientos 009A                             __CFG_STVREN$OFF 000000  
                           __size_of_floorf 0216                                     __pcinit 4EFC  
                     ?_regresarPuntoPartida 009A                                     __ramtop 0800  
                        __end_of_UART_write 5772                       __end_of_velocidadBaja 5664  
                                   __ptext0 4B28                                     __ptext1 4892  
                                   __ptext2 532A                                     __ptext3 5782  
                                   __ptext4 528A                                     __ptext5 1FEA  
                                   __ptext6 49E8                                     __ptext7 465E  
                                   __ptext8 4BBE                                     __ptext9 4A8E  
                           __size_of_roundf 03B2                                __size_of_PID 0252  
                           __size_of_strcpy 005C                             __size_of_strlen 0036  
                      __size_of_UART_printf 005E                                __size_of_abs 0040  
                              __size_of_pad 00C2                                __size_of_map 007A  
                                   _isdigit 557C                                  ??___xxtofl 0011  
                          ___awmod@dividend 0006                              ?_dameDistancia 001B  
                          ___aldiv@dividend 0012                                     _isspace 5238  
                                   _isupper 550C                                     efgtoa@c 0083  
                                   efgtoa@d 00A1                                     efgtoa@e 00B9  
                                   efgtoa@f 007F                                     efgtoa@g 00B5  
                                   efgtoa@h 00AB                                     efgtoa@i 00B3  
                                   efgtoa@l 00AF                                     efgtoa@m 009D  
                                   efgtoa@n 00BB                                     efgtoa@p 00A5  
                                   efgtoa@t 0099                                     efgtoa@u 00BD  
                                   efgtoa@w 00A8                  __size_of_forzarAvanceRecto 0022  
                                ??_hayCruce 0043                                     _pwmDuty 3284  
                                   atoi@neg 0013                  __size_of_velocidadEstandar 0026  
                                   _sprintf 51E6                                     _tolower 4FC6  
                                   _strncmp 43FA                              __pintcode_body 5192  
                      end_of_initialization 4F56                              ??_moverCarrito 008C  
                                   floorf@e 0077                                     floorf@m 0073  
                                   floorf@u 0079                                     floorf@x 0050  
          decidirDireccion@direccionElegida 0054                                     fputc@fp 0008  
                             __Lmediumconst 7DEA                                     int_func 5192  
                                   fputs@fp 0011                                   i2u1212_47 51CA  
         __size_of_recorrerCaminoEncontrado 008A                                   i2u1213_47 5162  
                    _SENSOR_PRIORIDAD_MEDIA 01EB                   ?_recorrerCaminoEncontrado 009A  
                         ?_seLlegoAlDestino 0001                           __end_of_vfpfcnvrt 1174  
                                efgtoa@mode 00AA                                  efgtoa@sign 00A3  
                                 _RCSTAbits 000FAB                            ___aldiv@quotient 001C  
          decidirDireccion@avanceRectoLargo 01E2                                     postdec1 000FE5  
                                   postdec2 000FDD                     __end_of_regresarAlCruce 4720  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                     __size_of_forzarParoAuto 001A  
                                   roundf@e 0064                                     roundf@u 006A  
                                   roundf@x 004C                                     roundf@y 006E  
                __size_of_forzarGiroDerecha 0020                          ??_seLlegoAlDestino 000B  
                                ??_vfprintf 0054                       __end_of_configurarAdc 578C  
                                   strcpy@d 000E                                     strlen@a 0008  
                                   strcpy@s 000C                                     strlen@s 0006  
                               ?_antiRebote 0001                                   _PORTBbits 000F81  
                                 _UART_init 4DB8                       __size_of_leerSensores 017C  
                               ___fladd@grs 0043                                 pwmDuty@duty 0084  
    recorrerCaminoEncontrado@numMovimientos 009C                               ___xxtofl@sign 0015  
                                 _TRISDbits 000F95                                 ___fldiv@grs 0067  
                        _oldSensorIzquierda 011C                                 ___fldiv@rem 0060  
      comportamientoBasico@posicionInvCruce 01CE                                  map@out_max 0030  
                                map@out_min 002C                                 ___flmul@grs 0029  
                            _UART_init$1841 0028                                   _TXSTAbits 000FAC  
                           ??_forzarEspejeo 0054                             ??_forzarReversa 0006  
             regresarAlCruce@numMovimientos 009C                                _leerSensores 3A9C  
        __size_of_visualizarPasosRealizados 00AC                              __end_of___flge 42FC  
                            __end_of___fleq 49E8                      ??_regresarPuntoPartida 0054  
                            __end_of___lmul 4E92                                 vfpfcnvrt@ap 00C5  
                               vfpfcnvrt@ct 00DB                                 vfpfcnvrt@fp 00C1  
                               vfpfcnvrt@ll 00CB                              __end_of___wmul 568A  
                     regresarPuntoPartida@i 009E                              __end_of_efgtoa 0BCC  
                        _finalizarRecorrido 5772                              __end_of_floorf 3284  
                                ?_UART_init 0020                                  floorf@F524 0104  
              __end_of_forzarEspejeoDerecha 5742                             ??_dameDistancia 001F  
     comportamientoBasico@investigandoCruce 01CF                              __end_of_roundf 27A2  
                   __size_of_dameLecturaAdc 0046                              __end_of_strcpy 50E0  
                            __end_of_strlen 55EA                         start_initialization 4EFC  
                       PID@velocidadDerecha 0092                                 __end_of_PID 306E  
                       ?_finalizarRecorrido 0001                                 __end_of_abs 550C  
                               __end_of_pad 47E2                                 __end_of_map 4D44  
                          regresarAlCruce@i 009E                         __size_of_antiRebote 0058  
                     __end_of___fpclassifyf 43FA                         pwmDuty@cicloTrabajo 007C  
                      ??_finalizarRecorrido 0054                                 vfprintf@fmt 00E1  
                                  ??___flge 003C                                    ??___fleq 000E  
                         ?_combinarArreglos 0006                                    ??___lmul 000E  
                                  ??___wmul 000A                            ?_regresarAlCruce 009A  
                          _oldSensorDerecha 0120                  comportamientoBasico@mapear 01D1  
                            _sensorEnfrente 0124                                    ??_efgtoa 0084  
                               __pdataBANK1 01E9                          ??_combinarArreglos 000E  
                                  ??_floorf 006D                            __CFG_LPT1OSC$OFF 000000  
              __end_of_comportamientoBasico 23F0           __end_of_visualizarPasosRealizados 493E  
                      __end_of_moverCarrito 41F8                                    ??_roundf 0050  
                                  ??_strcpy 000A                                    ??_strlen 0008  
                                 ___fladd@a 0038                                   ___fladd@b 0034  
                 __size_of_decidirDireccion 058C                 __end_of_forzarGiroIzquierda 56EE  
                                 ___fldiv@a 0048                                   ___fldiv@b 0044  
                               __pbssBIGRAM 02C8                                _llegoDestino 00FF  
                                 ___flmul@a 001F                                   ___flmul@b 001B  
                               __pbssCOMRAM 0055                                   ___flsub@a 0048  
                                 ___flsub@b 0044            comportamientoBasico@caminoActual 01CC  
                             __pcstackBANK0 0060                               __pcstackBANK1 01D2  
                          ___aodiv@dividend 0006                           __size_of___xxtofl 01B4  
                   hayCruce@caminosRecorrer 0040                           __size_of_hayCruce 0190  
           decidirDireccion@caminosRecorrer 01D2                                _paredDerecha 013B  
                        _limpiarMovimientos 52DA                           UART_printf@cadena 0007  
                                  PID@error 0098                                   _atoi$1443 0015  
                                 _atoi$1444 0019                                   _atoi$1445 0017  
                 _DISTANCIA_PRIORIDAD_MEDIA 0110                   caminoCorrecto@caminoFinal 0014  
                          ___lwdiv@dividend 0006                                   __pintcode 0008  
                       ?_limpiarMovimientos 0006                               __pmediumconst 7DEA  
                            _forzarParoAuto 5742                                    ?___aldiv 0012  
                                  ?___aodiv 0006                                    ?___fladd 0034  
                                  ?___aomod 0006                                    ?___fldiv 0044  
                                  ?___awdiv 0006                            ___aodiv@quotient 0018  
                                  ?___flneg 0006                                    ?___awmod 0006  
                                  ?___flmul 001B                                    ?___flsub 0044  
                                  ?___fltol 0072                                    ?___lwdiv 0006  
                                 _configPwm 528A                              _paredIzquierda 013A  
                               ??_UART_init 0024                           __size_of_vfprintf 006A  
                                  ?_isdigit 0006                    ?_mostrarDireccionElegida 0001  
                                  ?_isspace 0006                                    ?_isupper 0006  
comportamientoBasico@cambioOrientacionCarro 01CB           caminoCorrecto@numMovimientosFinal 0018  
                                  ?_pwmDuty 007C                        ??_limpiarMovimientos 000A  
                          ___lwdiv@quotient 000B                              __size_of_boton 51DE  
                                  ?_sprintf 00E7                                    ?_tolower 000C  
                            __size_of_fputc 00CA                              __size_of_fputs 0044  
                                  _PID$1842 008A                                    ?_strncmp 0006  
                            __size_of_mover 009A       decidirDireccion@contCaminosRecorridos 01D8  
                            __size_of_putch 0002                             ___aldiv@divisor 0016  
                         combinarArreglos@i 0010                             ___aldiv@counter 001A  
                            ___wmul@product 000A           decidirDireccion@investigandoCruce 01D4  
              seLlegoAlDestino@llegoDestino 000B                        _forzarEspejeoDerecha 5728  
                    __end_of_forzarParoAuto 575C                                    i2u766_40 514E  
                                  i2u766_41 514A                                    i2u767_40 515C  
                                  i2u767_41 5158                                    i2u786_40 51A2  
                                  i2u786_41 519E                                    i2u787_40 51BA  
                                  i2u787_41 51B6                            __CFG_WDTPS$32768 000000  
                  ??_forzarEspejeoIzquierda 0054                               ??_UART_printf 0009  
                              ??_antiRebote 0001                                   _vfpfcnvrt 0BCC  
                                ?_configPwm 0001                                   map@in_max 0028  
                                 map@in_min 0024                      decidirDireccion@mapear 01DE  
                   __size_of_caminoCorrecto 0046                                  _ADCON0bits 000FC2  
                         ___wmul@multiplier 0006                            configPwm@channel 0008  
                            _dameLecturaAdc 53BC                              UART_write@dato 0006  
                 __size_of_seLlegoAlDestino 002E                                _isspace$1474 000C  
                                vfpfcnvrt@c 00DE                                  vfpfcnvrt@f 00D7  
                         ___lmul@multiplier 0006                                 _INTCON2bits 000FF1  
                                 copy_data0 4F10                        _comportamientoBasico 1FEA  
                     ?_forzarEspejeoDerecha 0001                      __size_of_velocidadBaja 0026  
                        __end_of_antiRebote 5192                                  roundf@F525 0100  
                                  __Hrparam 0000                             ?_forzarParoAuto 0001  
                             UART_init@BAUD 0020                               _sensorDerecha 012C  
                                vfprintf@ap 00E3                                    __Lrparam 0000  
                                vfprintf@fp 00DF                       __size_of_moverCarrito 0106  
                            _posicionCarroX 0140                              _posicionCarroY 013F  
                          __size_of___aldiv 010C                            __size_of___aodiv 0188  
                          __size_of___fladd 04C0                            __size_of___aomod 0164  
                          __size_of___fldiv 039C                            __size_of___awdiv 00C4  
                          __size_of___flneg 0038                            __size_of___awmod 00B0  
                          __size_of___flmul 042A                            __size_of___flsub 0046  
                          __size_of___fltol 0108                                  ?_vfpfcnvrt 00C1  
                          __size_of___lwdiv 0074                      __end_of_dameLecturaAdc 5402  
                           ___aodiv@divisor 000E                             ___aodiv@counter 0016  
                        ___fpclassifyf@F463 0108                         hayCruce@contCaminos 0043  
               combinarArreglos@caminoFinal 0008                            _decidirDireccion 1174  
                                sprintf@fmt 00E9                                    ___xxtofl 3440  
                       __end_of_UART_printf 5084                            __size_of_isdigit 0038  
                                  _dtoa$916 0033                             ___lwdiv@divisor 0008  
                                  _hayCruce 3784                            __size_of_isspace 0052  
                           ___lwdiv@counter 000A                                    __ptext10 2E1C  
                                  __ptext11 23F0                                    __ptext20 56CE  
                                  __ptext12 40F2                                    __ptext21 5728  
                                  __ptext13 568A                                    __ptext30 4E28  
                                  __ptext22 5618                                    __ptext14 3A9C  
                                  __ptext31 3440                                    __ptext23 56AC  
                                  __ptext15 3D7C                                    __ptext40 306E  
                                  __ptext32 51E6                                    __ptext24 5742  
                                  __ptext16 4D44                                    __ptext41 42FC  
                                  __ptext33 4E92                                    __ptext25 56EE  
                                  __ptext17 5772                                    __ptext50 459A  
                                  __ptext42 3FEA                                    __ptext34 0BCC  
                                  __ptext26 1174                                    __ptext18 548C  
                                  __ptext51 2B3E                                    __ptext43 5376  
                                  __ptext35 43FA                                    __ptext27 563E  
                                  __ptext19 570E                                    __ptext60 5790  
                                  __ptext52 54CC                                    __ptext44 1700  
                                  __ptext36 0012                                    __ptext28 3284  
                                  __ptext61 35F4                                    __ptext53 3C18  
                                  __ptext45 5544                                    __ptext37 4FC6  
                                  __ptext29 4CCA                                    __ptext70 3784  
                                  __ptext62 5238                                    __ptext54 3914  
                                  __ptext46 1BC0                                    __ptext38 550C  
                                  __ptext71 41F8                                    __ptext63 557C  
                                  __ptext55 50E0                                    __ptext47 493E  
                                  __ptext39 5084                                    __ptext72 5402  
                                  __ptext64 5664                                    __ptext56 4720  
                                  __ptext48 27A2                                    __ptext73 52DA  
                                  __ptext65 55EA                                    __ptext57 55B4  
                                  __ptext49 47E2                                    __ptext74 4F64  
                                  __ptext66 53BC                                    __ptext58 5448  
                                  __ptext75 4DB8                                    __ptext67 4C48  
                                  __ptext59 44D0                                    __ptext76 3EDE  
                                  __ptext68 5026                                    __ptext69 575C  
                                  __ptext78 513A                            __size_of_isupper 0038  
                          __size_of_pwmDuty 01BC     __end_of_inicializarComportamientoBasico 5376  
  __size_of_inicializarComportamientoBasico 004C           ??_inicializarComportamientoBasico 0054  
          ?_inicializarComportamientoBasico 0001             _inicializarComportamientoBasico 532A  
                          __size_of_sprintf 0052                            __size_of_tolower 0060  
                             antiRebote@pin 0003                    _recorrerCaminoEncontrado 4BBE  
                                strcpy@dest 0006                            __size_of_strncmp 00D6  
            combinarArreglos@numMovimientos 000A                       ?_comportamientoBasico 0001  
        comportamientoBasico@cruceDetectado 01D0                                _moverCarrito 40F2  
                    __size_of_configurarAdc 000A                               __size_of_atoi 0190  
                             __size_of_ctoa 005A                               __size_of_main 0096  
                             __size_of_dtoa 02DE                       __end_of_forzarEspejeo 54CC  
                                  efgtoa@fp 007D                                    efgtoa@ne 009F  
                                  efgtoa@pp 009B                                    efgtoa@ou 0089  
      comportamientoBasico@direccionElegida 00FE                       __end_of_forzarReversa 56CE  
                                  int$flags 005A                     dameLecturaAdc@canalLeer 000A  
                                  _vfprintf 4E92             __size_of_forzarEspejeoIzquierda 001A  
                               ??_configPwm 0006                             ?_dameLecturaAdc 0006  
             __size_of_regresarPuntoPartida 00A6                            ___aomod@dividend 0006  
                     __CFG_CPUDIV$OSC1_PLL2 000000                               _velocidadBaja 563E  
      comportamientoBasico@avanceRectoLargo 01CA                decidirDireccion@caminoActual 01DA  
            decidirDireccion@cruceDetectado 01E0                                  _INTCONbits 000FF2  
                     __end_of_dameDistancia 3EDE                   __size_of_combinarArreglos 0062  
                       limpiarMovimientos@i 000C                                    isdigit@c 0006  
                                  intlevel2 0000                                   sprintf@ap 00F3  
                caminoCorrecto@caminoActual 001A                      ??_forzarEspejeoDerecha 0054  
                                  isspace@c 0006                                   strcpy@src 0008  
                                  isupper@c 0006                                   strncmp@_l 0006  
                                 strncmp@_r 0008                 __size_of_finalizarRecorrido 0010  
                               efgtoa@nmode 00A7                             ___aomod@divisor 000E  
                               ??_vfpfcnvrt 00C7                             ___aomod@counter 0016  
                             _vfpfcnvrt$970 00D5                               _vfpfcnvrt$964 00D3  
                               _UART_printf 5026                               _configurarAdc 5782  
                            _caminoCorrecto 5402                              ?_velocidadBaja 0001  
                ?_visualizarPasosRealizados 00FB                              pwmDuty@channel 007E  
                                  sprintf@f 00F5                                    tolower@c 000C  
                                  sprintf@s 00E7                      __size_of___fpclassifyf 00FE  
                  __size_of_regresarAlCruce 00C2                            _seLlegoAlDestino 55EA  
                                  strncmp@l 000D                                    strncmp@n 000A  
                                  strncmp@r 000F          comportamientoBasico@carroEspejeado 0059  
                              ___aldiv@sign 001B                  moverCarrito@carroEspejeado 0088  
                             ___fladd@signs 0040                      ??_comportamientoBasico 01E4  
                                _UART_write 575C                      _forzarEspejeoIzquierda 570E  
              __size_of_forzarGiroIzquierda 0020                                ___aodiv@sign 0017  
                              ___fladd@aexp 0041                                ___fladd@bexp 0042  
          __size_of_mostrarDireccionElegida 0082                  regresarAlCruce@movimientos 009A  
                              ___aomod@sign 0017                   caminoCorrecto@movimientos 0012  
                               _roundf$1843 0066                                 _roundf$1844 0060  
